<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\gtk\ScintillaGTK.cxx" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="line" pos:line="2" pos:column="1">// ScintillaGTK.cxx - GTK+ specific subclass of ScintillaBase</comment>
<comment type="line" pos:line="3" pos:column="1">// Copyright 1998-2004 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="4" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:include pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">include</cpp:directive> <cpp:file pos:line="6" pos:column="10">&lt;new&gt;</cpp:file></cpp:include>
<cpp:include pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">include</cpp:directive> <cpp:file pos:line="7" pos:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include</cpp:directive> <cpp:file pos:line="8" pos:column="10">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">include</cpp:directive> <cpp:file pos:line="9" pos:column="10">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include</cpp:directive> <cpp:file pos:line="10" pos:column="10">&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include</cpp:directive> <cpp:file pos:line="11" pos:column="10">&lt;ctype.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include</cpp:directive> <cpp:file pos:line="12" pos:column="10">&lt;time.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include</cpp:directive> <cpp:file pos:line="15" pos:column="10">&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include</cpp:directive> <cpp:file pos:line="17" pos:column="10">&lt;gtk/gtk.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">include</cpp:directive> <cpp:file pos:line="18" pos:column="10">&lt;gdk/gdkkeysyms.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="20" pos:column="10">"Platform.h"</lit:literal></cpp:file></cpp:include>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if</cpp:directive> <expr><name pos:line="22" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
<cpp:include pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">include</cpp:directive> <cpp:file pos:line="23" pos:column="10">&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="26" pos:column="10">"ILexer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="27" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="28" pos:column="10">"ScintillaWidget.h"</lit:literal></cpp:file></cpp:include>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef</cpp:directive> <name pos:line="29" pos:column="8">SCI_LEXER</name></cpp:ifdef>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"SciLexer.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"SVector.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"SplitVector.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"Partitioning.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"RunStyles.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="36" pos:column="10">"ContractionState.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"CellBuffer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"CallTip.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"KeyMap.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="40" pos:column="10">"Indicator.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"XPM.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="42" pos:column="10">"LineMarker.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="43" pos:column="10">"Style.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="44" pos:column="10">"AutoComplete.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="45" pos:column="10">"ViewStyle.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="46" pos:column="10">"Decoration.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="47" pos:column="10">"CharClassify.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="48" pos:column="10">"Document.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="49" pos:column="10">"Selection.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="50" pos:column="10">"PositionCache.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="51" pos:column="10">"Editor.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="52" pos:column="10">"ScintillaBase.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="53" pos:column="10">"UniConversion.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="55" pos:column="10">"scintilla-marshal.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef</cpp:directive> <name pos:line="57" pos:column="8">SCI_LEXER</name></cpp:ifdef>
<cpp:include pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">include</cpp:directive> <cpp:file pos:line="58" pos:column="10">&lt;glib.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">include</cpp:directive> <cpp:file pos:line="59" pos:column="10">&lt;gmodule.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="60" pos:column="10">"LexerModule.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="61" pos:column="10">"ExternalLexer.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="64" pos:column="10">"Converter.h"</lit:literal></cpp:file></cpp:include>

<cpp:if pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">if</cpp:directive> <expr><call><name pos:line="66" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="66" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="66" pos:column="23">2</lit:literal><op:operator pos:line="66" pos:column="24">,</op:operator><lit:literal type="number" pos:line="66" pos:column="25">20</lit:literal><op:operator pos:line="66" pos:column="27">,</op:operator><lit:literal type="number" pos:line="66" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="67" pos:column="9">IS_WIDGET_REALIZED</name><parameter_list pos:line="67" pos:column="27">(<param><type><name pos:line="67" pos:column="28">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="67" pos:column="31">(gtk_widget_get_realized(GTK_WIDGET(w)))</cpp:value></cpp:define>
<cpp:define pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="68" pos:column="9">IS_WIDGET_MAPPED</name><parameter_list pos:line="68" pos:column="25">(<param><type><name pos:line="68" pos:column="26">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="68" pos:column="29">(gtk_widget_get_mapped(GTK_WIDGET(w)))</cpp:value></cpp:define>
<cpp:define pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="69" pos:column="9">IS_WIDGET_VISIBLE</name><parameter_list pos:line="69" pos:column="26">(<param><type><name pos:line="69" pos:column="27">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="69" pos:column="30">(gtk_widget_get_visible(GTK_WIDGET(w)))</cpp:value></cpp:define>
<cpp:else pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="71" pos:column="9">IS_WIDGET_REALIZED</name><parameter_list pos:line="71" pos:column="27">(<param><type><name pos:line="71" pos:column="28">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="71" pos:column="31">(GTK_WIDGET_REALIZED(w))</cpp:value></cpp:define>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">IS_WIDGET_MAPPED</name><parameter_list pos:line="72" pos:column="25">(<param><type><name pos:line="72" pos:column="26">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="72" pos:column="29">(GTK_WIDGET_MAPPED(w))</cpp:value></cpp:define>
<cpp:define pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="73" pos:column="9">IS_WIDGET_VISIBLE</name><parameter_list pos:line="73" pos:column="26">(<param><type><name pos:line="73" pos:column="27">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="73" pos:column="30">(GTK_WIDGET_VISIBLE(w))</cpp:value></cpp:define>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if</cpp:directive> <expr><call><name pos:line="76" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="76" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="76" pos:column="23">2</lit:literal><op:operator pos:line="76" pos:column="24">,</op:operator><lit:literal type="number" pos:line="76" pos:column="25">22</lit:literal><op:operator pos:line="76" pos:column="27">,</op:operator><lit:literal type="number" pos:line="76" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">USE_CAIRO</name></cpp:macro> <cpp:value pos:line="77" pos:column="19">1</cpp:value></cpp:define>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><specifier pos:line="80" pos:column="1">static</specifier> <name pos:line="80" pos:column="8">GdkWindow</name> <type:modifier pos:line="80" pos:column="18">*</type:modifier></type><name pos:line="80" pos:column="19">WindowFromWidget</name><parameter_list pos:line="80" pos:column="35">(<param><decl><type><name pos:line="80" pos:column="36">GtkWidget</name> <type:modifier pos:line="80" pos:column="46">*</type:modifier></type><name pos:line="80" pos:column="47">w</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="50">{
<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if</cpp:directive> <expr><call><name pos:line="81" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="81" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="81" pos:column="23">3</lit:literal><op:operator pos:line="81" pos:column="24">,</op:operator><lit:literal type="number" pos:line="81" pos:column="25">0</lit:literal><op:operator pos:line="81" pos:column="26">,</op:operator><lit:literal type="number" pos:line="81" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<return pos:line="82" pos:column="9">return <expr><call><name pos:line="82" pos:column="16">gtk_widget_get_window</name><argument_list pos:line="82" pos:column="37">(<argument><expr><name pos:line="82" pos:column="38">w</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else</cpp:directive></cpp:else>
	<return pos:line="84" pos:column="9">return <expr><name><name pos:line="84" pos:column="16">w</name><op:operator pos:line="84" pos:column="17">-&gt;</op:operator><name pos:line="84" pos:column="19">window</name></name></expr>;</return>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<function><type><specifier pos:line="88" pos:column="1">static</specifier> <name pos:line="88" pos:column="8">GdkWindow</name> <type:modifier pos:line="88" pos:column="18">*</type:modifier></type><name pos:line="88" pos:column="19">PWindow</name><parameter_list pos:line="88" pos:column="26">(<param><decl><type><specifier pos:line="88" pos:column="27">const</specifier> <name pos:line="88" pos:column="33">Window</name> <type:modifier pos:line="88" pos:column="40">&amp;</type:modifier></type><name pos:line="88" pos:column="41">w</name></decl></param>)</parameter_list> <block pos:line="88" pos:column="44">{
	<decl_stmt><decl><type><name pos:line="89" pos:column="9">GtkWidget</name> <type:modifier pos:line="89" pos:column="19">*</type:modifier></type><name pos:line="89" pos:column="20">widget</name> <init pos:line="89" pos:column="27">= <expr><call><name><name pos:line="89" pos:column="29">reinterpret_cast</name><argument_list pos:line="89" pos:column="45">&lt;<argument><expr><name pos:line="89" pos:column="46">GtkWidget</name> <op:operator pos:line="89" pos:column="56">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="89" pos:column="58">(<argument><expr><call><name><name pos:line="89" pos:column="59">w</name><op:operator pos:line="89" pos:column="60">.</op:operator><name pos:line="89" pos:column="61">GetID</name></name><argument_list pos:line="89" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if</cpp:directive> <expr><call><name pos:line="90" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="90" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="90" pos:column="23">3</lit:literal><op:operator pos:line="90" pos:column="24">,</op:operator><lit:literal type="number" pos:line="90" pos:column="25">0</lit:literal><op:operator pos:line="90" pos:column="26">,</op:operator><lit:literal type="number" pos:line="90" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<return pos:line="91" pos:column="9">return <expr><call><name pos:line="91" pos:column="16">gtk_widget_get_window</name><argument_list pos:line="91" pos:column="37">(<argument><expr><name pos:line="91" pos:column="38">widget</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">else</cpp:directive></cpp:else>
	<return pos:line="93" pos:column="9">return <expr><name><name pos:line="93" pos:column="16">widget</name><op:operator pos:line="93" pos:column="22">-&gt;</op:operator><name pos:line="93" pos:column="24">window</name></name></expr>;</return>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef</cpp:directive> <name pos:line="97" pos:column="8">_MSC_VER</name></cpp:ifdef>
<comment type="line" pos:line="98" pos:column="1">// Constant conditional expressions are because of GTK+ headers</comment>
<cpp:pragma pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">pragma</cpp:directive> warning(disable: 4127)</cpp:pragma>
<comment type="line" pos:line="100" pos:column="1">// Ignore unreferenced local functions in GTK+ headers</comment>
<cpp:pragma pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">pragma</cpp:directive> warning(disable: 4505)</cpp:pragma>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:if pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">if</cpp:directive> <expr><call><name pos:line="104" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="104" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="104" pos:column="23">2</lit:literal><op:operator pos:line="104" pos:column="24">,</op:operator><lit:literal type="number" pos:line="104" pos:column="25">6</lit:literal><op:operator pos:line="104" pos:column="26">,</op:operator><lit:literal type="number" pos:line="104" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="105" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:macro></cpp:define>
<cpp:endif pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">OBJECT_CLASS</name></cpp:macro> <cpp:value pos:line="108" pos:column="22">GObjectClass</cpp:value></cpp:define>

<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef</cpp:directive> <name pos:line="110" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<using pos:line="111" pos:column="1">using namespace <name pos:line="111" pos:column="17">Scintilla</name>;</using>
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif</cpp:directive></cpp:endif>

<function_decl><type><specifier pos:line="114" pos:column="1">extern</specifier> <name pos:line="114" pos:column="8">char</name> <type:modifier pos:line="114" pos:column="13">*</type:modifier></type><name pos:line="114" pos:column="14">UTF8FromLatin1</name><parameter_list pos:line="114" pos:column="28">(<param><decl><type><specifier pos:line="114" pos:column="29">const</specifier> <name pos:line="114" pos:column="35">char</name> <type:modifier pos:line="114" pos:column="40">*</type:modifier></type><name pos:line="114" pos:column="41">s</name></decl></param>, <param><decl><type><name pos:line="114" pos:column="44">int</name> <type:modifier pos:line="114" pos:column="48">&amp;</type:modifier></type><name pos:line="114" pos:column="49">len</name></decl></param>)</parameter_list>;</function_decl>

<class pos:line="116" pos:column="1">class <name pos:line="116" pos:column="7">ScintillaGTK</name> <super pos:line="116" pos:column="20">: <specifier pos:line="116" pos:column="22">public</specifier> <name pos:line="116" pos:column="29">ScintillaBase</name></super> <block pos:line="116" pos:column="43">{<private type="default" pos:line="116" pos:column="44">
	<decl_stmt><decl><type><name pos:line="117" pos:column="9">_ScintillaObject</name> <type:modifier pos:line="117" pos:column="26">*</type:modifier></type><name pos:line="117" pos:column="27">sci</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">Window</name></type> <name pos:line="118" pos:column="16">wText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">Window</name></type> <name pos:line="119" pos:column="16">scrollbarv</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">Window</name></type> <name pos:line="120" pos:column="16">scrollbarh</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="121" pos:column="9">GtkAdjustment</name> <type:modifier pos:line="121" pos:column="23">*</type:modifier></type><name pos:line="121" pos:column="24">adjustmentv</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="122" pos:column="9">GtkAdjustment</name> <type:modifier pos:line="122" pos:column="23">*</type:modifier></type><name pos:line="122" pos:column="24">adjustmenth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="123" pos:column="9">int</name></type> <name pos:line="123" pos:column="13">scrollBarWidth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">int</name></type> <name pos:line="124" pos:column="13">scrollBarHeight</name></decl>;</decl_stmt>

	<comment type="line" pos:line="126" pos:column="9">// Because clipboard access is asynchronous, copyText is created by Copy</comment>
<cpp:ifndef pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">ifndef</cpp:directive> <name pos:line="127" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">SelectionText</name></type> <name pos:line="128" pos:column="23">copyText</name></decl>;</decl_stmt>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="131" pos:column="9">SelectionText</name></type> <name pos:line="131" pos:column="23">primary</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="133" pos:column="9">GdkEventButton</name></type> <name pos:line="133" pos:column="24">evbtn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="134" pos:column="9">bool</name></type> <name pos:line="134" pos:column="14">capturedMouse</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="135" pos:column="9">bool</name></type> <name pos:line="135" pos:column="14">dragWasDropped</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="136" pos:column="9">int</name></type> <name pos:line="136" pos:column="13">lastKey</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="137" pos:column="9">int</name></type> <name pos:line="137" pos:column="13">rectangularSelectionModifier</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="139" pos:column="9">GtkWidgetClass</name> <type:modifier pos:line="139" pos:column="24">*</type:modifier></type><name pos:line="139" pos:column="25">parentClass</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="141" pos:column="9">static</specifier> <name pos:line="141" pos:column="16">GdkAtom</name></type> <name pos:line="141" pos:column="24">atomClipboard</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="142" pos:column="9">static</specifier> <name pos:line="142" pos:column="16">GdkAtom</name></type> <name pos:line="142" pos:column="24">atomUTF8</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="143" pos:column="9">static</specifier> <name pos:line="143" pos:column="16">GdkAtom</name></type> <name pos:line="143" pos:column="24">atomString</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="144" pos:column="9">static</specifier> <name pos:line="144" pos:column="16">GdkAtom</name></type> <name pos:line="144" pos:column="24">atomUriList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="145" pos:column="9">static</specifier> <name pos:line="145" pos:column="16">GdkAtom</name></type> <name pos:line="145" pos:column="24">atomDROPFILES_DND</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="146" pos:column="9">GdkAtom</name></type> <name pos:line="146" pos:column="17">atomSought</name></decl>;</decl_stmt>

<cpp:if pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">if</cpp:directive> <expr><name pos:line="148" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="149" pos:column="9">CLIPFORMAT</name></type> <name pos:line="149" pos:column="20">cfColumnSelect</name></decl>;</decl_stmt>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="152" pos:column="9">Window</name></type> <name pos:line="152" pos:column="16">wPreedit</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">Window</name></type> <name pos:line="153" pos:column="16">wPreeditDraw</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="154" pos:column="9">GtkIMContext</name> <type:modifier pos:line="154" pos:column="22">*</type:modifier></type><name pos:line="154" pos:column="23">im_context</name></decl>;</decl_stmt>

	<comment type="line" pos:line="156" pos:column="9">// Wheel mouse support</comment>
	<decl_stmt><decl><type><name pos:line="157" pos:column="9">unsigned</name> <name pos:line="157" pos:column="18">int</name></type> <name pos:line="157" pos:column="22">linesPerScroll</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">GTimeVal</name></type> <name pos:line="158" pos:column="18">lastWheelMouseTime</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="159" pos:column="9">gint</name></type> <name pos:line="159" pos:column="14">lastWheelMouseDirection</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="160" pos:column="9">gint</name></type> <name pos:line="160" pos:column="14">wheelMouseIntensity</name></decl>;</decl_stmt>

<cpp:if pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">if</cpp:directive> <expr><call><name pos:line="162" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="162" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="162" pos:column="23">3</lit:literal><op:operator pos:line="162" pos:column="24">,</op:operator><lit:literal type="number" pos:line="162" pos:column="25">0</lit:literal><op:operator pos:line="162" pos:column="26">,</op:operator><lit:literal type="number" pos:line="162" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="163" pos:column="9">cairo_rectangle_list_t</name> <type:modifier pos:line="163" pos:column="32">*</type:modifier></type><name pos:line="163" pos:column="33">rgnUpdate</name></decl>;</decl_stmt>
<cpp:else pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">GdkRegion</name> <type:modifier pos:line="165" pos:column="19">*</type:modifier></type><name pos:line="165" pos:column="20">rgnUpdate</name></decl>;</decl_stmt>
<cpp:endif pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="168" pos:column="9">// Private so ScintillaGTK objects can not be copied</comment>
	<constructor_decl><name pos:line="169" pos:column="9">ScintillaGTK</name><parameter_list pos:line="169" pos:column="21">(<param><decl><type><specifier pos:line="169" pos:column="22">const</specifier></type> <name pos:line="169" pos:column="28">ScintillaGTK</name> <type:modifier pos:line="169" pos:column="41">&amp;</type:modifier></decl></param>)</parameter_list>;</constructor_decl>
	<function_decl><type><name pos:line="170" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="170" pos:column="22">&amp;</type:modifier></type><name pos:line="170" pos:column="23">operator=</name><parameter_list pos:line="170" pos:column="32">(<param><decl><type><specifier pos:line="170" pos:column="33">const</specifier></type> <name pos:line="170" pos:column="39">ScintillaGTK</name> <type:modifier pos:line="170" pos:column="52">&amp;</type:modifier></decl></param>)</parameter_list>;</function_decl>

</private><public pos:line="172" pos:column="1">public:
	<constructor_decl><name pos:line="173" pos:column="9">ScintillaGTK</name><parameter_list pos:line="173" pos:column="21">(<param><decl><type><name pos:line="173" pos:column="22">_ScintillaObject</name> <type:modifier pos:line="173" pos:column="39">*</type:modifier></type><name pos:line="173" pos:column="40">sci_</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="174" pos:column="9">virtual</specifier> <name pos:line="174" pos:column="17">~<name pos:line="174" pos:column="18">ScintillaGTK</name></name><parameter_list pos:line="174" pos:column="30">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="175" pos:column="9">static</specifier> <name pos:line="175" pos:column="16">void</name></type> <name pos:line="175" pos:column="21">ClassInit</name><parameter_list pos:line="175" pos:column="30">(<param><decl><type><name pos:line="175" pos:column="31">OBJECT_CLASS</name><type:modifier pos:line="175" pos:column="43">*</type:modifier></type> <name pos:line="175" pos:column="45">object_class</name></decl></param>, <param><decl><type><name pos:line="175" pos:column="59">GtkWidgetClass</name> <type:modifier pos:line="175" pos:column="74">*</type:modifier></type><name pos:line="175" pos:column="75">widget_class</name></decl></param>, <param><decl><type><name pos:line="175" pos:column="89">GtkContainerClass</name> <type:modifier pos:line="175" pos:column="107">*</type:modifier></type><name pos:line="175" pos:column="108">container_class</name></decl></param>)</parameter_list>;</function_decl>
</public><private pos:line="176" pos:column="1">private:
	<function_decl><type><specifier pos:line="177" pos:column="9">virtual</specifier> <name pos:line="177" pos:column="17">void</name></type> <name pos:line="177" pos:column="22">Initialise</name><parameter_list pos:line="177" pos:column="32">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="178" pos:column="9">virtual</specifier> <name pos:line="178" pos:column="17">void</name></type> <name pos:line="178" pos:column="22">Finalise</name><parameter_list pos:line="178" pos:column="30">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="179" pos:column="9">virtual</specifier> <name pos:line="179" pos:column="17">void</name></type> <name pos:line="179" pos:column="22">DisplayCursor</name><parameter_list pos:line="179" pos:column="35">(<param><decl><type><name><name pos:line="179" pos:column="36">Window</name><op:operator pos:line="179" pos:column="42">::</op:operator><name pos:line="179" pos:column="44">Cursor</name></name></type> <name pos:line="179" pos:column="51">c</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="180" pos:column="9">virtual</specifier> <name pos:line="180" pos:column="17">bool</name></type> <name pos:line="180" pos:column="22">DragThreshold</name><parameter_list pos:line="180" pos:column="35">(<param><decl><type><name pos:line="180" pos:column="36">Point</name></type> <name pos:line="180" pos:column="42">ptStart</name></decl></param>, <param><decl><type><name pos:line="180" pos:column="51">Point</name></type> <name pos:line="180" pos:column="57">ptNow</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="181" pos:column="9">virtual</specifier> <name pos:line="181" pos:column="17">void</name></type> <name pos:line="181" pos:column="22">StartDrag</name><parameter_list pos:line="181" pos:column="31">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="182" pos:column="9">int</name></type> <name pos:line="182" pos:column="13">TargetAsUTF8</name><parameter_list pos:line="182" pos:column="25">(<param><decl><type><name pos:line="182" pos:column="26">char</name> <type:modifier pos:line="182" pos:column="31">*</type:modifier></type><name pos:line="182" pos:column="32">text</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="183" pos:column="9">int</name></type> <name pos:line="183" pos:column="13">EncodedFromUTF8</name><parameter_list pos:line="183" pos:column="28">(<param><decl><type><name pos:line="183" pos:column="29">char</name> <type:modifier pos:line="183" pos:column="34">*</type:modifier></type><name pos:line="183" pos:column="35">utf8</name></decl></param>, <param><decl><type><name pos:line="183" pos:column="41">char</name> <type:modifier pos:line="183" pos:column="46">*</type:modifier></type><name pos:line="183" pos:column="47">encoded</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="184" pos:column="9">virtual</specifier> <name pos:line="184" pos:column="17">bool</name></type> <name pos:line="184" pos:column="22">ValidCodePage</name><parameter_list pos:line="184" pos:column="35">(<param><decl><type><name pos:line="184" pos:column="36">int</name></type> <name pos:line="184" pos:column="40">codePage</name></decl></param>)</parameter_list> <specifier pos:line="184" pos:column="50">const</specifier>;</function_decl>
</private><public pos:line="185" pos:column="1">public: 	<comment type="line" pos:line="185" pos:column="17">// Public for scintilla_send_message</comment>
	<function_decl><type><specifier pos:line="186" pos:column="9">virtual</specifier> <name pos:line="186" pos:column="17">sptr_t</name></type> <name pos:line="186" pos:column="24">WndProc</name><parameter_list pos:line="186" pos:column="31">(<param><decl><type><name pos:line="186" pos:column="32">unsigned</name> <name pos:line="186" pos:column="41">int</name></type> <name pos:line="186" pos:column="45">iMessage</name></decl></param>, <param><decl><type><name pos:line="186" pos:column="55">uptr_t</name></type> <name pos:line="186" pos:column="62">wParam</name></decl></param>, <param><decl><type><name pos:line="186" pos:column="70">sptr_t</name></type> <name pos:line="186" pos:column="77">lParam</name></decl></param>)</parameter_list>;</function_decl>
</public><private pos:line="187" pos:column="1">private:
	<function_decl><type><specifier pos:line="188" pos:column="9">virtual</specifier> <name pos:line="188" pos:column="17">sptr_t</name></type> <name pos:line="188" pos:column="24">DefWndProc</name><parameter_list pos:line="188" pos:column="34">(<param><decl><type><name pos:line="188" pos:column="35">unsigned</name> <name pos:line="188" pos:column="44">int</name></type> <name pos:line="188" pos:column="48">iMessage</name></decl></param>, <param><decl><type><name pos:line="188" pos:column="58">uptr_t</name></type> <name pos:line="188" pos:column="65">wParam</name></decl></param>, <param><decl><type><name pos:line="188" pos:column="73">sptr_t</name></type> <name pos:line="188" pos:column="80">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="189" pos:column="9">virtual</specifier> <name pos:line="189" pos:column="17">void</name></type> <name pos:line="189" pos:column="22">SetTicking</name><parameter_list pos:line="189" pos:column="32">(<param><decl><type><name pos:line="189" pos:column="33">bool</name></type> <name pos:line="189" pos:column="38">on</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="190" pos:column="9">virtual</specifier> <name pos:line="190" pos:column="17">bool</name></type> <name pos:line="190" pos:column="22">SetIdle</name><parameter_list pos:line="190" pos:column="29">(<param><decl><type><name pos:line="190" pos:column="30">bool</name></type> <name pos:line="190" pos:column="35">on</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="191" pos:column="9">virtual</specifier> <name pos:line="191" pos:column="17">void</name></type> <name pos:line="191" pos:column="22">SetMouseCapture</name><parameter_list pos:line="191" pos:column="37">(<param><decl><type><name pos:line="191" pos:column="38">bool</name></type> <name pos:line="191" pos:column="43">on</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="192" pos:column="9">virtual</specifier> <name pos:line="192" pos:column="17">bool</name></type> <name pos:line="192" pos:column="22">HaveMouseCapture</name><parameter_list pos:line="192" pos:column="38">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="193" pos:column="9">virtual</specifier> <name pos:line="193" pos:column="17">bool</name></type> <name pos:line="193" pos:column="22">PaintContains</name><parameter_list pos:line="193" pos:column="35">(<param><decl><type><name pos:line="193" pos:column="36">PRectangle</name></type> <name pos:line="193" pos:column="47">rc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="194" pos:column="9">void</name></type> <name pos:line="194" pos:column="14">FullPaint</name><parameter_list pos:line="194" pos:column="23">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="195" pos:column="9">virtual</specifier> <name pos:line="195" pos:column="17">PRectangle</name></type> <name pos:line="195" pos:column="28">GetClientRectangle</name><parameter_list pos:line="195" pos:column="46">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="196" pos:column="9">void</name></type> <name pos:line="196" pos:column="14">SyncPaint</name><parameter_list pos:line="196" pos:column="23">(<param><decl><type><name pos:line="196" pos:column="24">PRectangle</name></type> <name pos:line="196" pos:column="35">rc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="197" pos:column="9">virtual</specifier> <name pos:line="197" pos:column="17">void</name></type> <name pos:line="197" pos:column="22">ScrollText</name><parameter_list pos:line="197" pos:column="32">(<param><decl><type><name pos:line="197" pos:column="33">int</name></type> <name pos:line="197" pos:column="37">linesToMove</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="198" pos:column="9">virtual</specifier> <name pos:line="198" pos:column="17">void</name></type> <name pos:line="198" pos:column="22">SetVerticalScrollPos</name><parameter_list pos:line="198" pos:column="42">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="199" pos:column="9">virtual</specifier> <name pos:line="199" pos:column="17">void</name></type> <name pos:line="199" pos:column="22">SetHorizontalScrollPos</name><parameter_list pos:line="199" pos:column="44">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="200" pos:column="9">virtual</specifier> <name pos:line="200" pos:column="17">bool</name></type> <name pos:line="200" pos:column="22">ModifyScrollBars</name><parameter_list pos:line="200" pos:column="38">(<param><decl><type><name pos:line="200" pos:column="39">int</name></type> <name pos:line="200" pos:column="43">nMax</name></decl></param>, <param><decl><type><name pos:line="200" pos:column="49">int</name></type> <name pos:line="200" pos:column="53">nPage</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="201" pos:column="9">void</name></type> <name pos:line="201" pos:column="14">ReconfigureScrollBars</name><parameter_list pos:line="201" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="202" pos:column="9">virtual</specifier> <name pos:line="202" pos:column="17">void</name></type> <name pos:line="202" pos:column="22">NotifyChange</name><parameter_list pos:line="202" pos:column="34">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="203" pos:column="9">virtual</specifier> <name pos:line="203" pos:column="17">void</name></type> <name pos:line="203" pos:column="22">NotifyFocus</name><parameter_list pos:line="203" pos:column="33">(<param><decl><type><name pos:line="203" pos:column="34">bool</name></type> <name pos:line="203" pos:column="39">focus</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="204" pos:column="9">virtual</specifier> <name pos:line="204" pos:column="17">void</name></type> <name pos:line="204" pos:column="22">NotifyParent</name><parameter_list pos:line="204" pos:column="34">(<param><decl><type><name pos:line="204" pos:column="35">SCNotification</name></type> <name pos:line="204" pos:column="50">scn</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="205" pos:column="9">void</name></type> <name pos:line="205" pos:column="14">NotifyKey</name><parameter_list pos:line="205" pos:column="23">(<param><decl><type><name pos:line="205" pos:column="24">int</name></type> <name pos:line="205" pos:column="28">key</name></decl></param>, <param><decl><type><name pos:line="205" pos:column="33">int</name></type> <name pos:line="205" pos:column="37">modifiers</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="206" pos:column="9">void</name></type> <name pos:line="206" pos:column="14">NotifyURIDropped</name><parameter_list pos:line="206" pos:column="30">(<param><decl><type><specifier pos:line="206" pos:column="31">const</specifier> <name pos:line="206" pos:column="37">char</name> <type:modifier pos:line="206" pos:column="42">*</type:modifier></type><name pos:line="206" pos:column="43">list</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="207" pos:column="9">const</specifier> <name pos:line="207" pos:column="15">char</name> <type:modifier pos:line="207" pos:column="20">*</type:modifier></type><name pos:line="207" pos:column="21">CharacterSetID</name><parameter_list pos:line="207" pos:column="35">()</parameter_list> <specifier pos:line="207" pos:column="38">const</specifier>;</function_decl>
	<function_decl><type><specifier pos:line="208" pos:column="9">virtual</specifier> <name pos:line="208" pos:column="17">CaseFolder</name> <type:modifier pos:line="208" pos:column="28">*</type:modifier></type><name pos:line="208" pos:column="29">CaseFolderForEncoding</name><parameter_list pos:line="208" pos:column="50">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="209" pos:column="9">virtual</specifier> <name><name pos:line="209" pos:column="17">std</name><op:operator pos:line="209" pos:column="20">::</op:operator><name pos:line="209" pos:column="22">string</name></name></type> <name pos:line="209" pos:column="29">CaseMapString</name><parameter_list pos:line="209" pos:column="42">(<param><decl><type><specifier pos:line="209" pos:column="43">const</specifier> <name><name pos:line="209" pos:column="49">std</name><op:operator pos:line="209" pos:column="52">::</op:operator><name pos:line="209" pos:column="54">string</name></name> <type:modifier pos:line="209" pos:column="61">&amp;</type:modifier></type><name pos:line="209" pos:column="62">s</name></decl></param>, <param><decl><type><name pos:line="209" pos:column="65">int</name></type> <name pos:line="209" pos:column="69">caseMapping</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="210" pos:column="9">virtual</specifier> <name pos:line="210" pos:column="17">int</name></type> <name pos:line="210" pos:column="21">KeyDefault</name><parameter_list pos:line="210" pos:column="31">(<param><decl><type><name pos:line="210" pos:column="32">int</name></type> <name pos:line="210" pos:column="36">key</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="41">int</name></type> <name pos:line="210" pos:column="45">modifiers</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="211" pos:column="9">virtual</specifier> <name pos:line="211" pos:column="17">void</name></type> <name pos:line="211" pos:column="22">CopyToClipboard</name><parameter_list pos:line="211" pos:column="37">(<param><decl><type><specifier pos:line="211" pos:column="38">const</specifier> <name pos:line="211" pos:column="44">SelectionText</name> <type:modifier pos:line="211" pos:column="58">&amp;</type:modifier></type><name pos:line="211" pos:column="59">selectedText</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="212" pos:column="9">virtual</specifier> <name pos:line="212" pos:column="17">void</name></type> <name pos:line="212" pos:column="22">Copy</name><parameter_list pos:line="212" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="213" pos:column="9">virtual</specifier> <name pos:line="213" pos:column="17">void</name></type> <name pos:line="213" pos:column="22">Paste</name><parameter_list pos:line="213" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="214" pos:column="9">virtual</specifier> <name pos:line="214" pos:column="17">void</name></type> <name pos:line="214" pos:column="22">CreateCallTipWindow</name><parameter_list pos:line="214" pos:column="41">(<param><decl><type><name pos:line="214" pos:column="42">PRectangle</name></type> <name pos:line="214" pos:column="53">rc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="215" pos:column="9">virtual</specifier> <name pos:line="215" pos:column="17">void</name></type> <name pos:line="215" pos:column="22">AddToPopUp</name><parameter_list pos:line="215" pos:column="32">(<param><decl><type><specifier pos:line="215" pos:column="33">const</specifier> <name pos:line="215" pos:column="39">char</name> <type:modifier pos:line="215" pos:column="44">*</type:modifier></type><name pos:line="215" pos:column="45">label</name></decl></param>, <param><decl><type><name pos:line="215" pos:column="52">int</name></type> <name pos:line="215" pos:column="56">cmd</name> <init pos:line="215" pos:column="60">= <expr><lit:literal type="number" pos:line="215" pos:column="62">0</lit:literal></expr></init></decl></param>, <name pos:line="215" pos:column="65">bool</name> <name pos:line="215" pos:column="70">enabled</name> <op:operator pos:line="215" pos:column="78">=</op:operator> <lit:literal type="boolean" pos:line="215" pos:column="80">true</lit:literal>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="216" pos:column="9">bool</name></type> <name pos:line="216" pos:column="14">OwnPrimarySelection</name><parameter_list pos:line="216" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="217" pos:column="9">virtual</specifier> <name pos:line="217" pos:column="17">void</name></type> <name pos:line="217" pos:column="22">ClaimSelection</name><parameter_list pos:line="217" pos:column="36">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="218" pos:column="9">void</name></type> <name pos:line="218" pos:column="14">GetGtkSelectionText</name><parameter_list pos:line="218" pos:column="33">(<param><decl><type><name pos:line="218" pos:column="34">GtkSelectionData</name> <type:modifier pos:line="218" pos:column="51">*</type:modifier></type><name pos:line="218" pos:column="52">selectionData</name></decl></param>, <param><decl><type><name pos:line="218" pos:column="67">SelectionText</name> <type:modifier pos:line="218" pos:column="81">&amp;</type:modifier></type><name pos:line="218" pos:column="82">selText</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="219" pos:column="9">void</name></type> <name pos:line="219" pos:column="14">ReceivedSelection</name><parameter_list pos:line="219" pos:column="31">(<param><decl><type><name pos:line="219" pos:column="32">GtkSelectionData</name> <type:modifier pos:line="219" pos:column="49">*</type:modifier></type><name pos:line="219" pos:column="50">selection_data</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="220" pos:column="9">void</name></type> <name pos:line="220" pos:column="14">ReceivedDrop</name><parameter_list pos:line="220" pos:column="26">(<param><decl><type><name pos:line="220" pos:column="27">GtkSelectionData</name> <type:modifier pos:line="220" pos:column="44">*</type:modifier></type><name pos:line="220" pos:column="45">selection_data</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="221" pos:column="9">static</specifier> <name pos:line="221" pos:column="16">void</name></type> <name pos:line="221" pos:column="21">GetSelection</name><parameter_list pos:line="221" pos:column="33">(<param><decl><type><name pos:line="221" pos:column="34">GtkSelectionData</name> <type:modifier pos:line="221" pos:column="51">*</type:modifier></type><name pos:line="221" pos:column="52">selection_data</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="68">guint</name></type> <name pos:line="221" pos:column="74">info</name></decl></param>, <param><decl><type><name pos:line="221" pos:column="80">SelectionText</name> <type:modifier pos:line="221" pos:column="94">*</type:modifier></type><name pos:line="221" pos:column="95">selected</name></decl></param>)</parameter_list>;</function_decl>
<cpp:ifdef pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">ifdef</cpp:directive> <name pos:line="222" pos:column="8">USE_GTK_CLIPBOARD</name></cpp:ifdef>
	<function_decl><type><name pos:line="223" pos:column="9">void</name></type> <name pos:line="223" pos:column="14">StoreOnClipboard</name><parameter_list pos:line="223" pos:column="30">(<param><decl><type><name pos:line="223" pos:column="31">SelectionText</name> <type:modifier pos:line="223" pos:column="45">*</type:modifier></type><name pos:line="223" pos:column="46">clipText</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="224" pos:column="9">static</specifier> <name pos:line="224" pos:column="16">void</name></type> <name pos:line="224" pos:column="21">ClipboardGetSelection</name><parameter_list pos:line="224" pos:column="42">(<param><decl><type><name pos:line="224" pos:column="43">GtkClipboard</name><type:modifier pos:line="224" pos:column="55">*</type:modifier></type> <name pos:line="224" pos:column="57">clip</name></decl></param>, <param><decl><type><name pos:line="224" pos:column="63">GtkSelectionData</name> <type:modifier pos:line="224" pos:column="80">*</type:modifier></type><name pos:line="224" pos:column="81">selection_data</name></decl></param>, <param><decl><type><name pos:line="224" pos:column="97">guint</name></type> <name pos:line="224" pos:column="103">info</name></decl></param>, <param><decl><type><name pos:line="224" pos:column="109">void</name> <type:modifier pos:line="224" pos:column="114">*</type:modifier></type><name pos:line="224" pos:column="115">data</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="225" pos:column="9">static</specifier> <name pos:line="225" pos:column="16">void</name></type> <name pos:line="225" pos:column="21">ClipboardClearSelection</name><parameter_list pos:line="225" pos:column="44">(<param><decl><type><name pos:line="225" pos:column="45">GtkClipboard</name><type:modifier pos:line="225" pos:column="57">*</type:modifier></type> <name pos:line="225" pos:column="59">clip</name></decl></param>, <param><decl><type><name pos:line="225" pos:column="65">void</name> <type:modifier pos:line="225" pos:column="70">*</type:modifier></type><name pos:line="225" pos:column="71">data</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">endif</cpp:directive></cpp:endif>

	<function_decl><type><name pos:line="228" pos:column="9">void</name></type> <name pos:line="228" pos:column="14">UnclaimSelection</name><parameter_list pos:line="228" pos:column="30">(<param><decl><type><name pos:line="228" pos:column="31">GdkEventSelection</name> <type:modifier pos:line="228" pos:column="49">*</type:modifier></type><name pos:line="228" pos:column="50">selection_event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="229" pos:column="9">void</name></type> <name pos:line="229" pos:column="14">Resize</name><parameter_list pos:line="229" pos:column="20">(<param><decl><type><name pos:line="229" pos:column="21">int</name></type> <name pos:line="229" pos:column="25">width</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="32">int</name></type> <name pos:line="229" pos:column="36">height</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="231" pos:column="9">// Callback functions</comment>
	<function_decl><type><name pos:line="232" pos:column="9">void</name></type> <name pos:line="232" pos:column="14">RealizeThis</name><parameter_list pos:line="232" pos:column="25">(<param><decl><type><name pos:line="232" pos:column="26">GtkWidget</name> <type:modifier pos:line="232" pos:column="36">*</type:modifier></type><name pos:line="232" pos:column="37">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="233" pos:column="9">static</specifier> <name pos:line="233" pos:column="16">void</name></type> <name pos:line="233" pos:column="21">Realize</name><parameter_list pos:line="233" pos:column="28">(<param><decl><type><name pos:line="233" pos:column="29">GtkWidget</name> <type:modifier pos:line="233" pos:column="39">*</type:modifier></type><name pos:line="233" pos:column="40">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="234" pos:column="9">void</name></type> <name pos:line="234" pos:column="14">UnRealizeThis</name><parameter_list pos:line="234" pos:column="27">(<param><decl><type><name pos:line="234" pos:column="28">GtkWidget</name> <type:modifier pos:line="234" pos:column="38">*</type:modifier></type><name pos:line="234" pos:column="39">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="235" pos:column="9">static</specifier> <name pos:line="235" pos:column="16">void</name></type> <name pos:line="235" pos:column="21">UnRealize</name><parameter_list pos:line="235" pos:column="30">(<param><decl><type><name pos:line="235" pos:column="31">GtkWidget</name> <type:modifier pos:line="235" pos:column="41">*</type:modifier></type><name pos:line="235" pos:column="42">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="236" pos:column="9">void</name></type> <name pos:line="236" pos:column="14">MapThis</name><parameter_list pos:line="236" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="237" pos:column="9">static</specifier> <name pos:line="237" pos:column="16">void</name></type> <name pos:line="237" pos:column="21">Map</name><parameter_list pos:line="237" pos:column="24">(<param><decl><type><name pos:line="237" pos:column="25">GtkWidget</name> <type:modifier pos:line="237" pos:column="35">*</type:modifier></type><name pos:line="237" pos:column="36">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="238" pos:column="9">void</name></type> <name pos:line="238" pos:column="14">UnMapThis</name><parameter_list pos:line="238" pos:column="23">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="239" pos:column="9">static</specifier> <name pos:line="239" pos:column="16">void</name></type> <name pos:line="239" pos:column="21">UnMap</name><parameter_list pos:line="239" pos:column="26">(<param><decl><type><name pos:line="239" pos:column="27">GtkWidget</name> <type:modifier pos:line="239" pos:column="37">*</type:modifier></type><name pos:line="239" pos:column="38">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="240" pos:column="9">gint</name></type> <name pos:line="240" pos:column="14">FocusInThis</name><parameter_list pos:line="240" pos:column="25">(<param><decl><type><name pos:line="240" pos:column="26">GtkWidget</name> <type:modifier pos:line="240" pos:column="36">*</type:modifier></type><name pos:line="240" pos:column="37">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="241" pos:column="9">static</specifier> <name pos:line="241" pos:column="16">gint</name></type> <name pos:line="241" pos:column="21">FocusIn</name><parameter_list pos:line="241" pos:column="28">(<param><decl><type><name pos:line="241" pos:column="29">GtkWidget</name> <type:modifier pos:line="241" pos:column="39">*</type:modifier></type><name pos:line="241" pos:column="40">widget</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="48">GdkEventFocus</name> <type:modifier pos:line="241" pos:column="62">*</type:modifier></type><name pos:line="241" pos:column="63">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="242" pos:column="9">gint</name></type> <name pos:line="242" pos:column="14">FocusOutThis</name><parameter_list pos:line="242" pos:column="26">(<param><decl><type><name pos:line="242" pos:column="27">GtkWidget</name> <type:modifier pos:line="242" pos:column="37">*</type:modifier></type><name pos:line="242" pos:column="38">widget</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="243" pos:column="9">static</specifier> <name pos:line="243" pos:column="16">gint</name></type> <name pos:line="243" pos:column="21">FocusOut</name><parameter_list pos:line="243" pos:column="29">(<param><decl><type><name pos:line="243" pos:column="30">GtkWidget</name> <type:modifier pos:line="243" pos:column="40">*</type:modifier></type><name pos:line="243" pos:column="41">widget</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="49">GdkEventFocus</name> <type:modifier pos:line="243" pos:column="63">*</type:modifier></type><name pos:line="243" pos:column="64">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="244" pos:column="9">static</specifier> <name pos:line="244" pos:column="16">void</name></type> <name pos:line="244" pos:column="21">SizeRequest</name><parameter_list pos:line="244" pos:column="32">(<param><decl><type><name pos:line="244" pos:column="33">GtkWidget</name> <type:modifier pos:line="244" pos:column="43">*</type:modifier></type><name pos:line="244" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="52">GtkRequisition</name> <type:modifier pos:line="244" pos:column="67">*</type:modifier></type><name pos:line="244" pos:column="68">requisition</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="245" pos:column="9">static</specifier> <name pos:line="245" pos:column="16">void</name></type> <name pos:line="245" pos:column="21">GetPreferredWidth</name><parameter_list pos:line="245" pos:column="38">(<param><decl><type><name pos:line="245" pos:column="39">GtkWidget</name> <type:modifier pos:line="245" pos:column="49">*</type:modifier></type><name pos:line="245" pos:column="50">widget</name></decl></param>, <param><decl><type><name pos:line="245" pos:column="58">gint</name> <type:modifier pos:line="245" pos:column="63">*</type:modifier></type><name pos:line="245" pos:column="64">minimalWidth</name></decl></param>, <param><decl><type><name pos:line="245" pos:column="78">gint</name> <type:modifier pos:line="245" pos:column="83">*</type:modifier></type><name pos:line="245" pos:column="84">naturalWidth</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="246" pos:column="9">static</specifier> <name pos:line="246" pos:column="16">void</name></type> <name pos:line="246" pos:column="21">GetPreferredHeight</name><parameter_list pos:line="246" pos:column="39">(<param><decl><type><name pos:line="246" pos:column="40">GtkWidget</name> <type:modifier pos:line="246" pos:column="50">*</type:modifier></type><name pos:line="246" pos:column="51">widget</name></decl></param>, <param><decl><type><name pos:line="246" pos:column="59">gint</name> <type:modifier pos:line="246" pos:column="64">*</type:modifier></type><name pos:line="246" pos:column="65">minimalHeight</name></decl></param>, <param><decl><type><name pos:line="246" pos:column="80">gint</name> <type:modifier pos:line="246" pos:column="85">*</type:modifier></type><name pos:line="246" pos:column="86">naturalHeight</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="247" pos:column="9">static</specifier> <name pos:line="247" pos:column="16">void</name></type> <name pos:line="247" pos:column="21">SizeAllocate</name><parameter_list pos:line="247" pos:column="33">(<param><decl><type><name pos:line="247" pos:column="34">GtkWidget</name> <type:modifier pos:line="247" pos:column="44">*</type:modifier></type><name pos:line="247" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="247" pos:column="53">GtkAllocation</name> <type:modifier pos:line="247" pos:column="67">*</type:modifier></type><name pos:line="247" pos:column="68">allocation</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">if</cpp:directive> <expr><call><name pos:line="248" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="248" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="248" pos:column="23">3</lit:literal><op:operator pos:line="248" pos:column="24">,</op:operator><lit:literal type="number" pos:line="248" pos:column="25">0</lit:literal><op:operator pos:line="248" pos:column="26">,</op:operator><lit:literal type="number" pos:line="248" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<function_decl><type><name pos:line="249" pos:column="9">gboolean</name></type> <name pos:line="249" pos:column="18">DrawTextThis</name><parameter_list pos:line="249" pos:column="30">(<param><decl><type><name pos:line="249" pos:column="31">cairo_t</name> <type:modifier pos:line="249" pos:column="39">*</type:modifier></type><name pos:line="249" pos:column="40">cr</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="250" pos:column="9">static</specifier> <name pos:line="250" pos:column="16">gboolean</name></type> <name pos:line="250" pos:column="25">DrawText</name><parameter_list pos:line="250" pos:column="33">(<param><decl><type><name pos:line="250" pos:column="34">GtkWidget</name> <type:modifier pos:line="250" pos:column="44">*</type:modifier></type><name pos:line="250" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="250" pos:column="53">cairo_t</name> <type:modifier pos:line="250" pos:column="61">*</type:modifier></type><name pos:line="250" pos:column="62">cr</name></decl></param>, <param><decl><type><name pos:line="250" pos:column="66">ScintillaGTK</name> <type:modifier pos:line="250" pos:column="79">*</type:modifier></type><name pos:line="250" pos:column="80">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="251" pos:column="9">gboolean</name></type> <name pos:line="251" pos:column="18">DrawThis</name><parameter_list pos:line="251" pos:column="26">(<param><decl><type><name pos:line="251" pos:column="27">cairo_t</name> <type:modifier pos:line="251" pos:column="35">*</type:modifier></type><name pos:line="251" pos:column="36">cr</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="252" pos:column="9">static</specifier> <name pos:line="252" pos:column="16">gboolean</name></type> <name pos:line="252" pos:column="25">DrawMain</name><parameter_list pos:line="252" pos:column="33">(<param><decl><type><name pos:line="252" pos:column="34">GtkWidget</name> <type:modifier pos:line="252" pos:column="44">*</type:modifier></type><name pos:line="252" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="252" pos:column="53">cairo_t</name> <type:modifier pos:line="252" pos:column="61">*</type:modifier></type><name pos:line="252" pos:column="62">cr</name></decl></param>)</parameter_list>;</function_decl>
<cpp:else pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">else</cpp:directive></cpp:else>
	<function_decl><type><name pos:line="254" pos:column="9">gboolean</name></type> <name pos:line="254" pos:column="18">ExposeTextThis</name><parameter_list pos:line="254" pos:column="32">(<param><decl><type><name pos:line="254" pos:column="33">GtkWidget</name> <type:modifier pos:line="254" pos:column="43">*</type:modifier></type><name pos:line="254" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="254" pos:column="52">GdkEventExpose</name> <type:modifier pos:line="254" pos:column="67">*</type:modifier></type><name pos:line="254" pos:column="68">ose</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="255" pos:column="9">static</specifier> <name pos:line="255" pos:column="16">gboolean</name></type> <name pos:line="255" pos:column="25">ExposeText</name><parameter_list pos:line="255" pos:column="35">(<param><decl><type><name pos:line="255" pos:column="36">GtkWidget</name> <type:modifier pos:line="255" pos:column="46">*</type:modifier></type><name pos:line="255" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="255" pos:column="55">GdkEventExpose</name> <type:modifier pos:line="255" pos:column="70">*</type:modifier></type><name pos:line="255" pos:column="71">ose</name></decl></param>, <param><decl><type><name pos:line="255" pos:column="76">ScintillaGTK</name> <type:modifier pos:line="255" pos:column="89">*</type:modifier></type><name pos:line="255" pos:column="90">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="256" pos:column="9">gboolean</name></type> <name pos:line="256" pos:column="18">Expose</name><parameter_list pos:line="256" pos:column="24">(<param><decl><type><name pos:line="256" pos:column="25">GtkWidget</name> <type:modifier pos:line="256" pos:column="35">*</type:modifier></type><name pos:line="256" pos:column="36">widget</name></decl></param>, <param><decl><type><name pos:line="256" pos:column="44">GdkEventExpose</name> <type:modifier pos:line="256" pos:column="59">*</type:modifier></type><name pos:line="256" pos:column="60">ose</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="257" pos:column="9">static</specifier> <name pos:line="257" pos:column="16">gboolean</name></type> <name pos:line="257" pos:column="25">ExposeMain</name><parameter_list pos:line="257" pos:column="35">(<param><decl><type><name pos:line="257" pos:column="36">GtkWidget</name> <type:modifier pos:line="257" pos:column="46">*</type:modifier></type><name pos:line="257" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="55">GdkEventExpose</name> <type:modifier pos:line="257" pos:column="70">*</type:modifier></type><name pos:line="257" pos:column="71">ose</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">endif</cpp:directive></cpp:endif>
	<function_decl><type><specifier pos:line="259" pos:column="9">static</specifier> <name pos:line="259" pos:column="16">void</name></type> <name pos:line="259" pos:column="21">Draw</name><parameter_list pos:line="259" pos:column="25">(<param><decl><type><name pos:line="259" pos:column="26">GtkWidget</name> <type:modifier pos:line="259" pos:column="36">*</type:modifier></type><name pos:line="259" pos:column="37">widget</name></decl></param>, <param><decl><type><name pos:line="259" pos:column="45">GdkRectangle</name> <type:modifier pos:line="259" pos:column="58">*</type:modifier></type><name pos:line="259" pos:column="59">area</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="260" pos:column="9">void</name></type> <name pos:line="260" pos:column="14">ForAll</name><parameter_list pos:line="260" pos:column="20">(<param><decl><type><name pos:line="260" pos:column="21">GtkCallback</name></type> <name pos:line="260" pos:column="33">callback</name></decl></param>, <param><decl><type><name pos:line="260" pos:column="43">gpointer</name></type> <name pos:line="260" pos:column="52">callback_data</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="261" pos:column="9">static</specifier> <name pos:line="261" pos:column="16">void</name></type> <name pos:line="261" pos:column="21">MainForAll</name><parameter_list pos:line="261" pos:column="31">(<param><decl><type><name pos:line="261" pos:column="32">GtkContainer</name> <type:modifier pos:line="261" pos:column="45">*</type:modifier></type><name pos:line="261" pos:column="46">container</name></decl></param>, <param><decl><type><name pos:line="261" pos:column="57">gboolean</name></type> <name pos:line="261" pos:column="66">include_internals</name></decl></param>, <param><decl><type><name pos:line="261" pos:column="85">GtkCallback</name></type> <name pos:line="261" pos:column="97">callback</name></decl></param>, <param><decl><type><name pos:line="261" pos:column="107">gpointer</name></type> <name pos:line="261" pos:column="116">callback_data</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="263" pos:column="9">static</specifier> <name pos:line="263" pos:column="16">void</name></type> <name pos:line="263" pos:column="21">ScrollSignal</name><parameter_list pos:line="263" pos:column="33">(<param><decl><type><name pos:line="263" pos:column="34">GtkAdjustment</name> <type:modifier pos:line="263" pos:column="48">*</type:modifier></type><name pos:line="263" pos:column="49">adj</name></decl></param>, <param><decl><type><name pos:line="263" pos:column="54">ScintillaGTK</name> <type:modifier pos:line="263" pos:column="67">*</type:modifier></type><name pos:line="263" pos:column="68">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="264" pos:column="9">static</specifier> <name pos:line="264" pos:column="16">void</name></type> <name pos:line="264" pos:column="21">ScrollHSignal</name><parameter_list pos:line="264" pos:column="34">(<param><decl><type><name pos:line="264" pos:column="35">GtkAdjustment</name> <type:modifier pos:line="264" pos:column="49">*</type:modifier></type><name pos:line="264" pos:column="50">adj</name></decl></param>, <param><decl><type><name pos:line="264" pos:column="55">ScintillaGTK</name> <type:modifier pos:line="264" pos:column="68">*</type:modifier></type><name pos:line="264" pos:column="69">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="265" pos:column="9">gint</name></type> <name pos:line="265" pos:column="14">PressThis</name><parameter_list pos:line="265" pos:column="23">(<param><decl><type><name pos:line="265" pos:column="24">GdkEventButton</name> <type:modifier pos:line="265" pos:column="39">*</type:modifier></type><name pos:line="265" pos:column="40">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="266" pos:column="9">static</specifier> <name pos:line="266" pos:column="16">gint</name></type> <name pos:line="266" pos:column="21">Press</name><parameter_list pos:line="266" pos:column="26">(<param><decl><type><name pos:line="266" pos:column="27">GtkWidget</name> <type:modifier pos:line="266" pos:column="37">*</type:modifier></type><name pos:line="266" pos:column="38">widget</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="46">GdkEventButton</name> <type:modifier pos:line="266" pos:column="61">*</type:modifier></type><name pos:line="266" pos:column="62">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="267" pos:column="9">static</specifier> <name pos:line="267" pos:column="16">gint</name></type> <name pos:line="267" pos:column="21">MouseRelease</name><parameter_list pos:line="267" pos:column="33">(<param><decl><type><name pos:line="267" pos:column="34">GtkWidget</name> <type:modifier pos:line="267" pos:column="44">*</type:modifier></type><name pos:line="267" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="267" pos:column="53">GdkEventButton</name> <type:modifier pos:line="267" pos:column="68">*</type:modifier></type><name pos:line="267" pos:column="69">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="268" pos:column="9">static</specifier> <name pos:line="268" pos:column="16">gint</name></type> <name pos:line="268" pos:column="21">ScrollEvent</name><parameter_list pos:line="268" pos:column="32">(<param><decl><type><name pos:line="268" pos:column="33">GtkWidget</name> <type:modifier pos:line="268" pos:column="43">*</type:modifier></type><name pos:line="268" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="268" pos:column="52">GdkEventScroll</name> <type:modifier pos:line="268" pos:column="67">*</type:modifier></type><name pos:line="268" pos:column="68">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="269" pos:column="9">static</specifier> <name pos:line="269" pos:column="16">gint</name></type> <name pos:line="269" pos:column="21">Motion</name><parameter_list pos:line="269" pos:column="27">(<param><decl><type><name pos:line="269" pos:column="28">GtkWidget</name> <type:modifier pos:line="269" pos:column="38">*</type:modifier></type><name pos:line="269" pos:column="39">widget</name></decl></param>, <param><decl><type><name pos:line="269" pos:column="47">GdkEventMotion</name> <type:modifier pos:line="269" pos:column="62">*</type:modifier></type><name pos:line="269" pos:column="63">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="270" pos:column="9">gboolean</name></type> <name pos:line="270" pos:column="18">KeyThis</name><parameter_list pos:line="270" pos:column="25">(<param><decl><type><name pos:line="270" pos:column="26">GdkEventKey</name> <type:modifier pos:line="270" pos:column="38">*</type:modifier></type><name pos:line="270" pos:column="39">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="271" pos:column="9">static</specifier> <name pos:line="271" pos:column="16">gboolean</name></type> <name pos:line="271" pos:column="25">KeyPress</name><parameter_list pos:line="271" pos:column="33">(<param><decl><type><name pos:line="271" pos:column="34">GtkWidget</name> <type:modifier pos:line="271" pos:column="44">*</type:modifier></type><name pos:line="271" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="271" pos:column="53">GdkEventKey</name> <type:modifier pos:line="271" pos:column="65">*</type:modifier></type><name pos:line="271" pos:column="66">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="272" pos:column="9">static</specifier> <name pos:line="272" pos:column="16">gboolean</name></type> <name pos:line="272" pos:column="25">KeyRelease</name><parameter_list pos:line="272" pos:column="35">(<param><decl><type><name pos:line="272" pos:column="36">GtkWidget</name> <type:modifier pos:line="272" pos:column="46">*</type:modifier></type><name pos:line="272" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="272" pos:column="55">GdkEventKey</name> <type:modifier pos:line="272" pos:column="67">*</type:modifier></type><name pos:line="272" pos:column="68">event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="273" pos:column="9">gboolean</name></type> <name pos:line="273" pos:column="18">ExposePreeditThis</name><parameter_list pos:line="273" pos:column="35">(<param><decl><type><name pos:line="273" pos:column="36">GtkWidget</name> <type:modifier pos:line="273" pos:column="46">*</type:modifier></type><name pos:line="273" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="273" pos:column="55">GdkEventExpose</name> <type:modifier pos:line="273" pos:column="70">*</type:modifier></type><name pos:line="273" pos:column="71">ose</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="274" pos:column="9">static</specifier> <name pos:line="274" pos:column="16">gboolean</name></type> <name pos:line="274" pos:column="25">ExposePreedit</name><parameter_list pos:line="274" pos:column="38">(<param><decl><type><name pos:line="274" pos:column="39">GtkWidget</name> <type:modifier pos:line="274" pos:column="49">*</type:modifier></type><name pos:line="274" pos:column="50">widget</name></decl></param>, <param><decl><type><name pos:line="274" pos:column="58">GdkEventExpose</name> <type:modifier pos:line="274" pos:column="73">*</type:modifier></type><name pos:line="274" pos:column="74">ose</name></decl></param>, <param><decl><type><name pos:line="274" pos:column="79">ScintillaGTK</name> <type:modifier pos:line="274" pos:column="92">*</type:modifier></type><name pos:line="274" pos:column="93">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="275" pos:column="9">void</name></type> <name pos:line="275" pos:column="14">CommitThis</name><parameter_list pos:line="275" pos:column="24">(<param><decl><type><name pos:line="275" pos:column="25">char</name> <type:modifier pos:line="275" pos:column="30">*</type:modifier></type><name pos:line="275" pos:column="31">str</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="276" pos:column="9">static</specifier> <name pos:line="276" pos:column="16">void</name></type> <name pos:line="276" pos:column="21">Commit</name><parameter_list pos:line="276" pos:column="27">(<param><decl><type><name pos:line="276" pos:column="28">GtkIMContext</name> <type:modifier pos:line="276" pos:column="41">*</type:modifier></type><name pos:line="276" pos:column="42">context</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="51">char</name> <type:modifier pos:line="276" pos:column="56">*</type:modifier></type><name pos:line="276" pos:column="57">str</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="62">ScintillaGTK</name> <type:modifier pos:line="276" pos:column="75">*</type:modifier></type><name pos:line="276" pos:column="76">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="277" pos:column="9">void</name></type> <name pos:line="277" pos:column="14">PreeditChangedThis</name><parameter_list pos:line="277" pos:column="32">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="278" pos:column="9">static</specifier> <name pos:line="278" pos:column="16">void</name></type> <name pos:line="278" pos:column="21">PreeditChanged</name><parameter_list pos:line="278" pos:column="35">(<param><decl><type><name pos:line="278" pos:column="36">GtkIMContext</name> <type:modifier pos:line="278" pos:column="49">*</type:modifier></type><name pos:line="278" pos:column="50">context</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="59">ScintillaGTK</name> <type:modifier pos:line="278" pos:column="72">*</type:modifier></type><name pos:line="278" pos:column="73">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="279" pos:column="9">static</specifier> <name pos:line="279" pos:column="16">void</name></type> <name pos:line="279" pos:column="21">StyleSetText</name><parameter_list pos:line="279" pos:column="33">(<param><decl><type><name pos:line="279" pos:column="34">GtkWidget</name> <type:modifier pos:line="279" pos:column="44">*</type:modifier></type><name pos:line="279" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="279" pos:column="53">GtkStyle</name> <type:modifier pos:line="279" pos:column="62">*</type:modifier></type><name pos:line="279" pos:column="63">previous</name></decl></param>, <param><decl><type><name pos:line="279" pos:column="73">void</name><type:modifier pos:line="279" pos:column="77">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="280" pos:column="9">static</specifier> <name pos:line="280" pos:column="16">void</name></type> <name pos:line="280" pos:column="21">RealizeText</name><parameter_list pos:line="280" pos:column="32">(<param><decl><type><name pos:line="280" pos:column="33">GtkWidget</name> <type:modifier pos:line="280" pos:column="43">*</type:modifier></type><name pos:line="280" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="280" pos:column="52">void</name><type:modifier pos:line="280" pos:column="56">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="281" pos:column="9">static</specifier> <name pos:line="281" pos:column="16">void</name></type> <name pos:line="281" pos:column="21">Destroy</name><parameter_list pos:line="281" pos:column="28">(<param><decl><type><name pos:line="281" pos:column="29">GObject</name> <type:modifier pos:line="281" pos:column="37">*</type:modifier></type><name pos:line="281" pos:column="38">object</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="282" pos:column="9">static</specifier> <name pos:line="282" pos:column="16">void</name></type> <name pos:line="282" pos:column="21">SelectionReceived</name><parameter_list pos:line="282" pos:column="38">(<param><decl><type><name pos:line="282" pos:column="39">GtkWidget</name> <type:modifier pos:line="282" pos:column="49">*</type:modifier></type><name pos:line="282" pos:column="50">widget</name></decl></param>, <param><decl><type><name pos:line="282" pos:column="58">GtkSelectionData</name> <type:modifier pos:line="282" pos:column="75">*</type:modifier></type><name pos:line="282" pos:column="76">selection_data</name></decl></param>,
	                              <param><decl><type><name pos:line="283" pos:column="39">guint</name></type> <name pos:line="283" pos:column="45">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="284" pos:column="9">static</specifier> <name pos:line="284" pos:column="16">void</name></type> <name pos:line="284" pos:column="21">SelectionGet</name><parameter_list pos:line="284" pos:column="33">(<param><decl><type><name pos:line="284" pos:column="34">GtkWidget</name> <type:modifier pos:line="284" pos:column="44">*</type:modifier></type><name pos:line="284" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="284" pos:column="53">GtkSelectionData</name> <type:modifier pos:line="284" pos:column="70">*</type:modifier></type><name pos:line="284" pos:column="71">selection_data</name></decl></param>,
	                         <param><decl><type><name pos:line="285" pos:column="34">guint</name></type> <name pos:line="285" pos:column="40">info</name></decl></param>, <param><decl><type><name pos:line="285" pos:column="46">guint</name></type> <name pos:line="285" pos:column="52">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="286" pos:column="9">static</specifier> <name pos:line="286" pos:column="16">gint</name></type> <name pos:line="286" pos:column="21">SelectionClear</name><parameter_list pos:line="286" pos:column="35">(<param><decl><type><name pos:line="286" pos:column="36">GtkWidget</name> <type:modifier pos:line="286" pos:column="46">*</type:modifier></type><name pos:line="286" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="286" pos:column="55">GdkEventSelection</name> <type:modifier pos:line="286" pos:column="73">*</type:modifier></type><name pos:line="286" pos:column="74">selection_event</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="287" pos:column="9">static</specifier> <name pos:line="287" pos:column="16">void</name></type> <name pos:line="287" pos:column="21">DragBegin</name><parameter_list pos:line="287" pos:column="30">(<param><decl><type><name pos:line="287" pos:column="31">GtkWidget</name> <type:modifier pos:line="287" pos:column="41">*</type:modifier></type><name pos:line="287" pos:column="42">widget</name></decl></param>, <param><decl><type><name pos:line="287" pos:column="50">GdkDragContext</name> <type:modifier pos:line="287" pos:column="65">*</type:modifier></type><name pos:line="287" pos:column="66">context</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="288" pos:column="9">gboolean</name></type> <name pos:line="288" pos:column="18">DragMotionThis</name><parameter_list pos:line="288" pos:column="32">(<param><decl><type><name pos:line="288" pos:column="33">GdkDragContext</name> <type:modifier pos:line="288" pos:column="48">*</type:modifier></type><name pos:line="288" pos:column="49">context</name></decl></param>, <param><decl><type><name pos:line="288" pos:column="58">gint</name></type> <name pos:line="288" pos:column="63">x</name></decl></param>, <param><decl><type><name pos:line="288" pos:column="66">gint</name></type> <name pos:line="288" pos:column="71">y</name></decl></param>, <param><decl><type><name pos:line="288" pos:column="74">guint</name></type> <name pos:line="288" pos:column="80">dragtime</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="289" pos:column="9">static</specifier> <name pos:line="289" pos:column="16">gboolean</name></type> <name pos:line="289" pos:column="25">DragMotion</name><parameter_list pos:line="289" pos:column="35">(<param><decl><type><name pos:line="289" pos:column="36">GtkWidget</name> <type:modifier pos:line="289" pos:column="46">*</type:modifier></type><name pos:line="289" pos:column="47">widget</name></decl></param>, <param><decl><type><name pos:line="289" pos:column="55">GdkDragContext</name> <type:modifier pos:line="289" pos:column="70">*</type:modifier></type><name pos:line="289" pos:column="71">context</name></decl></param>,
	                           <param><decl><type><name pos:line="290" pos:column="36">gint</name></type> <name pos:line="290" pos:column="41">x</name></decl></param>, <param><decl><type><name pos:line="290" pos:column="44">gint</name></type> <name pos:line="290" pos:column="49">y</name></decl></param>, <param><decl><type><name pos:line="290" pos:column="52">guint</name></type> <name pos:line="290" pos:column="58">dragtime</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="291" pos:column="9">static</specifier> <name pos:line="291" pos:column="16">void</name></type> <name pos:line="291" pos:column="21">DragLeave</name><parameter_list pos:line="291" pos:column="30">(<param><decl><type><name pos:line="291" pos:column="31">GtkWidget</name> <type:modifier pos:line="291" pos:column="41">*</type:modifier></type><name pos:line="291" pos:column="42">widget</name></decl></param>, <param><decl><type><name pos:line="291" pos:column="50">GdkDragContext</name> <type:modifier pos:line="291" pos:column="65">*</type:modifier></type><name pos:line="291" pos:column="66">context</name></decl></param>,
	                      <param><decl><type><name pos:line="292" pos:column="31">guint</name></type> <name pos:line="292" pos:column="37">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="293" pos:column="9">static</specifier> <name pos:line="293" pos:column="16">void</name></type> <name pos:line="293" pos:column="21">DragEnd</name><parameter_list pos:line="293" pos:column="28">(<param><decl><type><name pos:line="293" pos:column="29">GtkWidget</name> <type:modifier pos:line="293" pos:column="39">*</type:modifier></type><name pos:line="293" pos:column="40">widget</name></decl></param>, <param><decl><type><name pos:line="293" pos:column="48">GdkDragContext</name> <type:modifier pos:line="293" pos:column="63">*</type:modifier></type><name pos:line="293" pos:column="64">context</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="294" pos:column="9">static</specifier> <name pos:line="294" pos:column="16">gboolean</name></type> <name pos:line="294" pos:column="25">Drop</name><parameter_list pos:line="294" pos:column="29">(<param><decl><type><name pos:line="294" pos:column="30">GtkWidget</name> <type:modifier pos:line="294" pos:column="40">*</type:modifier></type><name pos:line="294" pos:column="41">widget</name></decl></param>, <param><decl><type><name pos:line="294" pos:column="49">GdkDragContext</name> <type:modifier pos:line="294" pos:column="64">*</type:modifier></type><name pos:line="294" pos:column="65">context</name></decl></param>,
	                     <param><decl><type><name pos:line="295" pos:column="30">gint</name></type> <name pos:line="295" pos:column="35">x</name></decl></param>, <param><decl><type><name pos:line="295" pos:column="38">gint</name></type> <name pos:line="295" pos:column="43">y</name></decl></param>, <param><decl><type><name pos:line="295" pos:column="46">guint</name></type> <name pos:line="295" pos:column="52">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="296" pos:column="9">static</specifier> <name pos:line="296" pos:column="16">void</name></type> <name pos:line="296" pos:column="21">DragDataReceived</name><parameter_list pos:line="296" pos:column="37">(<param><decl><type><name pos:line="296" pos:column="38">GtkWidget</name> <type:modifier pos:line="296" pos:column="48">*</type:modifier></type><name pos:line="296" pos:column="49">widget</name></decl></param>, <param><decl><type><name pos:line="296" pos:column="57">GdkDragContext</name> <type:modifier pos:line="296" pos:column="72">*</type:modifier></type><name pos:line="296" pos:column="73">context</name></decl></param>,
	                             <param><decl><type><name pos:line="297" pos:column="38">gint</name></type> <name pos:line="297" pos:column="43">x</name></decl></param>, <param><decl><type><name pos:line="297" pos:column="46">gint</name></type> <name pos:line="297" pos:column="51">y</name></decl></param>, <param><decl><type><name pos:line="297" pos:column="54">GtkSelectionData</name> <type:modifier pos:line="297" pos:column="71">*</type:modifier></type><name pos:line="297" pos:column="72">selection_data</name></decl></param>, <param><decl><type><name pos:line="297" pos:column="88">guint</name></type> <name pos:line="297" pos:column="94">info</name></decl></param>, <param><decl><type><name pos:line="297" pos:column="100">guint</name></type> <name pos:line="297" pos:column="106">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="298" pos:column="9">static</specifier> <name pos:line="298" pos:column="16">void</name></type> <name pos:line="298" pos:column="21">DragDataGet</name><parameter_list pos:line="298" pos:column="32">(<param><decl><type><name pos:line="298" pos:column="33">GtkWidget</name> <type:modifier pos:line="298" pos:column="43">*</type:modifier></type><name pos:line="298" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="298" pos:column="52">GdkDragContext</name> <type:modifier pos:line="298" pos:column="67">*</type:modifier></type><name pos:line="298" pos:column="68">context</name></decl></param>,
	                        <param><decl><type><name pos:line="299" pos:column="33">GtkSelectionData</name> <type:modifier pos:line="299" pos:column="50">*</type:modifier></type><name pos:line="299" pos:column="51">selection_data</name></decl></param>, <param><decl><type><name pos:line="299" pos:column="67">guint</name></type> <name pos:line="299" pos:column="73">info</name></decl></param>, <param><decl><type><name pos:line="299" pos:column="79">guint</name></type> <name pos:line="299" pos:column="85">time</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="300" pos:column="9">static</specifier> <name pos:line="300" pos:column="16">gboolean</name></type> <name pos:line="300" pos:column="25">TimeOut</name><parameter_list pos:line="300" pos:column="32">(<param><decl><type><name pos:line="300" pos:column="33">ScintillaGTK</name> <type:modifier pos:line="300" pos:column="46">*</type:modifier></type><name pos:line="300" pos:column="47">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="301" pos:column="9">static</specifier> <name pos:line="301" pos:column="16">gboolean</name></type> <name pos:line="301" pos:column="25">IdleCallback</name><parameter_list pos:line="301" pos:column="37">(<param><decl><type><name pos:line="301" pos:column="38">ScintillaGTK</name> <type:modifier pos:line="301" pos:column="51">*</type:modifier></type><name pos:line="301" pos:column="52">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="302" pos:column="9">static</specifier> <name pos:line="302" pos:column="16">gboolean</name></type> <name pos:line="302" pos:column="25">StyleIdle</name><parameter_list pos:line="302" pos:column="34">(<param><decl><type><name pos:line="302" pos:column="35">ScintillaGTK</name> <type:modifier pos:line="302" pos:column="48">*</type:modifier></type><name pos:line="302" pos:column="49">sciThis</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="303" pos:column="9">virtual</specifier> <name pos:line="303" pos:column="17">void</name></type> <name pos:line="303" pos:column="22">QueueStyling</name><parameter_list pos:line="303" pos:column="34">(<param><decl><type><name pos:line="303" pos:column="35">int</name></type> <name pos:line="303" pos:column="39">upTo</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="304" pos:column="9">static</specifier> <name pos:line="304" pos:column="16">void</name></type> <name pos:line="304" pos:column="21">PopUpCB</name><parameter_list pos:line="304" pos:column="28">(<param><decl><type><name pos:line="304" pos:column="29">GtkMenuItem</name> <type:modifier pos:line="304" pos:column="41">*</type:modifier></type><name pos:line="304" pos:column="42">menuItem</name></decl></param>, <param><decl><type><name pos:line="304" pos:column="52">ScintillaGTK</name> <type:modifier pos:line="304" pos:column="65">*</type:modifier></type><name pos:line="304" pos:column="66">sciThis</name></decl></param>)</parameter_list>;</function_decl>

<cpp:if pos:line="306" pos:column="1">#<cpp:directive pos:line="306" pos:column="2">if</cpp:directive> <expr><call><name pos:line="306" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="306" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="306" pos:column="23">3</lit:literal><op:operator pos:line="306" pos:column="24">,</op:operator><lit:literal type="number" pos:line="306" pos:column="25">0</lit:literal><op:operator pos:line="306" pos:column="26">,</op:operator><lit:literal type="number" pos:line="306" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<function_decl><type><specifier pos:line="307" pos:column="9">static</specifier> <name pos:line="307" pos:column="16">gboolean</name></type> <name pos:line="307" pos:column="25">DrawCT</name><parameter_list pos:line="307" pos:column="31">(<param><decl><type><name pos:line="307" pos:column="32">GtkWidget</name> <type:modifier pos:line="307" pos:column="42">*</type:modifier></type><name pos:line="307" pos:column="43">widget</name></decl></param>, <param><decl><type><name pos:line="307" pos:column="51">cairo_t</name> <type:modifier pos:line="307" pos:column="59">*</type:modifier></type><name pos:line="307" pos:column="60">cr</name></decl></param>, <param><decl><type><name pos:line="307" pos:column="64">CallTip</name> <type:modifier pos:line="307" pos:column="72">*</type:modifier></type><name pos:line="307" pos:column="73">ctip</name></decl></param>)</parameter_list>;</function_decl>
<cpp:else pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">else</cpp:directive></cpp:else>
	<function_decl><type><specifier pos:line="309" pos:column="9">static</specifier> <name pos:line="309" pos:column="16">gboolean</name></type> <name pos:line="309" pos:column="25">ExposeCT</name><parameter_list pos:line="309" pos:column="33">(<param><decl><type><name pos:line="309" pos:column="34">GtkWidget</name> <type:modifier pos:line="309" pos:column="44">*</type:modifier></type><name pos:line="309" pos:column="45">widget</name></decl></param>, <param><decl><type><name pos:line="309" pos:column="53">GdkEventExpose</name> <type:modifier pos:line="309" pos:column="68">*</type:modifier></type><name pos:line="309" pos:column="69">ose</name></decl></param>, <param><decl><type><name pos:line="309" pos:column="74">CallTip</name> <type:modifier pos:line="309" pos:column="82">*</type:modifier></type><name pos:line="309" pos:column="83">ct</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="310" pos:column="1">#<cpp:directive pos:line="310" pos:column="2">endif</cpp:directive></cpp:endif>
	<function_decl><type><specifier pos:line="311" pos:column="9">static</specifier> <name pos:line="311" pos:column="16">gboolean</name></type> <name pos:line="311" pos:column="25">PressCT</name><parameter_list pos:line="311" pos:column="32">(<param><decl><type><name pos:line="311" pos:column="33">GtkWidget</name> <type:modifier pos:line="311" pos:column="43">*</type:modifier></type><name pos:line="311" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="311" pos:column="52">GdkEventButton</name> <type:modifier pos:line="311" pos:column="67">*</type:modifier></type><name pos:line="311" pos:column="68">event</name></decl></param>, <param><decl><type><name pos:line="311" pos:column="75">ScintillaGTK</name> <type:modifier pos:line="311" pos:column="88">*</type:modifier></type><name pos:line="311" pos:column="89">sciThis</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="313" pos:column="9">static</specifier> <name pos:line="313" pos:column="16">sptr_t</name></type> <name pos:line="313" pos:column="23">DirectFunction</name><parameter_list pos:line="313" pos:column="37">(<param><decl><type><name pos:line="313" pos:column="38">ScintillaGTK</name> <type:modifier pos:line="313" pos:column="51">*</type:modifier></type><name pos:line="313" pos:column="52">sciThis</name></decl></param>,
	                             <param><decl><type><name pos:line="314" pos:column="38">unsigned</name> <name pos:line="314" pos:column="47">int</name></type> <name pos:line="314" pos:column="51">iMessage</name></decl></param>, <param><decl><type><name pos:line="314" pos:column="61">uptr_t</name></type> <name pos:line="314" pos:column="68">wParam</name></decl></param>, <param><decl><type><name pos:line="314" pos:column="76">sptr_t</name></type> <name pos:line="314" pos:column="83">lParam</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<enum pos:line="317" pos:column="1">enum <block pos:line="317" pos:column="6">{
    <decl><name pos:line="318" pos:column="5">COMMAND_SIGNAL</name></decl><op:operator pos:line="318" pos:column="19">,</op:operator>
    <decl><name pos:line="319" pos:column="5">NOTIFY_SIGNAL</name></decl><op:operator pos:line="319" pos:column="18">,</op:operator>
    <decl><name pos:line="320" pos:column="5">LAST_SIGNAL</name></decl>
}</block>;</enum>

<decl_stmt><decl><type><specifier pos:line="323" pos:column="1">static</specifier> <name pos:line="323" pos:column="8">gint</name></type> <name><name pos:line="323" pos:column="13">scintilla_signals</name><index pos:line="323" pos:column="30">[<expr><name pos:line="323" pos:column="31">LAST_SIGNAL</name></expr>]</index></name> <init pos:line="323" pos:column="44">= <expr><block pos:line="323" pos:column="46">{ <expr><lit:literal type="number" pos:line="323" pos:column="48">0</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>

<enum pos:line="325" pos:column="1">enum <block pos:line="325" pos:column="6">{
    <decl><name pos:line="326" pos:column="5">TARGET_STRING</name></decl><op:operator pos:line="326" pos:column="18">,</op:operator>
    <decl><name pos:line="327" pos:column="5">TARGET_TEXT</name></decl><op:operator pos:line="327" pos:column="16">,</op:operator>
    <decl><name pos:line="328" pos:column="5">TARGET_COMPOUND_TEXT</name></decl><op:operator pos:line="328" pos:column="25">,</op:operator>
    <decl><name pos:line="329" pos:column="5">TARGET_UTF8_STRING</name></decl><op:operator pos:line="329" pos:column="23">,</op:operator>
    <decl><name pos:line="330" pos:column="5">TARGET_URI</name></decl>
}</block>;</enum>

<decl_stmt><decl><type><name pos:line="333" pos:column="1">GdkAtom</name></type> <name><name pos:line="333" pos:column="9">ScintillaGTK</name><op:operator pos:line="333" pos:column="21">::</op:operator><name pos:line="333" pos:column="23">atomClipboard</name></name> <init pos:line="333" pos:column="37">= <expr><lit:literal type="number" pos:line="333" pos:column="39">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="334" pos:column="1">GdkAtom</name></type> <name><name pos:line="334" pos:column="9">ScintillaGTK</name><op:operator pos:line="334" pos:column="21">::</op:operator><name pos:line="334" pos:column="23">atomUTF8</name></name> <init pos:line="334" pos:column="32">= <expr><lit:literal type="number" pos:line="334" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="335" pos:column="1">GdkAtom</name></type> <name><name pos:line="335" pos:column="9">ScintillaGTK</name><op:operator pos:line="335" pos:column="21">::</op:operator><name pos:line="335" pos:column="23">atomString</name></name> <init pos:line="335" pos:column="34">= <expr><lit:literal type="number" pos:line="335" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="336" pos:column="1">GdkAtom</name></type> <name><name pos:line="336" pos:column="9">ScintillaGTK</name><op:operator pos:line="336" pos:column="21">::</op:operator><name pos:line="336" pos:column="23">atomUriList</name></name> <init pos:line="336" pos:column="35">= <expr><lit:literal type="number" pos:line="336" pos:column="37">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="337" pos:column="1">GdkAtom</name></type> <name><name pos:line="337" pos:column="9">ScintillaGTK</name><op:operator pos:line="337" pos:column="21">::</op:operator><name pos:line="337" pos:column="23">atomDROPFILES_DND</name></name> <init pos:line="337" pos:column="41">= <expr><lit:literal type="number" pos:line="337" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="339" pos:column="1">static</specifier> <specifier pos:line="339" pos:column="8">const</specifier> <name pos:line="339" pos:column="14">GtkTargetEntry</name></type> <name><name pos:line="339" pos:column="29">clipboardCopyTargets</name><index pos:line="339" pos:column="49">[]</index></name> <init pos:line="339" pos:column="52">= <expr><block pos:line="339" pos:column="54">{
	<expr><block pos:line="340" pos:column="9">{ <expr><op:operator pos:line="340" pos:column="11">(</op:operator><name pos:line="340" pos:column="12">gchar</name> <op:operator pos:line="340" pos:column="18">*</op:operator><op:operator pos:line="340" pos:column="19">)</op:operator> <lit:literal type="string" pos:line="340" pos:column="21">"UTF8_STRING"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="340" pos:column="36">0</lit:literal></expr>, <expr><name pos:line="340" pos:column="39">TARGET_UTF8_STRING</name></expr> }</block></expr>,
	<expr><block pos:line="341" pos:column="9">{ <expr><op:operator pos:line="341" pos:column="11">(</op:operator><name pos:line="341" pos:column="12">gchar</name> <op:operator pos:line="341" pos:column="18">*</op:operator><op:operator pos:line="341" pos:column="19">)</op:operator> <lit:literal type="string" pos:line="341" pos:column="21">"STRING"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="341" pos:column="31">0</lit:literal></expr>, <expr><name pos:line="341" pos:column="34">TARGET_STRING</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="343" pos:column="1">static</specifier> <specifier pos:line="343" pos:column="8">const</specifier> <name pos:line="343" pos:column="14">gint</name></type> <name pos:line="343" pos:column="19">nClipboardCopyTargets</name> <init pos:line="343" pos:column="41">= <expr><sizeof pos:line="343" pos:column="43">sizeof<argument_list pos:line="343" pos:column="49">(<argument><expr><name pos:line="343" pos:column="50">clipboardCopyTargets</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="343" pos:column="72">/</op:operator> <sizeof pos:line="343" pos:column="74">sizeof<argument_list pos:line="343" pos:column="80">(<argument><expr><name><name pos:line="343" pos:column="81">clipboardCopyTargets</name><index pos:line="343" pos:column="101">[<expr><lit:literal type="number" pos:line="343" pos:column="102">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="345" pos:column="1">static</specifier> <specifier pos:line="345" pos:column="8">const</specifier> <name pos:line="345" pos:column="14">GtkTargetEntry</name></type> <name><name pos:line="345" pos:column="29">clipboardPasteTargets</name><index pos:line="345" pos:column="50">[]</index></name> <init pos:line="345" pos:column="53">= <expr><block pos:line="345" pos:column="55">{
	<expr><block pos:line="346" pos:column="9">{ <expr><op:operator pos:line="346" pos:column="11">(</op:operator><name pos:line="346" pos:column="12">gchar</name> <op:operator pos:line="346" pos:column="18">*</op:operator><op:operator pos:line="346" pos:column="19">)</op:operator> <lit:literal type="string" pos:line="346" pos:column="21">"text/uri-list"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="346" pos:column="38">0</lit:literal></expr>, <expr><name pos:line="346" pos:column="41">TARGET_URI</name></expr> }</block></expr>,
	<expr><block pos:line="347" pos:column="9">{ <expr><op:operator pos:line="347" pos:column="11">(</op:operator><name pos:line="347" pos:column="12">gchar</name> <op:operator pos:line="347" pos:column="18">*</op:operator><op:operator pos:line="347" pos:column="19">)</op:operator> <lit:literal type="string" pos:line="347" pos:column="21">"UTF8_STRING"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="347" pos:column="36">0</lit:literal></expr>, <expr><name pos:line="347" pos:column="39">TARGET_UTF8_STRING</name></expr> }</block></expr>,
	<expr><block pos:line="348" pos:column="9">{ <expr><op:operator pos:line="348" pos:column="11">(</op:operator><name pos:line="348" pos:column="12">gchar</name> <op:operator pos:line="348" pos:column="18">*</op:operator><op:operator pos:line="348" pos:column="19">)</op:operator> <lit:literal type="string" pos:line="348" pos:column="21">"STRING"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="348" pos:column="31">0</lit:literal></expr>, <expr><name pos:line="348" pos:column="34">TARGET_STRING</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="350" pos:column="1">static</specifier> <specifier pos:line="350" pos:column="8">const</specifier> <name pos:line="350" pos:column="14">gint</name></type> <name pos:line="350" pos:column="19">nClipboardPasteTargets</name> <init pos:line="350" pos:column="42">= <expr><sizeof pos:line="350" pos:column="44">sizeof<argument_list pos:line="350" pos:column="50">(<argument><expr><name pos:line="350" pos:column="51">clipboardPasteTargets</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="350" pos:column="74">/</op:operator> <sizeof pos:line="350" pos:column="76">sizeof<argument_list pos:line="350" pos:column="82">(<argument><expr><name><name pos:line="350" pos:column="83">clipboardPasteTargets</name><index pos:line="350" pos:column="104">[<expr><lit:literal type="number" pos:line="350" pos:column="105">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<function><type><specifier pos:line="352" pos:column="1">static</specifier> <name pos:line="352" pos:column="8">GtkWidget</name> <type:modifier pos:line="352" pos:column="18">*</type:modifier></type><name pos:line="352" pos:column="19">PWidget</name><parameter_list pos:line="352" pos:column="26">(<param><decl><type><name pos:line="352" pos:column="27">Window</name> <type:modifier pos:line="352" pos:column="34">&amp;</type:modifier></type><name pos:line="352" pos:column="35">w</name></decl></param>)</parameter_list> <block pos:line="352" pos:column="38">{
	<return pos:line="353" pos:column="9">return <expr><call><name><name pos:line="353" pos:column="16">reinterpret_cast</name><argument_list pos:line="353" pos:column="32">&lt;<argument><expr><name pos:line="353" pos:column="33">GtkWidget</name> <op:operator pos:line="353" pos:column="43">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="353" pos:column="45">(<argument><expr><call><name><name pos:line="353" pos:column="46">w</name><op:operator pos:line="353" pos:column="47">.</op:operator><name pos:line="353" pos:column="48">GetID</name></name><argument_list pos:line="353" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><specifier pos:line="356" pos:column="1">static</specifier> <name pos:line="356" pos:column="8">ScintillaGTK</name> <type:modifier pos:line="356" pos:column="21">*</type:modifier></type><name pos:line="356" pos:column="22">ScintillaFromWidget</name><parameter_list pos:line="356" pos:column="41">(<param><decl><type><name pos:line="356" pos:column="42">GtkWidget</name> <type:modifier pos:line="356" pos:column="52">*</type:modifier></type><name pos:line="356" pos:column="53">widget</name></decl></param>)</parameter_list> <block pos:line="356" pos:column="61">{
	<decl_stmt><decl><type><name pos:line="357" pos:column="9">ScintillaObject</name> <type:modifier pos:line="357" pos:column="25">*</type:modifier></type><name pos:line="357" pos:column="26">scio</name> <init pos:line="357" pos:column="31">= <expr><call><name><name pos:line="357" pos:column="33">reinterpret_cast</name><argument_list pos:line="357" pos:column="49">&lt;<argument><expr><name pos:line="357" pos:column="50">ScintillaObject</name> <op:operator pos:line="357" pos:column="66">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="357" pos:column="68">(<argument><expr><name pos:line="357" pos:column="69">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="358" pos:column="9">return <expr><call><name><name pos:line="358" pos:column="16">reinterpret_cast</name><argument_list pos:line="358" pos:column="32">&lt;<argument><expr><name pos:line="358" pos:column="33">ScintillaGTK</name> <op:operator pos:line="358" pos:column="46">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="358" pos:column="48">(<argument><expr><name><name pos:line="358" pos:column="49">scio</name><op:operator pos:line="358" pos:column="53">-&gt;</op:operator><name pos:line="358" pos:column="55">pscin</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<constructor><name><name pos:line="361" pos:column="1">ScintillaGTK</name><op:operator pos:line="361" pos:column="13">::</op:operator><name pos:line="361" pos:column="15">ScintillaGTK</name></name><parameter_list pos:line="361" pos:column="27">(<param><decl><type><name pos:line="361" pos:column="28">_ScintillaObject</name> <type:modifier pos:line="361" pos:column="45">*</type:modifier></type><name pos:line="361" pos:column="46">sci_</name></decl></param>)</parameter_list> <member_list pos:line="361" pos:column="52">:
		<call><name pos:line="362" pos:column="17">adjustmentv</name><argument_list pos:line="362" pos:column="28">(<argument><expr><lit:literal type="number" pos:line="362" pos:column="29">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="362" pos:column="31">,</op:operator> <call><name pos:line="362" pos:column="33">adjustmenth</name><argument_list pos:line="362" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="362" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="362" pos:column="47">,</op:operator>
		<call><name pos:line="363" pos:column="17">scrollBarWidth</name><argument_list pos:line="363" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="363" pos:column="32">30</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="363" pos:column="35">,</op:operator> <call><name pos:line="363" pos:column="37">scrollBarHeight</name><argument_list pos:line="363" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="363" pos:column="53">30</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="363" pos:column="56">,</op:operator>
		<call><name pos:line="364" pos:column="17">capturedMouse</name><argument_list pos:line="364" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="364" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="364" pos:column="37">,</op:operator> <call><name pos:line="364" pos:column="39">dragWasDropped</name><argument_list pos:line="364" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="364" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="364" pos:column="60">,</op:operator>
		<call><name pos:line="365" pos:column="17">lastKey</name><argument_list pos:line="365" pos:column="24">(<argument><expr><lit:literal type="number" pos:line="365" pos:column="25">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="365" pos:column="27">,</op:operator> <call><name pos:line="365" pos:column="29">rectangularSelectionModifier</name><argument_list pos:line="365" pos:column="57">(<argument><expr><name pos:line="365" pos:column="58">SCMOD_CTRL</name></expr></argument>)</argument_list></call><op:operator pos:line="365" pos:column="69">,</op:operator> <call><name pos:line="365" pos:column="71">parentClass</name><argument_list pos:line="365" pos:column="82">(<argument><expr><lit:literal type="number" pos:line="365" pos:column="83">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="365" pos:column="85">,</op:operator>
		<call><name pos:line="366" pos:column="17">im_context</name><argument_list pos:line="366" pos:column="27">(<argument><expr><name pos:line="366" pos:column="28">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="366" pos:column="33">,</op:operator>
		<call><name pos:line="367" pos:column="17">lastWheelMouseDirection</name><argument_list pos:line="367" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="367" pos:column="41">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="367" pos:column="43">,</op:operator>
		<call><name pos:line="368" pos:column="17">wheelMouseIntensity</name><argument_list pos:line="368" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="368" pos:column="37">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="368" pos:column="39">,</op:operator>
		<call><name pos:line="369" pos:column="17">rgnUpdate</name><argument_list pos:line="369" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="369" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="369" pos:column="30">{
	<expr_stmt><expr><name pos:line="370" pos:column="9">sci</name> <op:operator pos:line="370" pos:column="13">=</op:operator> <name pos:line="370" pos:column="15">sci_</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="371" pos:column="9">wMain</name> <op:operator pos:line="371" pos:column="15">=</op:operator> <call><name pos:line="371" pos:column="17">GTK_WIDGET</name><argument_list pos:line="371" pos:column="27">(<argument><expr><name pos:line="371" pos:column="28">sci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:line="373" pos:column="1">#<cpp:directive pos:line="373" pos:column="2">if</cpp:directive> <expr><name pos:line="373" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="374" pos:column="9">rectangularSelectionModifier</name> <op:operator pos:line="374" pos:column="38">=</op:operator> <name pos:line="374" pos:column="40">SCMOD_ALT</name></expr>;</expr_stmt>
<cpp:else pos:line="375" pos:column="1">#<cpp:directive pos:line="375" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="376" pos:column="9">rectangularSelectionModifier</name> <op:operator pos:line="376" pos:column="38">=</op:operator> <name pos:line="376" pos:column="40">SCMOD_CTRL</name></expr>;</expr_stmt>
<cpp:endif pos:line="377" pos:column="1">#<cpp:directive pos:line="377" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:if pos:line="379" pos:column="1">#<cpp:directive pos:line="379" pos:column="2">if</cpp:directive> <expr><name pos:line="379" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
 	<comment type="line" pos:line="380" pos:column="9">// There does not seem to be a real standard for indicating that the clipboard</comment>
	<comment type="line" pos:line="381" pos:column="9">// contains a rectangular selection, so copy Developer Studio.</comment>
	<expr_stmt><expr><name pos:line="382" pos:column="9">cfColumnSelect</name> <op:operator pos:line="382" pos:column="24">=</op:operator> <call><name><name pos:line="382" pos:column="26">static_cast</name><argument_list pos:line="382" pos:column="37">&lt;<argument><expr><name pos:line="382" pos:column="38">CLIPFORMAT</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="382" pos:column="49">(
		<argument><expr><call><name><op:operator pos:line="383" pos:column="17">::</op:operator><name pos:line="383" pos:column="19">RegisterClipboardFormat</name></name><argument_list pos:line="383" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="383" pos:column="43">"MSDEVColumnSelect"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  	<comment type="line" pos:line="385" pos:column="9">// Get intellimouse parameters when running on win32; otherwise use</comment>
	<comment type="line" pos:line="386" pos:column="9">// reasonable default</comment>
<cpp:ifndef pos:line="387" pos:column="1">#<cpp:directive pos:line="387" pos:column="2">ifndef</cpp:directive> <name pos:line="387" pos:column="9">SPI_GETWHEELSCROLLLINES</name></cpp:ifndef>
<cpp:define pos:line="388" pos:column="1">#<cpp:directive pos:line="388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="388" pos:column="9">SPI_GETWHEELSCROLLLINES</name></cpp:macro>   <cpp:value pos:line="388" pos:column="35">104</cpp:value></cpp:define>
<cpp:endif pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name><op:operator pos:line="390" pos:column="9">::</op:operator><name pos:line="390" pos:column="11">SystemParametersInfo</name></name><argument_list pos:line="390" pos:column="31">(<argument><expr><name pos:line="390" pos:column="32">SPI_GETWHEELSCROLLLINES</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="390" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="390" pos:column="60">&amp;</op:operator><name pos:line="390" pos:column="61">linesPerScroll</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="390" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="391" pos:column="1">#<cpp:directive pos:line="391" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="392" pos:column="9">linesPerScroll</name> <op:operator pos:line="392" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="392" pos:column="26">4</lit:literal></expr>;</expr_stmt>
<cpp:endif pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="394" pos:column="9">lastWheelMouseTime</name><op:operator pos:line="394" pos:column="27">.</op:operator><name pos:line="394" pos:column="28">tv_sec</name></name> <op:operator pos:line="394" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="394" pos:column="37">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="395" pos:column="9">lastWheelMouseTime</name><op:operator pos:line="395" pos:column="27">.</op:operator><name pos:line="395" pos:column="28">tv_usec</name></name> <op:operator pos:line="395" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="395" pos:column="38">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="397" pos:column="9">Initialise</name><argument_list pos:line="397" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<destructor><name><name pos:line="400" pos:column="1">ScintillaGTK</name><op:operator pos:line="400" pos:column="13">::</op:operator>~<name pos:line="400" pos:column="16">ScintillaGTK</name></name><parameter_list pos:line="400" pos:column="28">()</parameter_list> <block pos:line="400" pos:column="31">{
	<expr_stmt><expr><call><name pos:line="401" pos:column="9">g_idle_remove_by_data</name><argument_list pos:line="401" pos:column="30">(<argument><expr><name pos:line="401" pos:column="31">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></destructor>

<function><type><name pos:line="404" pos:column="1">void</name></type> <name><name pos:line="404" pos:column="6">ScintillaGTK</name><op:operator pos:line="404" pos:column="18">::</op:operator><name pos:line="404" pos:column="20">RealizeThis</name></name><parameter_list pos:line="404" pos:column="31">(<param><decl><type><name pos:line="404" pos:column="32">GtkWidget</name> <type:modifier pos:line="404" pos:column="42">*</type:modifier></type><name pos:line="404" pos:column="43">widget</name></decl></param>)</parameter_list> <block pos:line="404" pos:column="51">{
	<comment type="line" pos:line="405" pos:column="9">//Platform::DebugPrintf("ScintillaGTK::realize this\n");</comment>
<cpp:if pos:line="406" pos:column="1">#<cpp:directive pos:line="406" pos:column="2">if</cpp:directive> <expr><call><name pos:line="406" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="406" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="406" pos:column="23">2</lit:literal><op:operator pos:line="406" pos:column="24">,</op:operator><lit:literal type="number" pos:line="406" pos:column="25">20</lit:literal><op:operator pos:line="406" pos:column="27">,</op:operator><lit:literal type="number" pos:line="406" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="407" pos:column="9">gtk_widget_set_realized</name><argument_list pos:line="407" pos:column="32">(<argument><expr><name pos:line="407" pos:column="33">widget</name></expr></argument>, <argument><expr><name pos:line="407" pos:column="41">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="409" pos:column="9">GTK_WIDGET_SET_FLAGS</name><argument_list pos:line="409" pos:column="29">(<argument><expr><name pos:line="409" pos:column="30">widget</name></expr></argument>, <argument><expr><name pos:line="409" pos:column="38">GTK_REALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="410" pos:column="1">#<cpp:directive pos:line="410" pos:column="2">endif</cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="411" pos:column="9">GdkWindowAttr</name></type> <name pos:line="411" pos:column="23">attrs</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="412" pos:column="9">attrs</name><op:operator pos:line="412" pos:column="14">.</op:operator><name pos:line="412" pos:column="15">window_type</name></name> <op:operator pos:line="412" pos:column="27">=</op:operator> <name pos:line="412" pos:column="29">GDK_WINDOW_CHILD</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="413" pos:column="9">GtkAllocation</name></type> <name pos:line="413" pos:column="23">allocation</name></decl>;</decl_stmt>
<cpp:if pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">if</cpp:directive> <expr><call><name pos:line="414" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="414" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="414" pos:column="23">3</lit:literal><op:operator pos:line="414" pos:column="24">,</op:operator><lit:literal type="number" pos:line="414" pos:column="25">0</lit:literal><op:operator pos:line="414" pos:column="26">,</op:operator><lit:literal type="number" pos:line="414" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="415" pos:column="9">gtk_widget_get_allocation</name><argument_list pos:line="415" pos:column="34">(<argument><expr><name pos:line="415" pos:column="35">widget</name></expr></argument>, <argument><expr><op:operator pos:line="415" pos:column="43">&amp;</op:operator><name pos:line="415" pos:column="44">allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="417" pos:column="9">allocation</name> <op:operator pos:line="417" pos:column="20">=</op:operator> <name><name pos:line="417" pos:column="22">widget</name><op:operator pos:line="417" pos:column="28">-&gt;</op:operator><name pos:line="417" pos:column="30">allocation</name></name></expr>;</expr_stmt>
<cpp:endif pos:line="418" pos:column="1">#<cpp:directive pos:line="418" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="419" pos:column="9">attrs</name><op:operator pos:line="419" pos:column="14">.</op:operator><name pos:line="419" pos:column="15">x</name></name> <op:operator pos:line="419" pos:column="17">=</op:operator> <name><name pos:line="419" pos:column="19">allocation</name><op:operator pos:line="419" pos:column="29">.</op:operator><name pos:line="419" pos:column="30">x</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="420" pos:column="9">attrs</name><op:operator pos:line="420" pos:column="14">.</op:operator><name pos:line="420" pos:column="15">y</name></name> <op:operator pos:line="420" pos:column="17">=</op:operator> <name><name pos:line="420" pos:column="19">allocation</name><op:operator pos:line="420" pos:column="29">.</op:operator><name pos:line="420" pos:column="30">y</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="421" pos:column="9">attrs</name><op:operator pos:line="421" pos:column="14">.</op:operator><name pos:line="421" pos:column="15">width</name></name> <op:operator pos:line="421" pos:column="21">=</op:operator> <name><name pos:line="421" pos:column="23">allocation</name><op:operator pos:line="421" pos:column="33">.</op:operator><name pos:line="421" pos:column="34">width</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="422" pos:column="9">attrs</name><op:operator pos:line="422" pos:column="14">.</op:operator><name pos:line="422" pos:column="15">height</name></name> <op:operator pos:line="422" pos:column="22">=</op:operator> <name><name pos:line="422" pos:column="24">allocation</name><op:operator pos:line="422" pos:column="34">.</op:operator><name pos:line="422" pos:column="35">height</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="423" pos:column="9">attrs</name><op:operator pos:line="423" pos:column="14">.</op:operator><name pos:line="423" pos:column="15">wclass</name></name> <op:operator pos:line="423" pos:column="22">=</op:operator> <name pos:line="423" pos:column="24">GDK_INPUT_OUTPUT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="424" pos:column="9">attrs</name><op:operator pos:line="424" pos:column="14">.</op:operator><name pos:line="424" pos:column="15">visual</name></name> <op:operator pos:line="424" pos:column="22">=</op:operator> <call><name pos:line="424" pos:column="24">gtk_widget_get_visual</name><argument_list pos:line="424" pos:column="45">(<argument><expr><name pos:line="424" pos:column="46">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="425" pos:column="5">!</op:operator><call><name pos:line="425" pos:column="6">GTK_CHECK_VERSION</name><argument_list pos:line="425" pos:column="23">(<argument><expr><lit:literal type="number" pos:line="425" pos:column="24">3</lit:literal><op:operator pos:line="425" pos:column="25">,</op:operator><lit:literal type="number" pos:line="425" pos:column="26">0</lit:literal><op:operator pos:line="425" pos:column="27">,</op:operator><lit:literal type="number" pos:line="425" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><name><name pos:line="426" pos:column="9">attrs</name><op:operator pos:line="426" pos:column="14">.</op:operator><name pos:line="426" pos:column="15">colormap</name></name> <op:operator pos:line="426" pos:column="24">=</op:operator> <call><name pos:line="426" pos:column="26">gtk_widget_get_colormap</name><argument_list pos:line="426" pos:column="49">(<argument><expr><name pos:line="426" pos:column="50">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="427" pos:column="1">#<cpp:directive pos:line="427" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="428" pos:column="9">attrs</name><op:operator pos:line="428" pos:column="14">.</op:operator><name pos:line="428" pos:column="15">event_mask</name></name> <op:operator pos:line="428" pos:column="26">=</op:operator> <call><name pos:line="428" pos:column="28">gtk_widget_get_events</name><argument_list pos:line="428" pos:column="49">(<argument><expr><name pos:line="428" pos:column="50">widget</name></expr></argument>)</argument_list></call> <op:operator pos:line="428" pos:column="58">|</op:operator> <name pos:line="428" pos:column="60">GDK_EXPOSURE_MASK</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="429" pos:column="9">GdkCursor</name> <type:modifier pos:line="429" pos:column="19">*</type:modifier></type><name pos:line="429" pos:column="20">cursor</name> <init pos:line="429" pos:column="27">= <expr><call><name pos:line="429" pos:column="29">gdk_cursor_new</name><argument_list pos:line="429" pos:column="43">(<argument><expr><name pos:line="429" pos:column="44">GDK_XTERM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="430" pos:column="9">attrs</name><op:operator pos:line="430" pos:column="14">.</op:operator><name pos:line="430" pos:column="15">cursor</name></name> <op:operator pos:line="430" pos:column="22">=</op:operator> <name pos:line="430" pos:column="24">cursor</name></expr>;</expr_stmt>
<cpp:if pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">if</cpp:directive> <expr><call><name pos:line="431" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="431" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="431" pos:column="23">3</lit:literal><op:operator pos:line="431" pos:column="24">,</op:operator><lit:literal type="number" pos:line="431" pos:column="25">0</lit:literal><op:operator pos:line="431" pos:column="26">,</op:operator><lit:literal type="number" pos:line="431" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="432" pos:column="9">gtk_widget_set_window</name><argument_list pos:line="432" pos:column="30">(<argument><expr><name pos:line="432" pos:column="31">widget</name></expr></argument>, <argument><expr><call><name pos:line="432" pos:column="39">gdk_window_new</name><argument_list pos:line="432" pos:column="53">(<argument><expr><call><name pos:line="432" pos:column="54">gtk_widget_get_parent_window</name><argument_list pos:line="432" pos:column="82">(<argument><expr><name pos:line="432" pos:column="83">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="432" pos:column="92">&amp;</op:operator><name pos:line="432" pos:column="93">attrs</name></expr></argument>,
		<argument><expr><name pos:line="433" pos:column="17">GDK_WA_X</name> <op:operator pos:line="433" pos:column="26">|</op:operator> <name pos:line="433" pos:column="28">GDK_WA_Y</name> <op:operator pos:line="433" pos:column="37">|</op:operator> <name pos:line="433" pos:column="39">GDK_WA_VISUAL</name> <op:operator pos:line="433" pos:column="53">|</op:operator> <name pos:line="433" pos:column="55">GDK_WA_CURSOR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="434" pos:column="9">gdk_window_set_user_data</name><argument_list pos:line="434" pos:column="33">(<argument><expr><call><name pos:line="434" pos:column="34">gtk_widget_get_window</name><argument_list pos:line="434" pos:column="55">(<argument><expr><name pos:line="434" pos:column="56">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="434" pos:column="65">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="435" pos:column="9">// Deprecated: should chain up to parent class' "realize" implementation</comment>
	<expr_stmt><expr><call><name pos:line="436" pos:column="9">gtk_widget_style_attach</name><argument_list pos:line="436" pos:column="32">(<argument><expr><name pos:line="436" pos:column="33">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="437" pos:column="9">gdk_window_set_background</name><argument_list pos:line="437" pos:column="34">(<argument><expr><call><name pos:line="437" pos:column="35">gtk_widget_get_window</name><argument_list pos:line="437" pos:column="56">(<argument><expr><name pos:line="437" pos:column="57">widget</name></expr></argument>)</argument_list></call></expr></argument>,
		<argument><expr><op:operator pos:line="438" pos:column="17">&amp;</op:operator><op:operator pos:line="438" pos:column="18">(</op:operator><call><name pos:line="438" pos:column="19">gtk_widget_get_style</name><argument_list pos:line="438" pos:column="39">(<argument><expr><name pos:line="438" pos:column="40">widget</name></expr></argument>)</argument_list></call><op:operator pos:line="438" pos:column="47">-&gt;</op:operator><name><name pos:line="438" pos:column="49">bg</name><index pos:line="438" pos:column="51">[<expr><name pos:line="438" pos:column="52">GTK_STATE_NORMAL</name></expr>]</index></name><op:operator pos:line="438" pos:column="69">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="439" pos:column="9">gdk_window_show</name><argument_list pos:line="439" pos:column="24">(<argument><expr><call><name pos:line="439" pos:column="25">gtk_widget_get_window</name><argument_list pos:line="439" pos:column="46">(<argument><expr><name pos:line="439" pos:column="47">widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="440" pos:column="9">gdk_cursor_unref</name><argument_list pos:line="440" pos:column="25">(<argument><expr><name pos:line="440" pos:column="26">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name><name pos:line="442" pos:column="9">widget</name><op:operator pos:line="442" pos:column="15">-&gt;</op:operator><name pos:line="442" pos:column="17">window</name></name> <op:operator pos:line="442" pos:column="24">=</op:operator> <call><name pos:line="442" pos:column="26">gdk_window_new</name><argument_list pos:line="442" pos:column="40">(<argument><expr><call><name pos:line="442" pos:column="41">gtk_widget_get_parent_window</name><argument_list pos:line="442" pos:column="69">(<argument><expr><name pos:line="442" pos:column="70">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="442" pos:column="79">&amp;</op:operator><name pos:line="442" pos:column="80">attrs</name></expr></argument>,
		<argument><expr><name pos:line="443" pos:column="17">GDK_WA_X</name> <op:operator pos:line="443" pos:column="26">|</op:operator> <name pos:line="443" pos:column="28">GDK_WA_Y</name> <op:operator pos:line="443" pos:column="37">|</op:operator> <name pos:line="443" pos:column="39">GDK_WA_VISUAL</name> <op:operator pos:line="443" pos:column="53">|</op:operator> <name pos:line="443" pos:column="55">GDK_WA_COLORMAP</name> <op:operator pos:line="443" pos:column="71">|</op:operator> <name pos:line="443" pos:column="73">GDK_WA_CURSOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="444" pos:column="9">gdk_window_set_user_data</name><argument_list pos:line="444" pos:column="33">(<argument><expr><name><name pos:line="444" pos:column="34">widget</name><op:operator pos:line="444" pos:column="40">-&gt;</op:operator><name pos:line="444" pos:column="42">window</name></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="50">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="445" pos:column="9">widget</name><op:operator pos:line="445" pos:column="15">-&gt;</op:operator><name pos:line="445" pos:column="17">style</name></name> <op:operator pos:line="445" pos:column="23">=</op:operator> <call><name pos:line="445" pos:column="25">gtk_style_attach</name><argument_list pos:line="445" pos:column="41">(<argument><expr><name><name pos:line="445" pos:column="42">widget</name><op:operator pos:line="445" pos:column="48">-&gt;</op:operator><name pos:line="445" pos:column="50">style</name></name></expr></argument>, <argument><expr><name><name pos:line="445" pos:column="57">widget</name><op:operator pos:line="445" pos:column="63">-&gt;</op:operator><name pos:line="445" pos:column="65">window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="446" pos:column="9">gdk_window_set_background</name><argument_list pos:line="446" pos:column="34">(<argument><expr><name><name pos:line="446" pos:column="35">widget</name><op:operator pos:line="446" pos:column="41">-&gt;</op:operator><name pos:line="446" pos:column="43">window</name></name></expr></argument>, <argument><expr><op:operator pos:line="446" pos:column="51">&amp;</op:operator><name><name pos:line="446" pos:column="52">widget</name><op:operator pos:line="446" pos:column="58">-&gt;</op:operator><name pos:line="446" pos:column="60">style</name><op:operator pos:line="446" pos:column="65">-&gt;</op:operator><name pos:line="446" pos:column="67">bg</name><index pos:line="446" pos:column="69">[<expr><name pos:line="446" pos:column="70">GTK_STATE_NORMAL</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="447" pos:column="9">gdk_window_show</name><argument_list pos:line="447" pos:column="24">(<argument><expr><name><name pos:line="447" pos:column="25">widget</name><op:operator pos:line="447" pos:column="31">-&gt;</op:operator><name pos:line="447" pos:column="33">window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="448" pos:column="9">gdk_cursor_unref</name><argument_list pos:line="448" pos:column="25">(<argument><expr><name pos:line="448" pos:column="26">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="449" pos:column="1">#<cpp:directive pos:line="449" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name pos:line="450" pos:column="9">wPreedit</name> <op:operator pos:line="450" pos:column="18">=</op:operator> <call><name pos:line="450" pos:column="20">gtk_window_new</name><argument_list pos:line="450" pos:column="34">(<argument><expr><name pos:line="450" pos:column="35">GTK_WINDOW_POPUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="451" pos:column="9">wPreeditDraw</name> <op:operator pos:line="451" pos:column="22">=</op:operator> <call><name pos:line="451" pos:column="24">gtk_drawing_area_new</name><argument_list pos:line="451" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="452" pos:column="9">GtkWidget</name> <type:modifier pos:line="452" pos:column="19">*</type:modifier></type><name pos:line="452" pos:column="20">predrw</name> <init pos:line="452" pos:column="27">= <expr><call><name pos:line="452" pos:column="29">PWidget</name><argument_list pos:line="452" pos:column="36">(<argument><expr><name pos:line="452" pos:column="37">wPreeditDraw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="452" pos:column="57">// No code inside the G_OBJECT macro</comment>
<cpp:if pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="453" pos:column="5">!</op:operator><call><name pos:line="453" pos:column="6">GTK_CHECK_VERSION</name><argument_list pos:line="453" pos:column="23">(<argument><expr><lit:literal type="number" pos:line="453" pos:column="24">3</lit:literal><op:operator pos:line="453" pos:column="25">,</op:operator><lit:literal type="number" pos:line="453" pos:column="26">0</lit:literal><op:operator pos:line="453" pos:column="27">,</op:operator><lit:literal type="number" pos:line="453" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="454" pos:column="9">g_signal_connect</name><argument_list pos:line="454" pos:column="25">(<argument><expr><call><name pos:line="454" pos:column="26">G_OBJECT</name><argument_list pos:line="454" pos:column="34">(<argument><expr><name pos:line="454" pos:column="35">predrw</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="454" pos:column="44">"expose_event"</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="455" pos:column="17">G_CALLBACK</name><argument_list pos:line="455" pos:column="27">(<argument><expr><name pos:line="455" pos:column="28">ExposePreedit</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="455" pos:column="44">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="457" pos:column="9">gtk_container_add</name><argument_list pos:line="457" pos:column="26">(<argument><expr><call><name pos:line="457" pos:column="27">GTK_CONTAINER</name><argument_list pos:line="457" pos:column="40">(<argument><expr><call><name pos:line="457" pos:column="41">PWidget</name><argument_list pos:line="457" pos:column="48">(<argument><expr><name pos:line="457" pos:column="49">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="457" pos:column="61">predrw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="458" pos:column="9">gtk_widget_realize</name><argument_list pos:line="458" pos:column="27">(<argument><expr><call><name pos:line="458" pos:column="28">PWidget</name><argument_list pos:line="458" pos:column="35">(<argument><expr><name pos:line="458" pos:column="36">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="459" pos:column="9">gtk_widget_realize</name><argument_list pos:line="459" pos:column="27">(<argument><expr><name pos:line="459" pos:column="28">predrw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="460" pos:column="9">gtk_widget_show</name><argument_list pos:line="460" pos:column="24">(<argument><expr><name pos:line="460" pos:column="25">predrw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="462" pos:column="9">im_context</name> <op:operator pos:line="462" pos:column="20">=</op:operator> <call><name pos:line="462" pos:column="22">gtk_im_multicontext_new</name><argument_list pos:line="462" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="463" pos:column="9">g_signal_connect</name><argument_list pos:line="463" pos:column="25">(<argument><expr><call><name pos:line="463" pos:column="26">G_OBJECT</name><argument_list pos:line="463" pos:column="34">(<argument><expr><name pos:line="463" pos:column="35">im_context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="463" pos:column="48">"commit"</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="464" pos:column="17">G_CALLBACK</name><argument_list pos:line="464" pos:column="27">(<argument><expr><name pos:line="464" pos:column="28">Commit</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="464" pos:column="37">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="465" pos:column="9">g_signal_connect</name><argument_list pos:line="465" pos:column="25">(<argument><expr><call><name pos:line="465" pos:column="26">G_OBJECT</name><argument_list pos:line="465" pos:column="34">(<argument><expr><name pos:line="465" pos:column="35">im_context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="465" pos:column="48">"preedit_changed"</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="466" pos:column="17">G_CALLBACK</name><argument_list pos:line="466" pos:column="27">(<argument><expr><name pos:line="466" pos:column="28">PreeditChanged</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="466" pos:column="45">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="467" pos:column="9">gtk_im_context_set_client_window</name><argument_list pos:line="467" pos:column="41">(<argument><expr><name pos:line="467" pos:column="42">im_context</name></expr></argument>, <argument><expr><call><name pos:line="467" pos:column="54">WindowFromWidget</name><argument_list pos:line="467" pos:column="70">(<argument><expr><name pos:line="467" pos:column="71">widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="468" pos:column="9">GtkWidget</name> <type:modifier pos:line="468" pos:column="19">*</type:modifier></type><name pos:line="468" pos:column="20">widtxt</name> <init pos:line="468" pos:column="27">= <expr><call><name pos:line="468" pos:column="29">PWidget</name><argument_list pos:line="468" pos:column="36">(<argument><expr><name pos:line="468" pos:column="37">wText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="468" pos:column="49">//	// No code inside the G_OBJECT macro</comment>
	<expr_stmt><expr><call><name pos:line="469" pos:column="9">g_signal_connect_after</name><argument_list pos:line="469" pos:column="31">(<argument><expr><call><name pos:line="469" pos:column="32">G_OBJECT</name><argument_list pos:line="469" pos:column="40">(<argument><expr><name pos:line="469" pos:column="41">widtxt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="469" pos:column="50">"style_set"</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="470" pos:column="17">G_CALLBACK</name><argument_list pos:line="470" pos:column="27">(<argument><expr><name><name pos:line="470" pos:column="28">ScintillaGTK</name><op:operator pos:line="470" pos:column="40">::</op:operator><name pos:line="470" pos:column="42">StyleSetText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="470" pos:column="57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="471" pos:column="9">g_signal_connect_after</name><argument_list pos:line="471" pos:column="31">(<argument><expr><call><name pos:line="471" pos:column="32">G_OBJECT</name><argument_list pos:line="471" pos:column="40">(<argument><expr><name pos:line="471" pos:column="41">widtxt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="471" pos:column="50">"realize"</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="472" pos:column="17">G_CALLBACK</name><argument_list pos:line="472" pos:column="27">(<argument><expr><name><name pos:line="472" pos:column="28">ScintillaGTK</name><op:operator pos:line="472" pos:column="40">::</op:operator><name pos:line="472" pos:column="42">RealizeText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="472" pos:column="56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="473" pos:column="9">gtk_widget_realize</name><argument_list pos:line="473" pos:column="27">(<argument><expr><name pos:line="473" pos:column="28">widtxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="474" pos:column="9">gtk_widget_realize</name><argument_list pos:line="474" pos:column="27">(<argument><expr><call><name pos:line="474" pos:column="28">PWidget</name><argument_list pos:line="474" pos:column="35">(<argument><expr><name pos:line="474" pos:column="36">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="475" pos:column="9">gtk_widget_realize</name><argument_list pos:line="475" pos:column="27">(<argument><expr><call><name pos:line="475" pos:column="28">PWidget</name><argument_list pos:line="475" pos:column="35">(<argument><expr><name pos:line="475" pos:column="36">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="477" pos:column="9">cursor</name> <op:operator pos:line="477" pos:column="16">=</op:operator> <call><name pos:line="477" pos:column="18">gdk_cursor_new</name><argument_list pos:line="477" pos:column="32">(<argument><expr><name pos:line="477" pos:column="33">GDK_XTERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="478" pos:column="9">gdk_window_set_cursor</name><argument_list pos:line="478" pos:column="30">(<argument><expr><call><name pos:line="478" pos:column="31">PWindow</name><argument_list pos:line="478" pos:column="38">(<argument><expr><name pos:line="478" pos:column="39">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="478" pos:column="47">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="479" pos:column="9">gdk_cursor_unref</name><argument_list pos:line="479" pos:column="25">(<argument><expr><name pos:line="479" pos:column="26">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="481" pos:column="9">cursor</name> <op:operator pos:line="481" pos:column="16">=</op:operator> <call><name pos:line="481" pos:column="18">gdk_cursor_new</name><argument_list pos:line="481" pos:column="32">(<argument><expr><name pos:line="481" pos:column="33">GDK_LEFT_PTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="482" pos:column="9">gdk_window_set_cursor</name><argument_list pos:line="482" pos:column="30">(<argument><expr><call><name pos:line="482" pos:column="31">PWindow</name><argument_list pos:line="482" pos:column="38">(<argument><expr><name pos:line="482" pos:column="39">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="482" pos:column="52">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="483" pos:column="9">gdk_cursor_unref</name><argument_list pos:line="483" pos:column="25">(<argument><expr><name pos:line="483" pos:column="26">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="485" pos:column="9">cursor</name> <op:operator pos:line="485" pos:column="16">=</op:operator> <call><name pos:line="485" pos:column="18">gdk_cursor_new</name><argument_list pos:line="485" pos:column="32">(<argument><expr><name pos:line="485" pos:column="33">GDK_LEFT_PTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="486" pos:column="9">gdk_window_set_cursor</name><argument_list pos:line="486" pos:column="30">(<argument><expr><call><name pos:line="486" pos:column="31">PWindow</name><argument_list pos:line="486" pos:column="38">(<argument><expr><name pos:line="486" pos:column="39">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="486" pos:column="52">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="487" pos:column="9">gdk_cursor_unref</name><argument_list pos:line="487" pos:column="25">(<argument><expr><name pos:line="487" pos:column="26">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="489" pos:column="9">gtk_selection_add_targets</name><argument_list pos:line="489" pos:column="34">(<argument><expr><name pos:line="489" pos:column="35">widget</name></expr></argument>, <argument><expr><name pos:line="489" pos:column="43">GDK_SELECTION_PRIMARY</name></expr></argument>,
	                          <argument><expr><name pos:line="490" pos:column="35">clipboardCopyTargets</name></expr></argument>, <argument><expr><name pos:line="490" pos:column="57">nClipboardCopyTargets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifndef pos:line="491" pos:column="1">#<cpp:directive pos:line="491" pos:column="2">ifndef</cpp:directive> <name pos:line="491" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
	<expr_stmt><expr><call><name pos:line="492" pos:column="9">gtk_selection_add_targets</name><argument_list pos:line="492" pos:column="34">(<argument><expr><name pos:line="492" pos:column="35">widget</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="43">atomClipboard</name></expr></argument>,
	                          <argument><expr><name pos:line="493" pos:column="35">clipboardPasteTargets</name></expr></argument>, <argument><expr><name pos:line="493" pos:column="58">nClipboardPasteTargets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="494" pos:column="1">#<cpp:directive pos:line="494" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<function><type><name pos:line="497" pos:column="1">void</name></type> <name><name pos:line="497" pos:column="6">ScintillaGTK</name><op:operator pos:line="497" pos:column="18">::</op:operator><name pos:line="497" pos:column="20">Realize</name></name><parameter_list pos:line="497" pos:column="27">(<param><decl><type><name pos:line="497" pos:column="28">GtkWidget</name> <type:modifier pos:line="497" pos:column="38">*</type:modifier></type><name pos:line="497" pos:column="39">widget</name></decl></param>)</parameter_list> <block pos:line="497" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="498" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="498" pos:column="22">*</type:modifier></type><name pos:line="498" pos:column="23">sciThis</name> <init pos:line="498" pos:column="31">= <expr><call><name pos:line="498" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="498" pos:column="52">(<argument><expr><name pos:line="498" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="499" pos:column="9">sciThis</name><op:operator pos:line="499" pos:column="16">-&gt;</op:operator><name pos:line="499" pos:column="18">RealizeThis</name></name><argument_list pos:line="499" pos:column="29">(<argument><expr><name pos:line="499" pos:column="30">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="502" pos:column="1">void</name></type> <name><name pos:line="502" pos:column="6">ScintillaGTK</name><op:operator pos:line="502" pos:column="18">::</op:operator><name pos:line="502" pos:column="20">UnRealizeThis</name></name><parameter_list pos:line="502" pos:column="33">(<param><decl><type><name pos:line="502" pos:column="34">GtkWidget</name> <type:modifier pos:line="502" pos:column="44">*</type:modifier></type><name pos:line="502" pos:column="45">widget</name></decl></param>)</parameter_list> <block pos:line="502" pos:column="53">{
	<try pos:line="503" pos:column="9">try <block pos:line="503" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="504" pos:column="17">gtk_selection_clear_targets</name><argument_list pos:line="504" pos:column="44">(<argument><expr><name pos:line="504" pos:column="45">widget</name></expr></argument>, <argument><expr><name pos:line="504" pos:column="53">GDK_SELECTION_PRIMARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifndef pos:line="505" pos:column="1">#<cpp:directive pos:line="505" pos:column="2">ifndef</cpp:directive> <name pos:line="505" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
		<expr_stmt><expr><call><name pos:line="506" pos:column="17">gtk_selection_clear_targets</name><argument_list pos:line="506" pos:column="44">(<argument><expr><name pos:line="506" pos:column="45">widget</name></expr></argument>, <argument><expr><name pos:line="506" pos:column="53">atomClipboard</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">endif</cpp:directive></cpp:endif>

		<if pos:line="509" pos:column="17">if <condition pos:line="509" pos:column="20">(<expr><call><name pos:line="509" pos:column="21">IS_WIDGET_MAPPED</name><argument_list pos:line="509" pos:column="37">(<argument><expr><name pos:line="509" pos:column="38">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="509" pos:column="46"> <block pos:line="509" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="510" pos:column="25">gtk_widget_unmap</name><argument_list pos:line="510" pos:column="41">(<argument><expr><name pos:line="510" pos:column="42">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
<cpp:if pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">if</cpp:directive> <expr><call><name pos:line="512" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="512" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="512" pos:column="23">2</lit:literal><op:operator pos:line="512" pos:column="24">,</op:operator><lit:literal type="number" pos:line="512" pos:column="25">20</lit:literal><op:operator pos:line="512" pos:column="27">,</op:operator><lit:literal type="number" pos:line="512" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="513" pos:column="17">gtk_widget_set_realized</name><argument_list pos:line="513" pos:column="40">(<argument><expr><name pos:line="513" pos:column="41">widget</name></expr></argument>, <argument><expr><name pos:line="513" pos:column="49">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="515" pos:column="17">GTK_WIDGET_UNSET_FLAGS</name><argument_list pos:line="515" pos:column="39">(<argument><expr><name pos:line="515" pos:column="40">widget</name></expr></argument>, <argument><expr><name pos:line="515" pos:column="48">GTK_REALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="517" pos:column="17">gtk_widget_unrealize</name><argument_list pos:line="517" pos:column="37">(<argument><expr><call><name pos:line="517" pos:column="38">PWidget</name><argument_list pos:line="517" pos:column="45">(<argument><expr><name pos:line="517" pos:column="46">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="518" pos:column="17">gtk_widget_unrealize</name><argument_list pos:line="518" pos:column="37">(<argument><expr><call><name pos:line="518" pos:column="38">PWidget</name><argument_list pos:line="518" pos:column="45">(<argument><expr><name pos:line="518" pos:column="46">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="519" pos:column="17">gtk_widget_unrealize</name><argument_list pos:line="519" pos:column="37">(<argument><expr><call><name pos:line="519" pos:column="38">PWidget</name><argument_list pos:line="519" pos:column="45">(<argument><expr><name pos:line="519" pos:column="46">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="520" pos:column="17">gtk_widget_unrealize</name><argument_list pos:line="520" pos:column="37">(<argument><expr><call><name pos:line="520" pos:column="38">PWidget</name><argument_list pos:line="520" pos:column="45">(<argument><expr><name pos:line="520" pos:column="46">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="521" pos:column="17">gtk_widget_unrealize</name><argument_list pos:line="521" pos:column="37">(<argument><expr><call><name pos:line="521" pos:column="38">PWidget</name><argument_list pos:line="521" pos:column="45">(<argument><expr><name pos:line="521" pos:column="46">wPreeditDraw</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="522" pos:column="17">g_object_unref</name><argument_list pos:line="522" pos:column="31">(<argument><expr><name pos:line="522" pos:column="32">im_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="523" pos:column="17">im_context</name> <op:operator pos:line="523" pos:column="28">=</op:operator> <name pos:line="523" pos:column="30">NULL</name></expr>;</expr_stmt>
		<if pos:line="524" pos:column="17">if <condition pos:line="524" pos:column="20">(<expr><call><name pos:line="524" pos:column="21">GTK_WIDGET_CLASS</name><argument_list pos:line="524" pos:column="37">(<argument><expr><name pos:line="524" pos:column="38">parentClass</name></expr></argument>)</argument_list></call><op:operator pos:line="524" pos:column="50">-&gt;</op:operator><name pos:line="524" pos:column="52">unrealize</name></expr>)</condition><then pos:line="524" pos:column="62">
			<expr_stmt><expr><call><name pos:line="525" pos:column="25">GTK_WIDGET_CLASS</name><argument_list pos:line="525" pos:column="41">(<argument><expr><name pos:line="525" pos:column="42">parentClass</name></expr></argument>)</argument_list></call><op:operator pos:line="525" pos:column="54">-&gt;</op:operator><call><name pos:line="525" pos:column="56">unrealize</name><argument_list pos:line="525" pos:column="65">(<argument><expr><name pos:line="525" pos:column="66">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><call><name pos:line="527" pos:column="17">Finalise</name><argument_list pos:line="527" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="528" pos:column="11">catch <parameter_list pos:line="528" pos:column="17">(<param><decl><type><type:modifier pos:line="528" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="528" pos:column="23">{
		<expr_stmt><expr><name pos:line="529" pos:column="17">errorStatus</name> <op:operator pos:line="529" pos:column="29">=</op:operator> <name pos:line="529" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="533" pos:column="1">void</name></type> <name><name pos:line="533" pos:column="6">ScintillaGTK</name><op:operator pos:line="533" pos:column="18">::</op:operator><name pos:line="533" pos:column="20">UnRealize</name></name><parameter_list pos:line="533" pos:column="29">(<param><decl><type><name pos:line="533" pos:column="30">GtkWidget</name> <type:modifier pos:line="533" pos:column="40">*</type:modifier></type><name pos:line="533" pos:column="41">widget</name></decl></param>)</parameter_list> <block pos:line="533" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="534" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="534" pos:column="22">*</type:modifier></type><name pos:line="534" pos:column="23">sciThis</name> <init pos:line="534" pos:column="31">= <expr><call><name pos:line="534" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="534" pos:column="52">(<argument><expr><name pos:line="534" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="535" pos:column="9">sciThis</name><op:operator pos:line="535" pos:column="16">-&gt;</op:operator><name pos:line="535" pos:column="18">UnRealizeThis</name></name><argument_list pos:line="535" pos:column="31">(<argument><expr><name pos:line="535" pos:column="32">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="538" pos:column="1">static</specifier> <name pos:line="538" pos:column="8">void</name></type> <name pos:line="538" pos:column="13">MapWidget</name><parameter_list pos:line="538" pos:column="22">(<param><decl><type><name pos:line="538" pos:column="23">GtkWidget</name> <type:modifier pos:line="538" pos:column="33">*</type:modifier></type><name pos:line="538" pos:column="34">widget</name></decl></param>)</parameter_list> <block pos:line="538" pos:column="42">{
	<if pos:line="539" pos:column="9">if <condition pos:line="539" pos:column="12">(<expr><name pos:line="539" pos:column="13">widget</name> <op:operator pos:line="539" pos:column="20">&amp;&amp;</op:operator>
	        <call><name pos:line="540" pos:column="17">IS_WIDGET_VISIBLE</name><argument_list pos:line="540" pos:column="34">(<argument><expr><name pos:line="540" pos:column="35">widget</name></expr></argument>)</argument_list></call> <op:operator pos:line="540" pos:column="43">&amp;&amp;</op:operator>
	        <op:operator pos:line="541" pos:column="17">!</op:operator><call><name pos:line="541" pos:column="18">IS_WIDGET_MAPPED</name><argument_list pos:line="541" pos:column="34">(<argument><expr><name pos:line="541" pos:column="35">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="541" pos:column="43"> <block pos:line="541" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="542" pos:column="17">gtk_widget_map</name><argument_list pos:line="542" pos:column="31">(<argument><expr><name pos:line="542" pos:column="32">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="546" pos:column="1">void</name></type> <name><name pos:line="546" pos:column="6">ScintillaGTK</name><op:operator pos:line="546" pos:column="18">::</op:operator><name pos:line="546" pos:column="20">MapThis</name></name><parameter_list pos:line="546" pos:column="27">()</parameter_list> <block pos:line="546" pos:column="30">{
	<try pos:line="547" pos:column="9">try <block pos:line="547" pos:column="13">{
		<comment type="line" pos:line="548" pos:column="17">//Platform::DebugPrintf("ScintillaGTK::map this\n");</comment>
<cpp:if pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">if</cpp:directive> <expr><call><name pos:line="549" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="549" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="549" pos:column="23">2</lit:literal><op:operator pos:line="549" pos:column="24">,</op:operator><lit:literal type="number" pos:line="549" pos:column="25">20</lit:literal><op:operator pos:line="549" pos:column="27">,</op:operator><lit:literal type="number" pos:line="549" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="550" pos:column="17">gtk_widget_set_mapped</name><argument_list pos:line="550" pos:column="38">(<argument><expr><call><name pos:line="550" pos:column="39">PWidget</name><argument_list pos:line="550" pos:column="46">(<argument><expr><name pos:line="550" pos:column="47">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="550" pos:column="55">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="551" pos:column="1">#<cpp:directive pos:line="551" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="552" pos:column="17">GTK_WIDGET_SET_FLAGS</name><argument_list pos:line="552" pos:column="37">(<argument><expr><call><name pos:line="552" pos:column="38">PWidget</name><argument_list pos:line="552" pos:column="45">(<argument><expr><name pos:line="552" pos:column="46">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="552" pos:column="54">GTK_MAPPED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="553" pos:column="1">#<cpp:directive pos:line="553" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="554" pos:column="17">MapWidget</name><argument_list pos:line="554" pos:column="26">(<argument><expr><call><name pos:line="554" pos:column="27">PWidget</name><argument_list pos:line="554" pos:column="34">(<argument><expr><name pos:line="554" pos:column="35">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="555" pos:column="17">MapWidget</name><argument_list pos:line="555" pos:column="26">(<argument><expr><call><name pos:line="555" pos:column="27">PWidget</name><argument_list pos:line="555" pos:column="34">(<argument><expr><name pos:line="555" pos:column="35">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="556" pos:column="17">MapWidget</name><argument_list pos:line="556" pos:column="26">(<argument><expr><call><name pos:line="556" pos:column="27">PWidget</name><argument_list pos:line="556" pos:column="34">(<argument><expr><name pos:line="556" pos:column="35">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="557" pos:column="17">wMain</name><op:operator pos:line="557" pos:column="22">.</op:operator><name pos:line="557" pos:column="23">SetCursor</name></name><argument_list pos:line="557" pos:column="32">(<argument><expr><name><name pos:line="557" pos:column="33">Window</name><op:operator pos:line="557" pos:column="39">::</op:operator><name pos:line="557" pos:column="41">cursorArrow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="558" pos:column="17">scrollbarv</name><op:operator pos:line="558" pos:column="27">.</op:operator><name pos:line="558" pos:column="28">SetCursor</name></name><argument_list pos:line="558" pos:column="37">(<argument><expr><name><name pos:line="558" pos:column="38">Window</name><op:operator pos:line="558" pos:column="44">::</op:operator><name pos:line="558" pos:column="46">cursorArrow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="559" pos:column="17">scrollbarh</name><op:operator pos:line="559" pos:column="27">.</op:operator><name pos:line="559" pos:column="28">SetCursor</name></name><argument_list pos:line="559" pos:column="37">(<argument><expr><name><name pos:line="559" pos:column="38">Window</name><op:operator pos:line="559" pos:column="44">::</op:operator><name pos:line="559" pos:column="46">cursorArrow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="560" pos:column="17">ChangeSize</name><argument_list pos:line="560" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="561" pos:column="17">gdk_window_show</name><argument_list pos:line="561" pos:column="32">(<argument><expr><call><name pos:line="561" pos:column="33">PWindow</name><argument_list pos:line="561" pos:column="40">(<argument><expr><name pos:line="561" pos:column="41">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="562" pos:column="11">catch <parameter_list pos:line="562" pos:column="17">(<param><decl><type><type:modifier pos:line="562" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="562" pos:column="23">{
		<expr_stmt><expr><name pos:line="563" pos:column="17">errorStatus</name> <op:operator pos:line="563" pos:column="29">=</op:operator> <name pos:line="563" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="567" pos:column="1">void</name></type> <name><name pos:line="567" pos:column="6">ScintillaGTK</name><op:operator pos:line="567" pos:column="18">::</op:operator><name pos:line="567" pos:column="20">Map</name></name><parameter_list pos:line="567" pos:column="23">(<param><decl><type><name pos:line="567" pos:column="24">GtkWidget</name> <type:modifier pos:line="567" pos:column="34">*</type:modifier></type><name pos:line="567" pos:column="35">widget</name></decl></param>)</parameter_list> <block pos:line="567" pos:column="43">{
	<decl_stmt><decl><type><name pos:line="568" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="568" pos:column="22">*</type:modifier></type><name pos:line="568" pos:column="23">sciThis</name> <init pos:line="568" pos:column="31">= <expr><call><name pos:line="568" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="568" pos:column="52">(<argument><expr><name pos:line="568" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="569" pos:column="9">sciThis</name><op:operator pos:line="569" pos:column="16">-&gt;</op:operator><name pos:line="569" pos:column="18">MapThis</name></name><argument_list pos:line="569" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="572" pos:column="1">void</name></type> <name><name pos:line="572" pos:column="6">ScintillaGTK</name><op:operator pos:line="572" pos:column="18">::</op:operator><name pos:line="572" pos:column="20">UnMapThis</name></name><parameter_list pos:line="572" pos:column="29">()</parameter_list> <block pos:line="572" pos:column="32">{
	<try pos:line="573" pos:column="9">try <block pos:line="573" pos:column="13">{
		<comment type="line" pos:line="574" pos:column="17">//Platform::DebugPrintf("ScintillaGTK::unmap this\n");</comment>
<cpp:if pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">if</cpp:directive> <expr><call><name pos:line="575" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="575" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="575" pos:column="23">2</lit:literal><op:operator pos:line="575" pos:column="24">,</op:operator><lit:literal type="number" pos:line="575" pos:column="25">20</lit:literal><op:operator pos:line="575" pos:column="27">,</op:operator><lit:literal type="number" pos:line="575" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="576" pos:column="17">gtk_widget_set_mapped</name><argument_list pos:line="576" pos:column="38">(<argument><expr><call><name pos:line="576" pos:column="39">PWidget</name><argument_list pos:line="576" pos:column="46">(<argument><expr><name pos:line="576" pos:column="47">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="576" pos:column="55">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="577" pos:column="1">#<cpp:directive pos:line="577" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="578" pos:column="17">GTK_WIDGET_UNSET_FLAGS</name><argument_list pos:line="578" pos:column="39">(<argument><expr><call><name pos:line="578" pos:column="40">PWidget</name><argument_list pos:line="578" pos:column="47">(<argument><expr><name pos:line="578" pos:column="48">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="578" pos:column="56">GTK_MAPPED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="580" pos:column="17">DropGraphics</name><argument_list pos:line="580" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="581" pos:column="17">gdk_window_hide</name><argument_list pos:line="581" pos:column="32">(<argument><expr><call><name pos:line="581" pos:column="33">PWindow</name><argument_list pos:line="581" pos:column="40">(<argument><expr><name pos:line="581" pos:column="41">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="582" pos:column="17">gtk_widget_unmap</name><argument_list pos:line="582" pos:column="33">(<argument><expr><call><name pos:line="582" pos:column="34">PWidget</name><argument_list pos:line="582" pos:column="41">(<argument><expr><name pos:line="582" pos:column="42">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="583" pos:column="17">gtk_widget_unmap</name><argument_list pos:line="583" pos:column="33">(<argument><expr><call><name pos:line="583" pos:column="34">PWidget</name><argument_list pos:line="583" pos:column="41">(<argument><expr><name pos:line="583" pos:column="42">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="584" pos:column="17">gtk_widget_unmap</name><argument_list pos:line="584" pos:column="33">(<argument><expr><call><name pos:line="584" pos:column="34">PWidget</name><argument_list pos:line="584" pos:column="41">(<argument><expr><name pos:line="584" pos:column="42">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="585" pos:column="11">catch <parameter_list pos:line="585" pos:column="17">(<param><decl><type><type:modifier pos:line="585" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="585" pos:column="23">{
		<expr_stmt><expr><name pos:line="586" pos:column="17">errorStatus</name> <op:operator pos:line="586" pos:column="29">=</op:operator> <name pos:line="586" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="590" pos:column="1">void</name></type> <name><name pos:line="590" pos:column="6">ScintillaGTK</name><op:operator pos:line="590" pos:column="18">::</op:operator><name pos:line="590" pos:column="20">UnMap</name></name><parameter_list pos:line="590" pos:column="25">(<param><decl><type><name pos:line="590" pos:column="26">GtkWidget</name> <type:modifier pos:line="590" pos:column="36">*</type:modifier></type><name pos:line="590" pos:column="37">widget</name></decl></param>)</parameter_list> <block pos:line="590" pos:column="45">{
	<decl_stmt><decl><type><name pos:line="591" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="591" pos:column="22">*</type:modifier></type><name pos:line="591" pos:column="23">sciThis</name> <init pos:line="591" pos:column="31">= <expr><call><name pos:line="591" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="591" pos:column="52">(<argument><expr><name pos:line="591" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="592" pos:column="9">sciThis</name><op:operator pos:line="592" pos:column="16">-&gt;</op:operator><name pos:line="592" pos:column="18">UnMapThis</name></name><argument_list pos:line="592" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="595" pos:column="1">void</name></type> <name><name pos:line="595" pos:column="6">ScintillaGTK</name><op:operator pos:line="595" pos:column="18">::</op:operator><name pos:line="595" pos:column="20">ForAll</name></name><parameter_list pos:line="595" pos:column="26">(<param><decl><type><name pos:line="595" pos:column="27">GtkCallback</name></type> <name pos:line="595" pos:column="39">callback</name></decl></param>, <param><decl><type><name pos:line="595" pos:column="49">gpointer</name></type> <name pos:line="595" pos:column="58">callback_data</name></decl></param>)</parameter_list> <block pos:line="595" pos:column="73">{
	<try pos:line="596" pos:column="9">try <block pos:line="596" pos:column="13">{
		<expr_stmt><expr><call pos:line="597" pos:column="17">(<type:modifier pos:line="597" pos:column="18">*</type:modifier><name pos:line="597" pos:column="19">callback</name>) <argument_list pos:line="597" pos:column="29">(<argument><expr><call><name pos:line="597" pos:column="30">PWidget</name><argument_list pos:line="597" pos:column="37">(<argument><expr><name pos:line="597" pos:column="38">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="597" pos:column="46">callback_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call pos:line="598" pos:column="17">(<type:modifier pos:line="598" pos:column="18">*</type:modifier><name pos:line="598" pos:column="19">callback</name>) <argument_list pos:line="598" pos:column="29">(<argument><expr><call><name pos:line="598" pos:column="30">PWidget</name><argument_list pos:line="598" pos:column="37">(<argument><expr><name pos:line="598" pos:column="38">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="598" pos:column="51">callback_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call pos:line="599" pos:column="17">(<type:modifier pos:line="599" pos:column="18">*</type:modifier><name pos:line="599" pos:column="19">callback</name>) <argument_list pos:line="599" pos:column="29">(<argument><expr><call><name pos:line="599" pos:column="30">PWidget</name><argument_list pos:line="599" pos:column="37">(<argument><expr><name pos:line="599" pos:column="38">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="599" pos:column="51">callback_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="600" pos:column="11">catch <parameter_list pos:line="600" pos:column="17">(<param><decl><type><type:modifier pos:line="600" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="600" pos:column="23">{
		<expr_stmt><expr><name pos:line="601" pos:column="17">errorStatus</name> <op:operator pos:line="601" pos:column="29">=</op:operator> <name pos:line="601" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="605" pos:column="1">void</name></type> <name><name pos:line="605" pos:column="6">ScintillaGTK</name><op:operator pos:line="605" pos:column="18">::</op:operator><name pos:line="605" pos:column="20">MainForAll</name></name><parameter_list pos:line="605" pos:column="30">(<param><decl><type><name pos:line="605" pos:column="31">GtkContainer</name> <type:modifier pos:line="605" pos:column="44">*</type:modifier></type><name pos:line="605" pos:column="45">container</name></decl></param>, <param><decl><type><name pos:line="605" pos:column="56">gboolean</name></type> <name pos:line="605" pos:column="65">include_internals</name></decl></param>, <param><decl><type><name pos:line="605" pos:column="84">GtkCallback</name></type> <name pos:line="605" pos:column="96">callback</name></decl></param>, <param><decl><type><name pos:line="605" pos:column="106">gpointer</name></type> <name pos:line="605" pos:column="115">callback_data</name></decl></param>)</parameter_list> <block pos:line="605" pos:column="130">{
	<decl_stmt><decl><type><name pos:line="606" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="606" pos:column="22">*</type:modifier></type><name pos:line="606" pos:column="23">sciThis</name> <init pos:line="606" pos:column="31">= <expr><call><name pos:line="606" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="606" pos:column="52">(<argument><expr><op:operator pos:line="606" pos:column="53">(</op:operator><name pos:line="606" pos:column="54">GtkWidget</name> <op:operator pos:line="606" pos:column="64">*</op:operator><op:operator pos:line="606" pos:column="65">)</op:operator><name pos:line="606" pos:column="66">container</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="608" pos:column="9">if <condition pos:line="608" pos:column="12">(<expr><name pos:line="608" pos:column="13">callback</name> <op:operator pos:line="608" pos:column="22">!=</op:operator> <name pos:line="608" pos:column="25">NULL</name> <op:operator pos:line="608" pos:column="30">&amp;&amp;</op:operator> <name pos:line="608" pos:column="33">include_internals</name></expr>)</condition><then pos:line="608" pos:column="51"> <block pos:line="608" pos:column="52">{
		<expr_stmt><expr><call><name><name pos:line="609" pos:column="17">sciThis</name><op:operator pos:line="609" pos:column="24">-&gt;</op:operator><name pos:line="609" pos:column="26">ForAll</name></name><argument_list pos:line="609" pos:column="32">(<argument><expr><name pos:line="609" pos:column="33">callback</name></expr></argument>, <argument><expr><name pos:line="609" pos:column="43">callback_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="613" pos:column="1">gint</name></type> <name><name pos:line="613" pos:column="6">ScintillaGTK</name><op:operator pos:line="613" pos:column="18">::</op:operator><name pos:line="613" pos:column="20">FocusInThis</name></name><parameter_list pos:line="613" pos:column="31">(<param><decl><type><name pos:line="613" pos:column="32">GtkWidget</name> <type:modifier pos:line="613" pos:column="42">*</type:modifier></type><name pos:line="613" pos:column="43">widget</name></decl></param>)</parameter_list> <block pos:line="613" pos:column="51">{
	<try pos:line="614" pos:column="9">try <block pos:line="614" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="615" pos:column="17">SetFocusState</name><argument_list pos:line="615" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="615" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="616" pos:column="17">if <condition pos:line="616" pos:column="20">(<expr><name pos:line="616" pos:column="21">im_context</name> <op:operator pos:line="616" pos:column="32">!=</op:operator> <name pos:line="616" pos:column="35">NULL</name></expr>)</condition><then pos:line="616" pos:column="40"> <block pos:line="616" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="617" pos:column="25">gchar</name> <type:modifier pos:line="617" pos:column="31">*</type:modifier></type><name pos:line="617" pos:column="32">str</name> <init pos:line="617" pos:column="36">= <expr><name pos:line="617" pos:column="38">NULL</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="618" pos:column="25">gint</name></type> <name pos:line="618" pos:column="30">cursor_pos</name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name pos:line="620" pos:column="25">gtk_im_context_get_preedit_string</name><argument_list pos:line="620" pos:column="58">(<argument><expr><name pos:line="620" pos:column="59">im_context</name></expr></argument>, <argument><expr><op:operator pos:line="620" pos:column="71">&amp;</op:operator><name pos:line="620" pos:column="72">str</name></expr></argument>, <argument><expr><name pos:line="620" pos:column="77">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="620" pos:column="83">&amp;</op:operator><name pos:line="620" pos:column="84">cursor_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="621" pos:column="25">if <condition pos:line="621" pos:column="28">(<expr><call><name pos:line="621" pos:column="29">PWidget</name><argument_list pos:line="621" pos:column="36">(<argument><expr><name pos:line="621" pos:column="37">wPreedit</name></expr></argument>)</argument_list></call> <op:operator pos:line="621" pos:column="47">!=</op:operator> <name pos:line="621" pos:column="50">NULL</name></expr>)</condition><then pos:line="621" pos:column="55"> <block pos:line="621" pos:column="56">{
				<if pos:line="622" pos:column="33">if <condition pos:line="622" pos:column="36">(<expr><call><name pos:line="622" pos:column="37">strlen</name><argument_list pos:line="622" pos:column="43">(<argument><expr><name pos:line="622" pos:column="44">str</name></expr></argument>)</argument_list></call> <op:operator pos:line="622" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="622" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="622" pos:column="53"> <block pos:line="622" pos:column="54">{
					<expr_stmt><expr><call><name pos:line="623" pos:column="41">gtk_widget_show</name><argument_list pos:line="623" pos:column="56">(<argument><expr><call><name pos:line="623" pos:column="57">PWidget</name><argument_list pos:line="623" pos:column="64">(<argument><expr><name pos:line="623" pos:column="65">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="624" pos:column="35">else <block pos:line="624" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="625" pos:column="41">gtk_widget_hide</name><argument_list pos:line="625" pos:column="56">(<argument><expr><call><name pos:line="625" pos:column="57">PWidget</name><argument_list pos:line="625" pos:column="64">(<argument><expr><name pos:line="625" pos:column="65">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="628" pos:column="25">g_free</name><argument_list pos:line="628" pos:column="31">(<argument><expr><name pos:line="628" pos:column="32">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="629" pos:column="25">gtk_im_context_focus_in</name><argument_list pos:line="629" pos:column="48">(<argument><expr><name pos:line="629" pos:column="49">im_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

	}</block> <catch pos:line="632" pos:column="11">catch <parameter_list pos:line="632" pos:column="17">(<param><decl><type><type:modifier pos:line="632" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="632" pos:column="23">{
		<expr_stmt><expr><name pos:line="633" pos:column="17">errorStatus</name> <op:operator pos:line="633" pos:column="29">=</op:operator> <name pos:line="633" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="635" pos:column="9">return <expr><name pos:line="635" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="638" pos:column="1">gint</name></type> <name><name pos:line="638" pos:column="6">ScintillaGTK</name><op:operator pos:line="638" pos:column="18">::</op:operator><name pos:line="638" pos:column="20">FocusIn</name></name><parameter_list pos:line="638" pos:column="27">(<param><decl><type><name pos:line="638" pos:column="28">GtkWidget</name> <type:modifier pos:line="638" pos:column="38">*</type:modifier></type><name pos:line="638" pos:column="39">widget</name></decl></param>, <param><decl><type><name pos:line="638" pos:column="47">GdkEventFocus</name> <type:modifier pos:line="638" pos:column="61">*</type:modifier></type></decl></param> <comment type="block" pos:line="638" pos:column="63">/*event*/</comment>)</parameter_list> <block pos:line="638" pos:column="74">{
	<decl_stmt><decl><type><name pos:line="639" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="639" pos:column="22">*</type:modifier></type><name pos:line="639" pos:column="23">sciThis</name> <init pos:line="639" pos:column="31">= <expr><call><name pos:line="639" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="639" pos:column="52">(<argument><expr><name pos:line="639" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="640" pos:column="9">return <expr><call><name><name pos:line="640" pos:column="16">sciThis</name><op:operator pos:line="640" pos:column="23">-&gt;</op:operator><name pos:line="640" pos:column="25">FocusInThis</name></name><argument_list pos:line="640" pos:column="36">(<argument><expr><name pos:line="640" pos:column="37">widget</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="643" pos:column="1">gint</name></type> <name><name pos:line="643" pos:column="6">ScintillaGTK</name><op:operator pos:line="643" pos:column="18">::</op:operator><name pos:line="643" pos:column="20">FocusOutThis</name></name><parameter_list pos:line="643" pos:column="32">(<param><decl><type><name pos:line="643" pos:column="33">GtkWidget</name> <type:modifier pos:line="643" pos:column="43">*</type:modifier></type><name pos:line="643" pos:column="44">widget</name></decl></param>)</parameter_list> <block pos:line="643" pos:column="52">{
	<try pos:line="644" pos:column="9">try <block pos:line="644" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="645" pos:column="17">SetFocusState</name><argument_list pos:line="645" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="645" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="647" pos:column="17">if <condition pos:line="647" pos:column="20">(<expr><call><name pos:line="647" pos:column="21">PWidget</name><argument_list pos:line="647" pos:column="28">(<argument><expr><name pos:line="647" pos:column="29">wPreedit</name></expr></argument>)</argument_list></call> <op:operator pos:line="647" pos:column="39">!=</op:operator> <name pos:line="647" pos:column="42">NULL</name></expr>)</condition><then pos:line="647" pos:column="47">
			<expr_stmt><expr><call><name pos:line="648" pos:column="25">gtk_widget_hide</name><argument_list pos:line="648" pos:column="40">(<argument><expr><call><name pos:line="648" pos:column="41">PWidget</name><argument_list pos:line="648" pos:column="48">(<argument><expr><name pos:line="648" pos:column="49">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="649" pos:column="17">if <condition pos:line="649" pos:column="20">(<expr><name pos:line="649" pos:column="21">im_context</name> <op:operator pos:line="649" pos:column="32">!=</op:operator> <name pos:line="649" pos:column="35">NULL</name></expr>)</condition><then pos:line="649" pos:column="40">
			<expr_stmt><expr><call><name pos:line="650" pos:column="25">gtk_im_context_focus_out</name><argument_list pos:line="650" pos:column="49">(<argument><expr><name pos:line="650" pos:column="50">im_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	}</block> <catch pos:line="652" pos:column="11">catch <parameter_list pos:line="652" pos:column="17">(<param><decl><type><type:modifier pos:line="652" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="652" pos:column="23">{
		<expr_stmt><expr><name pos:line="653" pos:column="17">errorStatus</name> <op:operator pos:line="653" pos:column="29">=</op:operator> <name pos:line="653" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="655" pos:column="9">return <expr><name pos:line="655" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="658" pos:column="1">gint</name></type> <name><name pos:line="658" pos:column="6">ScintillaGTK</name><op:operator pos:line="658" pos:column="18">::</op:operator><name pos:line="658" pos:column="20">FocusOut</name></name><parameter_list pos:line="658" pos:column="28">(<param><decl><type><name pos:line="658" pos:column="29">GtkWidget</name> <type:modifier pos:line="658" pos:column="39">*</type:modifier></type><name pos:line="658" pos:column="40">widget</name></decl></param>, <param><decl><type><name pos:line="658" pos:column="48">GdkEventFocus</name> <type:modifier pos:line="658" pos:column="62">*</type:modifier></type></decl></param> <comment type="block" pos:line="658" pos:column="64">/*event*/</comment>)</parameter_list> <block pos:line="658" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="659" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="659" pos:column="22">*</type:modifier></type><name pos:line="659" pos:column="23">sciThis</name> <init pos:line="659" pos:column="31">= <expr><call><name pos:line="659" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="659" pos:column="52">(<argument><expr><name pos:line="659" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="660" pos:column="9">return <expr><call><name><name pos:line="660" pos:column="16">sciThis</name><op:operator pos:line="660" pos:column="23">-&gt;</op:operator><name pos:line="660" pos:column="25">FocusOutThis</name></name><argument_list pos:line="660" pos:column="37">(<argument><expr><name pos:line="660" pos:column="38">widget</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="663" pos:column="1">void</name></type> <name><name pos:line="663" pos:column="6">ScintillaGTK</name><op:operator pos:line="663" pos:column="18">::</op:operator><name pos:line="663" pos:column="20">SizeRequest</name></name><parameter_list pos:line="663" pos:column="31">(<param><decl><type><name pos:line="663" pos:column="32">GtkWidget</name> <type:modifier pos:line="663" pos:column="42">*</type:modifier></type><name pos:line="663" pos:column="43">widget</name></decl></param>, <param><decl><type><name pos:line="663" pos:column="51">GtkRequisition</name> <type:modifier pos:line="663" pos:column="66">*</type:modifier></type><name pos:line="663" pos:column="67">requisition</name></decl></param>)</parameter_list> <block pos:line="663" pos:column="80">{
	<decl_stmt><decl><type><name pos:line="664" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="664" pos:column="22">*</type:modifier></type><name pos:line="664" pos:column="23">sciThis</name> <init pos:line="664" pos:column="31">= <expr><call><name pos:line="664" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="664" pos:column="52">(<argument><expr><name pos:line="664" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="665" pos:column="9">requisition</name><op:operator pos:line="665" pos:column="20">-&gt;</op:operator><name pos:line="665" pos:column="22">width</name></name> <op:operator pos:line="665" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="665" pos:column="30">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="666" pos:column="9">requisition</name><op:operator pos:line="666" pos:column="20">-&gt;</op:operator><name pos:line="666" pos:column="22">height</name></name> <op:operator pos:line="666" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="666" pos:column="31">1</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="667" pos:column="9">GtkRequisition</name></type> <name pos:line="667" pos:column="24">child_requisition</name></decl>;</decl_stmt>
<cpp:if pos:line="668" pos:column="1">#<cpp:directive pos:line="668" pos:column="2">if</cpp:directive> <expr><call><name pos:line="668" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="668" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="668" pos:column="23">3</lit:literal><op:operator pos:line="668" pos:column="24">,</op:operator><lit:literal type="number" pos:line="668" pos:column="25">0</lit:literal><op:operator pos:line="668" pos:column="26">,</op:operator><lit:literal type="number" pos:line="668" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="669" pos:column="9">gtk_widget_get_preferred_size</name><argument_list pos:line="669" pos:column="38">(<argument><expr><call><name pos:line="669" pos:column="39">PWidget</name><argument_list pos:line="669" pos:column="46">(<argument><expr><name><name pos:line="669" pos:column="47">sciThis</name><op:operator pos:line="669" pos:column="54">-&gt;</op:operator><name pos:line="669" pos:column="56">scrollbarh</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="669" pos:column="69">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="669" pos:column="75">&amp;</op:operator><name pos:line="669" pos:column="76">child_requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="670" pos:column="9">gtk_widget_get_preferred_size</name><argument_list pos:line="670" pos:column="38">(<argument><expr><call><name pos:line="670" pos:column="39">PWidget</name><argument_list pos:line="670" pos:column="46">(<argument><expr><name><name pos:line="670" pos:column="47">sciThis</name><op:operator pos:line="670" pos:column="54">-&gt;</op:operator><name pos:line="670" pos:column="56">scrollbarv</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="670" pos:column="69">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="670" pos:column="75">&amp;</op:operator><name pos:line="670" pos:column="76">child_requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="671" pos:column="1">#<cpp:directive pos:line="671" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="672" pos:column="9">gtk_widget_size_request</name><argument_list pos:line="672" pos:column="32">(<argument><expr><call><name pos:line="672" pos:column="33">PWidget</name><argument_list pos:line="672" pos:column="40">(<argument><expr><name><name pos:line="672" pos:column="41">sciThis</name><op:operator pos:line="672" pos:column="48">-&gt;</op:operator><name pos:line="672" pos:column="50">scrollbarh</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="672" pos:column="63">&amp;</op:operator><name pos:line="672" pos:column="64">child_requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="673" pos:column="9">gtk_widget_size_request</name><argument_list pos:line="673" pos:column="32">(<argument><expr><call><name pos:line="673" pos:column="33">PWidget</name><argument_list pos:line="673" pos:column="40">(<argument><expr><name><name pos:line="673" pos:column="41">sciThis</name><op:operator pos:line="673" pos:column="48">-&gt;</op:operator><name pos:line="673" pos:column="50">scrollbarv</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="673" pos:column="63">&amp;</op:operator><name pos:line="673" pos:column="64">child_requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="674" pos:column="1">#<cpp:directive pos:line="674" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<function><type><name pos:line="677" pos:column="1">void</name></type> <name><name pos:line="677" pos:column="6">ScintillaGTK</name><op:operator pos:line="677" pos:column="18">::</op:operator><name pos:line="677" pos:column="20">GetPreferredWidth</name></name><parameter_list pos:line="677" pos:column="37">(<param><decl><type><name pos:line="677" pos:column="38">GtkWidget</name> <type:modifier pos:line="677" pos:column="48">*</type:modifier></type><name pos:line="677" pos:column="49">widget</name></decl></param>, <param><decl><type><name pos:line="677" pos:column="57">gint</name> <type:modifier pos:line="677" pos:column="62">*</type:modifier></type><name pos:line="677" pos:column="63">minimalWidth</name></decl></param>, <param><decl><type><name pos:line="677" pos:column="77">gint</name> <type:modifier pos:line="677" pos:column="82">*</type:modifier></type><name pos:line="677" pos:column="83">naturalWidth</name></decl></param>)</parameter_list> <block pos:line="677" pos:column="97">{
	<decl_stmt><decl><type><name pos:line="678" pos:column="9">GtkRequisition</name></type> <name pos:line="678" pos:column="24">requisition</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="679" pos:column="9">SizeRequest</name><argument_list pos:line="679" pos:column="20">(<argument><expr><name pos:line="679" pos:column="21">widget</name></expr></argument>, <argument><expr><op:operator pos:line="679" pos:column="29">&amp;</op:operator><name pos:line="679" pos:column="30">requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="680" pos:column="9">*</op:operator><name pos:line="680" pos:column="10">minimalWidth</name> <op:operator pos:line="680" pos:column="23">=</op:operator> <op:operator pos:line="680" pos:column="25">*</op:operator><name pos:line="680" pos:column="26">naturalWidth</name> <op:operator pos:line="680" pos:column="39">=</op:operator> <name><name pos:line="680" pos:column="41">requisition</name><op:operator pos:line="680" pos:column="52">.</op:operator><name pos:line="680" pos:column="53">width</name></name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="683" pos:column="1">void</name></type> <name><name pos:line="683" pos:column="6">ScintillaGTK</name><op:operator pos:line="683" pos:column="18">::</op:operator><name pos:line="683" pos:column="20">GetPreferredHeight</name></name><parameter_list pos:line="683" pos:column="38">(<param><decl><type><name pos:line="683" pos:column="39">GtkWidget</name> <type:modifier pos:line="683" pos:column="49">*</type:modifier></type><name pos:line="683" pos:column="50">widget</name></decl></param>, <param><decl><type><name pos:line="683" pos:column="58">gint</name> <type:modifier pos:line="683" pos:column="63">*</type:modifier></type><name pos:line="683" pos:column="64">minimalHeight</name></decl></param>, <param><decl><type><name pos:line="683" pos:column="79">gint</name> <type:modifier pos:line="683" pos:column="84">*</type:modifier></type><name pos:line="683" pos:column="85">naturalHeight</name></decl></param>)</parameter_list> <block pos:line="683" pos:column="100">{
	<decl_stmt><decl><type><name pos:line="684" pos:column="9">GtkRequisition</name></type> <name pos:line="684" pos:column="24">requisition</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="685" pos:column="9">SizeRequest</name><argument_list pos:line="685" pos:column="20">(<argument><expr><name pos:line="685" pos:column="21">widget</name></expr></argument>, <argument><expr><op:operator pos:line="685" pos:column="29">&amp;</op:operator><name pos:line="685" pos:column="30">requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="686" pos:column="9">*</op:operator><name pos:line="686" pos:column="10">minimalHeight</name> <op:operator pos:line="686" pos:column="24">=</op:operator> <op:operator pos:line="686" pos:column="26">*</op:operator><name pos:line="686" pos:column="27">naturalHeight</name> <op:operator pos:line="686" pos:column="41">=</op:operator> <name><name pos:line="686" pos:column="43">requisition</name><op:operator pos:line="686" pos:column="54">.</op:operator><name pos:line="686" pos:column="55">height</name></name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="689" pos:column="1">void</name></type> <name><name pos:line="689" pos:column="6">ScintillaGTK</name><op:operator pos:line="689" pos:column="18">::</op:operator><name pos:line="689" pos:column="20">SizeAllocate</name></name><parameter_list pos:line="689" pos:column="32">(<param><decl><type><name pos:line="689" pos:column="33">GtkWidget</name> <type:modifier pos:line="689" pos:column="43">*</type:modifier></type><name pos:line="689" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="689" pos:column="52">GtkAllocation</name> <type:modifier pos:line="689" pos:column="66">*</type:modifier></type><name pos:line="689" pos:column="67">allocation</name></decl></param>)</parameter_list> <block pos:line="689" pos:column="79">{
	<decl_stmt><decl><type><name pos:line="690" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="690" pos:column="22">*</type:modifier></type><name pos:line="690" pos:column="23">sciThis</name> <init pos:line="690" pos:column="31">= <expr><call><name pos:line="690" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="690" pos:column="52">(<argument><expr><name pos:line="690" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="691" pos:column="9">try <block pos:line="691" pos:column="13">{
<cpp:if pos:line="692" pos:column="1">#<cpp:directive pos:line="692" pos:column="2">if</cpp:directive> <expr><call><name pos:line="692" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="692" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="692" pos:column="23">2</lit:literal><op:operator pos:line="692" pos:column="24">,</op:operator><lit:literal type="number" pos:line="692" pos:column="25">20</lit:literal><op:operator pos:line="692" pos:column="27">,</op:operator><lit:literal type="number" pos:line="692" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="693" pos:column="17">gtk_widget_set_allocation</name><argument_list pos:line="693" pos:column="42">(<argument><expr><name pos:line="693" pos:column="43">widget</name></expr></argument>, <argument><expr><name pos:line="693" pos:column="51">allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="694" pos:column="1">#<cpp:directive pos:line="694" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><name><name pos:line="695" pos:column="17">widget</name><op:operator pos:line="695" pos:column="23">-&gt;</op:operator><name pos:line="695" pos:column="25">allocation</name></name> <op:operator pos:line="695" pos:column="36">=</op:operator> <op:operator pos:line="695" pos:column="38">*</op:operator><name pos:line="695" pos:column="39">allocation</name></expr>;</expr_stmt>
<cpp:endif pos:line="696" pos:column="1">#<cpp:directive pos:line="696" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="697" pos:column="17">if <condition pos:line="697" pos:column="20">(<expr><call><name pos:line="697" pos:column="21">IS_WIDGET_REALIZED</name><argument_list pos:line="697" pos:column="39">(<argument><expr><name pos:line="697" pos:column="40">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="697" pos:column="48">
			<expr_stmt><expr><call><name pos:line="698" pos:column="25">gdk_window_move_resize</name><argument_list pos:line="698" pos:column="47">(<argument><expr><call><name pos:line="698" pos:column="48">WindowFromWidget</name><argument_list pos:line="698" pos:column="64">(<argument><expr><name pos:line="698" pos:column="65">widget</name></expr></argument>)</argument_list></call></expr></argument>,
			        <argument><expr><name><name pos:line="699" pos:column="33">allocation</name><op:operator pos:line="699" pos:column="43">-&gt;</op:operator><name pos:line="699" pos:column="45">x</name></name></expr></argument>,
			        <argument><expr><name><name pos:line="700" pos:column="33">allocation</name><op:operator pos:line="700" pos:column="43">-&gt;</op:operator><name pos:line="700" pos:column="45">y</name></name></expr></argument>,
			        <argument><expr><name><name pos:line="701" pos:column="33">allocation</name><op:operator pos:line="701" pos:column="43">-&gt;</op:operator><name pos:line="701" pos:column="45">width</name></name></expr></argument>,
			        <argument><expr><name><name pos:line="702" pos:column="33">allocation</name><op:operator pos:line="702" pos:column="43">-&gt;</op:operator><name pos:line="702" pos:column="45">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><call><name><name pos:line="704" pos:column="17">sciThis</name><op:operator pos:line="704" pos:column="24">-&gt;</op:operator><name pos:line="704" pos:column="26">Resize</name></name><argument_list pos:line="704" pos:column="32">(<argument><expr><name><name pos:line="704" pos:column="33">allocation</name><op:operator pos:line="704" pos:column="43">-&gt;</op:operator><name pos:line="704" pos:column="45">width</name></name></expr></argument>, <argument><expr><name><name pos:line="704" pos:column="52">allocation</name><op:operator pos:line="704" pos:column="62">-&gt;</op:operator><name pos:line="704" pos:column="64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block> <catch pos:line="706" pos:column="11">catch <parameter_list pos:line="706" pos:column="17">(<param><decl><type><type:modifier pos:line="706" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="706" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="707" pos:column="17">sciThis</name><op:operator pos:line="707" pos:column="24">-&gt;</op:operator><name pos:line="707" pos:column="26">errorStatus</name></name> <op:operator pos:line="707" pos:column="38">=</op:operator> <name pos:line="707" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="711" pos:column="1">void</name></type> <name><name pos:line="711" pos:column="6">ScintillaGTK</name><op:operator pos:line="711" pos:column="18">::</op:operator><name pos:line="711" pos:column="20">Initialise</name></name><parameter_list pos:line="711" pos:column="30">()</parameter_list> <block pos:line="711" pos:column="33">{
	<comment type="line" pos:line="712" pos:column="9">//Platform::DebugPrintf("ScintillaGTK::Initialise\n");</comment>
	<expr_stmt><expr><name pos:line="713" pos:column="9">parentClass</name> <op:operator pos:line="713" pos:column="21">=</op:operator> <call><name><name pos:line="713" pos:column="23">reinterpret_cast</name><argument_list pos:line="713" pos:column="39">&lt;<argument><expr><name pos:line="713" pos:column="40">GtkWidgetClass</name> <op:operator pos:line="713" pos:column="55">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="713" pos:column="57">(
	                  <argument><expr><call><name pos:line="714" pos:column="27">g_type_class_ref</name><argument_list pos:line="714" pos:column="43">(<argument><expr><call><name pos:line="714" pos:column="44">gtk_container_get_type</name><argument_list pos:line="714" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:line="716" pos:column="1">#<cpp:directive pos:line="716" pos:column="2">if</cpp:directive> <expr><call><name pos:line="716" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="716" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="716" pos:column="23">2</lit:literal><op:operator pos:line="716" pos:column="24">,</op:operator><lit:literal type="number" pos:line="716" pos:column="25">20</lit:literal><op:operator pos:line="716" pos:column="27">,</op:operator><lit:literal type="number" pos:line="716" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="717" pos:column="9">gtk_widget_set_can_focus</name><argument_list pos:line="717" pos:column="33">(<argument><expr><call><name pos:line="717" pos:column="34">PWidget</name><argument_list pos:line="717" pos:column="41">(<argument><expr><name pos:line="717" pos:column="42">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="717" pos:column="50">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="718" pos:column="9">gtk_widget_set_sensitive</name><argument_list pos:line="718" pos:column="33">(<argument><expr><call><name pos:line="718" pos:column="34">PWidget</name><argument_list pos:line="718" pos:column="41">(<argument><expr><name pos:line="718" pos:column="42">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="718" pos:column="50">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="719" pos:column="1">#<cpp:directive pos:line="719" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="720" pos:column="9">GTK_WIDGET_SET_FLAGS</name><argument_list pos:line="720" pos:column="29">(<argument><expr><call><name pos:line="720" pos:column="30">PWidget</name><argument_list pos:line="720" pos:column="37">(<argument><expr><name pos:line="720" pos:column="38">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="720" pos:column="46">GTK_CAN_FOCUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="721" pos:column="9">GTK_WIDGET_SET_FLAGS</name><argument_list pos:line="721" pos:column="29">(<argument><expr><call><name pos:line="721" pos:column="30">GTK_WIDGET</name><argument_list pos:line="721" pos:column="40">(<argument><expr><call><name pos:line="721" pos:column="41">PWidget</name><argument_list pos:line="721" pos:column="48">(<argument><expr><name pos:line="721" pos:column="49">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="721" pos:column="58">GTK_SENSITIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="722" pos:column="1">#<cpp:directive pos:line="722" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="723" pos:column="9">gtk_widget_set_events</name><argument_list pos:line="723" pos:column="30">(<argument><expr><call><name pos:line="723" pos:column="31">PWidget</name><argument_list pos:line="723" pos:column="38">(<argument><expr><name pos:line="723" pos:column="39">wMain</name></expr></argument>)</argument_list></call></expr></argument>,
	                      <argument><expr><name pos:line="724" pos:column="31">GDK_EXPOSURE_MASK</name>
	                      <op:operator pos:line="725" pos:column="31">|</op:operator> <name pos:line="725" pos:column="33">GDK_STRUCTURE_MASK</name>
	                      <op:operator pos:line="726" pos:column="31">|</op:operator> <name pos:line="726" pos:column="33">GDK_KEY_PRESS_MASK</name>
	                      <op:operator pos:line="727" pos:column="31">|</op:operator> <name pos:line="727" pos:column="33">GDK_KEY_RELEASE_MASK</name>
	                      <op:operator pos:line="728" pos:column="31">|</op:operator> <name pos:line="728" pos:column="33">GDK_FOCUS_CHANGE_MASK</name>
	                      <op:operator pos:line="729" pos:column="31">|</op:operator> <name pos:line="729" pos:column="33">GDK_LEAVE_NOTIFY_MASK</name>
	                      <op:operator pos:line="730" pos:column="31">|</op:operator> <name pos:line="730" pos:column="33">GDK_BUTTON_PRESS_MASK</name>
	                      <op:operator pos:line="731" pos:column="31">|</op:operator> <name pos:line="731" pos:column="33">GDK_BUTTON_RELEASE_MASK</name>
	                      <op:operator pos:line="732" pos:column="31">|</op:operator> <name pos:line="732" pos:column="33">GDK_POINTER_MOTION_MASK</name>
	                      <op:operator pos:line="733" pos:column="31">|</op:operator> <name pos:line="733" pos:column="33">GDK_POINTER_MOTION_HINT_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="735" pos:column="9">wText</name> <op:operator pos:line="735" pos:column="15">=</op:operator> <call><name pos:line="735" pos:column="17">gtk_drawing_area_new</name><argument_list pos:line="735" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="736" pos:column="9">gtk_widget_set_parent</name><argument_list pos:line="736" pos:column="30">(<argument><expr><call><name pos:line="736" pos:column="31">PWidget</name><argument_list pos:line="736" pos:column="38">(<argument><expr><name pos:line="736" pos:column="39">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="736" pos:column="47">PWidget</name><argument_list pos:line="736" pos:column="54">(<argument><expr><name pos:line="736" pos:column="55">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="737" pos:column="9">GtkWidget</name> <type:modifier pos:line="737" pos:column="19">*</type:modifier></type><name pos:line="737" pos:column="20">widtxt</name> <init pos:line="737" pos:column="27">= <expr><call><name pos:line="737" pos:column="29">PWidget</name><argument_list pos:line="737" pos:column="36">(<argument><expr><name pos:line="737" pos:column="37">wText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="737" pos:column="49">// No code inside the G_OBJECT macro</comment>
	<expr_stmt><expr><call><name pos:line="738" pos:column="9">gtk_widget_show</name><argument_list pos:line="738" pos:column="24">(<argument><expr><name pos:line="738" pos:column="25">widtxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="739" pos:column="1">#<cpp:directive pos:line="739" pos:column="2">if</cpp:directive> <expr><call><name pos:line="739" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="739" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="739" pos:column="23">3</lit:literal><op:operator pos:line="739" pos:column="24">,</op:operator><lit:literal type="number" pos:line="739" pos:column="25">0</lit:literal><op:operator pos:line="739" pos:column="26">,</op:operator><lit:literal type="number" pos:line="739" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="740" pos:column="9">g_signal_connect</name><argument_list pos:line="740" pos:column="25">(<argument><expr><call><name pos:line="740" pos:column="26">G_OBJECT</name><argument_list pos:line="740" pos:column="34">(<argument><expr><name pos:line="740" pos:column="35">widtxt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="740" pos:column="44">"draw"</lit:literal></expr></argument>,
			   <argument><expr><call><name pos:line="741" pos:column="28">G_CALLBACK</name><argument_list pos:line="741" pos:column="38">(<argument><expr><name><name pos:line="741" pos:column="39">ScintillaGTK</name><op:operator pos:line="741" pos:column="51">::</op:operator><name pos:line="741" pos:column="53">DrawText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="741" pos:column="64">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="742" pos:column="1">#<cpp:directive pos:line="742" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="743" pos:column="9">g_signal_connect</name><argument_list pos:line="743" pos:column="25">(<argument><expr><call><name pos:line="743" pos:column="26">G_OBJECT</name><argument_list pos:line="743" pos:column="34">(<argument><expr><name pos:line="743" pos:column="35">widtxt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="743" pos:column="44">"expose_event"</lit:literal></expr></argument>,
			   <argument><expr><call><name pos:line="744" pos:column="28">G_CALLBACK</name><argument_list pos:line="744" pos:column="38">(<argument><expr><name><name pos:line="744" pos:column="39">ScintillaGTK</name><op:operator pos:line="744" pos:column="51">::</op:operator><name pos:line="744" pos:column="53">ExposeText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="744" pos:column="66">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="745" pos:column="1">#<cpp:directive pos:line="745" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="746" pos:column="9">gtk_widget_set_events</name><argument_list pos:line="746" pos:column="30">(<argument><expr><name pos:line="746" pos:column="31">widtxt</name></expr></argument>, <argument><expr><name pos:line="746" pos:column="39">GDK_EXPOSURE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="747" pos:column="9">// Avoid background drawing flash</comment>
	<expr_stmt><expr><call><name pos:line="748" pos:column="9">gtk_widget_set_double_buffered</name><argument_list pos:line="748" pos:column="39">(<argument><expr><name pos:line="748" pos:column="40">widtxt</name></expr></argument>, <argument><expr><name pos:line="748" pos:column="48">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="749" pos:column="9">gtk_widget_set_size_request</name><argument_list pos:line="749" pos:column="36">(<argument><expr><name pos:line="749" pos:column="37">widtxt</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="749" pos:column="45">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="749" pos:column="50">100</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="750" pos:column="9">adjustmentv</name> <op:operator pos:line="750" pos:column="21">=</op:operator> <call><name pos:line="750" pos:column="23">GTK_ADJUSTMENT</name><argument_list pos:line="750" pos:column="37">(<argument><expr><call><name pos:line="750" pos:column="38">gtk_adjustment_new</name><argument_list pos:line="750" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="750" pos:column="57">0.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="750" pos:column="62">0.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="750" pos:column="67">201.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="750" pos:column="74">1.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="750" pos:column="79">20.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="750" pos:column="85">20.0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="751" pos:column="9">scrollbarv</name> <op:operator pos:line="751" pos:column="20">=</op:operator> <call><name pos:line="751" pos:column="22">gtk_vscrollbar_new</name><argument_list pos:line="751" pos:column="40">(<argument><expr><call><name pos:line="751" pos:column="41">GTK_ADJUSTMENT</name><argument_list pos:line="751" pos:column="55">(<argument><expr><name pos:line="751" pos:column="56">adjustmentv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="752" pos:column="1">#<cpp:directive pos:line="752" pos:column="2">if</cpp:directive> <expr><call><name pos:line="752" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="752" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="752" pos:column="23">2</lit:literal><op:operator pos:line="752" pos:column="24">,</op:operator><lit:literal type="number" pos:line="752" pos:column="25">20</lit:literal><op:operator pos:line="752" pos:column="27">,</op:operator><lit:literal type="number" pos:line="752" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="753" pos:column="9">gtk_widget_set_can_focus</name><argument_list pos:line="753" pos:column="33">(<argument><expr><call><name pos:line="753" pos:column="34">PWidget</name><argument_list pos:line="753" pos:column="41">(<argument><expr><name pos:line="753" pos:column="42">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="753" pos:column="55">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="754" pos:column="1">#<cpp:directive pos:line="754" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="755" pos:column="9">GTK_WIDGET_UNSET_FLAGS</name><argument_list pos:line="755" pos:column="31">(<argument><expr><call><name pos:line="755" pos:column="32">PWidget</name><argument_list pos:line="755" pos:column="39">(<argument><expr><name pos:line="755" pos:column="40">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="755" pos:column="53">GTK_CAN_FOCUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="756" pos:column="1">#<cpp:directive pos:line="756" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="757" pos:column="9">g_signal_connect</name><argument_list pos:line="757" pos:column="25">(<argument><expr><call><name pos:line="757" pos:column="26">G_OBJECT</name><argument_list pos:line="757" pos:column="34">(<argument><expr><name pos:line="757" pos:column="35">adjustmentv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="757" pos:column="49">"value_changed"</lit:literal></expr></argument>,
			   <argument><expr><call><name pos:line="758" pos:column="28">G_CALLBACK</name><argument_list pos:line="758" pos:column="38">(<argument><expr><name pos:line="758" pos:column="39">ScrollSignal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="758" pos:column="54">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="759" pos:column="9">gtk_widget_set_parent</name><argument_list pos:line="759" pos:column="30">(<argument><expr><call><name pos:line="759" pos:column="31">PWidget</name><argument_list pos:line="759" pos:column="38">(<argument><expr><name pos:line="759" pos:column="39">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="759" pos:column="52">PWidget</name><argument_list pos:line="759" pos:column="59">(<argument><expr><name pos:line="759" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="760" pos:column="9">gtk_widget_show</name><argument_list pos:line="760" pos:column="24">(<argument><expr><call><name pos:line="760" pos:column="25">PWidget</name><argument_list pos:line="760" pos:column="32">(<argument><expr><name pos:line="760" pos:column="33">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="762" pos:column="9">adjustmenth</name> <op:operator pos:line="762" pos:column="21">=</op:operator> <call><name pos:line="762" pos:column="23">GTK_ADJUSTMENT</name><argument_list pos:line="762" pos:column="37">(<argument><expr><call><name pos:line="762" pos:column="38">gtk_adjustment_new</name><argument_list pos:line="762" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="762" pos:column="57">0.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="762" pos:column="62">0.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="762" pos:column="67">101.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="762" pos:column="74">1.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="762" pos:column="79">20.0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="762" pos:column="85">20.0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="763" pos:column="9">scrollbarh</name> <op:operator pos:line="763" pos:column="20">=</op:operator> <call><name pos:line="763" pos:column="22">gtk_hscrollbar_new</name><argument_list pos:line="763" pos:column="40">(<argument><expr><call><name pos:line="763" pos:column="41">GTK_ADJUSTMENT</name><argument_list pos:line="763" pos:column="55">(<argument><expr><name pos:line="763" pos:column="56">adjustmenth</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="764" pos:column="1">#<cpp:directive pos:line="764" pos:column="2">if</cpp:directive> <expr><call><name pos:line="764" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="764" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="764" pos:column="23">2</lit:literal><op:operator pos:line="764" pos:column="24">,</op:operator><lit:literal type="number" pos:line="764" pos:column="25">20</lit:literal><op:operator pos:line="764" pos:column="27">,</op:operator><lit:literal type="number" pos:line="764" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="765" pos:column="9">gtk_widget_set_can_focus</name><argument_list pos:line="765" pos:column="33">(<argument><expr><call><name pos:line="765" pos:column="34">PWidget</name><argument_list pos:line="765" pos:column="41">(<argument><expr><name pos:line="765" pos:column="42">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="765" pos:column="55">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="766" pos:column="1">#<cpp:directive pos:line="766" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="767" pos:column="9">GTK_WIDGET_UNSET_FLAGS</name><argument_list pos:line="767" pos:column="31">(<argument><expr><call><name pos:line="767" pos:column="32">PWidget</name><argument_list pos:line="767" pos:column="39">(<argument><expr><name pos:line="767" pos:column="40">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="767" pos:column="53">GTK_CAN_FOCUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="768" pos:column="1">#<cpp:directive pos:line="768" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="769" pos:column="9">g_signal_connect</name><argument_list pos:line="769" pos:column="25">(<argument><expr><call><name pos:line="769" pos:column="26">G_OBJECT</name><argument_list pos:line="769" pos:column="34">(<argument><expr><name pos:line="769" pos:column="35">adjustmenth</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="769" pos:column="49">"value_changed"</lit:literal></expr></argument>,
			   <argument><expr><call><name pos:line="770" pos:column="28">G_CALLBACK</name><argument_list pos:line="770" pos:column="38">(<argument><expr><name pos:line="770" pos:column="39">ScrollHSignal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="770" pos:column="55">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="771" pos:column="9">gtk_widget_set_parent</name><argument_list pos:line="771" pos:column="30">(<argument><expr><call><name pos:line="771" pos:column="31">PWidget</name><argument_list pos:line="771" pos:column="38">(<argument><expr><name pos:line="771" pos:column="39">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="771" pos:column="52">PWidget</name><argument_list pos:line="771" pos:column="59">(<argument><expr><name pos:line="771" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="772" pos:column="9">gtk_widget_show</name><argument_list pos:line="772" pos:column="24">(<argument><expr><call><name pos:line="772" pos:column="25">PWidget</name><argument_list pos:line="772" pos:column="32">(<argument><expr><name pos:line="772" pos:column="33">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="774" pos:column="9">gtk_widget_grab_focus</name><argument_list pos:line="774" pos:column="30">(<argument><expr><call><name pos:line="774" pos:column="31">PWidget</name><argument_list pos:line="774" pos:column="38">(<argument><expr><name pos:line="774" pos:column="39">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="776" pos:column="9">gtk_drag_dest_set</name><argument_list pos:line="776" pos:column="26">(<argument><expr><call><name pos:line="776" pos:column="27">GTK_WIDGET</name><argument_list pos:line="776" pos:column="37">(<argument><expr><call><name pos:line="776" pos:column="38">PWidget</name><argument_list pos:line="776" pos:column="45">(<argument><expr><name pos:line="776" pos:column="46">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
	                  <argument><expr><name pos:line="777" pos:column="27">GTK_DEST_DEFAULT_ALL</name></expr></argument>, <argument><expr><name pos:line="777" pos:column="49">clipboardPasteTargets</name></expr></argument>, <argument><expr><name pos:line="777" pos:column="72">nClipboardPasteTargets</name></expr></argument>,
	                  <argument><expr><call><name><name pos:line="778" pos:column="27">static_cast</name><argument_list pos:line="778" pos:column="38">&lt;<argument><expr><name pos:line="778" pos:column="39">GdkDragAction</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="778" pos:column="53">(<argument><expr><name pos:line="778" pos:column="54">GDK_ACTION_COPY</name> <op:operator pos:line="778" pos:column="70">|</op:operator> <name pos:line="778" pos:column="72">GDK_ACTION_MOVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="780" pos:column="9">// Set caret period based on GTK settings</comment>
	<decl_stmt><decl><type><name pos:line="781" pos:column="9">gboolean</name></type> <name pos:line="781" pos:column="18">blinkOn</name> <init pos:line="781" pos:column="26">= <expr><lit:literal type="boolean" pos:line="781" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="782" pos:column="9">if <condition pos:line="782" pos:column="12">(<expr><call><name pos:line="782" pos:column="13">g_object_class_find_property</name><argument_list pos:line="782" pos:column="41">(<argument><expr><call><name pos:line="782" pos:column="42">G_OBJECT_GET_CLASS</name><argument_list pos:line="782" pos:column="60">(
			<argument><expr><call><name pos:line="783" pos:column="25">G_OBJECT</name><argument_list pos:line="783" pos:column="33">(<argument><expr><call><name pos:line="783" pos:column="34">gtk_settings_get_default</name><argument_list pos:line="783" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="783" pos:column="64">"gtk-cursor-blink"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="783" pos:column="84"> <block pos:line="783" pos:column="85">{
		<expr_stmt><expr><call><name pos:line="784" pos:column="17">g_object_get</name><argument_list pos:line="784" pos:column="29">(<argument><expr><call><name pos:line="784" pos:column="30">G_OBJECT</name><argument_list pos:line="784" pos:column="38">(
			<argument><expr><call><name pos:line="785" pos:column="25">gtk_settings_get_default</name><argument_list pos:line="785" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="785" pos:column="54">"gtk-cursor-blink"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="785" pos:column="74">&amp;</op:operator><name pos:line="785" pos:column="75">blinkOn</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="84">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="787" pos:column="9">if <condition pos:line="787" pos:column="12">(<expr><name pos:line="787" pos:column="13">blinkOn</name> <op:operator pos:line="787" pos:column="21">&amp;&amp;</op:operator>
		<call><name pos:line="788" pos:column="17">g_object_class_find_property</name><argument_list pos:line="788" pos:column="45">(<argument><expr><call><name pos:line="788" pos:column="46">G_OBJECT_GET_CLASS</name><argument_list pos:line="788" pos:column="64">(
			<argument><expr><call><name pos:line="789" pos:column="25">G_OBJECT</name><argument_list pos:line="789" pos:column="33">(<argument><expr><call><name pos:line="789" pos:column="34">gtk_settings_get_default</name><argument_list pos:line="789" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="789" pos:column="64">"gtk-cursor-blink-time"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="789" pos:column="89"> <block pos:line="789" pos:column="90">{
		<decl_stmt><decl><type><name pos:line="790" pos:column="17">gint</name></type> <name pos:line="790" pos:column="22">value</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="791" pos:column="17">g_object_get</name><argument_list pos:line="791" pos:column="29">(<argument><expr><call><name pos:line="791" pos:column="30">G_OBJECT</name><argument_list pos:line="791" pos:column="38">(
			<argument><expr><call><name pos:line="792" pos:column="25">gtk_settings_get_default</name><argument_list pos:line="792" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="792" pos:column="54">"gtk-cursor-blink-time"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="792" pos:column="79">&amp;</op:operator><name pos:line="792" pos:column="80">value</name></expr></argument>, <argument><expr><name pos:line="792" pos:column="87">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="793" pos:column="17">caret</name><op:operator pos:line="793" pos:column="22">.</op:operator><name pos:line="793" pos:column="23">period</name></name> <op:operator pos:line="793" pos:column="30">=</op:operator> <call><name pos:line="793" pos:column="32">gint</name><argument_list pos:line="793" pos:column="36">(<argument><expr><name pos:line="793" pos:column="37">value</name> <op:operator pos:line="793" pos:column="43">/</op:operator> <lit:literal type="number" pos:line="793" pos:column="45">1.75</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="794" pos:column="11">else <block pos:line="794" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="795" pos:column="17">caret</name><op:operator pos:line="795" pos:column="22">.</op:operator><name pos:line="795" pos:column="23">period</name></name> <op:operator pos:line="795" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="795" pos:column="32">0</lit:literal></expr>;</expr_stmt>
	}</block></else></if>

	<expr_stmt><expr><call><name pos:line="798" pos:column="9">SetTicking</name><argument_list pos:line="798" pos:column="19">(<argument><expr><lit:literal type="boolean" pos:line="798" pos:column="20">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="801" pos:column="1">void</name></type> <name><name pos:line="801" pos:column="6">ScintillaGTK</name><op:operator pos:line="801" pos:column="18">::</op:operator><name pos:line="801" pos:column="20">Finalise</name></name><parameter_list pos:line="801" pos:column="28">()</parameter_list> <block pos:line="801" pos:column="31">{
	<expr_stmt><expr><call><name pos:line="802" pos:column="9">SetTicking</name><argument_list pos:line="802" pos:column="19">(<argument><expr><lit:literal type="boolean" pos:line="802" pos:column="20">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="803" pos:column="9">ScintillaBase</name><op:operator pos:line="803" pos:column="22">::</op:operator><name pos:line="803" pos:column="24">Finalise</name></name><argument_list pos:line="803" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="806" pos:column="1">void</name></type> <name><name pos:line="806" pos:column="6">ScintillaGTK</name><op:operator pos:line="806" pos:column="18">::</op:operator><name pos:line="806" pos:column="20">DisplayCursor</name></name><parameter_list pos:line="806" pos:column="33">(<param><decl><type><name><name pos:line="806" pos:column="34">Window</name><op:operator pos:line="806" pos:column="40">::</op:operator><name pos:line="806" pos:column="42">Cursor</name></name></type> <name pos:line="806" pos:column="49">c</name></decl></param>)</parameter_list> <block pos:line="806" pos:column="52">{
	<if pos:line="807" pos:column="9">if <condition pos:line="807" pos:column="12">(<expr><name pos:line="807" pos:column="13">cursorMode</name> <op:operator pos:line="807" pos:column="24">==</op:operator> <name pos:line="807" pos:column="27">SC_CURSORNORMAL</name></expr>)</condition><then pos:line="807" pos:column="43">
		<expr_stmt><expr><call><name><name pos:line="808" pos:column="17">wText</name><op:operator pos:line="808" pos:column="22">.</op:operator><name pos:line="808" pos:column="23">SetCursor</name></name><argument_list pos:line="808" pos:column="32">(<argument><expr><name pos:line="808" pos:column="33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="809" pos:column="9">else
		<expr_stmt><expr><call><name><name pos:line="810" pos:column="17">wText</name><op:operator pos:line="810" pos:column="22">.</op:operator><name pos:line="810" pos:column="23">SetCursor</name></name><argument_list pos:line="810" pos:column="32">(<argument><expr><call><name><name pos:line="810" pos:column="33">static_cast</name><argument_list pos:line="810" pos:column="44">&lt;<argument><expr><name><name pos:line="810" pos:column="45">Window</name><op:operator pos:line="810" pos:column="51">::</op:operator><name pos:line="810" pos:column="53">Cursor</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:line="810" pos:column="60">(<argument><expr><name pos:line="810" pos:column="61">cursorMode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
}</block></function>

<function><type><name pos:line="813" pos:column="1">bool</name></type> <name><name pos:line="813" pos:column="6">ScintillaGTK</name><op:operator pos:line="813" pos:column="18">::</op:operator><name pos:line="813" pos:column="20">DragThreshold</name></name><parameter_list pos:line="813" pos:column="33">(<param><decl><type><name pos:line="813" pos:column="34">Point</name></type> <name pos:line="813" pos:column="40">ptStart</name></decl></param>, <param><decl><type><name pos:line="813" pos:column="49">Point</name></type> <name pos:line="813" pos:column="55">ptNow</name></decl></param>)</parameter_list> <block pos:line="813" pos:column="62">{
	<return pos:line="814" pos:column="9">return <expr><call><name pos:line="814" pos:column="16">gtk_drag_check_threshold</name><argument_list pos:line="814" pos:column="40">(<argument><expr><call><name pos:line="814" pos:column="41">GTK_WIDGET</name><argument_list pos:line="814" pos:column="51">(<argument><expr><call><name pos:line="814" pos:column="52">PWidget</name><argument_list pos:line="814" pos:column="59">(<argument><expr><name pos:line="814" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
		<argument><expr><name><name pos:line="815" pos:column="17">ptStart</name><op:operator pos:line="815" pos:column="24">.</op:operator><name pos:line="815" pos:column="25">x</name></name></expr></argument>, <argument><expr><name><name pos:line="815" pos:column="28">ptStart</name><op:operator pos:line="815" pos:column="35">.</op:operator><name pos:line="815" pos:column="36">y</name></name></expr></argument>, <argument><expr><name><name pos:line="815" pos:column="39">ptNow</name><op:operator pos:line="815" pos:column="44">.</op:operator><name pos:line="815" pos:column="45">x</name></name></expr></argument>, <argument><expr><name><name pos:line="815" pos:column="48">ptNow</name><op:operator pos:line="815" pos:column="53">.</op:operator><name pos:line="815" pos:column="54">y</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="818" pos:column="1">void</name></type> <name><name pos:line="818" pos:column="6">ScintillaGTK</name><op:operator pos:line="818" pos:column="18">::</op:operator><name pos:line="818" pos:column="20">StartDrag</name></name><parameter_list pos:line="818" pos:column="29">()</parameter_list> <block pos:line="818" pos:column="32">{
	<expr_stmt><expr><name pos:line="819" pos:column="9">dragWasDropped</name> <op:operator pos:line="819" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="819" pos:column="26">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="820" pos:column="9">inDragDrop</name> <op:operator pos:line="820" pos:column="20">=</op:operator> <name pos:line="820" pos:column="22">ddDragging</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="821" pos:column="9">GtkTargetList</name> <type:modifier pos:line="821" pos:column="23">*</type:modifier></type><name pos:line="821" pos:column="24">tl</name> <init pos:line="821" pos:column="27">= <expr><call><name pos:line="821" pos:column="29">gtk_target_list_new</name><argument_list pos:line="821" pos:column="48">(<argument><expr><name pos:line="821" pos:column="49">clipboardCopyTargets</name></expr></argument>, <argument><expr><name pos:line="821" pos:column="71">nClipboardCopyTargets</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="822" pos:column="9">gtk_drag_begin</name><argument_list pos:line="822" pos:column="23">(<argument><expr><call><name pos:line="822" pos:column="24">GTK_WIDGET</name><argument_list pos:line="822" pos:column="34">(<argument><expr><call><name pos:line="822" pos:column="35">PWidget</name><argument_list pos:line="822" pos:column="42">(<argument><expr><name pos:line="822" pos:column="43">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
	               <argument><expr><name pos:line="823" pos:column="24">tl</name></expr></argument>,
	               <argument><expr><call><name><name pos:line="824" pos:column="24">static_cast</name><argument_list pos:line="824" pos:column="35">&lt;<argument><expr><name pos:line="824" pos:column="36">GdkDragAction</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="824" pos:column="50">(<argument><expr><name pos:line="824" pos:column="51">GDK_ACTION_COPY</name> <op:operator pos:line="824" pos:column="67">|</op:operator> <name pos:line="824" pos:column="69">GDK_ACTION_MOVE</name></expr></argument>)</argument_list></call></expr></argument>,
	               <argument><expr><name><name pos:line="825" pos:column="24">evbtn</name><op:operator pos:line="825" pos:column="29">.</op:operator><name pos:line="825" pos:column="30">button</name></name></expr></argument>,
	               <argument><expr><call><name><name pos:line="826" pos:column="24">reinterpret_cast</name><argument_list pos:line="826" pos:column="40">&lt;<argument><expr><name pos:line="826" pos:column="41">GdkEvent</name> <op:operator pos:line="826" pos:column="50">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="826" pos:column="52">(<argument><expr><op:operator pos:line="826" pos:column="53">&amp;</op:operator><name pos:line="826" pos:column="54">evbtn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="829" pos:column="1">static</specifier> <name pos:line="829" pos:column="8">char</name> <type:modifier pos:line="829" pos:column="13">*</type:modifier></type><name pos:line="829" pos:column="14">ConvertText</name><parameter_list pos:line="829" pos:column="25">(<param><decl><type><name pos:line="829" pos:column="26">int</name> <type:modifier pos:line="829" pos:column="30">*</type:modifier></type><name pos:line="829" pos:column="31">lenResult</name></decl></param>, <param><decl><type><name pos:line="829" pos:column="42">char</name> <type:modifier pos:line="829" pos:column="47">*</type:modifier></type><name pos:line="829" pos:column="48">s</name></decl></param>, <param><decl><type><name pos:line="829" pos:column="51">size_t</name></type> <name pos:line="829" pos:column="58">len</name></decl></param>, <param><decl><type><specifier pos:line="829" pos:column="63">const</specifier> <name pos:line="829" pos:column="69">char</name> <type:modifier pos:line="829" pos:column="74">*</type:modifier></type><name pos:line="829" pos:column="75">charSetDest</name></decl></param>,
	<param><decl><type><specifier pos:line="830" pos:column="9">const</specifier> <name pos:line="830" pos:column="15">char</name> <type:modifier pos:line="830" pos:column="20">*</type:modifier></type><name pos:line="830" pos:column="21">charSetSource</name></decl></param>, <param><decl><type><name pos:line="830" pos:column="36">bool</name></type> <name pos:line="830" pos:column="41">transliterations</name></decl></param>, <param><decl><type><name pos:line="830" pos:column="59">bool</name></type> <name pos:line="830" pos:column="64">silent</name><init pos:line="830" pos:column="70">=<expr><lit:literal type="boolean" pos:line="830" pos:column="71">false</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="830" pos:column="78">{
	<comment type="line" pos:line="831" pos:column="9">// s is not const because of different versions of iconv disagreeing about const</comment>
	<expr_stmt><expr><op:operator pos:line="832" pos:column="9">*</op:operator><name pos:line="832" pos:column="10">lenResult</name> <op:operator pos:line="832" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="832" pos:column="22">0</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="833" pos:column="9">char</name> <type:modifier pos:line="833" pos:column="14">*</type:modifier></type><name pos:line="833" pos:column="15">destForm</name> <init pos:line="833" pos:column="24">= <expr><lit:literal type="number" pos:line="833" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="834" pos:column="9">Converter</name></type> <name pos:line="834" pos:column="19">conv</name><parameter_list pos:line="834" pos:column="23">(<param><decl><type><name pos:line="834" pos:column="24">charSetDest</name></type></decl></param>, <param><decl><type><name pos:line="834" pos:column="37">charSetSource</name></type></decl></param>, <param><decl><type><name pos:line="834" pos:column="52">transliterations</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="835" pos:column="9">if <condition pos:line="835" pos:column="12">(<expr><name pos:line="835" pos:column="13">conv</name></expr>)</condition><then pos:line="835" pos:column="18"> <block pos:line="835" pos:column="19">{
		<expr_stmt><expr><name pos:line="836" pos:column="17">destForm</name> <op:operator pos:line="836" pos:column="26">=</op:operator> <op:operator pos:line="836" pos:column="28">new</op:operator> <name><name pos:line="836" pos:column="32">char</name><index pos:line="836" pos:column="36">[<expr><name pos:line="836" pos:column="37">len</name><op:operator pos:line="836" pos:column="40">*</op:operator><lit:literal type="number" pos:line="836" pos:column="41">3</lit:literal><op:operator pos:line="836" pos:column="42">+</op:operator><lit:literal type="number" pos:line="836" pos:column="43">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="837" pos:column="17">char</name> <type:modifier pos:line="837" pos:column="22">*</type:modifier></type><name pos:line="837" pos:column="23">pin</name> <init pos:line="837" pos:column="27">= <expr><name pos:line="837" pos:column="29">s</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="838" pos:column="17">size_t</name></type> <name pos:line="838" pos:column="24">inLeft</name> <init pos:line="838" pos:column="31">= <expr><name pos:line="838" pos:column="33">len</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="839" pos:column="17">char</name> <type:modifier pos:line="839" pos:column="22">*</type:modifier></type><name pos:line="839" pos:column="23">pout</name> <init pos:line="839" pos:column="28">= <expr><name pos:line="839" pos:column="30">destForm</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="840" pos:column="17">size_t</name></type> <name pos:line="840" pos:column="24">outLeft</name> <init pos:line="840" pos:column="32">= <expr><name pos:line="840" pos:column="34">len</name><op:operator pos:line="840" pos:column="37">*</op:operator><lit:literal type="number" pos:line="840" pos:column="38">3</lit:literal><op:operator pos:line="840" pos:column="39">+</op:operator><lit:literal type="number" pos:line="840" pos:column="40">1</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="841" pos:column="17">size_t</name></type> <name pos:line="841" pos:column="24">conversions</name> <init pos:line="841" pos:column="36">= <expr><call><name><name pos:line="841" pos:column="38">conv</name><op:operator pos:line="841" pos:column="42">.</op:operator><name pos:line="841" pos:column="43">Convert</name></name><argument_list pos:line="841" pos:column="50">(<argument><expr><op:operator pos:line="841" pos:column="51">&amp;</op:operator><name pos:line="841" pos:column="52">pin</name></expr></argument>, <argument><expr><op:operator pos:line="841" pos:column="57">&amp;</op:operator><name pos:line="841" pos:column="58">inLeft</name></expr></argument>, <argument><expr><op:operator pos:line="841" pos:column="66">&amp;</op:operator><name pos:line="841" pos:column="67">pout</name></expr></argument>, <argument><expr><op:operator pos:line="841" pos:column="73">&amp;</op:operator><name pos:line="841" pos:column="74">outLeft</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="842" pos:column="17">if <condition pos:line="842" pos:column="20">(<expr><name pos:line="842" pos:column="21">conversions</name> <op:operator pos:line="842" pos:column="33">==</op:operator> <op:operator pos:line="842" pos:column="36">(</op:operator><call pos:line="842" pos:column="37">(<name pos:line="842" pos:column="38">size_t</name>)<argument_list pos:line="842" pos:column="45">(<argument><expr><op:operator pos:line="842" pos:column="46">-</op:operator><lit:literal type="number" pos:line="842" pos:column="47">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="842" pos:column="49">)</op:operator></expr>)</condition><then pos:line="842" pos:column="51"> <block pos:line="842" pos:column="52">{
			<if pos:line="843" pos:column="25">if <condition pos:line="843" pos:column="28">(<expr><op:operator pos:line="843" pos:column="29">!</op:operator><name pos:line="843" pos:column="30">silent</name></expr>)</condition><then pos:line="843" pos:column="37">
				<expr_stmt><expr><call><name pos:line="844" pos:column="33">fprintf</name><argument_list pos:line="844" pos:column="40">(<argument><expr><name pos:line="844" pos:column="41">stderr</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="844" pos:column="49">"iconv %s-&gt;%s failed for %s\n"</lit:literal></expr></argument>,
					<argument><expr><name pos:line="845" pos:column="41">charSetSource</name></expr></argument>, <argument><expr><name pos:line="845" pos:column="56">charSetDest</name></expr></argument>, <argument><expr><call><name><name pos:line="845" pos:column="69">static_cast</name><argument_list pos:line="845" pos:column="80">&lt;<argument><expr><name pos:line="845" pos:column="81">char</name> <op:operator pos:line="845" pos:column="86">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="845" pos:column="88">(<argument><expr><name pos:line="845" pos:column="89">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><op:operator pos:line="846" pos:column="25">delete</op:operator> <index pos:line="846" pos:column="32">[]</index><name pos:line="846" pos:column="34">destForm</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="847" pos:column="25">destForm</name> <op:operator pos:line="847" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="847" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="848" pos:column="19">else <block pos:line="848" pos:column="24">{
<comment type="line" pos:line="849" pos:column="1">//fprintf(stderr, "iconv OK %s %d\n", destForm, pout - destForm);</comment>
			<expr_stmt><expr><op:operator pos:line="850" pos:column="25">*</op:operator><name pos:line="850" pos:column="26">pout</name> <op:operator pos:line="850" pos:column="31">=</op:operator> <lit:literal type="char" pos:line="850" pos:column="33">'\0'</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="851" pos:column="25">*</op:operator><name pos:line="851" pos:column="26">lenResult</name> <op:operator pos:line="851" pos:column="36">=</op:operator> <name pos:line="851" pos:column="38">pout</name> <op:operator pos:line="851" pos:column="43">-</op:operator> <name pos:line="851" pos:column="45">destForm</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then> <else pos:line="853" pos:column="11">else <block pos:line="853" pos:column="16">{
<expr_stmt><expr><call><name pos:line="854" pos:column="1">fprintf</name><argument_list pos:line="854" pos:column="8">(<argument><expr><name pos:line="854" pos:column="9">stderr</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="854" pos:column="17">"Can not iconv %s %s\n"</lit:literal></expr></argument>, <argument><expr><name pos:line="854" pos:column="42">charSetDest</name></expr></argument>, <argument><expr><name pos:line="854" pos:column="55">charSetSource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<if pos:line="856" pos:column="9">if <condition pos:line="856" pos:column="12">(<expr><op:operator pos:line="856" pos:column="13">!</op:operator><name pos:line="856" pos:column="14">destForm</name></expr>)</condition><then pos:line="856" pos:column="23"> <block pos:line="856" pos:column="24">{
		<expr_stmt><expr><name pos:line="857" pos:column="17">destForm</name> <op:operator pos:line="857" pos:column="26">=</op:operator> <op:operator pos:line="857" pos:column="28">new</op:operator> <name><name pos:line="857" pos:column="32">char</name><index pos:line="857" pos:column="36">[<expr><lit:literal type="number" pos:line="857" pos:column="37">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="858" pos:column="17">destForm</name><index pos:line="858" pos:column="25">[<expr><lit:literal type="number" pos:line="858" pos:column="26">0</lit:literal></expr>]</index></name> <op:operator pos:line="858" pos:column="29">=</op:operator> <lit:literal type="char" pos:line="858" pos:column="31">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="859" pos:column="17">*</op:operator><name pos:line="859" pos:column="18">lenResult</name> <op:operator pos:line="859" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="859" pos:column="30">0</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="861" pos:column="9">return <expr><name pos:line="861" pos:column="16">destForm</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="864" pos:column="1">// Returns the target converted to UTF8.</comment>
<comment type="line" pos:line="865" pos:column="1">// Return the length in bytes.</comment>
<function><type><name pos:line="866" pos:column="1">int</name></type> <name><name pos:line="866" pos:column="5">ScintillaGTK</name><op:operator pos:line="866" pos:column="17">::</op:operator><name pos:line="866" pos:column="19">TargetAsUTF8</name></name><parameter_list pos:line="866" pos:column="31">(<param><decl><type><name pos:line="866" pos:column="32">char</name> <type:modifier pos:line="866" pos:column="37">*</type:modifier></type><name pos:line="866" pos:column="38">text</name></decl></param>)</parameter_list> <block pos:line="866" pos:column="44">{
	<decl_stmt><decl><type><name pos:line="867" pos:column="9">int</name></type> <name pos:line="867" pos:column="13">targetLength</name> <init pos:line="867" pos:column="26">= <expr><name pos:line="867" pos:column="28">targetEnd</name> <op:operator pos:line="867" pos:column="38">-</op:operator> <name pos:line="867" pos:column="40">targetStart</name></expr></init></decl>;</decl_stmt>
	<if pos:line="868" pos:column="9">if <condition pos:line="868" pos:column="12">(<expr><call><name pos:line="868" pos:column="13">IsUnicodeMode</name><argument_list pos:line="868" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="868" pos:column="29"> <block pos:line="868" pos:column="30">{
		<if pos:line="869" pos:column="17">if <condition pos:line="869" pos:column="20">(<expr><name pos:line="869" pos:column="21">text</name></expr>)</condition><then pos:line="869" pos:column="26"> <block pos:line="869" pos:column="27">{
			<expr_stmt><expr><call><name><name pos:line="870" pos:column="25">pdoc</name><op:operator pos:line="870" pos:column="29">-&gt;</op:operator><name pos:line="870" pos:column="31">GetCharRange</name></name><argument_list pos:line="870" pos:column="43">(<argument><expr><name pos:line="870" pos:column="44">text</name></expr></argument>, <argument><expr><name pos:line="870" pos:column="50">targetStart</name></expr></argument>, <argument><expr><name pos:line="870" pos:column="63">targetLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="872" pos:column="11">else <block pos:line="872" pos:column="16">{
		<comment type="line" pos:line="873" pos:column="17">// Need to convert</comment>
		<decl_stmt><decl><type><specifier pos:line="874" pos:column="17">const</specifier> <name pos:line="874" pos:column="23">char</name> <type:modifier pos:line="874" pos:column="28">*</type:modifier></type><name pos:line="874" pos:column="29">charSetBuffer</name> <init pos:line="874" pos:column="43">= <expr><call><name pos:line="874" pos:column="45">CharacterSetID</name><argument_list pos:line="874" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="875" pos:column="17">if <condition pos:line="875" pos:column="20">(<expr><op:operator pos:line="875" pos:column="21">*</op:operator><name pos:line="875" pos:column="22">charSetBuffer</name></expr>)</condition><then pos:line="875" pos:column="36"> <block pos:line="875" pos:column="37">{
<comment type="line" pos:line="876" pos:column="1">//~ fprintf(stderr, "AsUTF8 %s %d  %0d-%0d\n", charSetBuffer, targetLength, targetStart, targetEnd);</comment>
			<decl_stmt><decl><type><name pos:line="877" pos:column="25">char</name> <type:modifier pos:line="877" pos:column="30">*</type:modifier></type><name pos:line="877" pos:column="31">s</name> <init pos:line="877" pos:column="33">= <expr><op:operator pos:line="877" pos:column="35">new</op:operator> <name><name pos:line="877" pos:column="39">char</name><index pos:line="877" pos:column="43">[<expr><name pos:line="877" pos:column="44">targetLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if pos:line="878" pos:column="25">if <condition pos:line="878" pos:column="28">(<expr><name pos:line="878" pos:column="29">s</name></expr>)</condition><then pos:line="878" pos:column="31"> <block pos:line="878" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="879" pos:column="33">pdoc</name><op:operator pos:line="879" pos:column="37">-&gt;</op:operator><name pos:line="879" pos:column="39">GetCharRange</name></name><argument_list pos:line="879" pos:column="51">(<argument><expr><name pos:line="879" pos:column="52">s</name></expr></argument>, <argument><expr><name pos:line="879" pos:column="55">targetStart</name></expr></argument>, <argument><expr><name pos:line="879" pos:column="68">targetLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:line="880" pos:column="1">//~ fprintf(stderr, "    \"%s\"\n", s);</comment>
				<if pos:line="881" pos:column="33">if <condition pos:line="881" pos:column="36">(<expr><name pos:line="881" pos:column="37">text</name></expr>)</condition><then pos:line="881" pos:column="42"> <block pos:line="881" pos:column="43">{
					<decl_stmt><decl><type><name pos:line="882" pos:column="41">char</name> <type:modifier pos:line="882" pos:column="46">*</type:modifier></type><name pos:line="882" pos:column="47">tmputf</name> <init pos:line="882" pos:column="54">= <expr><call><name pos:line="882" pos:column="56">ConvertText</name><argument_list pos:line="882" pos:column="67">(<argument><expr><op:operator pos:line="882" pos:column="68">&amp;</op:operator><name pos:line="882" pos:column="69">targetLength</name></expr></argument>, <argument><expr><name pos:line="882" pos:column="83">s</name></expr></argument>, <argument><expr><name pos:line="882" pos:column="86">targetLength</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="882" pos:column="100">"UTF-8"</lit:literal></expr></argument>, <argument><expr><name pos:line="882" pos:column="109">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="882" pos:column="124">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="883" pos:column="41">memcpy</name><argument_list pos:line="883" pos:column="47">(<argument><expr><name pos:line="883" pos:column="48">text</name></expr></argument>, <argument><expr><name pos:line="883" pos:column="54">tmputf</name></expr></argument>, <argument><expr><name pos:line="883" pos:column="62">targetLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><op:operator pos:line="884" pos:column="41">delete</op:operator> <index pos:line="884" pos:column="48">[]</index><name pos:line="884" pos:column="50">tmputf</name></expr>;</expr_stmt>
<comment type="line" pos:line="885" pos:column="1">//~ fprintf(stderr, "    \"%s\"\n", text);</comment>
				}</block></then></if>
				<expr_stmt><expr><op:operator pos:line="887" pos:column="33">delete</op:operator> <index pos:line="887" pos:column="40">[]</index><name pos:line="887" pos:column="42">s</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then> <else pos:line="889" pos:column="19">else <block pos:line="889" pos:column="24">{
			<if pos:line="890" pos:column="25">if <condition pos:line="890" pos:column="28">(<expr><name pos:line="890" pos:column="29">text</name></expr>)</condition><then pos:line="890" pos:column="34"> <block pos:line="890" pos:column="35">{
				<expr_stmt><expr><call><name><name pos:line="891" pos:column="33">pdoc</name><op:operator pos:line="891" pos:column="37">-&gt;</op:operator><name pos:line="891" pos:column="39">GetCharRange</name></name><argument_list pos:line="891" pos:column="51">(<argument><expr><name pos:line="891" pos:column="52">text</name></expr></argument>, <argument><expr><name pos:line="891" pos:column="58">targetStart</name></expr></argument>, <argument><expr><name pos:line="891" pos:column="71">targetLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></else></if>
<comment type="line" pos:line="895" pos:column="1">//~ fprintf(stderr, "Length = %d bytes\n", targetLength);</comment>
	<return pos:line="896" pos:column="9">return <expr><name pos:line="896" pos:column="16">targetLength</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="899" pos:column="1">// Translates a nul terminated UTF8 string into the document encoding.</comment>
<comment type="line" pos:line="900" pos:column="1">// Return the length of the result in bytes.</comment>
<function><type><name pos:line="901" pos:column="1">int</name></type> <name><name pos:line="901" pos:column="5">ScintillaGTK</name><op:operator pos:line="901" pos:column="17">::</op:operator><name pos:line="901" pos:column="19">EncodedFromUTF8</name></name><parameter_list pos:line="901" pos:column="34">(<param><decl><type><name pos:line="901" pos:column="35">char</name> <type:modifier pos:line="901" pos:column="40">*</type:modifier></type><name pos:line="901" pos:column="41">utf8</name></decl></param>, <param><decl><type><name pos:line="901" pos:column="47">char</name> <type:modifier pos:line="901" pos:column="52">*</type:modifier></type><name pos:line="901" pos:column="53">encoded</name></decl></param>)</parameter_list> <block pos:line="901" pos:column="62">{
	<decl_stmt><decl><type><name pos:line="902" pos:column="9">int</name></type> <name pos:line="902" pos:column="13">inputLength</name> <init pos:line="902" pos:column="25">= <expr><op:operator pos:line="902" pos:column="27">(</op:operator><name pos:line="902" pos:column="28">lengthForEncode</name> <op:operator pos:line="902" pos:column="44">&gt;=</op:operator> <lit:literal type="number" pos:line="902" pos:column="47">0</lit:literal><op:operator pos:line="902" pos:column="48">)</op:operator> <op:operator pos:line="902" pos:column="50">?</op:operator> <name pos:line="902" pos:column="52">lengthForEncode</name> <op:operator pos:line="902" pos:column="68">:</op:operator> <call><name pos:line="902" pos:column="70">strlen</name><argument_list pos:line="902" pos:column="76">(<argument><expr><name pos:line="902" pos:column="77">utf8</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="903" pos:column="9">if <condition pos:line="903" pos:column="12">(<expr><call><name pos:line="903" pos:column="13">IsUnicodeMode</name><argument_list pos:line="903" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="903" pos:column="29"> <block pos:line="903" pos:column="30">{
		<if pos:line="904" pos:column="17">if <condition pos:line="904" pos:column="20">(<expr><name pos:line="904" pos:column="21">encoded</name></expr>)</condition><then pos:line="904" pos:column="29"> <block pos:line="904" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="905" pos:column="25">memcpy</name><argument_list pos:line="905" pos:column="31">(<argument><expr><name pos:line="905" pos:column="32">encoded</name></expr></argument>, <argument><expr><name pos:line="905" pos:column="41">utf8</name></expr></argument>, <argument><expr><name pos:line="905" pos:column="47">inputLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<return pos:line="907" pos:column="17">return <expr><name pos:line="907" pos:column="24">inputLength</name></expr>;</return>
	}</block></then> <else pos:line="908" pos:column="11">else <block pos:line="908" pos:column="16">{
		<comment type="line" pos:line="909" pos:column="17">// Need to convert</comment>
		<decl_stmt><decl><type><specifier pos:line="910" pos:column="17">const</specifier> <name pos:line="910" pos:column="23">char</name> <type:modifier pos:line="910" pos:column="28">*</type:modifier></type><name pos:line="910" pos:column="29">charSetBuffer</name> <init pos:line="910" pos:column="43">= <expr><call><name pos:line="910" pos:column="45">CharacterSetID</name><argument_list pos:line="910" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="911" pos:column="17">if <condition pos:line="911" pos:column="20">(<expr><op:operator pos:line="911" pos:column="21">*</op:operator><name pos:line="911" pos:column="22">charSetBuffer</name></expr>)</condition><then pos:line="911" pos:column="36"> <block pos:line="911" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="912" pos:column="25">int</name></type> <name pos:line="912" pos:column="29">outLength</name> <init pos:line="912" pos:column="39">= <expr><lit:literal type="number" pos:line="912" pos:column="41">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="913" pos:column="25">char</name> <type:modifier pos:line="913" pos:column="30">*</type:modifier></type><name pos:line="913" pos:column="31">tmpEncoded</name> <init pos:line="913" pos:column="42">= <expr><call><name pos:line="913" pos:column="44">ConvertText</name><argument_list pos:line="913" pos:column="55">(<argument><expr><op:operator pos:line="913" pos:column="56">&amp;</op:operator><name pos:line="913" pos:column="57">outLength</name></expr></argument>, <argument><expr><name pos:line="913" pos:column="68">utf8</name></expr></argument>, <argument><expr><name pos:line="913" pos:column="74">inputLength</name></expr></argument>, <argument><expr><name pos:line="913" pos:column="87">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="913" pos:column="102">"UTF-8"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="913" pos:column="111">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="914" pos:column="25">if <condition pos:line="914" pos:column="28">(<expr><name pos:line="914" pos:column="29">tmpEncoded</name></expr>)</condition><then pos:line="914" pos:column="40"> <block pos:line="914" pos:column="41">{
				<if pos:line="915" pos:column="33">if <condition pos:line="915" pos:column="36">(<expr><name pos:line="915" pos:column="37">encoded</name></expr>)</condition><then pos:line="915" pos:column="45"> <block pos:line="915" pos:column="46">{
					<expr_stmt><expr><call><name pos:line="916" pos:column="41">memcpy</name><argument_list pos:line="916" pos:column="47">(<argument><expr><name pos:line="916" pos:column="48">encoded</name></expr></argument>, <argument><expr><name pos:line="916" pos:column="57">tmpEncoded</name></expr></argument>, <argument><expr><name pos:line="916" pos:column="69">outLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><op:operator pos:line="918" pos:column="33">delete</op:operator> <index pos:line="918" pos:column="40">[]</index><name pos:line="918" pos:column="42">tmpEncoded</name></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="920" pos:column="25">return <expr><name pos:line="920" pos:column="32">outLength</name></expr>;</return>
		}</block></then> <else pos:line="921" pos:column="19">else <block pos:line="921" pos:column="24">{
			<if pos:line="922" pos:column="25">if <condition pos:line="922" pos:column="28">(<expr><name pos:line="922" pos:column="29">encoded</name></expr>)</condition><then pos:line="922" pos:column="37"> <block pos:line="922" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="923" pos:column="33">memcpy</name><argument_list pos:line="923" pos:column="39">(<argument><expr><name pos:line="923" pos:column="40">encoded</name></expr></argument>, <argument><expr><name pos:line="923" pos:column="49">utf8</name></expr></argument>, <argument><expr><name pos:line="923" pos:column="55">inputLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="925" pos:column="25">return <expr><name pos:line="925" pos:column="32">inputLength</name></expr>;</return>
		}</block></else></if>
	}</block></else></if>
	<comment type="line" pos:line="928" pos:column="9">// Fail</comment>
	<return pos:line="929" pos:column="9">return <expr><lit:literal type="number" pos:line="929" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="932" pos:column="1">bool</name></type> <name><name pos:line="932" pos:column="6">ScintillaGTK</name><op:operator pos:line="932" pos:column="18">::</op:operator><name pos:line="932" pos:column="20">ValidCodePage</name></name><parameter_list pos:line="932" pos:column="33">(<param><decl><type><name pos:line="932" pos:column="34">int</name></type> <name pos:line="932" pos:column="38">codePage</name></decl></param>)</parameter_list> <specifier pos:line="932" pos:column="48">const</specifier> <block pos:line="932" pos:column="54">{
	<return pos:line="933" pos:column="9">return <expr><name pos:line="933" pos:column="16">codePage</name> <op:operator pos:line="933" pos:column="25">==</op:operator> <lit:literal type="number" pos:line="933" pos:column="28">0</lit:literal>
	<op:operator pos:line="934" pos:column="9">||</op:operator> <name pos:line="934" pos:column="12">codePage</name> <op:operator pos:line="934" pos:column="21">==</op:operator> <name pos:line="934" pos:column="24">SC_CP_UTF8</name>
	<op:operator pos:line="935" pos:column="9">||</op:operator> <name pos:line="935" pos:column="12">codePage</name> <op:operator pos:line="935" pos:column="21">==</op:operator> <lit:literal type="number" pos:line="935" pos:column="24">932</lit:literal>
	<op:operator pos:line="936" pos:column="9">||</op:operator> <name pos:line="936" pos:column="12">codePage</name> <op:operator pos:line="936" pos:column="21">==</op:operator> <lit:literal type="number" pos:line="936" pos:column="24">936</lit:literal>
	<op:operator pos:line="937" pos:column="9">||</op:operator> <name pos:line="937" pos:column="12">codePage</name> <op:operator pos:line="937" pos:column="21">==</op:operator> <lit:literal type="number" pos:line="937" pos:column="24">949</lit:literal>
	<op:operator pos:line="938" pos:column="9">||</op:operator> <name pos:line="938" pos:column="12">codePage</name> <op:operator pos:line="938" pos:column="21">==</op:operator> <lit:literal type="number" pos:line="938" pos:column="24">950</lit:literal>
	<op:operator pos:line="939" pos:column="9">||</op:operator> <name pos:line="939" pos:column="12">codePage</name> <op:operator pos:line="939" pos:column="21">==</op:operator> <lit:literal type="number" pos:line="939" pos:column="24">1361</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="942" pos:column="1">sptr_t</name></type> <name><name pos:line="942" pos:column="8">ScintillaGTK</name><op:operator pos:line="942" pos:column="20">::</op:operator><name pos:line="942" pos:column="22">WndProc</name></name><parameter_list pos:line="942" pos:column="29">(<param><decl><type><name pos:line="942" pos:column="30">unsigned</name> <name pos:line="942" pos:column="39">int</name></type> <name pos:line="942" pos:column="43">iMessage</name></decl></param>, <param><decl><type><name pos:line="942" pos:column="53">uptr_t</name></type> <name pos:line="942" pos:column="60">wParam</name></decl></param>, <param><decl><type><name pos:line="942" pos:column="68">sptr_t</name></type> <name pos:line="942" pos:column="75">lParam</name></decl></param>)</parameter_list> <block pos:line="942" pos:column="83">{
	<try pos:line="943" pos:column="9">try <block pos:line="943" pos:column="13">{
		<switch pos:line="944" pos:column="17">switch <condition pos:line="944" pos:column="24">(<expr><name pos:line="944" pos:column="25">iMessage</name></expr>)</condition> <block pos:line="944" pos:column="35">{

		<case pos:line="946" pos:column="17">case <expr><name pos:line="946" pos:column="22">SCI_GRABFOCUS</name></expr>:
			<expr_stmt><expr><call><name pos:line="947" pos:column="25">gtk_widget_grab_focus</name><argument_list pos:line="947" pos:column="46">(<argument><expr><call><name pos:line="947" pos:column="47">PWidget</name><argument_list pos:line="947" pos:column="54">(<argument><expr><name pos:line="947" pos:column="55">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="948" pos:column="25">break;</break>

		</case><case pos:line="950" pos:column="17">case <expr><name pos:line="950" pos:column="22">SCI_GETDIRECTFUNCTION</name></expr>:
			<return pos:line="951" pos:column="25">return <expr><call><name><name pos:line="951" pos:column="32">reinterpret_cast</name><argument_list pos:line="951" pos:column="48">&lt;<argument><expr><name pos:line="951" pos:column="49">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="951" pos:column="56">(<argument><expr><name pos:line="951" pos:column="57">DirectFunction</name></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="953" pos:column="17">case <expr><name pos:line="953" pos:column="22">SCI_GETDIRECTPOINTER</name></expr>:
			<return pos:line="954" pos:column="25">return <expr><call><name><name pos:line="954" pos:column="32">reinterpret_cast</name><argument_list pos:line="954" pos:column="48">&lt;<argument><expr><name pos:line="954" pos:column="49">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="954" pos:column="56">(<argument><expr><name pos:line="954" pos:column="57">this</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:ifdef pos:line="956" pos:column="1">#<cpp:directive pos:line="956" pos:column="2">ifdef</cpp:directive> <name pos:line="956" pos:column="8">SCI_LEXER</name></cpp:ifdef>
		</case><case pos:line="957" pos:column="17">case <expr><name pos:line="957" pos:column="22">SCI_LOADLEXERLIBRARY</name></expr>:
                        <expr_stmt><expr><call><name><name pos:line="958" pos:column="25">LexerManager</name><op:operator pos:line="958" pos:column="37">::</op:operator><name pos:line="958" pos:column="39">GetInstance</name></name><argument_list pos:line="958" pos:column="50">()</argument_list></call><op:operator pos:line="958" pos:column="52">-&gt;</op:operator><call><name pos:line="958" pos:column="54">Load</name><argument_list pos:line="958" pos:column="58">(<argument><expr><call><name><name pos:line="958" pos:column="59">reinterpret_cast</name><argument_list pos:line="958" pos:column="75">&lt;<argument><expr><specifier pos:line="958" pos:column="76">const</specifier> <name pos:line="958" pos:column="82">char</name><op:operator pos:line="958" pos:column="86">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="958" pos:column="88">(<argument><expr><name pos:line="958" pos:column="89">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="959" pos:column="25">break;</break>
<cpp:endif pos:line="960" pos:column="1">#<cpp:directive pos:line="960" pos:column="2">endif</cpp:directive></cpp:endif>
		</case><case pos:line="961" pos:column="17">case <expr><name pos:line="961" pos:column="22">SCI_TARGETASUTF8</name></expr>:
			<return pos:line="962" pos:column="25">return <expr><call><name pos:line="962" pos:column="32">TargetAsUTF8</name><argument_list pos:line="962" pos:column="44">(<argument><expr><call><name><name pos:line="962" pos:column="45">reinterpret_cast</name><argument_list pos:line="962" pos:column="61">&lt;<argument><expr><name pos:line="962" pos:column="62">char</name><op:operator pos:line="962" pos:column="66">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="962" pos:column="68">(<argument><expr><name pos:line="962" pos:column="69">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="964" pos:column="17">case <expr><name pos:line="964" pos:column="22">SCI_ENCODEDFROMUTF8</name></expr>:
			<return pos:line="965" pos:column="25">return <expr><call><name pos:line="965" pos:column="32">EncodedFromUTF8</name><argument_list pos:line="965" pos:column="47">(<argument><expr><call><name><name pos:line="965" pos:column="48">reinterpret_cast</name><argument_list pos:line="965" pos:column="64">&lt;<argument><expr><name pos:line="965" pos:column="65">char</name><op:operator pos:line="965" pos:column="69">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="965" pos:column="71">(<argument><expr><name pos:line="965" pos:column="72">wParam</name></expr></argument>)</argument_list></call></expr></argument>,
			        <argument><expr><call><name><name pos:line="966" pos:column="33">reinterpret_cast</name><argument_list pos:line="966" pos:column="49">&lt;<argument><expr><name pos:line="966" pos:column="50">char</name><op:operator pos:line="966" pos:column="54">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="966" pos:column="56">(<argument><expr><name pos:line="966" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="968" pos:column="17">case <expr><name pos:line="968" pos:column="22">SCI_SETRECTANGULARSELECTIONMODIFIER</name></expr>:
			<expr_stmt><expr><name pos:line="969" pos:column="25">rectangularSelectionModifier</name> <op:operator pos:line="969" pos:column="54">=</op:operator> <name pos:line="969" pos:column="56">wParam</name></expr>;</expr_stmt>
			<break pos:line="970" pos:column="25">break;</break>

		</case><case pos:line="972" pos:column="17">case <expr><name pos:line="972" pos:column="22">SCI_GETRECTANGULARSELECTIONMODIFIER</name></expr>:
			<return pos:line="973" pos:column="25">return <expr><name pos:line="973" pos:column="32">rectangularSelectionModifier</name></expr>;</return>

		</case><default pos:line="975" pos:column="17">default:
			<return pos:line="976" pos:column="25">return <expr><call><name><name pos:line="976" pos:column="32">ScintillaBase</name><op:operator pos:line="976" pos:column="45">::</op:operator><name pos:line="976" pos:column="47">WndProc</name></name><argument_list pos:line="976" pos:column="54">(<argument><expr><name pos:line="976" pos:column="55">iMessage</name></expr></argument>, <argument><expr><name pos:line="976" pos:column="65">wParam</name></expr></argument>, <argument><expr><name pos:line="976" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		</default>}</block></switch>
	}</block> <catch pos:line="978" pos:column="11">catch <parameter_list pos:line="978" pos:column="17">(<param><decl><type><name><name pos:line="978" pos:column="18">std</name><op:operator pos:line="978" pos:column="21">::</op:operator><name pos:line="978" pos:column="23">bad_alloc</name></name><type:modifier pos:line="978" pos:column="32">&amp;</type:modifier></type></decl></param>)</parameter_list> <block pos:line="978" pos:column="35">{
		<expr_stmt><expr><name pos:line="979" pos:column="17">errorStatus</name> <op:operator pos:line="979" pos:column="29">=</op:operator> <name pos:line="979" pos:column="31">SC_STATUS_BADALLOC</name></expr>;</expr_stmt>
	}</block></catch> <catch pos:line="980" pos:column="11">catch <parameter_list pos:line="980" pos:column="17">(<param><decl><type><type:modifier pos:line="980" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="980" pos:column="23">{
		<expr_stmt><expr><name pos:line="981" pos:column="17">errorStatus</name> <op:operator pos:line="981" pos:column="29">=</op:operator> <name pos:line="981" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="983" pos:column="9">return <expr><lit:literal type="number" pos:line="983" pos:column="16">0l</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="986" pos:column="1">sptr_t</name></type> <name><name pos:line="986" pos:column="8">ScintillaGTK</name><op:operator pos:line="986" pos:column="20">::</op:operator><name pos:line="986" pos:column="22">DefWndProc</name></name><parameter_list pos:line="986" pos:column="32">(<param><decl><type><name pos:line="986" pos:column="33">unsigned</name></type> <name pos:line="986" pos:column="42">int</name></decl></param>, <param><decl><type><name pos:line="986" pos:column="47">uptr_t</name></type></decl></param>, <param><decl><type><name pos:line="986" pos:column="55">sptr_t</name></type></decl></param>)</parameter_list> <block pos:line="986" pos:column="63">{
	<return pos:line="987" pos:column="9">return <expr><lit:literal type="number" pos:line="987" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="990" pos:column="1">void</name></type> <name><name pos:line="990" pos:column="6">ScintillaGTK</name><op:operator pos:line="990" pos:column="18">::</op:operator><name pos:line="990" pos:column="20">SetTicking</name></name><parameter_list pos:line="990" pos:column="30">(<param><decl><type><name pos:line="990" pos:column="31">bool</name></type> <name pos:line="990" pos:column="36">on</name></decl></param>)</parameter_list> <block pos:line="990" pos:column="40">{
	<if pos:line="991" pos:column="9">if <condition pos:line="991" pos:column="12">(<expr><name><name pos:line="991" pos:column="13">timer</name><op:operator pos:line="991" pos:column="18">.</op:operator><name pos:line="991" pos:column="19">ticking</name></name> <op:operator pos:line="991" pos:column="27">!=</op:operator> <name pos:line="991" pos:column="30">on</name></expr>)</condition><then pos:line="991" pos:column="33"> <block pos:line="991" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="992" pos:column="17">timer</name><op:operator pos:line="992" pos:column="22">.</op:operator><name pos:line="992" pos:column="23">ticking</name></name> <op:operator pos:line="992" pos:column="31">=</op:operator> <name pos:line="992" pos:column="33">on</name></expr>;</expr_stmt>
		<if pos:line="993" pos:column="17">if <condition pos:line="993" pos:column="20">(<expr><name><name pos:line="993" pos:column="21">timer</name><op:operator pos:line="993" pos:column="26">.</op:operator><name pos:line="993" pos:column="27">ticking</name></name></expr>)</condition><then pos:line="993" pos:column="35"> <block pos:line="993" pos:column="36">{
			<expr_stmt><expr><name><name pos:line="994" pos:column="25">timer</name><op:operator pos:line="994" pos:column="30">.</op:operator><name pos:line="994" pos:column="31">tickerID</name></name> <op:operator pos:line="994" pos:column="40">=</op:operator> <call><name><name pos:line="994" pos:column="42">reinterpret_cast</name><argument_list pos:line="994" pos:column="58">&lt;<argument><expr><name pos:line="994" pos:column="59">TickerID</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="994" pos:column="68">(<argument><expr><call><name pos:line="994" pos:column="69">g_timeout_add</name><argument_list pos:line="994" pos:column="82">(<argument><expr><name><name pos:line="994" pos:column="83">timer</name><op:operator pos:line="994" pos:column="88">.</op:operator><name pos:line="994" pos:column="89">tickSize</name></name></expr></argument>,
				<argument><expr><call><name><name pos:line="995" pos:column="33">reinterpret_cast</name><argument_list pos:line="995" pos:column="49">&lt;<argument><expr><name pos:line="995" pos:column="50">GSourceFunc</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="995" pos:column="62">(<argument><expr><name pos:line="995" pos:column="63">TimeOut</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="995" pos:column="73">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="996" pos:column="19">else <block pos:line="996" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="997" pos:column="25">g_source_remove</name><argument_list pos:line="997" pos:column="40">(<argument><expr><call><name pos:line="997" pos:column="41">GPOINTER_TO_UINT</name><argument_list pos:line="997" pos:column="57">(<argument><expr><name><name pos:line="997" pos:column="58">timer</name><op:operator pos:line="997" pos:column="63">.</op:operator><name pos:line="997" pos:column="64">tickerID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<expr_stmt><expr><name><name pos:line="1000" pos:column="9">timer</name><op:operator pos:line="1000" pos:column="14">.</op:operator><name pos:line="1000" pos:column="15">ticksToWait</name></name> <op:operator pos:line="1000" pos:column="27">=</op:operator> <name><name pos:line="1000" pos:column="29">caret</name><op:operator pos:line="1000" pos:column="34">.</op:operator><name pos:line="1000" pos:column="35">period</name></name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1003" pos:column="1">bool</name></type> <name><name pos:line="1003" pos:column="6">ScintillaGTK</name><op:operator pos:line="1003" pos:column="18">::</op:operator><name pos:line="1003" pos:column="20">SetIdle</name></name><parameter_list pos:line="1003" pos:column="27">(<param><decl><type><name pos:line="1003" pos:column="28">bool</name></type> <name pos:line="1003" pos:column="33">on</name></decl></param>)</parameter_list> <block pos:line="1003" pos:column="37">{
	<if pos:line="1004" pos:column="9">if <condition pos:line="1004" pos:column="12">(<expr><name pos:line="1004" pos:column="13">on</name></expr>)</condition><then pos:line="1004" pos:column="16"> <block pos:line="1004" pos:column="17">{
		<comment type="line" pos:line="1005" pos:column="17">// Start idler, if it's not running.</comment>
		<if pos:line="1006" pos:column="17">if <condition pos:line="1006" pos:column="20">(<expr><op:operator pos:line="1006" pos:column="21">!</op:operator><name><name pos:line="1006" pos:column="22">idler</name><op:operator pos:line="1006" pos:column="27">.</op:operator><name pos:line="1006" pos:column="28">state</name></name></expr>)</condition><then pos:line="1006" pos:column="34"> <block pos:line="1006" pos:column="35">{
			<expr_stmt><expr><name><name pos:line="1007" pos:column="25">idler</name><op:operator pos:line="1007" pos:column="30">.</op:operator><name pos:line="1007" pos:column="31">state</name></name> <op:operator pos:line="1007" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="1007" pos:column="39">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1008" pos:column="25">idler</name><op:operator pos:line="1008" pos:column="30">.</op:operator><name pos:line="1008" pos:column="31">idlerID</name></name> <op:operator pos:line="1008" pos:column="39">=</op:operator> <call><name><name pos:line="1008" pos:column="41">reinterpret_cast</name><argument_list pos:line="1008" pos:column="57">&lt;<argument><expr><name pos:line="1008" pos:column="58">IdlerID</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1008" pos:column="66">(
				<argument><expr><call><name pos:line="1009" pos:column="33">g_idle_add_full</name><argument_list pos:line="1009" pos:column="48">(<argument><expr><name pos:line="1009" pos:column="49">G_PRIORITY_DEFAULT_IDLE</name></expr></argument>,
					<argument><expr><call><name><name pos:line="1010" pos:column="41">reinterpret_cast</name><argument_list pos:line="1010" pos:column="57">&lt;<argument><expr><name pos:line="1010" pos:column="58">GSourceFunc</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1010" pos:column="70">(<argument><expr><name pos:line="1010" pos:column="71">IdleCallback</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1010" pos:column="86">this</name></expr></argument>, <argument><expr><name pos:line="1010" pos:column="92">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="1012" pos:column="11">else <block pos:line="1012" pos:column="16">{
		<comment type="line" pos:line="1013" pos:column="17">// Stop idler, if it's running</comment>
		<if pos:line="1014" pos:column="17">if <condition pos:line="1014" pos:column="20">(<expr><name><name pos:line="1014" pos:column="21">idler</name><op:operator pos:line="1014" pos:column="26">.</op:operator><name pos:line="1014" pos:column="27">state</name></name></expr>)</condition><then pos:line="1014" pos:column="33"> <block pos:line="1014" pos:column="34">{
			<expr_stmt><expr><name><name pos:line="1015" pos:column="25">idler</name><op:operator pos:line="1015" pos:column="30">.</op:operator><name pos:line="1015" pos:column="31">state</name></name> <op:operator pos:line="1015" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="1015" pos:column="39">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1016" pos:column="25">g_source_remove</name><argument_list pos:line="1016" pos:column="40">(<argument><expr><call><name pos:line="1016" pos:column="41">GPOINTER_TO_UINT</name><argument_list pos:line="1016" pos:column="57">(<argument><expr><name><name pos:line="1016" pos:column="58">idler</name><op:operator pos:line="1016" pos:column="63">.</op:operator><name pos:line="1016" pos:column="64">idlerID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>
	<return pos:line="1019" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1019" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1022" pos:column="1">void</name></type> <name><name pos:line="1022" pos:column="6">ScintillaGTK</name><op:operator pos:line="1022" pos:column="18">::</op:operator><name pos:line="1022" pos:column="20">SetMouseCapture</name></name><parameter_list pos:line="1022" pos:column="35">(<param><decl><type><name pos:line="1022" pos:column="36">bool</name></type> <name pos:line="1022" pos:column="41">on</name></decl></param>)</parameter_list> <block pos:line="1022" pos:column="45">{
	<if pos:line="1023" pos:column="9">if <condition pos:line="1023" pos:column="12">(<expr><name pos:line="1023" pos:column="13">mouseDownCaptures</name></expr>)</condition><then pos:line="1023" pos:column="31"> <block pos:line="1023" pos:column="32">{
		<if pos:line="1024" pos:column="17">if <condition pos:line="1024" pos:column="20">(<expr><name pos:line="1024" pos:column="21">on</name></expr>)</condition><then pos:line="1024" pos:column="24"> <block pos:line="1024" pos:column="25">{
			<expr_stmt><expr><call><name pos:line="1025" pos:column="25">gtk_grab_add</name><argument_list pos:line="1025" pos:column="37">(<argument><expr><call><name pos:line="1025" pos:column="38">GTK_WIDGET</name><argument_list pos:line="1025" pos:column="48">(<argument><expr><call><name pos:line="1025" pos:column="49">PWidget</name><argument_list pos:line="1025" pos:column="56">(<argument><expr><name pos:line="1025" pos:column="57">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="1026" pos:column="19">else <block pos:line="1026" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="1027" pos:column="25">gtk_grab_remove</name><argument_list pos:line="1027" pos:column="40">(<argument><expr><call><name pos:line="1027" pos:column="41">GTK_WIDGET</name><argument_list pos:line="1027" pos:column="51">(<argument><expr><call><name pos:line="1027" pos:column="52">PWidget</name><argument_list pos:line="1027" pos:column="59">(<argument><expr><name pos:line="1027" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="1030" pos:column="9">capturedMouse</name> <op:operator pos:line="1030" pos:column="23">=</op:operator> <name pos:line="1030" pos:column="25">on</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1033" pos:column="1">bool</name></type> <name><name pos:line="1033" pos:column="6">ScintillaGTK</name><op:operator pos:line="1033" pos:column="18">::</op:operator><name pos:line="1033" pos:column="20">HaveMouseCapture</name></name><parameter_list pos:line="1033" pos:column="36">()</parameter_list> <block pos:line="1033" pos:column="39">{
	<return pos:line="1034" pos:column="9">return <expr><name pos:line="1034" pos:column="16">capturedMouse</name></expr>;</return>
}</block></function>

<cpp:if pos:line="1037" pos:column="1">#<cpp:directive pos:line="1037" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1037" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1037" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1037" pos:column="23">3</lit:literal><op:operator pos:line="1037" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1037" pos:column="25">0</lit:literal><op:operator pos:line="1037" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1037" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>

<comment type="line" pos:line="1039" pos:column="1">// Is crcTest completely in crcContainer?</comment>
<function><type><specifier pos:line="1040" pos:column="1">static</specifier> <name pos:line="1040" pos:column="8">bool</name></type> <name pos:line="1040" pos:column="13">CRectContains</name><parameter_list pos:line="1040" pos:column="26">(<param><decl><type><specifier pos:line="1040" pos:column="27">const</specifier> <name pos:line="1040" pos:column="33">cairo_rectangle_t</name> <type:modifier pos:line="1040" pos:column="51">&amp;</type:modifier></type><name pos:line="1040" pos:column="52">crcContainer</name></decl></param>, <param><decl><type><specifier pos:line="1040" pos:column="66">const</specifier> <name pos:line="1040" pos:column="72">cairo_rectangle_t</name> <type:modifier pos:line="1040" pos:column="90">&amp;</type:modifier></type><name pos:line="1040" pos:column="91">crcTest</name></decl></param>)</parameter_list> <block pos:line="1040" pos:column="100">{
	<return pos:line="1041" pos:column="9">return
		<expr><op:operator pos:line="1042" pos:column="17">(</op:operator><name><name pos:line="1042" pos:column="18">crcTest</name><op:operator pos:line="1042" pos:column="25">.</op:operator><name pos:line="1042" pos:column="26">x</name></name> <op:operator pos:line="1042" pos:column="28">&gt;=</op:operator> <name><name pos:line="1042" pos:column="31">crcContainer</name><op:operator pos:line="1042" pos:column="43">.</op:operator><name pos:line="1042" pos:column="44">x</name></name><op:operator pos:line="1042" pos:column="45">)</op:operator> <op:operator pos:line="1042" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="1042" pos:column="50">(</op:operator><op:operator pos:line="1042" pos:column="51">(</op:operator><name><name pos:line="1042" pos:column="52">crcTest</name><op:operator pos:line="1042" pos:column="59">.</op:operator><name pos:line="1042" pos:column="60">x</name></name> <op:operator pos:line="1042" pos:column="62">+</op:operator> <name><name pos:line="1042" pos:column="64">crcTest</name><op:operator pos:line="1042" pos:column="71">.</op:operator><name pos:line="1042" pos:column="72">width</name></name><op:operator pos:line="1042" pos:column="77">)</op:operator> <op:operator pos:line="1042" pos:column="79">&lt;=</op:operator> <op:operator pos:line="1042" pos:column="82">(</op:operator><name><name pos:line="1042" pos:column="83">crcContainer</name><op:operator pos:line="1042" pos:column="95">.</op:operator><name pos:line="1042" pos:column="96">x</name></name> <op:operator pos:line="1042" pos:column="98">+</op:operator> <name><name pos:line="1042" pos:column="100">crcContainer</name><op:operator pos:line="1042" pos:column="112">.</op:operator><name pos:line="1042" pos:column="113">width</name></name><op:operator pos:line="1042" pos:column="118">)</op:operator><op:operator pos:line="1042" pos:column="119">)</op:operator> <op:operator pos:line="1042" pos:column="121">&amp;&amp;</op:operator>
		<op:operator pos:line="1043" pos:column="17">(</op:operator><name><name pos:line="1043" pos:column="18">crcTest</name><op:operator pos:line="1043" pos:column="25">.</op:operator><name pos:line="1043" pos:column="26">y</name></name> <op:operator pos:line="1043" pos:column="28">&gt;=</op:operator> <name><name pos:line="1043" pos:column="31">crcContainer</name><op:operator pos:line="1043" pos:column="43">.</op:operator><name pos:line="1043" pos:column="44">y</name></name><op:operator pos:line="1043" pos:column="45">)</op:operator> <op:operator pos:line="1043" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="1043" pos:column="50">(</op:operator><op:operator pos:line="1043" pos:column="51">(</op:operator><name><name pos:line="1043" pos:column="52">crcTest</name><op:operator pos:line="1043" pos:column="59">.</op:operator><name pos:line="1043" pos:column="60">y</name></name> <op:operator pos:line="1043" pos:column="62">+</op:operator> <name><name pos:line="1043" pos:column="64">crcTest</name><op:operator pos:line="1043" pos:column="71">.</op:operator><name pos:line="1043" pos:column="72">height</name></name><op:operator pos:line="1043" pos:column="78">)</op:operator> <op:operator pos:line="1043" pos:column="80">&lt;=</op:operator> <op:operator pos:line="1043" pos:column="83">(</op:operator><name><name pos:line="1043" pos:column="84">crcContainer</name><op:operator pos:line="1043" pos:column="96">.</op:operator><name pos:line="1043" pos:column="97">y</name></name> <op:operator pos:line="1043" pos:column="99">+</op:operator> <name><name pos:line="1043" pos:column="101">crcContainer</name><op:operator pos:line="1043" pos:column="113">.</op:operator><name pos:line="1043" pos:column="114">height</name></name><op:operator pos:line="1043" pos:column="120">)</op:operator><op:operator pos:line="1043" pos:column="121">)</op:operator></expr>;</return>
}</block></function>

<comment type="line" pos:line="1046" pos:column="1">// Is crcTest completely in crcListContainer?</comment>
<comment type="line" pos:line="1047" pos:column="1">// May incorrectly return false if complex shape</comment>
<function><type><specifier pos:line="1048" pos:column="1">static</specifier> <name pos:line="1048" pos:column="8">bool</name></type> <name pos:line="1048" pos:column="13">CRectListContains</name><parameter_list pos:line="1048" pos:column="30">(<param><decl><type><specifier pos:line="1048" pos:column="31">const</specifier> <name pos:line="1048" pos:column="37">cairo_rectangle_list_t</name> <type:modifier pos:line="1048" pos:column="60">*</type:modifier></type><name pos:line="1048" pos:column="61">crcListContainer</name></decl></param>, <param><decl><type><specifier pos:line="1048" pos:column="79">const</specifier> <name pos:line="1048" pos:column="85">cairo_rectangle_t</name> <type:modifier pos:line="1048" pos:column="103">&amp;</type:modifier></type><name pos:line="1048" pos:column="104">crcTest</name></decl></param>)</parameter_list> <block pos:line="1048" pos:column="113">{
	<for pos:line="1049" pos:column="9">for (<init><decl><type><name pos:line="1049" pos:column="14">int</name></type> <name pos:line="1049" pos:column="18">r</name><init pos:line="1049" pos:column="19">=<expr><lit:literal type="number" pos:line="1049" pos:column="20">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1049" pos:column="23">r</name><op:operator pos:line="1049" pos:column="24">&lt;</op:operator><name><name pos:line="1049" pos:column="25">crcListContainer</name><op:operator pos:line="1049" pos:column="41">-&gt;</op:operator><name pos:line="1049" pos:column="43">num_rectangles</name></name></expr>;</condition> <incr><expr><name pos:line="1049" pos:column="59">r</name><op:operator pos:line="1049" pos:column="60">++</op:operator></expr></incr>) <block pos:line="1049" pos:column="64">{
		<if pos:line="1050" pos:column="17">if <condition pos:line="1050" pos:column="20">(<expr><call><name pos:line="1050" pos:column="21">CRectContains</name><argument_list pos:line="1050" pos:column="34">(<argument><expr><name><name pos:line="1050" pos:column="35">crcListContainer</name><op:operator pos:line="1050" pos:column="51">-&gt;</op:operator><name pos:line="1050" pos:column="53">rectangles</name><index pos:line="1050" pos:column="63">[<expr><name pos:line="1050" pos:column="64">r</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="68">crcTest</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1050" pos:column="77">
			<return pos:line="1051" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1051" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="1053" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1053" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<cpp:endif pos:line="1056" pos:column="1">#<cpp:directive pos:line="1056" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="1058" pos:column="1">bool</name></type> <name><name pos:line="1058" pos:column="6">ScintillaGTK</name><op:operator pos:line="1058" pos:column="18">::</op:operator><name pos:line="1058" pos:column="20">PaintContains</name></name><parameter_list pos:line="1058" pos:column="33">(<param><decl><type><name pos:line="1058" pos:column="34">PRectangle</name></type> <name pos:line="1058" pos:column="45">rc</name></decl></param>)</parameter_list> <block pos:line="1058" pos:column="49">{
	<comment type="line" pos:line="1059" pos:column="9">// This allows optimization when a rectangle is completely in the update region.</comment>
	<comment type="line" pos:line="1060" pos:column="9">// It is OK to return false when too difficult to determine as that just performs extra drawing</comment>
	<decl_stmt><decl><type><name pos:line="1061" pos:column="9">bool</name></type> <name pos:line="1061" pos:column="14">contains</name> <init pos:line="1061" pos:column="23">= <expr><lit:literal type="boolean" pos:line="1061" pos:column="25">true</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1062" pos:column="9">if <condition pos:line="1062" pos:column="12">(<expr><name pos:line="1062" pos:column="13">paintState</name> <op:operator pos:line="1062" pos:column="24">==</op:operator> <name pos:line="1062" pos:column="27">painting</name></expr>)</condition><then pos:line="1062" pos:column="36"> <block pos:line="1062" pos:column="37">{
		<if pos:line="1063" pos:column="17">if <condition pos:line="1063" pos:column="20">(<expr><op:operator pos:line="1063" pos:column="21">!</op:operator><call><name><name pos:line="1063" pos:column="22">rcPaint</name><op:operator pos:line="1063" pos:column="29">.</op:operator><name pos:line="1063" pos:column="30">Contains</name></name><argument_list pos:line="1063" pos:column="38">(<argument><expr><name pos:line="1063" pos:column="39">rc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1063" pos:column="43"> <block pos:line="1063" pos:column="44">{
			<expr_stmt><expr><name pos:line="1064" pos:column="25">contains</name> <op:operator pos:line="1064" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="1064" pos:column="36">false</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="1065" pos:column="19">else <if pos:line="1065" pos:column="24">if <condition pos:line="1065" pos:column="27">(<expr><name pos:line="1065" pos:column="28">rgnUpdate</name></expr>)</condition><then pos:line="1065" pos:column="38"> <block pos:line="1065" pos:column="39">{
<cpp:if pos:line="1066" pos:column="1">#<cpp:directive pos:line="1066" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1066" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1066" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1066" pos:column="23">3</lit:literal><op:operator pos:line="1066" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1066" pos:column="25">0</lit:literal><op:operator pos:line="1066" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1066" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
			<decl_stmt><decl><type><name pos:line="1067" pos:column="25">cairo_rectangle_t</name></type> <name pos:line="1067" pos:column="43">grc</name> <init pos:line="1067" pos:column="47">= <expr><block pos:line="1067" pos:column="49">{<expr><name><name pos:line="1067" pos:column="50">rc</name><op:operator pos:line="1067" pos:column="52">.</op:operator><name pos:line="1067" pos:column="53">left</name></name></expr>, <expr><name><name pos:line="1067" pos:column="59">rc</name><op:operator pos:line="1067" pos:column="61">.</op:operator><name pos:line="1067" pos:column="62">top</name></name></expr>,
				<expr><name><name pos:line="1068" pos:column="33">rc</name><op:operator pos:line="1068" pos:column="35">.</op:operator><name pos:line="1068" pos:column="36">right</name></name> <op:operator pos:line="1068" pos:column="42">-</op:operator> <name><name pos:line="1068" pos:column="44">rc</name><op:operator pos:line="1068" pos:column="46">.</op:operator><name pos:line="1068" pos:column="47">left</name></name></expr>, <expr><name><name pos:line="1068" pos:column="53">rc</name><op:operator pos:line="1068" pos:column="55">.</op:operator><name pos:line="1068" pos:column="56">bottom</name></name> <op:operator pos:line="1068" pos:column="63">-</op:operator> <name><name pos:line="1068" pos:column="65">rc</name><op:operator pos:line="1068" pos:column="67">.</op:operator><name pos:line="1068" pos:column="68">top</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1069" pos:column="25">contains</name> <op:operator pos:line="1069" pos:column="34">=</op:operator> <call><name pos:line="1069" pos:column="36">CRectListContains</name><argument_list pos:line="1069" pos:column="53">(<argument><expr><name pos:line="1069" pos:column="54">rgnUpdate</name></expr></argument>, <argument><expr><name pos:line="1069" pos:column="65">grc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1070" pos:column="1">#<cpp:directive pos:line="1070" pos:column="2">else</cpp:directive></cpp:else>
			<decl_stmt><decl><type><name pos:line="1071" pos:column="25">GdkRectangle</name></type> <name pos:line="1071" pos:column="38">grc</name> <init pos:line="1071" pos:column="42">= <expr><block pos:line="1071" pos:column="44">{<expr><name><name pos:line="1071" pos:column="45">rc</name><op:operator pos:line="1071" pos:column="47">.</op:operator><name pos:line="1071" pos:column="48">left</name></name></expr>, <expr><name><name pos:line="1071" pos:column="54">rc</name><op:operator pos:line="1071" pos:column="56">.</op:operator><name pos:line="1071" pos:column="57">top</name></name></expr>,
				<expr><name><name pos:line="1072" pos:column="33">rc</name><op:operator pos:line="1072" pos:column="35">.</op:operator><name pos:line="1072" pos:column="36">right</name></name> <op:operator pos:line="1072" pos:column="42">-</op:operator> <name><name pos:line="1072" pos:column="44">rc</name><op:operator pos:line="1072" pos:column="46">.</op:operator><name pos:line="1072" pos:column="47">left</name></name></expr>, <expr><name><name pos:line="1072" pos:column="53">rc</name><op:operator pos:line="1072" pos:column="55">.</op:operator><name pos:line="1072" pos:column="56">bottom</name></name> <op:operator pos:line="1072" pos:column="63">-</op:operator> <name><name pos:line="1072" pos:column="65">rc</name><op:operator pos:line="1072" pos:column="67">.</op:operator><name pos:line="1072" pos:column="68">top</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
			<if pos:line="1073" pos:column="25">if <condition pos:line="1073" pos:column="28">(<expr><call><name pos:line="1073" pos:column="29">gdk_region_rect_in</name><argument_list pos:line="1073" pos:column="47">(<argument><expr><name pos:line="1073" pos:column="48">rgnUpdate</name></expr></argument>, <argument><expr><op:operator pos:line="1073" pos:column="59">&amp;</op:operator><name pos:line="1073" pos:column="60">grc</name></expr></argument>)</argument_list></call> <op:operator pos:line="1073" pos:column="65">!=</op:operator> <name pos:line="1073" pos:column="68">GDK_OVERLAP_RECTANGLE_IN</name></expr>)</condition><then pos:line="1073" pos:column="93"> <block pos:line="1073" pos:column="94">{
				<expr_stmt><expr><name pos:line="1074" pos:column="33">contains</name> <op:operator pos:line="1074" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="1074" pos:column="44">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
<cpp:endif pos:line="1076" pos:column="1">#<cpp:directive pos:line="1076" pos:column="2">endif</cpp:directive></cpp:endif>
		}</block></then></if></else></if>
	}</block></then></if>
	<return pos:line="1079" pos:column="9">return <expr><name pos:line="1079" pos:column="16">contains</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="1082" pos:column="1">// Redraw all of text area. This paint will not be abandoned.</comment>
<function><type><name pos:line="1083" pos:column="1">void</name></type> <name><name pos:line="1083" pos:column="6">ScintillaGTK</name><op:operator pos:line="1083" pos:column="18">::</op:operator><name pos:line="1083" pos:column="20">FullPaint</name></name><parameter_list pos:line="1083" pos:column="29">()</parameter_list> <block pos:line="1083" pos:column="32">{
	<expr_stmt><expr><call><name><name pos:line="1084" pos:column="9">wText</name><op:operator pos:line="1084" pos:column="14">.</op:operator><name pos:line="1084" pos:column="15">InvalidateAll</name></name><argument_list pos:line="1084" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1087" pos:column="1">PRectangle</name></type> <name><name pos:line="1087" pos:column="12">ScintillaGTK</name><op:operator pos:line="1087" pos:column="24">::</op:operator><name pos:line="1087" pos:column="26">GetClientRectangle</name></name><parameter_list pos:line="1087" pos:column="44">()</parameter_list> <block pos:line="1087" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="1088" pos:column="9">PRectangle</name></type> <name pos:line="1088" pos:column="20">rc</name> <init pos:line="1088" pos:column="23">= <expr><call><name><name pos:line="1088" pos:column="25">wMain</name><op:operator pos:line="1088" pos:column="30">.</op:operator><name pos:line="1088" pos:column="31">GetClientPosition</name></name><argument_list pos:line="1088" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1089" pos:column="9">if <condition pos:line="1089" pos:column="12">(<expr><name pos:line="1089" pos:column="13">verticalScrollBarVisible</name></expr>)</condition><then pos:line="1089" pos:column="38">
		<expr_stmt><expr><name><name pos:line="1090" pos:column="17">rc</name><op:operator pos:line="1090" pos:column="19">.</op:operator><name pos:line="1090" pos:column="20">right</name></name> <op:operator pos:line="1090" pos:column="26">-=</op:operator> <name pos:line="1090" pos:column="29">scrollBarWidth</name></expr>;</expr_stmt></then></if>
	<if pos:line="1091" pos:column="9">if <condition pos:line="1091" pos:column="12">(<expr><name pos:line="1091" pos:column="13">horizontalScrollBarVisible</name> <op:operator pos:line="1091" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="1091" pos:column="43">(</op:operator><name pos:line="1091" pos:column="44">wrapState</name> <op:operator pos:line="1091" pos:column="54">==</op:operator> <name pos:line="1091" pos:column="57">eWrapNone</name><op:operator pos:line="1091" pos:column="66">)</op:operator></expr>)</condition><then pos:line="1091" pos:column="68">
		<expr_stmt><expr><name><name pos:line="1092" pos:column="17">rc</name><op:operator pos:line="1092" pos:column="19">.</op:operator><name pos:line="1092" pos:column="20">bottom</name></name> <op:operator pos:line="1092" pos:column="27">-=</op:operator> <name pos:line="1092" pos:column="30">scrollBarHeight</name></expr>;</expr_stmt></then></if>
	<comment type="line" pos:line="1093" pos:column="9">// Move to origin</comment>
	<expr_stmt><expr><name><name pos:line="1094" pos:column="9">rc</name><op:operator pos:line="1094" pos:column="11">.</op:operator><name pos:line="1094" pos:column="12">right</name></name> <op:operator pos:line="1094" pos:column="18">-=</op:operator> <name><name pos:line="1094" pos:column="21">rc</name><op:operator pos:line="1094" pos:column="23">.</op:operator><name pos:line="1094" pos:column="24">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1095" pos:column="9">rc</name><op:operator pos:line="1095" pos:column="11">.</op:operator><name pos:line="1095" pos:column="12">bottom</name></name> <op:operator pos:line="1095" pos:column="19">-=</op:operator> <name><name pos:line="1095" pos:column="22">rc</name><op:operator pos:line="1095" pos:column="24">.</op:operator><name pos:line="1095" pos:column="25">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1096" pos:column="9">rc</name><op:operator pos:line="1096" pos:column="11">.</op:operator><name pos:line="1096" pos:column="12">left</name></name> <op:operator pos:line="1096" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="1096" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1097" pos:column="9">rc</name><op:operator pos:line="1097" pos:column="11">.</op:operator><name pos:line="1097" pos:column="12">top</name></name> <op:operator pos:line="1097" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="1097" pos:column="18">0</lit:literal></expr>;</expr_stmt>
	<return pos:line="1098" pos:column="9">return <expr><name pos:line="1098" pos:column="16">rc</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="1101" pos:column="1">// Synchronously paint a rectangle of the window.</comment>
<function><type><name pos:line="1102" pos:column="1">void</name></type> <name><name pos:line="1102" pos:column="6">ScintillaGTK</name><op:operator pos:line="1102" pos:column="18">::</op:operator><name pos:line="1102" pos:column="20">SyncPaint</name></name><parameter_list pos:line="1102" pos:column="29">(<param><decl><type><name pos:line="1102" pos:column="30">PRectangle</name></type> <name pos:line="1102" pos:column="41">rc</name></decl></param>)</parameter_list> <block pos:line="1102" pos:column="45">{
	<expr_stmt><expr><name pos:line="1103" pos:column="9">paintState</name> <op:operator pos:line="1103" pos:column="20">=</op:operator> <name pos:line="1103" pos:column="22">painting</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1104" pos:column="9">rcPaint</name> <op:operator pos:line="1104" pos:column="17">=</op:operator> <name pos:line="1104" pos:column="19">rc</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1105" pos:column="9">PRectangle</name></type> <name pos:line="1105" pos:column="20">rcClient</name> <init pos:line="1105" pos:column="29">= <expr><call><name pos:line="1105" pos:column="31">GetClientRectangle</name><argument_list pos:line="1105" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1106" pos:column="9">paintingAllText</name> <op:operator pos:line="1106" pos:column="25">=</op:operator> <call><name><name pos:line="1106" pos:column="27">rcPaint</name><op:operator pos:line="1106" pos:column="34">.</op:operator><name pos:line="1106" pos:column="35">Contains</name></name><argument_list pos:line="1106" pos:column="43">(<argument><expr><name pos:line="1106" pos:column="44">rcClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1107" pos:column="9">if <condition pos:line="1107" pos:column="12">(<expr><call><name pos:line="1107" pos:column="13">PWindow</name><argument_list pos:line="1107" pos:column="20">(<argument><expr><name pos:line="1107" pos:column="21">wText</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1107" pos:column="28"> <block pos:line="1107" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="1108" pos:column="17">Surface</name> <type:modifier pos:line="1108" pos:column="25">*</type:modifier></type><name pos:line="1108" pos:column="26">sw</name> <init pos:line="1108" pos:column="29">= <expr><call><name><name pos:line="1108" pos:column="31">Surface</name><op:operator pos:line="1108" pos:column="38">::</op:operator><name pos:line="1108" pos:column="40">Allocate</name></name><argument_list pos:line="1108" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1109" pos:column="17">if <condition pos:line="1109" pos:column="20">(<expr><name pos:line="1109" pos:column="21">sw</name></expr>)</condition><then pos:line="1109" pos:column="24"> <block pos:line="1109" pos:column="25">{
<cpp:if pos:line="1110" pos:column="1">#<cpp:directive pos:line="1110" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1110" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1110" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1110" pos:column="23">3</lit:literal><op:operator pos:line="1110" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1110" pos:column="25">0</lit:literal><op:operator pos:line="1110" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1110" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
			<decl_stmt><decl><type><name pos:line="1111" pos:column="25">cairo_t</name> <type:modifier pos:line="1111" pos:column="33">*</type:modifier></type><name pos:line="1111" pos:column="34">cr</name> <init pos:line="1111" pos:column="37">= <expr><call><name pos:line="1111" pos:column="39">gdk_cairo_create</name><argument_list pos:line="1111" pos:column="55">(<argument><expr><call><name pos:line="1111" pos:column="56">PWindow</name><argument_list pos:line="1111" pos:column="63">(<argument><expr><name pos:line="1111" pos:column="64">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1112" pos:column="25">sw</name><op:operator pos:line="1112" pos:column="27">-&gt;</op:operator><name pos:line="1112" pos:column="29">Init</name></name><argument_list pos:line="1112" pos:column="33">(<argument><expr><name pos:line="1112" pos:column="34">cr</name></expr></argument>, <argument><expr><call><name pos:line="1112" pos:column="38">PWidget</name><argument_list pos:line="1112" pos:column="45">(<argument><expr><name pos:line="1112" pos:column="46">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1113" pos:column="1">#<cpp:directive pos:line="1113" pos:column="2">else</cpp:directive></cpp:else>
			<expr_stmt><expr><call><name><name pos:line="1114" pos:column="25">sw</name><op:operator pos:line="1114" pos:column="27">-&gt;</op:operator><name pos:line="1114" pos:column="29">Init</name></name><argument_list pos:line="1114" pos:column="33">(<argument><expr><call><name pos:line="1114" pos:column="34">PWindow</name><argument_list pos:line="1114" pos:column="41">(<argument><expr><name pos:line="1114" pos:column="42">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1114" pos:column="50">PWidget</name><argument_list pos:line="1114" pos:column="57">(<argument><expr><name pos:line="1114" pos:column="58">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1115" pos:column="1">#<cpp:directive pos:line="1115" pos:column="2">endif</cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="1116" pos:column="25">Paint</name><argument_list pos:line="1116" pos:column="30">(<argument><expr><name pos:line="1116" pos:column="31">sw</name></expr></argument>, <argument><expr><name pos:line="1116" pos:column="35">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1117" pos:column="25">sw</name><op:operator pos:line="1117" pos:column="27">-&gt;</op:operator><name pos:line="1117" pos:column="29">Release</name></name><argument_list pos:line="1117" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="1118" pos:column="25">delete</op:operator> <name pos:line="1118" pos:column="32">sw</name></expr>;</expr_stmt>
<cpp:if pos:line="1119" pos:column="1">#<cpp:directive pos:line="1119" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1119" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1119" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1119" pos:column="23">3</lit:literal><op:operator pos:line="1119" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1119" pos:column="25">0</lit:literal><op:operator pos:line="1119" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1119" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
			<expr_stmt><expr><call><name pos:line="1120" pos:column="25">cairo_destroy</name><argument_list pos:line="1120" pos:column="38">(<argument><expr><name pos:line="1120" pos:column="39">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1121" pos:column="1">#<cpp:directive pos:line="1121" pos:column="2">endif</cpp:directive></cpp:endif>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="1124" pos:column="9">if <condition pos:line="1124" pos:column="12">(<expr><name pos:line="1124" pos:column="13">paintState</name> <op:operator pos:line="1124" pos:column="24">==</op:operator> <name pos:line="1124" pos:column="27">paintAbandoned</name></expr>)</condition><then pos:line="1124" pos:column="42"> <block pos:line="1124" pos:column="43">{
		<comment type="line" pos:line="1125" pos:column="17">// Painting area was insufficient to cover new styling or brace highlight positions</comment>
		<expr_stmt><expr><call><name pos:line="1126" pos:column="17">FullPaint</name><argument_list pos:line="1126" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="1128" pos:column="9">paintState</name> <op:operator pos:line="1128" pos:column="20">=</op:operator> <name pos:line="1128" pos:column="22">notPainting</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1131" pos:column="1">void</name></type> <name><name pos:line="1131" pos:column="6">ScintillaGTK</name><op:operator pos:line="1131" pos:column="18">::</op:operator><name pos:line="1131" pos:column="20">ScrollText</name></name><parameter_list pos:line="1131" pos:column="30">(<param><decl><type><name pos:line="1131" pos:column="31">int</name></type> <name pos:line="1131" pos:column="35">linesToMove</name></decl></param>)</parameter_list> <block pos:line="1131" pos:column="48">{
	<decl_stmt><decl><type><name pos:line="1132" pos:column="9">int</name></type> <name pos:line="1132" pos:column="13">diff</name> <init pos:line="1132" pos:column="18">= <expr><name><name pos:line="1132" pos:column="20">vs</name><op:operator pos:line="1132" pos:column="22">.</op:operator><name pos:line="1132" pos:column="23">lineHeight</name></name> <op:operator pos:line="1132" pos:column="34">*</op:operator> <op:operator pos:line="1132" pos:column="36">-</op:operator><name pos:line="1132" pos:column="37">linesToMove</name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="1133" pos:column="9">//Platform::DebugPrintf("ScintillaGTK::ScrollText %d %d %0d,%0d %0d,%0d\n", linesToMove, diff,</comment>
	<comment type="line" pos:line="1134" pos:column="9">//	rc.left, rc.top, rc.right, rc.bottom);</comment>
	<decl_stmt><decl><type><name pos:line="1135" pos:column="9">GtkWidget</name> <type:modifier pos:line="1135" pos:column="19">*</type:modifier></type><name pos:line="1135" pos:column="20">wi</name> <init pos:line="1135" pos:column="23">= <expr><call><name pos:line="1135" pos:column="25">PWidget</name><argument_list pos:line="1135" pos:column="32">(<argument><expr><name pos:line="1135" pos:column="33">wText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1137" pos:column="9">gdk_window_scroll</name><argument_list pos:line="1137" pos:column="26">(<argument><expr><call><name pos:line="1137" pos:column="27">WindowFromWidget</name><argument_list pos:line="1137" pos:column="43">(<argument><expr><name pos:line="1137" pos:column="44">wi</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1137" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1137" pos:column="52">-</op:operator><name pos:line="1137" pos:column="53">diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1138" pos:column="9">gdk_window_process_updates</name><argument_list pos:line="1138" pos:column="35">(<argument><expr><call><name pos:line="1138" pos:column="36">WindowFromWidget</name><argument_list pos:line="1138" pos:column="52">(<argument><expr><name pos:line="1138" pos:column="53">wi</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1138" pos:column="58">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1141" pos:column="1">void</name></type> <name><name pos:line="1141" pos:column="6">ScintillaGTK</name><op:operator pos:line="1141" pos:column="18">::</op:operator><name pos:line="1141" pos:column="20">SetVerticalScrollPos</name></name><parameter_list pos:line="1141" pos:column="40">()</parameter_list> <block pos:line="1141" pos:column="43">{
	<expr_stmt><expr><call><name pos:line="1142" pos:column="9">DwellEnd</name><argument_list pos:line="1142" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="1142" pos:column="18">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1143" pos:column="9">gtk_adjustment_set_value</name><argument_list pos:line="1143" pos:column="33">(<argument><expr><call><name pos:line="1143" pos:column="34">GTK_ADJUSTMENT</name><argument_list pos:line="1143" pos:column="48">(<argument><expr><name pos:line="1143" pos:column="49">adjustmentv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1143" pos:column="63">topLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1146" pos:column="1">void</name></type> <name><name pos:line="1146" pos:column="6">ScintillaGTK</name><op:operator pos:line="1146" pos:column="18">::</op:operator><name pos:line="1146" pos:column="20">SetHorizontalScrollPos</name></name><parameter_list pos:line="1146" pos:column="42">()</parameter_list> <block pos:line="1146" pos:column="45">{
	<expr_stmt><expr><call><name pos:line="1147" pos:column="9">DwellEnd</name><argument_list pos:line="1147" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="1147" pos:column="18">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1148" pos:column="9">gtk_adjustment_set_value</name><argument_list pos:line="1148" pos:column="33">(<argument><expr><call><name pos:line="1148" pos:column="34">GTK_ADJUSTMENT</name><argument_list pos:line="1148" pos:column="48">(<argument><expr><name pos:line="1148" pos:column="49">adjustmenth</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1148" pos:column="63">xOffset</name> <op:operator pos:line="1148" pos:column="71">/</op:operator> <lit:literal type="number" pos:line="1148" pos:column="73">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1151" pos:column="1">bool</name></type> <name><name pos:line="1151" pos:column="6">ScintillaGTK</name><op:operator pos:line="1151" pos:column="18">::</op:operator><name pos:line="1151" pos:column="20">ModifyScrollBars</name></name><parameter_list pos:line="1151" pos:column="36">(<param><decl><type><name pos:line="1151" pos:column="37">int</name></type> <name pos:line="1151" pos:column="41">nMax</name></decl></param>, <param><decl><type><name pos:line="1151" pos:column="47">int</name></type> <name pos:line="1151" pos:column="51">nPage</name></decl></param>)</parameter_list> <block pos:line="1151" pos:column="58">{
	<decl_stmt><decl><type><name pos:line="1152" pos:column="9">bool</name></type> <name pos:line="1152" pos:column="14">modified</name> <init pos:line="1152" pos:column="23">= <expr><lit:literal type="boolean" pos:line="1152" pos:column="25">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1153" pos:column="9">int</name></type> <name pos:line="1153" pos:column="13">pageScroll</name> <init pos:line="1153" pos:column="24">= <expr><call><name pos:line="1153" pos:column="26">LinesToScroll</name><argument_list pos:line="1153" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if pos:line="1155" pos:column="1">#<cpp:directive pos:line="1155" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1155" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1155" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1155" pos:column="23">3</lit:literal><op:operator pos:line="1155" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1155" pos:column="25">0</lit:literal><op:operator pos:line="1155" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1155" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<if pos:line="1156" pos:column="9">if <condition pos:line="1156" pos:column="12">(<expr><call><name pos:line="1156" pos:column="13">gtk_adjustment_get_upper</name><argument_list pos:line="1156" pos:column="37">(<argument><expr><name pos:line="1156" pos:column="38">adjustmentv</name></expr></argument>)</argument_list></call> <op:operator pos:line="1156" pos:column="51">!=</op:operator> <op:operator pos:line="1156" pos:column="54">(</op:operator><name pos:line="1156" pos:column="55">nMax</name> <op:operator pos:line="1156" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="1156" pos:column="62">1</lit:literal><op:operator pos:line="1156" pos:column="63">)</op:operator> <op:operator pos:line="1156" pos:column="65">||</op:operator>
	        <call><name pos:line="1157" pos:column="17">gtk_adjustment_get_page_size</name><argument_list pos:line="1157" pos:column="45">(<argument><expr><name pos:line="1157" pos:column="46">adjustmentv</name></expr></argument>)</argument_list></call> <op:operator pos:line="1157" pos:column="59">!=</op:operator> <name pos:line="1157" pos:column="62">nPage</name> <op:operator pos:line="1157" pos:column="68">||</op:operator>
	        <call><name pos:line="1158" pos:column="17">gtk_adjustment_get_page_increment</name><argument_list pos:line="1158" pos:column="50">(<argument><expr><name pos:line="1158" pos:column="51">adjustmentv</name></expr></argument>)</argument_list></call> <op:operator pos:line="1158" pos:column="64">!=</op:operator> <name pos:line="1158" pos:column="67">pageScroll</name></expr>)</condition><then pos:line="1158" pos:column="78"> <block pos:line="1158" pos:column="79">{
		<expr_stmt><expr><call><name pos:line="1159" pos:column="17">gtk_adjustment_set_upper</name><argument_list pos:line="1159" pos:column="41">(<argument><expr><name pos:line="1159" pos:column="42">adjustmentv</name></expr></argument>, <argument><expr><name pos:line="1159" pos:column="55">nMax</name> <op:operator pos:line="1159" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="1159" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name pos:line="1160" pos:column="17">gtk_adjustment_set_page_size</name><argument_list pos:line="1160" pos:column="45">(<argument><expr><name pos:line="1160" pos:column="46">adjustmentv</name></expr></argument>, <argument><expr><name pos:line="1160" pos:column="59">nPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name pos:line="1161" pos:column="17">gtk_adjustment_set_page_increment</name><argument_list pos:line="1161" pos:column="50">(<argument><expr><name pos:line="1161" pos:column="51">adjustmentv</name></expr></argument>, <argument><expr><name pos:line="1161" pos:column="64">pageScroll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1162" pos:column="17">gtk_adjustment_changed</name><argument_list pos:line="1162" pos:column="39">(<argument><expr><call><name pos:line="1162" pos:column="40">GTK_ADJUSTMENT</name><argument_list pos:line="1162" pos:column="54">(<argument><expr><name pos:line="1162" pos:column="55">adjustmentv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1163" pos:column="17">modified</name> <op:operator pos:line="1163" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1163" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
<cpp:else pos:line="1165" pos:column="1">#<cpp:directive pos:line="1165" pos:column="2">else</cpp:directive></cpp:else>
	<if pos:line="1166" pos:column="9">if <condition pos:line="1166" pos:column="12">(<expr><call><name pos:line="1166" pos:column="13">GTK_ADJUSTMENT</name><argument_list pos:line="1166" pos:column="27">(<argument><expr><name pos:line="1166" pos:column="28">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1166" pos:column="40">-&gt;</op:operator><name pos:line="1166" pos:column="42">upper</name> <op:operator pos:line="1166" pos:column="48">!=</op:operator> <op:operator pos:line="1166" pos:column="51">(</op:operator><name pos:line="1166" pos:column="52">nMax</name> <op:operator pos:line="1166" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="1166" pos:column="59">1</lit:literal><op:operator pos:line="1166" pos:column="60">)</op:operator> <op:operator pos:line="1166" pos:column="62">||</op:operator>
	        <call><name pos:line="1167" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1167" pos:column="31">(<argument><expr><name pos:line="1167" pos:column="32">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1167" pos:column="44">-&gt;</op:operator><name pos:line="1167" pos:column="46">page_size</name> <op:operator pos:line="1167" pos:column="56">!=</op:operator> <name pos:line="1167" pos:column="59">nPage</name> <op:operator pos:line="1167" pos:column="65">||</op:operator>
	        <call><name pos:line="1168" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1168" pos:column="31">(<argument><expr><name pos:line="1168" pos:column="32">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1168" pos:column="44">-&gt;</op:operator><name pos:line="1168" pos:column="46">page_increment</name> <op:operator pos:line="1168" pos:column="61">!=</op:operator> <name pos:line="1168" pos:column="64">pageScroll</name></expr>)</condition><then pos:line="1168" pos:column="75"> <block pos:line="1168" pos:column="76">{
		<expr_stmt><expr><call><name pos:line="1169" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1169" pos:column="31">(<argument><expr><name pos:line="1169" pos:column="32">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1169" pos:column="44">-&gt;</op:operator><name pos:line="1169" pos:column="46">upper</name> <op:operator pos:line="1169" pos:column="52">=</op:operator> <name pos:line="1169" pos:column="54">nMax</name> <op:operator pos:line="1169" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="1169" pos:column="61">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1170" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1170" pos:column="31">(<argument><expr><name pos:line="1170" pos:column="32">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1170" pos:column="44">-&gt;</op:operator><name pos:line="1170" pos:column="46">page_size</name> <op:operator pos:line="1170" pos:column="56">=</op:operator> <name pos:line="1170" pos:column="58">nPage</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1171" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1171" pos:column="31">(<argument><expr><name pos:line="1171" pos:column="32">adjustmentv</name></expr></argument>)</argument_list></call><op:operator pos:line="1171" pos:column="44">-&gt;</op:operator><name pos:line="1171" pos:column="46">page_increment</name> <op:operator pos:line="1171" pos:column="61">=</op:operator> <name pos:line="1171" pos:column="63">pageScroll</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1172" pos:column="17">gtk_adjustment_changed</name><argument_list pos:line="1172" pos:column="39">(<argument><expr><call><name pos:line="1172" pos:column="40">GTK_ADJUSTMENT</name><argument_list pos:line="1172" pos:column="54">(<argument><expr><name pos:line="1172" pos:column="55">adjustmentv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1173" pos:column="17">modified</name> <op:operator pos:line="1173" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1173" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
<cpp:endif pos:line="1175" pos:column="1">#<cpp:directive pos:line="1175" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="1177" pos:column="9">PRectangle</name></type> <name pos:line="1177" pos:column="20">rcText</name> <init pos:line="1177" pos:column="27">= <expr><call><name pos:line="1177" pos:column="29">GetTextRectangle</name><argument_list pos:line="1177" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1178" pos:column="9">int</name></type> <name pos:line="1178" pos:column="13">horizEndPreferred</name> <init pos:line="1178" pos:column="31">= <expr><name pos:line="1178" pos:column="33">scrollWidth</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1179" pos:column="9">if <condition pos:line="1179" pos:column="12">(<expr><name pos:line="1179" pos:column="13">horizEndPreferred</name> <op:operator pos:line="1179" pos:column="31">&lt;</op:operator> <lit:literal type="number" pos:line="1179" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="1179" pos:column="35">
		<expr_stmt><expr><name pos:line="1180" pos:column="17">horizEndPreferred</name> <op:operator pos:line="1180" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="1180" pos:column="37">0</lit:literal></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="1181" pos:column="9">unsigned</name> <name pos:line="1181" pos:column="18">int</name></type> <name pos:line="1181" pos:column="22">pageWidth</name> <init pos:line="1181" pos:column="32">= <expr><call><name><name pos:line="1181" pos:column="34">rcText</name><op:operator pos:line="1181" pos:column="40">.</op:operator><name pos:line="1181" pos:column="41">Width</name></name><argument_list pos:line="1181" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1182" pos:column="9">unsigned</name> <name pos:line="1182" pos:column="18">int</name></type> <name pos:line="1182" pos:column="22">pageIncrement</name> <init pos:line="1182" pos:column="36">= <expr><name pos:line="1182" pos:column="38">pageWidth</name> <op:operator pos:line="1182" pos:column="48">/</op:operator> <lit:literal type="number" pos:line="1182" pos:column="50">3</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1183" pos:column="9">unsigned</name> <name pos:line="1183" pos:column="18">int</name></type> <name pos:line="1183" pos:column="22">charWidth</name> <init pos:line="1183" pos:column="32">= <expr><name><name pos:line="1183" pos:column="34">vs</name><op:operator pos:line="1183" pos:column="36">.</op:operator><name pos:line="1183" pos:column="37">styles</name><index pos:line="1183" pos:column="43">[<expr><name pos:line="1183" pos:column="44">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1183" pos:column="58">.</op:operator><name pos:line="1183" pos:column="59">aveCharWidth</name></expr></init></decl>;</decl_stmt>
<cpp:if pos:line="1184" pos:column="1">#<cpp:directive pos:line="1184" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1184" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1184" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1184" pos:column="23">3</lit:literal><op:operator pos:line="1184" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1184" pos:column="25">0</lit:literal><op:operator pos:line="1184" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1184" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<if pos:line="1185" pos:column="9">if <condition pos:line="1185" pos:column="12">(<expr><call><name pos:line="1185" pos:column="13">gtk_adjustment_get_upper</name><argument_list pos:line="1185" pos:column="37">(<argument><expr><name pos:line="1185" pos:column="38">adjustmenth</name></expr></argument>)</argument_list></call> <op:operator pos:line="1185" pos:column="51">!=</op:operator> <name pos:line="1185" pos:column="54">horizEndPreferred</name> <op:operator pos:line="1185" pos:column="72">||</op:operator>
	        <call><name pos:line="1186" pos:column="17">gtk_adjustment_get_page_size</name><argument_list pos:line="1186" pos:column="45">(<argument><expr><name pos:line="1186" pos:column="46">adjustmenth</name></expr></argument>)</argument_list></call> <op:operator pos:line="1186" pos:column="59">!=</op:operator> <name pos:line="1186" pos:column="62">pageWidth</name> <op:operator pos:line="1186" pos:column="72">||</op:operator>
	        <call><name pos:line="1187" pos:column="17">gtk_adjustment_get_page_increment</name><argument_list pos:line="1187" pos:column="50">(<argument><expr><name pos:line="1187" pos:column="51">adjustmenth</name></expr></argument>)</argument_list></call> <op:operator pos:line="1187" pos:column="64">!=</op:operator> <name pos:line="1187" pos:column="67">pageIncrement</name> <op:operator pos:line="1187" pos:column="81">||</op:operator>
	        <call><name pos:line="1188" pos:column="17">gtk_adjustment_get_step_increment</name><argument_list pos:line="1188" pos:column="50">(<argument><expr><name pos:line="1188" pos:column="51">adjustmenth</name></expr></argument>)</argument_list></call> <op:operator pos:line="1188" pos:column="64">!=</op:operator> <name pos:line="1188" pos:column="67">charWidth</name></expr>)</condition><then pos:line="1188" pos:column="77"> <block pos:line="1188" pos:column="78">{
		<expr_stmt><expr><call><name pos:line="1189" pos:column="17">gtk_adjustment_set_upper</name><argument_list pos:line="1189" pos:column="41">(<argument><expr><name pos:line="1189" pos:column="42">adjustmenth</name></expr></argument>, <argument><expr><name pos:line="1189" pos:column="55">horizEndPreferred</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name pos:line="1190" pos:column="17">gtk_adjustment_set_page_size</name><argument_list pos:line="1190" pos:column="45">(<argument><expr><name pos:line="1190" pos:column="46">adjustmenth</name></expr></argument>, <argument><expr><name pos:line="1190" pos:column="59">pageWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name pos:line="1191" pos:column="17">gtk_adjustment_set_page_increment</name><argument_list pos:line="1191" pos:column="50">(<argument><expr><name pos:line="1191" pos:column="51">adjustmenth</name></expr></argument>, <argument><expr><name pos:line="1191" pos:column="64">pageIncrement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name pos:line="1192" pos:column="17">gtk_adjustment_set_step_increment</name><argument_list pos:line="1192" pos:column="50">(<argument><expr><name pos:line="1192" pos:column="51">adjustmenth</name></expr></argument>, <argument><expr><name pos:line="1192" pos:column="64">charWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1193" pos:column="17">gtk_adjustment_changed</name><argument_list pos:line="1193" pos:column="39">(<argument><expr><call><name pos:line="1193" pos:column="40">GTK_ADJUSTMENT</name><argument_list pos:line="1193" pos:column="54">(<argument><expr><name pos:line="1193" pos:column="55">adjustmenth</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1194" pos:column="17">modified</name> <op:operator pos:line="1194" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1194" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
<cpp:else pos:line="1196" pos:column="1">#<cpp:directive pos:line="1196" pos:column="2">else</cpp:directive></cpp:else>
	<if pos:line="1197" pos:column="9">if <condition pos:line="1197" pos:column="12">(<expr><call><name pos:line="1197" pos:column="13">GTK_ADJUSTMENT</name><argument_list pos:line="1197" pos:column="27">(<argument><expr><name pos:line="1197" pos:column="28">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1197" pos:column="40">-&gt;</op:operator><name pos:line="1197" pos:column="42">upper</name> <op:operator pos:line="1197" pos:column="48">!=</op:operator> <name pos:line="1197" pos:column="51">horizEndPreferred</name> <op:operator pos:line="1197" pos:column="69">||</op:operator>
	        <call><name pos:line="1198" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1198" pos:column="31">(<argument><expr><name pos:line="1198" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1198" pos:column="44">-&gt;</op:operator><name pos:line="1198" pos:column="46">page_size</name> <op:operator pos:line="1198" pos:column="56">!=</op:operator> <name pos:line="1198" pos:column="59">pageWidth</name> <op:operator pos:line="1198" pos:column="69">||</op:operator>
	        <call><name pos:line="1199" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1199" pos:column="31">(<argument><expr><name pos:line="1199" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1199" pos:column="44">-&gt;</op:operator><name pos:line="1199" pos:column="46">page_increment</name> <op:operator pos:line="1199" pos:column="61">!=</op:operator> <name pos:line="1199" pos:column="64">pageIncrement</name> <op:operator pos:line="1199" pos:column="78">||</op:operator>
	        <call><name pos:line="1200" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1200" pos:column="31">(<argument><expr><name pos:line="1200" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1200" pos:column="44">-&gt;</op:operator><name pos:line="1200" pos:column="46">step_increment</name> <op:operator pos:line="1200" pos:column="61">!=</op:operator> <name pos:line="1200" pos:column="64">charWidth</name></expr>)</condition><then pos:line="1200" pos:column="74"> <block pos:line="1200" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="1201" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1201" pos:column="31">(<argument><expr><name pos:line="1201" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1201" pos:column="44">-&gt;</op:operator><name pos:line="1201" pos:column="46">upper</name> <op:operator pos:line="1201" pos:column="52">=</op:operator> <name pos:line="1201" pos:column="54">horizEndPreferred</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1202" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1202" pos:column="31">(<argument><expr><name pos:line="1202" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1202" pos:column="44">-&gt;</op:operator><name pos:line="1202" pos:column="46">step_increment</name> <op:operator pos:line="1202" pos:column="61">=</op:operator> <name pos:line="1202" pos:column="63">charWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1203" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1203" pos:column="31">(<argument><expr><name pos:line="1203" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1203" pos:column="44">-&gt;</op:operator><name pos:line="1203" pos:column="46">page_size</name> <op:operator pos:line="1203" pos:column="56">=</op:operator> <name pos:line="1203" pos:column="58">pageWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1204" pos:column="17">GTK_ADJUSTMENT</name><argument_list pos:line="1204" pos:column="31">(<argument><expr><name pos:line="1204" pos:column="32">adjustmenth</name></expr></argument>)</argument_list></call><op:operator pos:line="1204" pos:column="44">-&gt;</op:operator><name pos:line="1204" pos:column="46">page_increment</name> <op:operator pos:line="1204" pos:column="61">=</op:operator> <name pos:line="1204" pos:column="63">pageIncrement</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1205" pos:column="17">gtk_adjustment_changed</name><argument_list pos:line="1205" pos:column="39">(<argument><expr><call><name pos:line="1205" pos:column="40">GTK_ADJUSTMENT</name><argument_list pos:line="1205" pos:column="54">(<argument><expr><name pos:line="1205" pos:column="55">adjustmenth</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1206" pos:column="17">modified</name> <op:operator pos:line="1206" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1206" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
<cpp:endif pos:line="1208" pos:column="1">#<cpp:directive pos:line="1208" pos:column="2">endif</cpp:directive></cpp:endif>
	<return pos:line="1209" pos:column="9">return <expr><name pos:line="1209" pos:column="16">modified</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1212" pos:column="1">void</name></type> <name><name pos:line="1212" pos:column="6">ScintillaGTK</name><op:operator pos:line="1212" pos:column="18">::</op:operator><name pos:line="1212" pos:column="20">ReconfigureScrollBars</name></name><parameter_list pos:line="1212" pos:column="41">()</parameter_list> <block pos:line="1212" pos:column="44">{
	<decl_stmt><decl><type><name pos:line="1213" pos:column="9">PRectangle</name></type> <name pos:line="1213" pos:column="20">rc</name> <init pos:line="1213" pos:column="23">= <expr><call><name><name pos:line="1213" pos:column="25">wMain</name><op:operator pos:line="1213" pos:column="30">.</op:operator><name pos:line="1213" pos:column="31">GetClientPosition</name></name><argument_list pos:line="1213" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1214" pos:column="9">Resize</name><argument_list pos:line="1214" pos:column="15">(<argument><expr><call><name><name pos:line="1214" pos:column="16">rc</name><op:operator pos:line="1214" pos:column="18">.</op:operator><name pos:line="1214" pos:column="19">Width</name></name><argument_list pos:line="1214" pos:column="24">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1214" pos:column="28">rc</name><op:operator pos:line="1214" pos:column="30">.</op:operator><name pos:line="1214" pos:column="31">Height</name></name><argument_list pos:line="1214" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1217" pos:column="1">void</name></type> <name><name pos:line="1217" pos:column="6">ScintillaGTK</name><op:operator pos:line="1217" pos:column="18">::</op:operator><name pos:line="1217" pos:column="20">NotifyChange</name></name><parameter_list pos:line="1217" pos:column="32">()</parameter_list> <block pos:line="1217" pos:column="35">{
	<expr_stmt><expr><call><name pos:line="1218" pos:column="9">g_signal_emit</name><argument_list pos:line="1218" pos:column="22">(<argument><expr><call><name pos:line="1218" pos:column="23">G_OBJECT</name><argument_list pos:line="1218" pos:column="31">(<argument><expr><name pos:line="1218" pos:column="32">sci</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1218" pos:column="38">scintilla_signals</name><index pos:line="1218" pos:column="55">[<expr><name pos:line="1218" pos:column="56">COMMAND_SIGNAL</name></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1218" pos:column="73">0</lit:literal></expr></argument>,
	                <argument><expr><call><name><name pos:line="1219" pos:column="25">Platform</name><op:operator pos:line="1219" pos:column="33">::</op:operator><name pos:line="1219" pos:column="35">LongFromTwoShorts</name></name><argument_list pos:line="1219" pos:column="52">(<argument><expr><call><name pos:line="1219" pos:column="53">GetCtrlID</name><argument_list pos:line="1219" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1219" pos:column="66">SCEN_CHANGE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1219" pos:column="80">PWidget</name><argument_list pos:line="1219" pos:column="87">(<argument><expr><name pos:line="1219" pos:column="88">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1222" pos:column="1">void</name></type> <name><name pos:line="1222" pos:column="6">ScintillaGTK</name><op:operator pos:line="1222" pos:column="18">::</op:operator><name pos:line="1222" pos:column="20">NotifyFocus</name></name><parameter_list pos:line="1222" pos:column="31">(<param><decl><type><name pos:line="1222" pos:column="32">bool</name></type> <name pos:line="1222" pos:column="37">focus</name></decl></param>)</parameter_list> <block pos:line="1222" pos:column="44">{
	<expr_stmt><expr><call><name pos:line="1223" pos:column="9">g_signal_emit</name><argument_list pos:line="1223" pos:column="22">(<argument><expr><call><name pos:line="1223" pos:column="23">G_OBJECT</name><argument_list pos:line="1223" pos:column="31">(<argument><expr><name pos:line="1223" pos:column="32">sci</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1223" pos:column="38">scintilla_signals</name><index pos:line="1223" pos:column="55">[<expr><name pos:line="1223" pos:column="56">COMMAND_SIGNAL</name></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1223" pos:column="73">0</lit:literal></expr></argument>,
	                <argument><expr><call><name><name pos:line="1224" pos:column="25">Platform</name><op:operator pos:line="1224" pos:column="33">::</op:operator><name pos:line="1224" pos:column="35">LongFromTwoShorts</name></name>
					<argument_list pos:line="1225" pos:column="41">(<argument><expr><call><name pos:line="1225" pos:column="42">GetCtrlID</name><argument_list pos:line="1225" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1225" pos:column="55">focus</name> <op:operator pos:line="1225" pos:column="61">?</op:operator> <name pos:line="1225" pos:column="63">SCEN_SETFOCUS</name> <op:operator pos:line="1225" pos:column="77">:</op:operator> <name pos:line="1225" pos:column="79">SCEN_KILLFOCUS</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1225" pos:column="96">PWidget</name><argument_list pos:line="1225" pos:column="103">(<argument><expr><name pos:line="1225" pos:column="104">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1228" pos:column="1">void</name></type> <name><name pos:line="1228" pos:column="6">ScintillaGTK</name><op:operator pos:line="1228" pos:column="18">::</op:operator><name pos:line="1228" pos:column="20">NotifyParent</name></name><parameter_list pos:line="1228" pos:column="32">(<param><decl><type><name pos:line="1228" pos:column="33">SCNotification</name></type> <name pos:line="1228" pos:column="48">scn</name></decl></param>)</parameter_list> <block pos:line="1228" pos:column="53">{
	<expr_stmt><expr><name><name pos:line="1229" pos:column="9">scn</name><op:operator pos:line="1229" pos:column="12">.</op:operator><name pos:line="1229" pos:column="13">nmhdr</name><op:operator pos:line="1229" pos:column="18">.</op:operator><name pos:line="1229" pos:column="19">hwndFrom</name></name> <op:operator pos:line="1229" pos:column="28">=</op:operator> <call><name pos:line="1229" pos:column="30">PWidget</name><argument_list pos:line="1229" pos:column="37">(<argument><expr><name pos:line="1229" pos:column="38">wMain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1230" pos:column="9">scn</name><op:operator pos:line="1230" pos:column="12">.</op:operator><name pos:line="1230" pos:column="13">nmhdr</name><op:operator pos:line="1230" pos:column="18">.</op:operator><name pos:line="1230" pos:column="19">idFrom</name></name> <op:operator pos:line="1230" pos:column="26">=</op:operator> <call><name pos:line="1230" pos:column="28">GetCtrlID</name><argument_list pos:line="1230" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1231" pos:column="9">g_signal_emit</name><argument_list pos:line="1231" pos:column="22">(<argument><expr><call><name pos:line="1231" pos:column="23">G_OBJECT</name><argument_list pos:line="1231" pos:column="31">(<argument><expr><name pos:line="1231" pos:column="32">sci</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1231" pos:column="38">scintilla_signals</name><index pos:line="1231" pos:column="55">[<expr><name pos:line="1231" pos:column="56">NOTIFY_SIGNAL</name></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1231" pos:column="72">0</lit:literal></expr></argument>,
	                <argument><expr><call><name pos:line="1232" pos:column="25">GetCtrlID</name><argument_list pos:line="1232" pos:column="34">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1232" pos:column="38">&amp;</op:operator><name pos:line="1232" pos:column="39">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1235" pos:column="1">void</name></type> <name><name pos:line="1235" pos:column="6">ScintillaGTK</name><op:operator pos:line="1235" pos:column="18">::</op:operator><name pos:line="1235" pos:column="20">NotifyKey</name></name><parameter_list pos:line="1235" pos:column="29">(<param><decl><type><name pos:line="1235" pos:column="30">int</name></type> <name pos:line="1235" pos:column="34">key</name></decl></param>, <param><decl><type><name pos:line="1235" pos:column="39">int</name></type> <name pos:line="1235" pos:column="43">modifiers</name></decl></param>)</parameter_list> <block pos:line="1235" pos:column="54">{
	<decl_stmt><decl><type><name pos:line="1236" pos:column="9">SCNotification</name></type> <name pos:line="1236" pos:column="24">scn</name> <init pos:line="1236" pos:column="28">= <expr><block pos:line="1236" pos:column="30">{<expr><lit:literal type="number" pos:line="1236" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1237" pos:column="9">scn</name><op:operator pos:line="1237" pos:column="12">.</op:operator><name pos:line="1237" pos:column="13">nmhdr</name><op:operator pos:line="1237" pos:column="18">.</op:operator><name pos:line="1237" pos:column="19">code</name></name> <op:operator pos:line="1237" pos:column="24">=</op:operator> <name pos:line="1237" pos:column="26">SCN_KEY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1238" pos:column="9">scn</name><op:operator pos:line="1238" pos:column="12">.</op:operator><name pos:line="1238" pos:column="13">ch</name></name> <op:operator pos:line="1238" pos:column="16">=</op:operator> <name pos:line="1238" pos:column="18">key</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1239" pos:column="9">scn</name><op:operator pos:line="1239" pos:column="12">.</op:operator><name pos:line="1239" pos:column="13">modifiers</name></name> <op:operator pos:line="1239" pos:column="23">=</op:operator> <name pos:line="1239" pos:column="25">modifiers</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1241" pos:column="9">NotifyParent</name><argument_list pos:line="1241" pos:column="21">(<argument><expr><name pos:line="1241" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1244" pos:column="1">void</name></type> <name><name pos:line="1244" pos:column="6">ScintillaGTK</name><op:operator pos:line="1244" pos:column="18">::</op:operator><name pos:line="1244" pos:column="20">NotifyURIDropped</name></name><parameter_list pos:line="1244" pos:column="36">(<param><decl><type><specifier pos:line="1244" pos:column="37">const</specifier> <name pos:line="1244" pos:column="43">char</name> <type:modifier pos:line="1244" pos:column="48">*</type:modifier></type><name pos:line="1244" pos:column="49">list</name></decl></param>)</parameter_list> <block pos:line="1244" pos:column="55">{
	<decl_stmt><decl><type><name pos:line="1245" pos:column="9">SCNotification</name></type> <name pos:line="1245" pos:column="24">scn</name> <init pos:line="1245" pos:column="28">= <expr><block pos:line="1245" pos:column="30">{<expr><lit:literal type="number" pos:line="1245" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1246" pos:column="9">scn</name><op:operator pos:line="1246" pos:column="12">.</op:operator><name pos:line="1246" pos:column="13">nmhdr</name><op:operator pos:line="1246" pos:column="18">.</op:operator><name pos:line="1246" pos:column="19">code</name></name> <op:operator pos:line="1246" pos:column="24">=</op:operator> <name pos:line="1246" pos:column="26">SCN_URIDROPPED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1247" pos:column="9">scn</name><op:operator pos:line="1247" pos:column="12">.</op:operator><name pos:line="1247" pos:column="13">text</name></name> <op:operator pos:line="1247" pos:column="18">=</op:operator> <name pos:line="1247" pos:column="20">list</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1249" pos:column="9">NotifyParent</name><argument_list pos:line="1249" pos:column="21">(<argument><expr><name pos:line="1249" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function_decl><type><specifier pos:line="1252" pos:column="1">const</specifier> <name pos:line="1252" pos:column="7">char</name> <type:modifier pos:line="1252" pos:column="12">*</type:modifier></type><name pos:line="1252" pos:column="13">CharacterSetID</name><parameter_list pos:line="1252" pos:column="27">(<param><decl><type><name pos:line="1252" pos:column="28">int</name></type> <name pos:line="1252" pos:column="32">characterSet</name></decl></param>)</parameter_list>;</function_decl>

<function><type><specifier pos:line="1254" pos:column="1">const</specifier> <name pos:line="1254" pos:column="7">char</name> <type:modifier pos:line="1254" pos:column="12">*</type:modifier></type><name><name pos:line="1254" pos:column="13">ScintillaGTK</name><op:operator pos:line="1254" pos:column="25">::</op:operator><name pos:line="1254" pos:column="27">CharacterSetID</name></name><parameter_list pos:line="1254" pos:column="41">()</parameter_list> <specifier pos:line="1254" pos:column="44">const</specifier> <block pos:line="1254" pos:column="50">{
	<return pos:line="1255" pos:column="9">return <expr><call><name><op:operator pos:line="1255" pos:column="16">::</op:operator><name pos:line="1255" pos:column="18">CharacterSetID</name></name><argument_list pos:line="1255" pos:column="32">(<argument><expr><name><name pos:line="1255" pos:column="33">vs</name><op:operator pos:line="1255" pos:column="35">.</op:operator><name pos:line="1255" pos:column="36">styles</name><index pos:line="1255" pos:column="42">[<expr><name pos:line="1255" pos:column="43">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1255" pos:column="57">.</op:operator><name pos:line="1255" pos:column="58">characterSet</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<class pos:line="1258" pos:column="1">class <name pos:line="1258" pos:column="7">CaseFolderUTF8</name> <super pos:line="1258" pos:column="22">: <specifier pos:line="1258" pos:column="24">public</specifier> <name pos:line="1258" pos:column="31">CaseFolderTable</name></super> <block pos:line="1258" pos:column="47">{<private type="default" pos:line="1258" pos:column="48">
</private><public pos:line="1259" pos:column="1">public:
	<constructor><name pos:line="1260" pos:column="9">CaseFolderUTF8</name><parameter_list pos:line="1260" pos:column="23">()</parameter_list> <block pos:line="1260" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="1261" pos:column="17">StandardASCII</name><argument_list pos:line="1261" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	<function><type><specifier pos:line="1263" pos:column="9">virtual</specifier> <name pos:line="1263" pos:column="17">size_t</name></type> <name pos:line="1263" pos:column="24">Fold</name><parameter_list pos:line="1263" pos:column="28">(<param><decl><type><name pos:line="1263" pos:column="29">char</name> <type:modifier pos:line="1263" pos:column="34">*</type:modifier></type><name pos:line="1263" pos:column="35">folded</name></decl></param>, <param><decl><type><name pos:line="1263" pos:column="43">size_t</name></type> <name pos:line="1263" pos:column="50">sizeFolded</name></decl></param>, <param><decl><type><specifier pos:line="1263" pos:column="62">const</specifier> <name pos:line="1263" pos:column="68">char</name> <type:modifier pos:line="1263" pos:column="73">*</type:modifier></type><name pos:line="1263" pos:column="74">mixed</name></decl></param>, <param><decl><type><name pos:line="1263" pos:column="81">size_t</name></type> <name pos:line="1263" pos:column="88">lenMixed</name></decl></param>)</parameter_list> <block pos:line="1263" pos:column="98">{
		<if pos:line="1264" pos:column="17">if <condition pos:line="1264" pos:column="20">(<expr><op:operator pos:line="1264" pos:column="21">(</op:operator><name pos:line="1264" pos:column="22">lenMixed</name> <op:operator pos:line="1264" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="1264" pos:column="34">1</lit:literal><op:operator pos:line="1264" pos:column="35">)</op:operator> <op:operator pos:line="1264" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="1264" pos:column="40">(</op:operator><name pos:line="1264" pos:column="41">sizeFolded</name> <op:operator pos:line="1264" pos:column="52">&gt;</op:operator> <lit:literal type="number" pos:line="1264" pos:column="54">0</lit:literal><op:operator pos:line="1264" pos:column="55">)</op:operator></expr>)</condition><then pos:line="1264" pos:column="57"> <block pos:line="1264" pos:column="58">{
			<expr_stmt><expr><name><name pos:line="1265" pos:column="25">folded</name><index pos:line="1265" pos:column="31">[<expr><lit:literal type="number" pos:line="1265" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="1265" pos:column="35">=</op:operator> <name><name pos:line="1265" pos:column="37">mapping</name><index pos:line="1265" pos:column="44">[<expr><call><name><name pos:line="1265" pos:column="45">static_cast</name><argument_list pos:line="1265" pos:column="56">&lt;<argument><expr><name pos:line="1265" pos:column="57">unsigned</name> <name pos:line="1265" pos:column="66">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1265" pos:column="71">(<argument><expr><name><name pos:line="1265" pos:column="72">mixed</name><index pos:line="1265" pos:column="77">[<expr><lit:literal type="number" pos:line="1265" pos:column="78">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
			<return pos:line="1266" pos:column="25">return <expr><lit:literal type="number" pos:line="1266" pos:column="32">1</lit:literal></expr>;</return>
		}</block></then> <else pos:line="1267" pos:column="19">else <block pos:line="1267" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="1268" pos:column="25">gchar</name> <type:modifier pos:line="1268" pos:column="31">*</type:modifier></type><name pos:line="1268" pos:column="32">mapped</name> <init pos:line="1268" pos:column="39">= <expr><call><name pos:line="1268" pos:column="41">g_utf8_casefold</name><argument_list pos:line="1268" pos:column="56">(<argument><expr><name pos:line="1268" pos:column="57">mixed</name></expr></argument>, <argument><expr><name pos:line="1268" pos:column="64">lenMixed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1269" pos:column="25">size_t</name></type> <name pos:line="1269" pos:column="32">lenMapped</name> <init pos:line="1269" pos:column="42">= <expr><call><name pos:line="1269" pos:column="44">strlen</name><argument_list pos:line="1269" pos:column="50">(<argument><expr><name pos:line="1269" pos:column="51">mapped</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1270" pos:column="25">if <condition pos:line="1270" pos:column="28">(<expr><name pos:line="1270" pos:column="29">lenMapped</name> <op:operator pos:line="1270" pos:column="39">&lt;</op:operator> <name pos:line="1270" pos:column="41">sizeFolded</name></expr>)</condition><then pos:line="1270" pos:column="52"> <block pos:line="1270" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="1271" pos:column="33">memcpy</name><argument_list pos:line="1271" pos:column="39">(<argument><expr><name pos:line="1271" pos:column="40">folded</name></expr></argument>, <argument><expr><name pos:line="1271" pos:column="48">mapped</name></expr></argument>,  <argument><expr><name pos:line="1271" pos:column="57">lenMapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="1272" pos:column="27">else <block pos:line="1272" pos:column="32">{
				<expr_stmt><expr><name pos:line="1273" pos:column="33">lenMapped</name> <op:operator pos:line="1273" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="1273" pos:column="45">0</lit:literal></expr>;</expr_stmt>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="1275" pos:column="25">g_free</name><argument_list pos:line="1275" pos:column="31">(<argument><expr><name pos:line="1275" pos:column="32">mapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1276" pos:column="25">return <expr><name pos:line="1276" pos:column="32">lenMapped</name></expr>;</return>
		}</block></else></if>
	}</block></function>
</public>}</block>;</class>

<class pos:line="1281" pos:column="1">class <name pos:line="1281" pos:column="7">CaseFolderDBCS</name> <super pos:line="1281" pos:column="22">: <specifier pos:line="1281" pos:column="24">public</specifier> <name pos:line="1281" pos:column="31">CaseFolderTable</name></super> <block pos:line="1281" pos:column="47">{<private type="default" pos:line="1281" pos:column="48">
	<decl_stmt><decl><type><specifier pos:line="1282" pos:column="9">const</specifier> <name pos:line="1282" pos:column="15">char</name> <type:modifier pos:line="1282" pos:column="20">*</type:modifier></type><name pos:line="1282" pos:column="21">charSet</name></decl>;</decl_stmt>
</private><public pos:line="1283" pos:column="1">public:
	<constructor><name pos:line="1284" pos:column="9">CaseFolderDBCS</name><parameter_list pos:line="1284" pos:column="23">(<param><decl><type><specifier pos:line="1284" pos:column="24">const</specifier> <name pos:line="1284" pos:column="30">char</name> <type:modifier pos:line="1284" pos:column="35">*</type:modifier></type><name pos:line="1284" pos:column="36">charSet_</name></decl></param>)</parameter_list> <member_list pos:line="1284" pos:column="46">: <call><name pos:line="1284" pos:column="48">charSet</name><argument_list pos:line="1284" pos:column="55">(<argument><expr><name pos:line="1284" pos:column="56">charSet_</name></expr></argument>)</argument_list></call> </member_list><block pos:line="1284" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="1285" pos:column="17">StandardASCII</name><argument_list pos:line="1285" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	<function><type><specifier pos:line="1287" pos:column="9">virtual</specifier> <name pos:line="1287" pos:column="17">size_t</name></type> <name pos:line="1287" pos:column="24">Fold</name><parameter_list pos:line="1287" pos:column="28">(<param><decl><type><name pos:line="1287" pos:column="29">char</name> <type:modifier pos:line="1287" pos:column="34">*</type:modifier></type><name pos:line="1287" pos:column="35">folded</name></decl></param>, <param><decl><type><name pos:line="1287" pos:column="43">size_t</name></type> <name pos:line="1287" pos:column="50">sizeFolded</name></decl></param>, <param><decl><type><specifier pos:line="1287" pos:column="62">const</specifier> <name pos:line="1287" pos:column="68">char</name> <type:modifier pos:line="1287" pos:column="73">*</type:modifier></type><name pos:line="1287" pos:column="74">mixed</name></decl></param>, <param><decl><type><name pos:line="1287" pos:column="81">size_t</name></type> <name pos:line="1287" pos:column="88">lenMixed</name></decl></param>)</parameter_list> <block pos:line="1287" pos:column="98">{
		<if pos:line="1288" pos:column="17">if <condition pos:line="1288" pos:column="20">(<expr><op:operator pos:line="1288" pos:column="21">(</op:operator><name pos:line="1288" pos:column="22">lenMixed</name> <op:operator pos:line="1288" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="1288" pos:column="34">1</lit:literal><op:operator pos:line="1288" pos:column="35">)</op:operator> <op:operator pos:line="1288" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="1288" pos:column="40">(</op:operator><name pos:line="1288" pos:column="41">sizeFolded</name> <op:operator pos:line="1288" pos:column="52">&gt;</op:operator> <lit:literal type="number" pos:line="1288" pos:column="54">0</lit:literal><op:operator pos:line="1288" pos:column="55">)</op:operator></expr>)</condition><then pos:line="1288" pos:column="57"> <block pos:line="1288" pos:column="58">{
			<expr_stmt><expr><name><name pos:line="1289" pos:column="25">folded</name><index pos:line="1289" pos:column="31">[<expr><lit:literal type="number" pos:line="1289" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="1289" pos:column="35">=</op:operator> <name><name pos:line="1289" pos:column="37">mapping</name><index pos:line="1289" pos:column="44">[<expr><call><name><name pos:line="1289" pos:column="45">static_cast</name><argument_list pos:line="1289" pos:column="56">&lt;<argument><expr><name pos:line="1289" pos:column="57">unsigned</name> <name pos:line="1289" pos:column="66">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1289" pos:column="71">(<argument><expr><name><name pos:line="1289" pos:column="72">mixed</name><index pos:line="1289" pos:column="77">[<expr><lit:literal type="number" pos:line="1289" pos:column="78">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
			<return pos:line="1290" pos:column="25">return <expr><lit:literal type="number" pos:line="1290" pos:column="32">1</lit:literal></expr>;</return>
		}</block></then> <else pos:line="1291" pos:column="19">else <if pos:line="1291" pos:column="24">if <condition pos:line="1291" pos:column="27">(<expr><op:operator pos:line="1291" pos:column="28">*</op:operator><name pos:line="1291" pos:column="29">charSet</name></expr>)</condition><then pos:line="1291" pos:column="37"> <block pos:line="1291" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="1292" pos:column="25">int</name></type> <name pos:line="1292" pos:column="29">convertedLength</name> <init pos:line="1292" pos:column="45">= <expr><name pos:line="1292" pos:column="47">lenMixed</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1293" pos:column="25">char</name> <type:modifier pos:line="1293" pos:column="30">*</type:modifier></type><name pos:line="1293" pos:column="31">sUTF8</name> <init pos:line="1293" pos:column="37">= <expr><call><name pos:line="1293" pos:column="39">ConvertText</name><argument_list pos:line="1293" pos:column="50">(<argument><expr><op:operator pos:line="1293" pos:column="51">&amp;</op:operator><name pos:line="1293" pos:column="52">convertedLength</name></expr></argument>, <argument><expr><call><name><name pos:line="1293" pos:column="69">const_cast</name><argument_list pos:line="1293" pos:column="79">&lt;<argument><expr><name pos:line="1293" pos:column="80">char</name> <op:operator pos:line="1293" pos:column="85">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1293" pos:column="87">(<argument><expr><name pos:line="1293" pos:column="88">mixed</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1293" pos:column="96">lenMixed</name></expr></argument>,
				<argument><expr><lit:literal type="string" pos:line="1294" pos:column="33">"UTF-8"</lit:literal></expr></argument>, <argument><expr><name pos:line="1294" pos:column="42">charSet</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1294" pos:column="51">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1295" pos:column="25">if <condition pos:line="1295" pos:column="28">(<expr><name pos:line="1295" pos:column="29">sUTF8</name></expr>)</condition><then pos:line="1295" pos:column="35"> <block pos:line="1295" pos:column="36">{
				<decl_stmt><decl><type><name pos:line="1296" pos:column="33">gchar</name> <type:modifier pos:line="1296" pos:column="39">*</type:modifier></type><name pos:line="1296" pos:column="40">mapped</name> <init pos:line="1296" pos:column="47">= <expr><call><name pos:line="1296" pos:column="49">g_utf8_casefold</name><argument_list pos:line="1296" pos:column="64">(<argument><expr><name pos:line="1296" pos:column="65">sUTF8</name></expr></argument>, <argument><expr><call><name pos:line="1296" pos:column="72">strlen</name><argument_list pos:line="1296" pos:column="78">(<argument><expr><name pos:line="1296" pos:column="79">sUTF8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1297" pos:column="33">size_t</name></type> <name pos:line="1297" pos:column="40">lenMapped</name> <init pos:line="1297" pos:column="50">= <expr><call><name pos:line="1297" pos:column="52">strlen</name><argument_list pos:line="1297" pos:column="58">(<argument><expr><name pos:line="1297" pos:column="59">mapped</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1298" pos:column="33">if <condition pos:line="1298" pos:column="36">(<expr><name pos:line="1298" pos:column="37">lenMapped</name> <op:operator pos:line="1298" pos:column="47">&lt;</op:operator> <name pos:line="1298" pos:column="49">sizeFolded</name></expr>)</condition><then pos:line="1298" pos:column="60"> <block pos:line="1298" pos:column="61">{
					<expr_stmt><expr><call><name pos:line="1299" pos:column="41">memcpy</name><argument_list pos:line="1299" pos:column="47">(<argument><expr><name pos:line="1299" pos:column="48">folded</name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="56">mapped</name></expr></argument>,  <argument><expr><name pos:line="1299" pos:column="65">lenMapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="1300" pos:column="35">else <block pos:line="1300" pos:column="40">{
					<expr_stmt><expr><name><name pos:line="1301" pos:column="41">folded</name><index pos:line="1301" pos:column="47">[<expr><lit:literal type="number" pos:line="1301" pos:column="48">0</lit:literal></expr>]</index></name> <op:operator pos:line="1301" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="1301" pos:column="53">'\0'</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1302" pos:column="41">lenMapped</name> <op:operator pos:line="1302" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="1302" pos:column="53">1</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
				<expr_stmt><expr><call><name pos:line="1304" pos:column="33">g_free</name><argument_list pos:line="1304" pos:column="39">(<argument><expr><name pos:line="1304" pos:column="40">mapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1305" pos:column="33">delete</op:operator> <index pos:line="1305" pos:column="40">[]</index><name pos:line="1305" pos:column="42">sUTF8</name></expr>;</expr_stmt>
				<return pos:line="1306" pos:column="33">return <expr><name pos:line="1306" pos:column="40">lenMapped</name></expr>;</return>
			}</block></then></if>
		}</block></then></if></else></if>
		<comment type="line" pos:line="1309" pos:column="17">// Something failed so return a single NUL byte</comment>
		<expr_stmt><expr><name><name pos:line="1310" pos:column="17">folded</name><index pos:line="1310" pos:column="23">[<expr><lit:literal type="number" pos:line="1310" pos:column="24">0</lit:literal></expr>]</index></name> <op:operator pos:line="1310" pos:column="27">=</op:operator> <lit:literal type="char" pos:line="1310" pos:column="29">'\0'</lit:literal></expr>;</expr_stmt>
		<return pos:line="1311" pos:column="17">return <expr><lit:literal type="number" pos:line="1311" pos:column="24">1</lit:literal></expr>;</return>
	}</block></function>
</public>}</block>;</class>

<function><type><name pos:line="1315" pos:column="1">CaseFolder</name> <type:modifier pos:line="1315" pos:column="12">*</type:modifier></type><name><name pos:line="1315" pos:column="13">ScintillaGTK</name><op:operator pos:line="1315" pos:column="25">::</op:operator><name pos:line="1315" pos:column="27">CaseFolderForEncoding</name></name><parameter_list pos:line="1315" pos:column="48">()</parameter_list> <block pos:line="1315" pos:column="51">{
	<if pos:line="1316" pos:column="9">if <condition pos:line="1316" pos:column="12">(<expr><name><name pos:line="1316" pos:column="13">pdoc</name><op:operator pos:line="1316" pos:column="17">-&gt;</op:operator><name pos:line="1316" pos:column="19">dbcsCodePage</name></name> <op:operator pos:line="1316" pos:column="32">==</op:operator> <name pos:line="1316" pos:column="35">SC_CP_UTF8</name></expr>)</condition><then pos:line="1316" pos:column="46"> <block pos:line="1316" pos:column="47">{
		<return pos:line="1317" pos:column="17">return <expr><op:operator pos:line="1317" pos:column="24">new</op:operator> <call><name pos:line="1317" pos:column="28">CaseFolderUTF8</name><argument_list pos:line="1317" pos:column="42">()</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="1318" pos:column="11">else <block pos:line="1318" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="1319" pos:column="17">const</specifier> <name pos:line="1319" pos:column="23">char</name> <type:modifier pos:line="1319" pos:column="28">*</type:modifier></type><name pos:line="1319" pos:column="29">charSetBuffer</name> <init pos:line="1319" pos:column="43">= <expr><call><name pos:line="1319" pos:column="45">CharacterSetID</name><argument_list pos:line="1319" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1320" pos:column="17">if <condition pos:line="1320" pos:column="20">(<expr><name pos:line="1320" pos:column="21">charSetBuffer</name></expr>)</condition><then pos:line="1320" pos:column="35"> <block pos:line="1320" pos:column="36">{
			<if pos:line="1321" pos:column="25">if <condition pos:line="1321" pos:column="28">(<expr><name><name pos:line="1321" pos:column="29">pdoc</name><op:operator pos:line="1321" pos:column="33">-&gt;</op:operator><name pos:line="1321" pos:column="35">dbcsCodePage</name></name> <op:operator pos:line="1321" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="1321" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="1321" pos:column="53"> <block pos:line="1321" pos:column="54">{
				<decl_stmt><decl><type><name pos:line="1322" pos:column="33">CaseFolderTable</name> <type:modifier pos:line="1322" pos:column="49">*</type:modifier></type><name pos:line="1322" pos:column="50">pcf</name> <init pos:line="1322" pos:column="54">= <expr><op:operator pos:line="1322" pos:column="56">new</op:operator> <call><name pos:line="1322" pos:column="60">CaseFolderTable</name><argument_list pos:line="1322" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1323" pos:column="33">pcf</name><op:operator pos:line="1323" pos:column="36">-&gt;</op:operator><name pos:line="1323" pos:column="38">StandardASCII</name></name><argument_list pos:line="1323" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="1324" pos:column="33">// Only for single byte encodings</comment>
				<for pos:line="1325" pos:column="33">for (<init><decl><type><name pos:line="1325" pos:column="38">int</name></type> <name pos:line="1325" pos:column="42">i</name><init pos:line="1325" pos:column="43">=<expr><lit:literal type="number" pos:line="1325" pos:column="44">0x80</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1325" pos:column="50">i</name><op:operator pos:line="1325" pos:column="51">&lt;</op:operator><lit:literal type="number" pos:line="1325" pos:column="52">0x100</lit:literal></expr>;</condition> <incr><expr><name pos:line="1325" pos:column="59">i</name><op:operator pos:line="1325" pos:column="60">++</op:operator></expr></incr>) <block pos:line="1325" pos:column="64">{
					<decl_stmt><decl><type><name pos:line="1326" pos:column="41">char</name></type> <name><name pos:line="1326" pos:column="46">sCharacter</name><index pos:line="1326" pos:column="56">[<expr><lit:literal type="number" pos:line="1326" pos:column="57">2</lit:literal></expr>]</index></name> <init pos:line="1326" pos:column="60">= <expr><lit:literal type="string" pos:line="1326" pos:column="62">"A"</lit:literal></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="1327" pos:column="41">sCharacter</name><index pos:line="1327" pos:column="51">[<expr><lit:literal type="number" pos:line="1327" pos:column="52">0</lit:literal></expr>]</index></name> <op:operator pos:line="1327" pos:column="55">=</op:operator> <name pos:line="1327" pos:column="57">i</name></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="1328" pos:column="41">int</name></type> <name pos:line="1328" pos:column="45">convertedLength</name> <init pos:line="1328" pos:column="61">= <expr><lit:literal type="number" pos:line="1328" pos:column="63">1</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1329" pos:column="41">const</specifier> <name pos:line="1329" pos:column="47">char</name> <type:modifier pos:line="1329" pos:column="52">*</type:modifier></type><name pos:line="1329" pos:column="53">sUTF8</name> <init pos:line="1329" pos:column="59">= <expr><call><name pos:line="1329" pos:column="61">ConvertText</name><argument_list pos:line="1329" pos:column="72">(<argument><expr><op:operator pos:line="1329" pos:column="73">&amp;</op:operator><name pos:line="1329" pos:column="74">convertedLength</name></expr></argument>, <argument><expr><name pos:line="1329" pos:column="91">sCharacter</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1329" pos:column="103">1</lit:literal></expr></argument>,
						<argument><expr><lit:literal type="string" pos:line="1330" pos:column="49">"UTF-8"</lit:literal></expr></argument>, <argument><expr><name pos:line="1330" pos:column="58">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1330" pos:column="73">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="1331" pos:column="41">if <condition pos:line="1331" pos:column="44">(<expr><name pos:line="1331" pos:column="45">sUTF8</name></expr>)</condition><then pos:line="1331" pos:column="51"> <block pos:line="1331" pos:column="52">{
						<decl_stmt><decl><type><name pos:line="1332" pos:column="49">gchar</name> <type:modifier pos:line="1332" pos:column="55">*</type:modifier></type><name pos:line="1332" pos:column="56">mapped</name> <init pos:line="1332" pos:column="63">= <expr><call><name pos:line="1332" pos:column="65">g_utf8_casefold</name><argument_list pos:line="1332" pos:column="80">(<argument><expr><name pos:line="1332" pos:column="81">sUTF8</name></expr></argument>, <argument><expr><call><name pos:line="1332" pos:column="88">strlen</name><argument_list pos:line="1332" pos:column="94">(<argument><expr><name pos:line="1332" pos:column="95">sUTF8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="1333" pos:column="49">if <condition pos:line="1333" pos:column="52">(<expr><name pos:line="1333" pos:column="53">mapped</name></expr>)</condition><then pos:line="1333" pos:column="60"> <block pos:line="1333" pos:column="61">{
							<decl_stmt><decl><type><name pos:line="1334" pos:column="57">int</name></type> <name pos:line="1334" pos:column="61">mappedLength</name> <init pos:line="1334" pos:column="74">= <expr><call><name pos:line="1334" pos:column="76">strlen</name><argument_list pos:line="1334" pos:column="82">(<argument><expr><name pos:line="1334" pos:column="83">mapped</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><specifier pos:line="1335" pos:column="57">const</specifier> <name pos:line="1335" pos:column="63">char</name> <type:modifier pos:line="1335" pos:column="68">*</type:modifier></type><name pos:line="1335" pos:column="69">mappedBack</name> <init pos:line="1335" pos:column="80">= <expr><call><name pos:line="1335" pos:column="82">ConvertText</name><argument_list pos:line="1335" pos:column="93">(<argument><expr><op:operator pos:line="1335" pos:column="94">&amp;</op:operator><name pos:line="1335" pos:column="95">mappedLength</name></expr></argument>, <argument><expr><name pos:line="1335" pos:column="109">mapped</name></expr></argument>,
								<argument><expr><name pos:line="1336" pos:column="65">mappedLength</name></expr></argument>, <argument><expr><name pos:line="1336" pos:column="79">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1336" pos:column="94">"UTF-8"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1336" pos:column="103">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1336" pos:column="110">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="1337" pos:column="57">if <condition pos:line="1337" pos:column="60">(<expr><name pos:line="1337" pos:column="61">mappedBack</name> <op:operator pos:line="1337" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="1337" pos:column="75">(</op:operator><call><name pos:line="1337" pos:column="76">strlen</name><argument_list pos:line="1337" pos:column="82">(<argument><expr><name pos:line="1337" pos:column="83">mappedBack</name></expr></argument>)</argument_list></call> <op:operator pos:line="1337" pos:column="95">==</op:operator> <lit:literal type="number" pos:line="1337" pos:column="98">1</lit:literal><op:operator pos:line="1337" pos:column="99">)</op:operator> <op:operator pos:line="1337" pos:column="101">&amp;&amp;</op:operator> <op:operator pos:line="1337" pos:column="104">(</op:operator><name><name pos:line="1337" pos:column="105">mappedBack</name><index pos:line="1337" pos:column="115">[<expr><lit:literal type="number" pos:line="1337" pos:column="116">0</lit:literal></expr>]</index></name> <op:operator pos:line="1337" pos:column="119">!=</op:operator> <name><name pos:line="1337" pos:column="122">sCharacter</name><index pos:line="1337" pos:column="132">[<expr><lit:literal type="number" pos:line="1337" pos:column="133">0</lit:literal></expr>]</index></name><op:operator pos:line="1337" pos:column="135">)</op:operator></expr>)</condition><then pos:line="1337" pos:column="137"> <block pos:line="1337" pos:column="138">{
								<expr_stmt><expr><call><name><name pos:line="1338" pos:column="65">pcf</name><op:operator pos:line="1338" pos:column="68">-&gt;</op:operator><name pos:line="1338" pos:column="70">SetTranslation</name></name><argument_list pos:line="1338" pos:column="84">(<argument><expr><name><name pos:line="1338" pos:column="85">sCharacter</name><index pos:line="1338" pos:column="95">[<expr><lit:literal type="number" pos:line="1338" pos:column="96">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="1338" pos:column="100">mappedBack</name><index pos:line="1338" pos:column="110">[<expr><lit:literal type="number" pos:line="1338" pos:column="111">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							<expr_stmt><expr><op:operator pos:line="1340" pos:column="57">delete</op:operator> <index pos:line="1340" pos:column="64">[]</index><name pos:line="1340" pos:column="66">mappedBack</name></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="1341" pos:column="57">g_free</name><argument_list pos:line="1341" pos:column="63">(<argument><expr><name pos:line="1341" pos:column="64">mapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
					<expr_stmt><expr><op:operator pos:line="1344" pos:column="41">delete</op:operator> <index pos:line="1344" pos:column="48">[]</index><name pos:line="1344" pos:column="50">sUTF8</name></expr>;</expr_stmt>
				}</block></for>
				<return pos:line="1346" pos:column="33">return <expr><name pos:line="1346" pos:column="40">pcf</name></expr>;</return>
			}</block></then> <else pos:line="1347" pos:column="27">else <block pos:line="1347" pos:column="32">{
				<return pos:line="1348" pos:column="33">return <expr><op:operator pos:line="1348" pos:column="40">new</op:operator> <call><name pos:line="1348" pos:column="44">CaseFolderDBCS</name><argument_list pos:line="1348" pos:column="58">(<argument><expr><name pos:line="1348" pos:column="59">charSetBuffer</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></else></if>
		}</block></then></if>
		<return pos:line="1351" pos:column="17">return <expr><lit:literal type="number" pos:line="1351" pos:column="24">0</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name><name pos:line="1355" pos:column="1">std</name><op:operator pos:line="1355" pos:column="4">::</op:operator><name pos:line="1355" pos:column="6">string</name></name></type> <name><name pos:line="1355" pos:column="13">ScintillaGTK</name><op:operator pos:line="1355" pos:column="25">::</op:operator><name pos:line="1355" pos:column="27">CaseMapString</name></name><parameter_list pos:line="1355" pos:column="40">(<param><decl><type><specifier pos:line="1355" pos:column="41">const</specifier> <name><name pos:line="1355" pos:column="47">std</name><op:operator pos:line="1355" pos:column="50">::</op:operator><name pos:line="1355" pos:column="52">string</name></name> <type:modifier pos:line="1355" pos:column="59">&amp;</type:modifier></type><name pos:line="1355" pos:column="60">s</name></decl></param>, <param><decl><type><name pos:line="1355" pos:column="63">int</name></type> <name pos:line="1355" pos:column="67">caseMapping</name></decl></param>)</parameter_list> <block pos:line="1355" pos:column="80">{
	<if pos:line="1356" pos:column="9">if <condition pos:line="1356" pos:column="12">(<expr><call><name><name pos:line="1356" pos:column="13">s</name><op:operator pos:line="1356" pos:column="14">.</op:operator><name pos:line="1356" pos:column="15">size</name></name><argument_list pos:line="1356" pos:column="19">()</argument_list></call> <op:operator pos:line="1356" pos:column="22">==</op:operator> <lit:literal type="number" pos:line="1356" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="1356" pos:column="27">
		<return pos:line="1357" pos:column="17">return <expr><call><name><name pos:line="1357" pos:column="24">std</name><op:operator pos:line="1357" pos:column="27">::</op:operator><name pos:line="1357" pos:column="29">string</name></name><argument_list pos:line="1357" pos:column="35">()</argument_list></call></expr>;</return></then></if>

	<if pos:line="1359" pos:column="9">if <condition pos:line="1359" pos:column="12">(<expr><name pos:line="1359" pos:column="13">caseMapping</name> <op:operator pos:line="1359" pos:column="25">==</op:operator> <name pos:line="1359" pos:column="28">cmSame</name></expr>)</condition><then pos:line="1359" pos:column="35">
		<return pos:line="1360" pos:column="17">return <expr><name pos:line="1360" pos:column="24">s</name></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="1362" pos:column="9">const</specifier> <name pos:line="1362" pos:column="15">char</name> <type:modifier pos:line="1362" pos:column="20">*</type:modifier></type><name pos:line="1362" pos:column="21">needsFree1</name> <init pos:line="1362" pos:column="32">= <expr><lit:literal type="number" pos:line="1362" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="1362" pos:column="41">// Must be freed with delete []</comment>
	<decl_stmt><decl><type><specifier pos:line="1363" pos:column="9">const</specifier> <name pos:line="1363" pos:column="15">char</name> <type:modifier pos:line="1363" pos:column="20">*</type:modifier></type><name pos:line="1363" pos:column="21">charSetBuffer</name> <init pos:line="1363" pos:column="35">= <expr><call><name pos:line="1363" pos:column="37">CharacterSetID</name><argument_list pos:line="1363" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1364" pos:column="9">const</specifier> <name pos:line="1364" pos:column="15">char</name> <type:modifier pos:line="1364" pos:column="20">*</type:modifier></type><name pos:line="1364" pos:column="21">sUTF8</name> <init pos:line="1364" pos:column="27">= <expr><call><name><name pos:line="1364" pos:column="29">s</name><op:operator pos:line="1364" pos:column="30">.</op:operator><name pos:line="1364" pos:column="31">c_str</name></name><argument_list pos:line="1364" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1365" pos:column="9">int</name></type> <name pos:line="1365" pos:column="13">rangeBytes</name> <init pos:line="1365" pos:column="24">= <expr><call><name><name pos:line="1365" pos:column="26">s</name><op:operator pos:line="1365" pos:column="27">.</op:operator><name pos:line="1365" pos:column="28">size</name></name><argument_list pos:line="1365" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1367" pos:column="9">int</name></type> <name pos:line="1367" pos:column="13">convertedLength</name> <init pos:line="1367" pos:column="29">= <expr><name pos:line="1367" pos:column="31">rangeBytes</name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="1368" pos:column="9">// Change text to UTF-8</comment>
	<if pos:line="1369" pos:column="9">if <condition pos:line="1369" pos:column="12">(<expr><op:operator pos:line="1369" pos:column="13">!</op:operator><call><name pos:line="1369" pos:column="14">IsUnicodeMode</name><argument_list pos:line="1369" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="1369" pos:column="30"> <block pos:line="1369" pos:column="31">{
		<comment type="line" pos:line="1370" pos:column="17">// Need to convert</comment>
		<if pos:line="1371" pos:column="17">if <condition pos:line="1371" pos:column="20">(<expr><op:operator pos:line="1371" pos:column="21">*</op:operator><name pos:line="1371" pos:column="22">charSetBuffer</name></expr>)</condition><then pos:line="1371" pos:column="36"> <block pos:line="1371" pos:column="37">{
			<expr_stmt><expr><name pos:line="1372" pos:column="25">sUTF8</name> <op:operator pos:line="1372" pos:column="31">=</op:operator> <call><name pos:line="1372" pos:column="33">ConvertText</name><argument_list pos:line="1372" pos:column="44">(<argument><expr><op:operator pos:line="1372" pos:column="45">&amp;</op:operator><name pos:line="1372" pos:column="46">convertedLength</name></expr></argument>, <argument><expr><call><name><name pos:line="1372" pos:column="63">const_cast</name><argument_list pos:line="1372" pos:column="73">&lt;<argument><expr><name pos:line="1372" pos:column="74">char</name> <op:operator pos:line="1372" pos:column="79">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1372" pos:column="81">(<argument><expr><call><name><name pos:line="1372" pos:column="82">s</name><op:operator pos:line="1372" pos:column="83">.</op:operator><name pos:line="1372" pos:column="84">c_str</name></name><argument_list pos:line="1372" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1372" pos:column="94">rangeBytes</name></expr></argument>,
				<argument><expr><lit:literal type="string" pos:line="1373" pos:column="33">"UTF-8"</lit:literal></expr></argument>, <argument><expr><name pos:line="1373" pos:column="42">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1373" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1374" pos:column="25">needsFree1</name> <op:operator pos:line="1374" pos:column="36">=</op:operator> <name pos:line="1374" pos:column="38">sUTF8</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="1377" pos:column="9">gchar</name> <type:modifier pos:line="1377" pos:column="15">*</type:modifier></type><name pos:line="1377" pos:column="16">mapped</name></decl>;</decl_stmt>	<comment type="line" pos:line="1377" pos:column="25">// Must be freed with g_free</comment>
	<if pos:line="1378" pos:column="9">if <condition pos:line="1378" pos:column="12">(<expr><name pos:line="1378" pos:column="13">caseMapping</name> <op:operator pos:line="1378" pos:column="25">==</op:operator> <name pos:line="1378" pos:column="28">cmUpper</name></expr>)</condition><then pos:line="1378" pos:column="36"> <block pos:line="1378" pos:column="37">{
		<expr_stmt><expr><name pos:line="1379" pos:column="17">mapped</name> <op:operator pos:line="1379" pos:column="24">=</op:operator> <call><name pos:line="1379" pos:column="26">g_utf8_strup</name><argument_list pos:line="1379" pos:column="38">(<argument><expr><name pos:line="1379" pos:column="39">sUTF8</name></expr></argument>, <argument><expr><name pos:line="1379" pos:column="46">convertedLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1380" pos:column="11">else <block pos:line="1380" pos:column="16">{
		<expr_stmt><expr><name pos:line="1381" pos:column="17">mapped</name> <op:operator pos:line="1381" pos:column="24">=</op:operator> <call><name pos:line="1381" pos:column="26">g_utf8_strdown</name><argument_list pos:line="1381" pos:column="40">(<argument><expr><name pos:line="1381" pos:column="41">sUTF8</name></expr></argument>, <argument><expr><name pos:line="1381" pos:column="48">convertedLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<decl_stmt><decl><type><name pos:line="1383" pos:column="9">int</name></type> <name pos:line="1383" pos:column="13">mappedLength</name> <init pos:line="1383" pos:column="26">= <expr><call><name pos:line="1383" pos:column="28">strlen</name><argument_list pos:line="1383" pos:column="34">(<argument><expr><name pos:line="1383" pos:column="35">mapped</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1384" pos:column="9">char</name> <type:modifier pos:line="1384" pos:column="14">*</type:modifier></type><name pos:line="1384" pos:column="15">mappedBack</name> <init pos:line="1384" pos:column="26">= <expr><name pos:line="1384" pos:column="28">mapped</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1386" pos:column="9">char</name> <type:modifier pos:line="1386" pos:column="14">*</type:modifier></type><name pos:line="1386" pos:column="15">needsFree2</name> <init pos:line="1386" pos:column="26">= <expr><lit:literal type="number" pos:line="1386" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="1386" pos:column="33">// Must be freed with delete []</comment>
	<if pos:line="1387" pos:column="9">if <condition pos:line="1387" pos:column="12">(<expr><op:operator pos:line="1387" pos:column="13">!</op:operator><call><name pos:line="1387" pos:column="14">IsUnicodeMode</name><argument_list pos:line="1387" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="1387" pos:column="30"> <block pos:line="1387" pos:column="31">{
		<if pos:line="1388" pos:column="17">if <condition pos:line="1388" pos:column="20">(<expr><op:operator pos:line="1388" pos:column="21">*</op:operator><name pos:line="1388" pos:column="22">charSetBuffer</name></expr>)</condition><then pos:line="1388" pos:column="36"> <block pos:line="1388" pos:column="37">{
			<expr_stmt><expr><name pos:line="1389" pos:column="25">mappedBack</name> <op:operator pos:line="1389" pos:column="36">=</op:operator> <call><name pos:line="1389" pos:column="38">ConvertText</name><argument_list pos:line="1389" pos:column="49">(<argument><expr><op:operator pos:line="1389" pos:column="50">&amp;</op:operator><name pos:line="1389" pos:column="51">mappedLength</name></expr></argument>, <argument><expr><name pos:line="1389" pos:column="65">mapped</name></expr></argument>, <argument><expr><name pos:line="1389" pos:column="73">mappedLength</name></expr></argument>, <argument><expr><name pos:line="1389" pos:column="87">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1389" pos:column="102">"UTF-8"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1389" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1390" pos:column="25">needsFree2</name> <op:operator pos:line="1390" pos:column="36">=</op:operator> <name pos:line="1390" pos:column="38">mappedBack</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<function_decl><type><name><name pos:line="1394" pos:column="9">std</name><op:operator pos:line="1394" pos:column="12">::</op:operator><name pos:line="1394" pos:column="14">string</name></name></type> <name pos:line="1394" pos:column="21">ret</name><parameter_list pos:line="1394" pos:column="24">(<param><decl><type><name pos:line="1394" pos:column="25">mappedBack</name></type></decl></param>, <param><decl><type><name pos:line="1394" pos:column="37">mappedLength</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="1395" pos:column="9">g_free</name><argument_list pos:line="1395" pos:column="15">(<argument><expr><name pos:line="1395" pos:column="16">mapped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="1396" pos:column="9">delete</op:operator> <index pos:line="1396" pos:column="16">[]</index><name pos:line="1396" pos:column="18">needsFree1</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="1397" pos:column="9">delete</op:operator> <index pos:line="1397" pos:column="16">[]</index><name pos:line="1397" pos:column="18">needsFree2</name></expr>;</expr_stmt>
	<return pos:line="1398" pos:column="9">return <expr><name pos:line="1398" pos:column="16">ret</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1401" pos:column="1">int</name></type> <name><name pos:line="1401" pos:column="5">ScintillaGTK</name><op:operator pos:line="1401" pos:column="17">::</op:operator><name pos:line="1401" pos:column="19">KeyDefault</name></name><parameter_list pos:line="1401" pos:column="29">(<param><decl><type><name pos:line="1401" pos:column="30">int</name></type> <name pos:line="1401" pos:column="34">key</name></decl></param>, <param><decl><type><name pos:line="1401" pos:column="39">int</name></type> <name pos:line="1401" pos:column="43">modifiers</name></decl></param>)</parameter_list> <block pos:line="1401" pos:column="54">{
	<if pos:line="1402" pos:column="9">if <condition pos:line="1402" pos:column="12">(<expr><op:operator pos:line="1402" pos:column="13">!</op:operator><op:operator pos:line="1402" pos:column="14">(</op:operator><name pos:line="1402" pos:column="15">modifiers</name> <op:operator pos:line="1402" pos:column="25">&amp;</op:operator> <name pos:line="1402" pos:column="27">SCI_CTRL</name><op:operator pos:line="1402" pos:column="35">)</op:operator> <op:operator pos:line="1402" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="1402" pos:column="40">!</op:operator><op:operator pos:line="1402" pos:column="41">(</op:operator><name pos:line="1402" pos:column="42">modifiers</name> <op:operator pos:line="1402" pos:column="52">&amp;</op:operator> <name pos:line="1402" pos:column="54">SCI_ALT</name><op:operator pos:line="1402" pos:column="61">)</op:operator></expr>)</condition><then pos:line="1402" pos:column="63"> <block pos:line="1402" pos:column="64">{
		<if pos:line="1403" pos:column="17">if <condition pos:line="1403" pos:column="20">(<expr><name pos:line="1403" pos:column="21">key</name> <op:operator pos:line="1403" pos:column="25">&lt;</op:operator> <lit:literal type="number" pos:line="1403" pos:column="27">256</lit:literal></expr>)</condition><then pos:line="1403" pos:column="31"> <block pos:line="1403" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="1404" pos:column="25">NotifyKey</name><argument_list pos:line="1404" pos:column="34">(<argument><expr><name pos:line="1404" pos:column="35">key</name></expr></argument>, <argument><expr><name pos:line="1404" pos:column="40">modifiers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1405" pos:column="25">return <expr><lit:literal type="number" pos:line="1405" pos:column="32">0</lit:literal></expr>;</return>
		}</block></then> <else pos:line="1406" pos:column="19">else <block pos:line="1406" pos:column="24">{
			<comment type="line" pos:line="1407" pos:column="25">// Pass up to container in case it is an accelerator</comment>
			<expr_stmt><expr><call><name pos:line="1408" pos:column="25">NotifyKey</name><argument_list pos:line="1408" pos:column="34">(<argument><expr><name pos:line="1408" pos:column="35">key</name></expr></argument>, <argument><expr><name pos:line="1408" pos:column="40">modifiers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1409" pos:column="25">return <expr><lit:literal type="number" pos:line="1409" pos:column="32">0</lit:literal></expr>;</return>
		}</block></else></if>
	}</block></then> <else pos:line="1411" pos:column="11">else <block pos:line="1411" pos:column="16">{
		<comment type="line" pos:line="1412" pos:column="17">// Pass up to container in case it is an accelerator</comment>
		<expr_stmt><expr><call><name pos:line="1413" pos:column="17">NotifyKey</name><argument_list pos:line="1413" pos:column="26">(<argument><expr><name pos:line="1413" pos:column="27">key</name></expr></argument>, <argument><expr><name pos:line="1413" pos:column="32">modifiers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1414" pos:column="17">return <expr><lit:literal type="number" pos:line="1414" pos:column="24">0</lit:literal></expr>;</return>
	}</block></else></if>
	<comment type="line" pos:line="1416" pos:column="9">//Platform::DebugPrintf("SK-key: %d %x %x\n",key, modifiers);</comment>
}</block></function>

<function><type><name pos:line="1419" pos:column="1">void</name></type> <name><name pos:line="1419" pos:column="6">ScintillaGTK</name><op:operator pos:line="1419" pos:column="18">::</op:operator><name pos:line="1419" pos:column="20">CopyToClipboard</name></name><parameter_list pos:line="1419" pos:column="35">(<param><decl><type><specifier pos:line="1419" pos:column="36">const</specifier> <name pos:line="1419" pos:column="42">SelectionText</name> <type:modifier pos:line="1419" pos:column="56">&amp;</type:modifier></type><name pos:line="1419" pos:column="57">selectedText</name></decl></param>)</parameter_list> <block pos:line="1419" pos:column="71">{
<cpp:ifndef pos:line="1420" pos:column="1">#<cpp:directive pos:line="1420" pos:column="2">ifndef</cpp:directive> <name pos:line="1420" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
	<expr_stmt><expr><call><name><name pos:line="1421" pos:column="9">copyText</name><op:operator pos:line="1421" pos:column="17">.</op:operator><name pos:line="1421" pos:column="18">Copy</name></name><argument_list pos:line="1421" pos:column="22">(<argument><expr><name pos:line="1421" pos:column="23">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1422" pos:column="9">gtk_selection_owner_set</name><argument_list pos:line="1422" pos:column="32">(<argument><expr><call><name pos:line="1422" pos:column="33">GTK_WIDGET</name><argument_list pos:line="1422" pos:column="43">(<argument><expr><call><name pos:line="1422" pos:column="44">PWidget</name><argument_list pos:line="1422" pos:column="51">(<argument><expr><name pos:line="1422" pos:column="52">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="1423" pos:column="33">atomClipboard</name></expr></argument>,
				<argument><expr><name pos:line="1424" pos:column="33">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1425" pos:column="1">#<cpp:directive pos:line="1425" pos:column="2">else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="1426" pos:column="9">SelectionText</name> <type:modifier pos:line="1426" pos:column="23">*</type:modifier></type><name pos:line="1426" pos:column="24">clipText</name> <init pos:line="1426" pos:column="33">= <expr><op:operator pos:line="1426" pos:column="35">new</op:operator> <call><name pos:line="1426" pos:column="39">SelectionText</name><argument_list pos:line="1426" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1427" pos:column="9">clipText</name><op:operator pos:line="1427" pos:column="17">-&gt;</op:operator><name pos:line="1427" pos:column="19">Copy</name></name><argument_list pos:line="1427" pos:column="23">(<argument><expr><name pos:line="1427" pos:column="24">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1428" pos:column="9">StoreOnClipboard</name><argument_list pos:line="1428" pos:column="25">(<argument><expr><name pos:line="1428" pos:column="26">clipText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1429" pos:column="1">#<cpp:directive pos:line="1429" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<function><type><name pos:line="1432" pos:column="1">void</name></type> <name><name pos:line="1432" pos:column="6">ScintillaGTK</name><op:operator pos:line="1432" pos:column="18">::</op:operator><name pos:line="1432" pos:column="20">Copy</name></name><parameter_list pos:line="1432" pos:column="24">()</parameter_list> <block pos:line="1432" pos:column="27">{
	<if pos:line="1433" pos:column="9">if <condition pos:line="1433" pos:column="12">(<expr><op:operator pos:line="1433" pos:column="13">!</op:operator><call><name><name pos:line="1433" pos:column="14">sel</name><op:operator pos:line="1433" pos:column="17">.</op:operator><name pos:line="1433" pos:column="18">Empty</name></name><argument_list pos:line="1433" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="1433" pos:column="26"> <block pos:line="1433" pos:column="27">{
<cpp:ifndef pos:line="1434" pos:column="1">#<cpp:directive pos:line="1434" pos:column="2">ifndef</cpp:directive> <name pos:line="1434" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
		<expr_stmt><expr><call><name pos:line="1435" pos:column="17">CopySelectionRange</name><argument_list pos:line="1435" pos:column="35">(<argument><expr><op:operator pos:line="1435" pos:column="36">&amp;</op:operator><name pos:line="1435" pos:column="37">copyText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1436" pos:column="17">gtk_selection_owner_set</name><argument_list pos:line="1436" pos:column="40">(<argument><expr><call><name pos:line="1436" pos:column="41">GTK_WIDGET</name><argument_list pos:line="1436" pos:column="51">(<argument><expr><call><name pos:line="1436" pos:column="52">PWidget</name><argument_list pos:line="1436" pos:column="59">(<argument><expr><name pos:line="1436" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
		                        <argument><expr><name pos:line="1437" pos:column="41">atomClipboard</name></expr></argument>,
		                        <argument><expr><name pos:line="1438" pos:column="41">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1439" pos:column="1">#<cpp:directive pos:line="1439" pos:column="2">else</cpp:directive></cpp:else>
		<decl_stmt><decl><type><name pos:line="1440" pos:column="17">SelectionText</name> <type:modifier pos:line="1440" pos:column="31">*</type:modifier></type><name pos:line="1440" pos:column="32">clipText</name> <init pos:line="1440" pos:column="41">= <expr><op:operator pos:line="1440" pos:column="43">new</op:operator> <call><name pos:line="1440" pos:column="47">SelectionText</name><argument_list pos:line="1440" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1441" pos:column="17">CopySelectionRange</name><argument_list pos:line="1441" pos:column="35">(<argument><expr><name pos:line="1441" pos:column="36">clipText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1442" pos:column="17">StoreOnClipboard</name><argument_list pos:line="1442" pos:column="33">(<argument><expr><name pos:line="1442" pos:column="34">clipText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1443" pos:column="1">#<cpp:directive pos:line="1443" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:if pos:line="1444" pos:column="1">#<cpp:directive pos:line="1444" pos:column="2">if</cpp:directive> <expr><name pos:line="1444" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
		<if pos:line="1445" pos:column="17">if <condition pos:line="1445" pos:column="20">(<expr><call><name><name pos:line="1445" pos:column="21">sel</name><op:operator pos:line="1445" pos:column="24">.</op:operator><name pos:line="1445" pos:column="25">IsRectangular</name></name><argument_list pos:line="1445" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="1445" pos:column="41"> <block pos:line="1445" pos:column="42">{
			<expr_stmt><expr><call><name><op:operator pos:line="1446" pos:column="25">::</op:operator><name pos:line="1446" pos:column="27">OpenClipboard</name></name><argument_list pos:line="1446" pos:column="40">(<argument><expr><name pos:line="1446" pos:column="41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1447" pos:column="25">::</op:operator><name pos:line="1447" pos:column="27">SetClipboardData</name></name><argument_list pos:line="1447" pos:column="43">(<argument><expr><name pos:line="1447" pos:column="44">cfColumnSelect</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1447" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1448" pos:column="25">::</op:operator><name pos:line="1448" pos:column="27">CloseClipboard</name></name><argument_list pos:line="1448" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
<cpp:endif pos:line="1450" pos:column="1">#<cpp:directive pos:line="1450" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1454" pos:column="1">void</name></type> <name><name pos:line="1454" pos:column="6">ScintillaGTK</name><op:operator pos:line="1454" pos:column="18">::</op:operator><name pos:line="1454" pos:column="20">Paste</name></name><parameter_list pos:line="1454" pos:column="25">()</parameter_list> <block pos:line="1454" pos:column="28">{
	<expr_stmt><expr><name pos:line="1455" pos:column="9">atomSought</name> <op:operator pos:line="1455" pos:column="20">=</op:operator> <name pos:line="1455" pos:column="22">atomUTF8</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1456" pos:column="9">gtk_selection_convert</name><argument_list pos:line="1456" pos:column="30">(<argument><expr><call><name pos:line="1456" pos:column="31">GTK_WIDGET</name><argument_list pos:line="1456" pos:column="41">(<argument><expr><call><name pos:line="1456" pos:column="42">PWidget</name><argument_list pos:line="1456" pos:column="49">(<argument><expr><name pos:line="1456" pos:column="50">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
	                      <argument><expr><name pos:line="1457" pos:column="31">atomClipboard</name></expr></argument>, <argument><expr><name pos:line="1457" pos:column="46">atomSought</name></expr></argument>, <argument><expr><name pos:line="1457" pos:column="58">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1460" pos:column="1">void</name></type> <name><name pos:line="1460" pos:column="6">ScintillaGTK</name><op:operator pos:line="1460" pos:column="18">::</op:operator><name pos:line="1460" pos:column="20">CreateCallTipWindow</name></name><parameter_list pos:line="1460" pos:column="39">(<param><decl><type><name pos:line="1460" pos:column="40">PRectangle</name></type> <name pos:line="1460" pos:column="51">rc</name></decl></param>)</parameter_list> <block pos:line="1460" pos:column="55">{
	<if pos:line="1461" pos:column="9">if <condition pos:line="1461" pos:column="12">(<expr><op:operator pos:line="1461" pos:column="13">!</op:operator><call><name><name pos:line="1461" pos:column="14">ct</name><op:operator pos:line="1461" pos:column="16">.</op:operator><name pos:line="1461" pos:column="17">wCallTip</name><op:operator pos:line="1461" pos:column="25">.</op:operator><name pos:line="1461" pos:column="26">Created</name></name><argument_list pos:line="1461" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="1461" pos:column="36"> <block pos:line="1461" pos:column="37">{
		<expr_stmt><expr><name><name pos:line="1462" pos:column="17">ct</name><op:operator pos:line="1462" pos:column="19">.</op:operator><name pos:line="1462" pos:column="20">wCallTip</name></name> <op:operator pos:line="1462" pos:column="29">=</op:operator> <call><name pos:line="1462" pos:column="31">gtk_window_new</name><argument_list pos:line="1462" pos:column="45">(<argument><expr><name pos:line="1462" pos:column="46">GTK_WINDOW_POPUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1463" pos:column="17">ct</name><op:operator pos:line="1463" pos:column="19">.</op:operator><name pos:line="1463" pos:column="20">wDraw</name></name> <op:operator pos:line="1463" pos:column="26">=</op:operator> <call><name pos:line="1463" pos:column="28">gtk_drawing_area_new</name><argument_list pos:line="1463" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1464" pos:column="17">GtkWidget</name> <type:modifier pos:line="1464" pos:column="27">*</type:modifier></type><name pos:line="1464" pos:column="28">widcdrw</name> <init pos:line="1464" pos:column="36">= <expr><call><name pos:line="1464" pos:column="38">PWidget</name><argument_list pos:line="1464" pos:column="45">(<argument><expr><name><name pos:line="1464" pos:column="46">ct</name><op:operator pos:line="1464" pos:column="48">.</op:operator><name pos:line="1464" pos:column="49">wDraw</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="1464" pos:column="57">//	// No code inside the G_OBJECT macro</comment>
		<expr_stmt><expr><call><name pos:line="1465" pos:column="17">gtk_container_add</name><argument_list pos:line="1465" pos:column="34">(<argument><expr><call><name pos:line="1465" pos:column="35">GTK_CONTAINER</name><argument_list pos:line="1465" pos:column="48">(<argument><expr><call><name pos:line="1465" pos:column="49">PWidget</name><argument_list pos:line="1465" pos:column="56">(<argument><expr><name><name pos:line="1465" pos:column="57">ct</name><op:operator pos:line="1465" pos:column="59">.</op:operator><name pos:line="1465" pos:column="60">wCallTip</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1465" pos:column="72">widcdrw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="1466" pos:column="1">#<cpp:directive pos:line="1466" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1466" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1466" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1466" pos:column="23">3</lit:literal><op:operator pos:line="1466" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1466" pos:column="25">0</lit:literal><op:operator pos:line="1466" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1466" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="1467" pos:column="17">g_signal_connect</name><argument_list pos:line="1467" pos:column="33">(<argument><expr><call><name pos:line="1467" pos:column="34">G_OBJECT</name><argument_list pos:line="1467" pos:column="42">(<argument><expr><name pos:line="1467" pos:column="43">widcdrw</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1467" pos:column="53">"draw"</lit:literal></expr></argument>,
				   <argument><expr><call><name pos:line="1468" pos:column="36">G_CALLBACK</name><argument_list pos:line="1468" pos:column="46">(<argument><expr><name><name pos:line="1468" pos:column="47">ScintillaGTK</name><op:operator pos:line="1468" pos:column="59">::</op:operator><name pos:line="1468" pos:column="61">DrawCT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1468" pos:column="70">&amp;</op:operator><name pos:line="1468" pos:column="71">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1469" pos:column="1">#<cpp:directive pos:line="1469" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="1470" pos:column="17">g_signal_connect</name><argument_list pos:line="1470" pos:column="33">(<argument><expr><call><name pos:line="1470" pos:column="34">G_OBJECT</name><argument_list pos:line="1470" pos:column="42">(<argument><expr><name pos:line="1470" pos:column="43">widcdrw</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1470" pos:column="53">"expose_event"</lit:literal></expr></argument>,
				   <argument><expr><call><name pos:line="1471" pos:column="36">G_CALLBACK</name><argument_list pos:line="1471" pos:column="46">(<argument><expr><name><name pos:line="1471" pos:column="47">ScintillaGTK</name><op:operator pos:line="1471" pos:column="59">::</op:operator><name pos:line="1471" pos:column="61">ExposeCT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1471" pos:column="72">&amp;</op:operator><name pos:line="1471" pos:column="73">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1472" pos:column="1">#<cpp:directive pos:line="1472" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="1473" pos:column="17">g_signal_connect</name><argument_list pos:line="1473" pos:column="33">(<argument><expr><call><name pos:line="1473" pos:column="34">G_OBJECT</name><argument_list pos:line="1473" pos:column="42">(<argument><expr><name pos:line="1473" pos:column="43">widcdrw</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1473" pos:column="53">"button_press_event"</lit:literal></expr></argument>,
				   <argument><expr><call><name pos:line="1474" pos:column="36">G_CALLBACK</name><argument_list pos:line="1474" pos:column="46">(<argument><expr><name><name pos:line="1474" pos:column="47">ScintillaGTK</name><op:operator pos:line="1474" pos:column="59">::</op:operator><name pos:line="1474" pos:column="61">PressCT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1474" pos:column="71">static_cast</name><argument_list pos:line="1474" pos:column="82">&lt;<argument><expr><name pos:line="1474" pos:column="83">void</name> <op:operator pos:line="1474" pos:column="88">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1474" pos:column="90">(<argument><expr><name pos:line="1474" pos:column="91">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1475" pos:column="17">gtk_widget_set_events</name><argument_list pos:line="1475" pos:column="38">(<argument><expr><name pos:line="1475" pos:column="39">widcdrw</name></expr></argument>,
			<argument><expr><name pos:line="1476" pos:column="25">GDK_EXPOSURE_MASK</name> <op:operator pos:line="1476" pos:column="43">|</op:operator> <name pos:line="1476" pos:column="45">GDK_BUTTON_PRESS_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="1478" pos:column="9">gtk_widget_set_size_request</name><argument_list pos:line="1478" pos:column="36">(<argument><expr><call><name pos:line="1478" pos:column="37">PWidget</name><argument_list pos:line="1478" pos:column="44">(<argument><expr><name><name pos:line="1478" pos:column="45">ct</name><op:operator pos:line="1478" pos:column="47">.</op:operator><name pos:line="1478" pos:column="48">wDraw</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1478" pos:column="56">rc</name><op:operator pos:line="1478" pos:column="58">.</op:operator><name pos:line="1478" pos:column="59">Width</name></name><argument_list pos:line="1478" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1478" pos:column="68">rc</name><op:operator pos:line="1478" pos:column="70">.</op:operator><name pos:line="1478" pos:column="71">Height</name></name><argument_list pos:line="1478" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1479" pos:column="9">ct</name><op:operator pos:line="1479" pos:column="11">.</op:operator><name pos:line="1479" pos:column="12">wDraw</name><op:operator pos:line="1479" pos:column="17">.</op:operator><name pos:line="1479" pos:column="18">Show</name></name><argument_list pos:line="1479" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1480" pos:column="9">if <condition pos:line="1480" pos:column="12">(<expr><call><name pos:line="1480" pos:column="13">PWindow</name><argument_list pos:line="1480" pos:column="20">(<argument><expr><name><name pos:line="1480" pos:column="21">ct</name><op:operator pos:line="1480" pos:column="23">.</op:operator><name pos:line="1480" pos:column="24">wCallTip</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1480" pos:column="34"> <block pos:line="1480" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="1481" pos:column="17">gdk_window_resize</name><argument_list pos:line="1481" pos:column="34">(<argument><expr><call><name pos:line="1481" pos:column="35">PWindow</name><argument_list pos:line="1481" pos:column="42">(<argument><expr><name><name pos:line="1481" pos:column="43">ct</name><op:operator pos:line="1481" pos:column="45">.</op:operator><name pos:line="1481" pos:column="46">wCallTip</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1481" pos:column="57">rc</name><op:operator pos:line="1481" pos:column="59">.</op:operator><name pos:line="1481" pos:column="60">Width</name></name><argument_list pos:line="1481" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1481" pos:column="69">rc</name><op:operator pos:line="1481" pos:column="71">.</op:operator><name pos:line="1481" pos:column="72">Height</name></name><argument_list pos:line="1481" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1485" pos:column="1">void</name></type> <name><name pos:line="1485" pos:column="6">ScintillaGTK</name><op:operator pos:line="1485" pos:column="18">::</op:operator><name pos:line="1485" pos:column="20">AddToPopUp</name></name><parameter_list pos:line="1485" pos:column="30">(<param><decl><type><specifier pos:line="1485" pos:column="31">const</specifier> <name pos:line="1485" pos:column="37">char</name> <type:modifier pos:line="1485" pos:column="42">*</type:modifier></type><name pos:line="1485" pos:column="43">label</name></decl></param>, <param><decl><type><name pos:line="1485" pos:column="50">int</name></type> <name pos:line="1485" pos:column="54">cmd</name></decl></param>, <param><decl><type><name pos:line="1485" pos:column="59">bool</name></type> <name pos:line="1485" pos:column="64">enabled</name></decl></param>)</parameter_list> <block pos:line="1485" pos:column="73">{
	<decl_stmt><decl><type><name pos:line="1486" pos:column="9">GtkWidget</name> <type:modifier pos:line="1486" pos:column="19">*</type:modifier></type><name pos:line="1486" pos:column="20">menuItem</name></decl>;</decl_stmt>
	<if pos:line="1487" pos:column="9">if <condition pos:line="1487" pos:column="12">(<expr><name><name pos:line="1487" pos:column="13">label</name><index pos:line="1487" pos:column="18">[<expr><lit:literal type="number" pos:line="1487" pos:column="19">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1487" pos:column="22">
		<expr_stmt><expr><name pos:line="1488" pos:column="17">menuItem</name> <op:operator pos:line="1488" pos:column="26">=</op:operator> <call><name pos:line="1488" pos:column="28">gtk_menu_item_new_with_label</name><argument_list pos:line="1488" pos:column="56">(<argument><expr><name pos:line="1488" pos:column="57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1489" pos:column="9">else
		<expr_stmt><expr><name pos:line="1490" pos:column="17">menuItem</name> <op:operator pos:line="1490" pos:column="26">=</op:operator> <call><name pos:line="1490" pos:column="28">gtk_separator_menu_item_new</name><argument_list pos:line="1490" pos:column="55">()</argument_list></call></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><call><name pos:line="1491" pos:column="9">gtk_menu_shell_append</name><argument_list pos:line="1491" pos:column="30">(<argument><expr><call><name pos:line="1491" pos:column="31">GTK_MENU_SHELL</name><argument_list pos:line="1491" pos:column="45">(<argument><expr><call><name><name pos:line="1491" pos:column="46">popup</name><op:operator pos:line="1491" pos:column="51">.</op:operator><name pos:line="1491" pos:column="52">GetID</name></name><argument_list pos:line="1491" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1491" pos:column="62">menuItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1492" pos:column="9">g_object_set_data</name><argument_list pos:line="1492" pos:column="26">(<argument><expr><call><name pos:line="1492" pos:column="27">G_OBJECT</name><argument_list pos:line="1492" pos:column="35">(<argument><expr><name pos:line="1492" pos:column="36">menuItem</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1492" pos:column="47">"CmdNum"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1492" pos:column="57">reinterpret_cast</name><argument_list pos:line="1492" pos:column="73">&lt;<argument><expr><name pos:line="1492" pos:column="74">void</name> <op:operator pos:line="1492" pos:column="79">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1492" pos:column="81">(<argument><expr><name pos:line="1492" pos:column="82">cmd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1493" pos:column="9">g_signal_connect</name><argument_list pos:line="1493" pos:column="25">(<argument><expr><call><name pos:line="1493" pos:column="26">G_OBJECT</name><argument_list pos:line="1493" pos:column="34">(<argument><expr><name pos:line="1493" pos:column="35">menuItem</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><lit:literal type="string" pos:line="1493" pos:column="45">"activate"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="1493" pos:column="57">G_CALLBACK</name><argument_list pos:line="1493" pos:column="67">(<argument><expr><name pos:line="1493" pos:column="68">PopUpCB</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1493" pos:column="78">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1495" pos:column="9">if <condition pos:line="1495" pos:column="12">(<expr><name pos:line="1495" pos:column="13">cmd</name></expr>)</condition><then pos:line="1495" pos:column="17"> <block pos:line="1495" pos:column="18">{
		<if pos:line="1496" pos:column="17">if <condition pos:line="1496" pos:column="20">(<expr><name pos:line="1496" pos:column="21">menuItem</name></expr>)</condition><then pos:line="1496" pos:column="30">
			<expr_stmt><expr><call><name pos:line="1497" pos:column="25">gtk_widget_set_sensitive</name><argument_list pos:line="1497" pos:column="49">(<argument><expr><name pos:line="1497" pos:column="50">menuItem</name></expr></argument>, <argument><expr><name pos:line="1497" pos:column="60">enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1501" pos:column="1">bool</name></type> <name><name pos:line="1501" pos:column="6">ScintillaGTK</name><op:operator pos:line="1501" pos:column="18">::</op:operator><name pos:line="1501" pos:column="20">OwnPrimarySelection</name></name><parameter_list pos:line="1501" pos:column="39">()</parameter_list> <block pos:line="1501" pos:column="42">{
	<return pos:line="1502" pos:column="9">return <expr><op:operator pos:line="1502" pos:column="16">(</op:operator><op:operator pos:line="1502" pos:column="17">(</op:operator><call><name pos:line="1502" pos:column="18">gdk_selection_owner_get</name><argument_list pos:line="1502" pos:column="41">(<argument><expr><name pos:line="1502" pos:column="42">GDK_SELECTION_PRIMARY</name></expr></argument>)</argument_list></call>
		<op:operator pos:line="1503" pos:column="17">==</op:operator> <call><name pos:line="1503" pos:column="20">PWindow</name><argument_list pos:line="1503" pos:column="27">(<argument><expr><name pos:line="1503" pos:column="28">wMain</name></expr></argument>)</argument_list></call><op:operator pos:line="1503" pos:column="34">)</op:operator> <op:operator pos:line="1503" pos:column="36">&amp;&amp;</op:operator>
			<op:operator pos:line="1504" pos:column="25">(</op:operator><call><name pos:line="1504" pos:column="26">PWindow</name><argument_list pos:line="1504" pos:column="33">(<argument><expr><name pos:line="1504" pos:column="34">wMain</name></expr></argument>)</argument_list></call> <op:operator pos:line="1504" pos:column="41">!=</op:operator> <name pos:line="1504" pos:column="44">NULL</name><op:operator pos:line="1504" pos:column="48">)</op:operator><op:operator pos:line="1504" pos:column="49">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="1507" pos:column="1">void</name></type> <name><name pos:line="1507" pos:column="6">ScintillaGTK</name><op:operator pos:line="1507" pos:column="18">::</op:operator><name pos:line="1507" pos:column="20">ClaimSelection</name></name><parameter_list pos:line="1507" pos:column="34">()</parameter_list> <block pos:line="1507" pos:column="37">{
	<comment type="line" pos:line="1508" pos:column="9">// X Windows has a 'primary selection' as well as the clipboard.</comment>
	<comment type="line" pos:line="1509" pos:column="9">// Whenever the user selects some text, we become the primary selection</comment>
	<if pos:line="1510" pos:column="9">if <condition pos:line="1510" pos:column="12">(<expr><op:operator pos:line="1510" pos:column="13">!</op:operator><call><name><name pos:line="1510" pos:column="14">sel</name><op:operator pos:line="1510" pos:column="17">.</op:operator><name pos:line="1510" pos:column="18">Empty</name></name><argument_list pos:line="1510" pos:column="23">()</argument_list></call> <op:operator pos:line="1510" pos:column="26">&amp;&amp;</op:operator> <call><name pos:line="1510" pos:column="29">IS_WIDGET_REALIZED</name><argument_list pos:line="1510" pos:column="47">(<argument><expr><call><name pos:line="1510" pos:column="48">GTK_WIDGET</name><argument_list pos:line="1510" pos:column="58">(<argument><expr><call><name pos:line="1510" pos:column="59">PWidget</name><argument_list pos:line="1510" pos:column="66">(<argument><expr><name pos:line="1510" pos:column="67">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1510" pos:column="76"> <block pos:line="1510" pos:column="77">{
		<expr_stmt><expr><name pos:line="1511" pos:column="17">primarySelection</name> <op:operator pos:line="1511" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="1511" pos:column="36">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1512" pos:column="17">gtk_selection_owner_set</name><argument_list pos:line="1512" pos:column="40">(<argument><expr><call><name pos:line="1512" pos:column="41">GTK_WIDGET</name><argument_list pos:line="1512" pos:column="51">(<argument><expr><call><name pos:line="1512" pos:column="52">PWidget</name><argument_list pos:line="1512" pos:column="59">(<argument><expr><name pos:line="1512" pos:column="60">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
		                        <argument><expr><name pos:line="1513" pos:column="41">GDK_SELECTION_PRIMARY</name></expr></argument>, <argument><expr><name pos:line="1513" pos:column="64">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1514" pos:column="17">primary</name><op:operator pos:line="1514" pos:column="24">.</op:operator><name pos:line="1514" pos:column="25">Free</name></name><argument_list pos:line="1514" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1515" pos:column="11">else <if pos:line="1515" pos:column="16">if <condition pos:line="1515" pos:column="19">(<expr><call><name pos:line="1515" pos:column="20">OwnPrimarySelection</name><argument_list pos:line="1515" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="1515" pos:column="42"> <block pos:line="1515" pos:column="43">{
		<expr_stmt><expr><name pos:line="1516" pos:column="17">primarySelection</name> <op:operator pos:line="1516" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="1516" pos:column="36">true</lit:literal></expr>;</expr_stmt>
		<if pos:line="1517" pos:column="17">if <condition pos:line="1517" pos:column="20">(<expr><name><name pos:line="1517" pos:column="21">primary</name><op:operator pos:line="1517" pos:column="28">.</op:operator><name pos:line="1517" pos:column="29">s</name></name> <op:operator pos:line="1517" pos:column="31">==</op:operator> <name pos:line="1517" pos:column="34">NULL</name></expr>)</condition><then pos:line="1517" pos:column="39">
			<expr_stmt><expr><call><name pos:line="1518" pos:column="25">gtk_selection_owner_set</name><argument_list pos:line="1518" pos:column="48">(<argument><expr><name pos:line="1518" pos:column="49">NULL</name></expr></argument>, <argument><expr><name pos:line="1518" pos:column="55">GDK_SELECTION_PRIMARY</name></expr></argument>, <argument><expr><name pos:line="1518" pos:column="78">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then> <else pos:line="1519" pos:column="11">else <block pos:line="1519" pos:column="16">{
		<expr_stmt><expr><name pos:line="1520" pos:column="17">primarySelection</name> <op:operator pos:line="1520" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="1520" pos:column="36">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1521" pos:column="17">primary</name><op:operator pos:line="1521" pos:column="24">.</op:operator><name pos:line="1521" pos:column="25">Free</name></name><argument_list pos:line="1521" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if></else></if>
}</block></function>

<cpp:if pos:line="1525" pos:column="1">#<cpp:directive pos:line="1525" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1525" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1525" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1525" pos:column="23">3</lit:literal><op:operator pos:line="1525" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1525" pos:column="25">0</lit:literal><op:operator pos:line="1525" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1525" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier pos:line="1526" pos:column="1">static</specifier> <specifier pos:line="1526" pos:column="8">const</specifier> <name pos:line="1526" pos:column="14">guchar</name> <type:modifier pos:line="1526" pos:column="21">*</type:modifier></type><name pos:line="1526" pos:column="22">DataOfGSD</name><parameter_list pos:line="1526" pos:column="31">(<param><decl><type><name pos:line="1526" pos:column="32">GtkSelectionData</name> <type:modifier pos:line="1526" pos:column="49">*</type:modifier></type><name pos:line="1526" pos:column="50">sd</name></decl></param>)</parameter_list> <block pos:line="1526" pos:column="54">{ <return pos:line="1526" pos:column="56">return <expr><call><name pos:line="1526" pos:column="63">gtk_selection_data_get_data</name><argument_list pos:line="1526" pos:column="90">(<argument><expr><name pos:line="1526" pos:column="91">sd</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
<function><type><specifier pos:line="1527" pos:column="1">static</specifier> <name pos:line="1527" pos:column="8">gint</name></type> <name pos:line="1527" pos:column="13">LengthOfGSD</name><parameter_list pos:line="1527" pos:column="24">(<param><decl><type><name pos:line="1527" pos:column="25">GtkSelectionData</name> <type:modifier pos:line="1527" pos:column="42">*</type:modifier></type><name pos:line="1527" pos:column="43">sd</name></decl></param>)</parameter_list> <block pos:line="1527" pos:column="47">{ <return pos:line="1527" pos:column="49">return <expr><call><name pos:line="1527" pos:column="56">gtk_selection_data_get_length</name><argument_list pos:line="1527" pos:column="85">(<argument><expr><name pos:line="1527" pos:column="86">sd</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
<function><type><specifier pos:line="1528" pos:column="1">static</specifier> <name pos:line="1528" pos:column="8">GdkAtom</name></type> <name pos:line="1528" pos:column="16">TypeOfGSD</name><parameter_list pos:line="1528" pos:column="25">(<param><decl><type><name pos:line="1528" pos:column="26">GtkSelectionData</name> <type:modifier pos:line="1528" pos:column="43">*</type:modifier></type><name pos:line="1528" pos:column="44">sd</name></decl></param>)</parameter_list> <block pos:line="1528" pos:column="48">{ <return pos:line="1528" pos:column="50">return <expr><call><name pos:line="1528" pos:column="57">gtk_selection_data_get_data_type</name><argument_list pos:line="1528" pos:column="89">(<argument><expr><name pos:line="1528" pos:column="90">sd</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
<function><type><specifier pos:line="1529" pos:column="1">static</specifier> <name pos:line="1529" pos:column="8">GdkAtom</name></type> <name pos:line="1529" pos:column="16">SelectionOfGSD</name><parameter_list pos:line="1529" pos:column="30">(<param><decl><type><name pos:line="1529" pos:column="31">GtkSelectionData</name> <type:modifier pos:line="1529" pos:column="48">*</type:modifier></type><name pos:line="1529" pos:column="49">sd</name></decl></param>)</parameter_list> <block pos:line="1529" pos:column="53">{ <return pos:line="1529" pos:column="55">return <expr><call><name pos:line="1529" pos:column="62">gtk_selection_data_get_selection</name><argument_list pos:line="1529" pos:column="94">(<argument><expr><name pos:line="1529" pos:column="95">sd</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
<cpp:else pos:line="1530" pos:column="1">#<cpp:directive pos:line="1530" pos:column="2">else</cpp:directive></cpp:else>
<function><type><specifier pos:line="1531" pos:column="1">static</specifier> <specifier pos:line="1531" pos:column="8">const</specifier> <name pos:line="1531" pos:column="14">guchar</name> <type:modifier pos:line="1531" pos:column="21">*</type:modifier></type><name pos:line="1531" pos:column="22">DataOfGSD</name><parameter_list pos:line="1531" pos:column="31">(<param><decl><type><name pos:line="1531" pos:column="32">GtkSelectionData</name> <type:modifier pos:line="1531" pos:column="49">*</type:modifier></type><name pos:line="1531" pos:column="50">sd</name></decl></param>)</parameter_list> <block pos:line="1531" pos:column="54">{ <return pos:line="1531" pos:column="56">return <expr><name><name pos:line="1531" pos:column="63">sd</name><op:operator pos:line="1531" pos:column="65">-&gt;</op:operator><name pos:line="1531" pos:column="67">data</name></name></expr>;</return> }</block></function>
<function><type><specifier pos:line="1532" pos:column="1">static</specifier> <name pos:line="1532" pos:column="8">gint</name></type> <name pos:line="1532" pos:column="13">LengthOfGSD</name><parameter_list pos:line="1532" pos:column="24">(<param><decl><type><name pos:line="1532" pos:column="25">GtkSelectionData</name> <type:modifier pos:line="1532" pos:column="42">*</type:modifier></type><name pos:line="1532" pos:column="43">sd</name></decl></param>)</parameter_list> <block pos:line="1532" pos:column="47">{ <return pos:line="1532" pos:column="49">return <expr><name><name pos:line="1532" pos:column="56">sd</name><op:operator pos:line="1532" pos:column="58">-&gt;</op:operator><name pos:line="1532" pos:column="60">length</name></name></expr>;</return> }</block></function>
<function><type><specifier pos:line="1533" pos:column="1">static</specifier> <name pos:line="1533" pos:column="8">GdkAtom</name></type> <name pos:line="1533" pos:column="16">TypeOfGSD</name><parameter_list pos:line="1533" pos:column="25">(<param><decl><type><name pos:line="1533" pos:column="26">GtkSelectionData</name> <type:modifier pos:line="1533" pos:column="43">*</type:modifier></type><name pos:line="1533" pos:column="44">sd</name></decl></param>)</parameter_list> <block pos:line="1533" pos:column="48">{ <return pos:line="1533" pos:column="50">return <expr><name><name pos:line="1533" pos:column="57">sd</name><op:operator pos:line="1533" pos:column="59">-&gt;</op:operator><name pos:line="1533" pos:column="61">type</name></name></expr>;</return> }</block></function>
<function><type><specifier pos:line="1534" pos:column="1">static</specifier> <name pos:line="1534" pos:column="8">GdkAtom</name></type> <name pos:line="1534" pos:column="16">SelectionOfGSD</name><parameter_list pos:line="1534" pos:column="30">(<param><decl><type><name pos:line="1534" pos:column="31">GtkSelectionData</name> <type:modifier pos:line="1534" pos:column="48">*</type:modifier></type><name pos:line="1534" pos:column="49">sd</name></decl></param>)</parameter_list> <block pos:line="1534" pos:column="53">{ <return pos:line="1534" pos:column="55">return <expr><name><name pos:line="1534" pos:column="62">sd</name><op:operator pos:line="1534" pos:column="64">-&gt;</op:operator><name pos:line="1534" pos:column="66">selection</name></name></expr>;</return> }</block></function>
<cpp:endif pos:line="1535" pos:column="1">#<cpp:directive pos:line="1535" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="line" pos:line="1537" pos:column="1">// Detect rectangular text, convert line ends to current mode, convert from or to UTF-8</comment>
<function><type><name pos:line="1538" pos:column="1">void</name></type> <name><name pos:line="1538" pos:column="6">ScintillaGTK</name><op:operator pos:line="1538" pos:column="18">::</op:operator><name pos:line="1538" pos:column="20">GetGtkSelectionText</name></name><parameter_list pos:line="1538" pos:column="39">(<param><decl><type><name pos:line="1538" pos:column="40">GtkSelectionData</name> <type:modifier pos:line="1538" pos:column="57">*</type:modifier></type><name pos:line="1538" pos:column="58">selectionData</name></decl></param>, <param><decl><type><name pos:line="1538" pos:column="73">SelectionText</name> <type:modifier pos:line="1538" pos:column="87">&amp;</type:modifier></type><name pos:line="1538" pos:column="88">selText</name></decl></param>)</parameter_list> <block pos:line="1538" pos:column="97">{
	<decl_stmt><decl><type><specifier pos:line="1539" pos:column="9">const</specifier> <name pos:line="1539" pos:column="15">char</name> <type:modifier pos:line="1539" pos:column="20">*</type:modifier></type><name pos:line="1539" pos:column="21">data</name> <init pos:line="1539" pos:column="26">= <expr><call><name><name pos:line="1539" pos:column="28">reinterpret_cast</name><argument_list pos:line="1539" pos:column="44">&lt;<argument><expr><specifier pos:line="1539" pos:column="45">const</specifier> <name pos:line="1539" pos:column="51">char</name> <op:operator pos:line="1539" pos:column="56">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1539" pos:column="58">(<argument><expr><call><name pos:line="1539" pos:column="59">DataOfGSD</name><argument_list pos:line="1539" pos:column="68">(<argument><expr><name pos:line="1539" pos:column="69">selectionData</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1540" pos:column="9">int</name></type> <name pos:line="1540" pos:column="13">len</name> <init pos:line="1540" pos:column="17">= <expr><call><name pos:line="1540" pos:column="19">LengthOfGSD</name><argument_list pos:line="1540" pos:column="30">(<argument><expr><name pos:line="1540" pos:column="31">selectionData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1541" pos:column="9">GdkAtom</name></type> <name pos:line="1541" pos:column="17">selectionTypeData</name> <init pos:line="1541" pos:column="35">= <expr><call><name pos:line="1541" pos:column="37">TypeOfGSD</name><argument_list pos:line="1541" pos:column="46">(<argument><expr><name pos:line="1541" pos:column="47">selectionData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1543" pos:column="9">// Return empty string if selection is not a string</comment>
	<if pos:line="1544" pos:column="9">if <condition pos:line="1544" pos:column="12">(<expr><op:operator pos:line="1544" pos:column="13">(</op:operator><name pos:line="1544" pos:column="14">selectionTypeData</name> <op:operator pos:line="1544" pos:column="32">!=</op:operator> <name pos:line="1544" pos:column="35">GDK_TARGET_STRING</name><op:operator pos:line="1544" pos:column="52">)</op:operator> <op:operator pos:line="1544" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="1544" pos:column="57">(</op:operator><name pos:line="1544" pos:column="58">selectionTypeData</name> <op:operator pos:line="1544" pos:column="76">!=</op:operator> <name pos:line="1544" pos:column="79">atomUTF8</name><op:operator pos:line="1544" pos:column="87">)</op:operator></expr>)</condition><then pos:line="1544" pos:column="89"> <block pos:line="1544" pos:column="90">{
		<decl_stmt><decl><type><name pos:line="1545" pos:column="17">char</name> <type:modifier pos:line="1545" pos:column="22">*</type:modifier></type><name pos:line="1545" pos:column="23">empty</name> <init pos:line="1545" pos:column="29">= <expr><op:operator pos:line="1545" pos:column="31">new</op:operator> <name><name pos:line="1545" pos:column="35">char</name><index pos:line="1545" pos:column="39">[<expr><lit:literal type="number" pos:line="1545" pos:column="40">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="1546" pos:column="17">empty</name><index pos:line="1546" pos:column="22">[<expr><lit:literal type="number" pos:line="1546" pos:column="23">0</lit:literal></expr>]</index></name> <op:operator pos:line="1546" pos:column="26">=</op:operator> <lit:literal type="char" pos:line="1546" pos:column="28">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1547" pos:column="17">selText</name><op:operator pos:line="1547" pos:column="24">.</op:operator><name pos:line="1547" pos:column="25">Set</name></name><argument_list pos:line="1547" pos:column="28">(<argument><expr><name pos:line="1547" pos:column="29">empty</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1547" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1547" pos:column="39">SC_CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1547" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1547" pos:column="54">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1547" pos:column="61">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1548" pos:column="17">return;</return>
	}</block></then></if>

	<comment type="line" pos:line="1551" pos:column="9">// Check for "\n\0" ending to string indicating that selection is rectangular</comment>
	<decl_stmt><decl><type><name pos:line="1552" pos:column="9">bool</name></type> <name pos:line="1552" pos:column="14">isRectangular</name></decl>;</decl_stmt>
<cpp:if pos:line="1553" pos:column="1">#<cpp:directive pos:line="1553" pos:column="2">if</cpp:directive> <expr><name pos:line="1553" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="1554" pos:column="9">isRectangular</name> <op:operator pos:line="1554" pos:column="23">=</op:operator> <call><name><op:operator pos:line="1554" pos:column="25">::</op:operator><name pos:line="1554" pos:column="27">IsClipboardFormatAvailable</name></name><argument_list pos:line="1554" pos:column="53">(<argument><expr><name pos:line="1554" pos:column="54">cfColumnSelect</name></expr></argument>)</argument_list></call> <op:operator pos:line="1554" pos:column="70">!=</op:operator> <lit:literal type="number" pos:line="1554" pos:column="73">0</lit:literal></expr>;</expr_stmt>
<cpp:else pos:line="1555" pos:column="1">#<cpp:directive pos:line="1555" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="1556" pos:column="9">isRectangular</name> <op:operator pos:line="1556" pos:column="23">=</op:operator> <op:operator pos:line="1556" pos:column="25">(</op:operator><op:operator pos:line="1556" pos:column="26">(</op:operator><name pos:line="1556" pos:column="27">len</name> <op:operator pos:line="1556" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="1556" pos:column="33">2</lit:literal><op:operator pos:line="1556" pos:column="34">)</op:operator> <op:operator pos:line="1556" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="1556" pos:column="39">(</op:operator><name><name pos:line="1556" pos:column="40">data</name><index pos:line="1556" pos:column="44">[<expr><name pos:line="1556" pos:column="45">len</name> <op:operator pos:line="1556" pos:column="49">-</op:operator> <lit:literal type="number" pos:line="1556" pos:column="51">1</lit:literal></expr>]</index></name> <op:operator pos:line="1556" pos:column="54">==</op:operator> <lit:literal type="number" pos:line="1556" pos:column="57">0</lit:literal> <op:operator pos:line="1556" pos:column="59">&amp;&amp;</op:operator> <name><name pos:line="1556" pos:column="62">data</name><index pos:line="1556" pos:column="66">[<expr><name pos:line="1556" pos:column="67">len</name> <op:operator pos:line="1556" pos:column="71">-</op:operator> <lit:literal type="number" pos:line="1556" pos:column="73">2</lit:literal></expr>]</index></name> <op:operator pos:line="1556" pos:column="76">==</op:operator> <lit:literal type="char" pos:line="1556" pos:column="79">'\n'</lit:literal><op:operator pos:line="1556" pos:column="83">)</op:operator><op:operator pos:line="1556" pos:column="84">)</op:operator></expr>;</expr_stmt>
	<if pos:line="1557" pos:column="9">if <condition pos:line="1557" pos:column="12">(<expr><name pos:line="1557" pos:column="13">isRectangular</name></expr>)</condition><then pos:line="1557" pos:column="27">
		<expr_stmt><expr><name pos:line="1558" pos:column="17">len</name><op:operator pos:line="1558" pos:column="20">--</op:operator></expr>;</expr_stmt></then></if>	<comment type="line" pos:line="1558" pos:column="25">// Forget the extra '\0'</comment>
<cpp:endif pos:line="1559" pos:column="1">#<cpp:directive pos:line="1559" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="1561" pos:column="9">char</name> <type:modifier pos:line="1561" pos:column="14">*</type:modifier></type><name pos:line="1561" pos:column="15">dest</name></decl>;</decl_stmt>
	<if pos:line="1562" pos:column="9">if <condition pos:line="1562" pos:column="12">(<expr><name pos:line="1562" pos:column="13">selectionTypeData</name> <op:operator pos:line="1562" pos:column="31">==</op:operator> <name pos:line="1562" pos:column="34">GDK_TARGET_STRING</name></expr>)</condition><then pos:line="1562" pos:column="52"> <block pos:line="1562" pos:column="53">{
		<expr_stmt><expr><name pos:line="1563" pos:column="17">dest</name> <op:operator pos:line="1563" pos:column="22">=</op:operator> <call><name><name pos:line="1563" pos:column="24">Document</name><op:operator pos:line="1563" pos:column="32">::</op:operator><name pos:line="1563" pos:column="34">TransformLineEnds</name></name><argument_list pos:line="1563" pos:column="51">(<argument><expr><op:operator pos:line="1563" pos:column="52">&amp;</op:operator><name pos:line="1563" pos:column="53">len</name></expr></argument>, <argument><expr><name pos:line="1563" pos:column="58">data</name></expr></argument>, <argument><expr><name pos:line="1563" pos:column="64">len</name></expr></argument>, <argument><expr><name><name pos:line="1563" pos:column="69">pdoc</name><op:operator pos:line="1563" pos:column="73">-&gt;</op:operator><name pos:line="1563" pos:column="75">eolMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1564" pos:column="17">if <condition pos:line="1564" pos:column="20">(<expr><call><name pos:line="1564" pos:column="21">IsUnicodeMode</name><argument_list pos:line="1564" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="1564" pos:column="37"> <block pos:line="1564" pos:column="38">{
			<comment type="line" pos:line="1565" pos:column="25">// Unknown encoding so assume in Latin1</comment>
			<decl_stmt><decl><type><name pos:line="1566" pos:column="25">char</name> <type:modifier pos:line="1566" pos:column="30">*</type:modifier></type><name pos:line="1566" pos:column="31">destPrevious</name> <init pos:line="1566" pos:column="44">= <expr><name pos:line="1566" pos:column="46">dest</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1567" pos:column="25">dest</name> <op:operator pos:line="1567" pos:column="30">=</op:operator> <call><name pos:line="1567" pos:column="32">UTF8FromLatin1</name><argument_list pos:line="1567" pos:column="46">(<argument><expr><name pos:line="1567" pos:column="47">dest</name></expr></argument>, <argument><expr><name pos:line="1567" pos:column="53">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1568" pos:column="25">selText</name><op:operator pos:line="1568" pos:column="32">.</op:operator><name pos:line="1568" pos:column="33">Set</name></name><argument_list pos:line="1568" pos:column="36">(<argument><expr><name pos:line="1568" pos:column="37">dest</name></expr></argument>, <argument><expr><name pos:line="1568" pos:column="43">len</name></expr></argument>, <argument><expr><name pos:line="1568" pos:column="48">SC_CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1568" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1568" pos:column="63">selText</name><op:operator pos:line="1568" pos:column="70">.</op:operator><name pos:line="1568" pos:column="71">rectangular</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1568" pos:column="84">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="1569" pos:column="25">delete</op:operator> <index pos:line="1569" pos:column="32">[]</index><name pos:line="1569" pos:column="34">destPrevious</name></expr>;</expr_stmt>
		}</block></then> <else pos:line="1570" pos:column="19">else <block pos:line="1570" pos:column="24">{
			<comment type="line" pos:line="1571" pos:column="25">// Assume buffer is in same encoding as selection</comment>
			<expr_stmt><expr><call><name><name pos:line="1572" pos:column="25">selText</name><op:operator pos:line="1572" pos:column="32">.</op:operator><name pos:line="1572" pos:column="33">Set</name></name><argument_list pos:line="1572" pos:column="36">(<argument><expr><name pos:line="1572" pos:column="37">dest</name></expr></argument>, <argument><expr><name pos:line="1572" pos:column="43">len</name></expr></argument>, <argument><expr><name><name pos:line="1572" pos:column="48">pdoc</name><op:operator pos:line="1572" pos:column="52">-&gt;</op:operator><name pos:line="1572" pos:column="54">dbcsCodePage</name></name></expr></argument>,
				<argument><expr><name><name pos:line="1573" pos:column="33">vs</name><op:operator pos:line="1573" pos:column="35">.</op:operator><name pos:line="1573" pos:column="36">styles</name><index pos:line="1573" pos:column="42">[<expr><name pos:line="1573" pos:column="43">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1573" pos:column="57">.</op:operator><name pos:line="1573" pos:column="58">characterSet</name></expr></argument>, <argument><expr><name pos:line="1573" pos:column="72">isRectangular</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1573" pos:column="87">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then> <else pos:line="1575" pos:column="11">else <block pos:line="1575" pos:column="16">{	<comment type="line" pos:line="1575" pos:column="25">// UTF-8</comment>
		<expr_stmt><expr><name pos:line="1576" pos:column="17">dest</name> <op:operator pos:line="1576" pos:column="22">=</op:operator> <call><name><name pos:line="1576" pos:column="24">Document</name><op:operator pos:line="1576" pos:column="32">::</op:operator><name pos:line="1576" pos:column="34">TransformLineEnds</name></name><argument_list pos:line="1576" pos:column="51">(<argument><expr><op:operator pos:line="1576" pos:column="52">&amp;</op:operator><name pos:line="1576" pos:column="53">len</name></expr></argument>, <argument><expr><name pos:line="1576" pos:column="58">data</name></expr></argument>, <argument><expr><name pos:line="1576" pos:column="64">len</name></expr></argument>, <argument><expr><name><name pos:line="1576" pos:column="69">pdoc</name><op:operator pos:line="1576" pos:column="73">-&gt;</op:operator><name pos:line="1576" pos:column="75">eolMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1577" pos:column="17">selText</name><op:operator pos:line="1577" pos:column="24">.</op:operator><name pos:line="1577" pos:column="25">Set</name></name><argument_list pos:line="1577" pos:column="28">(<argument><expr><name pos:line="1577" pos:column="29">dest</name></expr></argument>, <argument><expr><name pos:line="1577" pos:column="35">len</name></expr></argument>, <argument><expr><name pos:line="1577" pos:column="40">SC_CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1577" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1577" pos:column="55">isRectangular</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1577" pos:column="70">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier pos:line="1578" pos:column="17">const</specifier> <name pos:line="1578" pos:column="23">char</name> <type:modifier pos:line="1578" pos:column="28">*</type:modifier></type><name pos:line="1578" pos:column="29">charSetBuffer</name> <init pos:line="1578" pos:column="43">= <expr><call><name pos:line="1578" pos:column="45">CharacterSetID</name><argument_list pos:line="1578" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1579" pos:column="17">if <condition pos:line="1579" pos:column="20">(<expr><op:operator pos:line="1579" pos:column="21">!</op:operator><call><name pos:line="1579" pos:column="22">IsUnicodeMode</name><argument_list pos:line="1579" pos:column="35">()</argument_list></call> <op:operator pos:line="1579" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="1579" pos:column="41">*</op:operator><name pos:line="1579" pos:column="42">charSetBuffer</name></expr>)</condition><then pos:line="1579" pos:column="56"> <block pos:line="1579" pos:column="57">{
			<comment type="line" pos:line="1580" pos:column="25">// Convert to locale</comment>
			<expr_stmt><expr><name pos:line="1581" pos:column="25">dest</name> <op:operator pos:line="1581" pos:column="30">=</op:operator> <call><name pos:line="1581" pos:column="32">ConvertText</name><argument_list pos:line="1581" pos:column="43">(<argument><expr><op:operator pos:line="1581" pos:column="44">&amp;</op:operator><name pos:line="1581" pos:column="45">len</name></expr></argument>, <argument><expr><name><name pos:line="1581" pos:column="50">selText</name><op:operator pos:line="1581" pos:column="57">.</op:operator><name pos:line="1581" pos:column="58">s</name></name></expr></argument>, <argument><expr><name><name pos:line="1581" pos:column="61">selText</name><op:operator pos:line="1581" pos:column="68">.</op:operator><name pos:line="1581" pos:column="69">len</name></name></expr></argument>, <argument><expr><name pos:line="1581" pos:column="74">charSetBuffer</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1581" pos:column="89">"UTF-8"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1581" pos:column="98">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1582" pos:column="25">selText</name><op:operator pos:line="1582" pos:column="32">.</op:operator><name pos:line="1582" pos:column="33">Set</name></name><argument_list pos:line="1582" pos:column="36">(<argument><expr><name pos:line="1582" pos:column="37">dest</name></expr></argument>, <argument><expr><name pos:line="1582" pos:column="43">len</name></expr></argument>, <argument><expr><name><name pos:line="1582" pos:column="48">pdoc</name><op:operator pos:line="1582" pos:column="52">-&gt;</op:operator><name pos:line="1582" pos:column="54">dbcsCodePage</name></name></expr></argument>,
				<argument><expr><name><name pos:line="1583" pos:column="33">vs</name><op:operator pos:line="1583" pos:column="35">.</op:operator><name pos:line="1583" pos:column="36">styles</name><index pos:line="1583" pos:column="42">[<expr><name pos:line="1583" pos:column="43">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1583" pos:column="57">.</op:operator><name pos:line="1583" pos:column="58">characterSet</name></expr></argument>, <argument><expr><name><name pos:line="1583" pos:column="72">selText</name><op:operator pos:line="1583" pos:column="79">.</op:operator><name pos:line="1583" pos:column="80">rectangular</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1583" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="1588" pos:column="1">void</name></type> <name><name pos:line="1588" pos:column="6">ScintillaGTK</name><op:operator pos:line="1588" pos:column="18">::</op:operator><name pos:line="1588" pos:column="20">ReceivedSelection</name></name><parameter_list pos:line="1588" pos:column="37">(<param><decl><type><name pos:line="1588" pos:column="38">GtkSelectionData</name> <type:modifier pos:line="1588" pos:column="55">*</type:modifier></type><name pos:line="1588" pos:column="56">selection_data</name></decl></param>)</parameter_list> <block pos:line="1588" pos:column="72">{
	<try pos:line="1589" pos:column="9">try <block pos:line="1589" pos:column="13">{
		<if pos:line="1590" pos:column="17">if <condition pos:line="1590" pos:column="20">(<expr><op:operator pos:line="1590" pos:column="21">(</op:operator><call><name pos:line="1590" pos:column="22">SelectionOfGSD</name><argument_list pos:line="1590" pos:column="36">(<argument><expr><name pos:line="1590" pos:column="37">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1590" pos:column="53">==</op:operator> <name pos:line="1590" pos:column="56">atomClipboard</name><op:operator pos:line="1590" pos:column="69">)</op:operator> <op:operator pos:line="1590" pos:column="71">||</op:operator>
		        <op:operator pos:line="1591" pos:column="25">(</op:operator><call><name pos:line="1591" pos:column="26">SelectionOfGSD</name><argument_list pos:line="1591" pos:column="40">(<argument><expr><name pos:line="1591" pos:column="41">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1591" pos:column="57">==</op:operator> <name pos:line="1591" pos:column="60">GDK_SELECTION_PRIMARY</name><op:operator pos:line="1591" pos:column="81">)</op:operator></expr>)</condition><then pos:line="1591" pos:column="83"> <block pos:line="1591" pos:column="84">{
			<if pos:line="1592" pos:column="25">if <condition pos:line="1592" pos:column="28">(<expr><op:operator pos:line="1592" pos:column="29">(</op:operator><name pos:line="1592" pos:column="30">atomSought</name> <op:operator pos:line="1592" pos:column="41">==</op:operator> <name pos:line="1592" pos:column="44">atomUTF8</name><op:operator pos:line="1592" pos:column="52">)</op:operator> <op:operator pos:line="1592" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="1592" pos:column="57">(</op:operator><call><name pos:line="1592" pos:column="58">LengthOfGSD</name><argument_list pos:line="1592" pos:column="69">(<argument><expr><name pos:line="1592" pos:column="70">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1592" pos:column="86">&lt;=</op:operator> <lit:literal type="number" pos:line="1592" pos:column="89">0</lit:literal><op:operator pos:line="1592" pos:column="90">)</op:operator></expr>)</condition><then pos:line="1592" pos:column="92"> <block pos:line="1592" pos:column="93">{
				<expr_stmt><expr><name pos:line="1593" pos:column="33">atomSought</name> <op:operator pos:line="1593" pos:column="44">=</op:operator> <name pos:line="1593" pos:column="46">atomString</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1594" pos:column="33">gtk_selection_convert</name><argument_list pos:line="1594" pos:column="54">(<argument><expr><call><name pos:line="1594" pos:column="55">GTK_WIDGET</name><argument_list pos:line="1594" pos:column="65">(<argument><expr><call><name pos:line="1594" pos:column="66">PWidget</name><argument_list pos:line="1594" pos:column="73">(<argument><expr><name pos:line="1594" pos:column="74">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
				        <argument><expr><call><name pos:line="1595" pos:column="41">SelectionOfGSD</name><argument_list pos:line="1595" pos:column="55">(<argument><expr><name pos:line="1595" pos:column="56">selection_data</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1595" pos:column="73">atomSought</name></expr></argument>, <argument><expr><name pos:line="1595" pos:column="85">GDK_CURRENT_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="1596" pos:column="27">else <if pos:line="1596" pos:column="32">if <condition pos:line="1596" pos:column="35">(<expr><op:operator pos:line="1596" pos:column="36">(</op:operator><call><name pos:line="1596" pos:column="37">LengthOfGSD</name><argument_list pos:line="1596" pos:column="48">(<argument><expr><name pos:line="1596" pos:column="49">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1596" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="1596" pos:column="67">0</lit:literal><op:operator pos:line="1596" pos:column="68">)</op:operator> <op:operator pos:line="1596" pos:column="70">&amp;&amp;</op:operator>
			        <op:operator pos:line="1597" pos:column="33">(</op:operator><op:operator pos:line="1597" pos:column="34">(</op:operator><call><name pos:line="1597" pos:column="35">TypeOfGSD</name><argument_list pos:line="1597" pos:column="44">(<argument><expr><name pos:line="1597" pos:column="45">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1597" pos:column="61">==</op:operator> <name pos:line="1597" pos:column="64">GDK_TARGET_STRING</name><op:operator pos:line="1597" pos:column="81">)</op:operator> <op:operator pos:line="1597" pos:column="83">||</op:operator> <op:operator pos:line="1597" pos:column="86">(</op:operator><call><name pos:line="1597" pos:column="87">TypeOfGSD</name><argument_list pos:line="1597" pos:column="96">(<argument><expr><name pos:line="1597" pos:column="97">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1597" pos:column="113">==</op:operator> <name pos:line="1597" pos:column="116">atomUTF8</name><op:operator pos:line="1597" pos:column="124">)</op:operator><op:operator pos:line="1597" pos:column="125">)</op:operator></expr>)</condition><then pos:line="1597" pos:column="127"> <block pos:line="1597" pos:column="128">{
				<decl_stmt><decl><type><name pos:line="1598" pos:column="33">SelectionText</name></type> <name pos:line="1598" pos:column="47">selText</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1599" pos:column="33">GetGtkSelectionText</name><argument_list pos:line="1599" pos:column="52">(<argument><expr><name pos:line="1599" pos:column="53">selection_data</name></expr></argument>, <argument><expr><name pos:line="1599" pos:column="69">selText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<function_decl><type><name pos:line="1601" pos:column="33">UndoGroup</name></type> <name pos:line="1601" pos:column="43">ug</name><parameter_list pos:line="1601" pos:column="45">(<param><decl><type><name pos:line="1601" pos:column="46">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
				<if pos:line="1602" pos:column="33">if <condition pos:line="1602" pos:column="36">(<expr><call><name pos:line="1602" pos:column="37">SelectionOfGSD</name><argument_list pos:line="1602" pos:column="51">(<argument><expr><name pos:line="1602" pos:column="52">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1602" pos:column="68">!=</op:operator> <name pos:line="1602" pos:column="71">GDK_SELECTION_PRIMARY</name></expr>)</condition><then pos:line="1602" pos:column="93"> <block pos:line="1602" pos:column="94">{
					<expr_stmt><expr><call><name pos:line="1603" pos:column="41">ClearSelection</name><argument_list pos:line="1603" pos:column="55">(<argument><expr><name pos:line="1603" pos:column="56">multiPasteMode</name> <op:operator pos:line="1603" pos:column="71">==</op:operator> <name pos:line="1603" pos:column="74">SC_MULTIPASTE_EACH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="1605" pos:column="33">SelectionPosition</name></type> <name pos:line="1605" pos:column="51">selStart</name> <init pos:line="1605" pos:column="60">= <expr><call><name><name pos:line="1605" pos:column="62">sel</name><op:operator pos:line="1605" pos:column="65">.</op:operator><name pos:line="1605" pos:column="66">IsRectangular</name></name><argument_list pos:line="1605" pos:column="79">()</argument_list></call> <op:operator pos:line="1605" pos:column="82">?</op:operator>
					<call><name><name pos:line="1606" pos:column="41">sel</name><op:operator pos:line="1606" pos:column="44">.</op:operator><name pos:line="1606" pos:column="45">Rectangular</name></name><argument_list pos:line="1606" pos:column="56">()</argument_list></call><op:operator pos:line="1606" pos:column="58">.</op:operator><call><name pos:line="1606" pos:column="59">Start</name><argument_list pos:line="1606" pos:column="64">()</argument_list></call> <op:operator pos:line="1606" pos:column="67">:</op:operator>
					<call><name><name pos:line="1607" pos:column="41">sel</name><op:operator pos:line="1607" pos:column="44">.</op:operator><name pos:line="1607" pos:column="45">Range</name></name><argument_list pos:line="1607" pos:column="50">(<argument><expr><call><name><name pos:line="1607" pos:column="51">sel</name><op:operator pos:line="1607" pos:column="54">.</op:operator><name pos:line="1607" pos:column="55">Main</name></name><argument_list pos:line="1607" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1607" pos:column="62">.</op:operator><call><name pos:line="1607" pos:column="63">Start</name><argument_list pos:line="1607" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<if pos:line="1609" pos:column="33">if <condition pos:line="1609" pos:column="36">(<expr><name><name pos:line="1609" pos:column="37">selText</name><op:operator pos:line="1609" pos:column="44">.</op:operator><name pos:line="1609" pos:column="45">rectangular</name></name></expr>)</condition><then pos:line="1609" pos:column="57"> <block pos:line="1609" pos:column="58">{
					<expr_stmt><expr><call><name pos:line="1610" pos:column="41">PasteRectangular</name><argument_list pos:line="1610" pos:column="57">(<argument><expr><name pos:line="1610" pos:column="58">selStart</name></expr></argument>, <argument><expr><name><name pos:line="1610" pos:column="68">selText</name><op:operator pos:line="1610" pos:column="75">.</op:operator><name pos:line="1610" pos:column="76">s</name></name></expr></argument>, <argument><expr><name><name pos:line="1610" pos:column="79">selText</name><op:operator pos:line="1610" pos:column="86">.</op:operator><name pos:line="1610" pos:column="87">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="1611" pos:column="35">else <block pos:line="1611" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="1612" pos:column="41">InsertPaste</name><argument_list pos:line="1612" pos:column="52">(<argument><expr><name pos:line="1612" pos:column="53">selStart</name></expr></argument>, <argument><expr><name><name pos:line="1612" pos:column="63">selText</name><op:operator pos:line="1612" pos:column="70">.</op:operator><name pos:line="1612" pos:column="71">s</name></name></expr></argument>, <argument><expr><name><name pos:line="1612" pos:column="74">selText</name><op:operator pos:line="1612" pos:column="81">.</op:operator><name pos:line="1612" pos:column="82">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
				<expr_stmt><expr><call><name pos:line="1614" pos:column="33">EnsureCaretVisible</name><argument_list pos:line="1614" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></then></if>
<comment type="line" pos:line="1617" pos:column="1">//	else fprintf(stderr, "Target non string %d %d\n", (int)(selection_data-&gt;type),</comment>
<comment type="line" pos:line="1618" pos:column="1">//		(int)(atomUTF8));</comment>
		<expr_stmt><expr><call><name pos:line="1619" pos:column="17">Redraw</name><argument_list pos:line="1619" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="1620" pos:column="11">catch <parameter_list pos:line="1620" pos:column="17">(<param><decl><type><type:modifier pos:line="1620" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="1620" pos:column="23">{
		<expr_stmt><expr><name pos:line="1621" pos:column="17">errorStatus</name> <op:operator pos:line="1621" pos:column="29">=</op:operator> <name pos:line="1621" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="1625" pos:column="1">void</name></type> <name><name pos:line="1625" pos:column="6">ScintillaGTK</name><op:operator pos:line="1625" pos:column="18">::</op:operator><name pos:line="1625" pos:column="20">ReceivedDrop</name></name><parameter_list pos:line="1625" pos:column="32">(<param><decl><type><name pos:line="1625" pos:column="33">GtkSelectionData</name> <type:modifier pos:line="1625" pos:column="50">*</type:modifier></type><name pos:line="1625" pos:column="51">selection_data</name></decl></param>)</parameter_list> <block pos:line="1625" pos:column="67">{
	<expr_stmt><expr><name pos:line="1626" pos:column="9">dragWasDropped</name> <op:operator pos:line="1626" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="1626" pos:column="26">true</lit:literal></expr>;</expr_stmt>
	<if pos:line="1627" pos:column="9">if <condition pos:line="1627" pos:column="12">(<expr><call><name pos:line="1627" pos:column="13">TypeOfGSD</name><argument_list pos:line="1627" pos:column="22">(<argument><expr><name pos:line="1627" pos:column="23">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1627" pos:column="39">==</op:operator> <name pos:line="1627" pos:column="42">atomUriList</name> <op:operator pos:line="1627" pos:column="54">||</op:operator> <call><name pos:line="1627" pos:column="57">TypeOfGSD</name><argument_list pos:line="1627" pos:column="66">(<argument><expr><name pos:line="1627" pos:column="67">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1627" pos:column="83">==</op:operator> <name pos:line="1627" pos:column="86">atomDROPFILES_DND</name></expr>)</condition><then pos:line="1627" pos:column="104"> <block pos:line="1627" pos:column="105">{
		<decl_stmt><decl><type><name pos:line="1628" pos:column="17">char</name> <type:modifier pos:line="1628" pos:column="22">*</type:modifier></type><name pos:line="1628" pos:column="23">ptr</name> <init pos:line="1628" pos:column="27">= <expr><op:operator pos:line="1628" pos:column="29">new</op:operator> <name><name pos:line="1628" pos:column="33">char</name><index pos:line="1628" pos:column="37">[<expr><call><name pos:line="1628" pos:column="38">LengthOfGSD</name><argument_list pos:line="1628" pos:column="49">(<argument><expr><name pos:line="1628" pos:column="50">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1628" pos:column="66">+</op:operator> <lit:literal type="number" pos:line="1628" pos:column="68">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="1629" pos:column="17">ptr</name><index pos:line="1629" pos:column="20">[<expr><call><name pos:line="1629" pos:column="21">LengthOfGSD</name><argument_list pos:line="1629" pos:column="32">(<argument><expr><name pos:line="1629" pos:column="33">selection_data</name></expr></argument>)</argument_list></call></expr>]</index></name> <op:operator pos:line="1629" pos:column="50">=</op:operator> <lit:literal type="char" pos:line="1629" pos:column="52">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1630" pos:column="17">memcpy</name><argument_list pos:line="1630" pos:column="23">(<argument><expr><name pos:line="1630" pos:column="24">ptr</name></expr></argument>, <argument><expr><call><name pos:line="1630" pos:column="29">DataOfGSD</name><argument_list pos:line="1630" pos:column="38">(<argument><expr><name pos:line="1630" pos:column="39">selection_data</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1630" pos:column="56">LengthOfGSD</name><argument_list pos:line="1630" pos:column="67">(<argument><expr><name pos:line="1630" pos:column="68">selection_data</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 		<expr_stmt><expr><call><name pos:line="1631" pos:column="17">NotifyURIDropped</name><argument_list pos:line="1631" pos:column="33">(<argument><expr><name pos:line="1631" pos:column="34">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="1632" pos:column="17">delete</op:operator> <index pos:line="1632" pos:column="24">[]</index><name pos:line="1632" pos:column="26">ptr</name></expr>;</expr_stmt>
	}</block></then> <else pos:line="1633" pos:column="11">else <if pos:line="1633" pos:column="16">if <condition pos:line="1633" pos:column="19">(<expr><op:operator pos:line="1633" pos:column="20">(</op:operator><call><name pos:line="1633" pos:column="21">TypeOfGSD</name><argument_list pos:line="1633" pos:column="30">(<argument><expr><name pos:line="1633" pos:column="31">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1633" pos:column="47">==</op:operator> <name pos:line="1633" pos:column="50">GDK_TARGET_STRING</name><op:operator pos:line="1633" pos:column="67">)</op:operator> <op:operator pos:line="1633" pos:column="69">||</op:operator> <op:operator pos:line="1633" pos:column="72">(</op:operator><call><name pos:line="1633" pos:column="73">TypeOfGSD</name><argument_list pos:line="1633" pos:column="82">(<argument><expr><name pos:line="1633" pos:column="83">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1633" pos:column="99">==</op:operator> <name pos:line="1633" pos:column="102">atomUTF8</name><op:operator pos:line="1633" pos:column="110">)</op:operator></expr>)</condition><then pos:line="1633" pos:column="112"> <block pos:line="1633" pos:column="113">{
		<if pos:line="1634" pos:column="17">if <condition pos:line="1634" pos:column="20">(<expr><call><name pos:line="1634" pos:column="21">TypeOfGSD</name><argument_list pos:line="1634" pos:column="30">(<argument><expr><name pos:line="1634" pos:column="31">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1634" pos:column="47">&gt;</op:operator> <lit:literal type="number" pos:line="1634" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="1634" pos:column="51"> <block pos:line="1634" pos:column="52">{
			<decl_stmt><decl><type><name pos:line="1635" pos:column="25">SelectionText</name></type> <name pos:line="1635" pos:column="39">selText</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1636" pos:column="25">GetGtkSelectionText</name><argument_list pos:line="1636" pos:column="44">(<argument><expr><name pos:line="1636" pos:column="45">selection_data</name></expr></argument>, <argument><expr><name pos:line="1636" pos:column="61">selText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1637" pos:column="25">DropAt</name><argument_list pos:line="1637" pos:column="31">(<argument><expr><name pos:line="1637" pos:column="32">posDrop</name></expr></argument>, <argument><expr><name><name pos:line="1637" pos:column="41">selText</name><op:operator pos:line="1637" pos:column="48">.</op:operator><name pos:line="1637" pos:column="49">s</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1637" pos:column="52">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1637" pos:column="59">selText</name><op:operator pos:line="1637" pos:column="66">.</op:operator><name pos:line="1637" pos:column="67">rectangular</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="1639" pos:column="11">else <if pos:line="1639" pos:column="16">if <condition pos:line="1639" pos:column="19">(<expr><call><name pos:line="1639" pos:column="20">LengthOfGSD</name><argument_list pos:line="1639" pos:column="31">(<argument><expr><name pos:line="1639" pos:column="32">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="1639" pos:column="48">&gt;</op:operator> <lit:literal type="number" pos:line="1639" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="1639" pos:column="52"> <block pos:line="1639" pos:column="53">{
		<comment type="line" pos:line="1640" pos:column="17">//~ fprintf(stderr, "ReceivedDrop other %p\n", static_cast&lt;void *&gt;(selection_data-&gt;type));</comment>
	}</block></then></if></else></if></else></if>
	<expr_stmt><expr><call><name pos:line="1642" pos:column="9">Redraw</name><argument_list pos:line="1642" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>



<function><type><name pos:line="1647" pos:column="1">void</name></type> <name><name pos:line="1647" pos:column="6">ScintillaGTK</name><op:operator pos:line="1647" pos:column="18">::</op:operator><name pos:line="1647" pos:column="20">GetSelection</name></name><parameter_list pos:line="1647" pos:column="32">(<param><decl><type><name pos:line="1647" pos:column="33">GtkSelectionData</name> <type:modifier pos:line="1647" pos:column="50">*</type:modifier></type><name pos:line="1647" pos:column="51">selection_data</name></decl></param>, <param><decl><type><name pos:line="1647" pos:column="67">guint</name></type> <name pos:line="1647" pos:column="73">info</name></decl></param>, <param><decl><type><name pos:line="1647" pos:column="79">SelectionText</name> <type:modifier pos:line="1647" pos:column="93">*</type:modifier></type><name pos:line="1647" pos:column="94">text</name></decl></param>)</parameter_list> <block pos:line="1647" pos:column="100">{
<cpp:if pos:line="1648" pos:column="1">#<cpp:directive pos:line="1648" pos:column="2">if</cpp:directive> <expr><name pos:line="1648" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
	<comment type="line" pos:line="1649" pos:column="9">// GDK on Win32 expands any \n into \r\n, so make a copy of</comment>
	<comment type="line" pos:line="1650" pos:column="9">// the clip text now with newlines converted to \n.  Use { } to hide symbols</comment>
	<comment type="line" pos:line="1651" pos:column="9">// from code below</comment>
	<decl_stmt><decl><type><name pos:line="1652" pos:column="9">SelectionText</name> <type:modifier pos:line="1652" pos:column="23">*</type:modifier></type><name pos:line="1652" pos:column="24">newline_normalized</name> <init pos:line="1652" pos:column="43">= <expr><name pos:line="1652" pos:column="45">NULL</name></expr></init></decl>;</decl_stmt>
	<block pos:line="1653" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1654" pos:column="17">int</name></type> <name pos:line="1654" pos:column="21">tmpstr_len</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1655" pos:column="17">char</name> <type:modifier pos:line="1655" pos:column="22">*</type:modifier></type><name pos:line="1655" pos:column="23">tmpstr</name> <init pos:line="1655" pos:column="30">= <expr><call><name><name pos:line="1655" pos:column="32">Document</name><op:operator pos:line="1655" pos:column="40">::</op:operator><name pos:line="1655" pos:column="42">TransformLineEnds</name></name><argument_list pos:line="1655" pos:column="59">(<argument><expr><op:operator pos:line="1655" pos:column="60">&amp;</op:operator><name pos:line="1655" pos:column="61">tmpstr_len</name></expr></argument>, <argument><expr><name><name pos:line="1655" pos:column="73">text</name><op:operator pos:line="1655" pos:column="77">-&gt;</op:operator><name pos:line="1655" pos:column="79">s</name></name></expr></argument>, <argument><expr><name><name pos:line="1655" pos:column="82">text</name><op:operator pos:line="1655" pos:column="86">-&gt;</op:operator><name pos:line="1655" pos:column="88">len</name></name></expr></argument>, <argument><expr><name pos:line="1655" pos:column="93">SC_EOL_LF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1656" pos:column="17">newline_normalized</name> <op:operator pos:line="1656" pos:column="36">=</op:operator> <op:operator pos:line="1656" pos:column="38">new</op:operator> <call><name pos:line="1656" pos:column="42">SelectionText</name><argument_list pos:line="1656" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1657" pos:column="17">newline_normalized</name><op:operator pos:line="1657" pos:column="35">-&gt;</op:operator><name pos:line="1657" pos:column="37">Set</name></name><argument_list pos:line="1657" pos:column="40">(<argument><expr><name pos:line="1657" pos:column="41">tmpstr</name></expr></argument>, <argument><expr><name pos:line="1657" pos:column="49">tmpstr_len</name></expr></argument>, <argument><expr><name pos:line="1657" pos:column="61">SC_CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1657" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1657" pos:column="76">text</name><op:operator pos:line="1657" pos:column="80">-&gt;</op:operator><name pos:line="1657" pos:column="82">rectangular</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1657" pos:column="95">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1658" pos:column="17">text</name> <op:operator pos:line="1658" pos:column="22">=</op:operator> <name pos:line="1658" pos:column="24">newline_normalized</name></expr>;</expr_stmt>
	}</block>
<cpp:endif pos:line="1660" pos:column="1">#<cpp:directive pos:line="1660" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="1662" pos:column="9">// Convert text to utf8 if it isn't already</comment>
	<decl_stmt><decl><type><name pos:line="1663" pos:column="9">SelectionText</name> <type:modifier pos:line="1663" pos:column="23">*</type:modifier></type><name pos:line="1663" pos:column="24">converted</name> <init pos:line="1663" pos:column="34">= <expr><lit:literal type="number" pos:line="1663" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1664" pos:column="9">if <condition pos:line="1664" pos:column="12">(<expr><op:operator pos:line="1664" pos:column="13">(</op:operator><name><name pos:line="1664" pos:column="14">text</name><op:operator pos:line="1664" pos:column="18">-&gt;</op:operator><name pos:line="1664" pos:column="20">codePage</name></name> <op:operator pos:line="1664" pos:column="29">!=</op:operator> <name pos:line="1664" pos:column="32">SC_CP_UTF8</name><op:operator pos:line="1664" pos:column="42">)</op:operator> <op:operator pos:line="1664" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="1664" pos:column="47">(</op:operator><name pos:line="1664" pos:column="48">info</name> <op:operator pos:line="1664" pos:column="53">==</op:operator> <name pos:line="1664" pos:column="56">TARGET_UTF8_STRING</name><op:operator pos:line="1664" pos:column="74">)</op:operator></expr>)</condition><then pos:line="1664" pos:column="76"> <block pos:line="1664" pos:column="77">{
		<decl_stmt><decl><type><specifier pos:line="1665" pos:column="17">const</specifier> <name pos:line="1665" pos:column="23">char</name> <type:modifier pos:line="1665" pos:column="28">*</type:modifier></type><name pos:line="1665" pos:column="29">charSet</name> <init pos:line="1665" pos:column="37">= <expr><call><name><op:operator pos:line="1665" pos:column="39">::</op:operator><name pos:line="1665" pos:column="41">CharacterSetID</name></name><argument_list pos:line="1665" pos:column="55">(<argument><expr><name><name pos:line="1665" pos:column="56">text</name><op:operator pos:line="1665" pos:column="60">-&gt;</op:operator><name pos:line="1665" pos:column="62">characterSet</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1666" pos:column="17">if <condition pos:line="1666" pos:column="20">(<expr><op:operator pos:line="1666" pos:column="21">*</op:operator><name pos:line="1666" pos:column="22">charSet</name></expr>)</condition><then pos:line="1666" pos:column="30"> <block pos:line="1666" pos:column="31">{
			<decl_stmt><decl><type><name pos:line="1667" pos:column="25">int</name></type> <name pos:line="1667" pos:column="29">new_len</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1668" pos:column="25">char</name><type:modifier pos:line="1668" pos:column="29">*</type:modifier></type> <name pos:line="1668" pos:column="31">tmputf</name> <init pos:line="1668" pos:column="38">= <expr><call><name pos:line="1668" pos:column="40">ConvertText</name><argument_list pos:line="1668" pos:column="51">(<argument><expr><op:operator pos:line="1668" pos:column="52">&amp;</op:operator><name pos:line="1668" pos:column="53">new_len</name></expr></argument>, <argument><expr><name><name pos:line="1668" pos:column="62">text</name><op:operator pos:line="1668" pos:column="66">-&gt;</op:operator><name pos:line="1668" pos:column="68">s</name></name></expr></argument>, <argument><expr><name><name pos:line="1668" pos:column="71">text</name><op:operator pos:line="1668" pos:column="75">-&gt;</op:operator><name pos:line="1668" pos:column="77">len</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1668" pos:column="82">"UTF-8"</lit:literal></expr></argument>, <argument><expr><name pos:line="1668" pos:column="91">charSet</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1668" pos:column="100">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1669" pos:column="25">converted</name> <op:operator pos:line="1669" pos:column="35">=</op:operator> <op:operator pos:line="1669" pos:column="37">new</op:operator> <call><name pos:line="1669" pos:column="41">SelectionText</name><argument_list pos:line="1669" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1670" pos:column="25">converted</name><op:operator pos:line="1670" pos:column="34">-&gt;</op:operator><name pos:line="1670" pos:column="36">Set</name></name><argument_list pos:line="1670" pos:column="39">(<argument><expr><name pos:line="1670" pos:column="40">tmputf</name></expr></argument>, <argument><expr><name pos:line="1670" pos:column="48">new_len</name></expr></argument>, <argument><expr><name pos:line="1670" pos:column="57">SC_CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1670" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1670" pos:column="72">text</name><op:operator pos:line="1670" pos:column="76">-&gt;</op:operator><name pos:line="1670" pos:column="78">rectangular</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1670" pos:column="91">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1671" pos:column="25">text</name> <op:operator pos:line="1671" pos:column="30">=</op:operator> <name pos:line="1671" pos:column="32">converted</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<comment type="line" pos:line="1675" pos:column="9">// Here is a somewhat evil kludge.</comment>
	<comment type="line" pos:line="1676" pos:column="9">// As I can not work out how to store data on the clipboard in multiple formats</comment>
	<comment type="line" pos:line="1677" pos:column="9">// and need some way to mark the clipping as being stream or rectangular,</comment>
	<comment type="line" pos:line="1678" pos:column="9">// the terminating \0 is included in the length for rectangular clippings.</comment>
	<comment type="line" pos:line="1679" pos:column="9">// All other tested aplications behave benignly by ignoring the \0.</comment>
	<comment type="line" pos:line="1680" pos:column="9">// The #if is here because on Windows cfColumnSelect clip entry is used</comment>
	<comment type="line" pos:line="1681" pos:column="9">// instead as standard indicator of rectangularness (so no need to kludge)</comment>
	<decl_stmt><decl><type><specifier pos:line="1682" pos:column="9">const</specifier> <name pos:line="1682" pos:column="15">char</name> <type:modifier pos:line="1682" pos:column="20">*</type:modifier></type><name pos:line="1682" pos:column="21">textData</name> <init pos:line="1682" pos:column="30">= <expr><name><name pos:line="1682" pos:column="32">text</name><op:operator pos:line="1682" pos:column="36">-&gt;</op:operator><name pos:line="1682" pos:column="38">s</name></name> <op:operator pos:line="1682" pos:column="40">?</op:operator> <name><name pos:line="1682" pos:column="42">text</name><op:operator pos:line="1682" pos:column="46">-&gt;</op:operator><name pos:line="1682" pos:column="48">s</name></name> <op:operator pos:line="1682" pos:column="50">:</op:operator> <lit:literal type="string" pos:line="1682" pos:column="52">""</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1683" pos:column="9">int</name></type> <name pos:line="1683" pos:column="13">len</name> <init pos:line="1683" pos:column="17">= <expr><call><name pos:line="1683" pos:column="19">strlen</name><argument_list pos:line="1683" pos:column="25">(<argument><expr><name pos:line="1683" pos:column="26">textData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:if pos:line="1684" pos:column="1">#<cpp:directive pos:line="1684" pos:column="2">if</cpp:directive> <expr><name pos:line="1684" pos:column="5">PLAT_GTK_WIN32</name> <op:operator pos:line="1684" pos:column="20">==</op:operator> <lit:literal type="number" pos:line="1684" pos:column="23">0</lit:literal></expr></cpp:if>
	<if pos:line="1685" pos:column="9">if <condition pos:line="1685" pos:column="12">(<expr><name><name pos:line="1685" pos:column="13">text</name><op:operator pos:line="1685" pos:column="17">-&gt;</op:operator><name pos:line="1685" pos:column="19">rectangular</name></name></expr>)</condition><then pos:line="1685" pos:column="31">
		<expr_stmt><expr><name pos:line="1686" pos:column="17">len</name><op:operator pos:line="1686" pos:column="20">++</op:operator></expr>;</expr_stmt></then></if>
<cpp:endif pos:line="1687" pos:column="1">#<cpp:directive pos:line="1687" pos:column="2">endif</cpp:directive></cpp:endif>

	<if pos:line="1689" pos:column="9">if <condition pos:line="1689" pos:column="12">(<expr><name pos:line="1689" pos:column="13">info</name> <op:operator pos:line="1689" pos:column="18">==</op:operator> <name pos:line="1689" pos:column="21">TARGET_UTF8_STRING</name></expr>)</condition><then pos:line="1689" pos:column="40"> <block pos:line="1689" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="1690" pos:column="17">gtk_selection_data_set_text</name><argument_list pos:line="1690" pos:column="44">(<argument><expr><name pos:line="1690" pos:column="45">selection_data</name></expr></argument>, <argument><expr><name pos:line="1690" pos:column="61">textData</name></expr></argument>, <argument><expr><name pos:line="1690" pos:column="71">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1691" pos:column="11">else <block pos:line="1691" pos:column="16">{
		<macro><name pos:line="1692" pos:column="17">gtk_selection_data_set</name><argument_list pos:line="1692" pos:column="39">(<argument pos:line="1692" pos:column="40">selection_data</argument>,
			<argument pos:line="1693" pos:column="25">static_cast&lt;GdkAtom&gt;(GDK_SELECTION_TYPE_STRING)</argument>,
			<argument pos:line="1694" pos:column="25">8</argument>, <argument pos:line="1694" pos:column="28">reinterpret_cast&lt;const unsigned char *&gt;(textData)</argument>, <argument pos:line="1694" pos:column="79">len</argument>)</argument_list></macro><empty_stmt pos:line="1694" pos:column="83">;</empty_stmt>
	}</block></else></if>
	<expr_stmt><expr><op:operator pos:line="1696" pos:column="9">delete</op:operator> <name pos:line="1696" pos:column="16">converted</name></expr>;</expr_stmt>

<cpp:if pos:line="1698" pos:column="1">#<cpp:directive pos:line="1698" pos:column="2">if</cpp:directive> <expr><name pos:line="1698" pos:column="5">PLAT_GTK_WIN32</name></expr></cpp:if>
	<expr_stmt><expr><op:operator pos:line="1699" pos:column="9">delete</op:operator> <name pos:line="1699" pos:column="16">newline_normalized</name></expr>;</expr_stmt>
<cpp:endif pos:line="1700" pos:column="1">#<cpp:directive pos:line="1700" pos:column="2">endif</cpp:directive></cpp:endif>
}</block></function>

<cpp:ifdef pos:line="1703" pos:column="1">#<cpp:directive pos:line="1703" pos:column="2">ifdef</cpp:directive> <name pos:line="1703" pos:column="8">USE_GTK_CLIPBOARD</name></cpp:ifdef>
<function><type><name pos:line="1704" pos:column="1">void</name></type> <name><name pos:line="1704" pos:column="6">ScintillaGTK</name><op:operator pos:line="1704" pos:column="18">::</op:operator><name pos:line="1704" pos:column="20">StoreOnClipboard</name></name><parameter_list pos:line="1704" pos:column="36">(<param><decl><type><name pos:line="1704" pos:column="37">SelectionText</name> <type:modifier pos:line="1704" pos:column="51">*</type:modifier></type><name pos:line="1704" pos:column="52">clipText</name></decl></param>)</parameter_list> <block pos:line="1704" pos:column="62">{
	<decl_stmt><decl><type><name pos:line="1705" pos:column="9">GtkClipboard</name> <type:modifier pos:line="1705" pos:column="22">*</type:modifier></type><name pos:line="1705" pos:column="23">clipBoard</name> <init pos:line="1705" pos:column="33">=
		<expr><call><name pos:line="1706" pos:column="17">gtk_widget_get_clipboard</name><argument_list pos:line="1706" pos:column="41">(<argument><expr><call><name pos:line="1706" pos:column="42">GTK_WIDGET</name><argument_list pos:line="1706" pos:column="52">(<argument><expr><call><name pos:line="1706" pos:column="53">PWidget</name><argument_list pos:line="1706" pos:column="60">(<argument><expr><name pos:line="1706" pos:column="61">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1706" pos:column="70">atomClipboard</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1707" pos:column="9">if <condition pos:line="1707" pos:column="12">(<expr><name pos:line="1707" pos:column="13">clipBoard</name> <op:operator pos:line="1707" pos:column="23">==</op:operator> <name pos:line="1707" pos:column="26">NULL</name></expr>)</condition><then pos:line="1707" pos:column="31"> <comment type="line" pos:line="1707" pos:column="32">// Occurs if widget isn't in a toplevel</comment>
		<return pos:line="1708" pos:column="17">return;</return></then></if>

	<if pos:line="1710" pos:column="9">if <condition pos:line="1710" pos:column="12">(<expr><call><name pos:line="1710" pos:column="13">gtk_clipboard_set_with_data</name><argument_list pos:line="1710" pos:column="40">(<argument><expr><name pos:line="1710" pos:column="41">clipBoard</name></expr></argument>, <argument><expr><name pos:line="1710" pos:column="52">clipboardCopyTargets</name></expr></argument>, <argument><expr><name pos:line="1710" pos:column="74">nClipboardCopyTargets</name></expr></argument>,
				    <argument><expr><name pos:line="1711" pos:column="37">ClipboardGetSelection</name></expr></argument>, <argument><expr><name pos:line="1711" pos:column="60">ClipboardClearSelection</name></expr></argument>, <argument><expr><name pos:line="1711" pos:column="85">clipText</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1711" pos:column="95"> <block pos:line="1711" pos:column="96">{
		<expr_stmt><expr><call><name pos:line="1712" pos:column="17">gtk_clipboard_set_can_store</name><argument_list pos:line="1712" pos:column="44">(<argument><expr><name pos:line="1712" pos:column="45">clipBoard</name></expr></argument>, <argument><expr><name pos:line="1712" pos:column="56">clipboardCopyTargets</name></expr></argument>, <argument><expr><name pos:line="1712" pos:column="78">nClipboardCopyTargets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1716" pos:column="1">void</name></type> <name><name pos:line="1716" pos:column="6">ScintillaGTK</name><op:operator pos:line="1716" pos:column="18">::</op:operator><name pos:line="1716" pos:column="20">ClipboardGetSelection</name></name><parameter_list pos:line="1716" pos:column="41">(<param><decl><type><name pos:line="1716" pos:column="42">GtkClipboard</name> <type:modifier pos:line="1716" pos:column="55">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="1716" pos:column="58">GtkSelectionData</name> <type:modifier pos:line="1716" pos:column="75">*</type:modifier></type><name pos:line="1716" pos:column="76">selection_data</name></decl></param>, <param><decl><type><name pos:line="1716" pos:column="92">guint</name></type> <name pos:line="1716" pos:column="98">info</name></decl></param>, <param><decl><type><name pos:line="1716" pos:column="104">void</name> <type:modifier pos:line="1716" pos:column="109">*</type:modifier></type><name pos:line="1716" pos:column="110">data</name></decl></param>)</parameter_list> <block pos:line="1716" pos:column="116">{
	<expr_stmt><expr><call><name pos:line="1717" pos:column="9">GetSelection</name><argument_list pos:line="1717" pos:column="21">(<argument><expr><name pos:line="1717" pos:column="22">selection_data</name></expr></argument>, <argument><expr><name pos:line="1717" pos:column="38">info</name></expr></argument>, <argument><expr><call><name><name pos:line="1717" pos:column="44">static_cast</name><argument_list pos:line="1717" pos:column="55">&lt;<argument><expr><name pos:line="1717" pos:column="56">SelectionText</name><op:operator pos:line="1717" pos:column="69">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1717" pos:column="71">(<argument><expr><name pos:line="1717" pos:column="72">data</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1720" pos:column="1">void</name></type> <name><name pos:line="1720" pos:column="6">ScintillaGTK</name><op:operator pos:line="1720" pos:column="18">::</op:operator><name pos:line="1720" pos:column="20">ClipboardClearSelection</name></name><parameter_list pos:line="1720" pos:column="43">(<param><decl><type><name pos:line="1720" pos:column="44">GtkClipboard</name> <type:modifier pos:line="1720" pos:column="57">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="1720" pos:column="60">void</name> <type:modifier pos:line="1720" pos:column="65">*</type:modifier></type><name pos:line="1720" pos:column="66">data</name></decl></param>)</parameter_list> <block pos:line="1720" pos:column="72">{
	<decl_stmt><decl><type><name pos:line="1721" pos:column="9">SelectionText</name> <type:modifier pos:line="1721" pos:column="23">*</type:modifier></type><name pos:line="1721" pos:column="24">obj</name> <init pos:line="1721" pos:column="28">= <expr><call><name><name pos:line="1721" pos:column="30">static_cast</name><argument_list pos:line="1721" pos:column="41">&lt;<argument><expr><name pos:line="1721" pos:column="42">SelectionText</name><op:operator pos:line="1721" pos:column="55">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1721" pos:column="57">(<argument><expr><name pos:line="1721" pos:column="58">data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="1722" pos:column="9">delete</op:operator> <name pos:line="1722" pos:column="16">obj</name></expr>;</expr_stmt>
}</block></function>
<cpp:endif pos:line="1724" pos:column="1">#<cpp:directive pos:line="1724" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="1726" pos:column="1">void</name></type> <name><name pos:line="1726" pos:column="6">ScintillaGTK</name><op:operator pos:line="1726" pos:column="18">::</op:operator><name pos:line="1726" pos:column="20">UnclaimSelection</name></name><parameter_list pos:line="1726" pos:column="36">(<param><decl><type><name pos:line="1726" pos:column="37">GdkEventSelection</name> <type:modifier pos:line="1726" pos:column="55">*</type:modifier></type><name pos:line="1726" pos:column="56">selection_event</name></decl></param>)</parameter_list> <block pos:line="1726" pos:column="73">{
	<try pos:line="1727" pos:column="9">try <block pos:line="1727" pos:column="13">{
		<comment type="line" pos:line="1728" pos:column="17">//Platform::DebugPrintf("UnclaimSelection\n");</comment>
		<if pos:line="1729" pos:column="17">if <condition pos:line="1729" pos:column="20">(<expr><name><name pos:line="1729" pos:column="21">selection_event</name><op:operator pos:line="1729" pos:column="36">-&gt;</op:operator><name pos:line="1729" pos:column="38">selection</name></name> <op:operator pos:line="1729" pos:column="48">==</op:operator> <name pos:line="1729" pos:column="51">GDK_SELECTION_PRIMARY</name></expr>)</condition><then pos:line="1729" pos:column="73"> <block pos:line="1729" pos:column="74">{
			<comment type="line" pos:line="1730" pos:column="25">//Platform::DebugPrintf("UnclaimPrimarySelection\n");</comment>
			<if pos:line="1731" pos:column="25">if <condition pos:line="1731" pos:column="28">(<expr><op:operator pos:line="1731" pos:column="29">!</op:operator><call><name pos:line="1731" pos:column="30">OwnPrimarySelection</name><argument_list pos:line="1731" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="1731" pos:column="52"> <block pos:line="1731" pos:column="53">{
				<expr_stmt><expr><call><name><name pos:line="1732" pos:column="33">primary</name><op:operator pos:line="1732" pos:column="40">.</op:operator><name pos:line="1732" pos:column="41">Free</name></name><argument_list pos:line="1732" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1733" pos:column="33">primarySelection</name> <op:operator pos:line="1733" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="1733" pos:column="52">false</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1734" pos:column="33">FullPaint</name><argument_list pos:line="1734" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block> <catch pos:line="1737" pos:column="11">catch <parameter_list pos:line="1737" pos:column="17">(<param><decl><type><type:modifier pos:line="1737" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="1737" pos:column="23">{
		<expr_stmt><expr><name pos:line="1738" pos:column="17">errorStatus</name> <op:operator pos:line="1738" pos:column="29">=</op:operator> <name pos:line="1738" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="1742" pos:column="1">void</name></type> <name><name pos:line="1742" pos:column="6">ScintillaGTK</name><op:operator pos:line="1742" pos:column="18">::</op:operator><name pos:line="1742" pos:column="20">Resize</name></name><parameter_list pos:line="1742" pos:column="26">(<param><decl><type><name pos:line="1742" pos:column="27">int</name></type> <name pos:line="1742" pos:column="31">width</name></decl></param>, <param><decl><type><name pos:line="1742" pos:column="38">int</name></type> <name pos:line="1742" pos:column="42">height</name></decl></param>)</parameter_list> <block pos:line="1742" pos:column="50">{
	<comment type="line" pos:line="1743" pos:column="9">//Platform::DebugPrintf("Resize %d %d\n", width, height);</comment>
	<comment type="line" pos:line="1744" pos:column="9">//printf("Resize %d %d\n", width, height);</comment>

	<comment type="line" pos:line="1746" pos:column="9">// Not always needed, but some themes can have different sizes of scrollbars</comment>
<cpp:if pos:line="1747" pos:column="1">#<cpp:directive pos:line="1747" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1747" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1747" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1747" pos:column="23">3</lit:literal><op:operator pos:line="1747" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1747" pos:column="25">0</lit:literal><op:operator pos:line="1747" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1747" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="1748" pos:column="9">GtkRequisition</name></type> <name pos:line="1748" pos:column="24">requisition</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1749" pos:column="9">gtk_widget_get_requisition</name><argument_list pos:line="1749" pos:column="35">(<argument><expr><call><name pos:line="1749" pos:column="36">PWidget</name><argument_list pos:line="1749" pos:column="43">(<argument><expr><name pos:line="1749" pos:column="44">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1749" pos:column="57">&amp;</op:operator><name pos:line="1749" pos:column="58">requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1750" pos:column="9">scrollBarWidth</name> <op:operator pos:line="1750" pos:column="24">=</op:operator> <name><name pos:line="1750" pos:column="26">requisition</name><op:operator pos:line="1750" pos:column="37">.</op:operator><name pos:line="1750" pos:column="38">width</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1751" pos:column="9">gtk_widget_get_requisition</name><argument_list pos:line="1751" pos:column="35">(<argument><expr><call><name pos:line="1751" pos:column="36">PWidget</name><argument_list pos:line="1751" pos:column="43">(<argument><expr><name pos:line="1751" pos:column="44">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1751" pos:column="57">&amp;</op:operator><name pos:line="1751" pos:column="58">requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1752" pos:column="9">scrollBarHeight</name> <op:operator pos:line="1752" pos:column="25">=</op:operator> <name><name pos:line="1752" pos:column="27">requisition</name><op:operator pos:line="1752" pos:column="38">.</op:operator><name pos:line="1752" pos:column="39">height</name></name></expr>;</expr_stmt>
<cpp:else pos:line="1753" pos:column="1">#<cpp:directive pos:line="1753" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="1754" pos:column="9">scrollBarWidth</name> <op:operator pos:line="1754" pos:column="24">=</op:operator> <call><name pos:line="1754" pos:column="26">GTK_WIDGET</name><argument_list pos:line="1754" pos:column="36">(<argument><expr><call><name pos:line="1754" pos:column="37">PWidget</name><argument_list pos:line="1754" pos:column="44">(<argument><expr><name pos:line="1754" pos:column="45">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1754" pos:column="57">-&gt;</op:operator><name><name pos:line="1754" pos:column="59">requisition</name><op:operator pos:line="1754" pos:column="70">.</op:operator><name pos:line="1754" pos:column="71">width</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1755" pos:column="9">scrollBarHeight</name> <op:operator pos:line="1755" pos:column="25">=</op:operator> <call><name pos:line="1755" pos:column="27">GTK_WIDGET</name><argument_list pos:line="1755" pos:column="37">(<argument><expr><call><name pos:line="1755" pos:column="38">PWidget</name><argument_list pos:line="1755" pos:column="45">(<argument><expr><name pos:line="1755" pos:column="46">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1755" pos:column="58">-&gt;</op:operator><name><name pos:line="1755" pos:column="60">requisition</name><op:operator pos:line="1755" pos:column="71">.</op:operator><name pos:line="1755" pos:column="72">height</name></name></expr>;</expr_stmt>
<cpp:endif pos:line="1756" pos:column="1">#<cpp:directive pos:line="1756" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="1758" pos:column="9">// These allocations should never produce negative sizes as they would wrap around to huge</comment>
	<comment type="line" pos:line="1759" pos:column="9">// unsigned numbers inside GTK+ causing warnings.</comment>
	<decl_stmt><decl><type><name pos:line="1760" pos:column="9">bool</name></type> <name pos:line="1760" pos:column="14">showSBHorizontal</name> <init pos:line="1760" pos:column="31">= <expr><name pos:line="1760" pos:column="33">horizontalScrollBarVisible</name> <op:operator pos:line="1760" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="1760" pos:column="63">(</op:operator><name pos:line="1760" pos:column="64">wrapState</name> <op:operator pos:line="1760" pos:column="74">==</op:operator> <name pos:line="1760" pos:column="77">eWrapNone</name><op:operator pos:line="1760" pos:column="86">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1761" pos:column="9">int</name></type> <name pos:line="1761" pos:column="13">horizontalScrollBarHeight</name> <init pos:line="1761" pos:column="39">= <expr><name pos:line="1761" pos:column="41">scrollBarHeight</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1762" pos:column="9">if <condition pos:line="1762" pos:column="12">(<expr><op:operator pos:line="1762" pos:column="13">!</op:operator><name pos:line="1762" pos:column="14">showSBHorizontal</name></expr>)</condition><then pos:line="1762" pos:column="31">
		<expr_stmt><expr><name pos:line="1763" pos:column="17">horizontalScrollBarHeight</name> <op:operator pos:line="1763" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="1763" pos:column="45">0</lit:literal></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="1765" pos:column="9">GtkAllocation</name></type> <name pos:line="1765" pos:column="23">alloc</name></decl>;</decl_stmt>
	<if pos:line="1766" pos:column="9">if <condition pos:line="1766" pos:column="12">(<expr><name pos:line="1766" pos:column="13">showSBHorizontal</name></expr>)</condition><then pos:line="1766" pos:column="30"> <block pos:line="1766" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="1767" pos:column="17">gtk_widget_show</name><argument_list pos:line="1767" pos:column="32">(<argument><expr><call><name pos:line="1767" pos:column="33">GTK_WIDGET</name><argument_list pos:line="1767" pos:column="43">(<argument><expr><call><name pos:line="1767" pos:column="44">PWidget</name><argument_list pos:line="1767" pos:column="51">(<argument><expr><name pos:line="1767" pos:column="52">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1768" pos:column="17">alloc</name><op:operator pos:line="1768" pos:column="22">.</op:operator><name pos:line="1768" pos:column="23">x</name></name> <op:operator pos:line="1768" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="1768" pos:column="27">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1769" pos:column="17">alloc</name><op:operator pos:line="1769" pos:column="22">.</op:operator><name pos:line="1769" pos:column="23">y</name></name> <op:operator pos:line="1769" pos:column="25">=</op:operator> <name pos:line="1769" pos:column="27">height</name> <op:operator pos:line="1769" pos:column="34">-</op:operator> <name pos:line="1769" pos:column="36">scrollBarHeight</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1770" pos:column="17">alloc</name><op:operator pos:line="1770" pos:column="22">.</op:operator><name pos:line="1770" pos:column="23">width</name></name> <op:operator pos:line="1770" pos:column="29">=</op:operator> <call><name><name pos:line="1770" pos:column="31">Platform</name><op:operator pos:line="1770" pos:column="39">::</op:operator><name pos:line="1770" pos:column="41">Maximum</name></name><argument_list pos:line="1770" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="1770" pos:column="49">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1770" pos:column="52">width</name> <op:operator pos:line="1770" pos:column="58">-</op:operator> <name pos:line="1770" pos:column="60">scrollBarWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1771" pos:column="17">alloc</name><op:operator pos:line="1771" pos:column="22">.</op:operator><name pos:line="1771" pos:column="23">height</name></name> <op:operator pos:line="1771" pos:column="30">=</op:operator> <name pos:line="1771" pos:column="32">horizontalScrollBarHeight</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1772" pos:column="17">gtk_widget_size_allocate</name><argument_list pos:line="1772" pos:column="41">(<argument><expr><call><name pos:line="1772" pos:column="42">GTK_WIDGET</name><argument_list pos:line="1772" pos:column="52">(<argument><expr><call><name pos:line="1772" pos:column="53">PWidget</name><argument_list pos:line="1772" pos:column="60">(<argument><expr><name pos:line="1772" pos:column="61">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1772" pos:column="75">&amp;</op:operator><name pos:line="1772" pos:column="76">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1773" pos:column="11">else <block pos:line="1773" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="1774" pos:column="17">gtk_widget_hide</name><argument_list pos:line="1774" pos:column="32">(<argument><expr><call><name pos:line="1774" pos:column="33">GTK_WIDGET</name><argument_list pos:line="1774" pos:column="43">(<argument><expr><call><name pos:line="1774" pos:column="44">PWidget</name><argument_list pos:line="1774" pos:column="51">(<argument><expr><name pos:line="1774" pos:column="52">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="1777" pos:column="9">if <condition pos:line="1777" pos:column="12">(<expr><name pos:line="1777" pos:column="13">verticalScrollBarVisible</name></expr>)</condition><then pos:line="1777" pos:column="38"> <block pos:line="1777" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="1778" pos:column="17">gtk_widget_show</name><argument_list pos:line="1778" pos:column="32">(<argument><expr><call><name pos:line="1778" pos:column="33">GTK_WIDGET</name><argument_list pos:line="1778" pos:column="43">(<argument><expr><call><name pos:line="1778" pos:column="44">PWidget</name><argument_list pos:line="1778" pos:column="51">(<argument><expr><name pos:line="1778" pos:column="52">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1779" pos:column="17">alloc</name><op:operator pos:line="1779" pos:column="22">.</op:operator><name pos:line="1779" pos:column="23">x</name></name> <op:operator pos:line="1779" pos:column="25">=</op:operator> <name pos:line="1779" pos:column="27">width</name> <op:operator pos:line="1779" pos:column="33">-</op:operator> <name pos:line="1779" pos:column="35">scrollBarWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1780" pos:column="17">alloc</name><op:operator pos:line="1780" pos:column="22">.</op:operator><name pos:line="1780" pos:column="23">y</name></name> <op:operator pos:line="1780" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="1780" pos:column="27">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1781" pos:column="17">alloc</name><op:operator pos:line="1781" pos:column="22">.</op:operator><name pos:line="1781" pos:column="23">width</name></name> <op:operator pos:line="1781" pos:column="29">=</op:operator> <name pos:line="1781" pos:column="31">scrollBarWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1782" pos:column="17">alloc</name><op:operator pos:line="1782" pos:column="22">.</op:operator><name pos:line="1782" pos:column="23">height</name></name> <op:operator pos:line="1782" pos:column="30">=</op:operator> <call><name><name pos:line="1782" pos:column="32">Platform</name><op:operator pos:line="1782" pos:column="40">::</op:operator><name pos:line="1782" pos:column="42">Maximum</name></name><argument_list pos:line="1782" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="1782" pos:column="50">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1782" pos:column="53">height</name> <op:operator pos:line="1782" pos:column="60">-</op:operator> <name pos:line="1782" pos:column="62">scrollBarHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1783" pos:column="17">if <condition pos:line="1783" pos:column="20">(<expr><op:operator pos:line="1783" pos:column="21">!</op:operator><name pos:line="1783" pos:column="22">showSBHorizontal</name></expr>)</condition><then pos:line="1783" pos:column="39">
			<expr_stmt><expr><name><name pos:line="1784" pos:column="25">alloc</name><op:operator pos:line="1784" pos:column="30">.</op:operator><name pos:line="1784" pos:column="31">height</name></name> <op:operator pos:line="1784" pos:column="38">+=</op:operator> <name pos:line="1784" pos:column="41">scrollBarWidth</name><op:operator pos:line="1784" pos:column="55">-</op:operator><lit:literal type="number" pos:line="1784" pos:column="56">1</lit:literal></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="1785" pos:column="17">gtk_widget_size_allocate</name><argument_list pos:line="1785" pos:column="41">(<argument><expr><call><name pos:line="1785" pos:column="42">GTK_WIDGET</name><argument_list pos:line="1785" pos:column="52">(<argument><expr><call><name pos:line="1785" pos:column="53">PWidget</name><argument_list pos:line="1785" pos:column="60">(<argument><expr><name pos:line="1785" pos:column="61">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1785" pos:column="75">&amp;</op:operator><name pos:line="1785" pos:column="76">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1786" pos:column="11">else <block pos:line="1786" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="1787" pos:column="17">gtk_widget_hide</name><argument_list pos:line="1787" pos:column="32">(<argument><expr><call><name pos:line="1787" pos:column="33">GTK_WIDGET</name><argument_list pos:line="1787" pos:column="43">(<argument><expr><call><name pos:line="1787" pos:column="44">PWidget</name><argument_list pos:line="1787" pos:column="51">(<argument><expr><name pos:line="1787" pos:column="52">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<if pos:line="1789" pos:column="9">if <condition pos:line="1789" pos:column="12">(<expr><call><name pos:line="1789" pos:column="13">IS_WIDGET_MAPPED</name><argument_list pos:line="1789" pos:column="29">(<argument><expr><call><name pos:line="1789" pos:column="30">PWidget</name><argument_list pos:line="1789" pos:column="37">(<argument><expr><name pos:line="1789" pos:column="38">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1789" pos:column="46"> <block pos:line="1789" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="1790" pos:column="17">ChangeSize</name><argument_list pos:line="1790" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name><name pos:line="1793" pos:column="9">alloc</name><op:operator pos:line="1793" pos:column="14">.</op:operator><name pos:line="1793" pos:column="15">x</name></name> <op:operator pos:line="1793" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="1793" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1794" pos:column="9">alloc</name><op:operator pos:line="1794" pos:column="14">.</op:operator><name pos:line="1794" pos:column="15">y</name></name> <op:operator pos:line="1794" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="1794" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1795" pos:column="9">alloc</name><op:operator pos:line="1795" pos:column="14">.</op:operator><name pos:line="1795" pos:column="15">width</name></name> <op:operator pos:line="1795" pos:column="21">=</op:operator> <call><name><name pos:line="1795" pos:column="23">Platform</name><op:operator pos:line="1795" pos:column="31">::</op:operator><name pos:line="1795" pos:column="33">Maximum</name></name><argument_list pos:line="1795" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="1795" pos:column="41">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1795" pos:column="44">width</name> <op:operator pos:line="1795" pos:column="50">-</op:operator> <name pos:line="1795" pos:column="52">scrollBarWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1796" pos:column="9">alloc</name><op:operator pos:line="1796" pos:column="14">.</op:operator><name pos:line="1796" pos:column="15">height</name></name> <op:operator pos:line="1796" pos:column="22">=</op:operator> <call><name><name pos:line="1796" pos:column="24">Platform</name><op:operator pos:line="1796" pos:column="32">::</op:operator><name pos:line="1796" pos:column="34">Maximum</name></name><argument_list pos:line="1796" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="1796" pos:column="42">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1796" pos:column="45">height</name> <op:operator pos:line="1796" pos:column="52">-</op:operator> <name pos:line="1796" pos:column="54">scrollBarHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1797" pos:column="9">if <condition pos:line="1797" pos:column="12">(<expr><op:operator pos:line="1797" pos:column="13">!</op:operator><name pos:line="1797" pos:column="14">showSBHorizontal</name></expr>)</condition><then pos:line="1797" pos:column="31">
		<expr_stmt><expr><name><name pos:line="1798" pos:column="17">alloc</name><op:operator pos:line="1798" pos:column="22">.</op:operator><name pos:line="1798" pos:column="23">height</name></name> <op:operator pos:line="1798" pos:column="30">+=</op:operator> <name pos:line="1798" pos:column="33">scrollBarHeight</name></expr>;</expr_stmt></then></if>
	<if pos:line="1799" pos:column="9">if <condition pos:line="1799" pos:column="12">(<expr><op:operator pos:line="1799" pos:column="13">!</op:operator><name pos:line="1799" pos:column="14">verticalScrollBarVisible</name></expr>)</condition><then pos:line="1799" pos:column="39">
		<expr_stmt><expr><name><name pos:line="1800" pos:column="17">alloc</name><op:operator pos:line="1800" pos:column="22">.</op:operator><name pos:line="1800" pos:column="23">width</name></name> <op:operator pos:line="1800" pos:column="29">+=</op:operator> <name pos:line="1800" pos:column="32">scrollBarWidth</name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="1801" pos:column="9">gtk_widget_size_allocate</name><argument_list pos:line="1801" pos:column="33">(<argument><expr><call><name pos:line="1801" pos:column="34">GTK_WIDGET</name><argument_list pos:line="1801" pos:column="44">(<argument><expr><call><name pos:line="1801" pos:column="45">PWidget</name><argument_list pos:line="1801" pos:column="52">(<argument><expr><name pos:line="1801" pos:column="53">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1801" pos:column="62">&amp;</op:operator><name pos:line="1801" pos:column="63">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="1804" pos:column="1">static</specifier> <name pos:line="1804" pos:column="8">void</name></type> <name pos:line="1804" pos:column="13">SetAdjustmentValue</name><parameter_list pos:line="1804" pos:column="31">(<param><decl><type><name pos:line="1804" pos:column="32">GtkAdjustment</name> <type:modifier pos:line="1804" pos:column="46">*</type:modifier></type><name pos:line="1804" pos:column="47">object</name></decl></param>, <param><decl><type><name pos:line="1804" pos:column="55">int</name></type> <name pos:line="1804" pos:column="59">value</name></decl></param>)</parameter_list> <block pos:line="1804" pos:column="66">{
	<decl_stmt><decl><type><name pos:line="1805" pos:column="9">GtkAdjustment</name> <type:modifier pos:line="1805" pos:column="23">*</type:modifier></type><name pos:line="1805" pos:column="24">adjustment</name> <init pos:line="1805" pos:column="35">= <expr><call><name pos:line="1805" pos:column="37">GTK_ADJUSTMENT</name><argument_list pos:line="1805" pos:column="51">(<argument><expr><name pos:line="1805" pos:column="52">object</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:if pos:line="1806" pos:column="1">#<cpp:directive pos:line="1806" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1806" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="1806" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="1806" pos:column="23">3</lit:literal><op:operator pos:line="1806" pos:column="24">,</op:operator><lit:literal type="number" pos:line="1806" pos:column="25">0</lit:literal><op:operator pos:line="1806" pos:column="26">,</op:operator><lit:literal type="number" pos:line="1806" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="1807" pos:column="9">int</name></type> <name pos:line="1807" pos:column="13">maxValue</name> <init pos:line="1807" pos:column="22">= <expr><call><name><name pos:line="1807" pos:column="24">static_cast</name><argument_list pos:line="1807" pos:column="35">&lt;<argument><expr><name pos:line="1807" pos:column="36">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1807" pos:column="40">(
		<argument><expr><call><name pos:line="1808" pos:column="17">gtk_adjustment_get_upper</name><argument_list pos:line="1808" pos:column="41">(<argument><expr><name pos:line="1808" pos:column="42">adjustment</name></expr></argument>)</argument_list></call> <op:operator pos:line="1808" pos:column="54">-</op:operator> <call><name pos:line="1808" pos:column="56">gtk_adjustment_get_page_size</name><argument_list pos:line="1808" pos:column="84">(<argument><expr><name pos:line="1808" pos:column="85">adjustment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:else pos:line="1809" pos:column="1">#<cpp:directive pos:line="1809" pos:column="2">else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="1810" pos:column="9">int</name></type> <name pos:line="1810" pos:column="13">maxValue</name> <init pos:line="1810" pos:column="22">= <expr><call><name><name pos:line="1810" pos:column="24">static_cast</name><argument_list pos:line="1810" pos:column="35">&lt;<argument><expr><name pos:line="1810" pos:column="36">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1810" pos:column="40">(
		<argument><expr><name><name pos:line="1811" pos:column="17">adjustment</name><op:operator pos:line="1811" pos:column="27">-&gt;</op:operator><name pos:line="1811" pos:column="29">upper</name></name> <op:operator pos:line="1811" pos:column="35">-</op:operator> <name><name pos:line="1811" pos:column="37">adjustment</name><op:operator pos:line="1811" pos:column="47">-&gt;</op:operator><name pos:line="1811" pos:column="49">page_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="1812" pos:column="1">#<cpp:directive pos:line="1812" pos:column="2">endif</cpp:directive></cpp:endif>

	<if pos:line="1814" pos:column="9">if <condition pos:line="1814" pos:column="12">(<expr><name pos:line="1814" pos:column="13">value</name> <op:operator pos:line="1814" pos:column="19">&gt;</op:operator> <name pos:line="1814" pos:column="21">maxValue</name></expr>)</condition><then pos:line="1814" pos:column="30">
		<expr_stmt><expr><name pos:line="1815" pos:column="17">value</name> <op:operator pos:line="1815" pos:column="23">=</op:operator> <name pos:line="1815" pos:column="25">maxValue</name></expr>;</expr_stmt></then></if>
	<if pos:line="1816" pos:column="9">if <condition pos:line="1816" pos:column="12">(<expr><name pos:line="1816" pos:column="13">value</name> <op:operator pos:line="1816" pos:column="19">&lt;</op:operator> <lit:literal type="number" pos:line="1816" pos:column="21">0</lit:literal></expr>)</condition><then pos:line="1816" pos:column="23">
		<expr_stmt><expr><name pos:line="1817" pos:column="17">value</name> <op:operator pos:line="1817" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="1817" pos:column="25">0</lit:literal></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="1818" pos:column="9">gtk_adjustment_set_value</name><argument_list pos:line="1818" pos:column="33">(<argument><expr><name pos:line="1818" pos:column="34">adjustment</name></expr></argument>, <argument><expr><name pos:line="1818" pos:column="46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="1821" pos:column="1">static</specifier> <name pos:line="1821" pos:column="8">int</name></type> <name pos:line="1821" pos:column="12">modifierTranslated</name><parameter_list pos:line="1821" pos:column="30">(<param><decl><type><name pos:line="1821" pos:column="31">int</name></type> <name pos:line="1821" pos:column="35">sciModifier</name></decl></param>)</parameter_list> <block pos:line="1821" pos:column="48">{
	<switch pos:line="1822" pos:column="9">switch <condition pos:line="1822" pos:column="16">(<expr><name pos:line="1822" pos:column="17">sciModifier</name></expr>)</condition> <block pos:line="1822" pos:column="30">{
		<case pos:line="1823" pos:column="17">case <expr><name pos:line="1823" pos:column="22">SCMOD_SHIFT</name></expr>:
			<return pos:line="1824" pos:column="25">return <expr><name pos:line="1824" pos:column="32">GDK_SHIFT_MASK</name></expr>;</return>
		</case><case pos:line="1825" pos:column="17">case <expr><name pos:line="1825" pos:column="22">SCMOD_CTRL</name></expr>:
			<return pos:line="1826" pos:column="25">return <expr><name pos:line="1826" pos:column="32">GDK_CONTROL_MASK</name></expr>;</return>
		</case><case pos:line="1827" pos:column="17">case <expr><name pos:line="1827" pos:column="22">SCMOD_ALT</name></expr>:
			<return pos:line="1828" pos:column="25">return <expr><name pos:line="1828" pos:column="32">GDK_MOD1_MASK</name></expr>;</return>
		</case><case pos:line="1829" pos:column="17">case <expr><name pos:line="1829" pos:column="22">SCMOD_SUPER</name></expr>:
			<return pos:line="1830" pos:column="25">return <expr><name pos:line="1830" pos:column="32">GDK_MOD4_MASK</name></expr>;</return>
		</case><default pos:line="1831" pos:column="17">default:
			<return pos:line="1832" pos:column="25">return <expr><lit:literal type="number" pos:line="1832" pos:column="32">0</lit:literal></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="1836" pos:column="1">gint</name></type> <name><name pos:line="1836" pos:column="6">ScintillaGTK</name><op:operator pos:line="1836" pos:column="18">::</op:operator><name pos:line="1836" pos:column="20">PressThis</name></name><parameter_list pos:line="1836" pos:column="29">(<param><decl><type><name pos:line="1836" pos:column="30">GdkEventButton</name> <type:modifier pos:line="1836" pos:column="45">*</type:modifier></type><name pos:line="1836" pos:column="46">event</name></decl></param>)</parameter_list> <block pos:line="1836" pos:column="53">{
	<try pos:line="1837" pos:column="9">try <block pos:line="1837" pos:column="13">{
		<comment type="line" pos:line="1838" pos:column="17">//Platform::DebugPrintf("Press %x time=%d state = %x button = %x\n",this,event-&gt;time, event-&gt;state, event-&gt;button);</comment>
		<comment type="line" pos:line="1839" pos:column="17">// Do not use GTK+ double click events as Scintilla has its own double click detection</comment>
		<if pos:line="1840" pos:column="17">if <condition pos:line="1840" pos:column="20">(<expr><name><name pos:line="1840" pos:column="21">event</name><op:operator pos:line="1840" pos:column="26">-&gt;</op:operator><name pos:line="1840" pos:column="28">type</name></name> <op:operator pos:line="1840" pos:column="33">!=</op:operator> <name pos:line="1840" pos:column="36">GDK_BUTTON_PRESS</name></expr>)</condition><then pos:line="1840" pos:column="53">
			<return pos:line="1841" pos:column="25">return <expr><name pos:line="1841" pos:column="32">FALSE</name></expr>;</return></then></if>

		<expr_stmt><expr><name pos:line="1843" pos:column="17">evbtn</name> <op:operator pos:line="1843" pos:column="23">=</op:operator> <op:operator pos:line="1843" pos:column="25">*</op:operator><name pos:line="1843" pos:column="26">event</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1844" pos:column="17">Point</name></type> <name pos:line="1844" pos:column="23">pt</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="1845" pos:column="17">pt</name><op:operator pos:line="1845" pos:column="19">.</op:operator><name pos:line="1845" pos:column="20">x</name></name> <op:operator pos:line="1845" pos:column="22">=</op:operator> <call><name pos:line="1845" pos:column="24">int</name><argument_list pos:line="1845" pos:column="27">(<argument><expr><name><name pos:line="1845" pos:column="28">event</name><op:operator pos:line="1845" pos:column="33">-&gt;</op:operator><name pos:line="1845" pos:column="35">x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1846" pos:column="17">pt</name><op:operator pos:line="1846" pos:column="19">.</op:operator><name pos:line="1846" pos:column="20">y</name></name> <op:operator pos:line="1846" pos:column="22">=</op:operator> <call><name pos:line="1846" pos:column="24">int</name><argument_list pos:line="1846" pos:column="27">(<argument><expr><name><name pos:line="1846" pos:column="28">event</name><op:operator pos:line="1846" pos:column="33">-&gt;</op:operator><name pos:line="1846" pos:column="35">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1847" pos:column="17">PRectangle</name></type> <name pos:line="1847" pos:column="28">rcClient</name> <init pos:line="1847" pos:column="37">= <expr><call><name pos:line="1847" pos:column="39">GetClientRectangle</name><argument_list pos:line="1847" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="1848" pos:column="17">//Platform::DebugPrintf("Press %0d,%0d in %0d,%0d %0d,%0d\n",</comment>
		<comment type="line" pos:line="1849" pos:column="17">//	pt.x, pt.y, rcClient.left, rcClient.top, rcClient.right, rcClient.bottom);</comment>
		<if pos:line="1850" pos:column="17">if <condition pos:line="1850" pos:column="20">(<expr><op:operator pos:line="1850" pos:column="21">(</op:operator><name><name pos:line="1850" pos:column="22">pt</name><op:operator pos:line="1850" pos:column="24">.</op:operator><name pos:line="1850" pos:column="25">x</name></name> <op:operator pos:line="1850" pos:column="27">&gt;</op:operator> <name><name pos:line="1850" pos:column="29">rcClient</name><op:operator pos:line="1850" pos:column="37">.</op:operator><name pos:line="1850" pos:column="38">right</name></name><op:operator pos:line="1850" pos:column="43">)</op:operator> <op:operator pos:line="1850" pos:column="45">||</op:operator> <op:operator pos:line="1850" pos:column="48">(</op:operator><name><name pos:line="1850" pos:column="49">pt</name><op:operator pos:line="1850" pos:column="51">.</op:operator><name pos:line="1850" pos:column="52">y</name></name> <op:operator pos:line="1850" pos:column="54">&gt;</op:operator> <name><name pos:line="1850" pos:column="56">rcClient</name><op:operator pos:line="1850" pos:column="64">.</op:operator><name pos:line="1850" pos:column="65">bottom</name></name><op:operator pos:line="1850" pos:column="71">)</op:operator></expr>)</condition><then pos:line="1850" pos:column="73"> <block pos:line="1850" pos:column="74">{
			<expr_stmt><expr><call><name><name pos:line="1851" pos:column="25">Platform</name><op:operator pos:line="1851" pos:column="33">::</op:operator><name pos:line="1851" pos:column="35">DebugPrintf</name></name><argument_list pos:line="1851" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="1851" pos:column="47">"Bad location\n"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1852" pos:column="25">return <expr><name pos:line="1852" pos:column="32">FALSE</name></expr>;</return>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="1855" pos:column="17">bool</name></type> <name pos:line="1855" pos:column="22">ctrl</name> <init pos:line="1855" pos:column="27">= <expr><op:operator pos:line="1855" pos:column="29">(</op:operator><name><name pos:line="1855" pos:column="30">event</name><op:operator pos:line="1855" pos:column="35">-&gt;</op:operator><name pos:line="1855" pos:column="37">state</name></name> <op:operator pos:line="1855" pos:column="43">&amp;</op:operator> <name pos:line="1855" pos:column="45">GDK_CONTROL_MASK</name><op:operator pos:line="1855" pos:column="61">)</op:operator> <op:operator pos:line="1855" pos:column="63">!=</op:operator> <lit:literal type="number" pos:line="1855" pos:column="66">0</lit:literal></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name pos:line="1857" pos:column="17">gtk_widget_grab_focus</name><argument_list pos:line="1857" pos:column="38">(<argument><expr><call><name pos:line="1857" pos:column="39">PWidget</name><argument_list pos:line="1857" pos:column="46">(<argument><expr><name pos:line="1857" pos:column="47">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1858" pos:column="17">if <condition pos:line="1858" pos:column="20">(<expr><name><name pos:line="1858" pos:column="21">event</name><op:operator pos:line="1858" pos:column="26">-&gt;</op:operator><name pos:line="1858" pos:column="28">button</name></name> <op:operator pos:line="1858" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="1858" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1858" pos:column="40"> <block pos:line="1858" pos:column="41">{
			<comment type="line" pos:line="1859" pos:column="25">// On X, instead of sending literal modifiers use the user specified</comment>
			<comment type="line" pos:line="1860" pos:column="25">// modifier, defaulting to control instead of alt.</comment>
			<comment type="line" pos:line="1861" pos:column="25">// This is because most X window managers grab alt + click for moving</comment>
			<expr_stmt><expr><call><name pos:line="1862" pos:column="25">ButtonDown</name><argument_list pos:line="1862" pos:column="35">(<argument><expr><name pos:line="1862" pos:column="36">pt</name></expr></argument>, <argument><expr><name><name pos:line="1862" pos:column="40">event</name><op:operator pos:line="1862" pos:column="45">-&gt;</op:operator><name pos:line="1862" pos:column="47">time</name></name></expr></argument>,
			        <argument><expr><op:operator pos:line="1863" pos:column="33">(</op:operator><name><name pos:line="1863" pos:column="34">event</name><op:operator pos:line="1863" pos:column="39">-&gt;</op:operator><name pos:line="1863" pos:column="41">state</name></name> <op:operator pos:line="1863" pos:column="47">&amp;</op:operator> <name pos:line="1863" pos:column="49">GDK_SHIFT_MASK</name><op:operator pos:line="1863" pos:column="63">)</op:operator> <op:operator pos:line="1863" pos:column="65">!=</op:operator> <lit:literal type="number" pos:line="1863" pos:column="68">0</lit:literal></expr></argument>,
			        <argument><expr><op:operator pos:line="1864" pos:column="33">(</op:operator><name><name pos:line="1864" pos:column="34">event</name><op:operator pos:line="1864" pos:column="39">-&gt;</op:operator><name pos:line="1864" pos:column="41">state</name></name> <op:operator pos:line="1864" pos:column="47">&amp;</op:operator> <name pos:line="1864" pos:column="49">GDK_CONTROL_MASK</name><op:operator pos:line="1864" pos:column="65">)</op:operator> <op:operator pos:line="1864" pos:column="67">!=</op:operator> <lit:literal type="number" pos:line="1864" pos:column="70">0</lit:literal></expr></argument>,
			        <argument><expr><op:operator pos:line="1865" pos:column="33">(</op:operator><name><name pos:line="1865" pos:column="34">event</name><op:operator pos:line="1865" pos:column="39">-&gt;</op:operator><name pos:line="1865" pos:column="41">state</name></name> <op:operator pos:line="1865" pos:column="47">&amp;</op:operator> <call><name pos:line="1865" pos:column="49">modifierTranslated</name><argument_list pos:line="1865" pos:column="67">(<argument><expr><name pos:line="1865" pos:column="68">rectangularSelectionModifier</name></expr></argument>)</argument_list></call><op:operator pos:line="1865" pos:column="97">)</op:operator> <op:operator pos:line="1865" pos:column="99">!=</op:operator> <lit:literal type="number" pos:line="1865" pos:column="102">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="1866" pos:column="19">else <if pos:line="1866" pos:column="24">if <condition pos:line="1866" pos:column="27">(<expr><name><name pos:line="1866" pos:column="28">event</name><op:operator pos:line="1866" pos:column="33">-&gt;</op:operator><name pos:line="1866" pos:column="35">button</name></name> <op:operator pos:line="1866" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1866" pos:column="45">2</lit:literal></expr>)</condition><then pos:line="1866" pos:column="47"> <block pos:line="1866" pos:column="48">{
			<comment type="line" pos:line="1867" pos:column="25">// Grab the primary selection if it exists</comment>
			<decl_stmt><decl><type><name pos:line="1868" pos:column="25">SelectionPosition</name></type> <name pos:line="1868" pos:column="43">pos</name> <init pos:line="1868" pos:column="47">= <expr><call><name pos:line="1868" pos:column="49">SPositionFromLocation</name><argument_list pos:line="1868" pos:column="70">(<argument><expr><name pos:line="1868" pos:column="71">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1868" pos:column="75">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1868" pos:column="82">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="1868" pos:column="89">UserVirtualSpace</name><argument_list pos:line="1868" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1869" pos:column="25">if <condition pos:line="1869" pos:column="28">(<expr><call><name pos:line="1869" pos:column="29">OwnPrimarySelection</name><argument_list pos:line="1869" pos:column="48">()</argument_list></call> <op:operator pos:line="1869" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="1869" pos:column="54">primary</name><op:operator pos:line="1869" pos:column="61">.</op:operator><name pos:line="1869" pos:column="62">s</name></name> <op:operator pos:line="1869" pos:column="64">==</op:operator> <name pos:line="1869" pos:column="67">NULL</name></expr>)</condition><then pos:line="1869" pos:column="72">
				<expr_stmt><expr><call><name pos:line="1870" pos:column="33">CopySelectionRange</name><argument_list pos:line="1870" pos:column="51">(<argument><expr><op:operator pos:line="1870" pos:column="52">&amp;</op:operator><name pos:line="1870" pos:column="53">primary</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="1872" pos:column="25">sel</name><op:operator pos:line="1872" pos:column="28">.</op:operator><name pos:line="1872" pos:column="29">Clear</name></name><argument_list pos:line="1872" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1873" pos:column="25">SetSelection</name><argument_list pos:line="1873" pos:column="37">(<argument><expr><name pos:line="1873" pos:column="38">pos</name></expr></argument>, <argument><expr><name pos:line="1873" pos:column="43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1874" pos:column="25">atomSought</name> <op:operator pos:line="1874" pos:column="36">=</op:operator> <name pos:line="1874" pos:column="38">atomUTF8</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1875" pos:column="25">gtk_selection_convert</name><argument_list pos:line="1875" pos:column="46">(<argument><expr><call><name pos:line="1875" pos:column="47">GTK_WIDGET</name><argument_list pos:line="1875" pos:column="57">(<argument><expr><call><name pos:line="1875" pos:column="58">PWidget</name><argument_list pos:line="1875" pos:column="65">(<argument><expr><name pos:line="1875" pos:column="66">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1875" pos:column="75">GDK_SELECTION_PRIMARY</name></expr></argument>,
			        <argument><expr><name pos:line="1876" pos:column="33">atomSought</name></expr></argument>, <argument><expr><name><name pos:line="1876" pos:column="45">event</name><op:operator pos:line="1876" pos:column="50">-&gt;</op:operator><name pos:line="1876" pos:column="52">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="1877" pos:column="19">else <if pos:line="1877" pos:column="24">if <condition pos:line="1877" pos:column="27">(<expr><name><name pos:line="1877" pos:column="28">event</name><op:operator pos:line="1877" pos:column="33">-&gt;</op:operator><name pos:line="1877" pos:column="35">button</name></name> <op:operator pos:line="1877" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1877" pos:column="45">3</lit:literal></expr>)</condition><then pos:line="1877" pos:column="47"> <block pos:line="1877" pos:column="48">{
			<if pos:line="1878" pos:column="25">if <condition pos:line="1878" pos:column="28">(<expr><op:operator pos:line="1878" pos:column="29">!</op:operator><call><name pos:line="1878" pos:column="30">PointInSelection</name><argument_list pos:line="1878" pos:column="46">(<argument><expr><name pos:line="1878" pos:column="47">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1878" pos:column="51">
				<expr_stmt><expr><call><name pos:line="1879" pos:column="33">SetEmptySelection</name><argument_list pos:line="1879" pos:column="50">(<argument><expr><call><name pos:line="1879" pos:column="51">PositionFromLocation</name><argument_list pos:line="1879" pos:column="71">(<argument><expr><name pos:line="1879" pos:column="72">pt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="1880" pos:column="25">if <condition pos:line="1880" pos:column="28">(<expr><name pos:line="1880" pos:column="29">displayPopupMenu</name></expr>)</condition><then pos:line="1880" pos:column="46"> <block pos:line="1880" pos:column="47">{
				<comment type="line" pos:line="1881" pos:column="33">// PopUp menu</comment>
				<comment type="line" pos:line="1882" pos:column="33">// Convert to screen</comment>
				<decl_stmt><decl><type><name pos:line="1883" pos:column="33">int</name></type> <name pos:line="1883" pos:column="37">ox</name> <init pos:line="1883" pos:column="40">= <expr><lit:literal type="number" pos:line="1883" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1884" pos:column="33">int</name></type> <name pos:line="1884" pos:column="37">oy</name> <init pos:line="1884" pos:column="40">= <expr><lit:literal type="number" pos:line="1884" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1885" pos:column="33">gdk_window_get_origin</name><argument_list pos:line="1885" pos:column="54">(<argument><expr><call><name pos:line="1885" pos:column="55">PWindow</name><argument_list pos:line="1885" pos:column="62">(<argument><expr><name pos:line="1885" pos:column="63">wMain</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1885" pos:column="71">&amp;</op:operator><name pos:line="1885" pos:column="72">ox</name></expr></argument>, <argument><expr><op:operator pos:line="1885" pos:column="76">&amp;</op:operator><name pos:line="1885" pos:column="77">oy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1886" pos:column="33">ContextMenu</name><argument_list pos:line="1886" pos:column="44">(<argument><expr><call><name pos:line="1886" pos:column="45">Point</name><argument_list pos:line="1886" pos:column="50">(<argument><expr><name><name pos:line="1886" pos:column="51">pt</name><op:operator pos:line="1886" pos:column="53">.</op:operator><name pos:line="1886" pos:column="54">x</name></name> <op:operator pos:line="1886" pos:column="56">+</op:operator> <name pos:line="1886" pos:column="58">ox</name></expr></argument>, <argument><expr><name><name pos:line="1886" pos:column="62">pt</name><op:operator pos:line="1886" pos:column="64">.</op:operator><name pos:line="1886" pos:column="65">y</name></name> <op:operator pos:line="1886" pos:column="67">+</op:operator> <name pos:line="1886" pos:column="69">oy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="1887" pos:column="27">else <block pos:line="1887" pos:column="32">{
				<return pos:line="1888" pos:column="33">return <expr><name pos:line="1888" pos:column="40">FALSE</name></expr>;</return>
			}</block></else></if>
		}</block></then> <else pos:line="1890" pos:column="19">else <if pos:line="1890" pos:column="24">if <condition pos:line="1890" pos:column="27">(<expr><name><name pos:line="1890" pos:column="28">event</name><op:operator pos:line="1890" pos:column="33">-&gt;</op:operator><name pos:line="1890" pos:column="35">button</name></name> <op:operator pos:line="1890" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1890" pos:column="45">4</lit:literal></expr>)</condition><then pos:line="1890" pos:column="47"> <block pos:line="1890" pos:column="48">{
			<comment type="line" pos:line="1891" pos:column="25">// Wheel scrolling up (only GTK 1.x does it this way)</comment>
			<if pos:line="1892" pos:column="25">if <condition pos:line="1892" pos:column="28">(<expr><name pos:line="1892" pos:column="29">ctrl</name></expr>)</condition><then pos:line="1892" pos:column="34">
				<expr_stmt><expr><call><name pos:line="1893" pos:column="33">SetAdjustmentValue</name><argument_list pos:line="1893" pos:column="51">(<argument><expr><name pos:line="1893" pos:column="52">adjustmenth</name></expr></argument>, <argument><expr><op:operator pos:line="1893" pos:column="65">(</op:operator><name pos:line="1893" pos:column="66">xOffset</name> <op:operator pos:line="1893" pos:column="74">/</op:operator> <lit:literal type="number" pos:line="1893" pos:column="76">2</lit:literal><op:operator pos:line="1893" pos:column="77">)</op:operator> <op:operator pos:line="1893" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="1893" pos:column="81">6</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="1894" pos:column="25">else
				<expr_stmt><expr><call><name pos:line="1895" pos:column="33">SetAdjustmentValue</name><argument_list pos:line="1895" pos:column="51">(<argument><expr><name pos:line="1895" pos:column="52">adjustmentv</name></expr></argument>, <argument><expr><name pos:line="1895" pos:column="65">topLine</name> <op:operator pos:line="1895" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="1895" pos:column="75">3</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then> <else pos:line="1896" pos:column="19">else <if pos:line="1896" pos:column="24">if <condition pos:line="1896" pos:column="27">(<expr><name><name pos:line="1896" pos:column="28">event</name><op:operator pos:line="1896" pos:column="33">-&gt;</op:operator><name pos:line="1896" pos:column="35">button</name></name> <op:operator pos:line="1896" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1896" pos:column="45">5</lit:literal></expr>)</condition><then pos:line="1896" pos:column="47"> <block pos:line="1896" pos:column="48">{
			<comment type="line" pos:line="1897" pos:column="25">// Wheel scrolling down (only GTK 1.x does it this way)</comment>
			<if pos:line="1898" pos:column="25">if <condition pos:line="1898" pos:column="28">(<expr><name pos:line="1898" pos:column="29">ctrl</name></expr>)</condition><then pos:line="1898" pos:column="34">
				<expr_stmt><expr><call><name pos:line="1899" pos:column="33">SetAdjustmentValue</name><argument_list pos:line="1899" pos:column="51">(<argument><expr><name pos:line="1899" pos:column="52">adjustmenth</name></expr></argument>, <argument><expr><op:operator pos:line="1899" pos:column="65">(</op:operator><name pos:line="1899" pos:column="66">xOffset</name> <op:operator pos:line="1899" pos:column="74">/</op:operator> <lit:literal type="number" pos:line="1899" pos:column="76">2</lit:literal><op:operator pos:line="1899" pos:column="77">)</op:operator> <op:operator pos:line="1899" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="1899" pos:column="81">6</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="1900" pos:column="25">else
				<expr_stmt><expr><call><name pos:line="1901" pos:column="33">SetAdjustmentValue</name><argument_list pos:line="1901" pos:column="51">(<argument><expr><name pos:line="1901" pos:column="52">adjustmentv</name></expr></argument>, <argument><expr><name pos:line="1901" pos:column="65">topLine</name> <op:operator pos:line="1901" pos:column="73">+</op:operator> <lit:literal type="number" pos:line="1901" pos:column="75">3</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then></if></else></if></else></if></else></if></else></if>
	}</block> <catch pos:line="1903" pos:column="11">catch <parameter_list pos:line="1903" pos:column="17">(<param><decl><type><type:modifier pos:line="1903" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="1903" pos:column="23">{
		<expr_stmt><expr><name pos:line="1904" pos:column="17">errorStatus</name> <op:operator pos:line="1904" pos:column="29">=</op:operator> <name pos:line="1904" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="1906" pos:column="9">return <expr><name pos:line="1906" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1909" pos:column="1">gint</name></type> <name><name pos:line="1909" pos:column="6">ScintillaGTK</name><op:operator pos:line="1909" pos:column="18">::</op:operator><name pos:line="1909" pos:column="20">Press</name></name><parameter_list pos:line="1909" pos:column="25">(<param><decl><type><name pos:line="1909" pos:column="26">GtkWidget</name> <type:modifier pos:line="1909" pos:column="36">*</type:modifier></type><name pos:line="1909" pos:column="37">widget</name></decl></param>, <param><decl><type><name pos:line="1909" pos:column="45">GdkEventButton</name> <type:modifier pos:line="1909" pos:column="60">*</type:modifier></type><name pos:line="1909" pos:column="61">event</name></decl></param>)</parameter_list> <block pos:line="1909" pos:column="68">{
	<if pos:line="1910" pos:column="9">if <condition pos:line="1910" pos:column="12">(<expr><name><name pos:line="1910" pos:column="13">event</name><op:operator pos:line="1910" pos:column="18">-&gt;</op:operator><name pos:line="1910" pos:column="20">window</name></name> <op:operator pos:line="1910" pos:column="27">!=</op:operator> <call><name pos:line="1910" pos:column="30">WindowFromWidget</name><argument_list pos:line="1910" pos:column="46">(<argument><expr><name pos:line="1910" pos:column="47">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1910" pos:column="55">
		<return pos:line="1911" pos:column="17">return <expr><name pos:line="1911" pos:column="24">FALSE</name></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="1912" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="1912" pos:column="22">*</type:modifier></type><name pos:line="1912" pos:column="23">sciThis</name> <init pos:line="1912" pos:column="31">= <expr><call><name pos:line="1912" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="1912" pos:column="52">(<argument><expr><name pos:line="1912" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="1913" pos:column="9">return <expr><call><name><name pos:line="1913" pos:column="16">sciThis</name><op:operator pos:line="1913" pos:column="23">-&gt;</op:operator><name pos:line="1913" pos:column="25">PressThis</name></name><argument_list pos:line="1913" pos:column="34">(<argument><expr><name pos:line="1913" pos:column="35">event</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1916" pos:column="1">gint</name></type> <name><name pos:line="1916" pos:column="6">ScintillaGTK</name><op:operator pos:line="1916" pos:column="18">::</op:operator><name pos:line="1916" pos:column="20">MouseRelease</name></name><parameter_list pos:line="1916" pos:column="32">(<param><decl><type><name pos:line="1916" pos:column="33">GtkWidget</name> <type:modifier pos:line="1916" pos:column="43">*</type:modifier></type><name pos:line="1916" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="1916" pos:column="52">GdkEventButton</name> <type:modifier pos:line="1916" pos:column="67">*</type:modifier></type><name pos:line="1916" pos:column="68">event</name></decl></param>)</parameter_list> <block pos:line="1916" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="1917" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="1917" pos:column="22">*</type:modifier></type><name pos:line="1917" pos:column="23">sciThis</name> <init pos:line="1917" pos:column="31">= <expr><call><name pos:line="1917" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="1917" pos:column="52">(<argument><expr><name pos:line="1917" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="1918" pos:column="9">try <block pos:line="1918" pos:column="13">{
		<comment type="line" pos:line="1919" pos:column="17">//Platform::DebugPrintf("Release %x %d %d\n",sciThis,event-&gt;time,event-&gt;state);</comment>
		<if pos:line="1920" pos:column="17">if <condition pos:line="1920" pos:column="20">(<expr><op:operator pos:line="1920" pos:column="21">!</op:operator><call><name><name pos:line="1920" pos:column="22">sciThis</name><op:operator pos:line="1920" pos:column="29">-&gt;</op:operator><name pos:line="1920" pos:column="31">HaveMouseCapture</name></name><argument_list pos:line="1920" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="1920" pos:column="50">
			<return pos:line="1921" pos:column="25">return <expr><name pos:line="1921" pos:column="32">FALSE</name></expr>;</return></then></if>
		<if pos:line="1922" pos:column="17">if <condition pos:line="1922" pos:column="20">(<expr><name><name pos:line="1922" pos:column="21">event</name><op:operator pos:line="1922" pos:column="26">-&gt;</op:operator><name pos:line="1922" pos:column="28">button</name></name> <op:operator pos:line="1922" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="1922" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1922" pos:column="40"> <block pos:line="1922" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="1923" pos:column="25">Point</name></type> <name pos:line="1923" pos:column="31">pt</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1924" pos:column="25">pt</name><op:operator pos:line="1924" pos:column="27">.</op:operator><name pos:line="1924" pos:column="28">x</name></name> <op:operator pos:line="1924" pos:column="30">=</op:operator> <call><name pos:line="1924" pos:column="32">int</name><argument_list pos:line="1924" pos:column="35">(<argument><expr><name><name pos:line="1924" pos:column="36">event</name><op:operator pos:line="1924" pos:column="41">-&gt;</op:operator><name pos:line="1924" pos:column="43">x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1925" pos:column="25">pt</name><op:operator pos:line="1925" pos:column="27">.</op:operator><name pos:line="1925" pos:column="28">y</name></name> <op:operator pos:line="1925" pos:column="30">=</op:operator> <call><name pos:line="1925" pos:column="32">int</name><argument_list pos:line="1925" pos:column="35">(<argument><expr><name><name pos:line="1925" pos:column="36">event</name><op:operator pos:line="1925" pos:column="41">-&gt;</op:operator><name pos:line="1925" pos:column="43">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="1926" pos:column="25">//Platform::DebugPrintf("Up %x %x %d %d %d\n",</comment>
			<comment type="line" pos:line="1927" pos:column="25">//	sciThis,event-&gt;window,event-&gt;time, pt.x, pt.y);</comment>
			<if pos:line="1928" pos:column="25">if <condition pos:line="1928" pos:column="28">(<expr><name><name pos:line="1928" pos:column="29">event</name><op:operator pos:line="1928" pos:column="34">-&gt;</op:operator><name pos:line="1928" pos:column="36">window</name></name> <op:operator pos:line="1928" pos:column="43">!=</op:operator> <call><name pos:line="1928" pos:column="46">PWindow</name><argument_list pos:line="1928" pos:column="53">(<argument><expr><name><name pos:line="1928" pos:column="54">sciThis</name><op:operator pos:line="1928" pos:column="61">-&gt;</op:operator><name pos:line="1928" pos:column="63">wMain</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1928" pos:column="70">
				<comment type="line" pos:line="1929" pos:column="33">// If mouse released on scroll bar then the position is relative to the</comment>
				<comment type="line" pos:line="1930" pos:column="33">// scrollbar, not the drawing window so just repeat the most recent point.</comment>
				<expr_stmt><expr><name pos:line="1931" pos:column="33">pt</name> <op:operator pos:line="1931" pos:column="36">=</op:operator> <name><name pos:line="1931" pos:column="38">sciThis</name><op:operator pos:line="1931" pos:column="45">-&gt;</op:operator><name pos:line="1931" pos:column="47">ptMouseLast</name></name></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="1932" pos:column="25">sciThis</name><op:operator pos:line="1932" pos:column="32">-&gt;</op:operator><name pos:line="1932" pos:column="34">ButtonUp</name></name><argument_list pos:line="1932" pos:column="42">(<argument><expr><name pos:line="1932" pos:column="43">pt</name></expr></argument>, <argument><expr><name><name pos:line="1932" pos:column="47">event</name><op:operator pos:line="1932" pos:column="52">-&gt;</op:operator><name pos:line="1932" pos:column="54">time</name></name></expr></argument>, <argument><expr><op:operator pos:line="1932" pos:column="60">(</op:operator><name><name pos:line="1932" pos:column="61">event</name><op:operator pos:line="1932" pos:column="66">-&gt;</op:operator><name pos:line="1932" pos:column="68">state</name></name> <op:operator pos:line="1932" pos:column="74">&amp;</op:operator> <lit:literal type="number" pos:line="1932" pos:column="76">4</lit:literal><op:operator pos:line="1932" pos:column="77">)</op:operator> <op:operator pos:line="1932" pos:column="79">!=</op:operator> <lit:literal type="number" pos:line="1932" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block> <catch pos:line="1934" pos:column="11">catch <parameter_list pos:line="1934" pos:column="17">(<param><decl><type><type:modifier pos:line="1934" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="1934" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="1935" pos:column="17">sciThis</name><op:operator pos:line="1935" pos:column="24">-&gt;</op:operator><name pos:line="1935" pos:column="26">errorStatus</name></name> <op:operator pos:line="1935" pos:column="38">=</op:operator> <name pos:line="1935" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="1937" pos:column="9">return <expr><name pos:line="1937" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="1940" pos:column="1">// win32gtk and GTK &gt;= 2 use SCROLL_* events instead of passing the</comment>
<comment type="line" pos:line="1941" pos:column="1">// button4/5/6/7 events to the GTK app</comment>
<function><type><name pos:line="1942" pos:column="1">gint</name></type> <name><name pos:line="1942" pos:column="6">ScintillaGTK</name><op:operator pos:line="1942" pos:column="18">::</op:operator><name pos:line="1942" pos:column="20">ScrollEvent</name></name><parameter_list pos:line="1942" pos:column="31">(<param><decl><type><name pos:line="1942" pos:column="32">GtkWidget</name> <type:modifier pos:line="1942" pos:column="42">*</type:modifier></type><name pos:line="1942" pos:column="43">widget</name></decl></param>,
                               <param><decl><type><name pos:line="1943" pos:column="32">GdkEventScroll</name> <type:modifier pos:line="1943" pos:column="47">*</type:modifier></type><name pos:line="1943" pos:column="48">event</name></decl></param>)</parameter_list> <block pos:line="1943" pos:column="55">{
	<decl_stmt><decl><type><name pos:line="1944" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="1944" pos:column="22">*</type:modifier></type><name pos:line="1944" pos:column="23">sciThis</name> <init pos:line="1944" pos:column="31">= <expr><call><name pos:line="1944" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="1944" pos:column="52">(<argument><expr><name pos:line="1944" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="1945" pos:column="9">try <block pos:line="1945" pos:column="13">{

		<if pos:line="1947" pos:column="17">if <condition pos:line="1947" pos:column="20">(<expr><name pos:line="1947" pos:column="21">widget</name> <op:operator pos:line="1947" pos:column="28">==</op:operator> <name pos:line="1947" pos:column="31">NULL</name> <op:operator pos:line="1947" pos:column="36">||</op:operator> <name pos:line="1947" pos:column="39">event</name> <op:operator pos:line="1947" pos:column="45">==</op:operator> <name pos:line="1947" pos:column="48">NULL</name></expr>)</condition><then pos:line="1947" pos:column="53">
			<return pos:line="1948" pos:column="25">return <expr><name pos:line="1948" pos:column="32">FALSE</name></expr>;</return></then></if>

		<comment type="line" pos:line="1950" pos:column="17">// Compute amount and direction to scroll (even tho on win32 there is</comment>
		<comment type="line" pos:line="1951" pos:column="17">// intensity of scrolling info in the native message, gtk doesn't</comment>
		<comment type="line" pos:line="1952" pos:column="17">// support this so we simulate similarly adaptive scrolling)</comment>
		<comment type="line" pos:line="1953" pos:column="17">// Note that this is disabled on OS X (Darwin) where the X11 server already has</comment>
		<comment type="line" pos:line="1954" pos:column="17">// and adaptive scrolling algorithm that fights with this one</comment>
		<decl_stmt><decl><type><name pos:line="1955" pos:column="17">int</name></type> <name pos:line="1955" pos:column="21">cLineScroll</name></decl>;</decl_stmt>
<cpp:if pos:line="1956" pos:column="1">#<cpp:directive pos:line="1956" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1956" pos:column="5">defined</name><argument_list pos:line="1956" pos:column="12">(<argument><expr><name pos:line="1956" pos:column="13">__MWERKS__</name></expr></argument>)</argument_list></call> <op:operator pos:line="1956" pos:column="25">||</op:operator> <call><name pos:line="1956" pos:column="28">defined</name><argument_list pos:line="1956" pos:column="35">(<argument><expr><name pos:line="1956" pos:column="36">__APPLE_CPP__</name></expr></argument>)</argument_list></call> <op:operator pos:line="1956" pos:column="51">||</op:operator> <call><name pos:line="1956" pos:column="54">defined</name><argument_list pos:line="1956" pos:column="61">(<argument><expr><name pos:line="1956" pos:column="62">__APPLE_CC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><name pos:line="1957" pos:column="17">cLineScroll</name> <op:operator pos:line="1957" pos:column="29">=</op:operator> <name><name pos:line="1957" pos:column="31">sciThis</name><op:operator pos:line="1957" pos:column="38">-&gt;</op:operator><name pos:line="1957" pos:column="40">linesPerScroll</name></name></expr>;</expr_stmt>
		<if pos:line="1958" pos:column="17">if <condition pos:line="1958" pos:column="20">(<expr><name pos:line="1958" pos:column="21">cLineScroll</name> <op:operator pos:line="1958" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="1958" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="1958" pos:column="38">
			<expr_stmt><expr><name pos:line="1959" pos:column="25">cLineScroll</name> <op:operator pos:line="1959" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="1959" pos:column="39">4</lit:literal></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="1960" pos:column="17">sciThis</name><op:operator pos:line="1960" pos:column="24">-&gt;</op:operator><name pos:line="1960" pos:column="26">wheelMouseIntensity</name></name> <op:operator pos:line="1960" pos:column="46">=</op:operator> <name pos:line="1960" pos:column="48">cLineScroll</name></expr>;</expr_stmt>
<cpp:else pos:line="1961" pos:column="1">#<cpp:directive pos:line="1961" pos:column="2">else</cpp:directive></cpp:else>
		<decl_stmt><decl><type><name pos:line="1962" pos:column="17">int</name></type> <name pos:line="1962" pos:column="21">timeDelta</name> <init pos:line="1962" pos:column="31">= <expr><lit:literal type="number" pos:line="1962" pos:column="33">1000000</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1963" pos:column="17">GTimeVal</name></type> <name pos:line="1963" pos:column="26">curTime</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1964" pos:column="17">g_get_current_time</name><argument_list pos:line="1964" pos:column="35">(<argument><expr><op:operator pos:line="1964" pos:column="36">&amp;</op:operator><name pos:line="1964" pos:column="37">curTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1965" pos:column="17">if <condition pos:line="1965" pos:column="20">(<expr><name><name pos:line="1965" pos:column="21">curTime</name><op:operator pos:line="1965" pos:column="28">.</op:operator><name pos:line="1965" pos:column="29">tv_sec</name></name> <op:operator pos:line="1965" pos:column="36">==</op:operator> <name><name pos:line="1965" pos:column="39">sciThis</name><op:operator pos:line="1965" pos:column="46">-&gt;</op:operator><name pos:line="1965" pos:column="48">lastWheelMouseTime</name><op:operator pos:line="1965" pos:column="66">.</op:operator><name pos:line="1965" pos:column="67">tv_sec</name></name></expr>)</condition><then pos:line="1965" pos:column="74">
			<expr_stmt><expr><name pos:line="1966" pos:column="25">timeDelta</name> <op:operator pos:line="1966" pos:column="35">=</op:operator> <name><name pos:line="1966" pos:column="37">curTime</name><op:operator pos:line="1966" pos:column="44">.</op:operator><name pos:line="1966" pos:column="45">tv_usec</name></name> <op:operator pos:line="1966" pos:column="53">-</op:operator> <name><name pos:line="1966" pos:column="55">sciThis</name><op:operator pos:line="1966" pos:column="62">-&gt;</op:operator><name pos:line="1966" pos:column="64">lastWheelMouseTime</name><op:operator pos:line="1966" pos:column="82">.</op:operator><name pos:line="1966" pos:column="83">tv_usec</name></name></expr>;</expr_stmt></then>
		<else pos:line="1967" pos:column="17">else <if pos:line="1967" pos:column="22">if <condition pos:line="1967" pos:column="25">(<expr><name><name pos:line="1967" pos:column="26">curTime</name><op:operator pos:line="1967" pos:column="33">.</op:operator><name pos:line="1967" pos:column="34">tv_sec</name></name> <op:operator pos:line="1967" pos:column="41">==</op:operator> <name><name pos:line="1967" pos:column="44">sciThis</name><op:operator pos:line="1967" pos:column="51">-&gt;</op:operator><name pos:line="1967" pos:column="53">lastWheelMouseTime</name><op:operator pos:line="1967" pos:column="71">.</op:operator><name pos:line="1967" pos:column="72">tv_sec</name></name> <op:operator pos:line="1967" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="1967" pos:column="81">1</lit:literal></expr>)</condition><then pos:line="1967" pos:column="83">
			<expr_stmt><expr><name pos:line="1968" pos:column="25">timeDelta</name> <op:operator pos:line="1968" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="1968" pos:column="37">1000000</lit:literal> <op:operator pos:line="1968" pos:column="45">+</op:operator> <op:operator pos:line="1968" pos:column="47">(</op:operator><name><name pos:line="1968" pos:column="48">curTime</name><op:operator pos:line="1968" pos:column="55">.</op:operator><name pos:line="1968" pos:column="56">tv_usec</name></name> <op:operator pos:line="1968" pos:column="64">-</op:operator> <name><name pos:line="1968" pos:column="66">sciThis</name><op:operator pos:line="1968" pos:column="73">-&gt;</op:operator><name pos:line="1968" pos:column="75">lastWheelMouseTime</name><op:operator pos:line="1968" pos:column="93">.</op:operator><name pos:line="1968" pos:column="94">tv_usec</name></name><op:operator pos:line="1968" pos:column="101">)</op:operator></expr>;</expr_stmt></then></if></else></if>
		<if pos:line="1969" pos:column="17">if <condition pos:line="1969" pos:column="20">(<expr><op:operator pos:line="1969" pos:column="21">(</op:operator><name><name pos:line="1969" pos:column="22">event</name><op:operator pos:line="1969" pos:column="27">-&gt;</op:operator><name pos:line="1969" pos:column="29">direction</name></name> <op:operator pos:line="1969" pos:column="39">==</op:operator> <name><name pos:line="1969" pos:column="42">sciThis</name><op:operator pos:line="1969" pos:column="49">-&gt;</op:operator><name pos:line="1969" pos:column="51">lastWheelMouseDirection</name></name><op:operator pos:line="1969" pos:column="74">)</op:operator> <op:operator pos:line="1969" pos:column="76">&amp;&amp;</op:operator> <op:operator pos:line="1969" pos:column="79">(</op:operator><name pos:line="1969" pos:column="80">timeDelta</name> <op:operator pos:line="1969" pos:column="90">&lt;</op:operator> <lit:literal type="number" pos:line="1969" pos:column="92">250000</lit:literal><op:operator pos:line="1969" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1969" pos:column="100"> <block pos:line="1969" pos:column="101">{
			<if pos:line="1970" pos:column="25">if <condition pos:line="1970" pos:column="28">(<expr><name><name pos:line="1970" pos:column="29">sciThis</name><op:operator pos:line="1970" pos:column="36">-&gt;</op:operator><name pos:line="1970" pos:column="38">wheelMouseIntensity</name></name> <op:operator pos:line="1970" pos:column="58">&lt;</op:operator> <lit:literal type="number" pos:line="1970" pos:column="60">12</lit:literal></expr>)</condition><then pos:line="1970" pos:column="63">
				<expr_stmt><expr><name><name pos:line="1971" pos:column="33">sciThis</name><op:operator pos:line="1971" pos:column="40">-&gt;</op:operator><name pos:line="1971" pos:column="42">wheelMouseIntensity</name></name><op:operator pos:line="1971" pos:column="61">++</op:operator></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="1972" pos:column="25">cLineScroll</name> <op:operator pos:line="1972" pos:column="37">=</op:operator> <name><name pos:line="1972" pos:column="39">sciThis</name><op:operator pos:line="1972" pos:column="46">-&gt;</op:operator><name pos:line="1972" pos:column="48">wheelMouseIntensity</name></name></expr>;</expr_stmt>
		}</block></then> <else pos:line="1973" pos:column="19">else <block pos:line="1973" pos:column="24">{
			<expr_stmt><expr><name pos:line="1974" pos:column="25">cLineScroll</name> <op:operator pos:line="1974" pos:column="37">=</op:operator> <name><name pos:line="1974" pos:column="39">sciThis</name><op:operator pos:line="1974" pos:column="46">-&gt;</op:operator><name pos:line="1974" pos:column="48">linesPerScroll</name></name></expr>;</expr_stmt>
			<if pos:line="1975" pos:column="25">if <condition pos:line="1975" pos:column="28">(<expr><name pos:line="1975" pos:column="29">cLineScroll</name> <op:operator pos:line="1975" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="1975" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="1975" pos:column="46">
				<expr_stmt><expr><name pos:line="1976" pos:column="33">cLineScroll</name> <op:operator pos:line="1976" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="1976" pos:column="47">4</lit:literal></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name><name pos:line="1977" pos:column="25">sciThis</name><op:operator pos:line="1977" pos:column="32">-&gt;</op:operator><name pos:line="1977" pos:column="34">wheelMouseIntensity</name></name> <op:operator pos:line="1977" pos:column="54">=</op:operator> <name pos:line="1977" pos:column="56">cLineScroll</name></expr>;</expr_stmt>
		}</block></else></if>
<cpp:endif pos:line="1979" pos:column="1">#<cpp:directive pos:line="1979" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="1980" pos:column="17">if <condition pos:line="1980" pos:column="20">(<expr><name><name pos:line="1980" pos:column="21">event</name><op:operator pos:line="1980" pos:column="26">-&gt;</op:operator><name pos:line="1980" pos:column="28">direction</name></name> <op:operator pos:line="1980" pos:column="38">==</op:operator> <name pos:line="1980" pos:column="41">GDK_SCROLL_UP</name> <op:operator pos:line="1980" pos:column="55">||</op:operator> <name><name pos:line="1980" pos:column="58">event</name><op:operator pos:line="1980" pos:column="63">-&gt;</op:operator><name pos:line="1980" pos:column="65">direction</name></name> <op:operator pos:line="1980" pos:column="75">==</op:operator> <name pos:line="1980" pos:column="78">GDK_SCROLL_LEFT</name></expr>)</condition><then pos:line="1980" pos:column="94"> <block pos:line="1980" pos:column="95">{
			<expr_stmt><expr><name pos:line="1981" pos:column="25">cLineScroll</name> <op:operator pos:line="1981" pos:column="37">*=</op:operator> <op:operator pos:line="1981" pos:column="40">-</op:operator><lit:literal type="number" pos:line="1981" pos:column="41">1</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="1983" pos:column="17">g_get_current_time</name><argument_list pos:line="1983" pos:column="35">(<argument><expr><op:operator pos:line="1983" pos:column="36">&amp;</op:operator><name><name pos:line="1983" pos:column="37">sciThis</name><op:operator pos:line="1983" pos:column="44">-&gt;</op:operator><name pos:line="1983" pos:column="46">lastWheelMouseTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1984" pos:column="17">sciThis</name><op:operator pos:line="1984" pos:column="24">-&gt;</op:operator><name pos:line="1984" pos:column="26">lastWheelMouseDirection</name></name> <op:operator pos:line="1984" pos:column="50">=</op:operator> <name><name pos:line="1984" pos:column="52">event</name><op:operator pos:line="1984" pos:column="57">-&gt;</op:operator><name pos:line="1984" pos:column="59">direction</name></name></expr>;</expr_stmt>

		<comment type="line" pos:line="1986" pos:column="17">// Note:  Unpatched versions of win32gtk don't set the 'state' value so</comment>
		<comment type="line" pos:line="1987" pos:column="17">// only regular scrolling is supported there.  Also, unpatched win32gtk</comment>
		<comment type="line" pos:line="1988" pos:column="17">// issues spurious button 2 mouse events during wheeling, which can cause</comment>
		<comment type="line" pos:line="1989" pos:column="17">// problems (a patch for both was submitted by archaeopteryx.com on 13Jun2001)</comment>

		<comment type="line" pos:line="1991" pos:column="17">// Data zoom not supported</comment>
		<if pos:line="1992" pos:column="17">if <condition pos:line="1992" pos:column="20">(<expr><name><name pos:line="1992" pos:column="21">event</name><op:operator pos:line="1992" pos:column="26">-&gt;</op:operator><name pos:line="1992" pos:column="28">state</name></name> <op:operator pos:line="1992" pos:column="34">&amp;</op:operator> <name pos:line="1992" pos:column="36">GDK_SHIFT_MASK</name></expr>)</condition><then pos:line="1992" pos:column="51"> <block pos:line="1992" pos:column="52">{
			<return pos:line="1993" pos:column="25">return <expr><name pos:line="1993" pos:column="32">FALSE</name></expr>;</return>
		}</block></then></if>

		<comment type="line" pos:line="1996" pos:column="17">// Horizontal scrolling</comment>
		<if pos:line="1997" pos:column="17">if <condition pos:line="1997" pos:column="20">(<expr><name><name pos:line="1997" pos:column="21">event</name><op:operator pos:line="1997" pos:column="26">-&gt;</op:operator><name pos:line="1997" pos:column="28">direction</name></name> <op:operator pos:line="1997" pos:column="38">==</op:operator> <name pos:line="1997" pos:column="41">GDK_SCROLL_LEFT</name> <op:operator pos:line="1997" pos:column="57">||</op:operator> <name><name pos:line="1997" pos:column="60">event</name><op:operator pos:line="1997" pos:column="65">-&gt;</op:operator><name pos:line="1997" pos:column="67">direction</name></name> <op:operator pos:line="1997" pos:column="77">==</op:operator> <name pos:line="1997" pos:column="80">GDK_SCROLL_RIGHT</name></expr>)</condition><then pos:line="1997" pos:column="97"> <block pos:line="1997" pos:column="98">{
			<expr_stmt><expr><call><name><name pos:line="1998" pos:column="25">sciThis</name><op:operator pos:line="1998" pos:column="32">-&gt;</op:operator><name pos:line="1998" pos:column="34">HorizontalScrollTo</name></name><argument_list pos:line="1998" pos:column="52">(<argument><expr><name><name pos:line="1998" pos:column="53">sciThis</name><op:operator pos:line="1998" pos:column="60">-&gt;</op:operator><name pos:line="1998" pos:column="62">xOffset</name></name> <op:operator pos:line="1998" pos:column="70">+</op:operator> <name pos:line="1998" pos:column="72">cLineScroll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="2000" pos:column="25">// Text font size zoom</comment>
		}</block></then> <else pos:line="2001" pos:column="19">else <if pos:line="2001" pos:column="24">if <condition pos:line="2001" pos:column="27">(<expr><name><name pos:line="2001" pos:column="28">event</name><op:operator pos:line="2001" pos:column="33">-&gt;</op:operator><name pos:line="2001" pos:column="35">state</name></name> <op:operator pos:line="2001" pos:column="41">&amp;</op:operator> <name pos:line="2001" pos:column="43">GDK_CONTROL_MASK</name></expr>)</condition><then pos:line="2001" pos:column="60"> <block pos:line="2001" pos:column="61">{
			<if pos:line="2002" pos:column="25">if <condition pos:line="2002" pos:column="28">(<expr><name pos:line="2002" pos:column="29">cLineScroll</name> <op:operator pos:line="2002" pos:column="41">&lt;</op:operator> <lit:literal type="number" pos:line="2002" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="2002" pos:column="45"> <block pos:line="2002" pos:column="46">{
				<expr_stmt><expr><call><name><name pos:line="2003" pos:column="33">sciThis</name><op:operator pos:line="2003" pos:column="40">-&gt;</op:operator><name pos:line="2003" pos:column="42">KeyCommand</name></name><argument_list pos:line="2003" pos:column="52">(<argument><expr><name pos:line="2003" pos:column="53">SCI_ZOOMIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="2004" pos:column="27">else <block pos:line="2004" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="2005" pos:column="33">sciThis</name><op:operator pos:line="2005" pos:column="40">-&gt;</op:operator><name pos:line="2005" pos:column="42">KeyCommand</name></name><argument_list pos:line="2005" pos:column="52">(<argument><expr><name pos:line="2005" pos:column="53">SCI_ZOOMOUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<comment type="line" pos:line="2008" pos:column="25">// Regular scrolling</comment>
		}</block></then> <else pos:line="2009" pos:column="19">else <block pos:line="2009" pos:column="24">{
			<expr_stmt><expr><call><name><name pos:line="2010" pos:column="25">sciThis</name><op:operator pos:line="2010" pos:column="32">-&gt;</op:operator><name pos:line="2010" pos:column="34">ScrollTo</name></name><argument_list pos:line="2010" pos:column="42">(<argument><expr><name><name pos:line="2010" pos:column="43">sciThis</name><op:operator pos:line="2010" pos:column="50">-&gt;</op:operator><name pos:line="2010" pos:column="52">topLine</name></name> <op:operator pos:line="2010" pos:column="60">+</op:operator> <name pos:line="2010" pos:column="62">cLineScroll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
		<return pos:line="2012" pos:column="17">return <expr><name pos:line="2012" pos:column="24">TRUE</name></expr>;</return>
	}</block> <catch pos:line="2013" pos:column="11">catch <parameter_list pos:line="2013" pos:column="17">(<param><decl><type><type:modifier pos:line="2013" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2013" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2014" pos:column="17">sciThis</name><op:operator pos:line="2014" pos:column="24">-&gt;</op:operator><name pos:line="2014" pos:column="26">errorStatus</name></name> <op:operator pos:line="2014" pos:column="38">=</op:operator> <name pos:line="2014" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2016" pos:column="9">return <expr><name pos:line="2016" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2019" pos:column="1">gint</name></type> <name><name pos:line="2019" pos:column="6">ScintillaGTK</name><op:operator pos:line="2019" pos:column="18">::</op:operator><name pos:line="2019" pos:column="20">Motion</name></name><parameter_list pos:line="2019" pos:column="26">(<param><decl><type><name pos:line="2019" pos:column="27">GtkWidget</name> <type:modifier pos:line="2019" pos:column="37">*</type:modifier></type><name pos:line="2019" pos:column="38">widget</name></decl></param>, <param><decl><type><name pos:line="2019" pos:column="46">GdkEventMotion</name> <type:modifier pos:line="2019" pos:column="61">*</type:modifier></type><name pos:line="2019" pos:column="62">event</name></decl></param>)</parameter_list> <block pos:line="2019" pos:column="69">{
	<decl_stmt><decl><type><name pos:line="2020" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2020" pos:column="22">*</type:modifier></type><name pos:line="2020" pos:column="23">sciThis</name> <init pos:line="2020" pos:column="31">= <expr><call><name pos:line="2020" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2020" pos:column="52">(<argument><expr><name pos:line="2020" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2021" pos:column="9">try <block pos:line="2021" pos:column="13">{
		<comment type="line" pos:line="2022" pos:column="17">//Platform::DebugPrintf("Motion %x %d\n",sciThis,event-&gt;time);</comment>
		<if pos:line="2023" pos:column="17">if <condition pos:line="2023" pos:column="20">(<expr><name><name pos:line="2023" pos:column="21">event</name><op:operator pos:line="2023" pos:column="26">-&gt;</op:operator><name pos:line="2023" pos:column="28">window</name></name> <op:operator pos:line="2023" pos:column="35">!=</op:operator> <call><name pos:line="2023" pos:column="38">WindowFromWidget</name><argument_list pos:line="2023" pos:column="54">(<argument><expr><name pos:line="2023" pos:column="55">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2023" pos:column="63">
			<return pos:line="2024" pos:column="25">return <expr><name pos:line="2024" pos:column="32">FALSE</name></expr>;</return></then></if>
		<decl_stmt><decl><type><name pos:line="2025" pos:column="17">int</name></type> <name pos:line="2025" pos:column="21">x</name> <init pos:line="2025" pos:column="23">= <expr><lit:literal type="number" pos:line="2025" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2026" pos:column="17">int</name></type> <name pos:line="2026" pos:column="21">y</name> <init pos:line="2026" pos:column="23">= <expr><lit:literal type="number" pos:line="2026" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2027" pos:column="17">GdkModifierType</name></type> <name pos:line="2027" pos:column="33">state</name></decl>;</decl_stmt>
		<if pos:line="2028" pos:column="17">if <condition pos:line="2028" pos:column="20">(<expr><name><name pos:line="2028" pos:column="21">event</name><op:operator pos:line="2028" pos:column="26">-&gt;</op:operator><name pos:line="2028" pos:column="28">is_hint</name></name></expr>)</condition><then pos:line="2028" pos:column="36"> <block pos:line="2028" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="2029" pos:column="25">gdk_window_get_pointer</name><argument_list pos:line="2029" pos:column="47">(<argument><expr><name><name pos:line="2029" pos:column="48">event</name><op:operator pos:line="2029" pos:column="53">-&gt;</op:operator><name pos:line="2029" pos:column="55">window</name></name></expr></argument>, <argument><expr><op:operator pos:line="2029" pos:column="63">&amp;</op:operator><name pos:line="2029" pos:column="64">x</name></expr></argument>, <argument><expr><op:operator pos:line="2029" pos:column="67">&amp;</op:operator><name pos:line="2029" pos:column="68">y</name></expr></argument>, <argument><expr><op:operator pos:line="2029" pos:column="71">&amp;</op:operator><name pos:line="2029" pos:column="72">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2030" pos:column="19">else <block pos:line="2030" pos:column="24">{
			<expr_stmt><expr><name pos:line="2031" pos:column="25">x</name> <op:operator pos:line="2031" pos:column="27">=</op:operator> <call><name><name pos:line="2031" pos:column="29">static_cast</name><argument_list pos:line="2031" pos:column="40">&lt;<argument><expr><name pos:line="2031" pos:column="41">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2031" pos:column="45">(<argument><expr><name><name pos:line="2031" pos:column="46">event</name><op:operator pos:line="2031" pos:column="51">-&gt;</op:operator><name pos:line="2031" pos:column="53">x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2032" pos:column="25">y</name> <op:operator pos:line="2032" pos:column="27">=</op:operator> <call><name><name pos:line="2032" pos:column="29">static_cast</name><argument_list pos:line="2032" pos:column="40">&lt;<argument><expr><name pos:line="2032" pos:column="41">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2032" pos:column="45">(<argument><expr><name><name pos:line="2032" pos:column="46">event</name><op:operator pos:line="2032" pos:column="51">-&gt;</op:operator><name pos:line="2032" pos:column="53">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2033" pos:column="25">state</name> <op:operator pos:line="2033" pos:column="31">=</op:operator> <call><name><name pos:line="2033" pos:column="33">static_cast</name><argument_list pos:line="2033" pos:column="44">&lt;<argument><expr><name pos:line="2033" pos:column="45">GdkModifierType</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2033" pos:column="61">(<argument><expr><name><name pos:line="2033" pos:column="62">event</name><op:operator pos:line="2033" pos:column="67">-&gt;</op:operator><name pos:line="2033" pos:column="69">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<comment type="line" pos:line="2035" pos:column="17">//Platform::DebugPrintf("Move %x %x %d %c %d %d\n",</comment>
		<comment type="line" pos:line="2036" pos:column="17">//	sciThis,event-&gt;window,event-&gt;time,event-&gt;is_hint? 'h' :'.', x, y);</comment>
		<function_decl><type><name pos:line="2037" pos:column="17">Point</name></type> <name pos:line="2037" pos:column="23">pt</name><parameter_list pos:line="2037" pos:column="25">(<param><decl><type><name pos:line="2037" pos:column="26">x</name></type></decl></param>, <param><decl><type><name pos:line="2037" pos:column="29">y</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name><name pos:line="2038" pos:column="17">sciThis</name><op:operator pos:line="2038" pos:column="24">-&gt;</op:operator><name pos:line="2038" pos:column="26">ButtonMove</name></name><argument_list pos:line="2038" pos:column="36">(<argument><expr><name pos:line="2038" pos:column="37">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2039" pos:column="11">catch <parameter_list pos:line="2039" pos:column="17">(<param><decl><type><type:modifier pos:line="2039" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2039" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2040" pos:column="17">sciThis</name><op:operator pos:line="2040" pos:column="24">-&gt;</op:operator><name pos:line="2040" pos:column="26">errorStatus</name></name> <op:operator pos:line="2040" pos:column="38">=</op:operator> <name pos:line="2040" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2042" pos:column="9">return <expr><name pos:line="2042" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="2045" pos:column="1">// Map the keypad keys to their equivalent functions</comment>
<function><type><specifier pos:line="2046" pos:column="1">static</specifier> <name pos:line="2046" pos:column="8">int</name></type> <name pos:line="2046" pos:column="12">KeyTranslate</name><parameter_list pos:line="2046" pos:column="24">(<param><decl><type><name pos:line="2046" pos:column="25">int</name></type> <name pos:line="2046" pos:column="29">keyIn</name></decl></param>)</parameter_list> <block pos:line="2046" pos:column="36">{
	<switch pos:line="2047" pos:column="9">switch <condition pos:line="2047" pos:column="16">(<expr><name pos:line="2047" pos:column="17">keyIn</name></expr>)</condition> <block pos:line="2047" pos:column="24">{
<cpp:if pos:line="2048" pos:column="1">#<cpp:directive pos:line="2048" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2048" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2048" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2048" pos:column="23">3</lit:literal><op:operator pos:line="2048" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2048" pos:column="25">0</lit:literal><op:operator pos:line="2048" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2048" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<case pos:line="2049" pos:column="9">case <expr><name pos:line="2049" pos:column="14">GDK_KEY_ISO_Left_Tab</name></expr>:
		<return pos:line="2050" pos:column="17">return <expr><name pos:line="2050" pos:column="24">SCK_TAB</name></expr>;</return>
	</case><case pos:line="2051" pos:column="9">case <expr><name pos:line="2051" pos:column="14">GDK_KEY_KP_Down</name></expr>:
		<return pos:line="2052" pos:column="17">return <expr><name pos:line="2052" pos:column="24">SCK_DOWN</name></expr>;</return>
	</case><case pos:line="2053" pos:column="9">case <expr><name pos:line="2053" pos:column="14">GDK_KEY_KP_Up</name></expr>:
		<return pos:line="2054" pos:column="17">return <expr><name pos:line="2054" pos:column="24">SCK_UP</name></expr>;</return>
	</case><case pos:line="2055" pos:column="9">case <expr><name pos:line="2055" pos:column="14">GDK_KEY_KP_Left</name></expr>:
		<return pos:line="2056" pos:column="17">return <expr><name pos:line="2056" pos:column="24">SCK_LEFT</name></expr>;</return>
	</case><case pos:line="2057" pos:column="9">case <expr><name pos:line="2057" pos:column="14">GDK_KEY_KP_Right</name></expr>:
		<return pos:line="2058" pos:column="17">return <expr><name pos:line="2058" pos:column="24">SCK_RIGHT</name></expr>;</return>
	</case><case pos:line="2059" pos:column="9">case <expr><name pos:line="2059" pos:column="14">GDK_KEY_KP_Home</name></expr>:
		<return pos:line="2060" pos:column="17">return <expr><name pos:line="2060" pos:column="24">SCK_HOME</name></expr>;</return>
	</case><case pos:line="2061" pos:column="9">case <expr><name pos:line="2061" pos:column="14">GDK_KEY_KP_End</name></expr>:
		<return pos:line="2062" pos:column="17">return <expr><name pos:line="2062" pos:column="24">SCK_END</name></expr>;</return>
	</case><case pos:line="2063" pos:column="9">case <expr><name pos:line="2063" pos:column="14">GDK_KEY_KP_Page_Up</name></expr>:
		<return pos:line="2064" pos:column="17">return <expr><name pos:line="2064" pos:column="24">SCK_PRIOR</name></expr>;</return>
	</case><case pos:line="2065" pos:column="9">case <expr><name pos:line="2065" pos:column="14">GDK_KEY_KP_Page_Down</name></expr>:
		<return pos:line="2066" pos:column="17">return <expr><name pos:line="2066" pos:column="24">SCK_NEXT</name></expr>;</return>
	</case><case pos:line="2067" pos:column="9">case <expr><name pos:line="2067" pos:column="14">GDK_KEY_KP_Delete</name></expr>:
		<return pos:line="2068" pos:column="17">return <expr><name pos:line="2068" pos:column="24">SCK_DELETE</name></expr>;</return>
	</case><case pos:line="2069" pos:column="9">case <expr><name pos:line="2069" pos:column="14">GDK_KEY_KP_Insert</name></expr>:
		<return pos:line="2070" pos:column="17">return <expr><name pos:line="2070" pos:column="24">SCK_INSERT</name></expr>;</return>
	</case><case pos:line="2071" pos:column="9">case <expr><name pos:line="2071" pos:column="14">GDK_KEY_KP_Enter</name></expr>:
		<return pos:line="2072" pos:column="17">return <expr><name pos:line="2072" pos:column="24">SCK_RETURN</name></expr>;</return>

	</case><case pos:line="2074" pos:column="9">case <expr><name pos:line="2074" pos:column="14">GDK_KEY_Down</name></expr>:
		<return pos:line="2075" pos:column="17">return <expr><name pos:line="2075" pos:column="24">SCK_DOWN</name></expr>;</return>
	</case><case pos:line="2076" pos:column="9">case <expr><name pos:line="2076" pos:column="14">GDK_KEY_Up</name></expr>:
		<return pos:line="2077" pos:column="17">return <expr><name pos:line="2077" pos:column="24">SCK_UP</name></expr>;</return>
	</case><case pos:line="2078" pos:column="9">case <expr><name pos:line="2078" pos:column="14">GDK_KEY_Left</name></expr>:
		<return pos:line="2079" pos:column="17">return <expr><name pos:line="2079" pos:column="24">SCK_LEFT</name></expr>;</return>
	</case><case pos:line="2080" pos:column="9">case <expr><name pos:line="2080" pos:column="14">GDK_KEY_Right</name></expr>:
		<return pos:line="2081" pos:column="17">return <expr><name pos:line="2081" pos:column="24">SCK_RIGHT</name></expr>;</return>
	</case><case pos:line="2082" pos:column="9">case <expr><name pos:line="2082" pos:column="14">GDK_KEY_Home</name></expr>:
		<return pos:line="2083" pos:column="17">return <expr><name pos:line="2083" pos:column="24">SCK_HOME</name></expr>;</return>
	</case><case pos:line="2084" pos:column="9">case <expr><name pos:line="2084" pos:column="14">GDK_KEY_End</name></expr>:
		<return pos:line="2085" pos:column="17">return <expr><name pos:line="2085" pos:column="24">SCK_END</name></expr>;</return>
	</case><case pos:line="2086" pos:column="9">case <expr><name pos:line="2086" pos:column="14">GDK_KEY_Page_Up</name></expr>:
		<return pos:line="2087" pos:column="17">return <expr><name pos:line="2087" pos:column="24">SCK_PRIOR</name></expr>;</return>
	</case><case pos:line="2088" pos:column="9">case <expr><name pos:line="2088" pos:column="14">GDK_KEY_Page_Down</name></expr>:
		<return pos:line="2089" pos:column="17">return <expr><name pos:line="2089" pos:column="24">SCK_NEXT</name></expr>;</return>
	</case><case pos:line="2090" pos:column="9">case <expr><name pos:line="2090" pos:column="14">GDK_KEY_Delete</name></expr>:
		<return pos:line="2091" pos:column="17">return <expr><name pos:line="2091" pos:column="24">SCK_DELETE</name></expr>;</return>
	</case><case pos:line="2092" pos:column="9">case <expr><name pos:line="2092" pos:column="14">GDK_KEY_Insert</name></expr>:
		<return pos:line="2093" pos:column="17">return <expr><name pos:line="2093" pos:column="24">SCK_INSERT</name></expr>;</return>
	</case><case pos:line="2094" pos:column="9">case <expr><name pos:line="2094" pos:column="14">GDK_KEY_Escape</name></expr>:
		<return pos:line="2095" pos:column="17">return <expr><name pos:line="2095" pos:column="24">SCK_ESCAPE</name></expr>;</return>
	</case><case pos:line="2096" pos:column="9">case <expr><name pos:line="2096" pos:column="14">GDK_KEY_BackSpace</name></expr>:
		<return pos:line="2097" pos:column="17">return <expr><name pos:line="2097" pos:column="24">SCK_BACK</name></expr>;</return>
	</case><case pos:line="2098" pos:column="9">case <expr><name pos:line="2098" pos:column="14">GDK_KEY_Tab</name></expr>:
		<return pos:line="2099" pos:column="17">return <expr><name pos:line="2099" pos:column="24">SCK_TAB</name></expr>;</return>
	</case><case pos:line="2100" pos:column="9">case <expr><name pos:line="2100" pos:column="14">GDK_KEY_Return</name></expr>:
		<return pos:line="2101" pos:column="17">return <expr><name pos:line="2101" pos:column="24">SCK_RETURN</name></expr>;</return>
	</case><case pos:line="2102" pos:column="9">case <expr><name pos:line="2102" pos:column="14">GDK_KEY_KP_Add</name></expr>:
		<return pos:line="2103" pos:column="17">return <expr><name pos:line="2103" pos:column="24">SCK_ADD</name></expr>;</return>
	</case><case pos:line="2104" pos:column="9">case <expr><name pos:line="2104" pos:column="14">GDK_KEY_KP_Subtract</name></expr>:
		<return pos:line="2105" pos:column="17">return <expr><name pos:line="2105" pos:column="24">SCK_SUBTRACT</name></expr>;</return>
	</case><case pos:line="2106" pos:column="9">case <expr><name pos:line="2106" pos:column="14">GDK_KEY_KP_Divide</name></expr>:
		<return pos:line="2107" pos:column="17">return <expr><name pos:line="2107" pos:column="24">SCK_DIVIDE</name></expr>;</return>
	</case><case pos:line="2108" pos:column="9">case <expr><name pos:line="2108" pos:column="14">GDK_KEY_Super_L</name></expr>:
		<return pos:line="2109" pos:column="17">return <expr><name pos:line="2109" pos:column="24">SCK_WIN</name></expr>;</return>
	</case><case pos:line="2110" pos:column="9">case <expr><name pos:line="2110" pos:column="14">GDK_KEY_Super_R</name></expr>:
		<return pos:line="2111" pos:column="17">return <expr><name pos:line="2111" pos:column="24">SCK_RWIN</name></expr>;</return>
	</case><case pos:line="2112" pos:column="9">case <expr><name pos:line="2112" pos:column="14">GDK_KEY_Menu</name></expr>:
		<return pos:line="2113" pos:column="17">return <expr><name pos:line="2113" pos:column="24">SCK_MENU</name></expr>;</return>

<cpp:else pos:line="2115" pos:column="1">#<cpp:directive pos:line="2115" pos:column="2">else</cpp:directive></cpp:else>

	</case><case pos:line="2117" pos:column="9">case <expr><name pos:line="2117" pos:column="14">GDK_ISO_Left_Tab</name></expr>:
		<return pos:line="2118" pos:column="17">return <expr><name pos:line="2118" pos:column="24">SCK_TAB</name></expr>;</return>
	</case><case pos:line="2119" pos:column="9">case <expr><name pos:line="2119" pos:column="14">GDK_KP_Down</name></expr>:
		<return pos:line="2120" pos:column="17">return <expr><name pos:line="2120" pos:column="24">SCK_DOWN</name></expr>;</return>
	</case><case pos:line="2121" pos:column="9">case <expr><name pos:line="2121" pos:column="14">GDK_KP_Up</name></expr>:
		<return pos:line="2122" pos:column="17">return <expr><name pos:line="2122" pos:column="24">SCK_UP</name></expr>;</return>
	</case><case pos:line="2123" pos:column="9">case <expr><name pos:line="2123" pos:column="14">GDK_KP_Left</name></expr>:
		<return pos:line="2124" pos:column="17">return <expr><name pos:line="2124" pos:column="24">SCK_LEFT</name></expr>;</return>
	</case><case pos:line="2125" pos:column="9">case <expr><name pos:line="2125" pos:column="14">GDK_KP_Right</name></expr>:
		<return pos:line="2126" pos:column="17">return <expr><name pos:line="2126" pos:column="24">SCK_RIGHT</name></expr>;</return>
	</case><case pos:line="2127" pos:column="9">case <expr><name pos:line="2127" pos:column="14">GDK_KP_Home</name></expr>:
		<return pos:line="2128" pos:column="17">return <expr><name pos:line="2128" pos:column="24">SCK_HOME</name></expr>;</return>
	</case><case pos:line="2129" pos:column="9">case <expr><name pos:line="2129" pos:column="14">GDK_KP_End</name></expr>:
		<return pos:line="2130" pos:column="17">return <expr><name pos:line="2130" pos:column="24">SCK_END</name></expr>;</return>
	</case><case pos:line="2131" pos:column="9">case <expr><name pos:line="2131" pos:column="14">GDK_KP_Page_Up</name></expr>:
		<return pos:line="2132" pos:column="17">return <expr><name pos:line="2132" pos:column="24">SCK_PRIOR</name></expr>;</return>
	</case><case pos:line="2133" pos:column="9">case <expr><name pos:line="2133" pos:column="14">GDK_KP_Page_Down</name></expr>:
		<return pos:line="2134" pos:column="17">return <expr><name pos:line="2134" pos:column="24">SCK_NEXT</name></expr>;</return>
	</case><case pos:line="2135" pos:column="9">case <expr><name pos:line="2135" pos:column="14">GDK_KP_Delete</name></expr>:
		<return pos:line="2136" pos:column="17">return <expr><name pos:line="2136" pos:column="24">SCK_DELETE</name></expr>;</return>
	</case><case pos:line="2137" pos:column="9">case <expr><name pos:line="2137" pos:column="14">GDK_KP_Insert</name></expr>:
		<return pos:line="2138" pos:column="17">return <expr><name pos:line="2138" pos:column="24">SCK_INSERT</name></expr>;</return>
	</case><case pos:line="2139" pos:column="9">case <expr><name pos:line="2139" pos:column="14">GDK_KP_Enter</name></expr>:
		<return pos:line="2140" pos:column="17">return <expr><name pos:line="2140" pos:column="24">SCK_RETURN</name></expr>;</return>

	</case><case pos:line="2142" pos:column="9">case <expr><name pos:line="2142" pos:column="14">GDK_Down</name></expr>:
		<return pos:line="2143" pos:column="17">return <expr><name pos:line="2143" pos:column="24">SCK_DOWN</name></expr>;</return>
	</case><case pos:line="2144" pos:column="9">case <expr><name pos:line="2144" pos:column="14">GDK_Up</name></expr>:
		<return pos:line="2145" pos:column="17">return <expr><name pos:line="2145" pos:column="24">SCK_UP</name></expr>;</return>
	</case><case pos:line="2146" pos:column="9">case <expr><name pos:line="2146" pos:column="14">GDK_Left</name></expr>:
		<return pos:line="2147" pos:column="17">return <expr><name pos:line="2147" pos:column="24">SCK_LEFT</name></expr>;</return>
	</case><case pos:line="2148" pos:column="9">case <expr><name pos:line="2148" pos:column="14">GDK_Right</name></expr>:
		<return pos:line="2149" pos:column="17">return <expr><name pos:line="2149" pos:column="24">SCK_RIGHT</name></expr>;</return>
	</case><case pos:line="2150" pos:column="9">case <expr><name pos:line="2150" pos:column="14">GDK_Home</name></expr>:
		<return pos:line="2151" pos:column="17">return <expr><name pos:line="2151" pos:column="24">SCK_HOME</name></expr>;</return>
	</case><case pos:line="2152" pos:column="9">case <expr><name pos:line="2152" pos:column="14">GDK_End</name></expr>:
		<return pos:line="2153" pos:column="17">return <expr><name pos:line="2153" pos:column="24">SCK_END</name></expr>;</return>
	</case><case pos:line="2154" pos:column="9">case <expr><name pos:line="2154" pos:column="14">GDK_Page_Up</name></expr>:
		<return pos:line="2155" pos:column="17">return <expr><name pos:line="2155" pos:column="24">SCK_PRIOR</name></expr>;</return>
	</case><case pos:line="2156" pos:column="9">case <expr><name pos:line="2156" pos:column="14">GDK_Page_Down</name></expr>:
		<return pos:line="2157" pos:column="17">return <expr><name pos:line="2157" pos:column="24">SCK_NEXT</name></expr>;</return>
	</case><case pos:line="2158" pos:column="9">case <expr><name pos:line="2158" pos:column="14">GDK_Delete</name></expr>:
		<return pos:line="2159" pos:column="17">return <expr><name pos:line="2159" pos:column="24">SCK_DELETE</name></expr>;</return>
	</case><case pos:line="2160" pos:column="9">case <expr><name pos:line="2160" pos:column="14">GDK_Insert</name></expr>:
		<return pos:line="2161" pos:column="17">return <expr><name pos:line="2161" pos:column="24">SCK_INSERT</name></expr>;</return>
	</case><case pos:line="2162" pos:column="9">case <expr><name pos:line="2162" pos:column="14">GDK_Escape</name></expr>:
		<return pos:line="2163" pos:column="17">return <expr><name pos:line="2163" pos:column="24">SCK_ESCAPE</name></expr>;</return>
	</case><case pos:line="2164" pos:column="9">case <expr><name pos:line="2164" pos:column="14">GDK_BackSpace</name></expr>:
		<return pos:line="2165" pos:column="17">return <expr><name pos:line="2165" pos:column="24">SCK_BACK</name></expr>;</return>
	</case><case pos:line="2166" pos:column="9">case <expr><name pos:line="2166" pos:column="14">GDK_Tab</name></expr>:
		<return pos:line="2167" pos:column="17">return <expr><name pos:line="2167" pos:column="24">SCK_TAB</name></expr>;</return>
	</case><case pos:line="2168" pos:column="9">case <expr><name pos:line="2168" pos:column="14">GDK_Return</name></expr>:
		<return pos:line="2169" pos:column="17">return <expr><name pos:line="2169" pos:column="24">SCK_RETURN</name></expr>;</return>
	</case><case pos:line="2170" pos:column="9">case <expr><name pos:line="2170" pos:column="14">GDK_KP_Add</name></expr>:
		<return pos:line="2171" pos:column="17">return <expr><name pos:line="2171" pos:column="24">SCK_ADD</name></expr>;</return>
	</case><case pos:line="2172" pos:column="9">case <expr><name pos:line="2172" pos:column="14">GDK_KP_Subtract</name></expr>:
		<return pos:line="2173" pos:column="17">return <expr><name pos:line="2173" pos:column="24">SCK_SUBTRACT</name></expr>;</return>
	</case><case pos:line="2174" pos:column="9">case <expr><name pos:line="2174" pos:column="14">GDK_KP_Divide</name></expr>:
		<return pos:line="2175" pos:column="17">return <expr><name pos:line="2175" pos:column="24">SCK_DIVIDE</name></expr>;</return>
	</case><case pos:line="2176" pos:column="9">case <expr><name pos:line="2176" pos:column="14">GDK_Super_L</name></expr>:
		<return pos:line="2177" pos:column="17">return <expr><name pos:line="2177" pos:column="24">SCK_WIN</name></expr>;</return>
	</case><case pos:line="2178" pos:column="9">case <expr><name pos:line="2178" pos:column="14">GDK_Super_R</name></expr>:
		<return pos:line="2179" pos:column="17">return <expr><name pos:line="2179" pos:column="24">SCK_RWIN</name></expr>;</return>
	</case><case pos:line="2180" pos:column="9">case <expr><name pos:line="2180" pos:column="14">GDK_Menu</name></expr>:
		<return pos:line="2181" pos:column="17">return <expr><name pos:line="2181" pos:column="24">SCK_MENU</name></expr>;</return>
<cpp:endif pos:line="2182" pos:column="1">#<cpp:directive pos:line="2182" pos:column="2">endif</cpp:directive></cpp:endif>
	</case><default pos:line="2183" pos:column="9">default:
		<return pos:line="2184" pos:column="17">return <expr><name pos:line="2184" pos:column="24">keyIn</name></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="2188" pos:column="1">gboolean</name></type> <name><name pos:line="2188" pos:column="10">ScintillaGTK</name><op:operator pos:line="2188" pos:column="22">::</op:operator><name pos:line="2188" pos:column="24">KeyThis</name></name><parameter_list pos:line="2188" pos:column="31">(<param><decl><type><name pos:line="2188" pos:column="32">GdkEventKey</name> <type:modifier pos:line="2188" pos:column="44">*</type:modifier></type><name pos:line="2188" pos:column="45">event</name></decl></param>)</parameter_list> <block pos:line="2188" pos:column="52">{
	<try pos:line="2189" pos:column="9">try <block pos:line="2189" pos:column="13">{
		<comment type="line" pos:line="2190" pos:column="17">//fprintf(stderr, "SC-key: %d %x [%s]\n",</comment>
		<comment type="line" pos:line="2191" pos:column="17">//	event-&gt;keyval, event-&gt;state, (event-&gt;length &gt; 0) ? event-&gt;string : "empty");</comment>
		<if pos:line="2192" pos:column="17">if <condition pos:line="2192" pos:column="20">(<expr><call><name pos:line="2192" pos:column="21">gtk_im_context_filter_keypress</name><argument_list pos:line="2192" pos:column="51">(<argument><expr><name pos:line="2192" pos:column="52">im_context</name></expr></argument>, <argument><expr><name pos:line="2192" pos:column="64">event</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2192" pos:column="71"> <block pos:line="2192" pos:column="72">{
			<return pos:line="2193" pos:column="25">return <expr><lit:literal type="number" pos:line="2193" pos:column="32">1</lit:literal></expr>;</return>
		}</block></then></if>
		<if pos:line="2195" pos:column="17">if <condition pos:line="2195" pos:column="20">(<expr><op:operator pos:line="2195" pos:column="21">!</op:operator><name><name pos:line="2195" pos:column="22">event</name><op:operator pos:line="2195" pos:column="27">-&gt;</op:operator><name pos:line="2195" pos:column="29">keyval</name></name></expr>)</condition><then pos:line="2195" pos:column="36"> <block pos:line="2195" pos:column="37">{
			<return pos:line="2196" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2196" pos:column="32">true</lit:literal></expr>;</return>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="2199" pos:column="17">bool</name></type> <name pos:line="2199" pos:column="22">shift</name> <init pos:line="2199" pos:column="28">= <expr><op:operator pos:line="2199" pos:column="30">(</op:operator><name><name pos:line="2199" pos:column="31">event</name><op:operator pos:line="2199" pos:column="36">-&gt;</op:operator><name pos:line="2199" pos:column="38">state</name></name> <op:operator pos:line="2199" pos:column="44">&amp;</op:operator> <name pos:line="2199" pos:column="46">GDK_SHIFT_MASK</name><op:operator pos:line="2199" pos:column="60">)</op:operator> <op:operator pos:line="2199" pos:column="62">!=</op:operator> <lit:literal type="number" pos:line="2199" pos:column="65">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2200" pos:column="17">bool</name></type> <name pos:line="2200" pos:column="22">ctrl</name> <init pos:line="2200" pos:column="27">= <expr><op:operator pos:line="2200" pos:column="29">(</op:operator><name><name pos:line="2200" pos:column="30">event</name><op:operator pos:line="2200" pos:column="35">-&gt;</op:operator><name pos:line="2200" pos:column="37">state</name></name> <op:operator pos:line="2200" pos:column="43">&amp;</op:operator> <name pos:line="2200" pos:column="45">GDK_CONTROL_MASK</name><op:operator pos:line="2200" pos:column="61">)</op:operator> <op:operator pos:line="2200" pos:column="63">!=</op:operator> <lit:literal type="number" pos:line="2200" pos:column="66">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2201" pos:column="17">bool</name></type> <name pos:line="2201" pos:column="22">alt</name> <init pos:line="2201" pos:column="26">= <expr><op:operator pos:line="2201" pos:column="28">(</op:operator><name><name pos:line="2201" pos:column="29">event</name><op:operator pos:line="2201" pos:column="34">-&gt;</op:operator><name pos:line="2201" pos:column="36">state</name></name> <op:operator pos:line="2201" pos:column="42">&amp;</op:operator> <name pos:line="2201" pos:column="44">GDK_MOD1_MASK</name><op:operator pos:line="2201" pos:column="57">)</op:operator> <op:operator pos:line="2201" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="2201" pos:column="62">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2202" pos:column="17">guint</name></type> <name pos:line="2202" pos:column="23">key</name> <init pos:line="2202" pos:column="27">= <expr><name><name pos:line="2202" pos:column="29">event</name><op:operator pos:line="2202" pos:column="34">-&gt;</op:operator><name pos:line="2202" pos:column="36">keyval</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="2203" pos:column="17">if <condition pos:line="2203" pos:column="20">(<expr><name pos:line="2203" pos:column="21">ctrl</name> <op:operator pos:line="2203" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2203" pos:column="29">(</op:operator><name pos:line="2203" pos:column="30">key</name> <op:operator pos:line="2203" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="2203" pos:column="36">128</lit:literal><op:operator pos:line="2203" pos:column="39">)</op:operator></expr>)</condition><then pos:line="2203" pos:column="41">
			<expr_stmt><expr><name pos:line="2204" pos:column="25">key</name> <op:operator pos:line="2204" pos:column="29">=</op:operator> <call><name pos:line="2204" pos:column="31">toupper</name><argument_list pos:line="2204" pos:column="38">(<argument><expr><name pos:line="2204" pos:column="39">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
<cpp:if pos:line="2205" pos:column="1">#<cpp:directive pos:line="2205" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2205" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2205" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2205" pos:column="23">3</lit:literal><op:operator pos:line="2205" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2205" pos:column="25">0</lit:literal><op:operator pos:line="2205" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2205" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<else pos:line="2206" pos:column="17">else <if pos:line="2206" pos:column="22">if <condition pos:line="2206" pos:column="25">(<expr><op:operator pos:line="2206" pos:column="26">!</op:operator><name pos:line="2206" pos:column="27">ctrl</name> <op:operator pos:line="2206" pos:column="32">&amp;&amp;</op:operator> <op:operator pos:line="2206" pos:column="35">(</op:operator><name pos:line="2206" pos:column="36">key</name> <op:operator pos:line="2206" pos:column="40">&gt;=</op:operator> <name pos:line="2206" pos:column="43">GDK_KEY_KP_Multiply</name> <op:operator pos:line="2206" pos:column="63">&amp;&amp;</op:operator> <name pos:line="2206" pos:column="66">key</name> <op:operator pos:line="2206" pos:column="70">&lt;=</op:operator> <name pos:line="2206" pos:column="73">GDK_KEY_KP_9</name><op:operator pos:line="2206" pos:column="85">)</op:operator></expr>)</condition><then pos:line="2206" pos:column="87">
<cpp:else pos:line="2207" pos:column="1">#<cpp:directive pos:line="2207" pos:column="2">else</cpp:directive></cpp:else>
		<else pos:line="2208" pos:column="17">else <if pos:line="2208" pos:column="22">if <condition pos:line="2208" pos:column="25">(<expr><op:operator pos:line="2208" pos:column="26">!</op:operator><name pos:line="2208" pos:column="27">ctrl</name> <op:operator pos:line="2208" pos:column="32">&amp;&amp;</op:operator> <op:operator pos:line="2208" pos:column="35">(</op:operator><name pos:line="2208" pos:column="36">key</name> <op:operator pos:line="2208" pos:column="40">&gt;=</op:operator> <name pos:line="2208" pos:column="43">GDK_KP_Multiply</name> <op:operator pos:line="2208" pos:column="59">&amp;&amp;</op:operator> <name pos:line="2208" pos:column="62">key</name> <op:operator pos:line="2208" pos:column="66">&lt;=</op:operator> <name pos:line="2208" pos:column="69">GDK_KP_9</name><op:operator pos:line="2208" pos:column="77">)</op:operator></expr>)</condition><then pos:line="2208" pos:column="79">
<cpp:endif pos:line="2209" pos:column="1">#<cpp:directive pos:line="2209" pos:column="2">endif</cpp:directive></cpp:endif>
			<expr_stmt><expr><name pos:line="2210" pos:column="25">key</name> <op:operator pos:line="2210" pos:column="29">&amp;=</op:operator> <lit:literal type="number" pos:line="2210" pos:column="32">0x7F</lit:literal></expr>;</expr_stmt></then>
		<comment type="line" pos:line="2211" pos:column="17">// Hack for keys over 256 and below command keys but makes Hungarian work.</comment>
		<comment type="line" pos:line="2212" pos:column="17">// This will have to change for Unicode</comment>
		<else pos:line="2213" pos:column="17">else <if pos:line="2213" pos:column="22">if <condition pos:line="2213" pos:column="25">(<expr><name pos:line="2213" pos:column="26">key</name> <op:operator pos:line="2213" pos:column="30">&gt;=</op:operator> <lit:literal type="number" pos:line="2213" pos:column="33">0xFE00</lit:literal></expr>)</condition><then pos:line="2213" pos:column="40">
			<expr_stmt><expr><name pos:line="2214" pos:column="25">key</name> <op:operator pos:line="2214" pos:column="29">=</op:operator> <call><name pos:line="2214" pos:column="31">KeyTranslate</name><argument_list pos:line="2214" pos:column="43">(<argument><expr><name pos:line="2214" pos:column="44">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if></else></then></if></else></if>

		<decl_stmt><decl><type><name pos:line="2216" pos:column="17">bool</name></type> <name pos:line="2216" pos:column="22">consumed</name> <init pos:line="2216" pos:column="31">= <expr><lit:literal type="boolean" pos:line="2216" pos:column="33">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2217" pos:column="17">bool</name></type> <name pos:line="2217" pos:column="22">added</name> <init pos:line="2217" pos:column="28">= <expr><call><name pos:line="2217" pos:column="30">KeyDown</name><argument_list pos:line="2217" pos:column="37">(<argument><expr><name pos:line="2217" pos:column="38">key</name></expr></argument>, <argument><expr><name pos:line="2217" pos:column="43">shift</name></expr></argument>, <argument><expr><name pos:line="2217" pos:column="50">ctrl</name></expr></argument>, <argument><expr><name pos:line="2217" pos:column="56">alt</name></expr></argument>, <argument><expr><op:operator pos:line="2217" pos:column="61">&amp;</op:operator><name pos:line="2217" pos:column="62">consumed</name></expr></argument>)</argument_list></call> <op:operator pos:line="2217" pos:column="72">!=</op:operator> <lit:literal type="number" pos:line="2217" pos:column="75">0</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="2218" pos:column="17">if <condition pos:line="2218" pos:column="20">(<expr><op:operator pos:line="2218" pos:column="21">!</op:operator><name pos:line="2218" pos:column="22">consumed</name></expr>)</condition><then pos:line="2218" pos:column="31">
			<expr_stmt><expr><name pos:line="2219" pos:column="25">consumed</name> <op:operator pos:line="2219" pos:column="34">=</op:operator> <name pos:line="2219" pos:column="36">added</name></expr>;</expr_stmt></then></if>
		<comment type="line" pos:line="2220" pos:column="17">//fprintf(stderr, "SK-key: %d %x %x\n",event-&gt;keyval, event-&gt;state, consumed);</comment>
		<if pos:line="2221" pos:column="17">if <condition pos:line="2221" pos:column="20">(<expr><name><name pos:line="2221" pos:column="21">event</name><op:operator pos:line="2221" pos:column="26">-&gt;</op:operator><name pos:line="2221" pos:column="28">keyval</name></name> <op:operator pos:line="2221" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="2221" pos:column="38">0xffffff</lit:literal> <op:operator pos:line="2221" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="2221" pos:column="50">event</name><op:operator pos:line="2221" pos:column="55">-&gt;</op:operator><name pos:line="2221" pos:column="57">length</name></name> <op:operator pos:line="2221" pos:column="64">&gt;</op:operator> <lit:literal type="number" pos:line="2221" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="2221" pos:column="68"> <block pos:line="2221" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="2222" pos:column="25">ClearSelection</name><argument_list pos:line="2222" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2223" pos:column="25">if <condition pos:line="2223" pos:column="28">(<expr><call><name><name pos:line="2223" pos:column="29">pdoc</name><op:operator pos:line="2223" pos:column="33">-&gt;</op:operator><name pos:line="2223" pos:column="35">InsertCString</name></name><argument_list pos:line="2223" pos:column="48">(<argument><expr><call><name pos:line="2223" pos:column="49">CurrentPosition</name><argument_list pos:line="2223" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2223" pos:column="68">event</name><op:operator pos:line="2223" pos:column="73">-&gt;</op:operator><name pos:line="2223" pos:column="75">string</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2223" pos:column="83"> <block pos:line="2223" pos:column="84">{
				<expr_stmt><expr><call><name pos:line="2224" pos:column="33">MovePositionTo</name><argument_list pos:line="2224" pos:column="47">(<argument><expr><call><name pos:line="2224" pos:column="48">CurrentPosition</name><argument_list pos:line="2224" pos:column="63">()</argument_list></call> <op:operator pos:line="2224" pos:column="66">+</op:operator> <name><name pos:line="2224" pos:column="68">event</name><op:operator pos:line="2224" pos:column="73">-&gt;</op:operator><name pos:line="2224" pos:column="75">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<return pos:line="2227" pos:column="17">return <expr><name pos:line="2227" pos:column="24">consumed</name></expr>;</return>
	}</block> <catch pos:line="2228" pos:column="11">catch <parameter_list pos:line="2228" pos:column="17">(<param><decl><type><type:modifier pos:line="2228" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2228" pos:column="23">{
		<expr_stmt><expr><name pos:line="2229" pos:column="17">errorStatus</name> <op:operator pos:line="2229" pos:column="29">=</op:operator> <name pos:line="2229" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2231" pos:column="9">return <expr><name pos:line="2231" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2234" pos:column="1">gboolean</name></type> <name><name pos:line="2234" pos:column="10">ScintillaGTK</name><op:operator pos:line="2234" pos:column="22">::</op:operator><name pos:line="2234" pos:column="24">KeyPress</name></name><parameter_list pos:line="2234" pos:column="32">(<param><decl><type><name pos:line="2234" pos:column="33">GtkWidget</name> <type:modifier pos:line="2234" pos:column="43">*</type:modifier></type><name pos:line="2234" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="2234" pos:column="52">GdkEventKey</name> <type:modifier pos:line="2234" pos:column="64">*</type:modifier></type><name pos:line="2234" pos:column="65">event</name></decl></param>)</parameter_list> <block pos:line="2234" pos:column="72">{
	<decl_stmt><decl><type><name pos:line="2235" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2235" pos:column="22">*</type:modifier></type><name pos:line="2235" pos:column="23">sciThis</name> <init pos:line="2235" pos:column="31">= <expr><call><name pos:line="2235" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2235" pos:column="52">(<argument><expr><name pos:line="2235" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="2236" pos:column="9">return <expr><call><name><name pos:line="2236" pos:column="16">sciThis</name><op:operator pos:line="2236" pos:column="23">-&gt;</op:operator><name pos:line="2236" pos:column="25">KeyThis</name></name><argument_list pos:line="2236" pos:column="32">(<argument><expr><name pos:line="2236" pos:column="33">event</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2239" pos:column="1">gboolean</name></type> <name><name pos:line="2239" pos:column="10">ScintillaGTK</name><op:operator pos:line="2239" pos:column="22">::</op:operator><name pos:line="2239" pos:column="24">KeyRelease</name></name><parameter_list pos:line="2239" pos:column="34">(<param><decl><type><name pos:line="2239" pos:column="35">GtkWidget</name> <type:modifier pos:line="2239" pos:column="45">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2239" pos:column="48">GdkEventKey</name> <type:modifier pos:line="2239" pos:column="60">*</type:modifier></type></decl></param> <comment type="block" pos:line="2239" pos:column="62">/*event*/</comment>)</parameter_list> <block pos:line="2239" pos:column="73">{
	<comment type="line" pos:line="2240" pos:column="9">//Platform::DebugPrintf("SC-keyrel: %d %x %3s\n",event-&gt;keyval, event-&gt;state, event-&gt;string);</comment>
	<return pos:line="2241" pos:column="9">return <expr><name pos:line="2241" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2244" pos:column="1">gboolean</name></type> <name><name pos:line="2244" pos:column="10">ScintillaGTK</name><op:operator pos:line="2244" pos:column="22">::</op:operator><name pos:line="2244" pos:column="24">ExposePreeditThis</name></name><parameter_list pos:line="2244" pos:column="41">(<param><decl><type><name pos:line="2244" pos:column="42">GtkWidget</name> <type:modifier pos:line="2244" pos:column="52">*</type:modifier></type><name pos:line="2244" pos:column="53">widget</name></decl></param>, <param><decl><type><name pos:line="2244" pos:column="61">GdkEventExpose</name> <type:modifier pos:line="2244" pos:column="76">*</type:modifier></type><name pos:line="2244" pos:column="77">ose</name></decl></param>)</parameter_list> <block pos:line="2244" pos:column="82">{
	<try pos:line="2245" pos:column="9">try <block pos:line="2245" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2246" pos:column="17">gchar</name> <type:modifier pos:line="2246" pos:column="23">*</type:modifier></type><name pos:line="2246" pos:column="24">str</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2247" pos:column="17">gint</name></type> <name pos:line="2247" pos:column="22">cursor_pos</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2248" pos:column="17">PangoAttrList</name> <type:modifier pos:line="2248" pos:column="31">*</type:modifier></type><name pos:line="2248" pos:column="32">attrs</name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name pos:line="2250" pos:column="17">gtk_im_context_get_preedit_string</name><argument_list pos:line="2250" pos:column="50">(<argument><expr><name pos:line="2250" pos:column="51">im_context</name></expr></argument>, <argument><expr><op:operator pos:line="2250" pos:column="63">&amp;</op:operator><name pos:line="2250" pos:column="64">str</name></expr></argument>, <argument><expr><op:operator pos:line="2250" pos:column="69">&amp;</op:operator><name pos:line="2250" pos:column="70">attrs</name></expr></argument>, <argument><expr><op:operator pos:line="2250" pos:column="77">&amp;</op:operator><name pos:line="2250" pos:column="78">cursor_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2251" pos:column="17">PangoLayout</name> <type:modifier pos:line="2251" pos:column="29">*</type:modifier></type><name pos:line="2251" pos:column="30">layout</name> <init pos:line="2251" pos:column="37">= <expr><call><name pos:line="2251" pos:column="39">gtk_widget_create_pango_layout</name><argument_list pos:line="2251" pos:column="69">(<argument><expr><call><name pos:line="2251" pos:column="70">PWidget</name><argument_list pos:line="2251" pos:column="77">(<argument><expr><name pos:line="2251" pos:column="78">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2251" pos:column="86">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2252" pos:column="17">pango_layout_set_attributes</name><argument_list pos:line="2252" pos:column="44">(<argument><expr><name pos:line="2252" pos:column="45">layout</name></expr></argument>, <argument><expr><name pos:line="2252" pos:column="53">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifndef pos:line="2254" pos:column="1">#<cpp:directive pos:line="2254" pos:column="2">ifndef</cpp:directive> <name pos:line="2254" pos:column="9">USE_CAIRO</name></cpp:ifndef>
		<decl_stmt><decl><type><name pos:line="2255" pos:column="17">GdkGC</name> <type:modifier pos:line="2255" pos:column="23">*</type:modifier></type><name pos:line="2255" pos:column="24">gc</name> <init pos:line="2255" pos:column="27">= <expr><call><name pos:line="2255" pos:column="29">gdk_gc_new</name><argument_list pos:line="2255" pos:column="39">(<argument><expr><name><name pos:line="2255" pos:column="40">widget</name><op:operator pos:line="2255" pos:column="46">-&gt;</op:operator><name pos:line="2255" pos:column="48">window</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2256" pos:column="17">GdkColor</name></type> <name><name pos:line="2256" pos:column="26">color</name><index pos:line="2256" pos:column="31">[<expr><lit:literal type="number" pos:line="2256" pos:column="32">2</lit:literal></expr>]</index></name> <init pos:line="2256" pos:column="35">= <expr><block pos:line="2256" pos:column="37">{   <expr><block pos:line="2256" pos:column="41">{<expr><lit:literal type="number" pos:line="2256" pos:column="42">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2256" pos:column="45">0x0000</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2256" pos:column="53">0x0000</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2256" pos:column="61">0x0000</lit:literal></expr>}</block></expr>,
			<expr><block pos:line="2257" pos:column="25">{<expr><lit:literal type="number" pos:line="2257" pos:column="26">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2257" pos:column="29">0xffff</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2257" pos:column="37">0xffff</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2257" pos:column="45">0xffff</lit:literal></expr>}</block></expr>
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2259" pos:column="17">gdk_colormap_alloc_color</name><argument_list pos:line="2259" pos:column="41">(<argument><expr><call><name pos:line="2259" pos:column="42">gdk_colormap_get_system</name><argument_list pos:line="2259" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2259" pos:column="69">color</name></expr></argument>, <argument><expr><name pos:line="2259" pos:column="76">FALSE</name></expr></argument>, <argument><expr><name pos:line="2259" pos:column="83">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2260" pos:column="17">gdk_colormap_alloc_color</name><argument_list pos:line="2260" pos:column="41">(<argument><expr><call><name pos:line="2260" pos:column="42">gdk_colormap_get_system</name><argument_list pos:line="2260" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2260" pos:column="69">color</name> <op:operator pos:line="2260" pos:column="75">+</op:operator> <lit:literal type="number" pos:line="2260" pos:column="77">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2260" pos:column="80">FALSE</name></expr></argument>, <argument><expr><name pos:line="2260" pos:column="87">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="2262" pos:column="17">gdk_gc_set_foreground</name><argument_list pos:line="2262" pos:column="38">(<argument><expr><name pos:line="2262" pos:column="39">gc</name></expr></argument>, <argument><expr><name pos:line="2262" pos:column="43">color</name> <op:operator pos:line="2262" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="2262" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2263" pos:column="17">gdk_draw_rectangle</name><argument_list pos:line="2263" pos:column="35">(<argument><expr><name><name pos:line="2263" pos:column="36">widget</name><op:operator pos:line="2263" pos:column="42">-&gt;</op:operator><name pos:line="2263" pos:column="44">window</name></name></expr></argument>, <argument><expr><name pos:line="2263" pos:column="52">gc</name></expr></argument>, <argument><expr><name pos:line="2263" pos:column="56">TRUE</name></expr></argument>, <argument><expr><name><name pos:line="2263" pos:column="62">ose</name><op:operator pos:line="2263" pos:column="65">-&gt;</op:operator><name pos:line="2263" pos:column="67">area</name><op:operator pos:line="2263" pos:column="71">.</op:operator><name pos:line="2263" pos:column="72">x</name></name></expr></argument>, <argument><expr><name><name pos:line="2263" pos:column="75">ose</name><op:operator pos:line="2263" pos:column="78">-&gt;</op:operator><name pos:line="2263" pos:column="80">area</name><op:operator pos:line="2263" pos:column="84">.</op:operator><name pos:line="2263" pos:column="85">y</name></name></expr></argument>,
		        <argument><expr><name><name pos:line="2264" pos:column="25">ose</name><op:operator pos:line="2264" pos:column="28">-&gt;</op:operator><name pos:line="2264" pos:column="30">area</name><op:operator pos:line="2264" pos:column="34">.</op:operator><name pos:line="2264" pos:column="35">width</name></name></expr></argument>, <argument><expr><name><name pos:line="2264" pos:column="42">ose</name><op:operator pos:line="2264" pos:column="45">-&gt;</op:operator><name pos:line="2264" pos:column="47">area</name><op:operator pos:line="2264" pos:column="51">.</op:operator><name pos:line="2264" pos:column="52">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="2266" pos:column="17">gdk_gc_set_foreground</name><argument_list pos:line="2266" pos:column="38">(<argument><expr><name pos:line="2266" pos:column="39">gc</name></expr></argument>, <argument><expr><name pos:line="2266" pos:column="43">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2267" pos:column="17">gdk_gc_set_background</name><argument_list pos:line="2267" pos:column="38">(<argument><expr><name pos:line="2267" pos:column="39">gc</name></expr></argument>, <argument><expr><name pos:line="2267" pos:column="43">color</name> <op:operator pos:line="2267" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="2267" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2268" pos:column="17">gdk_draw_layout</name><argument_list pos:line="2268" pos:column="32">(<argument><expr><name><name pos:line="2268" pos:column="33">widget</name><op:operator pos:line="2268" pos:column="39">-&gt;</op:operator><name pos:line="2268" pos:column="41">window</name></name></expr></argument>, <argument><expr><name pos:line="2268" pos:column="49">gc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2268" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2268" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2268" pos:column="59">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2269" pos:column="17">g_object_unref</name><argument_list pos:line="2269" pos:column="31">(<argument><expr><name pos:line="2269" pos:column="32">gc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2270" pos:column="1">#<cpp:directive pos:line="2270" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="2271" pos:column="17">g_free</name><argument_list pos:line="2271" pos:column="23">(<argument><expr><name pos:line="2271" pos:column="24">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2272" pos:column="17">pango_attr_list_unref</name><argument_list pos:line="2272" pos:column="38">(<argument><expr><name pos:line="2272" pos:column="39">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2273" pos:column="17">g_object_unref</name><argument_list pos:line="2273" pos:column="31">(<argument><expr><name pos:line="2273" pos:column="32">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2274" pos:column="11">catch <parameter_list pos:line="2274" pos:column="17">(<param><decl><type><type:modifier pos:line="2274" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2274" pos:column="23">{
		<expr_stmt><expr><name pos:line="2275" pos:column="17">errorStatus</name> <op:operator pos:line="2275" pos:column="29">=</op:operator> <name pos:line="2275" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2277" pos:column="9">return <expr><name pos:line="2277" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2280" pos:column="1">gboolean</name></type> <name><name pos:line="2280" pos:column="10">ScintillaGTK</name><op:operator pos:line="2280" pos:column="22">::</op:operator><name pos:line="2280" pos:column="24">ExposePreedit</name></name><parameter_list pos:line="2280" pos:column="37">(<param><decl><type><name pos:line="2280" pos:column="38">GtkWidget</name> <type:modifier pos:line="2280" pos:column="48">*</type:modifier></type><name pos:line="2280" pos:column="49">widget</name></decl></param>, <param><decl><type><name pos:line="2280" pos:column="57">GdkEventExpose</name> <type:modifier pos:line="2280" pos:column="72">*</type:modifier></type><name pos:line="2280" pos:column="73">ose</name></decl></param>, <param><decl><type><name pos:line="2280" pos:column="78">ScintillaGTK</name> <type:modifier pos:line="2280" pos:column="91">*</type:modifier></type><name pos:line="2280" pos:column="92">sciThis</name></decl></param>)</parameter_list> <block pos:line="2280" pos:column="101">{
	<return pos:line="2281" pos:column="9">return <expr><call><name><name pos:line="2281" pos:column="16">sciThis</name><op:operator pos:line="2281" pos:column="23">-&gt;</op:operator><name pos:line="2281" pos:column="25">ExposePreeditThis</name></name><argument_list pos:line="2281" pos:column="42">(<argument><expr><name pos:line="2281" pos:column="43">widget</name></expr></argument>, <argument><expr><name pos:line="2281" pos:column="51">ose</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2284" pos:column="1">void</name></type> <name><name pos:line="2284" pos:column="6">ScintillaGTK</name><op:operator pos:line="2284" pos:column="18">::</op:operator><name pos:line="2284" pos:column="20">CommitThis</name></name><parameter_list pos:line="2284" pos:column="30">(<param><decl><type><name pos:line="2284" pos:column="31">char</name> <type:modifier pos:line="2284" pos:column="36">*</type:modifier></type><name pos:line="2284" pos:column="37">utfVal</name></decl></param>)</parameter_list> <block pos:line="2284" pos:column="45">{
	<try pos:line="2285" pos:column="9">try <block pos:line="2285" pos:column="13">{
		<comment type="line" pos:line="2286" pos:column="17">//~ fprintf(stderr, "Commit '%s'\n", utfVal);</comment>
		<if pos:line="2287" pos:column="17">if <condition pos:line="2287" pos:column="20">(<expr><call><name pos:line="2287" pos:column="21">IsUnicodeMode</name><argument_list pos:line="2287" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="2287" pos:column="37"> <block pos:line="2287" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="2288" pos:column="25">AddCharUTF</name><argument_list pos:line="2288" pos:column="35">(<argument><expr><name pos:line="2288" pos:column="36">utfVal</name></expr></argument>, <argument><expr><call><name pos:line="2288" pos:column="44">strlen</name><argument_list pos:line="2288" pos:column="50">(<argument><expr><name pos:line="2288" pos:column="51">utfVal</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2289" pos:column="19">else <block pos:line="2289" pos:column="24">{
			<decl_stmt><decl><type><specifier pos:line="2290" pos:column="25">const</specifier> <name pos:line="2290" pos:column="31">char</name> <type:modifier pos:line="2290" pos:column="36">*</type:modifier></type><name pos:line="2290" pos:column="37">source</name> <init pos:line="2290" pos:column="44">= <expr><call><name pos:line="2290" pos:column="46">CharacterSetID</name><argument_list pos:line="2290" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2291" pos:column="25">if <condition pos:line="2291" pos:column="28">(<expr><op:operator pos:line="2291" pos:column="29">*</op:operator><name pos:line="2291" pos:column="30">source</name></expr>)</condition><then pos:line="2291" pos:column="37"> <block pos:line="2291" pos:column="38">{
				<decl_stmt><decl><type><name pos:line="2292" pos:column="33">Converter</name></type> <name pos:line="2292" pos:column="43">conv</name><argument_list pos:line="2292" pos:column="47">(<argument><expr><name pos:line="2292" pos:column="48">source</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2292" pos:column="56">"UTF-8"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2292" pos:column="65">true</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
				<if pos:line="2293" pos:column="33">if <condition pos:line="2293" pos:column="36">(<expr><name pos:line="2293" pos:column="37">conv</name></expr>)</condition><then pos:line="2293" pos:column="42"> <block pos:line="2293" pos:column="43">{
					<decl_stmt><decl><type><name pos:line="2294" pos:column="41">char</name></type> <name><name pos:line="2294" pos:column="46">localeVal</name><index pos:line="2294" pos:column="55">[<expr><lit:literal type="number" pos:line="2294" pos:column="56">4</lit:literal></expr>]</index></name> <init pos:line="2294" pos:column="59">= <expr><lit:literal type="string" pos:line="2294" pos:column="61">"\0\0\0"</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2295" pos:column="41">char</name> <type:modifier pos:line="2295" pos:column="46">*</type:modifier></type><name pos:line="2295" pos:column="47">pin</name> <init pos:line="2295" pos:column="51">= <expr><name pos:line="2295" pos:column="53">utfVal</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2296" pos:column="41">size_t</name></type> <name pos:line="2296" pos:column="48">inLeft</name> <init pos:line="2296" pos:column="55">= <expr><call><name pos:line="2296" pos:column="57">strlen</name><argument_list pos:line="2296" pos:column="63">(<argument><expr><name pos:line="2296" pos:column="64">utfVal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2297" pos:column="41">char</name> <type:modifier pos:line="2297" pos:column="46">*</type:modifier></type><name pos:line="2297" pos:column="47">pout</name> <init pos:line="2297" pos:column="52">= <expr><name pos:line="2297" pos:column="54">localeVal</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2298" pos:column="41">size_t</name></type> <name pos:line="2298" pos:column="48">outLeft</name> <init pos:line="2298" pos:column="56">= <expr><sizeof pos:line="2298" pos:column="58">sizeof<argument_list pos:line="2298" pos:column="64">(<argument><expr><name pos:line="2298" pos:column="65">localeVal</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2299" pos:column="41">size_t</name></type> <name pos:line="2299" pos:column="48">conversions</name> <init pos:line="2299" pos:column="60">= <expr><call><name><name pos:line="2299" pos:column="62">conv</name><op:operator pos:line="2299" pos:column="66">.</op:operator><name pos:line="2299" pos:column="67">Convert</name></name><argument_list pos:line="2299" pos:column="74">(<argument><expr><op:operator pos:line="2299" pos:column="75">&amp;</op:operator><name pos:line="2299" pos:column="76">pin</name></expr></argument>, <argument><expr><op:operator pos:line="2299" pos:column="81">&amp;</op:operator><name pos:line="2299" pos:column="82">inLeft</name></expr></argument>, <argument><expr><op:operator pos:line="2299" pos:column="90">&amp;</op:operator><name pos:line="2299" pos:column="91">pout</name></expr></argument>, <argument><expr><op:operator pos:line="2299" pos:column="97">&amp;</op:operator><name pos:line="2299" pos:column="98">outLeft</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="2300" pos:column="41">if <condition pos:line="2300" pos:column="44">(<expr><name pos:line="2300" pos:column="45">conversions</name> <op:operator pos:line="2300" pos:column="57">!=</op:operator> <op:operator pos:line="2300" pos:column="60">(</op:operator><call pos:line="2300" pos:column="61">(<name pos:line="2300" pos:column="62">size_t</name>)<argument_list pos:line="2300" pos:column="69">(<argument><expr><op:operator pos:line="2300" pos:column="70">-</op:operator><lit:literal type="number" pos:line="2300" pos:column="71">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2300" pos:column="73">)</op:operator></expr>)</condition><then pos:line="2300" pos:column="75"> <block pos:line="2300" pos:column="76">{
						<expr_stmt><expr><op:operator pos:line="2301" pos:column="49">*</op:operator><name pos:line="2301" pos:column="50">pout</name> <op:operator pos:line="2301" pos:column="55">=</op:operator> <lit:literal type="char" pos:line="2301" pos:column="57">'\0'</lit:literal></expr>;</expr_stmt>
						<for pos:line="2302" pos:column="49">for (<init><decl><type><name pos:line="2302" pos:column="54">int</name></type> <name pos:line="2302" pos:column="58">i</name> <init pos:line="2302" pos:column="60">= <expr><lit:literal type="number" pos:line="2302" pos:column="62">0</lit:literal></expr></init></decl>;</init> <condition><expr><name><name pos:line="2302" pos:column="65">localeVal</name><index pos:line="2302" pos:column="74">[<expr><name pos:line="2302" pos:column="75">i</name></expr>]</index></name></expr>;</condition> <incr><expr><name pos:line="2302" pos:column="79">i</name><op:operator pos:line="2302" pos:column="80">++</op:operator></expr></incr>) <block pos:line="2302" pos:column="84">{
							<expr_stmt><expr><call><name pos:line="2303" pos:column="57">AddChar</name><argument_list pos:line="2303" pos:column="64">(<argument><expr><name><name pos:line="2303" pos:column="65">localeVal</name><index pos:line="2303" pos:column="74">[<expr><name pos:line="2303" pos:column="75">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></for>
					}</block></then> <else pos:line="2305" pos:column="43">else <block pos:line="2305" pos:column="48">{
						<expr_stmt><expr><call><name pos:line="2306" pos:column="49">fprintf</name><argument_list pos:line="2306" pos:column="56">(<argument><expr><name pos:line="2306" pos:column="57">stderr</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2306" pos:column="65">"Conversion failed '%s'\n"</lit:literal></expr></argument>, <argument><expr><name pos:line="2306" pos:column="93">utfVal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></else></if>
	}</block> <catch pos:line="2311" pos:column="11">catch <parameter_list pos:line="2311" pos:column="17">(<param><decl><type><type:modifier pos:line="2311" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2311" pos:column="23">{
		<expr_stmt><expr><name pos:line="2312" pos:column="17">errorStatus</name> <op:operator pos:line="2312" pos:column="29">=</op:operator> <name pos:line="2312" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2316" pos:column="1">void</name></type> <name><name pos:line="2316" pos:column="6">ScintillaGTK</name><op:operator pos:line="2316" pos:column="18">::</op:operator><name pos:line="2316" pos:column="20">Commit</name></name><parameter_list pos:line="2316" pos:column="26">(<param><decl><type><name pos:line="2316" pos:column="27">GtkIMContext</name> <type:modifier pos:line="2316" pos:column="40">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2316" pos:column="43">char</name>  <type:modifier pos:line="2316" pos:column="49">*</type:modifier></type><name pos:line="2316" pos:column="50">str</name></decl></param>, <param><decl><type><name pos:line="2316" pos:column="55">ScintillaGTK</name> <type:modifier pos:line="2316" pos:column="68">*</type:modifier></type><name pos:line="2316" pos:column="69">sciThis</name></decl></param>)</parameter_list> <block pos:line="2316" pos:column="78">{
	<expr_stmt><expr><call><name><name pos:line="2317" pos:column="9">sciThis</name><op:operator pos:line="2317" pos:column="16">-&gt;</op:operator><name pos:line="2317" pos:column="18">CommitThis</name></name><argument_list pos:line="2317" pos:column="28">(<argument><expr><name pos:line="2317" pos:column="29">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2320" pos:column="1">void</name></type> <name><name pos:line="2320" pos:column="6">ScintillaGTK</name><op:operator pos:line="2320" pos:column="18">::</op:operator><name pos:line="2320" pos:column="20">PreeditChangedThis</name></name><parameter_list pos:line="2320" pos:column="38">()</parameter_list> <block pos:line="2320" pos:column="41">{
	<try pos:line="2321" pos:column="9">try <block pos:line="2321" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2322" pos:column="17">gchar</name> <type:modifier pos:line="2322" pos:column="23">*</type:modifier></type><name pos:line="2322" pos:column="24">str</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2323" pos:column="17">PangoAttrList</name> <type:modifier pos:line="2323" pos:column="31">*</type:modifier></type><name pos:line="2323" pos:column="32">attrs</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2324" pos:column="17">gint</name></type> <name pos:line="2324" pos:column="22">cursor_pos</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2325" pos:column="17">gtk_im_context_get_preedit_string</name><argument_list pos:line="2325" pos:column="50">(<argument><expr><name pos:line="2325" pos:column="51">im_context</name></expr></argument>, <argument><expr><op:operator pos:line="2325" pos:column="63">&amp;</op:operator><name pos:line="2325" pos:column="64">str</name></expr></argument>, <argument><expr><op:operator pos:line="2325" pos:column="69">&amp;</op:operator><name pos:line="2325" pos:column="70">attrs</name></expr></argument>, <argument><expr><op:operator pos:line="2325" pos:column="77">&amp;</op:operator><name pos:line="2325" pos:column="78">cursor_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2326" pos:column="17">if <condition pos:line="2326" pos:column="20">(<expr><call><name pos:line="2326" pos:column="21">strlen</name><argument_list pos:line="2326" pos:column="27">(<argument><expr><name pos:line="2326" pos:column="28">str</name></expr></argument>)</argument_list></call> <op:operator pos:line="2326" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="2326" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="2326" pos:column="37"> <block pos:line="2326" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="2327" pos:column="25">PangoLayout</name> <type:modifier pos:line="2327" pos:column="37">*</type:modifier></type><name pos:line="2327" pos:column="38">layout</name> <init pos:line="2327" pos:column="45">= <expr><call><name pos:line="2327" pos:column="47">gtk_widget_create_pango_layout</name><argument_list pos:line="2327" pos:column="77">(<argument><expr><call><name pos:line="2327" pos:column="78">PWidget</name><argument_list pos:line="2327" pos:column="85">(<argument><expr><name pos:line="2327" pos:column="86">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2327" pos:column="94">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2328" pos:column="25">pango_layout_set_attributes</name><argument_list pos:line="2328" pos:column="52">(<argument><expr><name pos:line="2328" pos:column="53">layout</name></expr></argument>, <argument><expr><name pos:line="2328" pos:column="61">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2330" pos:column="25">gint</name></type> <name pos:line="2330" pos:column="30">w</name></decl><op:operator pos:line="2330" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="2330" pos:column="33">h</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2331" pos:column="25">pango_layout_get_pixel_size</name><argument_list pos:line="2331" pos:column="52">(<argument><expr><name pos:line="2331" pos:column="53">layout</name></expr></argument>, <argument><expr><op:operator pos:line="2331" pos:column="61">&amp;</op:operator><name pos:line="2331" pos:column="62">w</name></expr></argument>, <argument><expr><op:operator pos:line="2331" pos:column="65">&amp;</op:operator><name pos:line="2331" pos:column="66">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2332" pos:column="25">g_object_unref</name><argument_list pos:line="2332" pos:column="39">(<argument><expr><name pos:line="2332" pos:column="40">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2334" pos:column="25">gint</name></type> <name pos:line="2334" pos:column="30">x</name></decl><op:operator pos:line="2334" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="2334" pos:column="33">y</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2335" pos:column="25">gdk_window_get_origin</name><argument_list pos:line="2335" pos:column="46">(<argument><expr><call><name pos:line="2335" pos:column="47">PWindow</name><argument_list pos:line="2335" pos:column="54">(<argument><expr><name pos:line="2335" pos:column="55">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2335" pos:column="63">&amp;</op:operator><name pos:line="2335" pos:column="64">x</name></expr></argument>, <argument><expr><op:operator pos:line="2335" pos:column="67">&amp;</op:operator><name pos:line="2335" pos:column="68">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2337" pos:column="25">Point</name></type> <name pos:line="2337" pos:column="31">pt</name> <init pos:line="2337" pos:column="34">= <expr><call><name pos:line="2337" pos:column="36">PointMainCaret</name><argument_list pos:line="2337" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2338" pos:column="25">if <condition pos:line="2338" pos:column="28">(<expr><name><name pos:line="2338" pos:column="29">pt</name><op:operator pos:line="2338" pos:column="31">.</op:operator><name pos:line="2338" pos:column="32">x</name></name> <op:operator pos:line="2338" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="2338" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="2338" pos:column="38">
				<expr_stmt><expr><name><name pos:line="2339" pos:column="33">pt</name><op:operator pos:line="2339" pos:column="35">.</op:operator><name pos:line="2339" pos:column="36">x</name></name> <op:operator pos:line="2339" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="2339" pos:column="40">0</lit:literal></expr>;</expr_stmt></then></if>
			<if pos:line="2340" pos:column="25">if <condition pos:line="2340" pos:column="28">(<expr><name><name pos:line="2340" pos:column="29">pt</name><op:operator pos:line="2340" pos:column="31">.</op:operator><name pos:line="2340" pos:column="32">y</name></name> <op:operator pos:line="2340" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="2340" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="2340" pos:column="38">
				<expr_stmt><expr><name><name pos:line="2341" pos:column="33">pt</name><op:operator pos:line="2341" pos:column="35">.</op:operator><name pos:line="2341" pos:column="36">y</name></name> <op:operator pos:line="2341" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="2341" pos:column="40">0</lit:literal></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name pos:line="2343" pos:column="25">gtk_window_move</name><argument_list pos:line="2343" pos:column="40">(<argument><expr><call><name pos:line="2343" pos:column="41">GTK_WINDOW</name><argument_list pos:line="2343" pos:column="51">(<argument><expr><call><name pos:line="2343" pos:column="52">PWidget</name><argument_list pos:line="2343" pos:column="59">(<argument><expr><name pos:line="2343" pos:column="60">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2343" pos:column="72">x</name> <op:operator pos:line="2343" pos:column="74">+</op:operator> <name><name pos:line="2343" pos:column="76">pt</name><op:operator pos:line="2343" pos:column="78">.</op:operator><name pos:line="2343" pos:column="79">x</name></name></expr></argument>, <argument><expr><name pos:line="2343" pos:column="82">y</name> <op:operator pos:line="2343" pos:column="84">+</op:operator> <name><name pos:line="2343" pos:column="86">pt</name><op:operator pos:line="2343" pos:column="88">.</op:operator><name pos:line="2343" pos:column="89">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2344" pos:column="25">gtk_window_resize</name><argument_list pos:line="2344" pos:column="42">(<argument><expr><call><name pos:line="2344" pos:column="43">GTK_WINDOW</name><argument_list pos:line="2344" pos:column="53">(<argument><expr><call><name pos:line="2344" pos:column="54">PWidget</name><argument_list pos:line="2344" pos:column="61">(<argument><expr><name pos:line="2344" pos:column="62">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2344" pos:column="74">w</name></expr></argument>, <argument><expr><name pos:line="2344" pos:column="77">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2345" pos:column="25">gtk_widget_show</name><argument_list pos:line="2345" pos:column="40">(<argument><expr><call><name pos:line="2345" pos:column="41">PWidget</name><argument_list pos:line="2345" pos:column="48">(<argument><expr><name pos:line="2345" pos:column="49">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2346" pos:column="25">gtk_widget_queue_draw_area</name><argument_list pos:line="2346" pos:column="51">(<argument><expr><call><name pos:line="2346" pos:column="52">PWidget</name><argument_list pos:line="2346" pos:column="59">(<argument><expr><name pos:line="2346" pos:column="60">wPreeditDraw</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2346" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2346" pos:column="78">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2346" pos:column="81">w</name></expr></argument>, <argument><expr><name pos:line="2346" pos:column="84">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2347" pos:column="19">else <block pos:line="2347" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="2348" pos:column="25">gtk_widget_hide</name><argument_list pos:line="2348" pos:column="40">(<argument><expr><call><name pos:line="2348" pos:column="41">PWidget</name><argument_list pos:line="2348" pos:column="48">(<argument><expr><name pos:line="2348" pos:column="49">wPreedit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="2350" pos:column="17">g_free</name><argument_list pos:line="2350" pos:column="23">(<argument><expr><name pos:line="2350" pos:column="24">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2351" pos:column="17">pango_attr_list_unref</name><argument_list pos:line="2351" pos:column="38">(<argument><expr><name pos:line="2351" pos:column="39">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2352" pos:column="11">catch <parameter_list pos:line="2352" pos:column="17">(<param><decl><type><type:modifier pos:line="2352" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2352" pos:column="23">{
		<expr_stmt><expr><name pos:line="2353" pos:column="17">errorStatus</name> <op:operator pos:line="2353" pos:column="29">=</op:operator> <name pos:line="2353" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2357" pos:column="1">void</name></type> <name><name pos:line="2357" pos:column="6">ScintillaGTK</name><op:operator pos:line="2357" pos:column="18">::</op:operator><name pos:line="2357" pos:column="20">PreeditChanged</name></name><parameter_list pos:line="2357" pos:column="34">(<param><decl><type><name pos:line="2357" pos:column="35">GtkIMContext</name> <type:modifier pos:line="2357" pos:column="48">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2357" pos:column="51">ScintillaGTK</name> <type:modifier pos:line="2357" pos:column="64">*</type:modifier></type><name pos:line="2357" pos:column="65">sciThis</name></decl></param>)</parameter_list> <block pos:line="2357" pos:column="74">{
	<expr_stmt><expr><call><name><name pos:line="2358" pos:column="9">sciThis</name><op:operator pos:line="2358" pos:column="16">-&gt;</op:operator><name pos:line="2358" pos:column="18">PreeditChangedThis</name></name><argument_list pos:line="2358" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2361" pos:column="1">void</name></type> <name><name pos:line="2361" pos:column="6">ScintillaGTK</name><op:operator pos:line="2361" pos:column="18">::</op:operator><name pos:line="2361" pos:column="20">StyleSetText</name></name><parameter_list pos:line="2361" pos:column="32">(<param><decl><type><name pos:line="2361" pos:column="33">GtkWidget</name> <type:modifier pos:line="2361" pos:column="43">*</type:modifier></type><name pos:line="2361" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="2361" pos:column="52">GtkStyle</name> <type:modifier pos:line="2361" pos:column="61">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2361" pos:column="64">void</name><type:modifier pos:line="2361" pos:column="68">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2361" pos:column="71">{
	<expr_stmt><expr><call><name pos:line="2362" pos:column="9">RealizeText</name><argument_list pos:line="2362" pos:column="20">(<argument><expr><name pos:line="2362" pos:column="21">widget</name></expr></argument>, <argument><expr><name pos:line="2362" pos:column="29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2365" pos:column="1">void</name></type> <name><name pos:line="2365" pos:column="6">ScintillaGTK</name><op:operator pos:line="2365" pos:column="18">::</op:operator><name pos:line="2365" pos:column="20">RealizeText</name></name><parameter_list pos:line="2365" pos:column="31">(<param><decl><type><name pos:line="2365" pos:column="32">GtkWidget</name> <type:modifier pos:line="2365" pos:column="42">*</type:modifier></type><name pos:line="2365" pos:column="43">widget</name></decl></param>, <param><decl><type><name pos:line="2365" pos:column="51">void</name><type:modifier pos:line="2365" pos:column="55">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2365" pos:column="58">{
	<comment type="line" pos:line="2366" pos:column="9">// Set NULL background to avoid automatic clearing so Scintilla responsible for all drawing</comment>
	<if pos:line="2367" pos:column="9">if <condition pos:line="2367" pos:column="12">(<expr><call><name pos:line="2367" pos:column="13">WindowFromWidget</name><argument_list pos:line="2367" pos:column="29">(<argument><expr><name pos:line="2367" pos:column="30">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2367" pos:column="38"> <block pos:line="2367" pos:column="39">{
<cpp:if pos:line="2368" pos:column="1">#<cpp:directive pos:line="2368" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2368" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2368" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2368" pos:column="23">3</lit:literal><op:operator pos:line="2368" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2368" pos:column="25">0</lit:literal><op:operator pos:line="2368" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2368" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="2369" pos:column="17">gdk_window_set_background_pattern</name><argument_list pos:line="2369" pos:column="50">(<argument><expr><call><name pos:line="2369" pos:column="51">WindowFromWidget</name><argument_list pos:line="2369" pos:column="67">(<argument><expr><name pos:line="2369" pos:column="68">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2369" pos:column="77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2370" pos:column="1">#<cpp:directive pos:line="2370" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="2371" pos:column="17">gdk_window_set_back_pixmap</name><argument_list pos:line="2371" pos:column="43">(<argument><expr><call><name pos:line="2371" pos:column="44">WindowFromWidget</name><argument_list pos:line="2371" pos:column="60">(<argument><expr><name pos:line="2371" pos:column="61">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2371" pos:column="70">NULL</name></expr></argument>, <argument><expr><name pos:line="2371" pos:column="76">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2372" pos:column="1">#<cpp:directive pos:line="2372" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2376" pos:column="1">void</name></type> <name><name pos:line="2376" pos:column="6">ScintillaGTK</name><op:operator pos:line="2376" pos:column="18">::</op:operator><name pos:line="2376" pos:column="20">Destroy</name></name><parameter_list pos:line="2376" pos:column="27">(<param><decl><type><name pos:line="2376" pos:column="28">GObject</name> <type:modifier pos:line="2376" pos:column="36">*</type:modifier></type><name pos:line="2376" pos:column="37">object</name></decl></param>)</parameter_list> <block pos:line="2376" pos:column="45">{
	<try pos:line="2377" pos:column="9">try <block pos:line="2377" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2378" pos:column="17">ScintillaObject</name> <type:modifier pos:line="2378" pos:column="33">*</type:modifier></type><name pos:line="2378" pos:column="34">scio</name> <init pos:line="2378" pos:column="39">= <expr><call><name><name pos:line="2378" pos:column="41">reinterpret_cast</name><argument_list pos:line="2378" pos:column="57">&lt;<argument><expr><name pos:line="2378" pos:column="58">ScintillaObject</name> <op:operator pos:line="2378" pos:column="74">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2378" pos:column="76">(<argument><expr><name pos:line="2378" pos:column="77">object</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="2379" pos:column="17">// This avoids a double destruction</comment>
		<if pos:line="2380" pos:column="17">if <condition pos:line="2380" pos:column="20">(<expr><op:operator pos:line="2380" pos:column="21">!</op:operator><name><name pos:line="2380" pos:column="22">scio</name><op:operator pos:line="2380" pos:column="26">-&gt;</op:operator><name pos:line="2380" pos:column="28">pscin</name></name></expr>)</condition><then pos:line="2380" pos:column="34">
			<return pos:line="2381" pos:column="25">return;</return></then></if>
		<decl_stmt><decl><type><name pos:line="2382" pos:column="17">ScintillaGTK</name> <type:modifier pos:line="2382" pos:column="30">*</type:modifier></type><name pos:line="2382" pos:column="31">sciThis</name> <init pos:line="2382" pos:column="39">= <expr><call><name><name pos:line="2382" pos:column="41">reinterpret_cast</name><argument_list pos:line="2382" pos:column="57">&lt;<argument><expr><name pos:line="2382" pos:column="58">ScintillaGTK</name> <op:operator pos:line="2382" pos:column="71">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2382" pos:column="73">(<argument><expr><name><name pos:line="2382" pos:column="74">scio</name><op:operator pos:line="2382" pos:column="78">-&gt;</op:operator><name pos:line="2382" pos:column="80">pscin</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="2383" pos:column="17">//Platform::DebugPrintf("Destroying %x %x\n", sciThis, object);</comment>
		<expr_stmt><expr><call><name><name pos:line="2384" pos:column="17">sciThis</name><op:operator pos:line="2384" pos:column="24">-&gt;</op:operator><name pos:line="2384" pos:column="26">Finalise</name></name><argument_list pos:line="2384" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><op:operator pos:line="2386" pos:column="17">delete</op:operator> <name pos:line="2386" pos:column="24">sciThis</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2387" pos:column="17">scio</name><op:operator pos:line="2387" pos:column="21">-&gt;</op:operator><name pos:line="2387" pos:column="23">pscin</name></name> <op:operator pos:line="2387" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="2387" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	}</block> <catch pos:line="2388" pos:column="11">catch <parameter_list pos:line="2388" pos:column="17">(<param><decl><type><type:modifier pos:line="2388" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2388" pos:column="23">{
		<comment type="line" pos:line="2389" pos:column="17">// Its dead so nowhere to save the status</comment>
	}</block></catch></try>
}</block></function>

<cpp:if pos:line="2393" pos:column="1">#<cpp:directive pos:line="2393" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2393" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2393" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2393" pos:column="23">3</lit:literal><op:operator pos:line="2393" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2393" pos:column="25">0</lit:literal><op:operator pos:line="2393" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2393" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function><type><name pos:line="2395" pos:column="1">gboolean</name></type> <name><name pos:line="2395" pos:column="10">ScintillaGTK</name><op:operator pos:line="2395" pos:column="22">::</op:operator><name pos:line="2395" pos:column="24">DrawTextThis</name></name><parameter_list pos:line="2395" pos:column="36">(<param><decl><type><name pos:line="2395" pos:column="37">cairo_t</name> <type:modifier pos:line="2395" pos:column="45">*</type:modifier></type><name pos:line="2395" pos:column="46">cr</name></decl></param>)</parameter_list> <block pos:line="2395" pos:column="50">{
	<try pos:line="2396" pos:column="9">try <block pos:line="2396" pos:column="13">{
		<expr_stmt><expr><name pos:line="2397" pos:column="17">paintState</name> <op:operator pos:line="2397" pos:column="28">=</op:operator> <name pos:line="2397" pos:column="30">painting</name></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="2399" pos:column="17">rcPaint</name> <op:operator pos:line="2399" pos:column="25">=</op:operator> <call><name pos:line="2399" pos:column="27">GetClientRectangle</name><argument_list pos:line="2399" pos:column="45">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="2401" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="2401" pos:column="32">(<argument><expr><name pos:line="2401" pos:column="33">rgnUpdate</name> <op:operator pos:line="2401" pos:column="43">==</op:operator> <name pos:line="2401" pos:column="46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2402" pos:column="17">rgnUpdate</name> <op:operator pos:line="2402" pos:column="27">=</op:operator> <call><name pos:line="2402" pos:column="29">cairo_copy_clip_rectangle_list</name><argument_list pos:line="2402" pos:column="59">(<argument><expr><name pos:line="2402" pos:column="60">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2403" pos:column="17">if <condition pos:line="2403" pos:column="20">(<expr><name pos:line="2403" pos:column="21">rgnUpdate</name> <op:operator pos:line="2403" pos:column="31">&amp;&amp;</op:operator> <name><name pos:line="2403" pos:column="34">rgnUpdate</name><op:operator pos:line="2403" pos:column="43">-&gt;</op:operator><name pos:line="2403" pos:column="45">status</name></name> <op:operator pos:line="2403" pos:column="52">!=</op:operator> <name pos:line="2403" pos:column="55">CAIRO_STATUS_SUCCESS</name></expr>)</condition><then pos:line="2403" pos:column="76"> <block pos:line="2403" pos:column="77">{
			<comment type="line" pos:line="2404" pos:column="25">// If not successful then ignore</comment>
			<expr_stmt><expr><call><name pos:line="2405" pos:column="25">fprintf</name><argument_list pos:line="2405" pos:column="32">(<argument><expr><name pos:line="2405" pos:column="33">stderr</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2405" pos:column="41">"DrawTextThis failed to copy update region %d [%d]\n"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2405" pos:column="96">rgnUpdate</name><op:operator pos:line="2405" pos:column="105">-&gt;</op:operator><name pos:line="2405" pos:column="107">status</name></name></expr></argument>, <argument><expr><name><name pos:line="2405" pos:column="115">rgnUpdate</name><op:operator pos:line="2405" pos:column="124">-&gt;</op:operator><name pos:line="2405" pos:column="126">num_rectangles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2406" pos:column="25">cairo_rectangle_list_destroy</name><argument_list pos:line="2406" pos:column="53">(<argument><expr><name pos:line="2406" pos:column="54">rgnUpdate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2407" pos:column="25">rgnUpdate</name> <op:operator pos:line="2407" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="2407" pos:column="37">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="2410" pos:column="17">double</name></type> <name pos:line="2410" pos:column="24">x1</name></decl><op:operator pos:line="2410" pos:column="26">,</op:operator> <decl><type ref="prev"/><name pos:line="2410" pos:column="28">y1</name></decl><op:operator pos:line="2410" pos:column="30">,</op:operator> <decl><type ref="prev"/><name pos:line="2410" pos:column="32">x2</name></decl><op:operator pos:line="2410" pos:column="34">,</op:operator> <decl><type ref="prev"/><name pos:line="2410" pos:column="36">y2</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2411" pos:column="17">cairo_clip_extents</name><argument_list pos:line="2411" pos:column="35">(<argument><expr><name pos:line="2411" pos:column="36">cr</name></expr></argument>, <argument><expr><op:operator pos:line="2411" pos:column="40">&amp;</op:operator><name pos:line="2411" pos:column="41">x1</name></expr></argument>, <argument><expr><op:operator pos:line="2411" pos:column="45">&amp;</op:operator><name pos:line="2411" pos:column="46">y1</name></expr></argument>, <argument><expr><op:operator pos:line="2411" pos:column="50">&amp;</op:operator><name pos:line="2411" pos:column="51">x2</name></expr></argument>, <argument><expr><op:operator pos:line="2411" pos:column="55">&amp;</op:operator><name pos:line="2411" pos:column="56">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2412" pos:column="17">rcPaint</name><op:operator pos:line="2412" pos:column="24">.</op:operator><name pos:line="2412" pos:column="25">left</name></name> <op:operator pos:line="2412" pos:column="30">=</op:operator> <name pos:line="2412" pos:column="32">x1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2413" pos:column="17">rcPaint</name><op:operator pos:line="2413" pos:column="24">.</op:operator><name pos:line="2413" pos:column="25">top</name></name> <op:operator pos:line="2413" pos:column="29">=</op:operator> <name pos:line="2413" pos:column="31">y1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2414" pos:column="17">rcPaint</name><op:operator pos:line="2414" pos:column="24">.</op:operator><name pos:line="2414" pos:column="25">right</name></name> <op:operator pos:line="2414" pos:column="31">=</op:operator> <name pos:line="2414" pos:column="33">x2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2415" pos:column="17">rcPaint</name><op:operator pos:line="2415" pos:column="24">.</op:operator><name pos:line="2415" pos:column="25">bottom</name></name> <op:operator pos:line="2415" pos:column="32">=</op:operator> <name pos:line="2415" pos:column="34">y2</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2416" pos:column="17">PRectangle</name></type> <name pos:line="2416" pos:column="28">rcClient</name> <init pos:line="2416" pos:column="37">= <expr><call><name pos:line="2416" pos:column="39">GetClientRectangle</name><argument_list pos:line="2416" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="2417" pos:column="17">paintingAllText</name> <op:operator pos:line="2417" pos:column="33">=</op:operator> <call><name><name pos:line="2417" pos:column="35">rcPaint</name><op:operator pos:line="2417" pos:column="42">.</op:operator><name pos:line="2417" pos:column="43">Contains</name></name><argument_list pos:line="2417" pos:column="51">(<argument><expr><name pos:line="2417" pos:column="52">rcClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2418" pos:column="17">Surface</name> <type:modifier pos:line="2418" pos:column="25">*</type:modifier></type><name pos:line="2418" pos:column="26">surfaceWindow</name> <init pos:line="2418" pos:column="40">= <expr><call><name><name pos:line="2418" pos:column="42">Surface</name><op:operator pos:line="2418" pos:column="49">::</op:operator><name pos:line="2418" pos:column="51">Allocate</name></name><argument_list pos:line="2418" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2419" pos:column="17">if <condition pos:line="2419" pos:column="20">(<expr><name pos:line="2419" pos:column="21">surfaceWindow</name></expr>)</condition><then pos:line="2419" pos:column="35"> <block pos:line="2419" pos:column="36">{
			<expr_stmt><expr><call><name><name pos:line="2420" pos:column="25">surfaceWindow</name><op:operator pos:line="2420" pos:column="38">-&gt;</op:operator><name pos:line="2420" pos:column="40">Init</name></name><argument_list pos:line="2420" pos:column="44">(<argument><expr><name pos:line="2420" pos:column="45">cr</name></expr></argument>, <argument><expr><call><name pos:line="2420" pos:column="49">PWidget</name><argument_list pos:line="2420" pos:column="56">(<argument><expr><name pos:line="2420" pos:column="57">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2421" pos:column="25">Paint</name><argument_list pos:line="2421" pos:column="30">(<argument><expr><name pos:line="2421" pos:column="31">surfaceWindow</name></expr></argument>, <argument><expr><name pos:line="2421" pos:column="46">rcPaint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2422" pos:column="25">surfaceWindow</name><op:operator pos:line="2422" pos:column="38">-&gt;</op:operator><name pos:line="2422" pos:column="40">Release</name></name><argument_list pos:line="2422" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2423" pos:column="25">delete</op:operator> <name pos:line="2423" pos:column="32">surfaceWindow</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="2425" pos:column="17">if <condition pos:line="2425" pos:column="20">(<expr><name pos:line="2425" pos:column="21">paintState</name> <op:operator pos:line="2425" pos:column="32">==</op:operator> <name pos:line="2425" pos:column="35">paintAbandoned</name></expr>)</condition><then pos:line="2425" pos:column="50"> <block pos:line="2425" pos:column="51">{
			<comment type="line" pos:line="2426" pos:column="25">// Painting area was insufficient to cover new styling or brace highlight positions</comment>
			<expr_stmt><expr><call><name pos:line="2427" pos:column="25">FullPaint</name><argument_list pos:line="2427" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2429" pos:column="17">paintState</name> <op:operator pos:line="2429" pos:column="28">=</op:operator> <name pos:line="2429" pos:column="30">notPainting</name></expr>;</expr_stmt>

		<if pos:line="2431" pos:column="17">if <condition pos:line="2431" pos:column="20">(<expr><name pos:line="2431" pos:column="21">rgnUpdate</name></expr>)</condition><then pos:line="2431" pos:column="31"> <block pos:line="2431" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="2432" pos:column="25">cairo_rectangle_list_destroy</name><argument_list pos:line="2432" pos:column="53">(<argument><expr><name pos:line="2432" pos:column="54">rgnUpdate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2434" pos:column="17">rgnUpdate</name> <op:operator pos:line="2434" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="2434" pos:column="29">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2435" pos:column="17">paintState</name> <op:operator pos:line="2435" pos:column="28">=</op:operator> <name pos:line="2435" pos:column="30">notPainting</name></expr>;</expr_stmt>
	}</block> <catch pos:line="2436" pos:column="11">catch <parameter_list pos:line="2436" pos:column="17">(<param><decl><type><type:modifier pos:line="2436" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2436" pos:column="23">{
		<expr_stmt><expr><name pos:line="2437" pos:column="17">errorStatus</name> <op:operator pos:line="2437" pos:column="29">=</op:operator> <name pos:line="2437" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>

	<return pos:line="2440" pos:column="9">return <expr><name pos:line="2440" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2443" pos:column="1">gboolean</name></type> <name><name pos:line="2443" pos:column="10">ScintillaGTK</name><op:operator pos:line="2443" pos:column="22">::</op:operator><name pos:line="2443" pos:column="24">DrawText</name></name><parameter_list pos:line="2443" pos:column="32">(<param><decl><type><name pos:line="2443" pos:column="33">GtkWidget</name> <type:modifier pos:line="2443" pos:column="43">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2443" pos:column="46">cairo_t</name> <type:modifier pos:line="2443" pos:column="54">*</type:modifier></type><name pos:line="2443" pos:column="55">cr</name></decl></param>, <param><decl><type><name pos:line="2443" pos:column="59">ScintillaGTK</name> <type:modifier pos:line="2443" pos:column="72">*</type:modifier></type><name pos:line="2443" pos:column="73">sciThis</name></decl></param>)</parameter_list> <block pos:line="2443" pos:column="82">{
	<return pos:line="2444" pos:column="9">return <expr><call><name><name pos:line="2444" pos:column="16">sciThis</name><op:operator pos:line="2444" pos:column="23">-&gt;</op:operator><name pos:line="2444" pos:column="25">DrawTextThis</name></name><argument_list pos:line="2444" pos:column="37">(<argument><expr><name pos:line="2444" pos:column="38">cr</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2447" pos:column="1">gboolean</name></type> <name><name pos:line="2447" pos:column="10">ScintillaGTK</name><op:operator pos:line="2447" pos:column="22">::</op:operator><name pos:line="2447" pos:column="24">DrawThis</name></name><parameter_list pos:line="2447" pos:column="32">(<param><decl><type><name pos:line="2447" pos:column="33">cairo_t</name> <type:modifier pos:line="2447" pos:column="41">*</type:modifier></type><name pos:line="2447" pos:column="42">cr</name></decl></param>)</parameter_list> <block pos:line="2447" pos:column="46">{
	<try pos:line="2448" pos:column="9">try <block pos:line="2448" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="2449" pos:column="17">gtk_container_propagate_draw</name><argument_list pos:line="2449" pos:column="45">(
		    <argument><expr><call><name pos:line="2450" pos:column="21">GTK_CONTAINER</name><argument_list pos:line="2450" pos:column="34">(<argument><expr><call><name pos:line="2450" pos:column="35">PWidget</name><argument_list pos:line="2450" pos:column="42">(<argument><expr><name pos:line="2450" pos:column="43">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2450" pos:column="52">PWidget</name><argument_list pos:line="2450" pos:column="59">(<argument><expr><name pos:line="2450" pos:column="60">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2450" pos:column="73">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2451" pos:column="17">gtk_container_propagate_draw</name><argument_list pos:line="2451" pos:column="45">(
		    <argument><expr><call><name pos:line="2452" pos:column="21">GTK_CONTAINER</name><argument_list pos:line="2452" pos:column="34">(<argument><expr><call><name pos:line="2452" pos:column="35">PWidget</name><argument_list pos:line="2452" pos:column="42">(<argument><expr><name pos:line="2452" pos:column="43">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2452" pos:column="52">PWidget</name><argument_list pos:line="2452" pos:column="59">(<argument><expr><name pos:line="2452" pos:column="60">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2452" pos:column="73">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2453" pos:column="11">catch <parameter_list pos:line="2453" pos:column="17">(<param><decl><type><type:modifier pos:line="2453" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2453" pos:column="23">{
		<expr_stmt><expr><name pos:line="2454" pos:column="17">errorStatus</name> <op:operator pos:line="2454" pos:column="29">=</op:operator> <name pos:line="2454" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2456" pos:column="9">return <expr><name pos:line="2456" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2459" pos:column="1">gboolean</name></type> <name><name pos:line="2459" pos:column="10">ScintillaGTK</name><op:operator pos:line="2459" pos:column="22">::</op:operator><name pos:line="2459" pos:column="24">DrawMain</name></name><parameter_list pos:line="2459" pos:column="32">(<param><decl><type><name pos:line="2459" pos:column="33">GtkWidget</name> <type:modifier pos:line="2459" pos:column="43">*</type:modifier></type><name pos:line="2459" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="2459" pos:column="52">cairo_t</name> <type:modifier pos:line="2459" pos:column="60">*</type:modifier></type><name pos:line="2459" pos:column="61">cr</name></decl></param>)</parameter_list> <block pos:line="2459" pos:column="65">{
	<decl_stmt><decl><type><name pos:line="2460" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2460" pos:column="22">*</type:modifier></type><name pos:line="2460" pos:column="23">sciThis</name> <init pos:line="2460" pos:column="31">= <expr><call><name pos:line="2460" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2460" pos:column="52">(<argument><expr><name pos:line="2460" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="2461" pos:column="9">return <expr><call><name><name pos:line="2461" pos:column="16">sciThis</name><op:operator pos:line="2461" pos:column="23">-&gt;</op:operator><name pos:line="2461" pos:column="25">DrawThis</name></name><argument_list pos:line="2461" pos:column="33">(<argument><expr><name pos:line="2461" pos:column="34">cr</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<cpp:else pos:line="2464" pos:column="1">#<cpp:directive pos:line="2464" pos:column="2">else</cpp:directive></cpp:else>

<function><type><name pos:line="2466" pos:column="1">gboolean</name></type> <name><name pos:line="2466" pos:column="10">ScintillaGTK</name><op:operator pos:line="2466" pos:column="22">::</op:operator><name pos:line="2466" pos:column="24">ExposeTextThis</name></name><parameter_list pos:line="2466" pos:column="38">(<param><decl><type><name pos:line="2466" pos:column="39">GtkWidget</name> <type:modifier pos:line="2466" pos:column="49">*</type:modifier></type></decl></param> <comment type="block" pos:line="2466" pos:column="51">/*widget*/</comment>, <param><decl><type><name pos:line="2466" pos:column="63">GdkEventExpose</name> <type:modifier pos:line="2466" pos:column="78">*</type:modifier></type><name pos:line="2466" pos:column="79">ose</name></decl></param>)</parameter_list> <block pos:line="2466" pos:column="84">{
	<try pos:line="2467" pos:column="9">try <block pos:line="2467" pos:column="13">{
		<expr_stmt><expr><name pos:line="2468" pos:column="17">paintState</name> <op:operator pos:line="2468" pos:column="28">=</op:operator> <name pos:line="2468" pos:column="30">painting</name></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="2470" pos:column="17">rcPaint</name><op:operator pos:line="2470" pos:column="24">.</op:operator><name pos:line="2470" pos:column="25">left</name></name> <op:operator pos:line="2470" pos:column="30">=</op:operator> <name><name pos:line="2470" pos:column="32">ose</name><op:operator pos:line="2470" pos:column="35">-&gt;</op:operator><name pos:line="2470" pos:column="37">area</name><op:operator pos:line="2470" pos:column="41">.</op:operator><name pos:line="2470" pos:column="42">x</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2471" pos:column="17">rcPaint</name><op:operator pos:line="2471" pos:column="24">.</op:operator><name pos:line="2471" pos:column="25">top</name></name> <op:operator pos:line="2471" pos:column="29">=</op:operator> <name><name pos:line="2471" pos:column="31">ose</name><op:operator pos:line="2471" pos:column="34">-&gt;</op:operator><name pos:line="2471" pos:column="36">area</name><op:operator pos:line="2471" pos:column="40">.</op:operator><name pos:line="2471" pos:column="41">y</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2472" pos:column="17">rcPaint</name><op:operator pos:line="2472" pos:column="24">.</op:operator><name pos:line="2472" pos:column="25">right</name></name> <op:operator pos:line="2472" pos:column="31">=</op:operator> <name><name pos:line="2472" pos:column="33">ose</name><op:operator pos:line="2472" pos:column="36">-&gt;</op:operator><name pos:line="2472" pos:column="38">area</name><op:operator pos:line="2472" pos:column="42">.</op:operator><name pos:line="2472" pos:column="43">x</name></name> <op:operator pos:line="2472" pos:column="45">+</op:operator> <name><name pos:line="2472" pos:column="47">ose</name><op:operator pos:line="2472" pos:column="50">-&gt;</op:operator><name pos:line="2472" pos:column="52">area</name><op:operator pos:line="2472" pos:column="56">.</op:operator><name pos:line="2472" pos:column="57">width</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2473" pos:column="17">rcPaint</name><op:operator pos:line="2473" pos:column="24">.</op:operator><name pos:line="2473" pos:column="25">bottom</name></name> <op:operator pos:line="2473" pos:column="32">=</op:operator> <name><name pos:line="2473" pos:column="34">ose</name><op:operator pos:line="2473" pos:column="37">-&gt;</op:operator><name pos:line="2473" pos:column="39">area</name><op:operator pos:line="2473" pos:column="43">.</op:operator><name pos:line="2473" pos:column="44">y</name></name> <op:operator pos:line="2473" pos:column="46">+</op:operator> <name><name pos:line="2473" pos:column="48">ose</name><op:operator pos:line="2473" pos:column="51">-&gt;</op:operator><name pos:line="2473" pos:column="53">area</name><op:operator pos:line="2473" pos:column="57">.</op:operator><name pos:line="2473" pos:column="58">height</name></name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="2475" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="2475" pos:column="32">(<argument><expr><name pos:line="2475" pos:column="33">rgnUpdate</name> <op:operator pos:line="2475" pos:column="43">==</op:operator> <name pos:line="2475" pos:column="46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2476" pos:column="17">rgnUpdate</name> <op:operator pos:line="2476" pos:column="27">=</op:operator> <call><name pos:line="2476" pos:column="29">gdk_region_copy</name><argument_list pos:line="2476" pos:column="44">(<argument><expr><name><name pos:line="2476" pos:column="45">ose</name><op:operator pos:line="2476" pos:column="48">-&gt;</op:operator><name pos:line="2476" pos:column="50">region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2477" pos:column="17">PRectangle</name></type> <name pos:line="2477" pos:column="28">rcClient</name> <init pos:line="2477" pos:column="37">= <expr><call><name pos:line="2477" pos:column="39">GetClientRectangle</name><argument_list pos:line="2477" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="2478" pos:column="17">paintingAllText</name> <op:operator pos:line="2478" pos:column="33">=</op:operator> <call><name><name pos:line="2478" pos:column="35">rcPaint</name><op:operator pos:line="2478" pos:column="42">.</op:operator><name pos:line="2478" pos:column="43">Contains</name></name><argument_list pos:line="2478" pos:column="51">(<argument><expr><name pos:line="2478" pos:column="52">rcClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2479" pos:column="17">Surface</name> <type:modifier pos:line="2479" pos:column="25">*</type:modifier></type><name pos:line="2479" pos:column="26">surfaceWindow</name> <init pos:line="2479" pos:column="40">= <expr><call><name><name pos:line="2479" pos:column="42">Surface</name><op:operator pos:line="2479" pos:column="49">::</op:operator><name pos:line="2479" pos:column="51">Allocate</name></name><argument_list pos:line="2479" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2480" pos:column="17">if <condition pos:line="2480" pos:column="20">(<expr><name pos:line="2480" pos:column="21">surfaceWindow</name></expr>)</condition><then pos:line="2480" pos:column="35"> <block pos:line="2480" pos:column="36">{
			<expr_stmt><expr><call><name><name pos:line="2481" pos:column="25">surfaceWindow</name><op:operator pos:line="2481" pos:column="38">-&gt;</op:operator><name pos:line="2481" pos:column="40">Init</name></name><argument_list pos:line="2481" pos:column="44">(<argument><expr><call><name pos:line="2481" pos:column="45">PWindow</name><argument_list pos:line="2481" pos:column="52">(<argument><expr><name pos:line="2481" pos:column="53">wText</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2481" pos:column="61">PWidget</name><argument_list pos:line="2481" pos:column="68">(<argument><expr><name pos:line="2481" pos:column="69">wText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2482" pos:column="25">Paint</name><argument_list pos:line="2482" pos:column="30">(<argument><expr><name pos:line="2482" pos:column="31">surfaceWindow</name></expr></argument>, <argument><expr><name pos:line="2482" pos:column="46">rcPaint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2483" pos:column="25">surfaceWindow</name><op:operator pos:line="2483" pos:column="38">-&gt;</op:operator><name pos:line="2483" pos:column="40">Release</name></name><argument_list pos:line="2483" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2484" pos:column="25">delete</op:operator> <name pos:line="2484" pos:column="32">surfaceWindow</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="2486" pos:column="17">if <condition pos:line="2486" pos:column="20">(<expr><name pos:line="2486" pos:column="21">paintState</name> <op:operator pos:line="2486" pos:column="32">==</op:operator> <name pos:line="2486" pos:column="35">paintAbandoned</name></expr>)</condition><then pos:line="2486" pos:column="50"> <block pos:line="2486" pos:column="51">{
			<comment type="line" pos:line="2487" pos:column="25">// Painting area was insufficient to cover new styling or brace highlight positions</comment>
			<expr_stmt><expr><call><name pos:line="2488" pos:column="25">FullPaint</name><argument_list pos:line="2488" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2490" pos:column="17">paintState</name> <op:operator pos:line="2490" pos:column="28">=</op:operator> <name pos:line="2490" pos:column="30">notPainting</name></expr>;</expr_stmt>

		<if pos:line="2492" pos:column="17">if <condition pos:line="2492" pos:column="20">(<expr><name pos:line="2492" pos:column="21">rgnUpdate</name></expr>)</condition><then pos:line="2492" pos:column="31"> <block pos:line="2492" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="2493" pos:column="25">gdk_region_destroy</name><argument_list pos:line="2493" pos:column="43">(<argument><expr><name pos:line="2493" pos:column="44">rgnUpdate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2495" pos:column="17">rgnUpdate</name> <op:operator pos:line="2495" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="2495" pos:column="29">0</lit:literal></expr>;</expr_stmt>
	}</block> <catch pos:line="2496" pos:column="11">catch <parameter_list pos:line="2496" pos:column="17">(<param><decl><type><type:modifier pos:line="2496" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2496" pos:column="23">{
		<expr_stmt><expr><name pos:line="2497" pos:column="17">errorStatus</name> <op:operator pos:line="2497" pos:column="29">=</op:operator> <name pos:line="2497" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>

	<return pos:line="2500" pos:column="9">return <expr><name pos:line="2500" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2503" pos:column="1">gboolean</name></type> <name><name pos:line="2503" pos:column="10">ScintillaGTK</name><op:operator pos:line="2503" pos:column="22">::</op:operator><name pos:line="2503" pos:column="24">ExposeText</name></name><parameter_list pos:line="2503" pos:column="34">(<param><decl><type><name pos:line="2503" pos:column="35">GtkWidget</name> <type:modifier pos:line="2503" pos:column="45">*</type:modifier></type><name pos:line="2503" pos:column="46">widget</name></decl></param>, <param><decl><type><name pos:line="2503" pos:column="54">GdkEventExpose</name> <type:modifier pos:line="2503" pos:column="69">*</type:modifier></type><name pos:line="2503" pos:column="70">ose</name></decl></param>, <param><decl><type><name pos:line="2503" pos:column="75">ScintillaGTK</name> <type:modifier pos:line="2503" pos:column="88">*</type:modifier></type><name pos:line="2503" pos:column="89">sciThis</name></decl></param>)</parameter_list> <block pos:line="2503" pos:column="98">{
	<return pos:line="2504" pos:column="9">return <expr><call><name><name pos:line="2504" pos:column="16">sciThis</name><op:operator pos:line="2504" pos:column="23">-&gt;</op:operator><name pos:line="2504" pos:column="25">ExposeTextThis</name></name><argument_list pos:line="2504" pos:column="39">(<argument><expr><name pos:line="2504" pos:column="40">widget</name></expr></argument>, <argument><expr><name pos:line="2504" pos:column="48">ose</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2507" pos:column="1">gboolean</name></type> <name><name pos:line="2507" pos:column="10">ScintillaGTK</name><op:operator pos:line="2507" pos:column="22">::</op:operator><name pos:line="2507" pos:column="24">ExposeMain</name></name><parameter_list pos:line="2507" pos:column="34">(<param><decl><type><name pos:line="2507" pos:column="35">GtkWidget</name> <type:modifier pos:line="2507" pos:column="45">*</type:modifier></type><name pos:line="2507" pos:column="46">widget</name></decl></param>, <param><decl><type><name pos:line="2507" pos:column="54">GdkEventExpose</name> <type:modifier pos:line="2507" pos:column="69">*</type:modifier></type><name pos:line="2507" pos:column="70">ose</name></decl></param>)</parameter_list> <block pos:line="2507" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="2508" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2508" pos:column="22">*</type:modifier></type><name pos:line="2508" pos:column="23">sciThis</name> <init pos:line="2508" pos:column="31">= <expr><call><name pos:line="2508" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2508" pos:column="52">(<argument><expr><name pos:line="2508" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="2509" pos:column="9">//Platform::DebugPrintf("Expose Main %0d,%0d %0d,%0d\n",</comment>
	<comment type="line" pos:line="2510" pos:column="9">//ose-&gt;area.x, ose-&gt;area.y, ose-&gt;area.width, ose-&gt;area.height);</comment>
	<return pos:line="2511" pos:column="9">return <expr><call><name><name pos:line="2511" pos:column="16">sciThis</name><op:operator pos:line="2511" pos:column="23">-&gt;</op:operator><name pos:line="2511" pos:column="25">Expose</name></name><argument_list pos:line="2511" pos:column="31">(<argument><expr><name pos:line="2511" pos:column="32">widget</name></expr></argument>, <argument><expr><name pos:line="2511" pos:column="40">ose</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2514" pos:column="1">gboolean</name></type> <name><name pos:line="2514" pos:column="10">ScintillaGTK</name><op:operator pos:line="2514" pos:column="22">::</op:operator><name pos:line="2514" pos:column="24">Expose</name></name><parameter_list pos:line="2514" pos:column="30">(<param><decl><type><name pos:line="2514" pos:column="31">GtkWidget</name> <type:modifier pos:line="2514" pos:column="41">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2514" pos:column="44">GdkEventExpose</name> <type:modifier pos:line="2514" pos:column="59">*</type:modifier></type><name pos:line="2514" pos:column="60">ose</name></decl></param>)</parameter_list> <block pos:line="2514" pos:column="65">{
	<try pos:line="2515" pos:column="9">try <block pos:line="2515" pos:column="13">{
		<comment type="line" pos:line="2516" pos:column="17">//fprintf(stderr, "Expose %0d,%0d %0d,%0d\n",</comment>
		<comment type="line" pos:line="2517" pos:column="17">//ose-&gt;area.x, ose-&gt;area.y, ose-&gt;area.width, ose-&gt;area.height);</comment>

		<comment type="line" pos:line="2519" pos:column="17">// The text is painted in ExposeText</comment>
		<expr_stmt><expr><call><name pos:line="2520" pos:column="17">gtk_container_propagate_expose</name><argument_list pos:line="2520" pos:column="47">(
		    <argument><expr><call><name pos:line="2521" pos:column="21">GTK_CONTAINER</name><argument_list pos:line="2521" pos:column="34">(<argument><expr><call><name pos:line="2521" pos:column="35">PWidget</name><argument_list pos:line="2521" pos:column="42">(<argument><expr><name pos:line="2521" pos:column="43">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2521" pos:column="52">PWidget</name><argument_list pos:line="2521" pos:column="59">(<argument><expr><name pos:line="2521" pos:column="60">scrollbarh</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2521" pos:column="73">ose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2522" pos:column="17">gtk_container_propagate_expose</name><argument_list pos:line="2522" pos:column="47">(
		    <argument><expr><call><name pos:line="2523" pos:column="21">GTK_CONTAINER</name><argument_list pos:line="2523" pos:column="34">(<argument><expr><call><name pos:line="2523" pos:column="35">PWidget</name><argument_list pos:line="2523" pos:column="42">(<argument><expr><name pos:line="2523" pos:column="43">wMain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2523" pos:column="52">PWidget</name><argument_list pos:line="2523" pos:column="59">(<argument><expr><name pos:line="2523" pos:column="60">scrollbarv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2523" pos:column="73">ose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block> <catch pos:line="2525" pos:column="11">catch <parameter_list pos:line="2525" pos:column="17">(<param><decl><type><type:modifier pos:line="2525" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2525" pos:column="23">{
		<expr_stmt><expr><name pos:line="2526" pos:column="17">errorStatus</name> <op:operator pos:line="2526" pos:column="29">=</op:operator> <name pos:line="2526" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2528" pos:column="9">return <expr><name pos:line="2528" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<cpp:endif pos:line="2531" pos:column="1">#<cpp:directive pos:line="2531" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="2533" pos:column="1">void</name></type> <name><name pos:line="2533" pos:column="6">ScintillaGTK</name><op:operator pos:line="2533" pos:column="18">::</op:operator><name pos:line="2533" pos:column="20">ScrollSignal</name></name><parameter_list pos:line="2533" pos:column="32">(<param><decl><type><name pos:line="2533" pos:column="33">GtkAdjustment</name> <type:modifier pos:line="2533" pos:column="47">*</type:modifier></type><name pos:line="2533" pos:column="48">adj</name></decl></param>, <param><decl><type><name pos:line="2533" pos:column="53">ScintillaGTK</name> <type:modifier pos:line="2533" pos:column="66">*</type:modifier></type><name pos:line="2533" pos:column="67">sciThis</name></decl></param>)</parameter_list> <block pos:line="2533" pos:column="76">{
	<try pos:line="2534" pos:column="9">try <block pos:line="2534" pos:column="13">{
<cpp:if pos:line="2535" pos:column="1">#<cpp:directive pos:line="2535" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2535" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2535" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2535" pos:column="23">3</lit:literal><op:operator pos:line="2535" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2535" pos:column="25">0</lit:literal><op:operator pos:line="2535" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2535" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name><name pos:line="2536" pos:column="17">sciThis</name><op:operator pos:line="2536" pos:column="24">-&gt;</op:operator><name pos:line="2536" pos:column="26">ScrollTo</name></name><argument_list pos:line="2536" pos:column="34">(<argument><expr><call><name><name pos:line="2536" pos:column="35">static_cast</name><argument_list pos:line="2536" pos:column="46">&lt;<argument><expr><name pos:line="2536" pos:column="47">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2536" pos:column="51">(<argument><expr><call><name pos:line="2536" pos:column="52">gtk_adjustment_get_value</name><argument_list pos:line="2536" pos:column="76">(<argument><expr><name pos:line="2536" pos:column="77">adj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2536" pos:column="84">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2537" pos:column="1">#<cpp:directive pos:line="2537" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="2538" pos:column="17">sciThis</name><op:operator pos:line="2538" pos:column="24">-&gt;</op:operator><name pos:line="2538" pos:column="26">ScrollTo</name></name><argument_list pos:line="2538" pos:column="34">(<argument><expr><call><name><name pos:line="2538" pos:column="35">static_cast</name><argument_list pos:line="2538" pos:column="46">&lt;<argument><expr><name pos:line="2538" pos:column="47">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2538" pos:column="51">(<argument><expr><name><name pos:line="2538" pos:column="52">adj</name><op:operator pos:line="2538" pos:column="55">-&gt;</op:operator><name pos:line="2538" pos:column="57">value</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2538" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2539" pos:column="1">#<cpp:directive pos:line="2539" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block> <catch pos:line="2540" pos:column="11">catch <parameter_list pos:line="2540" pos:column="17">(<param><decl><type><type:modifier pos:line="2540" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2540" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2541" pos:column="17">sciThis</name><op:operator pos:line="2541" pos:column="24">-&gt;</op:operator><name pos:line="2541" pos:column="26">errorStatus</name></name> <op:operator pos:line="2541" pos:column="38">=</op:operator> <name pos:line="2541" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2545" pos:column="1">void</name></type> <name><name pos:line="2545" pos:column="6">ScintillaGTK</name><op:operator pos:line="2545" pos:column="18">::</op:operator><name pos:line="2545" pos:column="20">ScrollHSignal</name></name><parameter_list pos:line="2545" pos:column="33">(<param><decl><type><name pos:line="2545" pos:column="34">GtkAdjustment</name> <type:modifier pos:line="2545" pos:column="48">*</type:modifier></type><name pos:line="2545" pos:column="49">adj</name></decl></param>, <param><decl><type><name pos:line="2545" pos:column="54">ScintillaGTK</name> <type:modifier pos:line="2545" pos:column="67">*</type:modifier></type><name pos:line="2545" pos:column="68">sciThis</name></decl></param>)</parameter_list> <block pos:line="2545" pos:column="77">{
	<try pos:line="2546" pos:column="9">try <block pos:line="2546" pos:column="13">{
<cpp:if pos:line="2547" pos:column="1">#<cpp:directive pos:line="2547" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2547" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2547" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2547" pos:column="23">3</lit:literal><op:operator pos:line="2547" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2547" pos:column="25">0</lit:literal><op:operator pos:line="2547" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2547" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name><name pos:line="2548" pos:column="17">sciThis</name><op:operator pos:line="2548" pos:column="24">-&gt;</op:operator><name pos:line="2548" pos:column="26">HorizontalScrollTo</name></name><argument_list pos:line="2548" pos:column="44">(<argument><expr><call><name><name pos:line="2548" pos:column="45">static_cast</name><argument_list pos:line="2548" pos:column="56">&lt;<argument><expr><name pos:line="2548" pos:column="57">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2548" pos:column="61">(<argument><expr><call><name pos:line="2548" pos:column="62">gtk_adjustment_get_value</name><argument_list pos:line="2548" pos:column="86">(<argument><expr><name pos:line="2548" pos:column="87">adj</name></expr></argument>)</argument_list></call> <op:operator pos:line="2548" pos:column="92">*</op:operator> <lit:literal type="number" pos:line="2548" pos:column="94">2</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2549" pos:column="1">#<cpp:directive pos:line="2549" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="2550" pos:column="17">sciThis</name><op:operator pos:line="2550" pos:column="24">-&gt;</op:operator><name pos:line="2550" pos:column="26">HorizontalScrollTo</name></name><argument_list pos:line="2550" pos:column="44">(<argument><expr><call><name><name pos:line="2550" pos:column="45">static_cast</name><argument_list pos:line="2550" pos:column="56">&lt;<argument><expr><name pos:line="2550" pos:column="57">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2550" pos:column="61">(<argument><expr><name><name pos:line="2550" pos:column="62">adj</name><op:operator pos:line="2550" pos:column="65">-&gt;</op:operator><name pos:line="2550" pos:column="67">value</name></name> <op:operator pos:line="2550" pos:column="73">*</op:operator> <lit:literal type="number" pos:line="2550" pos:column="75">2</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2551" pos:column="1">#<cpp:directive pos:line="2551" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block> <catch pos:line="2552" pos:column="11">catch <parameter_list pos:line="2552" pos:column="17">(<param><decl><type><type:modifier pos:line="2552" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2552" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2553" pos:column="17">sciThis</name><op:operator pos:line="2553" pos:column="24">-&gt;</op:operator><name pos:line="2553" pos:column="26">errorStatus</name></name> <op:operator pos:line="2553" pos:column="38">=</op:operator> <name pos:line="2553" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2557" pos:column="1">void</name></type> <name><name pos:line="2557" pos:column="6">ScintillaGTK</name><op:operator pos:line="2557" pos:column="18">::</op:operator><name pos:line="2557" pos:column="20">SelectionReceived</name></name><parameter_list pos:line="2557" pos:column="37">(<param><decl><type><name pos:line="2557" pos:column="38">GtkWidget</name> <type:modifier pos:line="2557" pos:column="48">*</type:modifier></type><name pos:line="2557" pos:column="49">widget</name></decl></param>,
                                     <param><decl><type><name pos:line="2558" pos:column="38">GtkSelectionData</name> <type:modifier pos:line="2558" pos:column="55">*</type:modifier></type><name pos:line="2558" pos:column="56">selection_data</name></decl></param>, <param><decl><type><name pos:line="2558" pos:column="72">guint</name></type></decl></param>)</parameter_list> <block pos:line="2558" pos:column="79">{
	<decl_stmt><decl><type><name pos:line="2559" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2559" pos:column="22">*</type:modifier></type><name pos:line="2559" pos:column="23">sciThis</name> <init pos:line="2559" pos:column="31">= <expr><call><name pos:line="2559" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2559" pos:column="52">(<argument><expr><name pos:line="2559" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="2560" pos:column="9">//Platform::DebugPrintf("Selection received\n");</comment>
	<expr_stmt><expr><call><name><name pos:line="2561" pos:column="9">sciThis</name><op:operator pos:line="2561" pos:column="16">-&gt;</op:operator><name pos:line="2561" pos:column="18">ReceivedSelection</name></name><argument_list pos:line="2561" pos:column="35">(<argument><expr><name pos:line="2561" pos:column="36">selection_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2564" pos:column="1">void</name></type> <name><name pos:line="2564" pos:column="6">ScintillaGTK</name><op:operator pos:line="2564" pos:column="18">::</op:operator><name pos:line="2564" pos:column="20">SelectionGet</name></name><parameter_list pos:line="2564" pos:column="32">(<param><decl><type><name pos:line="2564" pos:column="33">GtkWidget</name> <type:modifier pos:line="2564" pos:column="43">*</type:modifier></type><name pos:line="2564" pos:column="44">widget</name></decl></param>,
                                <param><decl><type><name pos:line="2565" pos:column="33">GtkSelectionData</name> <type:modifier pos:line="2565" pos:column="50">*</type:modifier></type><name pos:line="2565" pos:column="51">selection_data</name></decl></param>, <param><decl><type><name pos:line="2565" pos:column="67">guint</name></type> <name pos:line="2565" pos:column="73">info</name></decl></param>, <param><decl><type><name pos:line="2565" pos:column="79">guint</name></type></decl></param>)</parameter_list> <block pos:line="2565" pos:column="86">{
	<decl_stmt><decl><type><name pos:line="2566" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2566" pos:column="22">*</type:modifier></type><name pos:line="2566" pos:column="23">sciThis</name> <init pos:line="2566" pos:column="31">= <expr><call><name pos:line="2566" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2566" pos:column="52">(<argument><expr><name pos:line="2566" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2567" pos:column="9">try <block pos:line="2567" pos:column="13">{
		<comment type="line" pos:line="2568" pos:column="17">//Platform::DebugPrintf("Selection get\n");</comment>
		<if pos:line="2569" pos:column="17">if <condition pos:line="2569" pos:column="20">(<expr><call><name pos:line="2569" pos:column="21">SelectionOfGSD</name><argument_list pos:line="2569" pos:column="35">(<argument><expr><name pos:line="2569" pos:column="36">selection_data</name></expr></argument>)</argument_list></call> <op:operator pos:line="2569" pos:column="52">==</op:operator> <name pos:line="2569" pos:column="55">GDK_SELECTION_PRIMARY</name></expr>)</condition><then pos:line="2569" pos:column="77"> <block pos:line="2569" pos:column="78">{
			<if pos:line="2570" pos:column="25">if <condition pos:line="2570" pos:column="28">(<expr><name><name pos:line="2570" pos:column="29">sciThis</name><op:operator pos:line="2570" pos:column="36">-&gt;</op:operator><name pos:line="2570" pos:column="38">primary</name><op:operator pos:line="2570" pos:column="45">.</op:operator><name pos:line="2570" pos:column="46">s</name></name> <op:operator pos:line="2570" pos:column="48">==</op:operator> <name pos:line="2570" pos:column="51">NULL</name></expr>)</condition><then pos:line="2570" pos:column="56"> <block pos:line="2570" pos:column="57">{
				<expr_stmt><expr><call><name><name pos:line="2571" pos:column="33">sciThis</name><op:operator pos:line="2571" pos:column="40">-&gt;</op:operator><name pos:line="2571" pos:column="42">CopySelectionRange</name></name><argument_list pos:line="2571" pos:column="60">(<argument><expr><op:operator pos:line="2571" pos:column="61">&amp;</op:operator><name><name pos:line="2571" pos:column="62">sciThis</name><op:operator pos:line="2571" pos:column="69">-&gt;</op:operator><name pos:line="2571" pos:column="71">primary</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="2573" pos:column="25">sciThis</name><op:operator pos:line="2573" pos:column="32">-&gt;</op:operator><name pos:line="2573" pos:column="34">GetSelection</name></name><argument_list pos:line="2573" pos:column="46">(<argument><expr><name pos:line="2573" pos:column="47">selection_data</name></expr></argument>, <argument><expr><name pos:line="2573" pos:column="63">info</name></expr></argument>, <argument><expr><op:operator pos:line="2573" pos:column="69">&amp;</op:operator><name><name pos:line="2573" pos:column="70">sciThis</name><op:operator pos:line="2573" pos:column="77">-&gt;</op:operator><name pos:line="2573" pos:column="79">primary</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
<cpp:ifndef pos:line="2575" pos:column="1">#<cpp:directive pos:line="2575" pos:column="2">ifndef</cpp:directive> <name pos:line="2575" pos:column="9">USE_GTK_CLIPBOARD</name></cpp:ifndef>
		<else pos:line="2576" pos:column="17">else <block pos:line="2576" pos:column="22">{
			<expr_stmt><expr><call><name><name pos:line="2577" pos:column="25">sciThis</name><op:operator pos:line="2577" pos:column="32">-&gt;</op:operator><name pos:line="2577" pos:column="34">GetSelection</name></name><argument_list pos:line="2577" pos:column="46">(<argument><expr><name pos:line="2577" pos:column="47">selection_data</name></expr></argument>, <argument><expr><name pos:line="2577" pos:column="63">info</name></expr></argument>, <argument><expr><op:operator pos:line="2577" pos:column="69">&amp;</op:operator><name><name pos:line="2577" pos:column="70">sciThis</name><op:operator pos:line="2577" pos:column="77">-&gt;</op:operator><name pos:line="2577" pos:column="79">copyText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
<cpp:endif pos:line="2579" pos:column="1">#<cpp:directive pos:line="2579" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block> <catch pos:line="2580" pos:column="11">catch <parameter_list pos:line="2580" pos:column="17">(<param><decl><type><type:modifier pos:line="2580" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2580" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2581" pos:column="17">sciThis</name><op:operator pos:line="2581" pos:column="24">-&gt;</op:operator><name pos:line="2581" pos:column="26">errorStatus</name></name> <op:operator pos:line="2581" pos:column="38">=</op:operator> <name pos:line="2581" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2585" pos:column="1">gint</name></type> <name><name pos:line="2585" pos:column="6">ScintillaGTK</name><op:operator pos:line="2585" pos:column="18">::</op:operator><name pos:line="2585" pos:column="20">SelectionClear</name></name><parameter_list pos:line="2585" pos:column="34">(<param><decl><type><name pos:line="2585" pos:column="35">GtkWidget</name> <type:modifier pos:line="2585" pos:column="45">*</type:modifier></type><name pos:line="2585" pos:column="46">widget</name></decl></param>, <param><decl><type><name pos:line="2585" pos:column="54">GdkEventSelection</name> <type:modifier pos:line="2585" pos:column="72">*</type:modifier></type><name pos:line="2585" pos:column="73">selection_event</name></decl></param>)</parameter_list> <block pos:line="2585" pos:column="90">{
	<decl_stmt><decl><type><name pos:line="2586" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2586" pos:column="22">*</type:modifier></type><name pos:line="2586" pos:column="23">sciThis</name> <init pos:line="2586" pos:column="31">= <expr><call><name pos:line="2586" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2586" pos:column="52">(<argument><expr><name pos:line="2586" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="2587" pos:column="9">//Platform::DebugPrintf("Selection clear\n");</comment>
	<expr_stmt><expr><call><name><name pos:line="2588" pos:column="9">sciThis</name><op:operator pos:line="2588" pos:column="16">-&gt;</op:operator><name pos:line="2588" pos:column="18">UnclaimSelection</name></name><argument_list pos:line="2588" pos:column="34">(<argument><expr><name pos:line="2588" pos:column="35">selection_event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="2589" pos:column="9">if <condition pos:line="2589" pos:column="12">(<expr><call><name pos:line="2589" pos:column="13">GTK_WIDGET_CLASS</name><argument_list pos:line="2589" pos:column="29">(<argument><expr><name><name pos:line="2589" pos:column="30">sciThis</name><op:operator pos:line="2589" pos:column="37">-&gt;</op:operator><name pos:line="2589" pos:column="39">parentClass</name></name></expr></argument>)</argument_list></call><op:operator pos:line="2589" pos:column="51">-&gt;</op:operator><name pos:line="2589" pos:column="53">selection_clear_event</name></expr>)</condition><then pos:line="2589" pos:column="75"> <block pos:line="2589" pos:column="76">{
		<return pos:line="2590" pos:column="17">return <expr><call><name pos:line="2590" pos:column="24">GTK_WIDGET_CLASS</name><argument_list pos:line="2590" pos:column="40">(<argument><expr><name><name pos:line="2590" pos:column="41">sciThis</name><op:operator pos:line="2590" pos:column="48">-&gt;</op:operator><name pos:line="2590" pos:column="50">parentClass</name></name></expr></argument>)</argument_list></call><op:operator pos:line="2590" pos:column="62">-&gt;</op:operator><call><name pos:line="2590" pos:column="64">selection_clear_event</name><argument_list pos:line="2590" pos:column="85">(<argument><expr><name pos:line="2590" pos:column="86">widget</name></expr></argument>, <argument><expr><name pos:line="2590" pos:column="94">selection_event</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then></if>
	<return pos:line="2592" pos:column="9">return <expr><name pos:line="2592" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2595" pos:column="1">void</name></type> <name><name pos:line="2595" pos:column="6">ScintillaGTK</name><op:operator pos:line="2595" pos:column="18">::</op:operator><name pos:line="2595" pos:column="20">DragBegin</name></name><parameter_list pos:line="2595" pos:column="29">(<param><decl><type><name pos:line="2595" pos:column="30">GtkWidget</name> <type:modifier pos:line="2595" pos:column="40">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="2595" pos:column="43">GdkDragContext</name> <type:modifier pos:line="2595" pos:column="58">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2595" pos:column="61">{
	<comment type="line" pos:line="2596" pos:column="9">//Platform::DebugPrintf("DragBegin\n");</comment>
}</block></function>

<function><type><name pos:line="2599" pos:column="1">gboolean</name></type> <name><name pos:line="2599" pos:column="10">ScintillaGTK</name><op:operator pos:line="2599" pos:column="22">::</op:operator><name pos:line="2599" pos:column="24">DragMotionThis</name></name><parameter_list pos:line="2599" pos:column="38">(<param><decl><type><name pos:line="2599" pos:column="39">GdkDragContext</name> <type:modifier pos:line="2599" pos:column="54">*</type:modifier></type><name pos:line="2599" pos:column="55">context</name></decl></param>,
                                 <param><decl><type><name pos:line="2600" pos:column="34">gint</name></type> <name pos:line="2600" pos:column="39">x</name></decl></param>, <param><decl><type><name pos:line="2600" pos:column="42">gint</name></type> <name pos:line="2600" pos:column="47">y</name></decl></param>, <param><decl><type><name pos:line="2600" pos:column="50">guint</name></type> <name pos:line="2600" pos:column="56">dragtime</name></decl></param>)</parameter_list> <block pos:line="2600" pos:column="66">{
	<try pos:line="2601" pos:column="9">try <block pos:line="2601" pos:column="13">{
		<function_decl><type><name pos:line="2602" pos:column="17">Point</name></type> <name pos:line="2602" pos:column="23">npt</name><parameter_list pos:line="2602" pos:column="26">(<param><decl><type><name pos:line="2602" pos:column="27">x</name></type></decl></param>, <param><decl><type><name pos:line="2602" pos:column="30">y</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="2603" pos:column="17">SetDragPosition</name><argument_list pos:line="2603" pos:column="32">(<argument><expr><call><name pos:line="2603" pos:column="33">SPositionFromLocation</name><argument_list pos:line="2603" pos:column="54">(<argument><expr><name pos:line="2603" pos:column="55">npt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2603" pos:column="60">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2603" pos:column="67">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2603" pos:column="74">UserVirtualSpace</name><argument_list pos:line="2603" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:line="2604" pos:column="1">#<cpp:directive pos:line="2604" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2604" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2604" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2604" pos:column="23">3</lit:literal><op:operator pos:line="2604" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2604" pos:column="25">0</lit:literal><op:operator pos:line="2604" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2604" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<decl_stmt><decl><type><name pos:line="2605" pos:column="17">GdkDragAction</name></type> <name pos:line="2605" pos:column="31">preferredAction</name> <init pos:line="2605" pos:column="47">= <expr><call><name pos:line="2605" pos:column="49">gdk_drag_context_get_suggested_action</name><argument_list pos:line="2605" pos:column="86">(<argument><expr><name pos:line="2605" pos:column="87">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2606" pos:column="17">GdkDragAction</name></type> <name pos:line="2606" pos:column="31">actions</name> <init pos:line="2606" pos:column="39">= <expr><call><name pos:line="2606" pos:column="41">gdk_drag_context_get_actions</name><argument_list pos:line="2606" pos:column="69">(<argument><expr><name pos:line="2606" pos:column="70">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:else pos:line="2607" pos:column="1">#<cpp:directive pos:line="2607" pos:column="2">else</cpp:directive></cpp:else>
		<decl_stmt><decl><type><name pos:line="2608" pos:column="17">GdkDragAction</name></type> <name pos:line="2608" pos:column="31">preferredAction</name> <init pos:line="2608" pos:column="47">= <expr><name><name pos:line="2608" pos:column="49">context</name><op:operator pos:line="2608" pos:column="56">-&gt;</op:operator><name pos:line="2608" pos:column="58">suggested_action</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2609" pos:column="17">GdkDragAction</name></type> <name pos:line="2609" pos:column="31">actions</name> <init pos:line="2609" pos:column="39">= <expr><name><name pos:line="2609" pos:column="41">context</name><op:operator pos:line="2609" pos:column="48">-&gt;</op:operator><name pos:line="2609" pos:column="50">actions</name></name></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="2610" pos:column="1">#<cpp:directive pos:line="2610" pos:column="2">endif</cpp:directive></cpp:endif>
		<decl_stmt><decl><type><name pos:line="2611" pos:column="17">SelectionPosition</name></type> <name pos:line="2611" pos:column="35">pos</name> <init pos:line="2611" pos:column="39">= <expr><call><name pos:line="2611" pos:column="41">SPositionFromLocation</name><argument_list pos:line="2611" pos:column="62">(<argument><expr><name pos:line="2611" pos:column="63">npt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2612" pos:column="17">if <condition pos:line="2612" pos:column="20">(<expr><op:operator pos:line="2612" pos:column="21">(</op:operator><name pos:line="2612" pos:column="22">inDragDrop</name> <op:operator pos:line="2612" pos:column="33">==</op:operator> <name pos:line="2612" pos:column="36">ddDragging</name><op:operator pos:line="2612" pos:column="46">)</op:operator> <op:operator pos:line="2612" pos:column="48">&amp;&amp;</op:operator> <op:operator pos:line="2612" pos:column="51">(</op:operator><call><name pos:line="2612" pos:column="52">PositionInSelection</name><argument_list pos:line="2612" pos:column="71">(<argument><expr><call><name><name pos:line="2612" pos:column="72">pos</name><op:operator pos:line="2612" pos:column="75">.</op:operator><name pos:line="2612" pos:column="76">Position</name></name><argument_list pos:line="2612" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="2612" pos:column="87">)</op:operator></expr>)</condition><then pos:line="2612" pos:column="89"> <block pos:line="2612" pos:column="90">{
			<comment type="line" pos:line="2613" pos:column="25">// Avoid dragging selection onto itself as that produces a move</comment>
			<comment type="line" pos:line="2614" pos:column="25">// with no real effect but which creates undo actions.</comment>
			<expr_stmt><expr><name pos:line="2615" pos:column="25">preferredAction</name> <op:operator pos:line="2615" pos:column="41">=</op:operator> <call><name><name pos:line="2615" pos:column="43">static_cast</name><argument_list pos:line="2615" pos:column="54">&lt;<argument><expr><name pos:line="2615" pos:column="55">GdkDragAction</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2615" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="2615" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2616" pos:column="19">else <if pos:line="2616" pos:column="24">if <condition pos:line="2616" pos:column="27">(<expr><name pos:line="2616" pos:column="28">actions</name> <op:operator pos:line="2616" pos:column="36">==</op:operator> <call><name><name pos:line="2616" pos:column="39">static_cast</name><argument_list pos:line="2616" pos:column="50">&lt;<argument><expr><name pos:line="2616" pos:column="51">GdkDragAction</name></expr></argument>&gt;</argument_list></name>
		        <argument_list pos:line="2617" pos:column="25">(<argument><expr><name pos:line="2617" pos:column="26">GDK_ACTION_COPY</name> <op:operator pos:line="2617" pos:column="42">|</op:operator> <name pos:line="2617" pos:column="44">GDK_ACTION_MOVE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2617" pos:column="61"> <block pos:line="2617" pos:column="62">{
			<expr_stmt><expr><name pos:line="2618" pos:column="25">preferredAction</name> <op:operator pos:line="2618" pos:column="41">=</op:operator> <name pos:line="2618" pos:column="43">GDK_ACTION_MOVE</name></expr>;</expr_stmt>
		}</block></then></if></else></if>
		<expr_stmt><expr><call><name pos:line="2620" pos:column="17">gdk_drag_status</name><argument_list pos:line="2620" pos:column="32">(<argument><expr><name pos:line="2620" pos:column="33">context</name></expr></argument>, <argument><expr><name pos:line="2620" pos:column="42">preferredAction</name></expr></argument>, <argument><expr><name pos:line="2620" pos:column="59">dragtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2621" pos:column="11">catch <parameter_list pos:line="2621" pos:column="17">(<param><decl><type><type:modifier pos:line="2621" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2621" pos:column="23">{
		<expr_stmt><expr><name pos:line="2622" pos:column="17">errorStatus</name> <op:operator pos:line="2622" pos:column="29">=</op:operator> <name pos:line="2622" pos:column="31">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2624" pos:column="9">return <expr><name pos:line="2624" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2627" pos:column="1">gboolean</name></type> <name><name pos:line="2627" pos:column="10">ScintillaGTK</name><op:operator pos:line="2627" pos:column="22">::</op:operator><name pos:line="2627" pos:column="24">DragMotion</name></name><parameter_list pos:line="2627" pos:column="34">(<param><decl><type><name pos:line="2627" pos:column="35">GtkWidget</name> <type:modifier pos:line="2627" pos:column="45">*</type:modifier></type><name pos:line="2627" pos:column="46">widget</name></decl></param>, <param><decl><type><name pos:line="2627" pos:column="54">GdkDragContext</name> <type:modifier pos:line="2627" pos:column="69">*</type:modifier></type><name pos:line="2627" pos:column="70">context</name></decl></param>,
                                 <param><decl><type><name pos:line="2628" pos:column="34">gint</name></type> <name pos:line="2628" pos:column="39">x</name></decl></param>, <param><decl><type><name pos:line="2628" pos:column="42">gint</name></type> <name pos:line="2628" pos:column="47">y</name></decl></param>, <param><decl><type><name pos:line="2628" pos:column="50">guint</name></type> <name pos:line="2628" pos:column="56">dragtime</name></decl></param>)</parameter_list> <block pos:line="2628" pos:column="66">{
	<decl_stmt><decl><type><name pos:line="2629" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2629" pos:column="22">*</type:modifier></type><name pos:line="2629" pos:column="23">sciThis</name> <init pos:line="2629" pos:column="31">= <expr><call><name pos:line="2629" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2629" pos:column="52">(<argument><expr><name pos:line="2629" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="2630" pos:column="9">return <expr><call><name><name pos:line="2630" pos:column="16">sciThis</name><op:operator pos:line="2630" pos:column="23">-&gt;</op:operator><name pos:line="2630" pos:column="25">DragMotionThis</name></name><argument_list pos:line="2630" pos:column="39">(<argument><expr><name pos:line="2630" pos:column="40">context</name></expr></argument>, <argument><expr><name pos:line="2630" pos:column="49">x</name></expr></argument>, <argument><expr><name pos:line="2630" pos:column="52">y</name></expr></argument>, <argument><expr><name pos:line="2630" pos:column="55">dragtime</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2633" pos:column="1">void</name></type> <name><name pos:line="2633" pos:column="6">ScintillaGTK</name><op:operator pos:line="2633" pos:column="18">::</op:operator><name pos:line="2633" pos:column="20">DragLeave</name></name><parameter_list pos:line="2633" pos:column="29">(<param><decl><type><name pos:line="2633" pos:column="30">GtkWidget</name> <type:modifier pos:line="2633" pos:column="40">*</type:modifier></type><name pos:line="2633" pos:column="41">widget</name></decl></param>, <param><decl><type><name pos:line="2633" pos:column="49">GdkDragContext</name> <type:modifier pos:line="2633" pos:column="64">*</type:modifier></type></decl></param> <comment type="block" pos:line="2633" pos:column="66">/*context*/</comment>, <param><decl><type><name pos:line="2633" pos:column="79">guint</name></type></decl></param>)</parameter_list> <block pos:line="2633" pos:column="86">{
	<decl_stmt><decl><type><name pos:line="2634" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2634" pos:column="22">*</type:modifier></type><name pos:line="2634" pos:column="23">sciThis</name> <init pos:line="2634" pos:column="31">= <expr><call><name pos:line="2634" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2634" pos:column="52">(<argument><expr><name pos:line="2634" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2635" pos:column="9">try <block pos:line="2635" pos:column="13">{
		<expr_stmt><expr><call><name><name pos:line="2636" pos:column="17">sciThis</name><op:operator pos:line="2636" pos:column="24">-&gt;</op:operator><name pos:line="2636" pos:column="26">SetDragPosition</name></name><argument_list pos:line="2636" pos:column="41">(<argument><expr><call><name pos:line="2636" pos:column="42">SelectionPosition</name><argument_list pos:line="2636" pos:column="59">(<argument><expr><name pos:line="2636" pos:column="60">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="2637" pos:column="17">//Platform::DebugPrintf("DragLeave %x\n", sciThis);</comment>
	}</block> <catch pos:line="2638" pos:column="11">catch <parameter_list pos:line="2638" pos:column="17">(<param><decl><type><type:modifier pos:line="2638" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2638" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2639" pos:column="17">sciThis</name><op:operator pos:line="2639" pos:column="24">-&gt;</op:operator><name pos:line="2639" pos:column="26">errorStatus</name></name> <op:operator pos:line="2639" pos:column="38">=</op:operator> <name pos:line="2639" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2643" pos:column="1">void</name></type> <name><name pos:line="2643" pos:column="6">ScintillaGTK</name><op:operator pos:line="2643" pos:column="18">::</op:operator><name pos:line="2643" pos:column="20">DragEnd</name></name><parameter_list pos:line="2643" pos:column="27">(<param><decl><type><name pos:line="2643" pos:column="28">GtkWidget</name> <type:modifier pos:line="2643" pos:column="38">*</type:modifier></type><name pos:line="2643" pos:column="39">widget</name></decl></param>, <param><decl><type><name pos:line="2643" pos:column="47">GdkDragContext</name> <type:modifier pos:line="2643" pos:column="62">*</type:modifier></type></decl></param> <comment type="block" pos:line="2643" pos:column="64">/*context*/</comment>)</parameter_list> <block pos:line="2643" pos:column="77">{
	<decl_stmt><decl><type><name pos:line="2644" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2644" pos:column="22">*</type:modifier></type><name pos:line="2644" pos:column="23">sciThis</name> <init pos:line="2644" pos:column="31">= <expr><call><name pos:line="2644" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2644" pos:column="52">(<argument><expr><name pos:line="2644" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2645" pos:column="9">try <block pos:line="2645" pos:column="13">{
		<comment type="line" pos:line="2646" pos:column="17">// If drag did not result in drop here or elsewhere</comment>
		<if pos:line="2647" pos:column="17">if <condition pos:line="2647" pos:column="20">(<expr><op:operator pos:line="2647" pos:column="21">!</op:operator><name><name pos:line="2647" pos:column="22">sciThis</name><op:operator pos:line="2647" pos:column="29">-&gt;</op:operator><name pos:line="2647" pos:column="31">dragWasDropped</name></name></expr>)</condition><then pos:line="2647" pos:column="46">
			<expr_stmt><expr><call><name><name pos:line="2648" pos:column="25">sciThis</name><op:operator pos:line="2648" pos:column="32">-&gt;</op:operator><name pos:line="2648" pos:column="34">SetEmptySelection</name></name><argument_list pos:line="2648" pos:column="51">(<argument><expr><name><name pos:line="2648" pos:column="52">sciThis</name><op:operator pos:line="2648" pos:column="59">-&gt;</op:operator><name pos:line="2648" pos:column="61">posDrag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name><name pos:line="2649" pos:column="17">sciThis</name><op:operator pos:line="2649" pos:column="24">-&gt;</op:operator><name pos:line="2649" pos:column="26">SetDragPosition</name></name><argument_list pos:line="2649" pos:column="41">(<argument><expr><call><name pos:line="2649" pos:column="42">SelectionPosition</name><argument_list pos:line="2649" pos:column="59">(<argument><expr><name pos:line="2649" pos:column="60">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="2650" pos:column="17">//Platform::DebugPrintf("DragEnd %x %d\n", sciThis, sciThis-&gt;dragWasDropped);</comment>
		<expr_stmt><expr><name><name pos:line="2651" pos:column="17">sciThis</name><op:operator pos:line="2651" pos:column="24">-&gt;</op:operator><name pos:line="2651" pos:column="26">inDragDrop</name></name> <op:operator pos:line="2651" pos:column="37">=</op:operator> <name pos:line="2651" pos:column="39">ddNone</name></expr>;</expr_stmt>
	}</block> <catch pos:line="2652" pos:column="11">catch <parameter_list pos:line="2652" pos:column="17">(<param><decl><type><type:modifier pos:line="2652" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2652" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2653" pos:column="17">sciThis</name><op:operator pos:line="2653" pos:column="24">-&gt;</op:operator><name pos:line="2653" pos:column="26">errorStatus</name></name> <op:operator pos:line="2653" pos:column="38">=</op:operator> <name pos:line="2653" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2657" pos:column="1">gboolean</name></type> <name><name pos:line="2657" pos:column="10">ScintillaGTK</name><op:operator pos:line="2657" pos:column="22">::</op:operator><name pos:line="2657" pos:column="24">Drop</name></name><parameter_list pos:line="2657" pos:column="28">(<param><decl><type><name pos:line="2657" pos:column="29">GtkWidget</name> <type:modifier pos:line="2657" pos:column="39">*</type:modifier></type><name pos:line="2657" pos:column="40">widget</name></decl></param>, <param><decl><type><name pos:line="2657" pos:column="48">GdkDragContext</name> <type:modifier pos:line="2657" pos:column="63">*</type:modifier></type></decl></param> <comment type="block" pos:line="2657" pos:column="65">/*context*/</comment>,
                            <param><decl><type><name pos:line="2658" pos:column="29">gint</name></type></decl></param>, <param><decl><type><name pos:line="2658" pos:column="35">gint</name></type></decl></param>, <param><decl><type><name pos:line="2658" pos:column="41">guint</name></type></decl></param>)</parameter_list> <block pos:line="2658" pos:column="48">{
	<decl_stmt><decl><type><name pos:line="2659" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2659" pos:column="22">*</type:modifier></type><name pos:line="2659" pos:column="23">sciThis</name> <init pos:line="2659" pos:column="31">= <expr><call><name pos:line="2659" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2659" pos:column="52">(<argument><expr><name pos:line="2659" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2660" pos:column="9">try <block pos:line="2660" pos:column="13">{
		<comment type="line" pos:line="2661" pos:column="17">//Platform::DebugPrintf("Drop %x\n", sciThis);</comment>
		<expr_stmt><expr><call><name><name pos:line="2662" pos:column="17">sciThis</name><op:operator pos:line="2662" pos:column="24">-&gt;</op:operator><name pos:line="2662" pos:column="26">SetDragPosition</name></name><argument_list pos:line="2662" pos:column="41">(<argument><expr><call><name pos:line="2662" pos:column="42">SelectionPosition</name><argument_list pos:line="2662" pos:column="59">(<argument><expr><name pos:line="2662" pos:column="60">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2663" pos:column="11">catch <parameter_list pos:line="2663" pos:column="17">(<param><decl><type><type:modifier pos:line="2663" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2663" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2664" pos:column="17">sciThis</name><op:operator pos:line="2664" pos:column="24">-&gt;</op:operator><name pos:line="2664" pos:column="26">errorStatus</name></name> <op:operator pos:line="2664" pos:column="38">=</op:operator> <name pos:line="2664" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
	<return pos:line="2666" pos:column="9">return <expr><name pos:line="2666" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2669" pos:column="1">void</name></type> <name><name pos:line="2669" pos:column="6">ScintillaGTK</name><op:operator pos:line="2669" pos:column="18">::</op:operator><name pos:line="2669" pos:column="20">DragDataReceived</name></name><parameter_list pos:line="2669" pos:column="36">(<param><decl><type><name pos:line="2669" pos:column="37">GtkWidget</name> <type:modifier pos:line="2669" pos:column="47">*</type:modifier></type><name pos:line="2669" pos:column="48">widget</name></decl></param>, <param><decl><type><name pos:line="2669" pos:column="56">GdkDragContext</name> <type:modifier pos:line="2669" pos:column="71">*</type:modifier></type></decl></param> <comment type="block" pos:line="2669" pos:column="73">/*context*/</comment>,
                                    <param><decl><type><name pos:line="2670" pos:column="37">gint</name></type></decl></param>, <param><decl><type><name pos:line="2670" pos:column="43">gint</name></type></decl></param>, <param><decl><type><name pos:line="2670" pos:column="49">GtkSelectionData</name> <type:modifier pos:line="2670" pos:column="66">*</type:modifier></type><name pos:line="2670" pos:column="67">selection_data</name></decl></param>, <param><decl><type><name pos:line="2670" pos:column="83">guint</name></type></decl></param> <comment type="block" pos:line="2670" pos:column="89">/*info*/</comment>, <param><decl><type><name pos:line="2670" pos:column="99">guint</name></type></decl></param>)</parameter_list> <block pos:line="2670" pos:column="106">{
	<decl_stmt><decl><type><name pos:line="2671" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2671" pos:column="22">*</type:modifier></type><name pos:line="2671" pos:column="23">sciThis</name> <init pos:line="2671" pos:column="31">= <expr><call><name pos:line="2671" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2671" pos:column="52">(<argument><expr><name pos:line="2671" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2672" pos:column="9">try <block pos:line="2672" pos:column="13">{
		<expr_stmt><expr><call><name><name pos:line="2673" pos:column="17">sciThis</name><op:operator pos:line="2673" pos:column="24">-&gt;</op:operator><name pos:line="2673" pos:column="26">ReceivedDrop</name></name><argument_list pos:line="2673" pos:column="38">(<argument><expr><name pos:line="2673" pos:column="39">selection_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2674" pos:column="17">sciThis</name><op:operator pos:line="2674" pos:column="24">-&gt;</op:operator><name pos:line="2674" pos:column="26">SetDragPosition</name></name><argument_list pos:line="2674" pos:column="41">(<argument><expr><call><name pos:line="2674" pos:column="42">SelectionPosition</name><argument_list pos:line="2674" pos:column="59">(<argument><expr><name pos:line="2674" pos:column="60">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2675" pos:column="11">catch <parameter_list pos:line="2675" pos:column="17">(<param><decl><type><type:modifier pos:line="2675" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2675" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2676" pos:column="17">sciThis</name><op:operator pos:line="2676" pos:column="24">-&gt;</op:operator><name pos:line="2676" pos:column="26">errorStatus</name></name> <op:operator pos:line="2676" pos:column="38">=</op:operator> <name pos:line="2676" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2680" pos:column="1">void</name></type> <name><name pos:line="2680" pos:column="6">ScintillaGTK</name><op:operator pos:line="2680" pos:column="18">::</op:operator><name pos:line="2680" pos:column="20">DragDataGet</name></name><parameter_list pos:line="2680" pos:column="31">(<param><decl><type><name pos:line="2680" pos:column="32">GtkWidget</name> <type:modifier pos:line="2680" pos:column="42">*</type:modifier></type><name pos:line="2680" pos:column="43">widget</name></decl></param>, <param><decl><type><name pos:line="2680" pos:column="51">GdkDragContext</name> <type:modifier pos:line="2680" pos:column="66">*</type:modifier></type><name pos:line="2680" pos:column="67">context</name></decl></param>,
                               <param><decl><type><name pos:line="2681" pos:column="32">GtkSelectionData</name> <type:modifier pos:line="2681" pos:column="49">*</type:modifier></type><name pos:line="2681" pos:column="50">selection_data</name></decl></param>, <param><decl><type><name pos:line="2681" pos:column="66">guint</name></type> <name pos:line="2681" pos:column="72">info</name></decl></param>, <param><decl><type><name pos:line="2681" pos:column="78">guint</name></type></decl></param>)</parameter_list> <block pos:line="2681" pos:column="85">{
	<decl_stmt><decl><type><name pos:line="2682" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2682" pos:column="22">*</type:modifier></type><name pos:line="2682" pos:column="23">sciThis</name> <init pos:line="2682" pos:column="31">= <expr><call><name pos:line="2682" pos:column="33">ScintillaFromWidget</name><argument_list pos:line="2682" pos:column="52">(<argument><expr><name pos:line="2682" pos:column="53">widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<try pos:line="2683" pos:column="9">try <block pos:line="2683" pos:column="13">{
		<expr_stmt><expr><name><name pos:line="2684" pos:column="17">sciThis</name><op:operator pos:line="2684" pos:column="24">-&gt;</op:operator><name pos:line="2684" pos:column="26">dragWasDropped</name></name> <op:operator pos:line="2684" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="2684" pos:column="43">true</lit:literal></expr>;</expr_stmt>
		<if pos:line="2685" pos:column="17">if <condition pos:line="2685" pos:column="20">(<expr><op:operator pos:line="2685" pos:column="21">!</op:operator><call><name><name pos:line="2685" pos:column="22">sciThis</name><op:operator pos:line="2685" pos:column="29">-&gt;</op:operator><name pos:line="2685" pos:column="31">sel</name><op:operator pos:line="2685" pos:column="34">.</op:operator><name pos:line="2685" pos:column="35">Empty</name></name><argument_list pos:line="2685" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="2685" pos:column="43"> <block pos:line="2685" pos:column="44">{
			<expr_stmt><expr><call><name><name pos:line="2686" pos:column="25">sciThis</name><op:operator pos:line="2686" pos:column="32">-&gt;</op:operator><name pos:line="2686" pos:column="34">GetSelection</name></name><argument_list pos:line="2686" pos:column="46">(<argument><expr><name pos:line="2686" pos:column="47">selection_data</name></expr></argument>, <argument><expr><name pos:line="2686" pos:column="63">info</name></expr></argument>, <argument><expr><op:operator pos:line="2686" pos:column="69">&amp;</op:operator><name><name pos:line="2686" pos:column="70">sciThis</name><op:operator pos:line="2686" pos:column="77">-&gt;</op:operator><name pos:line="2686" pos:column="79">drag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
<cpp:if pos:line="2688" pos:column="1">#<cpp:directive pos:line="2688" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2688" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2688" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2688" pos:column="23">3</lit:literal><op:operator pos:line="2688" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2688" pos:column="25">0</lit:literal><op:operator pos:line="2688" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2688" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<decl_stmt><decl><type><name pos:line="2689" pos:column="17">GdkDragAction</name></type> <name pos:line="2689" pos:column="31">action</name> <init pos:line="2689" pos:column="38">= <expr><call><name pos:line="2689" pos:column="40">gdk_drag_context_get_selected_action</name><argument_list pos:line="2689" pos:column="76">(<argument><expr><name pos:line="2689" pos:column="77">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:else pos:line="2690" pos:column="1">#<cpp:directive pos:line="2690" pos:column="2">else</cpp:directive></cpp:else>
		<decl_stmt><decl><type><name pos:line="2691" pos:column="17">GdkDragAction</name></type> <name pos:line="2691" pos:column="31">action</name> <init pos:line="2691" pos:column="38">= <expr><name><name pos:line="2691" pos:column="40">context</name><op:operator pos:line="2691" pos:column="47">-&gt;</op:operator><name pos:line="2691" pos:column="49">action</name></name></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="2692" pos:column="1">#<cpp:directive pos:line="2692" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="2693" pos:column="17">if <condition pos:line="2693" pos:column="20">(<expr><name pos:line="2693" pos:column="21">action</name> <op:operator pos:line="2693" pos:column="28">==</op:operator> <name pos:line="2693" pos:column="31">GDK_ACTION_MOVE</name></expr>)</condition><then pos:line="2693" pos:column="47"> <block pos:line="2693" pos:column="48">{
			<for pos:line="2694" pos:column="25">for (<init><decl><type><name pos:line="2694" pos:column="30">size_t</name></type> <name pos:line="2694" pos:column="37">r</name><init pos:line="2694" pos:column="38">=<expr><lit:literal type="number" pos:line="2694" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2694" pos:column="42">r</name><op:operator pos:line="2694" pos:column="43">&lt;</op:operator><call><name><name pos:line="2694" pos:column="44">sciThis</name><op:operator pos:line="2694" pos:column="51">-&gt;</op:operator><name pos:line="2694" pos:column="53">sel</name><op:operator pos:line="2694" pos:column="56">.</op:operator><name pos:line="2694" pos:column="57">Count</name></name><argument_list pos:line="2694" pos:column="62">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="2694" pos:column="66">r</name><op:operator pos:line="2694" pos:column="67">++</op:operator></expr></incr>) <block pos:line="2694" pos:column="71">{
				<if pos:line="2695" pos:column="33">if <condition pos:line="2695" pos:column="36">(<expr><name><name pos:line="2695" pos:column="37">sciThis</name><op:operator pos:line="2695" pos:column="44">-&gt;</op:operator><name pos:line="2695" pos:column="46">posDrop</name></name> <op:operator pos:line="2695" pos:column="54">&gt;=</op:operator> <call><name><name pos:line="2695" pos:column="57">sciThis</name><op:operator pos:line="2695" pos:column="64">-&gt;</op:operator><name pos:line="2695" pos:column="66">sel</name><op:operator pos:line="2695" pos:column="69">.</op:operator><name pos:line="2695" pos:column="70">Range</name></name><argument_list pos:line="2695" pos:column="75">(<argument><expr><name pos:line="2695" pos:column="76">r</name></expr></argument>)</argument_list></call><op:operator pos:line="2695" pos:column="78">.</op:operator><call><name pos:line="2695" pos:column="79">Start</name><argument_list pos:line="2695" pos:column="84">()</argument_list></call></expr>)</condition><then pos:line="2695" pos:column="87"> <block pos:line="2695" pos:column="88">{
					<if pos:line="2696" pos:column="41">if <condition pos:line="2696" pos:column="44">(<expr><name><name pos:line="2696" pos:column="45">sciThis</name><op:operator pos:line="2696" pos:column="52">-&gt;</op:operator><name pos:line="2696" pos:column="54">posDrop</name></name> <op:operator pos:line="2696" pos:column="62">&gt;</op:operator> <call><name><name pos:line="2696" pos:column="64">sciThis</name><op:operator pos:line="2696" pos:column="71">-&gt;</op:operator><name pos:line="2696" pos:column="73">sel</name><op:operator pos:line="2696" pos:column="76">.</op:operator><name pos:line="2696" pos:column="77">Range</name></name><argument_list pos:line="2696" pos:column="82">(<argument><expr><name pos:line="2696" pos:column="83">r</name></expr></argument>)</argument_list></call><op:operator pos:line="2696" pos:column="85">.</op:operator><call><name pos:line="2696" pos:column="86">End</name><argument_list pos:line="2696" pos:column="89">()</argument_list></call></expr>)</condition><then pos:line="2696" pos:column="92"> <block pos:line="2696" pos:column="93">{
						<expr_stmt><expr><call><name><name pos:line="2697" pos:column="49">sciThis</name><op:operator pos:line="2697" pos:column="56">-&gt;</op:operator><name pos:line="2697" pos:column="58">posDrop</name><op:operator pos:line="2697" pos:column="65">.</op:operator><name pos:line="2697" pos:column="66">Add</name></name><argument_list pos:line="2697" pos:column="69">(<argument><expr><op:operator pos:line="2697" pos:column="70">-</op:operator><call><name><name pos:line="2697" pos:column="71">sciThis</name><op:operator pos:line="2697" pos:column="78">-&gt;</op:operator><name pos:line="2697" pos:column="80">sel</name><op:operator pos:line="2697" pos:column="83">.</op:operator><name pos:line="2697" pos:column="84">Range</name></name><argument_list pos:line="2697" pos:column="89">(<argument><expr><name pos:line="2697" pos:column="90">r</name></expr></argument>)</argument_list></call><op:operator pos:line="2697" pos:column="92">.</op:operator><call><name pos:line="2697" pos:column="93">Length</name><argument_list pos:line="2697" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="2698" pos:column="43">else <block pos:line="2698" pos:column="48">{
						<expr_stmt><expr><call><name><name pos:line="2699" pos:column="49">sciThis</name><op:operator pos:line="2699" pos:column="56">-&gt;</op:operator><name pos:line="2699" pos:column="58">posDrop</name><op:operator pos:line="2699" pos:column="65">.</op:operator><name pos:line="2699" pos:column="66">Add</name></name><argument_list pos:line="2699" pos:column="69">(<argument><expr><op:operator pos:line="2699" pos:column="70">-</op:operator><call><name pos:line="2699" pos:column="71">SelectionRange</name><argument_list pos:line="2699" pos:column="85">(<argument><expr><name><name pos:line="2699" pos:column="86">sciThis</name><op:operator pos:line="2699" pos:column="93">-&gt;</op:operator><name pos:line="2699" pos:column="95">posDrop</name></name></expr></argument>, <argument><expr><call><name><name pos:line="2699" pos:column="104">sciThis</name><op:operator pos:line="2699" pos:column="111">-&gt;</op:operator><name pos:line="2699" pos:column="113">sel</name><op:operator pos:line="2699" pos:column="116">.</op:operator><name pos:line="2699" pos:column="117">Range</name></name><argument_list pos:line="2699" pos:column="122">(<argument><expr><name pos:line="2699" pos:column="123">r</name></expr></argument>)</argument_list></call><op:operator pos:line="2699" pos:column="125">.</op:operator><call><name pos:line="2699" pos:column="126">Start</name><argument_list pos:line="2699" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="2699" pos:column="134">.</op:operator><call><name pos:line="2699" pos:column="135">Length</name><argument_list pos:line="2699" pos:column="141">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="2703" pos:column="25">sciThis</name><op:operator pos:line="2703" pos:column="32">-&gt;</op:operator><name pos:line="2703" pos:column="34">ClearSelection</name></name><argument_list pos:line="2703" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><name pos:line="2705" pos:column="17">sciThis</name><op:operator pos:line="2705" pos:column="24">-&gt;</op:operator><name pos:line="2705" pos:column="26">SetDragPosition</name></name><argument_list pos:line="2705" pos:column="41">(<argument><expr><call><name pos:line="2705" pos:column="42">SelectionPosition</name><argument_list pos:line="2705" pos:column="59">(<argument><expr><name pos:line="2705" pos:column="60">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2706" pos:column="11">catch <parameter_list pos:line="2706" pos:column="17">(<param><decl><type><type:modifier pos:line="2706" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2706" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="2707" pos:column="17">sciThis</name><op:operator pos:line="2707" pos:column="24">-&gt;</op:operator><name pos:line="2707" pos:column="26">errorStatus</name></name> <op:operator pos:line="2707" pos:column="38">=</op:operator> <name pos:line="2707" pos:column="40">SC_STATUS_FAILURE</name></expr>;</expr_stmt>
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2711" pos:column="1">int</name></type> <name><name pos:line="2711" pos:column="5">ScintillaGTK</name><op:operator pos:line="2711" pos:column="17">::</op:operator><name pos:line="2711" pos:column="19">TimeOut</name></name><parameter_list pos:line="2711" pos:column="26">(<param><decl><type><name pos:line="2711" pos:column="27">ScintillaGTK</name> <type:modifier pos:line="2711" pos:column="40">*</type:modifier></type><name pos:line="2711" pos:column="41">sciThis</name></decl></param>)</parameter_list> <block pos:line="2711" pos:column="50">{
	<expr_stmt><expr><call><name><name pos:line="2712" pos:column="9">sciThis</name><op:operator pos:line="2712" pos:column="16">-&gt;</op:operator><name pos:line="2712" pos:column="18">Tick</name></name><argument_list pos:line="2712" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2713" pos:column="9">return <expr><lit:literal type="number" pos:line="2713" pos:column="16">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2716" pos:column="1">gboolean</name></type> <name><name pos:line="2716" pos:column="10">ScintillaGTK</name><op:operator pos:line="2716" pos:column="22">::</op:operator><name pos:line="2716" pos:column="24">IdleCallback</name></name><parameter_list pos:line="2716" pos:column="36">(<param><decl><type><name pos:line="2716" pos:column="37">ScintillaGTK</name> <type:modifier pos:line="2716" pos:column="50">*</type:modifier></type><name pos:line="2716" pos:column="51">sciThis</name></decl></param>)</parameter_list> <block pos:line="2716" pos:column="60">{
	<comment type="line" pos:line="2717" pos:column="9">// Idler will be automatically stopped, if there is nothing</comment>
	<comment type="line" pos:line="2718" pos:column="9">// to do while idle.</comment>
	<expr_stmt><expr><call><name pos:line="2719" pos:column="9">gdk_threads_enter</name><argument_list pos:line="2719" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2720" pos:column="9">bool</name></type> <name pos:line="2720" pos:column="14">ret</name> <init pos:line="2720" pos:column="18">= <expr><call><name><name pos:line="2720" pos:column="20">sciThis</name><op:operator pos:line="2720" pos:column="27">-&gt;</op:operator><name pos:line="2720" pos:column="29">Idle</name></name><argument_list pos:line="2720" pos:column="33">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2721" pos:column="9">if <condition pos:line="2721" pos:column="12">(<expr><name pos:line="2721" pos:column="13">ret</name> <op:operator pos:line="2721" pos:column="17">==</op:operator> <lit:literal type="boolean" pos:line="2721" pos:column="20">false</lit:literal></expr>)</condition><then pos:line="2721" pos:column="26"> <block pos:line="2721" pos:column="27">{
		<comment type="line" pos:line="2722" pos:column="17">// FIXME: This will remove the idler from GTK, we don't want to</comment>
		<comment type="line" pos:line="2723" pos:column="17">// remove it as it is removed automatically when this function</comment>
		<comment type="line" pos:line="2724" pos:column="17">// returns false (although, it should be harmless).</comment>
		<expr_stmt><expr><call><name><name pos:line="2725" pos:column="17">sciThis</name><op:operator pos:line="2725" pos:column="24">-&gt;</op:operator><name pos:line="2725" pos:column="26">SetIdle</name></name><argument_list pos:line="2725" pos:column="33">(<argument><expr><lit:literal type="boolean" pos:line="2725" pos:column="34">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="2727" pos:column="9">gdk_threads_leave</name><argument_list pos:line="2727" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2728" pos:column="9">return <expr><name pos:line="2728" pos:column="16">ret</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2731" pos:column="1">gboolean</name></type> <name><name pos:line="2731" pos:column="10">ScintillaGTK</name><op:operator pos:line="2731" pos:column="22">::</op:operator><name pos:line="2731" pos:column="24">StyleIdle</name></name><parameter_list pos:line="2731" pos:column="33">(<param><decl><type><name pos:line="2731" pos:column="34">ScintillaGTK</name> <type:modifier pos:line="2731" pos:column="47">*</type:modifier></type><name pos:line="2731" pos:column="48">sciThis</name></decl></param>)</parameter_list> <block pos:line="2731" pos:column="57">{
	<expr_stmt><expr><call><name pos:line="2732" pos:column="9">gdk_threads_enter</name><argument_list pos:line="2732" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2733" pos:column="9">sciThis</name><op:operator pos:line="2733" pos:column="16">-&gt;</op:operator><name pos:line="2733" pos:column="18">IdleStyling</name></name><argument_list pos:line="2733" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2734" pos:column="9">gdk_threads_leave</name><argument_list pos:line="2734" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="2735" pos:column="9">// Idler will be automatically stopped</comment>
	<return pos:line="2736" pos:column="9">return <expr><name pos:line="2736" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2739" pos:column="1">void</name></type> <name><name pos:line="2739" pos:column="6">ScintillaGTK</name><op:operator pos:line="2739" pos:column="18">::</op:operator><name pos:line="2739" pos:column="20">QueueStyling</name></name><parameter_list pos:line="2739" pos:column="32">(<param><decl><type><name pos:line="2739" pos:column="33">int</name></type> <name pos:line="2739" pos:column="37">upTo</name></decl></param>)</parameter_list> <block pos:line="2739" pos:column="43">{
	<expr_stmt><expr><call><name><name pos:line="2740" pos:column="9">Editor</name><op:operator pos:line="2740" pos:column="15">::</op:operator><name pos:line="2740" pos:column="17">QueueStyling</name></name><argument_list pos:line="2740" pos:column="29">(<argument><expr><name pos:line="2740" pos:column="30">upTo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="2741" pos:column="9">if <condition pos:line="2741" pos:column="12">(<expr><op:operator pos:line="2741" pos:column="13">!</op:operator><name><name pos:line="2741" pos:column="14">styleNeeded</name><op:operator pos:line="2741" pos:column="25">.</op:operator><name pos:line="2741" pos:column="26">active</name></name></expr>)</condition><then pos:line="2741" pos:column="33"> <block pos:line="2741" pos:column="34">{
		<comment type="line" pos:line="2742" pos:column="17">// Only allow one style needed to be queued</comment>
		<expr_stmt><expr><name><name pos:line="2743" pos:column="17">styleNeeded</name><op:operator pos:line="2743" pos:column="28">.</op:operator><name pos:line="2743" pos:column="29">active</name></name> <op:operator pos:line="2743" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="2743" pos:column="38">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2744" pos:column="17">g_idle_add_full</name><argument_list pos:line="2744" pos:column="32">(<argument><expr><name pos:line="2744" pos:column="33">G_PRIORITY_HIGH_IDLE</name></expr></argument>,
			<argument><expr><call><name><name pos:line="2745" pos:column="25">reinterpret_cast</name><argument_list pos:line="2745" pos:column="41">&lt;<argument><expr><name pos:line="2745" pos:column="42">GSourceFunc</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2745" pos:column="54">(<argument><expr><name pos:line="2745" pos:column="55">StyleIdle</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2745" pos:column="67">this</name></expr></argument>, <argument><expr><name pos:line="2745" pos:column="73">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2749" pos:column="1">void</name></type> <name><name pos:line="2749" pos:column="6">ScintillaGTK</name><op:operator pos:line="2749" pos:column="18">::</op:operator><name pos:line="2749" pos:column="20">PopUpCB</name></name><parameter_list pos:line="2749" pos:column="27">(<param><decl><type><name pos:line="2749" pos:column="28">GtkMenuItem</name> <type:modifier pos:line="2749" pos:column="40">*</type:modifier></type><name pos:line="2749" pos:column="41">menuItem</name></decl></param>, <param><decl><type><name pos:line="2749" pos:column="51">ScintillaGTK</name> <type:modifier pos:line="2749" pos:column="64">*</type:modifier></type><name pos:line="2749" pos:column="65">sciThis</name></decl></param>)</parameter_list> <block pos:line="2749" pos:column="74">{
	<decl_stmt><decl><type><name pos:line="2750" pos:column="9">guint</name></type> <name pos:line="2750" pos:column="15">action</name> <init pos:line="2750" pos:column="22">= <expr><call pos:line="2750" pos:column="24">(<name pos:line="2750" pos:column="25">sptr_t</name>)<argument_list pos:line="2750" pos:column="32">(<argument><expr><call><name pos:line="2750" pos:column="33">g_object_get_data</name><argument_list pos:line="2750" pos:column="50">(<argument><expr><call><name pos:line="2750" pos:column="51">G_OBJECT</name><argument_list pos:line="2750" pos:column="59">(<argument><expr><name pos:line="2750" pos:column="60">menuItem</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2750" pos:column="71">"CmdNum"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2751" pos:column="9">if <condition pos:line="2751" pos:column="12">(<expr><name pos:line="2751" pos:column="13">action</name></expr>)</condition><then pos:line="2751" pos:column="20"> <block pos:line="2751" pos:column="21">{
		<expr_stmt><expr><call><name><name pos:line="2752" pos:column="17">sciThis</name><op:operator pos:line="2752" pos:column="24">-&gt;</op:operator><name pos:line="2752" pos:column="26">Command</name></name><argument_list pos:line="2752" pos:column="33">(<argument><expr><name pos:line="2752" pos:column="34">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2756" pos:column="1">gboolean</name></type> <name><name pos:line="2756" pos:column="10">ScintillaGTK</name><op:operator pos:line="2756" pos:column="22">::</op:operator><name pos:line="2756" pos:column="24">PressCT</name></name><parameter_list pos:line="2756" pos:column="31">(<param><decl><type><name pos:line="2756" pos:column="32">GtkWidget</name> <type:modifier pos:line="2756" pos:column="42">*</type:modifier></type><name pos:line="2756" pos:column="43">widget</name></decl></param>, <param><decl><type><name pos:line="2756" pos:column="51">GdkEventButton</name> <type:modifier pos:line="2756" pos:column="66">*</type:modifier></type><name pos:line="2756" pos:column="67">event</name></decl></param>, <param><decl><type><name pos:line="2756" pos:column="74">ScintillaGTK</name> <type:modifier pos:line="2756" pos:column="87">*</type:modifier></type><name pos:line="2756" pos:column="88">sciThis</name></decl></param>)</parameter_list> <block pos:line="2756" pos:column="97">{
	<try pos:line="2757" pos:column="9">try <block pos:line="2757" pos:column="13">{
		<if pos:line="2758" pos:column="17">if <condition pos:line="2758" pos:column="20">(<expr><name><name pos:line="2758" pos:column="21">event</name><op:operator pos:line="2758" pos:column="26">-&gt;</op:operator><name pos:line="2758" pos:column="28">window</name></name> <op:operator pos:line="2758" pos:column="35">!=</op:operator> <call><name pos:line="2758" pos:column="38">WindowFromWidget</name><argument_list pos:line="2758" pos:column="54">(<argument><expr><name pos:line="2758" pos:column="55">widget</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2758" pos:column="63">
			<return pos:line="2759" pos:column="25">return <expr><name pos:line="2759" pos:column="32">FALSE</name></expr>;</return></then></if>
		<if pos:line="2760" pos:column="17">if <condition pos:line="2760" pos:column="20">(<expr><name><name pos:line="2760" pos:column="21">event</name><op:operator pos:line="2760" pos:column="26">-&gt;</op:operator><name pos:line="2760" pos:column="28">type</name></name> <op:operator pos:line="2760" pos:column="33">!=</op:operator> <name pos:line="2760" pos:column="36">GDK_BUTTON_PRESS</name></expr>)</condition><then pos:line="2760" pos:column="53">
			<return pos:line="2761" pos:column="25">return <expr><name pos:line="2761" pos:column="32">FALSE</name></expr>;</return></then></if>
		<decl_stmt><decl><type><name pos:line="2762" pos:column="17">Point</name></type> <name pos:line="2762" pos:column="23">pt</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="2763" pos:column="17">pt</name><op:operator pos:line="2763" pos:column="19">.</op:operator><name pos:line="2763" pos:column="20">x</name></name> <op:operator pos:line="2763" pos:column="22">=</op:operator> <call><name pos:line="2763" pos:column="24">int</name><argument_list pos:line="2763" pos:column="27">(<argument><expr><name><name pos:line="2763" pos:column="28">event</name><op:operator pos:line="2763" pos:column="33">-&gt;</op:operator><name pos:line="2763" pos:column="35">x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2764" pos:column="17">pt</name><op:operator pos:line="2764" pos:column="19">.</op:operator><name pos:line="2764" pos:column="20">y</name></name> <op:operator pos:line="2764" pos:column="22">=</op:operator> <call><name pos:line="2764" pos:column="24">int</name><argument_list pos:line="2764" pos:column="27">(<argument><expr><name><name pos:line="2764" pos:column="28">event</name><op:operator pos:line="2764" pos:column="33">-&gt;</op:operator><name pos:line="2764" pos:column="35">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2765" pos:column="17">sciThis</name><op:operator pos:line="2765" pos:column="24">-&gt;</op:operator><name pos:line="2765" pos:column="26">ct</name><op:operator pos:line="2765" pos:column="28">.</op:operator><name pos:line="2765" pos:column="29">MouseClick</name></name><argument_list pos:line="2765" pos:column="39">(<argument><expr><name pos:line="2765" pos:column="40">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2766" pos:column="17">sciThis</name><op:operator pos:line="2766" pos:column="24">-&gt;</op:operator><name pos:line="2766" pos:column="26">CallTipClick</name></name><argument_list pos:line="2766" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2767" pos:column="11">catch <parameter_list pos:line="2767" pos:column="17">(<param><decl><type><type:modifier pos:line="2767" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2767" pos:column="23">{
	}</block></catch></try>
	<return pos:line="2769" pos:column="9">return <expr><name pos:line="2769" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<cpp:if pos:line="2772" pos:column="1">#<cpp:directive pos:line="2772" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2772" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2772" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2772" pos:column="23">3</lit:literal><op:operator pos:line="2772" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2772" pos:column="25">0</lit:literal><op:operator pos:line="2772" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2772" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function><type><name pos:line="2774" pos:column="1">gboolean</name></type> <name><name pos:line="2774" pos:column="10">ScintillaGTK</name><op:operator pos:line="2774" pos:column="22">::</op:operator><name pos:line="2774" pos:column="24">DrawCT</name></name><parameter_list pos:line="2774" pos:column="30">(<param><decl><type><name pos:line="2774" pos:column="31">GtkWidget</name> <type:modifier pos:line="2774" pos:column="41">*</type:modifier></type><name pos:line="2774" pos:column="42">widget</name></decl></param>, <param><decl><type><name pos:line="2774" pos:column="50">cairo_t</name> <type:modifier pos:line="2774" pos:column="58">*</type:modifier></type><name pos:line="2774" pos:column="59">cr</name></decl></param>, <param><decl><type><name pos:line="2774" pos:column="63">CallTip</name> <type:modifier pos:line="2774" pos:column="71">*</type:modifier></type><name pos:line="2774" pos:column="72">ctip</name></decl></param>)</parameter_list> <block pos:line="2774" pos:column="78">{
	<try pos:line="2775" pos:column="9">try <block pos:line="2775" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2776" pos:column="17">Surface</name> <type:modifier pos:line="2776" pos:column="25">*</type:modifier></type><name pos:line="2776" pos:column="26">surfaceWindow</name> <init pos:line="2776" pos:column="40">= <expr><call><name><name pos:line="2776" pos:column="42">Surface</name><op:operator pos:line="2776" pos:column="49">::</op:operator><name pos:line="2776" pos:column="51">Allocate</name></name><argument_list pos:line="2776" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2777" pos:column="17">if <condition pos:line="2777" pos:column="20">(<expr><name pos:line="2777" pos:column="21">surfaceWindow</name></expr>)</condition><then pos:line="2777" pos:column="35"> <block pos:line="2777" pos:column="36">{
			<expr_stmt><expr><call><name><name pos:line="2778" pos:column="25">surfaceWindow</name><op:operator pos:line="2778" pos:column="38">-&gt;</op:operator><name pos:line="2778" pos:column="40">Init</name></name><argument_list pos:line="2778" pos:column="44">(<argument><expr><name pos:line="2778" pos:column="45">cr</name></expr></argument>, <argument><expr><name pos:line="2778" pos:column="49">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2779" pos:column="25">surfaceWindow</name><op:operator pos:line="2779" pos:column="38">-&gt;</op:operator><name pos:line="2779" pos:column="40">SetUnicodeMode</name></name><argument_list pos:line="2779" pos:column="54">(<argument><expr><name pos:line="2779" pos:column="55">SC_CP_UTF8</name> <op:operator pos:line="2779" pos:column="66">==</op:operator> <name><name pos:line="2779" pos:column="69">ctip</name><op:operator pos:line="2779" pos:column="73">-&gt;</op:operator><name pos:line="2779" pos:column="75">codePage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2780" pos:column="25">surfaceWindow</name><op:operator pos:line="2780" pos:column="38">-&gt;</op:operator><name pos:line="2780" pos:column="40">SetDBCSMode</name></name><argument_list pos:line="2780" pos:column="51">(<argument><expr><name><name pos:line="2780" pos:column="52">ctip</name><op:operator pos:line="2780" pos:column="56">-&gt;</op:operator><name pos:line="2780" pos:column="58">codePage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2781" pos:column="25">ctip</name><op:operator pos:line="2781" pos:column="29">-&gt;</op:operator><name pos:line="2781" pos:column="31">PaintCT</name></name><argument_list pos:line="2781" pos:column="38">(<argument><expr><name pos:line="2781" pos:column="39">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2782" pos:column="25">surfaceWindow</name><op:operator pos:line="2782" pos:column="38">-&gt;</op:operator><name pos:line="2782" pos:column="40">Release</name></name><argument_list pos:line="2782" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2783" pos:column="25">delete</op:operator> <name pos:line="2783" pos:column="32">surfaceWindow</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block> <catch pos:line="2785" pos:column="11">catch <parameter_list pos:line="2785" pos:column="17">(<param><decl><type><type:modifier pos:line="2785" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2785" pos:column="23">{
		<comment type="line" pos:line="2786" pos:column="17">// No pointer back to Scintilla to save status</comment>
	}</block></catch></try>
	<return pos:line="2788" pos:column="9">return <expr><name pos:line="2788" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<cpp:else pos:line="2791" pos:column="1">#<cpp:directive pos:line="2791" pos:column="2">else</cpp:directive></cpp:else>

<function><type><name pos:line="2793" pos:column="1">gboolean</name></type> <name><name pos:line="2793" pos:column="10">ScintillaGTK</name><op:operator pos:line="2793" pos:column="22">::</op:operator><name pos:line="2793" pos:column="24">ExposeCT</name></name><parameter_list pos:line="2793" pos:column="32">(<param><decl><type><name pos:line="2793" pos:column="33">GtkWidget</name> <type:modifier pos:line="2793" pos:column="43">*</type:modifier></type><name pos:line="2793" pos:column="44">widget</name></decl></param>, <param><decl><type><name pos:line="2793" pos:column="52">GdkEventExpose</name> <type:modifier pos:line="2793" pos:column="67">*</type:modifier></type></decl></param> <comment type="block" pos:line="2793" pos:column="69">/*ose*/</comment>, <param><decl><type><name pos:line="2793" pos:column="78">CallTip</name> <type:modifier pos:line="2793" pos:column="86">*</type:modifier></type><name pos:line="2793" pos:column="87">ctip</name></decl></param>)</parameter_list> <block pos:line="2793" pos:column="93">{
	<try pos:line="2794" pos:column="9">try <block pos:line="2794" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2795" pos:column="17">Surface</name> <type:modifier pos:line="2795" pos:column="25">*</type:modifier></type><name pos:line="2795" pos:column="26">surfaceWindow</name> <init pos:line="2795" pos:column="40">= <expr><call><name><name pos:line="2795" pos:column="42">Surface</name><op:operator pos:line="2795" pos:column="49">::</op:operator><name pos:line="2795" pos:column="51">Allocate</name></name><argument_list pos:line="2795" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2796" pos:column="17">if <condition pos:line="2796" pos:column="20">(<expr><name pos:line="2796" pos:column="21">surfaceWindow</name></expr>)</condition><then pos:line="2796" pos:column="35"> <block pos:line="2796" pos:column="36">{
			<expr_stmt><expr><call><name><name pos:line="2797" pos:column="25">surfaceWindow</name><op:operator pos:line="2797" pos:column="38">-&gt;</op:operator><name pos:line="2797" pos:column="40">Init</name></name><argument_list pos:line="2797" pos:column="44">(<argument><expr><call><name pos:line="2797" pos:column="45">WindowFromWidget</name><argument_list pos:line="2797" pos:column="61">(<argument><expr><name pos:line="2797" pos:column="62">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2797" pos:column="71">widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2798" pos:column="25">surfaceWindow</name><op:operator pos:line="2798" pos:column="38">-&gt;</op:operator><name pos:line="2798" pos:column="40">SetUnicodeMode</name></name><argument_list pos:line="2798" pos:column="54">(<argument><expr><name pos:line="2798" pos:column="55">SC_CP_UTF8</name> <op:operator pos:line="2798" pos:column="66">==</op:operator> <name><name pos:line="2798" pos:column="69">ctip</name><op:operator pos:line="2798" pos:column="73">-&gt;</op:operator><name pos:line="2798" pos:column="75">codePage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2799" pos:column="25">surfaceWindow</name><op:operator pos:line="2799" pos:column="38">-&gt;</op:operator><name pos:line="2799" pos:column="40">SetDBCSMode</name></name><argument_list pos:line="2799" pos:column="51">(<argument><expr><name><name pos:line="2799" pos:column="52">ctip</name><op:operator pos:line="2799" pos:column="56">-&gt;</op:operator><name pos:line="2799" pos:column="58">codePage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2800" pos:column="25">ctip</name><op:operator pos:line="2800" pos:column="29">-&gt;</op:operator><name pos:line="2800" pos:column="31">PaintCT</name></name><argument_list pos:line="2800" pos:column="38">(<argument><expr><name pos:line="2800" pos:column="39">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2801" pos:column="25">surfaceWindow</name><op:operator pos:line="2801" pos:column="38">-&gt;</op:operator><name pos:line="2801" pos:column="40">Release</name></name><argument_list pos:line="2801" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2802" pos:column="25">delete</op:operator> <name pos:line="2802" pos:column="32">surfaceWindow</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block> <catch pos:line="2804" pos:column="11">catch <parameter_list pos:line="2804" pos:column="17">(<param><decl><type><type:modifier pos:line="2804" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2804" pos:column="23">{
		<comment type="line" pos:line="2805" pos:column="17">// No pointer back to Scintilla to save status</comment>
	}</block></catch></try>
	<return pos:line="2807" pos:column="9">return <expr><name pos:line="2807" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<cpp:endif pos:line="2810" pos:column="1">#<cpp:directive pos:line="2810" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="2812" pos:column="1">sptr_t</name></type> <name><name pos:line="2812" pos:column="8">ScintillaGTK</name><op:operator pos:line="2812" pos:column="20">::</op:operator><name pos:line="2812" pos:column="22">DirectFunction</name></name><parameter_list pos:line="2812" pos:column="36">(
    <param><decl><type><name pos:line="2813" pos:column="5">ScintillaGTK</name> <type:modifier pos:line="2813" pos:column="18">*</type:modifier></type><name pos:line="2813" pos:column="19">sciThis</name></decl></param>, <param><decl><type><name pos:line="2813" pos:column="28">unsigned</name> <name pos:line="2813" pos:column="37">int</name></type> <name pos:line="2813" pos:column="41">iMessage</name></decl></param>, <param><decl><type><name pos:line="2813" pos:column="51">uptr_t</name></type> <name pos:line="2813" pos:column="58">wParam</name></decl></param>, <param><decl><type><name pos:line="2813" pos:column="66">sptr_t</name></type> <name pos:line="2813" pos:column="73">lParam</name></decl></param>)</parameter_list> <block pos:line="2813" pos:column="81">{
	<return pos:line="2814" pos:column="9">return <expr><call><name><name pos:line="2814" pos:column="16">sciThis</name><op:operator pos:line="2814" pos:column="23">-&gt;</op:operator><name pos:line="2814" pos:column="25">WndProc</name></name><argument_list pos:line="2814" pos:column="32">(<argument><expr><name pos:line="2814" pos:column="33">iMessage</name></expr></argument>, <argument><expr><name pos:line="2814" pos:column="43">wParam</name></expr></argument>, <argument><expr><name pos:line="2814" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2817" pos:column="1">sptr_t</name></type> <name pos:line="2817" pos:column="8">scintilla_send_message</name><parameter_list pos:line="2817" pos:column="30">(<param><decl><type><name pos:line="2817" pos:column="31">ScintillaObject</name> <type:modifier pos:line="2817" pos:column="47">*</type:modifier></type><name pos:line="2817" pos:column="48">sci</name></decl></param>, <param><decl><type><name pos:line="2817" pos:column="53">unsigned</name> <name pos:line="2817" pos:column="62">int</name></type> <name pos:line="2817" pos:column="66">iMessage</name></decl></param>, <param><decl><type><name pos:line="2817" pos:column="76">uptr_t</name></type> <name pos:line="2817" pos:column="83">wParam</name></decl></param>, <param><decl><type><name pos:line="2817" pos:column="91">sptr_t</name></type> <name pos:line="2817" pos:column="98">lParam</name></decl></param>)</parameter_list> <block pos:line="2817" pos:column="106">{
	<decl_stmt><decl><type><name pos:line="2818" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2818" pos:column="22">*</type:modifier></type><name pos:line="2818" pos:column="23">psci</name> <init pos:line="2818" pos:column="28">= <expr><call><name><name pos:line="2818" pos:column="30">reinterpret_cast</name><argument_list pos:line="2818" pos:column="46">&lt;<argument><expr><name pos:line="2818" pos:column="47">ScintillaGTK</name> <op:operator pos:line="2818" pos:column="60">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2818" pos:column="62">(<argument><expr><name><name pos:line="2818" pos:column="63">sci</name><op:operator pos:line="2818" pos:column="66">-&gt;</op:operator><name pos:line="2818" pos:column="68">pscin</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="2819" pos:column="9">return <expr><call><name><name pos:line="2819" pos:column="16">psci</name><op:operator pos:line="2819" pos:column="20">-&gt;</op:operator><name pos:line="2819" pos:column="22">WndProc</name></name><argument_list pos:line="2819" pos:column="29">(<argument><expr><name pos:line="2819" pos:column="30">iMessage</name></expr></argument>, <argument><expr><name pos:line="2819" pos:column="40">wParam</name></expr></argument>, <argument><expr><name pos:line="2819" pos:column="48">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function_decl><type><specifier pos:line="2822" pos:column="1">static</specifier> <name pos:line="2822" pos:column="8">void</name></type> <name pos:line="2822" pos:column="13">scintilla_class_init</name><parameter_list pos:line="2822" pos:column="33">(<param><decl><type><name pos:line="2822" pos:column="34">ScintillaClass</name> <type:modifier pos:line="2822" pos:column="49">*</type:modifier></type><name pos:line="2822" pos:column="50">klass</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier pos:line="2823" pos:column="1">static</specifier> <name pos:line="2823" pos:column="8">void</name></type> <name pos:line="2823" pos:column="13">scintilla_init</name><parameter_list pos:line="2823" pos:column="27">(<param><decl><type><name pos:line="2823" pos:column="28">ScintillaObject</name> <type:modifier pos:line="2823" pos:column="44">*</type:modifier></type><name pos:line="2823" pos:column="45">sci</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><specifier pos:line="2825" pos:column="1">extern</specifier> <name pos:line="2825" pos:column="8">void</name></type> <name pos:line="2825" pos:column="13">Platform_Initialise</name><parameter_list pos:line="2825" pos:column="32">()</parameter_list>;</function_decl>
<function_decl><type><specifier pos:line="2826" pos:column="1">extern</specifier> <name pos:line="2826" pos:column="8">void</name></type> <name pos:line="2826" pos:column="13">Platform_Finalise</name><parameter_list pos:line="2826" pos:column="30">()</parameter_list>;</function_decl>

<function><type><name pos:line="2828" pos:column="1">GType</name></type> <name pos:line="2828" pos:column="7">scintilla_get_type</name><parameter_list pos:line="2828" pos:column="25">()</parameter_list> <block pos:line="2828" pos:column="28">{
	<decl_stmt><decl><type><specifier pos:line="2829" pos:column="9">static</specifier> <name pos:line="2829" pos:column="16">GType</name></type> <name pos:line="2829" pos:column="22">scintilla_type</name> <init pos:line="2829" pos:column="37">= <expr><lit:literal type="number" pos:line="2829" pos:column="39">0</lit:literal></expr></init></decl>;</decl_stmt>
	<try pos:line="2830" pos:column="9">try <block pos:line="2830" pos:column="13">{

		<if pos:line="2832" pos:column="17">if <condition pos:line="2832" pos:column="20">(<expr><op:operator pos:line="2832" pos:column="21">!</op:operator><name pos:line="2832" pos:column="22">scintilla_type</name></expr>)</condition><then pos:line="2832" pos:column="37"> <block pos:line="2832" pos:column="38">{
			<expr_stmt><expr><name pos:line="2833" pos:column="25">scintilla_type</name> <op:operator pos:line="2833" pos:column="40">=</op:operator> <call><name pos:line="2833" pos:column="42">g_type_from_name</name><argument_list pos:line="2833" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="2833" pos:column="59">"Scintilla"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2834" pos:column="25">if <condition pos:line="2834" pos:column="28">(<expr><op:operator pos:line="2834" pos:column="29">!</op:operator><name pos:line="2834" pos:column="30">scintilla_type</name></expr>)</condition><then pos:line="2834" pos:column="45"> <block pos:line="2834" pos:column="46">{
				<decl_stmt><decl><type><specifier pos:line="2835" pos:column="33">static</specifier> <name pos:line="2835" pos:column="40">GTypeInfo</name></type> <name pos:line="2835" pos:column="50">scintilla_info</name> <init pos:line="2835" pos:column="65">= <expr><block pos:line="2835" pos:column="67">{
					<expr><op:operator pos:line="2836" pos:column="41">(</op:operator><name pos:line="2836" pos:column="42">guint16</name><op:operator pos:line="2836" pos:column="49">)</op:operator> <sizeof pos:line="2836" pos:column="51">sizeof <argument_list pos:line="2836" pos:column="58">(<argument><expr><name pos:line="2836" pos:column="59">ScintillaClass</name></expr></argument>)</argument_list></sizeof></expr>,
					<expr><name pos:line="2837" pos:column="41">NULL</name></expr>, <comment type="line" pos:line="2837" pos:column="47">//(GBaseInitFunc)</comment>
					<expr><name pos:line="2838" pos:column="41">NULL</name></expr>, <comment type="line" pos:line="2838" pos:column="47">//(GBaseFinalizeFunc)</comment>
					<expr><op:operator pos:line="2839" pos:column="41">(</op:operator><name pos:line="2839" pos:column="42">GClassInitFunc</name><op:operator pos:line="2839" pos:column="56">)</op:operator> <name pos:line="2839" pos:column="58">scintilla_class_init</name></expr>,
					<expr><name pos:line="2840" pos:column="41">NULL</name></expr>, <comment type="line" pos:line="2840" pos:column="47">//(GClassFinalizeFunc)</comment>
					<expr><name pos:line="2841" pos:column="41">NULL</name></expr>, <comment type="line" pos:line="2841" pos:column="47">//gconstpointer data</comment>
					<expr><op:operator pos:line="2842" pos:column="41">(</op:operator><name pos:line="2842" pos:column="42">guint16</name><op:operator pos:line="2842" pos:column="49">)</op:operator> <sizeof pos:line="2842" pos:column="51">sizeof <argument_list pos:line="2842" pos:column="58">(<argument><expr><name pos:line="2842" pos:column="59">ScintillaObject</name></expr></argument>)</argument_list></sizeof></expr>,
					<expr><lit:literal type="number" pos:line="2843" pos:column="41">0</lit:literal></expr>, <comment type="line" pos:line="2843" pos:column="44">//n_preallocs</comment>
					<expr><op:operator pos:line="2844" pos:column="41">(</op:operator><name pos:line="2844" pos:column="42">GInstanceInitFunc</name><op:operator pos:line="2844" pos:column="59">)</op:operator> <name pos:line="2844" pos:column="61">scintilla_init</name></expr>,
					<expr><name pos:line="2845" pos:column="41">NULL</name></expr> <comment type="line" pos:line="2845" pos:column="46">//(GTypeValueTable*)</comment>
				}</block></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><name pos:line="2848" pos:column="33">scintilla_type</name> <op:operator pos:line="2848" pos:column="48">=</op:operator> <call><name pos:line="2848" pos:column="50">g_type_register_static</name><argument_list pos:line="2848" pos:column="72">(
				            <argument><expr><name pos:line="2849" pos:column="45">GTK_TYPE_CONTAINER</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2849" pos:column="65">"Scintilla"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2849" pos:column="78">&amp;</op:operator><name pos:line="2849" pos:column="79">scintilla_info</name></expr></argument>, <argument><expr><op:operator pos:line="2849" pos:column="95">(</op:operator><name pos:line="2849" pos:column="96">GTypeFlags</name><op:operator pos:line="2849" pos:column="106">)</op:operator> <lit:literal type="number" pos:line="2849" pos:column="108">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>

	}</block> <catch pos:line="2853" pos:column="11">catch <parameter_list pos:line="2853" pos:column="17">(<param><decl><type><type:modifier pos:line="2853" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2853" pos:column="23">{
	}</block></catch></try>
	<return pos:line="2855" pos:column="9">return <expr><name pos:line="2855" pos:column="16">scintilla_type</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2858" pos:column="1">void</name></type> <name><name pos:line="2858" pos:column="6">ScintillaGTK</name><op:operator pos:line="2858" pos:column="18">::</op:operator><name pos:line="2858" pos:column="20">ClassInit</name></name><parameter_list pos:line="2858" pos:column="29">(<param><decl><type><name pos:line="2858" pos:column="30">OBJECT_CLASS</name><type:modifier pos:line="2858" pos:column="42">*</type:modifier></type> <name pos:line="2858" pos:column="44">object_class</name></decl></param>, <param><decl><type><name pos:line="2858" pos:column="58">GtkWidgetClass</name> <type:modifier pos:line="2858" pos:column="73">*</type:modifier></type><name pos:line="2858" pos:column="74">widget_class</name></decl></param>, <param><decl><type><name pos:line="2858" pos:column="88">GtkContainerClass</name> <type:modifier pos:line="2858" pos:column="106">*</type:modifier></type><name pos:line="2858" pos:column="107">container_class</name></decl></param>)</parameter_list> <block pos:line="2858" pos:column="124">{
	<expr_stmt><expr><call><name pos:line="2859" pos:column="9">Platform_Initialise</name><argument_list pos:line="2859" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:line="2860" pos:column="1">#<cpp:directive pos:line="2860" pos:column="2">ifdef</cpp:directive> <name pos:line="2860" pos:column="8">SCI_LEXER</name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="2861" pos:column="9">Scintilla_LinkLexers</name><argument_list pos:line="2861" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2862" pos:column="1">#<cpp:directive pos:line="2862" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name pos:line="2863" pos:column="9">atomClipboard</name> <op:operator pos:line="2863" pos:column="23">=</op:operator> <call><name pos:line="2863" pos:column="25">gdk_atom_intern</name><argument_list pos:line="2863" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="2863" pos:column="41">"CLIPBOARD"</lit:literal></expr></argument>, <argument><expr><name pos:line="2863" pos:column="54">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2864" pos:column="9">atomUTF8</name> <op:operator pos:line="2864" pos:column="18">=</op:operator> <call><name pos:line="2864" pos:column="20">gdk_atom_intern</name><argument_list pos:line="2864" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="2864" pos:column="36">"UTF8_STRING"</lit:literal></expr></argument>, <argument><expr><name pos:line="2864" pos:column="51">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2865" pos:column="9">atomString</name> <op:operator pos:line="2865" pos:column="20">=</op:operator> <name pos:line="2865" pos:column="22">GDK_SELECTION_TYPE_STRING</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2866" pos:column="9">atomUriList</name> <op:operator pos:line="2866" pos:column="21">=</op:operator> <call><name pos:line="2866" pos:column="23">gdk_atom_intern</name><argument_list pos:line="2866" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="2866" pos:column="39">"text/uri-list"</lit:literal></expr></argument>, <argument><expr><name pos:line="2866" pos:column="56">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2867" pos:column="9">atomDROPFILES_DND</name> <op:operator pos:line="2867" pos:column="27">=</op:operator> <call><name pos:line="2867" pos:column="29">gdk_atom_intern</name><argument_list pos:line="2867" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="2867" pos:column="45">"DROPFILES_DND"</lit:literal></expr></argument>, <argument><expr><name pos:line="2867" pos:column="62">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2869" pos:column="9">// Define default signal handlers for the class:  Could move more</comment>
	<comment type="line" pos:line="2870" pos:column="9">// of the signal handlers here (those that currently attached to wDraw</comment>
	<comment type="line" pos:line="2871" pos:column="9">// in Initialise() may require coordinate translation?)</comment>

	<expr_stmt><expr><name><name pos:line="2873" pos:column="9">object_class</name><op:operator pos:line="2873" pos:column="21">-&gt;</op:operator><name pos:line="2873" pos:column="23">finalize</name></name> <op:operator pos:line="2873" pos:column="32">=</op:operator> <name pos:line="2873" pos:column="34">Destroy</name></expr>;</expr_stmt>
<cpp:if pos:line="2874" pos:column="1">#<cpp:directive pos:line="2874" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2874" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2874" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2874" pos:column="23">3</lit:literal><op:operator pos:line="2874" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2874" pos:column="25">0</lit:literal><op:operator pos:line="2874" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2874" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><name><name pos:line="2875" pos:column="9">widget_class</name><op:operator pos:line="2875" pos:column="21">-&gt;</op:operator><name pos:line="2875" pos:column="23">get_preferred_width</name></name> <op:operator pos:line="2875" pos:column="43">=</op:operator> <name pos:line="2875" pos:column="45">GetPreferredWidth</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2876" pos:column="9">widget_class</name><op:operator pos:line="2876" pos:column="21">-&gt;</op:operator><name pos:line="2876" pos:column="23">get_preferred_height</name></name> <op:operator pos:line="2876" pos:column="44">=</op:operator> <name pos:line="2876" pos:column="46">GetPreferredHeight</name></expr>;</expr_stmt>
<cpp:else pos:line="2877" pos:column="1">#<cpp:directive pos:line="2877" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name><name pos:line="2878" pos:column="9">widget_class</name><op:operator pos:line="2878" pos:column="21">-&gt;</op:operator><name pos:line="2878" pos:column="23">size_request</name></name> <op:operator pos:line="2878" pos:column="36">=</op:operator> <name pos:line="2878" pos:column="38">SizeRequest</name></expr>;</expr_stmt>
<cpp:endif pos:line="2879" pos:column="1">#<cpp:directive pos:line="2879" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="2880" pos:column="9">widget_class</name><op:operator pos:line="2880" pos:column="21">-&gt;</op:operator><name pos:line="2880" pos:column="23">size_allocate</name></name> <op:operator pos:line="2880" pos:column="37">=</op:operator> <name pos:line="2880" pos:column="39">SizeAllocate</name></expr>;</expr_stmt>
<cpp:if pos:line="2881" pos:column="1">#<cpp:directive pos:line="2881" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2881" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2881" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2881" pos:column="23">3</lit:literal><op:operator pos:line="2881" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2881" pos:column="25">0</lit:literal><op:operator pos:line="2881" pos:column="26">,</op:operator><lit:literal type="number" pos:line="2881" pos:column="27">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><name><name pos:line="2882" pos:column="9">widget_class</name><op:operator pos:line="2882" pos:column="21">-&gt;</op:operator><name pos:line="2882" pos:column="23">draw</name></name> <op:operator pos:line="2882" pos:column="28">=</op:operator> <name pos:line="2882" pos:column="30">DrawMain</name></expr>;</expr_stmt>
<cpp:else pos:line="2883" pos:column="1">#<cpp:directive pos:line="2883" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name><name pos:line="2884" pos:column="9">widget_class</name><op:operator pos:line="2884" pos:column="21">-&gt;</op:operator><name pos:line="2884" pos:column="23">expose_event</name></name> <op:operator pos:line="2884" pos:column="36">=</op:operator> <name pos:line="2884" pos:column="38">ExposeMain</name></expr>;</expr_stmt>
<cpp:endif pos:line="2885" pos:column="1">#<cpp:directive pos:line="2885" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="2886" pos:column="9">widget_class</name><op:operator pos:line="2886" pos:column="21">-&gt;</op:operator><name pos:line="2886" pos:column="23">motion_notify_event</name></name> <op:operator pos:line="2886" pos:column="43">=</op:operator> <name pos:line="2886" pos:column="45">Motion</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2887" pos:column="9">widget_class</name><op:operator pos:line="2887" pos:column="21">-&gt;</op:operator><name pos:line="2887" pos:column="23">button_press_event</name></name> <op:operator pos:line="2887" pos:column="42">=</op:operator> <name pos:line="2887" pos:column="44">Press</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2888" pos:column="9">widget_class</name><op:operator pos:line="2888" pos:column="21">-&gt;</op:operator><name pos:line="2888" pos:column="23">button_release_event</name></name> <op:operator pos:line="2888" pos:column="44">=</op:operator> <name pos:line="2888" pos:column="46">MouseRelease</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2889" pos:column="9">widget_class</name><op:operator pos:line="2889" pos:column="21">-&gt;</op:operator><name pos:line="2889" pos:column="23">scroll_event</name></name> <op:operator pos:line="2889" pos:column="36">=</op:operator> <name pos:line="2889" pos:column="38">ScrollEvent</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2890" pos:column="9">widget_class</name><op:operator pos:line="2890" pos:column="21">-&gt;</op:operator><name pos:line="2890" pos:column="23">key_press_event</name></name> <op:operator pos:line="2890" pos:column="39">=</op:operator> <name pos:line="2890" pos:column="41">KeyPress</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2891" pos:column="9">widget_class</name><op:operator pos:line="2891" pos:column="21">-&gt;</op:operator><name pos:line="2891" pos:column="23">key_release_event</name></name> <op:operator pos:line="2891" pos:column="41">=</op:operator> <name pos:line="2891" pos:column="43">KeyRelease</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2892" pos:column="9">widget_class</name><op:operator pos:line="2892" pos:column="21">-&gt;</op:operator><name pos:line="2892" pos:column="23">focus_in_event</name></name> <op:operator pos:line="2892" pos:column="38">=</op:operator> <name pos:line="2892" pos:column="40">FocusIn</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2893" pos:column="9">widget_class</name><op:operator pos:line="2893" pos:column="21">-&gt;</op:operator><name pos:line="2893" pos:column="23">focus_out_event</name></name> <op:operator pos:line="2893" pos:column="39">=</op:operator> <name pos:line="2893" pos:column="41">FocusOut</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2894" pos:column="9">widget_class</name><op:operator pos:line="2894" pos:column="21">-&gt;</op:operator><name pos:line="2894" pos:column="23">selection_received</name></name> <op:operator pos:line="2894" pos:column="42">=</op:operator> <name pos:line="2894" pos:column="44">SelectionReceived</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2895" pos:column="9">widget_class</name><op:operator pos:line="2895" pos:column="21">-&gt;</op:operator><name pos:line="2895" pos:column="23">selection_get</name></name> <op:operator pos:line="2895" pos:column="37">=</op:operator> <name pos:line="2895" pos:column="39">SelectionGet</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2896" pos:column="9">widget_class</name><op:operator pos:line="2896" pos:column="21">-&gt;</op:operator><name pos:line="2896" pos:column="23">selection_clear_event</name></name> <op:operator pos:line="2896" pos:column="45">=</op:operator> <name pos:line="2896" pos:column="47">SelectionClear</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2898" pos:column="9">widget_class</name><op:operator pos:line="2898" pos:column="21">-&gt;</op:operator><name pos:line="2898" pos:column="23">drag_data_received</name></name> <op:operator pos:line="2898" pos:column="42">=</op:operator> <name pos:line="2898" pos:column="44">DragDataReceived</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2899" pos:column="9">widget_class</name><op:operator pos:line="2899" pos:column="21">-&gt;</op:operator><name pos:line="2899" pos:column="23">drag_motion</name></name> <op:operator pos:line="2899" pos:column="35">=</op:operator> <name pos:line="2899" pos:column="37">DragMotion</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2900" pos:column="9">widget_class</name><op:operator pos:line="2900" pos:column="21">-&gt;</op:operator><name pos:line="2900" pos:column="23">drag_leave</name></name> <op:operator pos:line="2900" pos:column="34">=</op:operator> <name pos:line="2900" pos:column="36">DragLeave</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2901" pos:column="9">widget_class</name><op:operator pos:line="2901" pos:column="21">-&gt;</op:operator><name pos:line="2901" pos:column="23">drag_end</name></name> <op:operator pos:line="2901" pos:column="32">=</op:operator> <name pos:line="2901" pos:column="34">DragEnd</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2902" pos:column="9">widget_class</name><op:operator pos:line="2902" pos:column="21">-&gt;</op:operator><name pos:line="2902" pos:column="23">drag_drop</name></name> <op:operator pos:line="2902" pos:column="33">=</op:operator> <name pos:line="2902" pos:column="35">Drop</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2903" pos:column="9">widget_class</name><op:operator pos:line="2903" pos:column="21">-&gt;</op:operator><name pos:line="2903" pos:column="23">drag_data_get</name></name> <op:operator pos:line="2903" pos:column="37">=</op:operator> <name pos:line="2903" pos:column="39">DragDataGet</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2905" pos:column="9">widget_class</name><op:operator pos:line="2905" pos:column="21">-&gt;</op:operator><name pos:line="2905" pos:column="23">realize</name></name> <op:operator pos:line="2905" pos:column="31">=</op:operator> <name pos:line="2905" pos:column="33">Realize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2906" pos:column="9">widget_class</name><op:operator pos:line="2906" pos:column="21">-&gt;</op:operator><name pos:line="2906" pos:column="23">unrealize</name></name> <op:operator pos:line="2906" pos:column="33">=</op:operator> <name pos:line="2906" pos:column="35">UnRealize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2907" pos:column="9">widget_class</name><op:operator pos:line="2907" pos:column="21">-&gt;</op:operator><name pos:line="2907" pos:column="23">map</name></name> <op:operator pos:line="2907" pos:column="27">=</op:operator> <name pos:line="2907" pos:column="29">Map</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2908" pos:column="9">widget_class</name><op:operator pos:line="2908" pos:column="21">-&gt;</op:operator><name pos:line="2908" pos:column="23">unmap</name></name> <op:operator pos:line="2908" pos:column="29">=</op:operator> <name pos:line="2908" pos:column="31">UnMap</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2910" pos:column="9">container_class</name><op:operator pos:line="2910" pos:column="24">-&gt;</op:operator><name pos:line="2910" pos:column="26">forall</name></name> <op:operator pos:line="2910" pos:column="33">=</op:operator> <name pos:line="2910" pos:column="35">MainForAll</name></expr>;</expr_stmt>
}</block></function>

<cpp:define pos:line="2913" pos:column="1">#<cpp:directive pos:line="2913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2913" pos:column="9">SIG_MARSHAL</name></cpp:macro> <cpp:value pos:line="2913" pos:column="21">scintilla_marshal_NONE__INT_POINTER</cpp:value></cpp:define>
<cpp:define pos:line="2914" pos:column="1">#<cpp:directive pos:line="2914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2914" pos:column="9">MARSHAL_ARGUMENTS</name></cpp:macro> <cpp:value pos:line="2914" pos:column="27">G_TYPE_INT, G_TYPE_POINTER</cpp:value></cpp:define>

<function><type><specifier pos:line="2916" pos:column="1">static</specifier> <name pos:line="2916" pos:column="8">void</name></type> <name pos:line="2916" pos:column="13">scintilla_class_init</name><parameter_list pos:line="2916" pos:column="33">(<param><decl><type><name pos:line="2916" pos:column="34">ScintillaClass</name> <type:modifier pos:line="2916" pos:column="49">*</type:modifier></type><name pos:line="2916" pos:column="50">klass</name></decl></param>)</parameter_list> <block pos:line="2916" pos:column="57">{
	<try pos:line="2917" pos:column="9">try <block pos:line="2917" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="2918" pos:column="17">OBJECT_CLASS</name> <type:modifier pos:line="2918" pos:column="30">*</type:modifier></type><name pos:line="2918" pos:column="31">object_class</name> <init pos:line="2918" pos:column="44">= <expr><op:operator pos:line="2918" pos:column="46">(</op:operator><name pos:line="2918" pos:column="47">OBJECT_CLASS</name><op:operator pos:line="2918" pos:column="59">*</op:operator><op:operator pos:line="2918" pos:column="60">)</op:operator> <name pos:line="2918" pos:column="62">klass</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2919" pos:column="17">GtkWidgetClass</name> <type:modifier pos:line="2919" pos:column="32">*</type:modifier></type><name pos:line="2919" pos:column="33">widget_class</name> <init pos:line="2919" pos:column="46">= <expr><op:operator pos:line="2919" pos:column="48">(</op:operator><name pos:line="2919" pos:column="49">GtkWidgetClass</name><op:operator pos:line="2919" pos:column="63">*</op:operator><op:operator pos:line="2919" pos:column="64">)</op:operator> <name pos:line="2919" pos:column="66">klass</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2920" pos:column="17">GtkContainerClass</name> <type:modifier pos:line="2920" pos:column="35">*</type:modifier></type><name pos:line="2920" pos:column="36">container_class</name> <init pos:line="2920" pos:column="52">= <expr><op:operator pos:line="2920" pos:column="54">(</op:operator><name pos:line="2920" pos:column="55">GtkContainerClass</name><op:operator pos:line="2920" pos:column="72">*</op:operator><op:operator pos:line="2920" pos:column="73">)</op:operator> <name pos:line="2920" pos:column="75">klass</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="2922" pos:column="17">GSignalFlags</name></type> <name pos:line="2922" pos:column="30">sigflags</name> <init pos:line="2922" pos:column="39">= <expr><call><name pos:line="2922" pos:column="41">GSignalFlags</name><argument_list pos:line="2922" pos:column="53">(<argument><expr><name pos:line="2922" pos:column="54">G_SIGNAL_ACTION</name> <op:operator pos:line="2922" pos:column="70">|</op:operator> <name pos:line="2922" pos:column="72">G_SIGNAL_RUN_LAST</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="2923" pos:column="17">scintilla_signals</name><index pos:line="2923" pos:column="34">[<expr><name pos:line="2923" pos:column="35">COMMAND_SIGNAL</name></expr>]</index></name> <op:operator pos:line="2923" pos:column="51">=</op:operator> <call><name pos:line="2923" pos:column="53">g_signal_new</name><argument_list pos:line="2923" pos:column="65">(
		            <argument><expr><lit:literal type="string" pos:line="2924" pos:column="29">"command"</lit:literal></expr></argument>,
		            <argument><expr><call><name pos:line="2925" pos:column="29">G_TYPE_FROM_CLASS</name><argument_list pos:line="2925" pos:column="46">(<argument><expr><name pos:line="2925" pos:column="47">object_class</name></expr></argument>)</argument_list></call></expr></argument>,
		            <argument><expr><name pos:line="2926" pos:column="29">sigflags</name></expr></argument>,
		            <argument><expr><call><name pos:line="2927" pos:column="29">G_STRUCT_OFFSET</name><argument_list pos:line="2927" pos:column="44">(<argument><expr><name pos:line="2927" pos:column="45">ScintillaClass</name></expr></argument>, <argument><expr><name pos:line="2927" pos:column="61">command</name></expr></argument>)</argument_list></call></expr></argument>,
		            <argument><expr><name pos:line="2928" pos:column="29">NULL</name></expr></argument>, <comment type="line" pos:line="2928" pos:column="35">//(GSignalAccumulator)</comment>
		            <argument><expr><name pos:line="2929" pos:column="29">NULL</name></expr></argument>, <comment type="line" pos:line="2929" pos:column="35">//(gpointer)</comment>
		            <argument><expr><name pos:line="2930" pos:column="29">SIG_MARSHAL</name></expr></argument>,
		            <argument><expr><name pos:line="2931" pos:column="29">G_TYPE_NONE</name></expr></argument>,
		            <argument><expr><lit:literal type="number" pos:line="2932" pos:column="29">2</lit:literal></expr></argument>, <argument><expr><name pos:line="2932" pos:column="32">MARSHAL_ARGUMENTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="2934" pos:column="17">scintilla_signals</name><index pos:line="2934" pos:column="34">[<expr><name pos:line="2934" pos:column="35">NOTIFY_SIGNAL</name></expr>]</index></name> <op:operator pos:line="2934" pos:column="50">=</op:operator> <call><name pos:line="2934" pos:column="52">g_signal_new</name><argument_list pos:line="2934" pos:column="64">(
		            <argument><expr><name pos:line="2935" pos:column="29">SCINTILLA_NOTIFY</name></expr></argument>,
		            <argument><expr><call><name pos:line="2936" pos:column="29">G_TYPE_FROM_CLASS</name><argument_list pos:line="2936" pos:column="46">(<argument><expr><name pos:line="2936" pos:column="47">object_class</name></expr></argument>)</argument_list></call></expr></argument>,
		            <argument><expr><name pos:line="2937" pos:column="29">sigflags</name></expr></argument>,
		            <argument><expr><call><name pos:line="2938" pos:column="29">G_STRUCT_OFFSET</name><argument_list pos:line="2938" pos:column="44">(<argument><expr><name pos:line="2938" pos:column="45">ScintillaClass</name></expr></argument>, <argument><expr><name pos:line="2938" pos:column="61">notify</name></expr></argument>)</argument_list></call></expr></argument>,
		            <argument><expr><name pos:line="2939" pos:column="29">NULL</name></expr></argument>,
		            <argument><expr><name pos:line="2940" pos:column="29">NULL</name></expr></argument>,
		            <argument><expr><name pos:line="2941" pos:column="29">SIG_MARSHAL</name></expr></argument>,
		            <argument><expr><name pos:line="2942" pos:column="29">G_TYPE_NONE</name></expr></argument>,
		            <argument><expr><lit:literal type="number" pos:line="2943" pos:column="29">2</lit:literal></expr></argument>, <argument><expr><name pos:line="2943" pos:column="32">MARSHAL_ARGUMENTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="2945" pos:column="17">klass</name><op:operator pos:line="2945" pos:column="22">-&gt;</op:operator><name pos:line="2945" pos:column="24">command</name></name> <op:operator pos:line="2945" pos:column="32">=</op:operator> <name pos:line="2945" pos:column="34">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2946" pos:column="17">klass</name><op:operator pos:line="2946" pos:column="22">-&gt;</op:operator><name pos:line="2946" pos:column="24">notify</name></name> <op:operator pos:line="2946" pos:column="31">=</op:operator> <name pos:line="2946" pos:column="33">NULL</name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="2948" pos:column="17">ScintillaGTK</name><op:operator pos:line="2948" pos:column="29">::</op:operator><name pos:line="2948" pos:column="31">ClassInit</name></name><argument_list pos:line="2948" pos:column="40">(<argument><expr><name pos:line="2948" pos:column="41">object_class</name></expr></argument>, <argument><expr><name pos:line="2948" pos:column="55">widget_class</name></expr></argument>, <argument><expr><name pos:line="2948" pos:column="69">container_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2949" pos:column="11">catch <parameter_list pos:line="2949" pos:column="17">(<param><decl><type><type:modifier pos:line="2949" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2949" pos:column="23">{
	}</block></catch></try>
}</block></function>

<function><type><specifier pos:line="2953" pos:column="1">static</specifier> <name pos:line="2953" pos:column="8">void</name></type> <name pos:line="2953" pos:column="13">scintilla_init</name><parameter_list pos:line="2953" pos:column="27">(<param><decl><type><name pos:line="2953" pos:column="28">ScintillaObject</name> <type:modifier pos:line="2953" pos:column="44">*</type:modifier></type><name pos:line="2953" pos:column="45">sci</name></decl></param>)</parameter_list> <block pos:line="2953" pos:column="50">{
	<try pos:line="2954" pos:column="9">try <block pos:line="2954" pos:column="13">{
<cpp:if pos:line="2955" pos:column="1">#<cpp:directive pos:line="2955" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2955" pos:column="5">GTK_CHECK_VERSION</name><argument_list pos:line="2955" pos:column="22">(<argument><expr><lit:literal type="number" pos:line="2955" pos:column="23">2</lit:literal><op:operator pos:line="2955" pos:column="24">,</op:operator><lit:literal type="number" pos:line="2955" pos:column="25">20</lit:literal><op:operator pos:line="2955" pos:column="27">,</op:operator><lit:literal type="number" pos:line="2955" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="2956" pos:column="17">gtk_widget_set_can_focus</name><argument_list pos:line="2956" pos:column="41">(<argument><expr><call><name pos:line="2956" pos:column="42">GTK_WIDGET</name><argument_list pos:line="2956" pos:column="52">(<argument><expr><name pos:line="2956" pos:column="53">sci</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2956" pos:column="59">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2957" pos:column="1">#<cpp:directive pos:line="2957" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="2958" pos:column="17">GTK_WIDGET_SET_FLAGS</name><argument_list pos:line="2958" pos:column="37">(<argument><expr><name pos:line="2958" pos:column="38">sci</name></expr></argument>, <argument><expr><name pos:line="2958" pos:column="43">GTK_CAN_FOCUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2959" pos:column="1">#<cpp:directive pos:line="2959" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><name><name pos:line="2960" pos:column="17">sci</name><op:operator pos:line="2960" pos:column="20">-&gt;</op:operator><name pos:line="2960" pos:column="22">pscin</name></name> <op:operator pos:line="2960" pos:column="28">=</op:operator> <op:operator pos:line="2960" pos:column="30">new</op:operator> <call><name pos:line="2960" pos:column="34">ScintillaGTK</name><argument_list pos:line="2960" pos:column="46">(<argument><expr><name pos:line="2960" pos:column="47">sci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2961" pos:column="11">catch <parameter_list pos:line="2961" pos:column="17">(<param><decl><type><type:modifier pos:line="2961" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2961" pos:column="23">{
	}</block></catch></try>
}</block></function>

<function><type><name pos:line="2965" pos:column="1">GtkWidget</name><type:modifier pos:line="2965" pos:column="10">*</type:modifier></type> <name pos:line="2965" pos:column="12">scintilla_new</name><parameter_list pos:line="2965" pos:column="25">()</parameter_list> <block pos:line="2965" pos:column="28">{
	<return pos:line="2966" pos:column="9">return <expr><call><name pos:line="2966" pos:column="16">GTK_WIDGET</name><argument_list pos:line="2966" pos:column="26">(<argument><expr><call><name pos:line="2966" pos:column="27">g_object_new</name><argument_list pos:line="2966" pos:column="39">(<argument><expr><call><name pos:line="2966" pos:column="40">scintilla_get_type</name><argument_list pos:line="2966" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2966" pos:column="62">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2969" pos:column="1">void</name></type> <name pos:line="2969" pos:column="6">scintilla_set_id</name><parameter_list pos:line="2969" pos:column="22">(<param><decl><type><name pos:line="2969" pos:column="23">ScintillaObject</name> <type:modifier pos:line="2969" pos:column="39">*</type:modifier></type><name pos:line="2969" pos:column="40">sci</name></decl></param>, <param><decl><type><name pos:line="2969" pos:column="45">uptr_t</name></type> <name pos:line="2969" pos:column="52">id</name></decl></param>)</parameter_list> <block pos:line="2969" pos:column="56">{
	<decl_stmt><decl><type><name pos:line="2970" pos:column="9">ScintillaGTK</name> <type:modifier pos:line="2970" pos:column="22">*</type:modifier></type><name pos:line="2970" pos:column="23">psci</name> <init pos:line="2970" pos:column="28">= <expr><call><name><name pos:line="2970" pos:column="30">reinterpret_cast</name><argument_list pos:line="2970" pos:column="46">&lt;<argument><expr><name pos:line="2970" pos:column="47">ScintillaGTK</name> <op:operator pos:line="2970" pos:column="60">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2970" pos:column="62">(<argument><expr><name><name pos:line="2970" pos:column="63">sci</name><op:operator pos:line="2970" pos:column="66">-&gt;</op:operator><name pos:line="2970" pos:column="68">pscin</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="2971" pos:column="9">psci</name><op:operator pos:line="2971" pos:column="13">-&gt;</op:operator><name pos:line="2971" pos:column="15">ctrlID</name></name> <op:operator pos:line="2971" pos:column="22">=</op:operator> <name pos:line="2971" pos:column="24">id</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2974" pos:column="1">void</name></type> <name pos:line="2974" pos:column="6">scintilla_release_resources</name><parameter_list pos:line="2974" pos:column="33">(<param><decl><type><name pos:line="2974" pos:column="34">void</name></type></decl></param>)</parameter_list> <block pos:line="2974" pos:column="40">{
	<try pos:line="2975" pos:column="9">try <block pos:line="2975" pos:column="13">{
		<expr_stmt><expr><call><name pos:line="2976" pos:column="17">Platform_Finalise</name><argument_list pos:line="2976" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
	}</block> <catch pos:line="2977" pos:column="11">catch <parameter_list pos:line="2977" pos:column="17">(<param><decl><type><type:modifier pos:line="2977" pos:column="18">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="2977" pos:column="23">{
	}</block></catch></try>
}</block></function>
</unit>
