<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\MISC\Process\Process.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"process.h"</lit:literal></cpp:file></cpp:include>


<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">Process</name><op:operator pos:line="34" pos:column="13">::</op:operator><name pos:line="34" pos:column="15">run</name></name><parameter_list pos:line="34" pos:column="18">()</parameter_list>
<block pos:line="35" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">TCHAR</name> <type:modifier pos:line="36" pos:column="15">*</type:modifier></type><name pos:line="36" pos:column="16">opVerb</name> <init pos:line="36" pos:column="23">= <expr><call><name pos:line="36" pos:column="25">TEXT</name><argument_list pos:line="36" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="30">"open"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<comment type="block" pos:line="37" pos:column="1">/*
	winVer winVersion = (NppParameters::getInstance())-&gt;getWinVersion();
	if (winVersion == WV_VISTA || winVersion == WV_WIN7)
		opVerb = TEXT("runas");
*/</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="42" pos:column="9">::</op:operator><name pos:line="42" pos:column="11">ShellExecute</name></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">NULL</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">opVerb</name></expr></argument>, <argument><expr><call><name><name pos:line="42" pos:column="38">_command</name><op:operator pos:line="42" pos:column="46">.</op:operator><name pos:line="42" pos:column="47">c_str</name></name><argument_list pos:line="42" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="42" pos:column="56">_args</name><op:operator pos:line="42" pos:column="61">.</op:operator><name pos:line="42" pos:column="62">c_str</name></name><argument_list pos:line="42" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="42" pos:column="71">_curDir</name><op:operator pos:line="42" pos:column="78">.</op:operator><name pos:line="42" pos:column="79">c_str</name></name><argument_list pos:line="42" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="88">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

</unit>
