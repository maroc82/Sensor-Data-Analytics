<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ColourPicker\ColourPicker.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ColourPicker.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ColourPopup.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">void</name></type> <name><name pos:line="33" pos:column="6">ColourPicker</name><op:operator pos:line="33" pos:column="18">::</op:operator><name pos:line="33" pos:column="20">init</name></name><parameter_list pos:line="33" pos:column="24">(<param><decl><type><name pos:line="33" pos:column="25">HINSTANCE</name></type> <name pos:line="33" pos:column="35">hInst</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="42">HWND</name></type> <name pos:line="33" pos:column="47">parent</name></decl></param>)</parameter_list>
<block pos:line="34" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="35" pos:column="9">Window</name><op:operator pos:line="35" pos:column="15">::</op:operator><name pos:line="35" pos:column="17">init</name></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="37" pos:column="9">_hSelf</name> <op:operator pos:line="37" pos:column="16">=</op:operator> <call><name><op:operator pos:line="37" pos:column="18">::</op:operator><name pos:line="37" pos:column="20">CreateWindowEx</name></name><argument_list pos:line="37" pos:column="34">(
					<argument><expr><lit:literal type="number" pos:line="38" pos:column="41">0</lit:literal></expr></argument>,
					<argument><expr><call><name pos:line="39" pos:column="41">TEXT</name><argument_list pos:line="39" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="46">"Button"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="40" pos:column="41">TEXT</name><argument_list pos:line="40" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="46">"F"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="41" pos:column="41">WS_CHILD</name> <op:operator pos:line="41" pos:column="50">|</op:operator>  <name pos:line="41" pos:column="53">WS_VISIBLE</name></expr></argument>,
					<argument><expr><lit:literal type="number" pos:line="42" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="47">25</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="51">25</lit:literal></expr></argument>,
					<argument><expr><name pos:line="43" pos:column="41">_hParent</name></expr></argument>,
					<argument><expr><name pos:line="44" pos:column="41">NULL</name></expr></argument>,
					<argument><expr><name pos:line="45" pos:column="41">_hInst</name></expr></argument>,
					<argument><expr><op:operator pos:line="46" pos:column="41">(</op:operator><name pos:line="46" pos:column="42">LPVOID</name><op:operator pos:line="46" pos:column="48">)</op:operator><lit:literal type="number" pos:line="46" pos:column="49">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><op:operator pos:line="47" pos:column="13">!</op:operator><name pos:line="47" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="47" pos:column="21">
	<block pos:line="48" pos:column="9">{
		<throw pos:line="49" pos:column="17">throw <expr><call><name><name pos:line="49" pos:column="23">std</name><op:operator pos:line="49" pos:column="26">::</op:operator><name pos:line="49" pos:column="28">runtime_error</name></name><argument_list pos:line="49" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="42">"ColourPicker::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

    
    <expr_stmt><expr><call><name><op:operator pos:line="53" pos:column="5">::</op:operator><name pos:line="53" pos:column="7">SetWindowLongPtr</name></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">_hSelf</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="32">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="53" pos:column="47">(</op:operator><name pos:line="53" pos:column="48">LONG_PTR</name><op:operator pos:line="53" pos:column="56">)</op:operator><name pos:line="53" pos:column="57">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">_buttonDefaultProc</name> <op:operator pos:line="54" pos:column="28">=</op:operator> <call><name><name pos:line="54" pos:column="30">reinterpret_cast</name><argument_list pos:line="54" pos:column="46">&lt;<argument><expr><name pos:line="54" pos:column="47">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="54" pos:column="55">(<argument><expr><call><name><op:operator pos:line="54" pos:column="56">::</op:operator><name pos:line="54" pos:column="58">SetWindowLongPtr</name></name><argument_list pos:line="54" pos:column="74">(<argument><expr><name pos:line="54" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="54" pos:column="83">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="54" pos:column="97">(</op:operator><name pos:line="54" pos:column="98">LONG_PTR</name><op:operator pos:line="54" pos:column="106">)</op:operator><name pos:line="54" pos:column="107">staticWinProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	 

}</block></function>

<function><type><name pos:line="58" pos:column="1">void</name></type> <name><name pos:line="58" pos:column="6">ColourPicker</name><op:operator pos:line="58" pos:column="18">::</op:operator><name pos:line="58" pos:column="20">destroy</name></name><parameter_list pos:line="58" pos:column="27">()</parameter_list>
<block pos:line="59" pos:column="1">{
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">_pColourPopup</name></expr>)</condition><then pos:line="60" pos:column="27">
	<block pos:line="61" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="62" pos:column="17">delete</op:operator> <name pos:line="62" pos:column="24">_pColourPopup</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="63" pos:column="17">_pColourPopup</name> <op:operator pos:line="63" pos:column="31">=</op:operator> <name pos:line="63" pos:column="33">NULL</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="65" pos:column="9">::</op:operator><name pos:line="65" pos:column="11">DestroyWindow</name></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="68" pos:column="1">void</name></type> <name><name pos:line="68" pos:column="6">ColourPicker</name><op:operator pos:line="68" pos:column="18">::</op:operator><name pos:line="68" pos:column="20">drawBackground</name></name><parameter_list pos:line="68" pos:column="34">(<param><decl><type><name pos:line="68" pos:column="35">HDC</name></type> <name pos:line="68" pos:column="39">hDC</name></decl></param>)</parameter_list>
<block pos:line="69" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">RECT</name></type> <name pos:line="70" pos:column="10">rc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="71" pos:column="9">HBRUSH</name></type> <name pos:line="71" pos:column="16">hbrush</name></decl>;</decl_stmt>

	<if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><op:operator pos:line="73" pos:column="12">!</op:operator><name pos:line="73" pos:column="13">hDC</name></expr>)</condition><then pos:line="73" pos:column="17">
		<return pos:line="74" pos:column="17">return;</return></then></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">getClientRect</name><argument_list pos:line="76" pos:column="18">(<argument><expr><name pos:line="76" pos:column="19">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="77" pos:column="9">hbrush</name> <op:operator pos:line="77" pos:column="16">=</op:operator> <call><name><op:operator pos:line="77" pos:column="18">::</op:operator><name pos:line="77" pos:column="20">CreateSolidBrush</name></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">_currentColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">HGDIOBJ</name></type> <name pos:line="78" pos:column="17">oldObj</name> <init pos:line="78" pos:column="24">= <expr><call><name><op:operator pos:line="78" pos:column="26">::</op:operator><name pos:line="78" pos:column="28">SelectObject</name></name><argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">hDC</name></expr></argument>, <argument><expr><name pos:line="78" pos:column="46">hbrush</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="79" pos:column="9">::</op:operator><name pos:line="79" pos:column="11">Rectangle</name></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">hDC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="29">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="32">rc</name><op:operator pos:line="79" pos:column="34">.</op:operator><name pos:line="79" pos:column="35">right</name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="42">rc</name><op:operator pos:line="79" pos:column="44">.</op:operator><name pos:line="79" pos:column="45">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="80" pos:column="9">::</op:operator><name pos:line="80" pos:column="11">SelectObject</name></name><argument_list pos:line="80" pos:column="23">(<argument><expr><name pos:line="80" pos:column="24">hDC</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="29">oldObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="81" pos:column="9">//FillRect(hDC, &amp;rc, hbrush);</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="82" pos:column="5">::</op:operator><name pos:line="82" pos:column="7">DeleteObject</name></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">hbrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="85" pos:column="1">void</name></type> <name><name pos:line="85" pos:column="6">ColourPicker</name><op:operator pos:line="85" pos:column="18">::</op:operator><name pos:line="85" pos:column="20">drawForeground</name></name><parameter_list pos:line="85" pos:column="34">(<param><decl><type><name pos:line="85" pos:column="35">HDC</name></type> <name pos:line="85" pos:column="39">hDC</name></decl></param>)</parameter_list>
<block pos:line="86" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="87" pos:column="5">RECT</name></type> <name pos:line="87" pos:column="10">rc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="88" pos:column="9">HBRUSH</name></type> <name pos:line="88" pos:column="16">hbrush</name> <init pos:line="88" pos:column="23">= <expr><name pos:line="88" pos:column="25">NULL</name></expr></init></decl>;</decl_stmt>

	<if pos:line="90" pos:column="9">if<condition pos:line="90" pos:column="11">(<expr><op:operator pos:line="90" pos:column="12">!</op:operator><name pos:line="90" pos:column="13">hDC</name> <op:operator pos:line="90" pos:column="17">||</op:operator> <name pos:line="90" pos:column="20">_isEnabled</name></expr>)</condition><then pos:line="90" pos:column="31">
		<return pos:line="91" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="93" pos:column="9">int</name></type> <name pos:line="93" pos:column="13">oldMode</name> <init pos:line="93" pos:column="21">= <expr><call><name><op:operator pos:line="93" pos:column="23">::</op:operator><name pos:line="93" pos:column="25">SetBkMode</name></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">hDC</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="40">TRANSPARENT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">getClientRect</name><argument_list pos:line="94" pos:column="18">(<argument><expr><name pos:line="94" pos:column="19">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">COLORREF</name></type> <name pos:line="95" pos:column="18">strikeOut</name> <init pos:line="95" pos:column="28">= <expr><call><name pos:line="95" pos:column="30">RGB</name><argument_list pos:line="95" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="95" pos:column="34">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="95" pos:column="36">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="95" pos:column="38">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><op:operator pos:line="96" pos:column="13">(</op:operator><op:operator pos:line="96" pos:column="14">(</op:operator><op:operator pos:line="96" pos:column="15">(</op:operator><name pos:line="96" pos:column="16">_currentColour</name>      <op:operator pos:line="96" pos:column="36">)</op:operator> <op:operator pos:line="96" pos:column="38">&amp;</op:operator> <lit:literal type="number" pos:line="96" pos:column="40">0xFF</lit:literal><op:operator pos:line="96" pos:column="44">)</op:operator> <op:operator pos:line="96" pos:column="46">+</op:operator>
		 <op:operator pos:line="97" pos:column="18">(</op:operator><op:operator pos:line="97" pos:column="19">(</op:operator><name pos:line="97" pos:column="20">_currentColour</name> <op:operator pos:line="97" pos:column="35">&gt;&gt;</op:operator>  <lit:literal type="number" pos:line="97" pos:column="39">8</lit:literal><op:operator pos:line="97" pos:column="40">)</op:operator> <op:operator pos:line="97" pos:column="42">&amp;</op:operator> <lit:literal type="number" pos:line="97" pos:column="44">0xFF</lit:literal><op:operator pos:line="97" pos:column="48">)</op:operator> <op:operator pos:line="97" pos:column="50">+</op:operator>
		 <op:operator pos:line="98" pos:column="18">(</op:operator><op:operator pos:line="98" pos:column="19">(</op:operator><name pos:line="98" pos:column="20">_currentColour</name> <op:operator pos:line="98" pos:column="35">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="98" pos:column="38">16</lit:literal><op:operator pos:line="98" pos:column="40">)</op:operator> <op:operator pos:line="98" pos:column="42">&amp;</op:operator> <lit:literal type="number" pos:line="98" pos:column="44">0xFF</lit:literal><op:operator pos:line="98" pos:column="48">)</op:operator><op:operator pos:line="98" pos:column="49">)</op:operator> <op:operator pos:line="98" pos:column="51">&lt;</op:operator> <lit:literal type="number" pos:line="98" pos:column="53">200</lit:literal></expr>)</condition><then pos:line="98" pos:column="57">	<comment type="line" pos:line="98" pos:column="65">//check if the color is too dark, if so, use white strikeout</comment>
		<expr_stmt><expr><name pos:line="99" pos:column="17">strikeOut</name> <op:operator pos:line="99" pos:column="27">=</op:operator> <call><name pos:line="99" pos:column="29">RGB</name><argument_list pos:line="99" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="99" pos:column="33">0xFF</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="99" pos:column="38">0xFF</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="99" pos:column="43">0xFF</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><op:operator pos:line="100" pos:column="13">!</op:operator><name pos:line="100" pos:column="14">_isEnabled</name></expr>)</condition><then pos:line="100" pos:column="25">
		<expr_stmt><expr><name pos:line="101" pos:column="17">hbrush</name> <op:operator pos:line="101" pos:column="24">=</op:operator> <call><name><op:operator pos:line="101" pos:column="26">::</op:operator><name pos:line="101" pos:column="28">CreateHatchBrush</name></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">HS_FDIAGONAL</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="59">strikeOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="102" pos:column="9">HGDIOBJ</name></type> <name pos:line="102" pos:column="17">oldObj</name> <init pos:line="102" pos:column="24">= <expr><call><name><op:operator pos:line="102" pos:column="26">::</op:operator><name pos:line="102" pos:column="28">SelectObject</name></name><argument_list pos:line="102" pos:column="40">(<argument><expr><name pos:line="102" pos:column="41">hDC</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="46">hbrush</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="103" pos:column="9">::</op:operator><name pos:line="103" pos:column="11">Rectangle</name></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">hDC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="103" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="103" pos:column="29">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="32">rc</name><op:operator pos:line="103" pos:column="34">.</op:operator><name pos:line="103" pos:column="35">right</name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="42">rc</name><op:operator pos:line="103" pos:column="44">.</op:operator><name pos:line="103" pos:column="45">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="104" pos:column="9">::</op:operator><name pos:line="104" pos:column="11">SelectObject</name></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">hDC</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="29">oldObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="105" pos:column="9">//FillRect(hDC, &amp;rc, hbrush);</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="106" pos:column="5">::</op:operator><name pos:line="106" pos:column="7">DeleteObject</name></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">hbrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="107" pos:column="9">::</op:operator><name pos:line="107" pos:column="11">SetBkMode</name></name><argument_list pos:line="107" pos:column="20">(<argument><expr><name pos:line="107" pos:column="21">hDC</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="26">oldMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="110" pos:column="1">LRESULT</name></type> <name><name pos:line="110" pos:column="9">ColourPicker</name><op:operator pos:line="110" pos:column="21">::</op:operator><name pos:line="110" pos:column="23">runProc</name></name><parameter_list pos:line="110" pos:column="30">(<param><decl><type><name pos:line="110" pos:column="31">UINT</name></type> <name pos:line="110" pos:column="36">Message</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="45">WPARAM</name></type> <name pos:line="110" pos:column="52">wParam</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="60">LPARAM</name></type> <name pos:line="110" pos:column="67">lParam</name></decl></param>)</parameter_list>
<block pos:line="111" pos:column="1">{
	<switch pos:line="112" pos:column="9">switch <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="113" pos:column="9">{
        <case pos:line="114" pos:column="9">case <expr><name pos:line="114" pos:column="14">WM_LBUTTONDBLCLK</name></expr> :
        </case><case pos:line="115" pos:column="9">case <expr><name pos:line="115" pos:column="14">WM_LBUTTONDOWN</name></expr> :
        <block pos:line="116" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="117" pos:column="25">RECT</name></type> <name pos:line="117" pos:column="30">rc</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="118" pos:column="25">POINT</name></type> <name pos:line="118" pos:column="31">p</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="119" pos:column="25">Window</name><op:operator pos:line="119" pos:column="31">::</op:operator><name pos:line="119" pos:column="33">getClientRect</name></name><argument_list pos:line="119" pos:column="46">(<argument><expr><name pos:line="119" pos:column="47">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="120" pos:column="25">::</op:operator><name pos:line="120" pos:column="27">InflateRect</name></name><argument_list pos:line="120" pos:column="38">(<argument><expr><op:operator pos:line="120" pos:column="39">&amp;</op:operator><name pos:line="120" pos:column="40">rc</name></expr></argument>, <argument><expr><op:operator pos:line="120" pos:column="44">-</op:operator><lit:literal type="number" pos:line="120" pos:column="45">2</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="120" pos:column="48">-</op:operator><lit:literal type="number" pos:line="120" pos:column="49">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="121" pos:column="25">p</name><op:operator pos:line="121" pos:column="26">.</op:operator><name pos:line="121" pos:column="27">x</name></name> <op:operator pos:line="121" pos:column="29">=</op:operator> <name><name pos:line="121" pos:column="31">rc</name><op:operator pos:line="121" pos:column="33">.</op:operator><name pos:line="121" pos:column="34">left</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="122" pos:column="25">p</name><op:operator pos:line="122" pos:column="26">.</op:operator><name pos:line="122" pos:column="27">y</name></name> <op:operator pos:line="122" pos:column="29">=</op:operator> <name><name pos:line="122" pos:column="31">rc</name><op:operator pos:line="122" pos:column="33">.</op:operator><name pos:line="122" pos:column="34">top</name></name> <op:operator pos:line="122" pos:column="38">+</op:operator> <name><name pos:line="122" pos:column="40">rc</name><op:operator pos:line="122" pos:column="42">.</op:operator><name pos:line="122" pos:column="43">bottom</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="123" pos:column="25">::</op:operator><name pos:line="123" pos:column="27">ClientToScreen</name></name><argument_list pos:line="123" pos:column="41">(<argument><expr><name pos:line="123" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="123" pos:column="50">&amp;</op:operator><name pos:line="123" pos:column="51">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<expr><op:operator pos:line="125" pos:column="29">!</op:operator><name pos:line="125" pos:column="30">_pColourPopup</name></expr>)</condition><then pos:line="125" pos:column="44">
			<block pos:line="126" pos:column="25">{
				<expr_stmt><expr><name pos:line="127" pos:column="33">_pColourPopup</name> <op:operator pos:line="127" pos:column="47">=</op:operator> <op:operator pos:line="127" pos:column="49">new</op:operator> <call><name pos:line="127" pos:column="53">ColourPopup</name><argument_list pos:line="127" pos:column="64">(<argument><expr><name pos:line="127" pos:column="65">_currentColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="128" pos:column="33">_pColourPopup</name><op:operator pos:line="128" pos:column="46">-&gt;</op:operator><name pos:line="128" pos:column="48">init</name></name><argument_list pos:line="128" pos:column="52">(<argument><expr><name pos:line="128" pos:column="53">_hInst</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="61">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="129" pos:column="33">_pColourPopup</name><op:operator pos:line="129" pos:column="46">-&gt;</op:operator><name pos:line="129" pos:column="48">doDialog</name></name><argument_list pos:line="129" pos:column="56">(<argument><expr><name pos:line="129" pos:column="57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="131" pos:column="25">else
			<block pos:line="132" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="133" pos:column="33">_pColourPopup</name><op:operator pos:line="133" pos:column="46">-&gt;</op:operator><name pos:line="133" pos:column="48">doDialog</name></name><argument_list pos:line="133" pos:column="56">(<argument><expr><name pos:line="133" pos:column="57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="134" pos:column="33">_pColourPopup</name><op:operator pos:line="134" pos:column="46">-&gt;</op:operator><name pos:line="134" pos:column="48">display</name></name><argument_list pos:line="134" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="134" pos:column="56">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
            <return pos:line="136" pos:column="13">return <expr><name pos:line="136" pos:column="20">TRUE</name></expr>;</return>
        }</block>
		</case><case pos:line="138" pos:column="17">case <expr><name pos:line="138" pos:column="22">WM_RBUTTONDOWN</name></expr>:
		<block pos:line="139" pos:column="17">{
			<expr_stmt><expr><name pos:line="140" pos:column="25">_isEnabled</name> <op:operator pos:line="140" pos:column="36">=</op:operator> <op:operator pos:line="140" pos:column="38">!</op:operator><name pos:line="140" pos:column="39">_isEnabled</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="141" pos:column="25">redraw</name><argument_list pos:line="141" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="142" pos:column="25">::</op:operator><name pos:line="142" pos:column="27">SendMessage</name></name><argument_list pos:line="142" pos:column="38">(<argument><expr><name pos:line="142" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">WM_COMMAND</name></expr></argument>, <argument><expr><call><name pos:line="142" pos:column="61">MAKELONG</name><argument_list pos:line="142" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="142" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="73">CPN_COLOURPICKED</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="142" pos:column="92">(</op:operator><name pos:line="142" pos:column="93">LPARAM</name><op:operator pos:line="142" pos:column="99">)</op:operator><name pos:line="142" pos:column="100">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="143" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="146" pos:column="17">case <expr><name pos:line="146" pos:column="22">WM_ERASEBKGND</name></expr>:
		<block pos:line="147" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="148" pos:column="25">HDC</name></type> <name pos:line="148" pos:column="29">dc</name> <init pos:line="148" pos:column="32">= <expr><op:operator pos:line="148" pos:column="34">(</op:operator><name pos:line="148" pos:column="35">HDC</name><op:operator pos:line="148" pos:column="38">)</op:operator><name pos:line="148" pos:column="39">wParam</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="149" pos:column="25">drawBackground</name><argument_list pos:line="149" pos:column="39">(<argument><expr><name pos:line="149" pos:column="40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="150" pos:column="25">return <expr><name pos:line="150" pos:column="32">TRUE</name></expr>;</return>
			<break pos:line="151" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="154" pos:column="9">case <expr><name pos:line="154" pos:column="14">WM_PAINT</name></expr> :
        <block pos:line="155" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="156" pos:column="25">PAINTSTRUCT</name></type> <name pos:line="156" pos:column="37">ps</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="157" pos:column="25">HDC</name></type> <name pos:line="157" pos:column="29">dc</name> <init pos:line="157" pos:column="32">= <expr><call><name><op:operator pos:line="157" pos:column="34">::</op:operator><name pos:line="157" pos:column="36">BeginPaint</name></name><argument_list pos:line="157" pos:column="46">(<argument><expr><name pos:line="157" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="157" pos:column="55">&amp;</op:operator><name pos:line="157" pos:column="56">ps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">drawForeground</name><argument_list pos:line="158" pos:column="27">(<argument><expr><name pos:line="158" pos:column="28">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="159" pos:column="25">::</op:operator><name pos:line="159" pos:column="27">EndPaint</name></name><argument_list pos:line="159" pos:column="35">(<argument><expr><name pos:line="159" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="159" pos:column="44">&amp;</op:operator><name pos:line="159" pos:column="45">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="160" pos:column="13">return <expr><name pos:line="160" pos:column="20">TRUE</name></expr>;</return>
        }</block>

        </case><case pos:line="163" pos:column="9">case <expr><name pos:line="163" pos:column="14">WM_PICKUP_COLOR</name></expr> :
        <block pos:line="164" pos:column="9">{
            <expr_stmt><expr><name pos:line="165" pos:column="13">_currentColour</name> <op:operator pos:line="165" pos:column="28">=</op:operator> <op:operator pos:line="165" pos:column="30">(</op:operator><name pos:line="165" pos:column="31">COLORREF</name><op:operator pos:line="165" pos:column="39">)</op:operator><name pos:line="165" pos:column="40">wParam</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="166" pos:column="13">redraw</name><argument_list pos:line="166" pos:column="19">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="168" pos:column="25">_pColourPopup</name><op:operator pos:line="168" pos:column="38">-&gt;</op:operator><name pos:line="168" pos:column="40">display</name></name><argument_list pos:line="168" pos:column="47">(<argument><expr><lit:literal type="boolean" pos:line="168" pos:column="48">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="169" pos:column="25">::</op:operator><name pos:line="169" pos:column="27">SendMessage</name></name><argument_list pos:line="169" pos:column="38">(<argument><expr><name pos:line="169" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="49">WM_COMMAND</name></expr></argument>, <argument><expr><call><name pos:line="169" pos:column="61">MAKELONG</name><argument_list pos:line="169" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="169" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="73">CPN_COLOURPICKED</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="169" pos:column="92">(</op:operator><name pos:line="169" pos:column="93">LPARAM</name><op:operator pos:line="169" pos:column="99">)</op:operator><name pos:line="169" pos:column="100">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="170" pos:column="13">return <expr><name pos:line="170" pos:column="20">TRUE</name></expr>;</return>
        }</block>

        </case><case pos:line="173" pos:column="9">case <expr><name pos:line="173" pos:column="14">WM_ENABLE</name></expr> :
        <block pos:line="174" pos:column="9">{
            <if pos:line="175" pos:column="13">if <condition pos:line="175" pos:column="16">(<expr><op:operator pos:line="175" pos:column="17">(</op:operator><name pos:line="175" pos:column="18">BOOL</name><op:operator pos:line="175" pos:column="22">)</op:operator><name pos:line="175" pos:column="23">wParam</name> <op:operator pos:line="175" pos:column="30">==</op:operator> <name pos:line="175" pos:column="33">FALSE</name></expr>)</condition><then pos:line="175" pos:column="39">
            <block pos:line="176" pos:column="13">{
                <expr_stmt><expr><name pos:line="177" pos:column="17">_currentColour</name> <op:operator pos:line="177" pos:column="32">=</op:operator> <call><name><op:operator pos:line="177" pos:column="34">::</op:operator><name pos:line="177" pos:column="36">GetSysColor</name></name><argument_list pos:line="177" pos:column="47">(<argument><expr><name pos:line="177" pos:column="48">COLOR_3DFACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="178" pos:column="17">redraw</name><argument_list pos:line="178" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <return pos:line="180" pos:column="13">return <expr><name pos:line="180" pos:column="20">TRUE</name></expr>;</return>
        }</block>

		</case><case pos:line="183" pos:column="17">case <expr><name pos:line="183" pos:column="22">WM_PICKUP_CANCEL</name></expr> :
			<expr_stmt><expr><call><name><name pos:line="184" pos:column="25">_pColourPopup</name><op:operator pos:line="184" pos:column="38">-&gt;</op:operator><name pos:line="184" pos:column="40">display</name></name><argument_list pos:line="184" pos:column="47">(<argument><expr><lit:literal type="boolean" pos:line="184" pos:column="48">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="185" pos:column="25">return <expr><name pos:line="185" pos:column="32">TRUE</name></expr>;</return>

		</case><default pos:line="187" pos:column="17">default :
			<return pos:line="188" pos:column="25">return <expr><call><name><op:operator pos:line="188" pos:column="32">::</op:operator><name pos:line="188" pos:column="34">CallWindowProc</name></name><argument_list pos:line="188" pos:column="48">(<argument><expr><name pos:line="188" pos:column="49">_buttonDefaultProc</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="77">Message</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="86">wParam</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="94">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	</default>}</block></switch>
	<return pos:line="190" pos:column="9">return <expr><name pos:line="190" pos:column="16">FALSE</name></expr>;</return>
}</block></function>
</unit>
