<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\Parameters.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">PARAMETERS_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">PARAMETERS_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">TINYXMLA_INCLUDED</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"tinyxmlA.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//TINYXMLA_INCLUDED</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">TINYXML_INCLUDED</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"tinyxml.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//TINYXML_INCLUDED</comment>

<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">SCINTILLA_H</name></cpp:ifndef>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="42" pos:column="8">//SCINTILLA_H</comment>

<cpp:ifndef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifndef</cpp:directive> <name pos:line="44" pos:column="9">SCINTILLA_REF_H</name></cpp:ifndef>
<cpp:include pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="45" pos:column="10">"ScintillaRef.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="46" pos:column="8">//SCINTILLA_REF_H</comment>

<cpp:ifndef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifndef</cpp:directive> <name pos:line="48" pos:column="9">TOOL_BAR_H</name></cpp:ifndef>
<cpp:include pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="49" pos:column="10">"ToolBar.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="50" pos:column="8">//TOOL_BAR_H</comment>

<cpp:ifndef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifndef</cpp:directive> <name pos:line="52" pos:column="9">USER_DEFINE_LANG_REFERENCE_H</name></cpp:ifndef>
<cpp:include pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="53" pos:column="10">"UserDefineLangReference.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="54" pos:column="8">//USER_DEFINE_LANG_REFERENCE_H</comment>

<cpp:ifndef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifndef</cpp:directive> <name pos:line="56" pos:column="9">COLORS_H</name></cpp:ifndef>
<cpp:include pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="57" pos:column="10">"colors.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="58" pos:column="8">//COLORS_H</comment>

<cpp:ifndef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifndef</cpp:directive> <name pos:line="60" pos:column="9">SHORTCUTS_H</name></cpp:ifndef>
<cpp:include pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="61" pos:column="10">"shortcut.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="62" pos:column="8">//SHORTCUTS_H</comment>

<cpp:ifndef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifndef</cpp:directive> <name pos:line="64" pos:column="9">CONTEXTMENU</name></cpp:ifndef>
<cpp:include pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="65" pos:column="10">"ContextMenu.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="66" pos:column="8">//CONTEXTMENU</comment>

<cpp:include pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">include</cpp:directive> <cpp:file pos:line="68" pos:column="10">&lt;tchar.h&gt;</cpp:file></cpp:include>

<class_decl pos:line="70" pos:column="1">class <name pos:line="70" pos:column="7">NativeLangSpeaker</name>;</class_decl>

<using pos:line="72" pos:column="1">using namespace <name pos:line="72" pos:column="17">std</name>;</using>

<decl_stmt><decl><type><specifier pos:line="74" pos:column="1">const</specifier> <name pos:line="74" pos:column="7">bool</name></type> <name pos:line="74" pos:column="12">POS_VERTICAL</name> <init pos:line="74" pos:column="25">= <expr><lit:literal type="boolean" pos:line="74" pos:column="27">true</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="75" pos:column="1">const</specifier> <name pos:line="75" pos:column="7">bool</name></type> <name pos:line="75" pos:column="12">POS_HORIZOTAL</name> <init pos:line="75" pos:column="26">= <expr><lit:literal type="boolean" pos:line="75" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="77" pos:column="1">const</specifier> <name pos:line="77" pos:column="7">int</name></type> <name pos:line="77" pos:column="11">UDD_SHOW</name>   <init pos:line="77" pos:column="22">= <expr><lit:literal type="number" pos:line="77" pos:column="24">1</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="77" pos:column="27">// 0000 0001 </comment>
<decl_stmt><decl><type><specifier pos:line="78" pos:column="1">const</specifier> <name pos:line="78" pos:column="7">int</name></type> <name pos:line="78" pos:column="11">UDD_DOCKED</name> <init pos:line="78" pos:column="22">= <expr><lit:literal type="number" pos:line="78" pos:column="24">2</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="78" pos:column="27">// 0000 0010</comment>

<comment type="line" pos:line="80" pos:column="1">// 0 : 0000 0000 hide &amp; undocked</comment>
<comment type="line" pos:line="81" pos:column="1">// 1 : 0000 0001 show &amp; undocked</comment>
<comment type="line" pos:line="82" pos:column="1">// 2 : 0000 0010 hide &amp; docked</comment>
<comment type="line" pos:line="83" pos:column="1">// 3 : 0000 0011 show &amp; docked</comment>

<decl_stmt><decl><type><specifier pos:line="85" pos:column="1">const</specifier> <name pos:line="85" pos:column="7">int</name></type> <name pos:line="85" pos:column="11">TAB_DRAWTOPBAR</name> <init pos:line="85" pos:column="26">= <expr><lit:literal type="number" pos:line="85" pos:column="28">1</lit:literal></expr></init></decl>;</decl_stmt>      <comment type="line" pos:line="85" pos:column="36">//  0000 0001</comment>
<decl_stmt><decl><type><specifier pos:line="86" pos:column="1">const</specifier> <name pos:line="86" pos:column="7">int</name></type> <name pos:line="86" pos:column="11">TAB_DRAWINACTIVETAB</name> <init pos:line="86" pos:column="31">= <expr><lit:literal type="number" pos:line="86" pos:column="33">2</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="86" pos:column="36">//  0000 0010</comment>
<decl_stmt><decl><type><specifier pos:line="87" pos:column="1">const</specifier> <name pos:line="87" pos:column="7">int</name></type> <name pos:line="87" pos:column="11">TAB_DRAGNDROP</name> <init pos:line="87" pos:column="25">= <expr><lit:literal type="number" pos:line="87" pos:column="27">4</lit:literal></expr></init></decl>;</decl_stmt>       <comment type="line" pos:line="87" pos:column="36">//  0000 0100</comment>
<decl_stmt><decl><type><specifier pos:line="88" pos:column="1">const</specifier> <name pos:line="88" pos:column="7">int</name></type> <name pos:line="88" pos:column="11">TAB_REDUCE</name> <init pos:line="88" pos:column="22">= <expr><lit:literal type="number" pos:line="88" pos:column="24">8</lit:literal></expr></init></decl>;</decl_stmt>	       <comment type="line" pos:line="88" pos:column="40">//  0000 1000</comment>
<decl_stmt><decl><type><specifier pos:line="89" pos:column="1">const</specifier> <name pos:line="89" pos:column="7">int</name></type> <name pos:line="89" pos:column="11">TAB_CLOSEBUTTON</name> <init pos:line="89" pos:column="27">= <expr><lit:literal type="number" pos:line="89" pos:column="29">16</lit:literal></expr></init></decl>;</decl_stmt>    <comment type="line" pos:line="89" pos:column="36">//  0001 0000</comment>
<decl_stmt><decl><type><specifier pos:line="90" pos:column="1">const</specifier> <name pos:line="90" pos:column="7">int</name></type> <name pos:line="90" pos:column="11">TAB_DBCLK2CLOSE</name> <init pos:line="90" pos:column="27">= <expr><lit:literal type="number" pos:line="90" pos:column="29">32</lit:literal></expr></init></decl>;</decl_stmt>    <comment type="line" pos:line="90" pos:column="36">//  0010 0000</comment>
<decl_stmt><decl><type><specifier pos:line="91" pos:column="1">const</specifier> <name pos:line="91" pos:column="7">int</name></type> <name pos:line="91" pos:column="11">TAB_VERTICAL</name> <init pos:line="91" pos:column="24">= <expr><lit:literal type="number" pos:line="91" pos:column="26">64</lit:literal></expr></init></decl>;</decl_stmt>       <comment type="line" pos:line="91" pos:column="36">//  0100 0000</comment>
<decl_stmt><decl><type><specifier pos:line="92" pos:column="1">const</specifier> <name pos:line="92" pos:column="7">int</name></type> <name pos:line="92" pos:column="11">TAB_MULTILINE</name> <init pos:line="92" pos:column="25">= <expr><lit:literal type="number" pos:line="92" pos:column="27">128</lit:literal></expr></init></decl>;</decl_stmt>     <comment type="line" pos:line="92" pos:column="36">//  1000 0000</comment>
<decl_stmt><decl><type><specifier pos:line="93" pos:column="1">const</specifier> <name pos:line="93" pos:column="7">int</name></type> <name pos:line="93" pos:column="11">TAB_HIDE</name> <init pos:line="93" pos:column="20">= <expr><lit:literal type="number" pos:line="93" pos:column="22">256</lit:literal></expr></init></decl>;</decl_stmt>          <comment type="line" pos:line="93" pos:column="36">//1 0000 0000</comment>

<enum pos:line="95" pos:column="1">enum <name pos:line="95" pos:column="6">formatType</name> <block pos:line="95" pos:column="17">{<decl><name pos:line="95" pos:column="18">WIN_FORMAT</name></decl><op:operator pos:line="95" pos:column="28">,</op:operator> <decl><name pos:line="95" pos:column="30">MAC_FORMAT</name></decl><op:operator pos:line="95" pos:column="40">,</op:operator> <decl><name pos:line="95" pos:column="42">UNIX_FORMAT</name></decl>}</block>;</enum>
<enum pos:line="96" pos:column="1">enum <name pos:line="96" pos:column="6">UniMode</name> <block pos:line="96" pos:column="14">{<decl><name pos:line="96" pos:column="15">uni8Bit</name><init pos:line="96" pos:column="22">=<expr><lit:literal type="number" pos:line="96" pos:column="23">0</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="24">,</op:operator> <decl><name pos:line="96" pos:column="26">uniUTF8</name><init pos:line="96" pos:column="33">=<expr><lit:literal type="number" pos:line="96" pos:column="34">1</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="35">,</op:operator> <decl><name pos:line="96" pos:column="37">uni16BE</name><init pos:line="96" pos:column="44">=<expr><lit:literal type="number" pos:line="96" pos:column="45">2</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="46">,</op:operator> <decl><name pos:line="96" pos:column="48">uni16LE</name><init pos:line="96" pos:column="55">=<expr><lit:literal type="number" pos:line="96" pos:column="56">3</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="57">,</op:operator> <decl><name pos:line="96" pos:column="59">uniCookie</name><init pos:line="96" pos:column="68">=<expr><lit:literal type="number" pos:line="96" pos:column="69">4</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="70">,</op:operator> <decl><name pos:line="96" pos:column="72">uni7Bit</name><init pos:line="96" pos:column="79">=<expr><lit:literal type="number" pos:line="96" pos:column="80">5</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="81">,</op:operator> <decl><name pos:line="96" pos:column="83">uni16BE_NoBOM</name><init pos:line="96" pos:column="96">=<expr><lit:literal type="number" pos:line="96" pos:column="97">6</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="98">,</op:operator> <decl><name pos:line="96" pos:column="100">uni16LE_NoBOM</name><init pos:line="96" pos:column="113">=<expr><lit:literal type="number" pos:line="96" pos:column="114">7</lit:literal></expr></init></decl><op:operator pos:line="96" pos:column="115">,</op:operator> <decl><name pos:line="96" pos:column="117">uniEnd</name></decl>}</block>;</enum>
<enum pos:line="97" pos:column="1">enum <name pos:line="97" pos:column="6">ChangeDetect</name> <block pos:line="97" pos:column="19">{<decl><name pos:line="97" pos:column="20">cdDisabled</name><init pos:line="97" pos:column="30">=<expr><lit:literal type="number" pos:line="97" pos:column="31">0</lit:literal></expr></init></decl><op:operator pos:line="97" pos:column="32">,</op:operator> <decl><name pos:line="97" pos:column="34">cdEnabled</name><init pos:line="97" pos:column="43">=<expr><lit:literal type="number" pos:line="97" pos:column="44">1</lit:literal></expr></init></decl><op:operator pos:line="97" pos:column="45">,</op:operator> <decl><name pos:line="97" pos:column="47">cdAutoUpdate</name><init pos:line="97" pos:column="59">=<expr><lit:literal type="number" pos:line="97" pos:column="60">2</lit:literal></expr></init></decl><op:operator pos:line="97" pos:column="61">,</op:operator> <decl><name pos:line="97" pos:column="63">cdGo2end</name><init pos:line="97" pos:column="71">=<expr><lit:literal type="number" pos:line="97" pos:column="72">3</lit:literal></expr></init></decl><op:operator pos:line="97" pos:column="73">,</op:operator> <decl><name pos:line="97" pos:column="75">cdAutoUpdateGo2end</name><init pos:line="97" pos:column="93">=<expr><lit:literal type="number" pos:line="97" pos:column="94">4</lit:literal></expr></init></decl>}</block>;</enum>
<enum pos:line="98" pos:column="1">enum <name pos:line="98" pos:column="6">BackupFeature</name> <block pos:line="98" pos:column="20">{<decl><name pos:line="98" pos:column="21">bak_none</name> <init pos:line="98" pos:column="30">= <expr><lit:literal type="number" pos:line="98" pos:column="32">0</lit:literal></expr></init></decl><op:operator pos:line="98" pos:column="33">,</op:operator> <decl><name pos:line="98" pos:column="35">bak_simple</name> <init pos:line="98" pos:column="46">= <expr><lit:literal type="number" pos:line="98" pos:column="48">1</lit:literal></expr></init></decl><op:operator pos:line="98" pos:column="49">,</op:operator> <decl><name pos:line="98" pos:column="51">bak_verbose</name> <init pos:line="98" pos:column="63">= <expr><lit:literal type="number" pos:line="98" pos:column="65">2</lit:literal></expr></init></decl>}</block>;</enum>
<enum pos:line="99" pos:column="1">enum <name pos:line="99" pos:column="6">OpenSaveDirSetting</name> <block pos:line="99" pos:column="25">{<decl><name pos:line="99" pos:column="26">dir_followCurrent</name> <init pos:line="99" pos:column="44">= <expr><lit:literal type="number" pos:line="99" pos:column="46">0</lit:literal></expr></init></decl><op:operator pos:line="99" pos:column="47">,</op:operator> <decl><name pos:line="99" pos:column="49">dir_last</name> <init pos:line="99" pos:column="58">= <expr><lit:literal type="number" pos:line="99" pos:column="60">1</lit:literal></expr></init></decl><op:operator pos:line="99" pos:column="61">,</op:operator> <decl><name pos:line="99" pos:column="63">dir_userDef</name> <init pos:line="99" pos:column="75">= <expr><lit:literal type="number" pos:line="99" pos:column="77">2</lit:literal></expr></init></decl>}</block>;</enum>

<decl_stmt><decl><type><specifier pos:line="101" pos:column="1">const</specifier> <name pos:line="101" pos:column="7">int</name></type> <name pos:line="101" pos:column="11">LANG_INDEX_INSTR</name> <init pos:line="101" pos:column="28">= <expr><lit:literal type="number" pos:line="101" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="102" pos:column="1">const</specifier> <name pos:line="102" pos:column="7">int</name></type> <name pos:line="102" pos:column="11">LANG_INDEX_INSTR2</name> <init pos:line="102" pos:column="29">= <expr><lit:literal type="number" pos:line="102" pos:column="31">1</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="103" pos:column="1">const</specifier> <name pos:line="103" pos:column="7">int</name></type> <name pos:line="103" pos:column="11">LANG_INDEX_TYPE</name> <init pos:line="103" pos:column="27">= <expr><lit:literal type="number" pos:line="103" pos:column="29">2</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="104" pos:column="1">const</specifier> <name pos:line="104" pos:column="7">int</name></type> <name pos:line="104" pos:column="11">LANG_INDEX_TYPE2</name> <init pos:line="104" pos:column="28">= <expr><lit:literal type="number" pos:line="104" pos:column="30">3</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="105" pos:column="1">const</specifier> <name pos:line="105" pos:column="7">int</name></type> <name pos:line="105" pos:column="11">LANG_INDEX_TYPE3</name> <init pos:line="105" pos:column="28">= <expr><lit:literal type="number" pos:line="105" pos:column="30">4</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="106" pos:column="1">const</specifier> <name pos:line="106" pos:column="7">int</name></type> <name pos:line="106" pos:column="11">LANG_INDEX_TYPE4</name> <init pos:line="106" pos:column="28">= <expr><lit:literal type="number" pos:line="106" pos:column="30">5</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="107" pos:column="1">const</specifier> <name pos:line="107" pos:column="7">int</name></type> <name pos:line="107" pos:column="11">LANG_INDEX_TYPE5</name> <init pos:line="107" pos:column="28">= <expr><lit:literal type="number" pos:line="107" pos:column="30">6</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="109" pos:column="1">const</specifier> <name pos:line="109" pos:column="7">int</name></type> <name pos:line="109" pos:column="11">COPYDATA_PARAMS</name> <init pos:line="109" pos:column="27">= <expr><lit:literal type="number" pos:line="109" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="110" pos:column="1">const</specifier> <name pos:line="110" pos:column="7">int</name></type> <name pos:line="110" pos:column="11">COPYDATA_FILENAMESA</name> <init pos:line="110" pos:column="31">= <expr><lit:literal type="number" pos:line="110" pos:column="33">1</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="111" pos:column="1">const</specifier> <name pos:line="111" pos:column="7">int</name></type> <name pos:line="111" pos:column="11">COPYDATA_FILENAMESW</name> <init pos:line="111" pos:column="31">= <expr><lit:literal type="number" pos:line="111" pos:column="33">2</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="113" pos:column="1">const</specifier> <name pos:line="113" pos:column="7">TCHAR</name></type> <name><name pos:line="113" pos:column="13">fontSizeStrs</name><index pos:line="113" pos:column="25">[]</index><index pos:line="113" pos:column="27">[<expr><lit:literal type="number" pos:line="113" pos:column="28">3</lit:literal></expr>]</index></name> <init pos:line="113" pos:column="31">= <expr><block pos:line="113" pos:column="33">{<expr><call><name pos:line="113" pos:column="34">TEXT</name><argument_list pos:line="113" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="39">""</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="44">TEXT</name><argument_list pos:line="113" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="49">"5"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="55">TEXT</name><argument_list pos:line="113" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="60">"6"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="66">TEXT</name><argument_list pos:line="113" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="71">"7"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="77">TEXT</name><argument_list pos:line="113" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="82">"8"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="88">TEXT</name><argument_list pos:line="113" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="93">"9"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="99">TEXT</name><argument_list pos:line="113" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="104">"10"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="111">TEXT</name><argument_list pos:line="113" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="116">"11"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="123">TEXT</name><argument_list pos:line="113" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="128">"12"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="135">TEXT</name><argument_list pos:line="113" pos:column="139">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="140">"14"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="147">TEXT</name><argument_list pos:line="113" pos:column="151">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="152">"16"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="159">TEXT</name><argument_list pos:line="113" pos:column="163">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="164">"18"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="171">TEXT</name><argument_list pos:line="113" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="176">"20"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="183">TEXT</name><argument_list pos:line="113" pos:column="187">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="188">"22"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="195">TEXT</name><argument_list pos:line="113" pos:column="199">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="200">"24"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="113" pos:column="207">TEXT</name><argument_list pos:line="113" pos:column="211">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="212">"26"</lit:literal></expr></argument>)</argument_list></call></expr>, <macro><name pos:line="113" pos:column="219">TEXT</name><argument_list pos:line="113" pos:column="223">(<argument pos:line="113" pos:column="224">"28"</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="115" pos:column="1">const</specifier> <name pos:line="115" pos:column="7">TCHAR</name></type> <name><name pos:line="115" pos:column="13">localConfFile</name><index pos:line="115" pos:column="26">[]</index></name> <init pos:line="115" pos:column="29">= <expr><call><name pos:line="115" pos:column="31">TEXT</name><argument_list pos:line="115" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="36">"doLocalConf.xml"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="116" pos:column="1">const</specifier> <name pos:line="116" pos:column="7">TCHAR</name></type> <name><name pos:line="116" pos:column="13">allowAppDataPluginsFile</name><index pos:line="116" pos:column="36">[]</index></name> <init pos:line="116" pos:column="39">= <expr><call><name pos:line="116" pos:column="41">TEXT</name><argument_list pos:line="116" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="46">"allowAppDataPlugins.xml"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="117" pos:column="1">const</specifier> <name pos:line="117" pos:column="7">TCHAR</name></type> <name><name pos:line="117" pos:column="13">notepadStyleFile</name><index pos:line="117" pos:column="29">[]</index></name> <init pos:line="117" pos:column="32">= <expr><call><name pos:line="117" pos:column="34">TEXT</name><argument_list pos:line="117" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="39">"asNotepad.xml"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<function_decl><type><name pos:line="119" pos:column="1">void</name></type> <name pos:line="119" pos:column="6">cutString</name><parameter_list pos:line="119" pos:column="15">(<param><decl><type><specifier pos:line="119" pos:column="16">const</specifier> <name pos:line="119" pos:column="22">TCHAR</name> <type:modifier pos:line="119" pos:column="28">*</type:modifier></type><name pos:line="119" pos:column="29">str2cut</name></decl></param>, <param><decl><type><name><name pos:line="119" pos:column="38">vector</name><argument_list pos:line="119" pos:column="44">&lt;<argument><expr><name pos:line="119" pos:column="45">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="119" pos:column="61">&amp;</type:modifier></type> <name pos:line="119" pos:column="63">patternVect</name></decl></param>)</parameter_list>;</function_decl>
<comment type="block" pos:line="120" pos:column="1">/*
struct HeaderLineState {
	HeaderLineState() : _headerLineNumber(0), _isCollapsed(false){};
	HeaderLineState(int lineNumber, bool isFoldUp) : _headerLineNumber(lineNumber), _isCollapsed(isFoldUp){};
	int _headerLineNumber;
	bool _isCollapsed;
};
*/</comment>
<struct pos:line="128" pos:column="1">struct <name pos:line="128" pos:column="8">Position</name>
<block pos:line="129" pos:column="1">{<public type="default" pos:line="129" pos:column="2"> 
	<decl_stmt><decl><type><name pos:line="130" pos:column="9">int</name></type> <name pos:line="130" pos:column="13">_firstVisibleLine</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="131" pos:column="9">int</name></type> <name pos:line="131" pos:column="13">_startPos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="132" pos:column="9">int</name></type> <name pos:line="132" pos:column="13">_endPos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">int</name></type> <name pos:line="133" pos:column="13">_xOffset</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="134" pos:column="9">int</name></type> <name pos:line="134" pos:column="13">_selMode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="135" pos:column="9">int</name></type> <name pos:line="135" pos:column="13">_scrollWidth</name></decl>;</decl_stmt>
	<constructor><name pos:line="136" pos:column="9">Position</name><parameter_list pos:line="136" pos:column="17">()</parameter_list> <member_list pos:line="136" pos:column="20">: <call><name pos:line="136" pos:column="22">_firstVisibleLine</name><argument_list pos:line="136" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="40">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="42">,</op:operator> <call><name pos:line="136" pos:column="44">_startPos</name><argument_list pos:line="136" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="54">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="56">,</op:operator> <call><name pos:line="136" pos:column="58">_endPos</name><argument_list pos:line="136" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="68">,</op:operator> <call><name pos:line="136" pos:column="70">_xOffset</name><argument_list pos:line="136" pos:column="78">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="81">,</op:operator> <call><name pos:line="136" pos:column="83">_scrollWidth</name><argument_list pos:line="136" pos:column="95">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="98">,</op:operator> <call><name pos:line="136" pos:column="100">_selMode</name><argument_list pos:line="136" pos:column="108">(<argument><expr><lit:literal type="number" pos:line="136" pos:column="109">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="136" pos:column="112">{}</block></constructor><empty_stmt pos:line="136" pos:column="114">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="139" pos:column="1">struct <name pos:line="139" pos:column="8">sessionFileInfo</name> <super pos:line="139" pos:column="24">: <specifier pos:line="139" pos:column="26">public</specifier> <name pos:line="139" pos:column="33">Position</name></super> <block pos:line="139" pos:column="42">{<public type="default" pos:line="139" pos:column="43">
	<constructor><name pos:line="140" pos:column="9">sessionFileInfo</name><parameter_list pos:line="140" pos:column="24">(<param><decl><type><specifier pos:line="140" pos:column="25">const</specifier> <name pos:line="140" pos:column="31">TCHAR</name> <type:modifier pos:line="140" pos:column="37">*</type:modifier></type><name pos:line="140" pos:column="38">fn</name></decl></param>, <param><decl><type><specifier pos:line="140" pos:column="42">const</specifier> <name pos:line="140" pos:column="48">TCHAR</name> <type:modifier pos:line="140" pos:column="54">*</type:modifier></type><name pos:line="140" pos:column="55">ln</name></decl></param>, <param><decl><type><name pos:line="140" pos:column="59">int</name></type> <name pos:line="140" pos:column="63">encoding</name></decl></param>, <param><decl><type><name pos:line="140" pos:column="73">Position</name></type> <name pos:line="140" pos:column="82">pos</name></decl></param>)</parameter_list> <member_list pos:line="140" pos:column="87">: <call><name pos:line="140" pos:column="89">_encoding</name><argument_list pos:line="140" pos:column="98">(<argument><expr><name pos:line="140" pos:column="99">encoding</name></expr></argument>)</argument_list></call><op:operator pos:line="140" pos:column="108">,</op:operator> <call><name pos:line="140" pos:column="110">Position</name><argument_list pos:line="140" pos:column="118">(<argument><expr><name pos:line="140" pos:column="119">pos</name></expr></argument>)</argument_list></call> </member_list><block pos:line="140" pos:column="124">{
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name pos:line="141" pos:column="21">fn</name></expr>)</condition><then pos:line="141" pos:column="24"> <expr_stmt><expr><name pos:line="141" pos:column="25">_fileName</name> <op:operator pos:line="141" pos:column="35">=</op:operator> <name pos:line="141" pos:column="37">fn</name></expr>;</expr_stmt></then></if>
		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><name pos:line="142" pos:column="21">ln</name></expr>)</condition><then pos:line="142" pos:column="24">	<expr_stmt><expr><name pos:line="142" pos:column="25">_langName</name> <op:operator pos:line="142" pos:column="35">=</op:operator> <name pos:line="142" pos:column="37">ln</name></expr>;</expr_stmt></then></if>
	}</block></constructor><empty_stmt pos:line="143" pos:column="10">;</empty_stmt>

	<constructor><name pos:line="145" pos:column="9">sessionFileInfo</name><parameter_list pos:line="145" pos:column="24">(<param><decl><type><name pos:line="145" pos:column="25">generic_string</name></type> <name pos:line="145" pos:column="40">fn</name></decl></param>)</parameter_list> <member_list pos:line="145" pos:column="44">: <call><name pos:line="145" pos:column="46">_fileName</name><argument_list pos:line="145" pos:column="55">(<argument><expr><name pos:line="145" pos:column="56">fn</name></expr></argument>)</argument_list></call><op:operator pos:line="145" pos:column="59">,</op:operator> <call><name pos:line="145" pos:column="61">_encoding</name><argument_list pos:line="145" pos:column="70">(<argument><expr><op:operator pos:line="145" pos:column="71">-</op:operator><lit:literal type="number" pos:line="145" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="145" pos:column="74">{}</block></constructor><empty_stmt pos:line="145" pos:column="76">;</empty_stmt>
	
	<decl_stmt><decl><type><name pos:line="147" pos:column="9">generic_string</name></type> <name pos:line="147" pos:column="24">_fileName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">generic_string</name></type>	<name pos:line="148" pos:column="25">_langName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="149" pos:column="9">vector</name><argument_list pos:line="149" pos:column="15">&lt;<argument><expr><name pos:line="149" pos:column="16">size_t</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="149" pos:column="24">marks</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">int</name></type>	<name pos:line="150" pos:column="17">_encoding</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="153" pos:column="1">struct <name pos:line="153" pos:column="8">Session</name> <block pos:line="153" pos:column="16">{<public type="default" pos:line="153" pos:column="17">
	<function><type><name pos:line="154" pos:column="9">size_t</name></type> <name pos:line="154" pos:column="16">nbMainFiles</name><parameter_list pos:line="154" pos:column="27">()</parameter_list> <specifier pos:line="154" pos:column="30">const</specifier> <block pos:line="154" pos:column="36">{<return pos:line="154" pos:column="37">return <expr><call><name><name pos:line="154" pos:column="44">_mainViewFiles</name><op:operator pos:line="154" pos:column="58">.</op:operator><name pos:line="154" pos:column="59">size</name></name><argument_list pos:line="154" pos:column="63">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="154" pos:column="67">;</empty_stmt>
	<function><type><name pos:line="155" pos:column="9">size_t</name></type> <name pos:line="155" pos:column="16">nbSubFiles</name><parameter_list pos:line="155" pos:column="26">()</parameter_list> <specifier pos:line="155" pos:column="29">const</specifier> <block pos:line="155" pos:column="35">{<return pos:line="155" pos:column="36">return <expr><call><name><name pos:line="155" pos:column="43">_subViewFiles</name><op:operator pos:line="155" pos:column="56">.</op:operator><name pos:line="155" pos:column="57">size</name></name><argument_list pos:line="155" pos:column="61">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="155" pos:column="65">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">size_t</name></type> <name pos:line="156" pos:column="16">_activeView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="157" pos:column="9">size_t</name></type> <name pos:line="157" pos:column="16">_activeMainIndex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">size_t</name></type> <name pos:line="158" pos:column="16">_activeSubIndex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="159" pos:column="9">vector</name><argument_list pos:line="159" pos:column="15">&lt;<argument><expr><name pos:line="159" pos:column="16">sessionFileInfo</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="159" pos:column="33">_mainViewFiles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="160" pos:column="9">vector</name><argument_list pos:line="160" pos:column="15">&lt;<argument><expr><name pos:line="160" pos:column="16">sessionFileInfo</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="160" pos:column="33">_subViewFiles</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="163" pos:column="1">struct <name pos:line="163" pos:column="8">CmdLineParams</name> <block pos:line="163" pos:column="22">{<public type="default" pos:line="163" pos:column="23">
	<decl_stmt><decl><type><name pos:line="164" pos:column="9">bool</name></type> <name pos:line="164" pos:column="14">_isNoPlugin</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">bool</name></type> <name pos:line="165" pos:column="14">_isReadOnly</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="166" pos:column="9">bool</name></type> <name pos:line="166" pos:column="14">_isNoSession</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="167" pos:column="9">bool</name></type> <name pos:line="167" pos:column="14">_isNoTab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="168" pos:column="9">bool</name></type> <name pos:line="168" pos:column="14">_isPreLaunch</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="169" pos:column="9">bool</name></type> <name pos:line="169" pos:column="14">_showLoadingTime</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="170" pos:column="9">bool</name></type> <name pos:line="170" pos:column="14">_alwaysOnTop</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="172" pos:column="9">int</name></type> <name pos:line="172" pos:column="13">_line2go</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="173" pos:column="5">int</name></type> <name pos:line="173" pos:column="9">_column2go</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="175" pos:column="5">POINT</name></type> <name pos:line="175" pos:column="11">_point</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="176" pos:column="9">bool</name></type> <name pos:line="176" pos:column="14">_isPointXValid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="177" pos:column="9">bool</name></type> <name pos:line="177" pos:column="14">_isPointYValid</name></decl>;</decl_stmt>
	<function><type><name pos:line="178" pos:column="9">bool</name></type> <name pos:line="178" pos:column="14">isPointValid</name><parameter_list pos:line="178" pos:column="26">()</parameter_list> <block pos:line="178" pos:column="29">{
		<return pos:line="179" pos:column="17">return <expr><name pos:line="179" pos:column="24">_isPointXValid</name> <op:operator pos:line="179" pos:column="39">&amp;&amp;</op:operator> <name pos:line="179" pos:column="42">_isPointYValid</name></expr>;</return>
	}</block></function><empty_stmt pos:line="180" pos:column="10">;</empty_stmt>

	<decl_stmt><decl><type><name pos:line="182" pos:column="9">LangType</name></type> <name pos:line="182" pos:column="18">_langType</name></decl>;</decl_stmt>
	<constructor><name pos:line="183" pos:column="9">CmdLineParams</name><parameter_list pos:line="183" pos:column="22">()</parameter_list> <member_list pos:line="183" pos:column="25">: <call><name pos:line="183" pos:column="27">_isNoPlugin</name><argument_list pos:line="183" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="183" pos:column="39">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="183" pos:column="45">,</op:operator> <call><name pos:line="183" pos:column="47">_isReadOnly</name><argument_list pos:line="183" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="183" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="183" pos:column="65">,</op:operator> <call><name pos:line="183" pos:column="67">_isNoSession</name><argument_list pos:line="183" pos:column="79">(<argument><expr><lit:literal type="boolean" pos:line="183" pos:column="80">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="183" pos:column="86">,</op:operator> <call><name pos:line="183" pos:column="88">_isNoTab</name><argument_list pos:line="183" pos:column="96">(<argument><expr><lit:literal type="boolean" pos:line="183" pos:column="97">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="183" pos:column="103">,</op:operator><call><name pos:line="183" pos:column="104">_showLoadingTime</name><argument_list pos:line="183" pos:column="120">(<argument><expr><lit:literal type="boolean" pos:line="183" pos:column="121">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="183" pos:column="127">,</op:operator>\
        <call><name pos:line="184" pos:column="9">_isPreLaunch</name><argument_list pos:line="184" pos:column="21">(<argument><expr><lit:literal type="boolean" pos:line="184" pos:column="22">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="28">,</op:operator> <call><name pos:line="184" pos:column="30">_line2go</name><argument_list pos:line="184" pos:column="38">(<argument><expr><op:operator pos:line="184" pos:column="39">-</op:operator><lit:literal type="number" pos:line="184" pos:column="40">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="42">,</op:operator> <call><name pos:line="184" pos:column="44">_column2go</name><argument_list pos:line="184" pos:column="54">(<argument><expr><op:operator pos:line="184" pos:column="55">-</op:operator><lit:literal type="number" pos:line="184" pos:column="56">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="58">,</op:operator> <call><name pos:line="184" pos:column="60">_langType</name><argument_list pos:line="184" pos:column="69">(<argument><expr><name pos:line="184" pos:column="70">L_EXTERNAL</name></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="81">,</op:operator> <call><name pos:line="184" pos:column="83">_isPointXValid</name><argument_list pos:line="184" pos:column="97">(<argument><expr><lit:literal type="boolean" pos:line="184" pos:column="98">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="104">,</op:operator> <call><name pos:line="184" pos:column="106">_isPointYValid</name><argument_list pos:line="184" pos:column="120">(<argument><expr><lit:literal type="boolean" pos:line="184" pos:column="121">false</lit:literal></expr></argument>)</argument_list></call>
    </member_list><block pos:line="185" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="186" pos:column="9">_point</name><op:operator pos:line="186" pos:column="15">.</op:operator><name pos:line="186" pos:column="16">x</name></name> <op:operator pos:line="186" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="186" pos:column="20">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="187" pos:column="9">_point</name><op:operator pos:line="187" pos:column="15">.</op:operator><name pos:line="187" pos:column="16">y</name></name> <op:operator pos:line="187" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="187" pos:column="20">0</lit:literal></expr>;</expr_stmt>
    }</block></constructor>
</public>}</block>;</struct>

<struct pos:line="191" pos:column="1">struct <name pos:line="191" pos:column="8">FloatingWindowInfo</name> <block pos:line="191" pos:column="27">{<public type="default" pos:line="191" pos:column="28">
	<decl_stmt><decl><type><name pos:line="192" pos:column="9">int</name></type> <name pos:line="192" pos:column="13">_cont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="193" pos:column="9">RECT</name></type> <name pos:line="193" pos:column="14">_pos</name></decl>;</decl_stmt>
	<constructor><name pos:line="194" pos:column="9">FloatingWindowInfo</name><parameter_list pos:line="194" pos:column="27">(<param><decl><type><name pos:line="194" pos:column="28">int</name></type> <name pos:line="194" pos:column="32">cont</name></decl></param>, <param><decl><type><name pos:line="194" pos:column="38">int</name></type> <name pos:line="194" pos:column="42">x</name></decl></param>, <param><decl><type><name pos:line="194" pos:column="45">int</name></type> <name pos:line="194" pos:column="49">y</name></decl></param>, <param><decl><type><name pos:line="194" pos:column="52">int</name></type> <name pos:line="194" pos:column="56">w</name></decl></param>, <param><decl><type><name pos:line="194" pos:column="59">int</name></type> <name pos:line="194" pos:column="63">h</name></decl></param>)</parameter_list> <member_list pos:line="194" pos:column="66">: <call><name pos:line="194" pos:column="68">_cont</name><argument_list pos:line="194" pos:column="73">(<argument><expr><name pos:line="194" pos:column="74">cont</name></expr></argument>)</argument_list></call> </member_list><block pos:line="194" pos:column="80">{
		<expr_stmt><expr><name><name pos:line="195" pos:column="17">_pos</name><op:operator pos:line="195" pos:column="21">.</op:operator><name pos:line="195" pos:column="22">left</name></name>	<op:operator pos:line="195" pos:column="33">=</op:operator> <name pos:line="195" pos:column="35">x</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="196" pos:column="17">_pos</name><op:operator pos:line="196" pos:column="21">.</op:operator><name pos:line="196" pos:column="22">top</name></name>	<op:operator pos:line="196" pos:column="33">=</op:operator> <name pos:line="196" pos:column="35">y</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="197" pos:column="17">_pos</name><op:operator pos:line="197" pos:column="21">.</op:operator><name pos:line="197" pos:column="22">right</name></name>	<op:operator pos:line="197" pos:column="33">=</op:operator> <name pos:line="197" pos:column="35">w</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="198" pos:column="17">_pos</name><op:operator pos:line="198" pos:column="21">.</op:operator><name pos:line="198" pos:column="22">bottom</name></name> <op:operator pos:line="198" pos:column="29">=</op:operator> <name pos:line="198" pos:column="31">h</name></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="199" pos:column="10">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="202" pos:column="1">struct <name pos:line="202" pos:column="8">PluginDlgDockingInfo</name> <block pos:line="202" pos:column="29">{<public type="default" pos:line="202" pos:column="30">
	<decl_stmt><decl><type><name pos:line="203" pos:column="9">generic_string</name></type> <name pos:line="203" pos:column="24">_name</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">int</name></type> <name pos:line="204" pos:column="13">_internalID</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="206" pos:column="9">int</name></type> <name pos:line="206" pos:column="13">_currContainer</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="207" pos:column="9">int</name></type> <name pos:line="207" pos:column="13">_prevContainer</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="208" pos:column="9">bool</name></type> <name pos:line="208" pos:column="14">_isVisible</name></decl>;</decl_stmt>

	<constructor><name pos:line="210" pos:column="9">PluginDlgDockingInfo</name><parameter_list pos:line="210" pos:column="29">(<param><decl><type><specifier pos:line="210" pos:column="30">const</specifier> <name pos:line="210" pos:column="36">TCHAR</name> <type:modifier pos:line="210" pos:column="42">*</type:modifier></type><name pos:line="210" pos:column="43">pluginName</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="55">int</name></type> <name pos:line="210" pos:column="59">id</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="63">int</name></type> <name pos:line="210" pos:column="67">curr</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="73">int</name></type> <name pos:line="210" pos:column="77">prev</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="83">bool</name></type> <name pos:line="210" pos:column="88">isVis</name></decl></param>)</parameter_list> <member_list pos:line="210" pos:column="95">: <call><name pos:line="210" pos:column="97">_internalID</name><argument_list pos:line="210" pos:column="108">(<argument><expr><name pos:line="210" pos:column="109">id</name></expr></argument>)</argument_list></call><op:operator pos:line="210" pos:column="112">,</op:operator> <call><name pos:line="210" pos:column="114">_currContainer</name><argument_list pos:line="210" pos:column="128">(<argument><expr><name pos:line="210" pos:column="129">curr</name></expr></argument>)</argument_list></call><op:operator pos:line="210" pos:column="134">,</op:operator> <call><name pos:line="210" pos:column="136">_prevContainer</name><argument_list pos:line="210" pos:column="150">(<argument><expr><name pos:line="210" pos:column="151">prev</name></expr></argument>)</argument_list></call><op:operator pos:line="210" pos:column="156">,</op:operator> <call><name pos:line="210" pos:column="158">_isVisible</name><argument_list pos:line="210" pos:column="168">(<argument><expr><name pos:line="210" pos:column="169">isVis</name></expr></argument>)</argument_list></call><op:operator pos:line="210" pos:column="175">,</op:operator> <call><name pos:line="210" pos:column="177">_name</name><argument_list pos:line="210" pos:column="182">(<argument><expr><name pos:line="210" pos:column="183">pluginName</name></expr></argument>)</argument_list></call></member_list><block pos:line="210" pos:column="194">{}</block></constructor><empty_stmt pos:line="210" pos:column="196">;</empty_stmt>

	<function><type><specifier pos:line="212" pos:column="9">friend</specifier> <specifier pos:line="212" pos:column="16">inline</specifier> <specifier pos:line="212" pos:column="23">const</specifier> <name pos:line="212" pos:column="29">bool</name></type> <name pos:line="212" pos:column="34">operator==</name><parameter_list pos:line="212" pos:column="44">(<param><decl><type><specifier pos:line="212" pos:column="45">const</specifier> <name pos:line="212" pos:column="51">PluginDlgDockingInfo</name> <type:modifier pos:line="212" pos:column="72">&amp;</type:modifier></type> <name pos:line="212" pos:column="74">a</name></decl></param>, <param><decl><type><specifier pos:line="212" pos:column="77">const</specifier> <name pos:line="212" pos:column="83">PluginDlgDockingInfo</name> <type:modifier pos:line="212" pos:column="104">&amp;</type:modifier></type> <name pos:line="212" pos:column="106">b</name></decl></param>)</parameter_list> <block pos:line="212" pos:column="109">{
		<if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><op:operator pos:line="213" pos:column="21">(</op:operator><name><name pos:line="213" pos:column="22">a</name><op:operator pos:line="213" pos:column="23">.</op:operator><name pos:line="213" pos:column="24">_name</name></name> <op:operator pos:line="213" pos:column="30">==</op:operator> <name><name pos:line="213" pos:column="33">b</name><op:operator pos:line="213" pos:column="34">.</op:operator><name pos:line="213" pos:column="35">_name</name></name><op:operator pos:line="213" pos:column="40">)</op:operator> <op:operator pos:line="213" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="213" pos:column="45">(</op:operator><name><name pos:line="213" pos:column="46">a</name><op:operator pos:line="213" pos:column="47">.</op:operator><name pos:line="213" pos:column="48">_internalID</name></name> <op:operator pos:line="213" pos:column="60">==</op:operator> <name><name pos:line="213" pos:column="63">b</name><op:operator pos:line="213" pos:column="64">.</op:operator><name pos:line="213" pos:column="65">_internalID</name></name><op:operator pos:line="213" pos:column="76">)</op:operator></expr>)</condition><then pos:line="213" pos:column="78">
			<return pos:line="214" pos:column="25">return <expr><lit:literal type="boolean" pos:line="214" pos:column="32">true</lit:literal></expr>;</return></then>
		<else pos:line="215" pos:column="17">else
			<return pos:line="216" pos:column="25">return <expr><lit:literal type="boolean" pos:line="216" pos:column="32">false</lit:literal></expr>;</return></else></if>
	}</block></function><empty_stmt pos:line="217" pos:column="10">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="220" pos:column="1">struct <name pos:line="220" pos:column="8">ContainerTabInfo</name> <block pos:line="220" pos:column="25">{<public type="default" pos:line="220" pos:column="26">
	<decl_stmt><decl><type><name pos:line="221" pos:column="9">int</name></type> <name pos:line="221" pos:column="13">_cont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="222" pos:column="9">int</name></type> <name pos:line="222" pos:column="13">_activeTab</name></decl>;</decl_stmt>

	<constructor><name pos:line="224" pos:column="9">ContainerTabInfo</name><parameter_list pos:line="224" pos:column="25">(<param><decl><type><name pos:line="224" pos:column="26">int</name></type> <name pos:line="224" pos:column="30">cont</name></decl></param>, <param><decl><type><name pos:line="224" pos:column="36">int</name></type> <name pos:line="224" pos:column="40">activeTab</name></decl></param>)</parameter_list> <member_list pos:line="224" pos:column="51">: <call><name pos:line="224" pos:column="53">_cont</name><argument_list pos:line="224" pos:column="58">(<argument><expr><name pos:line="224" pos:column="59">cont</name></expr></argument>)</argument_list></call><op:operator pos:line="224" pos:column="64">,</op:operator> <call><name pos:line="224" pos:column="66">_activeTab</name><argument_list pos:line="224" pos:column="76">(<argument><expr><name pos:line="224" pos:column="77">activeTab</name></expr></argument>)</argument_list></call> </member_list><block pos:line="224" pos:column="88">{}</block></constructor><empty_stmt pos:line="224" pos:column="90">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="227" pos:column="1">struct <name pos:line="227" pos:column="8">DockingManagerData</name> <block pos:line="227" pos:column="27">{<public type="default" pos:line="227" pos:column="28">
	<decl_stmt><decl><type><name pos:line="228" pos:column="9">int</name></type> <name pos:line="228" pos:column="13">_leftWidth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="229" pos:column="9">int</name></type> <name pos:line="229" pos:column="13">_rightWidth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="230" pos:column="9">int</name></type> <name pos:line="230" pos:column="13">_topHeight</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="231" pos:column="9">int</name></type> <name pos:line="231" pos:column="13">_bottomHight</name></decl>;</decl_stmt>

	<constructor><name pos:line="233" pos:column="9">DockingManagerData</name><parameter_list pos:line="233" pos:column="27">()</parameter_list> <member_list pos:line="233" pos:column="30">: <call><name pos:line="233" pos:column="32">_leftWidth</name><argument_list pos:line="233" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="233" pos:column="43">200</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="233" pos:column="47">,</op:operator> <call><name pos:line="233" pos:column="49">_rightWidth</name><argument_list pos:line="233" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="233" pos:column="61">200</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="233" pos:column="65">,</op:operator> <call><name pos:line="233" pos:column="67">_topHeight</name><argument_list pos:line="233" pos:column="77">(<argument><expr><lit:literal type="number" pos:line="233" pos:column="78">200</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="233" pos:column="82">,</op:operator> <call><name pos:line="233" pos:column="84">_bottomHight</name><argument_list pos:line="233" pos:column="96">(<argument><expr><lit:literal type="number" pos:line="233" pos:column="97">200</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="233" pos:column="102">{}</block></constructor><empty_stmt pos:line="233" pos:column="104">;</empty_stmt>

	<decl_stmt><decl><type><name><name pos:line="235" pos:column="9">vector</name><argument_list pos:line="235" pos:column="15">&lt;<argument><expr><name pos:line="235" pos:column="16">FloatingWindowInfo</name></expr></argument>&gt;</argument_list></name></type>		<name pos:line="235" pos:column="49">_flaotingWindowInfo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="236" pos:column="9">vector</name><argument_list pos:line="236" pos:column="15">&lt;<argument><expr><name pos:line="236" pos:column="16">PluginDlgDockingInfo</name></expr></argument>&gt;</argument_list></name></type>	<name pos:line="236" pos:column="41">_pluginDockInfo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="237" pos:column="9">vector</name><argument_list pos:line="237" pos:column="15">&lt;<argument><expr><name pos:line="237" pos:column="16">ContainerTabInfo</name></expr></argument>&gt;</argument_list></name></type>		<name pos:line="237" pos:column="49">_containerTabInfo</name></decl>;</decl_stmt>

	<function><type><name pos:line="239" pos:column="9">bool</name></type> <name pos:line="239" pos:column="14">getFloatingRCFrom</name><parameter_list pos:line="239" pos:column="31">(<param><decl><type><name pos:line="239" pos:column="32">int</name></type> <name pos:line="239" pos:column="36">floatCont</name></decl></param>, <param><decl><type><name pos:line="239" pos:column="47">RECT</name> <type:modifier pos:line="239" pos:column="52">&amp;</type:modifier></type> <name pos:line="239" pos:column="54">rc</name></decl></param>)</parameter_list> <block pos:line="239" pos:column="58">{
		<for pos:line="240" pos:column="17">for (<init><decl><type><name pos:line="240" pos:column="22">size_t</name></type> <name pos:line="240" pos:column="29">i</name> <init pos:line="240" pos:column="31">= <expr><lit:literal type="number" pos:line="240" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="240" pos:column="37">i</name> <op:operator pos:line="240" pos:column="39">&lt;</op:operator> <call><name><name pos:line="240" pos:column="41">_flaotingWindowInfo</name><op:operator pos:line="240" pos:column="60">.</op:operator><name pos:line="240" pos:column="61">size</name></name><argument_list pos:line="240" pos:column="65">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="240" pos:column="70">i</name><op:operator pos:line="240" pos:column="71">++</op:operator></expr></incr>)
		<block pos:line="241" pos:column="17">{
			<if pos:line="242" pos:column="25">if <condition pos:line="242" pos:column="28">(<expr><name><name pos:line="242" pos:column="29">_flaotingWindowInfo</name><index pos:line="242" pos:column="48">[<expr><name pos:line="242" pos:column="49">i</name></expr>]</index></name><op:operator pos:line="242" pos:column="51">.</op:operator><name pos:line="242" pos:column="52">_cont</name> <op:operator pos:line="242" pos:column="58">==</op:operator> <name pos:line="242" pos:column="61">floatCont</name></expr>)</condition><then pos:line="242" pos:column="71">
      <block pos:line="243" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="244" pos:column="9">rc</name><op:operator pos:line="244" pos:column="11">.</op:operator><name pos:line="244" pos:column="12">left</name></name> <op:operator pos:line="244" pos:column="17">=</op:operator> <name><name pos:line="244" pos:column="19">_flaotingWindowInfo</name><index pos:line="244" pos:column="38">[<expr><name pos:line="244" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="244" pos:column="41">.</op:operator><name><name pos:line="244" pos:column="42">_pos</name><op:operator pos:line="244" pos:column="46">.</op:operator><name pos:line="244" pos:column="47">left</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="245" pos:column="9">rc</name><op:operator pos:line="245" pos:column="11">.</op:operator><name pos:line="245" pos:column="12">top</name></name> <op:operator pos:line="245" pos:column="16">=</op:operator> <name><name pos:line="245" pos:column="18">_flaotingWindowInfo</name><index pos:line="245" pos:column="37">[<expr><name pos:line="245" pos:column="38">i</name></expr>]</index></name><op:operator pos:line="245" pos:column="40">.</op:operator><name><name pos:line="245" pos:column="41">_pos</name><op:operator pos:line="245" pos:column="45">.</op:operator><name pos:line="245" pos:column="46">top</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="246" pos:column="9">rc</name><op:operator pos:line="246" pos:column="11">.</op:operator><name pos:line="246" pos:column="12">right</name></name> <op:operator pos:line="246" pos:column="18">=</op:operator> <name><name pos:line="246" pos:column="20">_flaotingWindowInfo</name><index pos:line="246" pos:column="39">[<expr><name pos:line="246" pos:column="40">i</name></expr>]</index></name><op:operator pos:line="246" pos:column="42">.</op:operator><name><name pos:line="246" pos:column="43">_pos</name><op:operator pos:line="246" pos:column="47">.</op:operator><name pos:line="246" pos:column="48">right</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="247" pos:column="9">rc</name><op:operator pos:line="247" pos:column="11">.</op:operator><name pos:line="247" pos:column="12">bottom</name></name> <op:operator pos:line="247" pos:column="19">=</op:operator> <name><name pos:line="247" pos:column="21">_flaotingWindowInfo</name><index pos:line="247" pos:column="40">[<expr><name pos:line="247" pos:column="41">i</name></expr>]</index></name><op:operator pos:line="247" pos:column="43">.</op:operator><name><name pos:line="247" pos:column="44">_pos</name><op:operator pos:line="247" pos:column="48">.</op:operator><name pos:line="247" pos:column="49">bottom</name></name></expr>;</expr_stmt>
				<return pos:line="248" pos:column="33">return <expr><lit:literal type="boolean" pos:line="248" pos:column="40">true</lit:literal></expr>;</return>
		}</block></then></if>
		}</block></for>
		<return pos:line="251" pos:column="17">return <expr><lit:literal type="boolean" pos:line="251" pos:column="24">false</lit:literal></expr>;</return>
	}</block></function>
</public>}</block>;</struct>

<decl_stmt><decl><type><specifier pos:line="255" pos:column="1">const</specifier> <name pos:line="255" pos:column="7">int</name></type> <name pos:line="255" pos:column="11">FONTSTYLE_NONE</name> <init pos:line="255" pos:column="26">= <expr><lit:literal type="number" pos:line="255" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="256" pos:column="1">const</specifier> <name pos:line="256" pos:column="7">int</name></type> <name pos:line="256" pos:column="11">FONTSTYLE_BOLD</name> <init pos:line="256" pos:column="26">= <expr><lit:literal type="number" pos:line="256" pos:column="28">1</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="257" pos:column="1">const</specifier> <name pos:line="257" pos:column="7">int</name></type> <name pos:line="257" pos:column="11">FONTSTYLE_ITALIC</name> <init pos:line="257" pos:column="28">= <expr><lit:literal type="number" pos:line="257" pos:column="30">2</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="258" pos:column="1">const</specifier> <name pos:line="258" pos:column="7">int</name></type> <name pos:line="258" pos:column="11">FONTSTYLE_UNDERLINE</name> <init pos:line="258" pos:column="31">= <expr><lit:literal type="number" pos:line="258" pos:column="33">4</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="260" pos:column="1">const</specifier> <name pos:line="260" pos:column="7">int</name></type> <name pos:line="260" pos:column="11">STYLE_NOT_USED</name> <init pos:line="260" pos:column="26">= <expr><op:operator pos:line="260" pos:column="28">-</op:operator><lit:literal type="number" pos:line="260" pos:column="29">1</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="262" pos:column="1">const</specifier> <name pos:line="262" pos:column="7">int</name></type> <name pos:line="262" pos:column="11">COLORSTYLE_FOREGROUND</name> <init pos:line="262" pos:column="33">= <expr><lit:literal type="number" pos:line="262" pos:column="35">0x01</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="263" pos:column="1">const</specifier> <name pos:line="263" pos:column="7">int</name></type> <name pos:line="263" pos:column="11">COLORSTYLE_BACKGROUND</name> <init pos:line="263" pos:column="33">= <expr><lit:literal type="number" pos:line="263" pos:column="35">0x02</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="264" pos:column="1">const</specifier> <name pos:line="264" pos:column="7">int</name></type> <name pos:line="264" pos:column="11">COLORSTYLE_ALL</name> <init pos:line="264" pos:column="26">= <expr><name pos:line="264" pos:column="28">COLORSTYLE_FOREGROUND</name><op:operator pos:line="264" pos:column="49">|</op:operator><name pos:line="264" pos:column="50">COLORSTYLE_BACKGROUND</name></expr></init></decl>;</decl_stmt>

<struct pos:line="266" pos:column="1">struct <name pos:line="266" pos:column="8">Style</name>
<block pos:line="267" pos:column="1">{<public type="default" pos:line="267" pos:column="2">
	<decl_stmt><decl><type><name pos:line="268" pos:column="9">int</name></type> <name pos:line="268" pos:column="13">_styleID</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="269" pos:column="5">const</specifier> <name pos:line="269" pos:column="11">TCHAR</name> <type:modifier pos:line="269" pos:column="17">*</type:modifier></type><name pos:line="269" pos:column="18">_styleDesc</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="271" pos:column="9">COLORREF</name></type> <name pos:line="271" pos:column="18">_fgColor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="272" pos:column="9">COLORREF</name></type> <name pos:line="272" pos:column="18">_bgColor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="273" pos:column="9">int</name></type> <name pos:line="273" pos:column="13">_colorStyle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="274" pos:column="9">const</specifier> <name pos:line="274" pos:column="15">TCHAR</name> <type:modifier pos:line="274" pos:column="21">*</type:modifier></type><name pos:line="274" pos:column="22">_fontName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="275" pos:column="9">int</name></type> <name pos:line="275" pos:column="13">_fontStyle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="276" pos:column="9">int</name></type> <name pos:line="276" pos:column="13">_fontSize</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="277" pos:column="9">int</name></type> <name pos:line="277" pos:column="13">_nesting</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="279" pos:column="9">int</name></type> <name pos:line="279" pos:column="13">_keywordClass</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="280" pos:column="9">generic_string</name> <type:modifier pos:line="280" pos:column="24">*</type:modifier></type><name pos:line="280" pos:column="25">_keywords</name></decl>;</decl_stmt>

	<constructor><name pos:line="282" pos:column="9">Style</name><parameter_list pos:line="282" pos:column="14">()</parameter_list><member_list pos:line="282" pos:column="16">:<call><name pos:line="282" pos:column="17">_styleID</name><argument_list pos:line="282" pos:column="25">(<argument><expr><op:operator pos:line="282" pos:column="26">-</op:operator><lit:literal type="number" pos:line="282" pos:column="27">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="282" pos:column="29">,</op:operator> <call><name pos:line="282" pos:column="31">_styleDesc</name><argument_list pos:line="282" pos:column="41">(<argument><expr><name pos:line="282" pos:column="42">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="282" pos:column="47">,</op:operator> <call><name pos:line="282" pos:column="49">_fgColor</name><argument_list pos:line="282" pos:column="57">(<argument><expr><call><name pos:line="282" pos:column="58">COLORREF</name><argument_list pos:line="282" pos:column="66">(<argument><expr><name pos:line="282" pos:column="67">STYLE_NOT_USED</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="282" pos:column="83">,</op:operator> <call><name pos:line="282" pos:column="85">_bgColor</name><argument_list pos:line="282" pos:column="93">(<argument><expr><call><name pos:line="282" pos:column="94">COLORREF</name><argument_list pos:line="282" pos:column="102">(<argument><expr><name pos:line="282" pos:column="103">STYLE_NOT_USED</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="282" pos:column="119">,</op:operator> <call><name pos:line="282" pos:column="121">_colorStyle</name><argument_list pos:line="282" pos:column="132">(<argument><expr><name pos:line="282" pos:column="133">COLORSTYLE_ALL</name></expr></argument>)</argument_list></call><op:operator pos:line="282" pos:column="148">,</op:operator>\
		<call><name pos:line="283" pos:column="17">_fontName</name><argument_list pos:line="283" pos:column="26">(<argument><expr><name pos:line="283" pos:column="27">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="283" pos:column="32">,</op:operator> <call><name pos:line="283" pos:column="34">_fontStyle</name><argument_list pos:line="283" pos:column="44">(<argument><expr><name pos:line="283" pos:column="45">STYLE_NOT_USED</name></expr></argument>)</argument_list></call><op:operator pos:line="283" pos:column="60">,</op:operator> <call><name pos:line="283" pos:column="62">_fontSize</name><argument_list pos:line="283" pos:column="71">(<argument><expr><name pos:line="283" pos:column="72">STYLE_NOT_USED</name></expr></argument>)</argument_list></call><op:operator pos:line="283" pos:column="87">,</op:operator> <call><name pos:line="283" pos:column="89">_keywordClass</name><argument_list pos:line="283" pos:column="102">(<argument><expr><name pos:line="283" pos:column="103">STYLE_NOT_USED</name></expr></argument>)</argument_list></call><op:operator pos:line="283" pos:column="118">,</op:operator> <call><name pos:line="283" pos:column="120">_keywords</name><argument_list pos:line="283" pos:column="129">(<argument><expr><name pos:line="283" pos:column="130">NULL</name></expr></argument>)</argument_list></call></member_list><block pos:line="283" pos:column="135">{}</block></constructor><empty_stmt pos:line="283" pos:column="137">;</empty_stmt>

	<destructor><name pos:line="285" pos:column="9">~<name pos:line="285" pos:column="10">Style</name></name><parameter_list pos:line="285" pos:column="15">()</parameter_list><block pos:line="285" pos:column="17">{
		<if pos:line="286" pos:column="17">if <condition pos:line="286" pos:column="20">(<expr><name pos:line="286" pos:column="21">_keywords</name></expr>)</condition><then pos:line="286" pos:column="31"> 
			<expr_stmt><expr><op:operator pos:line="287" pos:column="25">delete</op:operator> <name pos:line="287" pos:column="32">_keywords</name></expr>;</expr_stmt></then></if>
	}</block></destructor><empty_stmt pos:line="288" pos:column="10">;</empty_stmt>

	<constructor><name pos:line="290" pos:column="9">Style</name><parameter_list pos:line="290" pos:column="14">(<param><decl><type><specifier pos:line="290" pos:column="15">const</specifier> <name pos:line="290" pos:column="21">Style</name> <type:modifier pos:line="290" pos:column="27">&amp;</type:modifier></type> <name pos:line="290" pos:column="29">style</name></decl></param>)</parameter_list> 
	<block pos:line="291" pos:column="9">{
		<expr_stmt><expr><name pos:line="292" pos:column="17">_styleID</name> <op:operator pos:line="292" pos:column="26">=</op:operator> <name><name pos:line="292" pos:column="28">style</name><op:operator pos:line="292" pos:column="33">.</op:operator><name pos:line="292" pos:column="34">_styleID</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="293" pos:column="17">_styleDesc</name> <op:operator pos:line="293" pos:column="28">=</op:operator> <name><name pos:line="293" pos:column="30">style</name><op:operator pos:line="293" pos:column="35">.</op:operator><name pos:line="293" pos:column="36">_styleDesc</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="294" pos:column="17">_fgColor</name> <op:operator pos:line="294" pos:column="26">=</op:operator> <name><name pos:line="294" pos:column="28">style</name><op:operator pos:line="294" pos:column="33">.</op:operator><name pos:line="294" pos:column="34">_fgColor</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="295" pos:column="17">_bgColor</name> <op:operator pos:line="295" pos:column="26">=</op:operator> <name><name pos:line="295" pos:column="28">style</name><op:operator pos:line="295" pos:column="33">.</op:operator><name pos:line="295" pos:column="34">_bgColor</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="296" pos:column="17">_colorStyle</name> <op:operator pos:line="296" pos:column="29">=</op:operator> <name><name pos:line="296" pos:column="31">style</name><op:operator pos:line="296" pos:column="36">.</op:operator><name pos:line="296" pos:column="37">_colorStyle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="297" pos:column="17">_fontName</name> <op:operator pos:line="297" pos:column="27">=</op:operator> <name><name pos:line="297" pos:column="29">style</name><op:operator pos:line="297" pos:column="34">.</op:operator><name pos:line="297" pos:column="35">_fontName</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="298" pos:column="17">_fontSize</name> <op:operator pos:line="298" pos:column="27">=</op:operator> <name><name pos:line="298" pos:column="29">style</name><op:operator pos:line="298" pos:column="34">.</op:operator><name pos:line="298" pos:column="35">_fontSize</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="299" pos:column="17">_fontStyle</name> <op:operator pos:line="299" pos:column="28">=</op:operator> <name><name pos:line="299" pos:column="30">style</name><op:operator pos:line="299" pos:column="35">.</op:operator><name pos:line="299" pos:column="36">_fontStyle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="300" pos:column="17">_keywordClass</name> <op:operator pos:line="300" pos:column="31">=</op:operator> <name><name pos:line="300" pos:column="33">style</name><op:operator pos:line="300" pos:column="38">.</op:operator><name pos:line="300" pos:column="39">_keywordClass</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="301" pos:column="17">_nesting</name> <op:operator pos:line="301" pos:column="26">=</op:operator> <name><name pos:line="301" pos:column="28">style</name><op:operator pos:line="301" pos:column="33">.</op:operator><name pos:line="301" pos:column="34">_nesting</name></name></expr>;</expr_stmt>
		<if pos:line="302" pos:column="17">if <condition pos:line="302" pos:column="20">(<expr><name><name pos:line="302" pos:column="21">style</name><op:operator pos:line="302" pos:column="26">.</op:operator><name pos:line="302" pos:column="27">_keywords</name></name></expr>)</condition><then pos:line="302" pos:column="37">
			<expr_stmt><expr><name pos:line="303" pos:column="25">_keywords</name> <op:operator pos:line="303" pos:column="35">=</op:operator> <op:operator pos:line="303" pos:column="37">new</op:operator> <call><name pos:line="303" pos:column="41">generic_string</name><argument_list pos:line="303" pos:column="55">(<argument><expr><op:operator pos:line="303" pos:column="56">*</op:operator><op:operator pos:line="303" pos:column="57">(</op:operator><name><name pos:line="303" pos:column="58">style</name><op:operator pos:line="303" pos:column="63">.</op:operator><name pos:line="303" pos:column="64">_keywords</name></name><op:operator pos:line="303" pos:column="73">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="304" pos:column="17">else
			<expr_stmt><expr><name pos:line="305" pos:column="25">_keywords</name> <op:operator pos:line="305" pos:column="35">=</op:operator> <name pos:line="305" pos:column="37">NULL</name></expr>;</expr_stmt></else></if>
	}</block></constructor><empty_stmt pos:line="306" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="308" pos:column="9">Style</name> <type:modifier pos:line="308" pos:column="15">&amp;</type:modifier></type> <name pos:line="308" pos:column="17">operator=</name><parameter_list pos:line="308" pos:column="26">(<param><decl><type><specifier pos:line="308" pos:column="27">const</specifier> <name pos:line="308" pos:column="33">Style</name> <type:modifier pos:line="308" pos:column="39">&amp;</type:modifier></type> <name pos:line="308" pos:column="41">style</name></decl></param>)</parameter_list> <block pos:line="308" pos:column="48">{
		<if pos:line="309" pos:column="17">if <condition pos:line="309" pos:column="20">(<expr><name pos:line="309" pos:column="21">this</name> <op:operator pos:line="309" pos:column="26">!=</op:operator> <op:operator pos:line="309" pos:column="29">&amp;</op:operator><name pos:line="309" pos:column="30">style</name></expr>)</condition><then pos:line="309" pos:column="36">
		<block pos:line="310" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="311" pos:column="25">this</name><op:operator pos:line="311" pos:column="29">-&gt;</op:operator><name pos:line="311" pos:column="31">_styleID</name></name> <op:operator pos:line="311" pos:column="40">=</op:operator> <name><name pos:line="311" pos:column="42">style</name><op:operator pos:line="311" pos:column="47">.</op:operator><name pos:line="311" pos:column="48">_styleID</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="312" pos:column="25">this</name><op:operator pos:line="312" pos:column="29">-&gt;</op:operator><name pos:line="312" pos:column="31">_styleDesc</name></name> <op:operator pos:line="312" pos:column="42">=</op:operator> <name><name pos:line="312" pos:column="44">style</name><op:operator pos:line="312" pos:column="49">.</op:operator><name pos:line="312" pos:column="50">_styleDesc</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="313" pos:column="25">this</name><op:operator pos:line="313" pos:column="29">-&gt;</op:operator><name pos:line="313" pos:column="31">_fgColor</name></name> <op:operator pos:line="313" pos:column="40">=</op:operator> <name><name pos:line="313" pos:column="42">style</name><op:operator pos:line="313" pos:column="47">.</op:operator><name pos:line="313" pos:column="48">_fgColor</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="314" pos:column="25">this</name><op:operator pos:line="314" pos:column="29">-&gt;</op:operator><name pos:line="314" pos:column="31">_bgColor</name></name> <op:operator pos:line="314" pos:column="40">=</op:operator> <name><name pos:line="314" pos:column="42">style</name><op:operator pos:line="314" pos:column="47">.</op:operator><name pos:line="314" pos:column="48">_bgColor</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="315" pos:column="25">this</name><op:operator pos:line="315" pos:column="29">-&gt;</op:operator><name pos:line="315" pos:column="31">_colorStyle</name></name> <op:operator pos:line="315" pos:column="43">=</op:operator> <name><name pos:line="315" pos:column="45">style</name><op:operator pos:line="315" pos:column="50">.</op:operator><name pos:line="315" pos:column="51">_colorStyle</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="316" pos:column="25">this</name><op:operator pos:line="316" pos:column="29">-&gt;</op:operator><name pos:line="316" pos:column="31">_fontName</name></name> <op:operator pos:line="316" pos:column="41">=</op:operator> <name><name pos:line="316" pos:column="43">style</name><op:operator pos:line="316" pos:column="48">.</op:operator><name pos:line="316" pos:column="49">_fontName</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="317" pos:column="25">this</name><op:operator pos:line="317" pos:column="29">-&gt;</op:operator><name pos:line="317" pos:column="31">_fontSize</name></name> <op:operator pos:line="317" pos:column="41">=</op:operator> <name><name pos:line="317" pos:column="43">style</name><op:operator pos:line="317" pos:column="48">.</op:operator><name pos:line="317" pos:column="49">_fontSize</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="318" pos:column="25">this</name><op:operator pos:line="318" pos:column="29">-&gt;</op:operator><name pos:line="318" pos:column="31">_fontStyle</name></name> <op:operator pos:line="318" pos:column="42">=</op:operator> <name><name pos:line="318" pos:column="44">style</name><op:operator pos:line="318" pos:column="49">.</op:operator><name pos:line="318" pos:column="50">_fontStyle</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="319" pos:column="25">this</name><op:operator pos:line="319" pos:column="29">-&gt;</op:operator><name pos:line="319" pos:column="31">_keywordClass</name></name> <op:operator pos:line="319" pos:column="45">=</op:operator> <name><name pos:line="319" pos:column="47">style</name><op:operator pos:line="319" pos:column="52">.</op:operator><name pos:line="319" pos:column="53">_keywordClass</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="320" pos:column="25">this</name><op:operator pos:line="320" pos:column="29">-&gt;</op:operator><name pos:line="320" pos:column="31">_nesting</name></name> <op:operator pos:line="320" pos:column="40">=</op:operator> <name><name pos:line="320" pos:column="42">style</name><op:operator pos:line="320" pos:column="47">.</op:operator><name pos:line="320" pos:column="48">_nesting</name></name></expr>;</expr_stmt>

			<if pos:line="322" pos:column="25">if <condition pos:line="322" pos:column="28">(<expr><op:operator pos:line="322" pos:column="29">!</op:operator><op:operator pos:line="322" pos:column="30">(</op:operator><name><name pos:line="322" pos:column="31">this</name><op:operator pos:line="322" pos:column="35">-&gt;</op:operator><name pos:line="322" pos:column="37">_keywords</name></name><op:operator pos:line="322" pos:column="46">)</op:operator> <op:operator pos:line="322" pos:column="48">&amp;&amp;</op:operator> <name><name pos:line="322" pos:column="51">style</name><op:operator pos:line="322" pos:column="56">.</op:operator><name pos:line="322" pos:column="57">_keywords</name></name></expr>)</condition><then pos:line="322" pos:column="67">
				<expr_stmt><expr><name><name pos:line="323" pos:column="33">this</name><op:operator pos:line="323" pos:column="37">-&gt;</op:operator><name pos:line="323" pos:column="39">_keywords</name></name> <op:operator pos:line="323" pos:column="49">=</op:operator> <op:operator pos:line="323" pos:column="51">new</op:operator> <call><name pos:line="323" pos:column="55">generic_string</name><argument_list pos:line="323" pos:column="69">(<argument><expr><op:operator pos:line="323" pos:column="70">*</op:operator><op:operator pos:line="323" pos:column="71">(</op:operator><name><name pos:line="323" pos:column="72">style</name><op:operator pos:line="323" pos:column="77">.</op:operator><name pos:line="323" pos:column="78">_keywords</name></name><op:operator pos:line="323" pos:column="87">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="324" pos:column="25">else <if pos:line="324" pos:column="30">if <condition pos:line="324" pos:column="33">(<expr><name><name pos:line="324" pos:column="34">this</name><op:operator pos:line="324" pos:column="38">-&gt;</op:operator><name pos:line="324" pos:column="40">_keywords</name></name> <op:operator pos:line="324" pos:column="50">&amp;&amp;</op:operator> <name><name pos:line="324" pos:column="53">style</name><op:operator pos:line="324" pos:column="58">.</op:operator><name pos:line="324" pos:column="59">_keywords</name></name></expr>)</condition><then pos:line="324" pos:column="69">
				<expr_stmt><expr><call><name><name pos:line="325" pos:column="33">this</name><op:operator pos:line="325" pos:column="37">-&gt;</op:operator><name pos:line="325" pos:column="39">_keywords</name><op:operator pos:line="325" pos:column="48">-&gt;</op:operator><name pos:line="325" pos:column="50">assign</name></name><argument_list pos:line="325" pos:column="56">(<argument><expr><op:operator pos:line="325" pos:column="57">*</op:operator><op:operator pos:line="325" pos:column="58">(</op:operator><name><name pos:line="325" pos:column="59">style</name><op:operator pos:line="325" pos:column="64">.</op:operator><name pos:line="325" pos:column="65">_keywords</name></name><op:operator pos:line="325" pos:column="74">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="326" pos:column="25">else <if pos:line="326" pos:column="30">if <condition pos:line="326" pos:column="33">(<expr><name><name pos:line="326" pos:column="34">this</name><op:operator pos:line="326" pos:column="38">-&gt;</op:operator><name pos:line="326" pos:column="40">_keywords</name></name> <op:operator pos:line="326" pos:column="50">&amp;&amp;</op:operator> <op:operator pos:line="326" pos:column="53">!</op:operator><op:operator pos:line="326" pos:column="54">(</op:operator><name><name pos:line="326" pos:column="55">style</name><op:operator pos:line="326" pos:column="60">.</op:operator><name pos:line="326" pos:column="61">_keywords</name></name><op:operator pos:line="326" pos:column="70">)</op:operator></expr>)</condition><then pos:line="326" pos:column="72">
			<block pos:line="327" pos:column="25">{
				<expr_stmt><expr><op:operator pos:line="328" pos:column="33">delete</op:operator> <op:operator pos:line="328" pos:column="40">(</op:operator><name><name pos:line="328" pos:column="41">this</name><op:operator pos:line="328" pos:column="45">-&gt;</op:operator><name pos:line="328" pos:column="47">_keywords</name></name><op:operator pos:line="328" pos:column="56">)</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="329" pos:column="33">this</name><op:operator pos:line="329" pos:column="37">-&gt;</op:operator><name pos:line="329" pos:column="39">_keywords</name></name> <op:operator pos:line="329" pos:column="49">=</op:operator> <name pos:line="329" pos:column="51">NULL</name></expr>;</expr_stmt>
			}</block></then></if></else></if></else></if>
		}</block></then></if>
		<return pos:line="332" pos:column="17">return <expr><op:operator pos:line="332" pos:column="24">*</op:operator><name pos:line="332" pos:column="25">this</name></expr>;</return>
	}</block></function><empty_stmt pos:line="333" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="335" pos:column="9">void</name></type> <name pos:line="335" pos:column="14">setKeywords</name><parameter_list pos:line="335" pos:column="25">(<param><decl><type><specifier pos:line="335" pos:column="26">const</specifier> <name pos:line="335" pos:column="32">TCHAR</name> <type:modifier pos:line="335" pos:column="38">*</type:modifier></type><name pos:line="335" pos:column="39">str</name></decl></param>)</parameter_list> <block pos:line="335" pos:column="44">{
		<if pos:line="336" pos:column="17">if <condition pos:line="336" pos:column="20">(<expr><op:operator pos:line="336" pos:column="21">!</op:operator><name pos:line="336" pos:column="22">_keywords</name></expr>)</condition><then pos:line="336" pos:column="32">
			<expr_stmt><expr><name pos:line="337" pos:column="25">_keywords</name> <op:operator pos:line="337" pos:column="35">=</op:operator> <op:operator pos:line="337" pos:column="37">new</op:operator> <call><name pos:line="337" pos:column="41">generic_string</name><argument_list pos:line="337" pos:column="55">(<argument><expr><name pos:line="337" pos:column="56">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="338" pos:column="17">else
			<expr_stmt><expr><op:operator pos:line="339" pos:column="25">*</op:operator><name pos:line="339" pos:column="26">_keywords</name> <op:operator pos:line="339" pos:column="36">=</op:operator> <name pos:line="339" pos:column="38">str</name></expr>;</expr_stmt></else></if>
	}</block></function><empty_stmt pos:line="340" pos:column="10">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="343" pos:column="1">struct <name pos:line="343" pos:column="8">GlobalOverride</name>
<block pos:line="344" pos:column="1">{<public type="default" pos:line="344" pos:column="2">
	<function><type><name pos:line="345" pos:column="9">bool</name></type> <name pos:line="345" pos:column="14">isEnable</name><parameter_list pos:line="345" pos:column="22">()</parameter_list> <specifier pos:line="345" pos:column="25">const</specifier> <block pos:line="345" pos:column="31">{<return pos:line="345" pos:column="32">return <expr><op:operator pos:line="345" pos:column="39">(</op:operator><name pos:line="345" pos:column="40">enableFg</name> <op:operator pos:line="345" pos:column="49">||</op:operator> <name pos:line="345" pos:column="52">enableBg</name> <op:operator pos:line="345" pos:column="61">||</op:operator> <name pos:line="345" pos:column="64">enableFont</name> <op:operator pos:line="345" pos:column="75">||</op:operator> <name pos:line="345" pos:column="78">enableFontSize</name> <op:operator pos:line="345" pos:column="93">||</op:operator> <name pos:line="345" pos:column="96">enableBold</name> <op:operator pos:line="345" pos:column="107">||</op:operator> <name pos:line="345" pos:column="110">enableItalic</name> <op:operator pos:line="345" pos:column="123">||</op:operator> <name pos:line="345" pos:column="126">enableUnderLine</name><op:operator pos:line="345" pos:column="141">)</op:operator></expr>;</return>}</block></function><empty_stmt pos:line="345" pos:column="144">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="346" pos:column="9">bool</name></type> <name pos:line="346" pos:column="14">enableFg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="347" pos:column="9">bool</name></type> <name pos:line="347" pos:column="14">enableBg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="348" pos:column="9">bool</name></type> <name pos:line="348" pos:column="14">enableFont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="349" pos:column="9">bool</name></type> <name pos:line="349" pos:column="14">enableFontSize</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="350" pos:column="9">bool</name></type> <name pos:line="350" pos:column="14">enableBold</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="351" pos:column="9">bool</name></type> <name pos:line="351" pos:column="14">enableItalic</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="352" pos:column="9">bool</name></type> <name pos:line="352" pos:column="14">enableUnderLine</name></decl>;</decl_stmt>
	<constructor><name pos:line="353" pos:column="9">GlobalOverride</name><parameter_list pos:line="353" pos:column="23">()</parameter_list><member_list pos:line="353" pos:column="25">:<call><name pos:line="353" pos:column="26">enableFg</name><argument_list pos:line="353" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="41">,</op:operator> <call><name pos:line="353" pos:column="43">enableBg</name><argument_list pos:line="353" pos:column="51">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="58">,</op:operator> <call><name pos:line="353" pos:column="60">enableFont</name><argument_list pos:line="353" pos:column="70">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="71">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="77">,</op:operator> <call><name pos:line="353" pos:column="79">enableFontSize</name><argument_list pos:line="353" pos:column="93">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="94">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="100">,</op:operator> <call><name pos:line="353" pos:column="102">enableBold</name><argument_list pos:line="353" pos:column="112">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="113">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="119">,</op:operator> <call><name pos:line="353" pos:column="121">enableItalic</name><argument_list pos:line="353" pos:column="133">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="134">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="353" pos:column="140">,</op:operator> <call><name pos:line="353" pos:column="142">enableUnderLine</name><argument_list pos:line="353" pos:column="157">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="158">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="353" pos:column="165">{}</block></constructor><empty_stmt pos:line="353" pos:column="167">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="356" pos:column="1">struct <name pos:line="356" pos:column="8">StyleArray</name>
<block pos:line="357" pos:column="1">{<public type="default" pos:line="357" pos:column="2">
</public><public pos:line="358" pos:column="1">public:
    <constructor><name pos:line="359" pos:column="5">StyleArray</name><parameter_list pos:line="359" pos:column="15">()</parameter_list> <member_list pos:line="359" pos:column="18">: <call><name pos:line="359" pos:column="20">_nbStyler</name><argument_list pos:line="359" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="359" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="359" pos:column="32">{}</block></constructor><empty_stmt pos:line="359" pos:column="34">;</empty_stmt>

    <function><type><name pos:line="361" pos:column="5">StyleArray</name> <type:modifier pos:line="361" pos:column="16">&amp;</type:modifier></type> <name pos:line="361" pos:column="18">operator=</name><parameter_list pos:line="361" pos:column="27">(<param><decl><type><specifier pos:line="361" pos:column="28">const</specifier> <name pos:line="361" pos:column="34">StyleArray</name> <type:modifier pos:line="361" pos:column="45">&amp;</type:modifier></type> <name pos:line="361" pos:column="47">sa</name></decl></param>)</parameter_list>
    <block pos:line="362" pos:column="5">{
        <if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><name pos:line="363" pos:column="13">this</name> <op:operator pos:line="363" pos:column="18">!=</op:operator> <op:operator pos:line="363" pos:column="21">&amp;</op:operator><name pos:line="363" pos:column="22">sa</name></expr>)</condition><then pos:line="363" pos:column="25">
        <block pos:line="364" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="365" pos:column="13">this</name><op:operator pos:line="365" pos:column="17">-&gt;</op:operator><name pos:line="365" pos:column="19">_nbStyler</name></name> <op:operator pos:line="365" pos:column="29">=</op:operator> <name><name pos:line="365" pos:column="31">sa</name><op:operator pos:line="365" pos:column="33">.</op:operator><name pos:line="365" pos:column="34">_nbStyler</name></name></expr>;</expr_stmt>
            <for pos:line="366" pos:column="13">for (<init><decl><type><name pos:line="366" pos:column="18">int</name></type> <name pos:line="366" pos:column="22">i</name> <init pos:line="366" pos:column="24">= <expr><lit:literal type="number" pos:line="366" pos:column="26">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="366" pos:column="30">i</name> <op:operator pos:line="366" pos:column="32">&lt;</op:operator> <name pos:line="366" pos:column="34">_nbStyler</name></expr> ;</condition> <incr><expr><name pos:line="366" pos:column="46">i</name><op:operator pos:line="366" pos:column="47">++</op:operator></expr></incr>)
            <block pos:line="367" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="368" pos:column="17">this</name><op:operator pos:line="368" pos:column="21">-&gt;</op:operator><name pos:line="368" pos:column="23">_styleArray</name><index pos:line="368" pos:column="34">[<expr><name pos:line="368" pos:column="35">i</name></expr>]</index></name> <op:operator pos:line="368" pos:column="38">=</op:operator> <name><name pos:line="368" pos:column="40">sa</name><op:operator pos:line="368" pos:column="42">.</op:operator><name pos:line="368" pos:column="43">_styleArray</name><index pos:line="368" pos:column="54">[<expr><name pos:line="368" pos:column="55">i</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></for>
        }</block></then></if>
        <return pos:line="371" pos:column="9">return <expr><op:operator pos:line="371" pos:column="16">*</op:operator><name pos:line="371" pos:column="17">this</name></expr>;</return>
    }</block></function>

    <function><type><name pos:line="374" pos:column="5">int</name></type> <name pos:line="374" pos:column="9">getNbStyler</name><parameter_list pos:line="374" pos:column="20">()</parameter_list> <specifier pos:line="374" pos:column="23">const</specifier> <block pos:line="374" pos:column="29">{<return pos:line="374" pos:column="30">return <expr><name pos:line="374" pos:column="37">_nbStyler</name></expr>;</return>}</block></function><empty_stmt pos:line="374" pos:column="48">;</empty_stmt>
	<function><type><name pos:line="375" pos:column="9">void</name></type> <name pos:line="375" pos:column="14">setNbStyler</name><parameter_list pos:line="375" pos:column="25">(<param><decl><type><name pos:line="375" pos:column="26">int</name></type> <name pos:line="375" pos:column="30">nb</name></decl></param>)</parameter_list> <block pos:line="375" pos:column="34">{<expr_stmt><expr><name pos:line="375" pos:column="35">_nbStyler</name> <op:operator pos:line="375" pos:column="45">=</op:operator> <name pos:line="375" pos:column="47">nb</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="375" pos:column="51">;</empty_stmt>

    <function><type><name pos:line="377" pos:column="5">Style</name> <type:modifier pos:line="377" pos:column="11">&amp;</type:modifier></type> <name pos:line="377" pos:column="13">getStyler</name><parameter_list pos:line="377" pos:column="22">(<param><decl><type><name pos:line="377" pos:column="23">int</name></type> <name pos:line="377" pos:column="27">index</name></decl></param>)</parameter_list> <block pos:line="377" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="378" pos:column="17">assert</name><argument_list pos:line="378" pos:column="23">(<argument><expr><name pos:line="378" pos:column="24">index</name> <op:operator pos:line="378" pos:column="30">!=</op:operator> <op:operator pos:line="378" pos:column="33">-</op:operator><lit:literal type="number" pos:line="378" pos:column="34">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="379" pos:column="17">return <expr><name><name pos:line="379" pos:column="24">_styleArray</name><index pos:line="379" pos:column="35">[<expr><name pos:line="379" pos:column="36">index</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="380" pos:column="10">;</empty_stmt>

    <function><type><name pos:line="382" pos:column="5">bool</name></type> <name pos:line="382" pos:column="10">hasEnoughSpace</name><parameter_list pos:line="382" pos:column="24">()</parameter_list> <block pos:line="382" pos:column="27">{<return pos:line="382" pos:column="28">return <expr><op:operator pos:line="382" pos:column="35">(</op:operator><name pos:line="382" pos:column="36">_nbStyler</name> <op:operator pos:line="382" pos:column="46">&lt;</op:operator> <name pos:line="382" pos:column="48">SCE_USER_STYLE_TOTAL_STYLES</name><op:operator pos:line="382" pos:column="75">)</op:operator></expr>;</return>}</block></function><empty_stmt pos:line="382" pos:column="78">;</empty_stmt>
    <function_decl><type><name pos:line="383" pos:column="5">void</name></type> <name pos:line="383" pos:column="10">addStyler</name><parameter_list pos:line="383" pos:column="19">(<param><decl><type><name pos:line="383" pos:column="20">int</name></type> <name pos:line="383" pos:column="24">styleID</name></decl></param>, <param><decl><type><name pos:line="383" pos:column="33">TiXmlNode</name> <type:modifier pos:line="383" pos:column="43">*</type:modifier></type><name pos:line="383" pos:column="44">styleNode</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="385" pos:column="9">void</name></type> <name pos:line="385" pos:column="14">addStyler</name><parameter_list pos:line="385" pos:column="23">(<param><decl><type><name pos:line="385" pos:column="24">int</name></type> <name pos:line="385" pos:column="28">styleID</name></decl></param>, <param><decl><type><specifier pos:line="385" pos:column="37">const</specifier> <name pos:line="385" pos:column="43">TCHAR</name> <type:modifier pos:line="385" pos:column="49">*</type:modifier></type><name pos:line="385" pos:column="50">styleName</name></decl></param>)</parameter_list> <block pos:line="385" pos:column="61">{
		<comment type="line" pos:line="386" pos:column="17">//ZeroMemory(&amp;_styleArray[_nbStyler], sizeof(Style));;</comment>
		<expr_stmt><expr><name><name pos:line="387" pos:column="17">_styleArray</name><index pos:line="387" pos:column="28">[<expr><name pos:line="387" pos:column="29">styleID</name></expr>]</index></name><op:operator pos:line="387" pos:column="37">.</op:operator><name pos:line="387" pos:column="38">_styleID</name> <op:operator pos:line="387" pos:column="47">=</op:operator> <name pos:line="387" pos:column="49">styleID</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="388" pos:column="17">_styleArray</name><index pos:line="388" pos:column="28">[<expr><name pos:line="388" pos:column="29">styleID</name></expr>]</index></name><op:operator pos:line="388" pos:column="37">.</op:operator><name pos:line="388" pos:column="38">_styleDesc</name> <op:operator pos:line="388" pos:column="49">=</op:operator> <name pos:line="388" pos:column="51">styleName</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="389" pos:column="17">_styleArray</name><index pos:line="389" pos:column="28">[<expr><name pos:line="389" pos:column="29">styleID</name></expr>]</index></name><op:operator pos:line="389" pos:column="37">.</op:operator><name pos:line="389" pos:column="38">_fgColor</name> <op:operator pos:line="389" pos:column="47">=</op:operator> <name pos:line="389" pos:column="49">black</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="390" pos:column="17">_styleArray</name><index pos:line="390" pos:column="28">[<expr><name pos:line="390" pos:column="29">styleID</name></expr>]</index></name><op:operator pos:line="390" pos:column="37">.</op:operator><name pos:line="390" pos:column="38">_bgColor</name> <op:operator pos:line="390" pos:column="47">=</op:operator> <name pos:line="390" pos:column="49">white</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="391" pos:column="17">_nbStyler</name><op:operator pos:line="391" pos:column="26">++</op:operator></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="392" pos:column="10">;</empty_stmt>

    <function><type><name pos:line="394" pos:column="5">int</name></type> <name pos:line="394" pos:column="9">getStylerIndexByID</name><parameter_list pos:line="394" pos:column="27">(<param><decl><type><name pos:line="394" pos:column="28">int</name></type> <name pos:line="394" pos:column="32">id</name></decl></param>)</parameter_list> <block pos:line="394" pos:column="36">{
        <for pos:line="395" pos:column="9">for (<init><decl><type><name pos:line="395" pos:column="14">int</name></type> <name pos:line="395" pos:column="18">i</name> <init pos:line="395" pos:column="20">= <expr><lit:literal type="number" pos:line="395" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="395" pos:column="26">i</name> <op:operator pos:line="395" pos:column="28">&lt;</op:operator> <name pos:line="395" pos:column="30">_nbStyler</name></expr> ;</condition> <incr><expr><name pos:line="395" pos:column="42">i</name><op:operator pos:line="395" pos:column="43">++</op:operator></expr></incr>)
            <if pos:line="396" pos:column="13">if <condition pos:line="396" pos:column="16">(<expr><name><name pos:line="396" pos:column="17">_styleArray</name><index pos:line="396" pos:column="28">[<expr><name pos:line="396" pos:column="29">i</name></expr>]</index></name><op:operator pos:line="396" pos:column="31">.</op:operator><name pos:line="396" pos:column="32">_styleID</name> <op:operator pos:line="396" pos:column="41">==</op:operator> <name pos:line="396" pos:column="44">id</name></expr>)</condition><then pos:line="396" pos:column="47">
                <return pos:line="397" pos:column="17">return <expr><name pos:line="397" pos:column="24">i</name></expr>;</return></then></if></for>
        <return pos:line="398" pos:column="9">return <expr><op:operator pos:line="398" pos:column="16">-</op:operator><lit:literal type="number" pos:line="398" pos:column="17">1</lit:literal></expr>;</return>
    }</block></function><empty_stmt pos:line="399" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="401" pos:column="5">int</name></type> <name pos:line="401" pos:column="9">getStylerIndexByName</name><parameter_list pos:line="401" pos:column="29">(<param><decl><type><specifier pos:line="401" pos:column="30">const</specifier> <name pos:line="401" pos:column="36">TCHAR</name> <type:modifier pos:line="401" pos:column="42">*</type:modifier></type><name pos:line="401" pos:column="43">name</name></decl></param>)</parameter_list> <specifier pos:line="401" pos:column="49">const</specifier> <block pos:line="401" pos:column="55">{
		<if pos:line="402" pos:column="17">if <condition pos:line="402" pos:column="20">(<expr><op:operator pos:line="402" pos:column="21">!</op:operator><name pos:line="402" pos:column="22">name</name></expr>)</condition><then pos:line="402" pos:column="27">
			<return pos:line="403" pos:column="25">return <expr><op:operator pos:line="403" pos:column="32">-</op:operator><lit:literal type="number" pos:line="403" pos:column="33">1</lit:literal></expr>;</return></then></if>
        <for pos:line="404" pos:column="9">for (<init><decl><type><name pos:line="404" pos:column="14">int</name></type> <name pos:line="404" pos:column="18">i</name> <init pos:line="404" pos:column="20">= <expr><lit:literal type="number" pos:line="404" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="404" pos:column="26">i</name> <op:operator pos:line="404" pos:column="28">&lt;</op:operator> <name pos:line="404" pos:column="30">_nbStyler</name></expr> ;</condition> <incr><expr><name pos:line="404" pos:column="42">i</name><op:operator pos:line="404" pos:column="43">++</op:operator></expr></incr>)
			<if pos:line="405" pos:column="25">if <condition pos:line="405" pos:column="28">(<expr><op:operator pos:line="405" pos:column="29">!</op:operator><call><name pos:line="405" pos:column="30">lstrcmp</name><argument_list pos:line="405" pos:column="37">(<argument><expr><name><name pos:line="405" pos:column="38">_styleArray</name><index pos:line="405" pos:column="49">[<expr><name pos:line="405" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="405" pos:column="52">.</op:operator><name pos:line="405" pos:column="53">_styleDesc</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="65">name</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="405" pos:column="71">
                <return pos:line="406" pos:column="17">return <expr><name pos:line="406" pos:column="24">i</name></expr>;</return></then></if></for>
        <return pos:line="407" pos:column="9">return <expr><op:operator pos:line="407" pos:column="16">-</op:operator><lit:literal type="number" pos:line="407" pos:column="17">1</lit:literal></expr>;</return>
    }</block></function><empty_stmt pos:line="408" pos:column="6">;</empty_stmt>

</public><protected pos:line="410" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="411" pos:column="9">Style</name></type> <name><name pos:line="411" pos:column="15">_styleArray</name><index pos:line="411" pos:column="26">[<expr><name pos:line="411" pos:column="27">SCE_STYLE_ARRAY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="412" pos:column="9">int</name></type> <name pos:line="412" pos:column="13">_nbStyler</name></decl>;</decl_stmt>
</protected>}</block>;</struct>

<struct pos:line="415" pos:column="1">struct <name pos:line="415" pos:column="8">LexerStyler</name> <super pos:line="415" pos:column="20">: <specifier pos:line="415" pos:column="22">public</specifier> <name pos:line="415" pos:column="29">StyleArray</name></super>
<block pos:line="416" pos:column="1">{<public type="default" pos:line="416" pos:column="2">
</public><public pos:line="417" pos:column="1">public :
    <constructor><name pos:line="418" pos:column="5">LexerStyler</name><parameter_list pos:line="418" pos:column="16">()</parameter_list><member_list pos:line="418" pos:column="18">:<call><name pos:line="418" pos:column="19">StyleArray</name><argument_list pos:line="418" pos:column="29">()</argument_list></call></member_list><block pos:line="418" pos:column="31">{}</block></constructor><empty_stmt pos:line="418" pos:column="33">;</empty_stmt>

    <function><type><name pos:line="420" pos:column="5">LexerStyler</name> <type:modifier pos:line="420" pos:column="17">&amp;</type:modifier></type> <name pos:line="420" pos:column="19">operator=</name><parameter_list pos:line="420" pos:column="28">(<param><decl><type><specifier pos:line="420" pos:column="29">const</specifier> <name pos:line="420" pos:column="35">LexerStyler</name> <type:modifier pos:line="420" pos:column="47">&amp;</type:modifier></type> <name pos:line="420" pos:column="49">ls</name></decl></param>)</parameter_list>
    <block pos:line="421" pos:column="5">{
        <if pos:line="422" pos:column="9">if <condition pos:line="422" pos:column="12">(<expr><name pos:line="422" pos:column="13">this</name> <op:operator pos:line="422" pos:column="18">!=</op:operator> <op:operator pos:line="422" pos:column="21">&amp;</op:operator><name pos:line="422" pos:column="22">ls</name></expr>)</condition><then pos:line="422" pos:column="25">
        <block pos:line="423" pos:column="9">{
            <expr_stmt><expr><op:operator pos:line="424" pos:column="13">*</op:operator><op:operator pos:line="424" pos:column="14">(</op:operator><op:operator pos:line="424" pos:column="15">(</op:operator><name pos:line="424" pos:column="16">StyleArray</name> <op:operator pos:line="424" pos:column="27">*</op:operator><op:operator pos:line="424" pos:column="28">)</op:operator><name pos:line="424" pos:column="29">this</name><op:operator pos:line="424" pos:column="33">)</op:operator> <op:operator pos:line="424" pos:column="35">=</op:operator> <name pos:line="424" pos:column="37">ls</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="425" pos:column="13">this</name><op:operator pos:line="425" pos:column="17">-&gt;</op:operator><name pos:line="425" pos:column="19">_lexerName</name></name> <op:operator pos:line="425" pos:column="30">=</op:operator> <name><name pos:line="425" pos:column="32">ls</name><op:operator pos:line="425" pos:column="34">.</op:operator><name pos:line="425" pos:column="35">_lexerName</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="426" pos:column="25">this</name><op:operator pos:line="426" pos:column="29">-&gt;</op:operator><name pos:line="426" pos:column="31">_lexerDesc</name></name> <op:operator pos:line="426" pos:column="42">=</op:operator> <name><name pos:line="426" pos:column="44">ls</name><op:operator pos:line="426" pos:column="46">.</op:operator><name pos:line="426" pos:column="47">_lexerDesc</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="427" pos:column="25">this</name><op:operator pos:line="427" pos:column="29">-&gt;</op:operator><name pos:line="427" pos:column="31">_lexerUserExt</name></name> <op:operator pos:line="427" pos:column="45">=</op:operator> <name><name pos:line="427" pos:column="47">ls</name><op:operator pos:line="427" pos:column="49">.</op:operator><name pos:line="427" pos:column="50">_lexerUserExt</name></name></expr>;</expr_stmt>
        }</block></then></if>
        <return pos:line="429" pos:column="9">return <expr><op:operator pos:line="429" pos:column="16">*</op:operator><name pos:line="429" pos:column="17">this</name></expr>;</return>
    }</block></function>

    <function><type><name pos:line="432" pos:column="5">void</name></type> <name pos:line="432" pos:column="10">setLexerName</name><parameter_list pos:line="432" pos:column="22">(<param><decl><type><specifier pos:line="432" pos:column="23">const</specifier> <name pos:line="432" pos:column="29">TCHAR</name> <type:modifier pos:line="432" pos:column="35">*</type:modifier></type><name pos:line="432" pos:column="36">lexerName</name></decl></param>)</parameter_list> <block pos:line="432" pos:column="47">{
        <expr_stmt><expr><name pos:line="433" pos:column="9">_lexerName</name> <op:operator pos:line="433" pos:column="20">=</op:operator> <name pos:line="433" pos:column="22">lexerName</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="434" pos:column="6">;</empty_stmt>
	
	<function><type><name pos:line="436" pos:column="9">void</name></type> <name pos:line="436" pos:column="14">setLexerDesc</name><parameter_list pos:line="436" pos:column="26">(<param><decl><type><specifier pos:line="436" pos:column="27">const</specifier> <name pos:line="436" pos:column="33">TCHAR</name> <type:modifier pos:line="436" pos:column="39">*</type:modifier></type><name pos:line="436" pos:column="40">lexerDesc</name></decl></param>)</parameter_list> <block pos:line="436" pos:column="51">{
        <expr_stmt><expr><name pos:line="437" pos:column="9">_lexerDesc</name> <op:operator pos:line="437" pos:column="20">=</op:operator> <name pos:line="437" pos:column="22">lexerDesc</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="438" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="440" pos:column="9">void</name></type> <name pos:line="440" pos:column="14">setLexerUserExt</name><parameter_list pos:line="440" pos:column="29">(<param><decl><type><specifier pos:line="440" pos:column="30">const</specifier> <name pos:line="440" pos:column="36">TCHAR</name> <type:modifier pos:line="440" pos:column="42">*</type:modifier></type><name pos:line="440" pos:column="43">lexerUserExt</name></decl></param>)</parameter_list> <block pos:line="440" pos:column="57">{
        <expr_stmt><expr><name pos:line="441" pos:column="9">_lexerUserExt</name> <op:operator pos:line="441" pos:column="23">=</op:operator> <name pos:line="441" pos:column="25">lexerUserExt</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="442" pos:column="6">;</empty_stmt>

    <function><type><specifier pos:line="444" pos:column="5">const</specifier> <name pos:line="444" pos:column="11">TCHAR</name> <type:modifier pos:line="444" pos:column="17">*</type:modifier></type> <name pos:line="444" pos:column="19">getLexerName</name><parameter_list pos:line="444" pos:column="31">()</parameter_list> <specifier pos:line="444" pos:column="34">const</specifier> <block pos:line="444" pos:column="40">{<return pos:line="444" pos:column="41">return <expr><call><name><name pos:line="444" pos:column="48">_lexerName</name><op:operator pos:line="444" pos:column="58">.</op:operator><name pos:line="444" pos:column="59">c_str</name></name><argument_list pos:line="444" pos:column="64">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="444" pos:column="68">;</empty_stmt>
	<function><type><specifier pos:line="445" pos:column="9">const</specifier> <name pos:line="445" pos:column="15">TCHAR</name> <type:modifier pos:line="445" pos:column="21">*</type:modifier></type> <name pos:line="445" pos:column="23">getLexerDesc</name><parameter_list pos:line="445" pos:column="35">()</parameter_list> <specifier pos:line="445" pos:column="38">const</specifier> <block pos:line="445" pos:column="44">{<return pos:line="445" pos:column="45">return <expr><call><name><name pos:line="445" pos:column="52">_lexerDesc</name><op:operator pos:line="445" pos:column="62">.</op:operator><name pos:line="445" pos:column="63">c_str</name></name><argument_list pos:line="445" pos:column="68">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="445" pos:column="72">;</empty_stmt>
    <function><type><specifier pos:line="446" pos:column="5">const</specifier> <name pos:line="446" pos:column="11">TCHAR</name> <type:modifier pos:line="446" pos:column="17">*</type:modifier></type> <name pos:line="446" pos:column="19">getLexerUserExt</name><parameter_list pos:line="446" pos:column="34">()</parameter_list> <specifier pos:line="446" pos:column="37">const</specifier> <block pos:line="446" pos:column="43">{<return pos:line="446" pos:column="44">return <expr><call><name><name pos:line="446" pos:column="51">_lexerUserExt</name><op:operator pos:line="446" pos:column="64">.</op:operator><name pos:line="446" pos:column="65">c_str</name></name><argument_list pos:line="446" pos:column="70">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="446" pos:column="74">;</empty_stmt>

</public><private pos:line="448" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="449" pos:column="9">generic_string</name></type> <name pos:line="449" pos:column="24">_lexerName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="450" pos:column="9">generic_string</name></type> <name pos:line="450" pos:column="24">_lexerDesc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="451" pos:column="9">generic_string</name></type> <name pos:line="451" pos:column="24">_lexerUserExt</name></decl>;</decl_stmt>
</private>}</block>;</struct>

<decl_stmt><decl><type><specifier pos:line="454" pos:column="1">const</specifier> <name pos:line="454" pos:column="7">int</name></type> <name pos:line="454" pos:column="11">MAX_LEXER_STYLE</name> <init pos:line="454" pos:column="27">= <expr><lit:literal type="number" pos:line="454" pos:column="29">80</lit:literal></expr></init></decl>;</decl_stmt>

<struct pos:line="456" pos:column="1">struct <name pos:line="456" pos:column="8">LexerStylerArray</name>
<block pos:line="457" pos:column="1">{<public type="default" pos:line="457" pos:column="2">
</public><public pos:line="458" pos:column="1">public :
	<constructor><name pos:line="459" pos:column="9">LexerStylerArray</name><parameter_list pos:line="459" pos:column="25">()</parameter_list> <member_list pos:line="459" pos:column="28">: <call><name pos:line="459" pos:column="30">_nbLexerStyler</name><argument_list pos:line="459" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="459" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="459" pos:column="47">{}</block></constructor><empty_stmt pos:line="459" pos:column="49">;</empty_stmt>

    <function><type><name pos:line="461" pos:column="5">LexerStylerArray</name> <type:modifier pos:line="461" pos:column="22">&amp;</type:modifier></type> <name pos:line="461" pos:column="24">operator=</name><parameter_list pos:line="461" pos:column="33">(<param><decl><type><specifier pos:line="461" pos:column="34">const</specifier> <name pos:line="461" pos:column="40">LexerStylerArray</name> <type:modifier pos:line="461" pos:column="57">&amp;</type:modifier></type> <name pos:line="461" pos:column="59">lsa</name></decl></param>)</parameter_list>
    <block pos:line="462" pos:column="5">{
        <if pos:line="463" pos:column="9">if <condition pos:line="463" pos:column="12">(<expr><name pos:line="463" pos:column="13">this</name> <op:operator pos:line="463" pos:column="18">!=</op:operator> <op:operator pos:line="463" pos:column="21">&amp;</op:operator><name pos:line="463" pos:column="22">lsa</name></expr>)</condition><then pos:line="463" pos:column="26">
        <block pos:line="464" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="465" pos:column="13">this</name><op:operator pos:line="465" pos:column="17">-&gt;</op:operator><name pos:line="465" pos:column="19">_nbLexerStyler</name></name> <op:operator pos:line="465" pos:column="34">=</op:operator> <name><name pos:line="465" pos:column="36">lsa</name><op:operator pos:line="465" pos:column="39">.</op:operator><name pos:line="465" pos:column="40">_nbLexerStyler</name></name></expr>;</expr_stmt>
            <for pos:line="466" pos:column="13">for (<init><decl><type><name pos:line="466" pos:column="18">int</name></type> <name pos:line="466" pos:column="22">i</name> <init pos:line="466" pos:column="24">= <expr><lit:literal type="number" pos:line="466" pos:column="26">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="466" pos:column="30">i</name> <op:operator pos:line="466" pos:column="32">&lt;</op:operator> <name><name pos:line="466" pos:column="34">this</name><op:operator pos:line="466" pos:column="38">-&gt;</op:operator><name pos:line="466" pos:column="40">_nbLexerStyler</name></name></expr> ;</condition> <incr><expr><name pos:line="466" pos:column="57">i</name><op:operator pos:line="466" pos:column="58">++</op:operator></expr></incr>)
                <expr_stmt><expr><name><name pos:line="467" pos:column="17">this</name><op:operator pos:line="467" pos:column="21">-&gt;</op:operator><name pos:line="467" pos:column="23">_lexerStylerArray</name><index pos:line="467" pos:column="40">[<expr><name pos:line="467" pos:column="41">i</name></expr>]</index></name> <op:operator pos:line="467" pos:column="44">=</op:operator> <name><name pos:line="467" pos:column="46">lsa</name><op:operator pos:line="467" pos:column="49">.</op:operator><name pos:line="467" pos:column="50">_lexerStylerArray</name><index pos:line="467" pos:column="67">[<expr><name pos:line="467" pos:column="68">i</name></expr>]</index></name></expr>;</expr_stmt></for>
        }</block></then></if>
        <return pos:line="469" pos:column="9">return <expr><op:operator pos:line="469" pos:column="16">*</op:operator><name pos:line="469" pos:column="17">this</name></expr>;</return>
    }</block></function>

    <function><type><name pos:line="472" pos:column="5">int</name></type> <name pos:line="472" pos:column="9">getNbLexer</name><parameter_list pos:line="472" pos:column="19">()</parameter_list> <specifier pos:line="472" pos:column="22">const</specifier> <block pos:line="472" pos:column="28">{<return pos:line="472" pos:column="29">return <expr><name pos:line="472" pos:column="36">_nbLexerStyler</name></expr>;</return>}</block></function><empty_stmt pos:line="472" pos:column="52">;</empty_stmt>

    <function><type><name pos:line="474" pos:column="5">LexerStyler</name> <type:modifier pos:line="474" pos:column="17">&amp;</type:modifier></type> <name pos:line="474" pos:column="19">getLexerFromIndex</name><parameter_list pos:line="474" pos:column="36">(<param><decl><type><name pos:line="474" pos:column="37">int</name></type> <name pos:line="474" pos:column="41">index</name></decl></param>)</parameter_list>
    <block pos:line="475" pos:column="5">{
        <return pos:line="476" pos:column="9">return <expr><name><name pos:line="476" pos:column="16">_lexerStylerArray</name><index pos:line="476" pos:column="33">[<expr><name pos:line="476" pos:column="34">index</name></expr>]</index></name></expr>;</return>
    }</block></function><empty_stmt pos:line="477" pos:column="6">;</empty_stmt>

    <function><type><specifier pos:line="479" pos:column="5">const</specifier> <name pos:line="479" pos:column="11">TCHAR</name> <type:modifier pos:line="479" pos:column="17">*</type:modifier></type> <name pos:line="479" pos:column="19">getLexerNameFromIndex</name><parameter_list pos:line="479" pos:column="40">(<param><decl><type><name pos:line="479" pos:column="41">int</name></type> <name pos:line="479" pos:column="45">index</name></decl></param>)</parameter_list> <specifier pos:line="479" pos:column="52">const</specifier> <block pos:line="479" pos:column="58">{<return pos:line="479" pos:column="59">return <expr><name><name pos:line="479" pos:column="66">_lexerStylerArray</name><index pos:line="479" pos:column="83">[<expr><name pos:line="479" pos:column="84">index</name></expr>]</index></name><op:operator pos:line="479" pos:column="90">.</op:operator><call><name pos:line="479" pos:column="91">getLexerName</name><argument_list pos:line="479" pos:column="103">()</argument_list></call></expr>;</return>}</block></function>
	<function><type><specifier pos:line="480" pos:column="9">const</specifier> <name pos:line="480" pos:column="15">TCHAR</name> <type:modifier pos:line="480" pos:column="21">*</type:modifier></type> <name pos:line="480" pos:column="23">getLexerDescFromIndex</name><parameter_list pos:line="480" pos:column="44">(<param><decl><type><name pos:line="480" pos:column="45">int</name></type> <name pos:line="480" pos:column="49">index</name></decl></param>)</parameter_list> <specifier pos:line="480" pos:column="56">const</specifier> <block pos:line="480" pos:column="62">{<return pos:line="480" pos:column="63">return <expr><name><name pos:line="480" pos:column="70">_lexerStylerArray</name><index pos:line="480" pos:column="87">[<expr><name pos:line="480" pos:column="88">index</name></expr>]</index></name><op:operator pos:line="480" pos:column="94">.</op:operator><call><name pos:line="480" pos:column="95">getLexerDesc</name><argument_list pos:line="480" pos:column="107">()</argument_list></call></expr>;</return>}</block></function>

    <function><type><name pos:line="482" pos:column="5">LexerStyler</name> <type:modifier pos:line="482" pos:column="17">*</type:modifier></type> <name pos:line="482" pos:column="19">getLexerStylerByName</name><parameter_list pos:line="482" pos:column="39">(<param><decl><type><specifier pos:line="482" pos:column="40">const</specifier> <name pos:line="482" pos:column="46">TCHAR</name> <type:modifier pos:line="482" pos:column="52">*</type:modifier></type><name pos:line="482" pos:column="53">lexerName</name></decl></param>)</parameter_list> <block pos:line="482" pos:column="64">{
		<if pos:line="483" pos:column="17">if <condition pos:line="483" pos:column="20">(<expr><op:operator pos:line="483" pos:column="21">!</op:operator><name pos:line="483" pos:column="22">lexerName</name></expr>)</condition><then pos:line="483" pos:column="32"> <return pos:line="483" pos:column="33">return <expr><name pos:line="483" pos:column="40">NULL</name></expr>;</return></then></if>
        <for pos:line="484" pos:column="9">for (<init><decl><type><name pos:line="484" pos:column="14">int</name></type> <name pos:line="484" pos:column="18">i</name> <init pos:line="484" pos:column="20">= <expr><lit:literal type="number" pos:line="484" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="484" pos:column="26">i</name> <op:operator pos:line="484" pos:column="28">&lt;</op:operator> <name pos:line="484" pos:column="30">_nbLexerStyler</name></expr> ;</condition> <incr><expr><name pos:line="484" pos:column="47">i</name><op:operator pos:line="484" pos:column="48">++</op:operator></expr></incr>)
        <block pos:line="485" pos:column="9">{
            <if pos:line="486" pos:column="13">if <condition pos:line="486" pos:column="16">(<expr><op:operator pos:line="486" pos:column="17">!</op:operator><call><name pos:line="486" pos:column="18">lstrcmp</name><argument_list pos:line="486" pos:column="25">(<argument><expr><name><name pos:line="486" pos:column="26">_lexerStylerArray</name><index pos:line="486" pos:column="43">[<expr><name pos:line="486" pos:column="44">i</name></expr>]</index></name><op:operator pos:line="486" pos:column="46">.</op:operator><call><name pos:line="486" pos:column="47">getLexerName</name><argument_list pos:line="486" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="486" pos:column="63">lexerName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="486" pos:column="74">
                <return pos:line="487" pos:column="17">return <expr><op:operator pos:line="487" pos:column="24">&amp;</op:operator><op:operator pos:line="487" pos:column="25">(</op:operator><name><name pos:line="487" pos:column="26">_lexerStylerArray</name><index pos:line="487" pos:column="43">[<expr><name pos:line="487" pos:column="44">i</name></expr>]</index></name><op:operator pos:line="487" pos:column="46">)</op:operator></expr>;</return></then></if>
        }</block></for>
        <return pos:line="489" pos:column="9">return <expr><name pos:line="489" pos:column="16">NULL</name></expr>;</return>
    }</block></function><empty_stmt pos:line="490" pos:column="6">;</empty_stmt>
    <function><type><name pos:line="491" pos:column="5">bool</name></type> <name pos:line="491" pos:column="10">hasEnoughSpace</name><parameter_list pos:line="491" pos:column="24">()</parameter_list> <block pos:line="491" pos:column="27">{<return pos:line="491" pos:column="28">return <expr><op:operator pos:line="491" pos:column="35">(</op:operator><name pos:line="491" pos:column="36">_nbLexerStyler</name> <op:operator pos:line="491" pos:column="51">&lt;</op:operator> <name pos:line="491" pos:column="53">MAX_LEXER_STYLE</name><op:operator pos:line="491" pos:column="68">)</op:operator></expr>;</return>}</block></function><empty_stmt pos:line="491" pos:column="71">;</empty_stmt>
    <function_decl><type><name pos:line="492" pos:column="5">void</name></type> <name pos:line="492" pos:column="10">addLexerStyler</name><parameter_list pos:line="492" pos:column="24">(<param><decl><type><specifier pos:line="492" pos:column="25">const</specifier> <name pos:line="492" pos:column="31">TCHAR</name> <type:modifier pos:line="492" pos:column="37">*</type:modifier></type><name pos:line="492" pos:column="38">lexerName</name></decl></param>, <param><decl><type><specifier pos:line="492" pos:column="49">const</specifier> <name pos:line="492" pos:column="55">TCHAR</name> <type:modifier pos:line="492" pos:column="61">*</type:modifier></type><name pos:line="492" pos:column="62">lexerDesc</name></decl></param>, <param><decl><type><specifier pos:line="492" pos:column="73">const</specifier> <name pos:line="492" pos:column="79">TCHAR</name> <type:modifier pos:line="492" pos:column="85">*</type:modifier></type><name pos:line="492" pos:column="86">lexerUserExt</name></decl></param>, <param><decl><type><name pos:line="492" pos:column="100">TiXmlNode</name> <type:modifier pos:line="492" pos:column="110">*</type:modifier></type><name pos:line="492" pos:column="111">lexerNode</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="493" pos:column="9">void</name></type> <name pos:line="493" pos:column="14">eraseAll</name><parameter_list pos:line="493" pos:column="22">()</parameter_list>;</function_decl>
</public><private pos:line="494" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="495" pos:column="9">LexerStyler</name></type> <name><name pos:line="495" pos:column="21">_lexerStylerArray</name><index pos:line="495" pos:column="38">[<expr><name pos:line="495" pos:column="39">MAX_LEXER_STYLE</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="496" pos:column="9">int</name></type> <name pos:line="496" pos:column="13">_nbLexerStyler</name></decl>;</decl_stmt>
</private>}</block>;</struct>

<struct pos:line="499" pos:column="1">struct <name pos:line="499" pos:column="8">NewDocDefaultSettings</name> 
<block pos:line="500" pos:column="1">{<public type="default" pos:line="500" pos:column="2">
	<decl_stmt><decl><type><name pos:line="501" pos:column="9">formatType</name></type> <name pos:line="501" pos:column="20">_format</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="502" pos:column="9">UniMode</name></type> <name pos:line="502" pos:column="17">_encoding</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="503" pos:column="9">bool</name></type> <name pos:line="503" pos:column="14">_openAnsiAsUtf8</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="504" pos:column="9">LangType</name></type> <name pos:line="504" pos:column="18">_lang</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="505" pos:column="9">int</name></type> <name pos:line="505" pos:column="13">_codepage</name></decl>;</decl_stmt> <comment type="line" pos:line="505" pos:column="24">// -1 when not using</comment>
	<constructor><name pos:line="506" pos:column="9">NewDocDefaultSettings</name><parameter_list pos:line="506" pos:column="30">()</parameter_list><member_list pos:line="506" pos:column="32">:<call><name pos:line="506" pos:column="33">_format</name><argument_list pos:line="506" pos:column="40">(<argument><expr><name pos:line="506" pos:column="41">WIN_FORMAT</name></expr></argument>)</argument_list></call><op:operator pos:line="506" pos:column="52">,</op:operator> <call><name pos:line="506" pos:column="54">_encoding</name><argument_list pos:line="506" pos:column="63">(<argument><expr><name pos:line="506" pos:column="64">uniCookie</name></expr></argument>)</argument_list></call><op:operator pos:line="506" pos:column="74">,</op:operator> <call><name pos:line="506" pos:column="76">_openAnsiAsUtf8</name><argument_list pos:line="506" pos:column="91">(<argument><expr><lit:literal type="boolean" pos:line="506" pos:column="92">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="506" pos:column="97">,</op:operator> <call><name pos:line="506" pos:column="99">_lang</name><argument_list pos:line="506" pos:column="104">(<argument><expr><name pos:line="506" pos:column="105">L_TEXT</name></expr></argument>)</argument_list></call><op:operator pos:line="506" pos:column="112">,</op:operator> <call><name pos:line="506" pos:column="114">_codepage</name><argument_list pos:line="506" pos:column="123">(<argument><expr><op:operator pos:line="506" pos:column="124">-</op:operator><lit:literal type="number" pos:line="506" pos:column="125">1</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="506" pos:column="127">{}</block></constructor><empty_stmt pos:line="506" pos:column="129">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="509" pos:column="1">struct <name pos:line="509" pos:column="8">LangMenuItem</name> <block pos:line="509" pos:column="21">{<public type="default" pos:line="509" pos:column="22">
	<decl_stmt><decl><type><name pos:line="510" pos:column="9">LangType</name></type> <name pos:line="510" pos:column="18">_langType</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="511" pos:column="9">int</name></type>	<name pos:line="511" pos:column="17">_cmdID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="512" pos:column="9">generic_string</name></type> <name pos:line="512" pos:column="24">_langName</name></decl>;</decl_stmt>

	<constructor><name pos:line="514" pos:column="9">LangMenuItem</name><parameter_list pos:line="514" pos:column="21">(<param><decl><type><name pos:line="514" pos:column="22">LangType</name></type> <name pos:line="514" pos:column="31">lt</name></decl></param>, <param><decl><type><name pos:line="514" pos:column="35">int</name></type> <name pos:line="514" pos:column="39">cmdID</name> <init pos:line="514" pos:column="45">= <expr><lit:literal type="number" pos:line="514" pos:column="47">0</lit:literal></expr></init></decl></param>, <name pos:line="514" pos:column="50">generic_string</name> <name pos:line="514" pos:column="65">langName</name> <op:operator pos:line="514" pos:column="74">=</op:operator> <call><name pos:line="514" pos:column="76">TEXT</name><argument_list pos:line="514" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="514" pos:column="81">""</lit:literal></expr></argument>)</argument_list></call>)</parameter_list><member_list pos:line="514" pos:column="85">:
	<call><name pos:line="515" pos:column="9">_langType</name><argument_list pos:line="515" pos:column="18">(<argument><expr><name pos:line="515" pos:column="19">lt</name></expr></argument>)</argument_list></call><op:operator pos:line="515" pos:column="22">,</op:operator> <call><name pos:line="515" pos:column="24">_cmdID</name><argument_list pos:line="515" pos:column="30">(<argument><expr><name pos:line="515" pos:column="31">cmdID</name></expr></argument>)</argument_list></call><op:operator pos:line="515" pos:column="37">,</op:operator> <call><name pos:line="515" pos:column="39">_langName</name><argument_list pos:line="515" pos:column="48">(<argument><expr><name pos:line="515" pos:column="49">langName</name></expr></argument>)</argument_list></call></member_list><block pos:line="515" pos:column="58">{}</block></constructor><empty_stmt pos:line="515" pos:column="60">;</empty_stmt>
</public>}</block>;</struct>

<struct pos:line="518" pos:column="1">struct <name pos:line="518" pos:column="8">PrintSettings</name> <block pos:line="518" pos:column="22">{<public type="default" pos:line="518" pos:column="23">
	<decl_stmt><decl><type><name pos:line="519" pos:column="9">bool</name></type> <name pos:line="519" pos:column="14">_printLineNumber</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="520" pos:column="9">int</name></type> <name pos:line="520" pos:column="13">_printOption</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="522" pos:column="9">generic_string</name></type> <name pos:line="522" pos:column="24">_headerLeft</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="523" pos:column="9">generic_string</name></type> <name pos:line="523" pos:column="24">_headerMiddle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="524" pos:column="9">generic_string</name></type> <name pos:line="524" pos:column="24">_headerRight</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="525" pos:column="9">generic_string</name></type> <name pos:line="525" pos:column="24">_headerFontName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="526" pos:column="9">int</name></type> <name pos:line="526" pos:column="13">_headerFontStyle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="527" pos:column="9">int</name></type> <name pos:line="527" pos:column="13">_headerFontSize</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="529" pos:column="9">generic_string</name></type> <name pos:line="529" pos:column="24">_footerLeft</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="530" pos:column="9">generic_string</name></type> <name pos:line="530" pos:column="24">_footerMiddle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="531" pos:column="9">generic_string</name></type> <name pos:line="531" pos:column="24">_footerRight</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="532" pos:column="9">generic_string</name></type> <name pos:line="532" pos:column="24">_footerFontName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="533" pos:column="9">int</name></type> <name pos:line="533" pos:column="13">_footerFontStyle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="534" pos:column="9">int</name></type> <name pos:line="534" pos:column="13">_footerFontSize</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="536" pos:column="9">RECT</name></type> <name pos:line="536" pos:column="14">_marge</name></decl>;</decl_stmt>

	<constructor><name pos:line="538" pos:column="9">PrintSettings</name><parameter_list pos:line="538" pos:column="22">()</parameter_list> <member_list pos:line="538" pos:column="25">: <call><name pos:line="538" pos:column="27">_printLineNumber</name><argument_list pos:line="538" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="538" pos:column="44">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="538" pos:column="49">,</op:operator> <call><name pos:line="538" pos:column="51">_printOption</name><argument_list pos:line="538" pos:column="63">(<argument><expr><name pos:line="538" pos:column="64">SC_PRINT_NORMAL</name></expr></argument>)</argument_list></call><op:operator pos:line="538" pos:column="80">,</op:operator> <call><name pos:line="538" pos:column="82">_headerLeft</name><argument_list pos:line="538" pos:column="93">(<argument><expr><call><name pos:line="538" pos:column="94">TEXT</name><argument_list pos:line="538" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="538" pos:column="99">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="538" pos:column="103">,</op:operator> <call><name pos:line="538" pos:column="105">_headerMiddle</name><argument_list pos:line="538" pos:column="118">(<argument><expr><call><name pos:line="538" pos:column="119">TEXT</name><argument_list pos:line="538" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="538" pos:column="124">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="538" pos:column="128">,</op:operator> <call><name pos:line="538" pos:column="130">_headerRight</name><argument_list pos:line="538" pos:column="142">(<argument><expr><call><name pos:line="538" pos:column="143">TEXT</name><argument_list pos:line="538" pos:column="147">(<argument><expr><lit:literal type="string" pos:line="538" pos:column="148">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="538" pos:column="152">,</op:operator>\
		<call><name pos:line="539" pos:column="17">_headerFontName</name><argument_list pos:line="539" pos:column="32">(<argument><expr><call><name pos:line="539" pos:column="33">TEXT</name><argument_list pos:line="539" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="539" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="42">,</op:operator> <call><name pos:line="539" pos:column="44">_headerFontStyle</name><argument_list pos:line="539" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="539" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="63">,</op:operator> <call><name pos:line="539" pos:column="65">_headerFontSize</name><argument_list pos:line="539" pos:column="80">(<argument><expr><lit:literal type="number" pos:line="539" pos:column="81">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="83">,</op:operator>  <call><name pos:line="539" pos:column="86">_footerLeft</name><argument_list pos:line="539" pos:column="97">(<argument><expr><call><name pos:line="539" pos:column="98">TEXT</name><argument_list pos:line="539" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="539" pos:column="103">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="107">,</op:operator> <call><name pos:line="539" pos:column="109">_footerMiddle</name><argument_list pos:line="539" pos:column="122">(<argument><expr><call><name pos:line="539" pos:column="123">TEXT</name><argument_list pos:line="539" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="539" pos:column="128">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="132">,</op:operator> <call><name pos:line="539" pos:column="134">_footerRight</name><argument_list pos:line="539" pos:column="146">(<argument><expr><call><name pos:line="539" pos:column="147">TEXT</name><argument_list pos:line="539" pos:column="151">(<argument><expr><lit:literal type="string" pos:line="539" pos:column="152">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="539" pos:column="156">,</op:operator>\
		<call><name pos:line="540" pos:column="17">_footerFontName</name><argument_list pos:line="540" pos:column="32">(<argument><expr><call><name pos:line="540" pos:column="33">TEXT</name><argument_list pos:line="540" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="540" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="540" pos:column="42">,</op:operator> <call><name pos:line="540" pos:column="44">_footerFontStyle</name><argument_list pos:line="540" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="540" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="540" pos:column="63">,</op:operator> <call><name pos:line="540" pos:column="65">_footerFontSize</name><argument_list pos:line="540" pos:column="80">(<argument><expr><lit:literal type="number" pos:line="540" pos:column="81">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="540" pos:column="84">{
			<expr_stmt><expr><name><name pos:line="541" pos:column="25">_marge</name><op:operator pos:line="541" pos:column="31">.</op:operator><name pos:line="541" pos:column="32">left</name></name> <op:operator pos:line="541" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="541" pos:column="39">0</lit:literal></expr>;</expr_stmt> <expr_stmt><expr><name><name pos:line="541" pos:column="42">_marge</name><op:operator pos:line="541" pos:column="48">.</op:operator><name pos:line="541" pos:column="49">top</name></name> <op:operator pos:line="541" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="541" pos:column="55">0</lit:literal></expr>;</expr_stmt> <expr_stmt><expr><name><name pos:line="541" pos:column="58">_marge</name><op:operator pos:line="541" pos:column="64">.</op:operator><name pos:line="541" pos:column="65">right</name></name> <op:operator pos:line="541" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="541" pos:column="73">0</lit:literal></expr>;</expr_stmt> <expr_stmt><expr><name><name pos:line="541" pos:column="76">_marge</name><op:operator pos:line="541" pos:column="82">.</op:operator><name pos:line="541" pos:column="83">bottom</name></name> <op:operator pos:line="541" pos:column="90">=</op:operator> <lit:literal type="number" pos:line="541" pos:column="92">0</lit:literal></expr>;</expr_stmt>
		}</block></constructor><empty_stmt pos:line="542" pos:column="18">;</empty_stmt>

	<function><type><name pos:line="544" pos:column="9">bool</name></type> <name pos:line="544" pos:column="14">isHeaderPresent</name><parameter_list pos:line="544" pos:column="29">()</parameter_list> <specifier pos:line="544" pos:column="32">const</specifier> <block pos:line="544" pos:column="38">{
		<return pos:line="545" pos:column="17">return <expr><op:operator pos:line="545" pos:column="24">(</op:operator><op:operator pos:line="545" pos:column="25">(</op:operator><name pos:line="545" pos:column="26">_headerLeft</name> <op:operator pos:line="545" pos:column="38">!=</op:operator> <call><name pos:line="545" pos:column="41">TEXT</name><argument_list pos:line="545" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="545" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="545" pos:column="49">)</op:operator> <op:operator pos:line="545" pos:column="51">||</op:operator> <op:operator pos:line="545" pos:column="54">(</op:operator><name pos:line="545" pos:column="55">_headerMiddle</name> <op:operator pos:line="545" pos:column="69">!=</op:operator> <call><name pos:line="545" pos:column="72">TEXT</name><argument_list pos:line="545" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="545" pos:column="77">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="545" pos:column="80">)</op:operator> <op:operator pos:line="545" pos:column="82">||</op:operator> <op:operator pos:line="545" pos:column="85">(</op:operator><name pos:line="545" pos:column="86">_headerRight</name> <op:operator pos:line="545" pos:column="99">!=</op:operator> <call><name pos:line="545" pos:column="102">TEXT</name><argument_list pos:line="545" pos:column="106">(<argument><expr><lit:literal type="string" pos:line="545" pos:column="107">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="545" pos:column="110">)</op:operator><op:operator pos:line="545" pos:column="111">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="546" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="548" pos:column="9">bool</name></type> <name pos:line="548" pos:column="14">isFooterPresent</name><parameter_list pos:line="548" pos:column="29">()</parameter_list> <specifier pos:line="548" pos:column="32">const</specifier> <block pos:line="548" pos:column="38">{
		<return pos:line="549" pos:column="17">return <expr><op:operator pos:line="549" pos:column="24">(</op:operator><op:operator pos:line="549" pos:column="25">(</op:operator><name pos:line="549" pos:column="26">_footerLeft</name> <op:operator pos:line="549" pos:column="38">!=</op:operator> <call><name pos:line="549" pos:column="41">TEXT</name><argument_list pos:line="549" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="549" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="549" pos:column="49">)</op:operator> <op:operator pos:line="549" pos:column="51">||</op:operator> <op:operator pos:line="549" pos:column="54">(</op:operator><name pos:line="549" pos:column="55">_footerMiddle</name> <op:operator pos:line="549" pos:column="69">!=</op:operator> <call><name pos:line="549" pos:column="72">TEXT</name><argument_list pos:line="549" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="549" pos:column="77">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="549" pos:column="80">)</op:operator> <op:operator pos:line="549" pos:column="82">||</op:operator> <op:operator pos:line="549" pos:column="85">(</op:operator><name pos:line="549" pos:column="86">_footerRight</name> <op:operator pos:line="549" pos:column="99">!=</op:operator> <call><name pos:line="549" pos:column="102">TEXT</name><argument_list pos:line="549" pos:column="106">(<argument><expr><lit:literal type="string" pos:line="549" pos:column="107">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="549" pos:column="110">)</op:operator><op:operator pos:line="549" pos:column="111">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="550" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="552" pos:column="9">bool</name></type> <name pos:line="552" pos:column="14">isUserMargePresent</name><parameter_list pos:line="552" pos:column="32">()</parameter_list> <specifier pos:line="552" pos:column="35">const</specifier> <block pos:line="552" pos:column="41">{
		<return pos:line="553" pos:column="17">return <expr><op:operator pos:line="553" pos:column="24">(</op:operator><op:operator pos:line="553" pos:column="25">(</op:operator><name><name pos:line="553" pos:column="26">_marge</name><op:operator pos:line="553" pos:column="32">.</op:operator><name pos:line="553" pos:column="33">left</name></name> <op:operator pos:line="553" pos:column="38">!=</op:operator> <lit:literal type="number" pos:line="553" pos:column="41">0</lit:literal><op:operator pos:line="553" pos:column="42">)</op:operator> <op:operator pos:line="553" pos:column="44">||</op:operator> <op:operator pos:line="553" pos:column="47">(</op:operator><name><name pos:line="553" pos:column="48">_marge</name><op:operator pos:line="553" pos:column="54">.</op:operator><name pos:line="553" pos:column="55">top</name></name> <op:operator pos:line="553" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="553" pos:column="62">0</lit:literal><op:operator pos:line="553" pos:column="63">)</op:operator> <op:operator pos:line="553" pos:column="65">||</op:operator> <op:operator pos:line="553" pos:column="68">(</op:operator><name><name pos:line="553" pos:column="69">_marge</name><op:operator pos:line="553" pos:column="75">.</op:operator><name pos:line="553" pos:column="76">right</name></name> <op:operator pos:line="553" pos:column="82">!=</op:operator> <lit:literal type="number" pos:line="553" pos:column="85">0</lit:literal><op:operator pos:line="553" pos:column="86">)</op:operator> <op:operator pos:line="553" pos:column="88">||</op:operator> <op:operator pos:line="553" pos:column="91">(</op:operator><name><name pos:line="553" pos:column="92">_marge</name><op:operator pos:line="553" pos:column="98">.</op:operator><name pos:line="553" pos:column="99">bottom</name></name> <op:operator pos:line="553" pos:column="106">!=</op:operator> <lit:literal type="number" pos:line="553" pos:column="109">0</lit:literal><op:operator pos:line="553" pos:column="110">)</op:operator><op:operator pos:line="553" pos:column="111">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="554" pos:column="10">;</empty_stmt>
</public>}</block>;</struct>

<class pos:line="557" pos:column="1">class <name pos:line="557" pos:column="7">Date</name> <block pos:line="557" pos:column="12">{<private type="default" pos:line="557" pos:column="13">
</private><public pos:line="558" pos:column="1">public:
    <constructor><name pos:line="559" pos:column="5">Date</name><parameter_list pos:line="559" pos:column="9">()</parameter_list> <member_list pos:line="559" pos:column="12">: <call><name pos:line="559" pos:column="14">_year</name><argument_list pos:line="559" pos:column="19">(<argument><expr><lit:literal type="number" pos:line="559" pos:column="20">2008</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="559" pos:column="25">,</op:operator> <call><name pos:line="559" pos:column="27">_month</name><argument_list pos:line="559" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="559" pos:column="34">4</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="559" pos:column="36">,</op:operator> <call><name pos:line="559" pos:column="38">_day</name><argument_list pos:line="559" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="559" pos:column="43">26</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="559" pos:column="46">{}</block></constructor><empty_stmt pos:line="559" pos:column="48">;</empty_stmt>
    <constructor><name pos:line="560" pos:column="5">Date</name><parameter_list pos:line="560" pos:column="9">(<param><decl><type><name pos:line="560" pos:column="10">unsigned</name> <name pos:line="560" pos:column="19">long</name></type> <name pos:line="560" pos:column="24">year</name></decl></param>, <param><decl><type><name pos:line="560" pos:column="30">unsigned</name> <name pos:line="560" pos:column="39">long</name></type> <name pos:line="560" pos:column="44">month</name></decl></param>, <param><decl><type><name pos:line="560" pos:column="51">unsigned</name> <name pos:line="560" pos:column="60">long</name></type> <name pos:line="560" pos:column="65">day</name></decl></param>)</parameter_list> <block pos:line="560" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="561" pos:column="9">assert</name><argument_list pos:line="561" pos:column="15">(<argument><expr><name pos:line="561" pos:column="16">year</name> <op:operator pos:line="561" pos:column="21">&gt;</op:operator> <lit:literal type="number" pos:line="561" pos:column="23">0</lit:literal> <op:operator pos:line="561" pos:column="25">&amp;&amp;</op:operator> <name pos:line="561" pos:column="28">year</name> <op:operator pos:line="561" pos:column="33">&lt;=</op:operator> <lit:literal type="number" pos:line="561" pos:column="36">9999</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="561" pos:column="43">// I don't think Notepad++ will last till AD 10000 :)</comment>
        <expr_stmt><expr><call><name pos:line="562" pos:column="9">assert</name><argument_list pos:line="562" pos:column="15">(<argument><expr><name pos:line="562" pos:column="16">month</name> <op:operator pos:line="562" pos:column="22">&gt;</op:operator> <lit:literal type="number" pos:line="562" pos:column="24">0</lit:literal> <op:operator pos:line="562" pos:column="26">&amp;&amp;</op:operator> <name pos:line="562" pos:column="29">month</name> <op:operator pos:line="562" pos:column="35">&lt;=</op:operator> <lit:literal type="number" pos:line="562" pos:column="38">12</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="563" pos:column="9">assert</name><argument_list pos:line="563" pos:column="15">(<argument><expr><name pos:line="563" pos:column="16">day</name> <op:operator pos:line="563" pos:column="20">&gt;</op:operator> <lit:literal type="number" pos:line="563" pos:column="22">0</lit:literal> <op:operator pos:line="563" pos:column="24">&amp;&amp;</op:operator> <name pos:line="563" pos:column="27">day</name> <op:operator pos:line="563" pos:column="31">&lt;=</op:operator> <lit:literal type="number" pos:line="563" pos:column="34">31</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="564" pos:column="9">assert</name><argument_list pos:line="564" pos:column="15">(<argument><expr><op:operator pos:line="564" pos:column="16">!</op:operator><op:operator pos:line="564" pos:column="17">(</op:operator><name pos:line="564" pos:column="18">month</name> <op:operator pos:line="564" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="564" pos:column="27">2</lit:literal> <op:operator pos:line="564" pos:column="29">&amp;&amp;</op:operator> <name pos:line="564" pos:column="32">day</name> <op:operator pos:line="564" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="564" pos:column="38">29</lit:literal><op:operator pos:line="564" pos:column="40">)</op:operator> <op:operator pos:line="564" pos:column="42">&amp;&amp;</op:operator>
               <op:operator pos:line="565" pos:column="16">!</op:operator><op:operator pos:line="565" pos:column="17">(</op:operator><name pos:line="565" pos:column="18">month</name> <op:operator pos:line="565" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="565" pos:column="27">4</lit:literal> <op:operator pos:line="565" pos:column="29">&amp;&amp;</op:operator> <name pos:line="565" pos:column="32">day</name> <op:operator pos:line="565" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="565" pos:column="38">30</lit:literal><op:operator pos:line="565" pos:column="40">)</op:operator> <op:operator pos:line="565" pos:column="42">&amp;&amp;</op:operator>
               <op:operator pos:line="566" pos:column="16">!</op:operator><op:operator pos:line="566" pos:column="17">(</op:operator><name pos:line="566" pos:column="18">month</name> <op:operator pos:line="566" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="566" pos:column="27">6</lit:literal> <op:operator pos:line="566" pos:column="29">&amp;&amp;</op:operator> <name pos:line="566" pos:column="32">day</name> <op:operator pos:line="566" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="566" pos:column="38">30</lit:literal><op:operator pos:line="566" pos:column="40">)</op:operator> <op:operator pos:line="566" pos:column="42">&amp;&amp;</op:operator>
               <op:operator pos:line="567" pos:column="16">!</op:operator><op:operator pos:line="567" pos:column="17">(</op:operator><name pos:line="567" pos:column="18">month</name> <op:operator pos:line="567" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="567" pos:column="27">9</lit:literal> <op:operator pos:line="567" pos:column="29">&amp;&amp;</op:operator> <name pos:line="567" pos:column="32">day</name> <op:operator pos:line="567" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="567" pos:column="38">30</lit:literal><op:operator pos:line="567" pos:column="40">)</op:operator> <op:operator pos:line="567" pos:column="42">&amp;&amp;</op:operator>
               <op:operator pos:line="568" pos:column="16">!</op:operator><op:operator pos:line="568" pos:column="17">(</op:operator><name pos:line="568" pos:column="18">month</name> <op:operator pos:line="568" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="568" pos:column="27">11</lit:literal> <op:operator pos:line="568" pos:column="30">&amp;&amp;</op:operator> <name pos:line="568" pos:column="33">day</name> <op:operator pos:line="568" pos:column="37">&gt;</op:operator> <lit:literal type="number" pos:line="568" pos:column="39">30</lit:literal><op:operator pos:line="568" pos:column="41">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="570" pos:column="9">_year</name> <op:operator pos:line="570" pos:column="15">=</op:operator> <name pos:line="570" pos:column="17">year</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="571" pos:column="9">_month</name> <op:operator pos:line="571" pos:column="16">=</op:operator> <name pos:line="571" pos:column="18">month</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="572" pos:column="9">_day</name> <op:operator pos:line="572" pos:column="14">=</op:operator> <name pos:line="572" pos:column="16">day</name></expr>;</expr_stmt>
    }</block></constructor><empty_stmt pos:line="573" pos:column="6">;</empty_stmt>
    
    <constructor><name pos:line="575" pos:column="5">Date</name><parameter_list pos:line="575" pos:column="9">(<param><decl><type><specifier pos:line="575" pos:column="10">const</specifier> <name pos:line="575" pos:column="16">TCHAR</name> <type:modifier pos:line="575" pos:column="22">*</type:modifier></type><name pos:line="575" pos:column="23">dateStr</name></decl></param>)</parameter_list> <block pos:line="575" pos:column="32">{ <comment type="line" pos:line="575" pos:column="34">// timeStr should be Notepad++ date format : YYYYMMDD</comment>
        <expr_stmt><expr><call><name pos:line="576" pos:column="9">assert</name><argument_list pos:line="576" pos:column="15">(<argument><expr><name pos:line="576" pos:column="16">dateStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="577" pos:column="9">if <condition pos:line="577" pos:column="12">(<expr><call><name pos:line="577" pos:column="13">lstrlen</name><argument_list pos:line="577" pos:column="20">(<argument><expr><name pos:line="577" pos:column="21">dateStr</name></expr></argument>)</argument_list></call> <op:operator pos:line="577" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="577" pos:column="33">8</lit:literal></expr>)</condition><then pos:line="577" pos:column="35">
        <block pos:line="578" pos:column="9">{
            <function_decl><type><name pos:line="579" pos:column="13">generic_string</name></type> <name pos:line="579" pos:column="28">ds</name><parameter_list pos:line="579" pos:column="30">(<param><decl><type><name pos:line="579" pos:column="31">dateStr</name></type></decl></param>)</parameter_list>;</function_decl>
            <decl_stmt><decl><type><name pos:line="580" pos:column="13">generic_string</name></type> <name pos:line="580" pos:column="28">yyyy</name><argument_list pos:line="580" pos:column="32">(<argument><expr><name pos:line="580" pos:column="33">ds</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="580" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="580" pos:column="40">4</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="581" pos:column="13">generic_string</name></type> <name pos:line="581" pos:column="28">mm</name><argument_list pos:line="581" pos:column="30">(<argument><expr><name pos:line="581" pos:column="31">ds</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="581" pos:column="35">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="581" pos:column="38">2</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="582" pos:column="13">generic_string</name></type> <name pos:line="582" pos:column="28">dd</name><argument_list pos:line="582" pos:column="30">(<argument><expr><name pos:line="582" pos:column="31">ds</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="582" pos:column="35">6</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="582" pos:column="38">2</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="584" pos:column="13">int</name></type> <name pos:line="584" pos:column="17">y</name> <init pos:line="584" pos:column="19">= <expr><call><name pos:line="584" pos:column="21">generic_atoi</name><argument_list pos:line="584" pos:column="33">(<argument><expr><call><name><name pos:line="584" pos:column="34">yyyy</name><op:operator pos:line="584" pos:column="38">.</op:operator><name pos:line="584" pos:column="39">c_str</name></name><argument_list pos:line="584" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="585" pos:column="13">int</name></type> <name pos:line="585" pos:column="17">m</name> <init pos:line="585" pos:column="19">= <expr><call><name pos:line="585" pos:column="21">generic_atoi</name><argument_list pos:line="585" pos:column="33">(<argument><expr><call><name><name pos:line="585" pos:column="34">mm</name><op:operator pos:line="585" pos:column="36">.</op:operator><name pos:line="585" pos:column="37">c_str</name></name><argument_list pos:line="585" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="586" pos:column="13">int</name></type> <name pos:line="586" pos:column="17">d</name> <init pos:line="586" pos:column="19">= <expr><call><name pos:line="586" pos:column="21">generic_atoi</name><argument_list pos:line="586" pos:column="33">(<argument><expr><call><name><name pos:line="586" pos:column="34">dd</name><op:operator pos:line="586" pos:column="36">.</op:operator><name pos:line="586" pos:column="37">c_str</name></name><argument_list pos:line="586" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="588" pos:column="13">if <condition pos:line="588" pos:column="16">(<expr><op:operator pos:line="588" pos:column="17">(</op:operator><name pos:line="588" pos:column="18">y</name> <op:operator pos:line="588" pos:column="20">&gt;</op:operator> <lit:literal type="number" pos:line="588" pos:column="22">0</lit:literal> <op:operator pos:line="588" pos:column="24">&amp;&amp;</op:operator> <name pos:line="588" pos:column="27">y</name> <op:operator pos:line="588" pos:column="29">&lt;=</op:operator> <lit:literal type="number" pos:line="588" pos:column="32">9999</lit:literal><op:operator pos:line="588" pos:column="36">)</op:operator> <op:operator pos:line="588" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="588" pos:column="41">(</op:operator><name pos:line="588" pos:column="42">m</name> <op:operator pos:line="588" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="588" pos:column="46">0</lit:literal> <op:operator pos:line="588" pos:column="48">&amp;&amp;</op:operator> <name pos:line="588" pos:column="51">m</name> <op:operator pos:line="588" pos:column="53">&lt;=</op:operator> <lit:literal type="number" pos:line="588" pos:column="56">12</lit:literal><op:operator pos:line="588" pos:column="58">)</op:operator> <op:operator pos:line="588" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="588" pos:column="63">(</op:operator><name pos:line="588" pos:column="64">d</name> <op:operator pos:line="588" pos:column="66">&gt;</op:operator> <lit:literal type="number" pos:line="588" pos:column="68">0</lit:literal> <op:operator pos:line="588" pos:column="70">&amp;&amp;</op:operator> <name pos:line="588" pos:column="73">d</name> <op:operator pos:line="588" pos:column="75">&lt;=</op:operator> <lit:literal type="number" pos:line="588" pos:column="78">31</lit:literal><op:operator pos:line="588" pos:column="80">)</op:operator></expr>)</condition><then pos:line="588" pos:column="82">
            <block pos:line="589" pos:column="13">{
                <expr_stmt><expr><name pos:line="590" pos:column="17">_year</name> <op:operator pos:line="590" pos:column="23">=</op:operator> <name pos:line="590" pos:column="25">y</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="591" pos:column="17">_month</name> <op:operator pos:line="591" pos:column="24">=</op:operator> <name pos:line="591" pos:column="26">m</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="592" pos:column="17">_day</name> <op:operator pos:line="592" pos:column="22">=</op:operator> <name pos:line="592" pos:column="24">d</name></expr>;</expr_stmt>
                <return pos:line="593" pos:column="17">return;</return>
            }</block></then></if>
        }</block></then></if>
        <expr_stmt><expr><call><name pos:line="596" pos:column="9">now</name><argument_list pos:line="596" pos:column="12">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor><empty_stmt pos:line="597" pos:column="6">;</empty_stmt>

    <comment type="line" pos:line="599" pos:column="5">// The constructor which makes the date of number of days from now</comment>
    <comment type="line" pos:line="600" pos:column="5">// nbDaysFromNow could be negative if user want to make a date in the past</comment>
    <comment type="line" pos:line="601" pos:column="5">// if the value of nbDaysFromNow is 0 then the date will be now</comment>
    <constructor><name pos:line="602" pos:column="5">Date</name><parameter_list pos:line="602" pos:column="9">(<param><decl><type><name pos:line="602" pos:column="10">int</name></type> <name pos:line="602" pos:column="14">nbDaysFromNow</name></decl></param>)</parameter_list>
    <block pos:line="603" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="604" pos:column="9">const</specifier> <name pos:line="604" pos:column="15">time_t</name></type> <name pos:line="604" pos:column="22">oneDay</name> <init pos:line="604" pos:column="29">= <expr><op:operator pos:line="604" pos:column="31">(</op:operator><lit:literal type="number" pos:line="604" pos:column="32">60</lit:literal> <op:operator pos:line="604" pos:column="35">*</op:operator> <lit:literal type="number" pos:line="604" pos:column="37">60</lit:literal> <op:operator pos:line="604" pos:column="40">*</op:operator> <lit:literal type="number" pos:line="604" pos:column="42">24</lit:literal><op:operator pos:line="604" pos:column="44">)</op:operator></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="606" pos:column="9">time_t</name></type> <name pos:line="606" pos:column="16">rawtime</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="607" pos:column="9">tm</name><type:modifier pos:line="607" pos:column="11">*</type:modifier></type> <name pos:line="607" pos:column="13">timeinfo</name></decl>;</decl_stmt>
            
        <expr_stmt><expr><call><name pos:line="609" pos:column="9">time</name><argument_list pos:line="609" pos:column="13">(<argument><expr><op:operator pos:line="609" pos:column="14">&amp;</op:operator><name pos:line="609" pos:column="15">rawtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="610" pos:column="9">rawtime</name> <op:operator pos:line="610" pos:column="17">+=</op:operator> <op:operator pos:line="610" pos:column="20">(</op:operator><name pos:line="610" pos:column="21">nbDaysFromNow</name> <op:operator pos:line="610" pos:column="35">*</op:operator> <name pos:line="610" pos:column="37">oneDay</name><op:operator pos:line="610" pos:column="43">)</op:operator></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="612" pos:column="9">timeinfo</name> <op:operator pos:line="612" pos:column="18">=</op:operator> <call><name pos:line="612" pos:column="20">localtime</name><argument_list pos:line="612" pos:column="29">(<argument><expr><op:operator pos:line="612" pos:column="30">&amp;</op:operator><name pos:line="612" pos:column="31">rawtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="614" pos:column="9">_year</name> <op:operator pos:line="614" pos:column="15">=</op:operator> <name><name pos:line="614" pos:column="17">timeinfo</name><op:operator pos:line="614" pos:column="25">-&gt;</op:operator><name pos:line="614" pos:column="27">tm_year</name></name><op:operator pos:line="614" pos:column="34">+</op:operator><lit:literal type="number" pos:line="614" pos:column="35">1900</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="615" pos:column="9">_month</name> <op:operator pos:line="615" pos:column="16">=</op:operator> <name><name pos:line="615" pos:column="18">timeinfo</name><op:operator pos:line="615" pos:column="26">-&gt;</op:operator><name pos:line="615" pos:column="28">tm_mon</name></name><op:operator pos:line="615" pos:column="34">+</op:operator><lit:literal type="number" pos:line="615" pos:column="35">1</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="616" pos:column="9">_day</name> <op:operator pos:line="616" pos:column="14">=</op:operator> <name><name pos:line="616" pos:column="16">timeinfo</name><op:operator pos:line="616" pos:column="24">-&gt;</op:operator><name pos:line="616" pos:column="26">tm_mday</name></name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><name pos:line="619" pos:column="5">void</name></type> <name pos:line="619" pos:column="10">now</name><parameter_list pos:line="619" pos:column="13">()</parameter_list> <block pos:line="619" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="620" pos:column="9">time_t</name></type> <name pos:line="620" pos:column="16">rawtime</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="621" pos:column="9">tm</name><type:modifier pos:line="621" pos:column="11">*</type:modifier></type> <name pos:line="621" pos:column="13">timeinfo</name></decl>;</decl_stmt>
            
        <expr_stmt><expr><call><name pos:line="623" pos:column="9">time</name><argument_list pos:line="623" pos:column="13">(<argument><expr><op:operator pos:line="623" pos:column="14">&amp;</op:operator><name pos:line="623" pos:column="15">rawtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="624" pos:column="9">timeinfo</name> <op:operator pos:line="624" pos:column="18">=</op:operator> <call><name pos:line="624" pos:column="20">localtime</name><argument_list pos:line="624" pos:column="29">(<argument><expr><op:operator pos:line="624" pos:column="30">&amp;</op:operator><name pos:line="624" pos:column="31">rawtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="626" pos:column="9">_year</name> <op:operator pos:line="626" pos:column="15">=</op:operator> <name><name pos:line="626" pos:column="17">timeinfo</name><op:operator pos:line="626" pos:column="25">-&gt;</op:operator><name pos:line="626" pos:column="27">tm_year</name></name><op:operator pos:line="626" pos:column="34">+</op:operator><lit:literal type="number" pos:line="626" pos:column="35">1900</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="627" pos:column="9">_month</name> <op:operator pos:line="627" pos:column="16">=</op:operator> <name><name pos:line="627" pos:column="18">timeinfo</name><op:operator pos:line="627" pos:column="26">-&gt;</op:operator><name pos:line="627" pos:column="28">tm_mon</name></name><op:operator pos:line="627" pos:column="34">+</op:operator><lit:literal type="number" pos:line="627" pos:column="35">1</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="628" pos:column="9">_day</name> <op:operator pos:line="628" pos:column="14">=</op:operator> <name><name pos:line="628" pos:column="16">timeinfo</name><op:operator pos:line="628" pos:column="24">-&gt;</op:operator><name pos:line="628" pos:column="26">tm_mday</name></name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="629" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="631" pos:column="5">generic_string</name></type> <name pos:line="631" pos:column="20">toString</name><parameter_list pos:line="631" pos:column="28">()</parameter_list> <block pos:line="631" pos:column="31">{ <comment type="line" pos:line="631" pos:column="33">// Return Notepad++ date format : YYYYMMDD</comment>
        <decl_stmt><decl><type><name pos:line="632" pos:column="9">TCHAR</name></type> <name><name pos:line="632" pos:column="15">dateStr</name><index pos:line="632" pos:column="22">[<expr><lit:literal type="number" pos:line="632" pos:column="23">8</lit:literal><op:operator pos:line="632" pos:column="24">+</op:operator><lit:literal type="number" pos:line="632" pos:column="25">1</lit:literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="633" pos:column="9">wsprintf</name><argument_list pos:line="633" pos:column="17">(<argument><expr><name pos:line="633" pos:column="18">dateStr</name></expr></argument>, <argument><expr><call><name pos:line="633" pos:column="27">TEXT</name><argument_list pos:line="633" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="633" pos:column="32">"%04d%02d%02d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="633" pos:column="49">_year</name></expr></argument>, <argument><expr><name pos:line="633" pos:column="56">_month</name></expr></argument>, <argument><expr><name pos:line="633" pos:column="64">_day</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="634" pos:column="9">return <expr><name pos:line="634" pos:column="16">dateStr</name></expr>;</return>
    }</block></function><empty_stmt pos:line="635" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="637" pos:column="5">bool</name></type> <name pos:line="637" pos:column="10">operator&lt;</name><parameter_list pos:line="637" pos:column="19">(<param><decl><type><specifier pos:line="637" pos:column="20">const</specifier> <name pos:line="637" pos:column="26">Date</name> <type:modifier pos:line="637" pos:column="31">&amp;</type:modifier></type> <name pos:line="637" pos:column="33">compare</name></decl></param>)</parameter_list> <specifier pos:line="637" pos:column="42">const</specifier> <block pos:line="637" pos:column="48">{
        <if pos:line="638" pos:column="9">if <condition pos:line="638" pos:column="12">(<expr><name><name pos:line="638" pos:column="13">this</name><op:operator pos:line="638" pos:column="17">-&gt;</op:operator><name pos:line="638" pos:column="19">_year</name></name> <op:operator pos:line="638" pos:column="25">!=</op:operator> <name><name pos:line="638" pos:column="28">compare</name><op:operator pos:line="638" pos:column="35">.</op:operator><name pos:line="638" pos:column="36">_year</name></name></expr>)</condition><then pos:line="638" pos:column="42">
            <return pos:line="639" pos:column="13">return <expr><op:operator pos:line="639" pos:column="20">(</op:operator><name><name pos:line="639" pos:column="21">this</name><op:operator pos:line="639" pos:column="25">-&gt;</op:operator><name pos:line="639" pos:column="27">_year</name></name> <op:operator pos:line="639" pos:column="33">&lt;</op:operator> <name><name pos:line="639" pos:column="35">compare</name><op:operator pos:line="639" pos:column="42">.</op:operator><name pos:line="639" pos:column="43">_year</name></name><op:operator pos:line="639" pos:column="48">)</op:operator></expr>;</return></then></if>
        <if pos:line="640" pos:column="9">if <condition pos:line="640" pos:column="12">(<expr><name><name pos:line="640" pos:column="13">this</name><op:operator pos:line="640" pos:column="17">-&gt;</op:operator><name pos:line="640" pos:column="19">_month</name></name> <op:operator pos:line="640" pos:column="26">!=</op:operator> <name><name pos:line="640" pos:column="29">compare</name><op:operator pos:line="640" pos:column="36">.</op:operator><name pos:line="640" pos:column="37">_month</name></name></expr>)</condition><then pos:line="640" pos:column="44">
            <return pos:line="641" pos:column="13">return <expr><op:operator pos:line="641" pos:column="20">(</op:operator><name><name pos:line="641" pos:column="21">this</name><op:operator pos:line="641" pos:column="25">-&gt;</op:operator><name pos:line="641" pos:column="27">_month</name></name> <op:operator pos:line="641" pos:column="34">&lt;</op:operator> <name><name pos:line="641" pos:column="36">compare</name><op:operator pos:line="641" pos:column="43">.</op:operator><name pos:line="641" pos:column="44">_month</name></name><op:operator pos:line="641" pos:column="50">)</op:operator></expr>;</return></then></if>
        <return pos:line="642" pos:column="9">return <expr><op:operator pos:line="642" pos:column="16">(</op:operator><name><name pos:line="642" pos:column="17">this</name><op:operator pos:line="642" pos:column="21">-&gt;</op:operator><name pos:line="642" pos:column="23">_day</name></name> <op:operator pos:line="642" pos:column="28">&lt;</op:operator> <name><name pos:line="642" pos:column="30">compare</name><op:operator pos:line="642" pos:column="37">.</op:operator><name pos:line="642" pos:column="38">_day</name></name><op:operator pos:line="642" pos:column="42">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="643" pos:column="6">;</empty_stmt>
    <function><type><name pos:line="644" pos:column="5">bool</name></type> <name pos:line="644" pos:column="10">operator&gt;</name><parameter_list pos:line="644" pos:column="19">(<param><decl><type><specifier pos:line="644" pos:column="20">const</specifier> <name pos:line="644" pos:column="26">Date</name> <type:modifier pos:line="644" pos:column="31">&amp;</type:modifier></type> <name pos:line="644" pos:column="33">compare</name></decl></param>)</parameter_list> <specifier pos:line="644" pos:column="42">const</specifier> <block pos:line="644" pos:column="48">{
        <if pos:line="645" pos:column="9">if <condition pos:line="645" pos:column="12">(<expr><name><name pos:line="645" pos:column="13">this</name><op:operator pos:line="645" pos:column="17">-&gt;</op:operator><name pos:line="645" pos:column="19">_year</name></name> <op:operator pos:line="645" pos:column="25">!=</op:operator> <name><name pos:line="645" pos:column="28">compare</name><op:operator pos:line="645" pos:column="35">.</op:operator><name pos:line="645" pos:column="36">_year</name></name></expr>)</condition><then pos:line="645" pos:column="42">
            <return pos:line="646" pos:column="13">return <expr><op:operator pos:line="646" pos:column="20">(</op:operator><name><name pos:line="646" pos:column="21">this</name><op:operator pos:line="646" pos:column="25">-&gt;</op:operator><name pos:line="646" pos:column="27">_year</name></name> <op:operator pos:line="646" pos:column="33">&gt;</op:operator> <name><name pos:line="646" pos:column="35">compare</name><op:operator pos:line="646" pos:column="42">.</op:operator><name pos:line="646" pos:column="43">_year</name></name><op:operator pos:line="646" pos:column="48">)</op:operator></expr>;</return></then></if>
        <if pos:line="647" pos:column="9">if <condition pos:line="647" pos:column="12">(<expr><name><name pos:line="647" pos:column="13">this</name><op:operator pos:line="647" pos:column="17">-&gt;</op:operator><name pos:line="647" pos:column="19">_month</name></name> <op:operator pos:line="647" pos:column="26">!=</op:operator> <name><name pos:line="647" pos:column="29">compare</name><op:operator pos:line="647" pos:column="36">.</op:operator><name pos:line="647" pos:column="37">_month</name></name></expr>)</condition><then pos:line="647" pos:column="44">
            <return pos:line="648" pos:column="13">return <expr><op:operator pos:line="648" pos:column="20">(</op:operator><name><name pos:line="648" pos:column="21">this</name><op:operator pos:line="648" pos:column="25">-&gt;</op:operator><name pos:line="648" pos:column="27">_month</name></name> <op:operator pos:line="648" pos:column="34">&gt;</op:operator> <name><name pos:line="648" pos:column="36">compare</name><op:operator pos:line="648" pos:column="43">.</op:operator><name pos:line="648" pos:column="44">_month</name></name><op:operator pos:line="648" pos:column="50">)</op:operator></expr>;</return></then></if>
        <return pos:line="649" pos:column="9">return <expr><op:operator pos:line="649" pos:column="16">(</op:operator><name><name pos:line="649" pos:column="17">this</name><op:operator pos:line="649" pos:column="21">-&gt;</op:operator><name pos:line="649" pos:column="23">_day</name></name> <op:operator pos:line="649" pos:column="28">&gt;</op:operator> <name><name pos:line="649" pos:column="30">compare</name><op:operator pos:line="649" pos:column="37">.</op:operator><name pos:line="649" pos:column="38">_day</name></name><op:operator pos:line="649" pos:column="42">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="650" pos:column="6">;</empty_stmt>
    <function><type><name pos:line="651" pos:column="5">bool</name></type> <name pos:line="651" pos:column="10">operator==</name><parameter_list pos:line="651" pos:column="20">(<param><decl><type><specifier pos:line="651" pos:column="21">const</specifier> <name pos:line="651" pos:column="27">Date</name> <type:modifier pos:line="651" pos:column="32">&amp;</type:modifier></type> <name pos:line="651" pos:column="34">compare</name></decl></param>)</parameter_list> <specifier pos:line="651" pos:column="43">const</specifier> <block pos:line="651" pos:column="49">{
        <if pos:line="652" pos:column="9">if <condition pos:line="652" pos:column="12">(<expr><name><name pos:line="652" pos:column="13">this</name><op:operator pos:line="652" pos:column="17">-&gt;</op:operator><name pos:line="652" pos:column="19">_year</name></name> <op:operator pos:line="652" pos:column="25">!=</op:operator> <name><name pos:line="652" pos:column="28">compare</name><op:operator pos:line="652" pos:column="35">.</op:operator><name pos:line="652" pos:column="36">_year</name></name></expr>)</condition><then pos:line="652" pos:column="42">
            <return pos:line="653" pos:column="13">return <expr><lit:literal type="boolean" pos:line="653" pos:column="20">false</lit:literal></expr>;</return></then></if>
        <if pos:line="654" pos:column="9">if <condition pos:line="654" pos:column="12">(<expr><name><name pos:line="654" pos:column="13">this</name><op:operator pos:line="654" pos:column="17">-&gt;</op:operator><name pos:line="654" pos:column="19">_month</name></name> <op:operator pos:line="654" pos:column="26">!=</op:operator> <name><name pos:line="654" pos:column="29">compare</name><op:operator pos:line="654" pos:column="36">.</op:operator><name pos:line="654" pos:column="37">_month</name></name></expr>)</condition><then pos:line="654" pos:column="44">
            <return pos:line="655" pos:column="13">return <expr><lit:literal type="boolean" pos:line="655" pos:column="20">false</lit:literal></expr>;</return></then></if>
        <return pos:line="656" pos:column="9">return <expr><op:operator pos:line="656" pos:column="16">(</op:operator><name><name pos:line="656" pos:column="17">this</name><op:operator pos:line="656" pos:column="21">-&gt;</op:operator><name pos:line="656" pos:column="23">_day</name></name> <op:operator pos:line="656" pos:column="28">==</op:operator> <name><name pos:line="656" pos:column="31">compare</name><op:operator pos:line="656" pos:column="38">.</op:operator><name pos:line="656" pos:column="39">_day</name></name><op:operator pos:line="656" pos:column="43">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="657" pos:column="6">;</empty_stmt>
    <function><type><name pos:line="658" pos:column="5">bool</name></type> <name pos:line="658" pos:column="10">operator!=</name><parameter_list pos:line="658" pos:column="20">(<param><decl><type><specifier pos:line="658" pos:column="21">const</specifier> <name pos:line="658" pos:column="27">Date</name> <type:modifier pos:line="658" pos:column="32">&amp;</type:modifier></type> <name pos:line="658" pos:column="34">compare</name></decl></param>)</parameter_list> <specifier pos:line="658" pos:column="43">const</specifier> <block pos:line="658" pos:column="49">{
        <if pos:line="659" pos:column="9">if <condition pos:line="659" pos:column="12">(<expr><name><name pos:line="659" pos:column="13">this</name><op:operator pos:line="659" pos:column="17">-&gt;</op:operator><name pos:line="659" pos:column="19">_year</name></name> <op:operator pos:line="659" pos:column="25">!=</op:operator> <name><name pos:line="659" pos:column="28">compare</name><op:operator pos:line="659" pos:column="35">.</op:operator><name pos:line="659" pos:column="36">_year</name></name></expr>)</condition><then pos:line="659" pos:column="42">
            <return pos:line="660" pos:column="13">return <expr><lit:literal type="boolean" pos:line="660" pos:column="20">true</lit:literal></expr>;</return></then></if>
        <if pos:line="661" pos:column="9">if <condition pos:line="661" pos:column="12">(<expr><name><name pos:line="661" pos:column="13">this</name><op:operator pos:line="661" pos:column="17">-&gt;</op:operator><name pos:line="661" pos:column="19">_month</name></name> <op:operator pos:line="661" pos:column="26">!=</op:operator> <name><name pos:line="661" pos:column="29">compare</name><op:operator pos:line="661" pos:column="36">.</op:operator><name pos:line="661" pos:column="37">_month</name></name></expr>)</condition><then pos:line="661" pos:column="44">
            <return pos:line="662" pos:column="13">return <expr><lit:literal type="boolean" pos:line="662" pos:column="20">true</lit:literal></expr>;</return></then></if>
        <return pos:line="663" pos:column="9">return <expr><op:operator pos:line="663" pos:column="16">(</op:operator><name><name pos:line="663" pos:column="17">this</name><op:operator pos:line="663" pos:column="21">-&gt;</op:operator><name pos:line="663" pos:column="23">_day</name></name> <op:operator pos:line="663" pos:column="28">!=</op:operator> <name><name pos:line="663" pos:column="31">compare</name><op:operator pos:line="663" pos:column="38">.</op:operator><name pos:line="663" pos:column="39">_day</name></name><op:operator pos:line="663" pos:column="43">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="664" pos:column="6">;</empty_stmt>

</public><private pos:line="666" pos:column="1">private:
    <decl_stmt><decl><type><name pos:line="667" pos:column="5">unsigned</name> <name pos:line="667" pos:column="14">long</name></type> <name pos:line="667" pos:column="19">_year</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="668" pos:column="5">unsigned</name> <name pos:line="668" pos:column="14">long</name></type> <name pos:line="668" pos:column="19">_month</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="669" pos:column="5">unsigned</name> <name pos:line="669" pos:column="14">long</name></type> <name pos:line="669" pos:column="19">_day</name></decl>;</decl_stmt>
</private>}</block>;</class>

<struct pos:line="672" pos:column="1">struct <name pos:line="672" pos:column="8">NppGUI</name>
<block pos:line="673" pos:column="1">{<public type="default" pos:line="673" pos:column="2">
	<constructor><name pos:line="674" pos:column="9">NppGUI</name><parameter_list pos:line="674" pos:column="15">()</parameter_list> <member_list pos:line="674" pos:column="18">: <call><name pos:line="674" pos:column="20">_toolBarStatus</name><argument_list pos:line="674" pos:column="34">(<argument><expr><name pos:line="674" pos:column="35">TB_LARGE</name></expr></argument>)</argument_list></call><op:operator pos:line="674" pos:column="44">,</op:operator> <call><name pos:line="674" pos:column="46">_toolbarShow</name><argument_list pos:line="674" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="674" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="674" pos:column="64">,</op:operator> <call><name pos:line="674" pos:column="66">_statusBarShow</name><argument_list pos:line="674" pos:column="80">(<argument><expr><lit:literal type="boolean" pos:line="674" pos:column="81">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="674" pos:column="86">,</op:operator> <call><name pos:line="674" pos:column="88">_menuBarShow</name><argument_list pos:line="674" pos:column="100">(<argument><expr><lit:literal type="boolean" pos:line="674" pos:column="101">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="674" pos:column="106">,</op:operator>\
		       <call><name pos:line="675" pos:column="24">_tabStatus</name><argument_list pos:line="675" pos:column="34">(<argument><expr><name pos:line="675" pos:column="35">TAB_DRAWTOPBAR</name> <op:operator pos:line="675" pos:column="50">|</op:operator> <name pos:line="675" pos:column="52">TAB_DRAWINACTIVETAB</name> <op:operator pos:line="675" pos:column="72">|</op:operator> <name pos:line="675" pos:column="74">TAB_DRAGNDROP</name></expr></argument>)</argument_list></call><op:operator pos:line="675" pos:column="88">,</op:operator> <call><name pos:line="675" pos:column="90">_splitterPos</name><argument_list pos:line="675" pos:column="102">(<argument><expr><name pos:line="675" pos:column="103">POS_HORIZOTAL</name></expr></argument>)</argument_list></call><op:operator pos:line="675" pos:column="117">,</op:operator>\
	           <call><name pos:line="676" pos:column="20">_userDefineDlgStatus</name><argument_list pos:line="676" pos:column="40">(<argument><expr><name pos:line="676" pos:column="41">UDD_DOCKED</name></expr></argument>)</argument_list></call><op:operator pos:line="676" pos:column="52">,</op:operator> <call><name pos:line="676" pos:column="54">_tabSize</name><argument_list pos:line="676" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="676" pos:column="63">8</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="676" pos:column="65">,</op:operator> <call><name pos:line="676" pos:column="67">_tabReplacedBySpace</name><argument_list pos:line="676" pos:column="86">(<argument><expr><lit:literal type="boolean" pos:line="676" pos:column="87">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="676" pos:column="93">,</op:operator> <call><name pos:line="676" pos:column="95">_fileAutoDetection</name><argument_list pos:line="676" pos:column="113">(<argument><expr><name pos:line="676" pos:column="114">cdEnabled</name></expr></argument>)</argument_list></call><op:operator pos:line="676" pos:column="124">,</op:operator> <call><name pos:line="676" pos:column="126">_fileAutoDetectionOriginalValue</name><argument_list pos:line="676" pos:column="157">(<argument><expr><name pos:line="676" pos:column="158">_fileAutoDetection</name></expr></argument>)</argument_list></call><op:operator pos:line="676" pos:column="177">,</op:operator>\
			   <call><name pos:line="677" pos:column="28">_checkHistoryFiles</name><argument_list pos:line="677" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="677" pos:column="53">,</op:operator><call><name pos:line="677" pos:column="54">_enableSmartHilite</name><argument_list pos:line="677" pos:column="72">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="73">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="677" pos:column="78">,</op:operator> <call><name pos:line="677" pos:column="80">_disableSmartHiliteTmp</name><argument_list pos:line="677" pos:column="102">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="677" pos:column="109">,</op:operator> <call><name pos:line="677" pos:column="111">_enableTagsMatchHilite</name><argument_list pos:line="677" pos:column="133">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="134">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="677" pos:column="139">,</op:operator> <call><name pos:line="677" pos:column="141">_enableTagAttrsHilite</name><argument_list pos:line="677" pos:column="162">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="163">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="677" pos:column="168">,</op:operator> <call><name pos:line="677" pos:column="170">_enableHiliteNonHTMLZone</name><argument_list pos:line="677" pos:column="194">(<argument><expr><lit:literal type="boolean" pos:line="677" pos:column="195">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="677" pos:column="201">,</op:operator>\
			   <call><name pos:line="678" pos:column="28">_isMaximized</name><argument_list pos:line="678" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="678" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="47">,</op:operator> <call><name pos:line="678" pos:column="49">_isMinimizedToTray</name><argument_list pos:line="678" pos:column="67">(<argument><expr><lit:literal type="boolean" pos:line="678" pos:column="68">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="74">,</op:operator> <call><name pos:line="678" pos:column="76">_rememberLastSession</name><argument_list pos:line="678" pos:column="96">(<argument><expr><lit:literal type="boolean" pos:line="678" pos:column="97">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="102">,</op:operator> <call><name pos:line="678" pos:column="104">_backup</name><argument_list pos:line="678" pos:column="111">(<argument><expr><name pos:line="678" pos:column="112">bak_none</name></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="121">,</op:operator> <call><name pos:line="678" pos:column="123">_useDir</name><argument_list pos:line="678" pos:column="130">(<argument><expr><lit:literal type="boolean" pos:line="678" pos:column="131">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="137">,</op:operator> <call><name pos:line="678" pos:column="139">_backupDir</name><argument_list pos:line="678" pos:column="149">(<argument><expr><call><name pos:line="678" pos:column="150">TEXT</name><argument_list pos:line="678" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="678" pos:column="155">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="678" pos:column="159">,</op:operator>\
			   <call><name pos:line="679" pos:column="28">_doTaskList</name><argument_list pos:line="679" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="679" pos:column="40">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="679" pos:column="45">,</op:operator> <call><name pos:line="679" pos:column="47">_maitainIndent</name><argument_list pos:line="679" pos:column="61">(<argument><expr><lit:literal type="boolean" pos:line="679" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="679" pos:column="67">,</op:operator> <call><name pos:line="679" pos:column="69">_openSaveDir</name><argument_list pos:line="679" pos:column="81">(<argument><expr><name pos:line="679" pos:column="82">dir_followCurrent</name></expr></argument>)</argument_list></call><op:operator pos:line="679" pos:column="100">,</op:operator> <call><name pos:line="679" pos:column="102">_styleMRU</name><argument_list pos:line="679" pos:column="111">(<argument><expr><lit:literal type="boolean" pos:line="679" pos:column="112">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="679" pos:column="117">,</op:operator> <call><name pos:line="679" pos:column="119">_styleURL</name><argument_list pos:line="679" pos:column="128">(<argument><expr><lit:literal type="number" pos:line="679" pos:column="129">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="679" pos:column="131">,</op:operator>\
			   <call><name pos:line="680" pos:column="28">_autocStatus</name><argument_list pos:line="680" pos:column="40">(<argument><expr><name pos:line="680" pos:column="41">autoc_none</name></expr></argument>)</argument_list></call><op:operator pos:line="680" pos:column="52">,</op:operator> <call><name pos:line="680" pos:column="54">_autocFromLen</name><argument_list pos:line="680" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="680" pos:column="68">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="680" pos:column="70">,</op:operator> <call><name pos:line="680" pos:column="72">_funcParams</name><argument_list pos:line="680" pos:column="83">(<argument><expr><lit:literal type="boolean" pos:line="680" pos:column="84">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="680" pos:column="90">,</op:operator> <call><name pos:line="680" pos:column="92">_definedSessionExt</name><argument_list pos:line="680" pos:column="110">(<argument><expr><call><name pos:line="680" pos:column="111">TEXT</name><argument_list pos:line="680" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="680" pos:column="116">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="680" pos:column="120">,</op:operator>\
			   <call><name pos:line="681" pos:column="28">_doesExistUpdater</name><argument_list pos:line="681" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="681" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="52">,</op:operator> <call><name pos:line="681" pos:column="54">_caretBlinkRate</name><argument_list pos:line="681" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="681" pos:column="70">250</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="74">,</op:operator> <call><name pos:line="681" pos:column="76">_caretWidth</name><argument_list pos:line="681" pos:column="87">(<argument><expr><lit:literal type="number" pos:line="681" pos:column="88">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="90">,</op:operator> <call><name pos:line="681" pos:column="92">_enableMultiSelection</name><argument_list pos:line="681" pos:column="113">(<argument><expr><lit:literal type="boolean" pos:line="681" pos:column="114">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="120">,</op:operator> <call><name pos:line="681" pos:column="122">_shortTitlebar</name><argument_list pos:line="681" pos:column="136">(<argument><expr><lit:literal type="boolean" pos:line="681" pos:column="137">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="143">,</op:operator> <call><name pos:line="681" pos:column="145">_themeName</name><argument_list pos:line="681" pos:column="155">(<argument><expr><call><name pos:line="681" pos:column="156">TEXT</name><argument_list pos:line="681" pos:column="160">(<argument><expr><lit:literal type="string" pos:line="681" pos:column="161">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="165">,</op:operator> <call><name pos:line="681" pos:column="167">_isLangMenuCompact</name><argument_list pos:line="681" pos:column="185">(<argument><expr><lit:literal type="boolean" pos:line="681" pos:column="186">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="681" pos:column="192">,</op:operator>
			   <call><name pos:line="682" pos:column="28">_smartHiliteCaseSensitive</name><argument_list pos:line="682" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="682" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="682" pos:column="61">{
		<expr_stmt><expr><name><name pos:line="683" pos:column="17">_appPos</name><op:operator pos:line="683" pos:column="24">.</op:operator><name pos:line="683" pos:column="25">left</name></name> <op:operator pos:line="683" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="683" pos:column="32">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="684" pos:column="17">_appPos</name><op:operator pos:line="684" pos:column="24">.</op:operator><name pos:line="684" pos:column="25">top</name></name> <op:operator pos:line="684" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="684" pos:column="31">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="685" pos:column="17">_appPos</name><op:operator pos:line="685" pos:column="24">.</op:operator><name pos:line="685" pos:column="25">right</name></name> <op:operator pos:line="685" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="685" pos:column="33">700</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="686" pos:column="17">_appPos</name><op:operator pos:line="686" pos:column="24">.</op:operator><name pos:line="686" pos:column="25">bottom</name></name> <op:operator pos:line="686" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="686" pos:column="34">500</lit:literal></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="688" pos:column="17">_defaultDir</name><index pos:line="688" pos:column="28">[<expr><lit:literal type="number" pos:line="688" pos:column="29">0</lit:literal></expr>]</index></name> <op:operator pos:line="688" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="688" pos:column="34">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="689" pos:column="17">_defaultDirExp</name><index pos:line="689" pos:column="31">[<expr><lit:literal type="number" pos:line="689" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="689" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="689" pos:column="37">0</lit:literal></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="690" pos:column="10">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="691" pos:column="9">toolBarStatusType</name></type> <name pos:line="691" pos:column="27">_toolBarStatus</name></decl>;</decl_stmt>		<comment type="line" pos:line="691" pos:column="57">// small, large ou standard</comment>
	<decl_stmt><decl><type><name pos:line="692" pos:column="9">bool</name></type> <name pos:line="692" pos:column="14">_toolbarShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="693" pos:column="9">bool</name></type> <name pos:line="693" pos:column="14">_statusBarShow</name></decl>;</decl_stmt>		<comment type="line" pos:line="693" pos:column="41">// show ou hide</comment>
	<decl_stmt><decl><type><name pos:line="694" pos:column="9">bool</name></type> <name pos:line="694" pos:column="14">_menuBarShow</name></decl>;</decl_stmt>

	<comment type="line" pos:line="696" pos:column="9">// 1st bit : draw top bar; </comment>
	<comment type="line" pos:line="697" pos:column="9">// 2nd bit : draw inactive tabs</comment>
	<comment type="line" pos:line="698" pos:column="9">// 3rd bit : enable drag &amp; drop</comment>
	<comment type="line" pos:line="699" pos:column="9">// 4th bit : reduce the height</comment>
	<comment type="line" pos:line="700" pos:column="9">// 5th bit : enable vertical</comment>
	<comment type="line" pos:line="701" pos:column="9">// 6th bit : enable multiline</comment>

	<comment type="line" pos:line="703" pos:column="9">// 0:don't draw; 1:draw top bar 2:draw inactive tabs 3:draw both 7:draw both+drag&amp;drop</comment>
	<decl_stmt><decl><type><name pos:line="704" pos:column="9">int</name></type> <name pos:line="704" pos:column="13">_tabStatus</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="706" pos:column="9">bool</name></type> <name pos:line="706" pos:column="14">_splitterPos</name></decl>;</decl_stmt>			<comment type="line" pos:line="706" pos:column="49">// horizontal ou vertical</comment>
	<decl_stmt><decl><type><name pos:line="707" pos:column="9">int</name></type> <name pos:line="707" pos:column="13">_userDefineDlgStatus</name></decl>;</decl_stmt>	<comment type="line" pos:line="707" pos:column="41">// (hide||show) &amp;&amp; (docked||undocked)</comment>

	<decl_stmt><decl><type><name pos:line="709" pos:column="9">int</name></type> <name pos:line="709" pos:column="13">_tabSize</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="710" pos:column="9">bool</name></type> <name pos:line="710" pos:column="14">_tabReplacedBySpace</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="712" pos:column="9">ChangeDetect</name></type> <name pos:line="712" pos:column="22">_fileAutoDetection</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="713" pos:column="9">ChangeDetect</name></type> <name pos:line="713" pos:column="22">_fileAutoDetectionOriginalValue</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="714" pos:column="9">bool</name></type> <name pos:line="714" pos:column="14">_checkHistoryFiles</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="716" pos:column="9">RECT</name></type> <name pos:line="716" pos:column="14">_appPos</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="718" pos:column="9">bool</name></type> <name pos:line="718" pos:column="14">_isMaximized</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="719" pos:column="9">bool</name></type> <name pos:line="719" pos:column="14">_isMinimizedToTray</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="720" pos:column="9">bool</name></type> <name pos:line="720" pos:column="14">_rememberLastSession</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="721" pos:column="9">bool</name></type> <name pos:line="721" pos:column="14">_doTaskList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="722" pos:column="9">bool</name></type> <name pos:line="722" pos:column="14">_maitainIndent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="723" pos:column="9">bool</name></type> <name pos:line="723" pos:column="14">_enableSmartHilite</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="724" pos:column="9">bool</name></type> <name pos:line="724" pos:column="14">_smartHiliteCaseSensitive</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="725" pos:column="9">bool</name></type> <name pos:line="725" pos:column="14">_disableSmartHiliteTmp</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="726" pos:column="9">bool</name></type> <name pos:line="726" pos:column="14">_enableTagsMatchHilite</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="727" pos:column="9">bool</name></type> <name pos:line="727" pos:column="14">_enableTagAttrsHilite</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="728" pos:column="9">bool</name></type> <name pos:line="728" pos:column="14">_enableHiliteNonHTMLZone</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="729" pos:column="9">bool</name></type> <name pos:line="729" pos:column="14">_styleMRU</name></decl>;</decl_stmt>

	<comment type="line" pos:line="731" pos:column="9">// 0 : do nothing</comment>
	<comment type="line" pos:line="732" pos:column="9">// 1 : don't draw underline</comment>
	<comment type="line" pos:line="733" pos:column="9">// 2 : draw underline</comment>
	<decl_stmt><decl><type><name pos:line="734" pos:column="9">int</name></type> <name pos:line="734" pos:column="13">_styleURL</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="736" pos:column="9">NewDocDefaultSettings</name></type> <name pos:line="736" pos:column="31">_newDocDefaultSettings</name></decl>;</decl_stmt>
	<function><type><name pos:line="737" pos:column="9">void</name></type> <name pos:line="737" pos:column="14">setTabReplacedBySpace</name><parameter_list pos:line="737" pos:column="35">(<param><decl><type><name pos:line="737" pos:column="36">bool</name></type> <name pos:line="737" pos:column="41">b</name></decl></param>)</parameter_list> <block pos:line="737" pos:column="44">{<expr_stmt><expr><name pos:line="737" pos:column="45">_tabReplacedBySpace</name> <op:operator pos:line="737" pos:column="65">=</op:operator> <name pos:line="737" pos:column="67">b</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="737" pos:column="70">;</empty_stmt>
	<function><type><specifier pos:line="738" pos:column="9">const</specifier> <name pos:line="738" pos:column="15">NewDocDefaultSettings</name> <type:modifier pos:line="738" pos:column="37">&amp;</type:modifier></type> <name pos:line="738" pos:column="39">getNewDocDefaultSettings</name><parameter_list pos:line="738" pos:column="63">()</parameter_list> <specifier pos:line="738" pos:column="66">const</specifier> <block pos:line="738" pos:column="72">{<return pos:line="738" pos:column="73">return <expr><name pos:line="738" pos:column="80">_newDocDefaultSettings</name></expr>;</return>}</block></function><empty_stmt pos:line="738" pos:column="104">;</empty_stmt>
	<decl_stmt><decl><type><name><name pos:line="739" pos:column="9">vector</name><argument_list pos:line="739" pos:column="15">&lt;<argument><expr><name pos:line="739" pos:column="16">LangMenuItem</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="739" pos:column="30">_excludedLangList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="740" pos:column="9">bool</name></type> <name pos:line="740" pos:column="14">_isLangMenuCompact</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="742" pos:column="9">PrintSettings</name></type> <name pos:line="742" pos:column="23">_printSettings</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="743" pos:column="9">BackupFeature</name></type> <name pos:line="743" pos:column="23">_backup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="744" pos:column="9">bool</name></type> <name pos:line="744" pos:column="14">_useDir</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="745" pos:column="9">generic_string</name></type> <name pos:line="745" pos:column="24">_backupDir</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="746" pos:column="9">DockingManagerData</name></type> <name pos:line="746" pos:column="28">_dockingData</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="747" pos:column="9">GlobalOverride</name></type> <name pos:line="747" pos:column="24">_globalOverride</name></decl>;</decl_stmt>
	<enum pos:line="748" pos:column="9">enum <name pos:line="748" pos:column="14">AutocStatus</name><block pos:line="748" pos:column="25">{<decl><name pos:line="748" pos:column="26">autoc_none</name></decl><op:operator pos:line="748" pos:column="36">,</op:operator> <decl><name pos:line="748" pos:column="38">autoc_func</name></decl><op:operator pos:line="748" pos:column="48">,</op:operator> <decl><name pos:line="748" pos:column="50">autoc_word</name></decl>}</block>;</enum>
	<decl_stmt><decl><type><name pos:line="749" pos:column="9">AutocStatus</name></type> <name pos:line="749" pos:column="21">_autocStatus</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="750" pos:column="9">size_t</name></type>  <name pos:line="750" pos:column="17">_autocFromLen</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="751" pos:column="9">bool</name></type> <name pos:line="751" pos:column="14">_funcParams</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="753" pos:column="9">generic_string</name></type> <name pos:line="753" pos:column="24">_definedSessionExt</name></decl>;</decl_stmt>
	

    
    <struct pos:line="757" pos:column="5">struct <name pos:line="757" pos:column="12">AutoUpdateOptions</name> <block pos:line="757" pos:column="30">{<public type="default" pos:line="757" pos:column="31">
        <decl_stmt><decl><type><name pos:line="758" pos:column="9">bool</name></type> <name pos:line="758" pos:column="14">_doAutoUpdate</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="759" pos:column="9">int</name></type> <name pos:line="759" pos:column="13">_intervalDays</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="760" pos:column="9">Date</name></type> <name pos:line="760" pos:column="14">_nextUpdateDate</name></decl>;</decl_stmt>
        <constructor><name pos:line="761" pos:column="9">AutoUpdateOptions</name><parameter_list pos:line="761" pos:column="26">()</parameter_list><member_list pos:line="761" pos:column="28">: <call><name pos:line="761" pos:column="30">_doAutoUpdate</name><argument_list pos:line="761" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="761" pos:column="44">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="761" pos:column="49">,</op:operator> <call><name pos:line="761" pos:column="51">_intervalDays</name><argument_list pos:line="761" pos:column="64">(<argument><expr><lit:literal type="number" pos:line="761" pos:column="65">15</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="761" pos:column="68">,</op:operator> <call><name pos:line="761" pos:column="70">_nextUpdateDate</name><argument_list pos:line="761" pos:column="85">(<argument><expr><call><name pos:line="761" pos:column="86">Date</name><argument_list pos:line="761" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="761" pos:column="94">{}</block></constructor><empty_stmt pos:line="761" pos:column="96">;</empty_stmt>
    </public>}</block> <decl><name pos:line="762" pos:column="7">_autoUpdateOpt</name></decl>;</struct>

	<decl_stmt><decl><type><name pos:line="764" pos:column="9">bool</name></type> <name pos:line="764" pos:column="14">_doesExistUpdater</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="765" pos:column="9">int</name></type> <name pos:line="765" pos:column="13">_caretBlinkRate</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="766" pos:column="9">int</name></type> <name pos:line="766" pos:column="13">_caretWidth</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="767" pos:column="5">bool</name></type> <name pos:line="767" pos:column="10">_enableMultiSelection</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="769" pos:column="9">bool</name></type> <name pos:line="769" pos:column="14">_shortTitlebar</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="771" pos:column="9">OpenSaveDirSetting</name></type> <name pos:line="771" pos:column="28">_openSaveDir</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="772" pos:column="9">TCHAR</name></type> <name><name pos:line="772" pos:column="15">_defaultDir</name><index pos:line="772" pos:column="26">[<expr><name pos:line="772" pos:column="27">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="773" pos:column="9">TCHAR</name></type> <name><name pos:line="773" pos:column="15">_defaultDirExp</name><index pos:line="773" pos:column="29">[<expr><name pos:line="773" pos:column="30">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>	<comment type="line" pos:line="773" pos:column="41">//expanded environment variables</comment>
	<decl_stmt><decl><type><name pos:line="774" pos:column="9">generic_string</name></type> <name pos:line="774" pos:column="24">_themeName</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="777" pos:column="1">struct <name pos:line="777" pos:column="8">ScintillaViewParams</name>
<block pos:line="778" pos:column="1">{<public type="default" pos:line="778" pos:column="2">
	<constructor><name pos:line="779" pos:column="9">ScintillaViewParams</name><parameter_list pos:line="779" pos:column="28">()</parameter_list> <member_list pos:line="779" pos:column="31">: <call><name pos:line="779" pos:column="33">_lineNumberMarginShow</name><argument_list pos:line="779" pos:column="54">(<argument><expr><lit:literal type="boolean" pos:line="779" pos:column="55">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="779" pos:column="60">,</op:operator> <call><name pos:line="779" pos:column="62">_bookMarkMarginShow</name><argument_list pos:line="779" pos:column="81">(<argument><expr><lit:literal type="boolean" pos:line="779" pos:column="82">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="779" pos:column="87">,</op:operator><call><name pos:line="779" pos:column="88">_borderWidth</name><argument_list pos:line="779" pos:column="100">(<argument><expr><lit:literal type="number" pos:line="779" pos:column="101">2</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="779" pos:column="103">,</op:operator>\
		                    <call><name pos:line="780" pos:column="37">_folderStyle</name><argument_list pos:line="780" pos:column="49">(<argument><expr><name pos:line="780" pos:column="50">FOLDER_STYLE_BOX</name></expr></argument>)</argument_list></call><op:operator pos:line="780" pos:column="67">,</op:operator> <call><name pos:line="780" pos:column="69">_foldMarginShow</name><argument_list pos:line="780" pos:column="84">(<argument><expr><lit:literal type="boolean" pos:line="780" pos:column="85">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="780" pos:column="90">,</op:operator> <call><name pos:line="780" pos:column="92">_indentGuideLineShow</name><argument_list pos:line="780" pos:column="112">(<argument><expr><lit:literal type="boolean" pos:line="780" pos:column="113">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="780" pos:column="118">,</op:operator>\
	                        <call><name pos:line="781" pos:column="33">_currentLineHilitingShow</name><argument_list pos:line="781" pos:column="57">(<argument><expr><lit:literal type="boolean" pos:line="781" pos:column="58">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="781" pos:column="63">,</op:operator> <call><name pos:line="781" pos:column="65">_wrapSymbolShow</name><argument_list pos:line="781" pos:column="80">(<argument><expr><lit:literal type="boolean" pos:line="781" pos:column="81">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="781" pos:column="87">,</op:operator>  <call><name pos:line="781" pos:column="90">_doWrap</name><argument_list pos:line="781" pos:column="97">(<argument><expr><lit:literal type="boolean" pos:line="781" pos:column="98">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="781" pos:column="104">,</op:operator> <call><name pos:line="781" pos:column="106">_edgeNbColumn</name><argument_list pos:line="781" pos:column="119">(<argument><expr><lit:literal type="number" pos:line="781" pos:column="120">80</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="781" pos:column="123">,</op:operator>\
							<call><name pos:line="782" pos:column="57">_zoom</name><argument_list pos:line="782" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="782" pos:column="63">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="782" pos:column="65">,</op:operator> <call><name pos:line="782" pos:column="67">_zoom2</name><argument_list pos:line="782" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="782" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="782" pos:column="76">,</op:operator> <call><name pos:line="782" pos:column="78">_whiteSpaceShow</name><argument_list pos:line="782" pos:column="93">(<argument><expr><lit:literal type="boolean" pos:line="782" pos:column="94">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="782" pos:column="100">,</op:operator> <call><name pos:line="782" pos:column="102">_eolShow</name><argument_list pos:line="782" pos:column="110">(<argument><expr><lit:literal type="boolean" pos:line="782" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="782" pos:column="117">,</op:operator> <call><name pos:line="782" pos:column="119">_lineWrapMethod</name><argument_list pos:line="782" pos:column="134">(<argument><expr><name pos:line="782" pos:column="135">LINEWRAP_ALIGNED</name></expr></argument>)</argument_list></call></member_list><block pos:line="782" pos:column="152">{}</block></constructor><empty_stmt pos:line="782" pos:column="154">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="783" pos:column="9">bool</name></type> <name pos:line="783" pos:column="14">_lineNumberMarginShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="784" pos:column="9">bool</name></type> <name pos:line="784" pos:column="14">_bookMarkMarginShow</name></decl>;</decl_stmt>
	<comment type="line" pos:line="785" pos:column="9">//bool _docChangeStateMarginShow;</comment>
	<decl_stmt><decl><type><name pos:line="786" pos:column="9">folderStyle</name></type>  <name pos:line="786" pos:column="22">_folderStyle</name></decl>;</decl_stmt> <comment type="line" pos:line="786" pos:column="36">//"simple", "arrow", "circle", "box" and "none"</comment>
	<decl_stmt><decl><type><name pos:line="787" pos:column="9">lineWrapMethod</name></type> <name pos:line="787" pos:column="24">_lineWrapMethod</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="788" pos:column="9">bool</name></type> <name pos:line="788" pos:column="14">_foldMarginShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="789" pos:column="9">bool</name></type> <name pos:line="789" pos:column="14">_indentGuideLineShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="790" pos:column="9">bool</name></type> <name pos:line="790" pos:column="14">_currentLineHilitingShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="791" pos:column="9">bool</name></type> <name pos:line="791" pos:column="14">_wrapSymbolShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="792" pos:column="9">bool</name></type> <name pos:line="792" pos:column="14">_doWrap</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="793" pos:column="9">int</name></type> <name pos:line="793" pos:column="13">_edgeMode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="794" pos:column="9">int</name></type> <name pos:line="794" pos:column="13">_edgeNbColumn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="795" pos:column="9">int</name></type> <name pos:line="795" pos:column="13">_zoom</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="796" pos:column="9">int</name></type> <name pos:line="796" pos:column="13">_zoom2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="797" pos:column="9">bool</name></type> <name pos:line="797" pos:column="14">_whiteSpaceShow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="798" pos:column="9">bool</name></type> <name pos:line="798" pos:column="14">_eolShow</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="799" pos:column="5">int</name></type> <name pos:line="799" pos:column="9">_borderWidth</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<decl_stmt><decl><type><specifier pos:line="802" pos:column="1">const</specifier> <name pos:line="802" pos:column="7">int</name></type> <name pos:line="802" pos:column="11">NB_LIST</name> <init pos:line="802" pos:column="19">= <expr><lit:literal type="number" pos:line="802" pos:column="21">20</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="803" pos:column="1">const</specifier> <name pos:line="803" pos:column="7">int</name></type> <name pos:line="803" pos:column="11">NB_MAX_LRF_FILE</name> <init pos:line="803" pos:column="27">= <expr><lit:literal type="number" pos:line="803" pos:column="29">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="804" pos:column="1">const</specifier> <name pos:line="804" pos:column="7">int</name></type> <name pos:line="804" pos:column="11">NB_MAX_USER_LANG</name> <init pos:line="804" pos:column="28">= <expr><lit:literal type="number" pos:line="804" pos:column="30">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="805" pos:column="1">const</specifier> <name pos:line="805" pos:column="7">int</name></type> <name pos:line="805" pos:column="11">NB_MAX_EXTERNAL_LANG</name> <init pos:line="805" pos:column="32">= <expr><lit:literal type="number" pos:line="805" pos:column="34">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="806" pos:column="1">const</specifier> <name pos:line="806" pos:column="7">int</name></type> <name pos:line="806" pos:column="11">NB_MAX_IMPORTED_UDL</name> <init pos:line="806" pos:column="31">= <expr><lit:literal type="number" pos:line="806" pos:column="33">50</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="808" pos:column="1">const</specifier> <name pos:line="808" pos:column="7">int</name></type> <name pos:line="808" pos:column="11">NB_MAX_FINDHISTORY_FIND</name>    <init pos:line="808" pos:column="38">= <expr><lit:literal type="number" pos:line="808" pos:column="40">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="809" pos:column="1">const</specifier> <name pos:line="809" pos:column="7">int</name></type> <name pos:line="809" pos:column="11">NB_MAX_FINDHISTORY_REPLACE</name> <init pos:line="809" pos:column="38">= <expr><lit:literal type="number" pos:line="809" pos:column="40">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="810" pos:column="1">const</specifier> <name pos:line="810" pos:column="7">int</name></type> <name pos:line="810" pos:column="11">NB_MAX_FINDHISTORY_PATH</name>    <init pos:line="810" pos:column="38">= <expr><lit:literal type="number" pos:line="810" pos:column="40">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="811" pos:column="1">const</specifier> <name pos:line="811" pos:column="7">int</name></type> <name pos:line="811" pos:column="11">NB_MAX_FINDHISTORY_FILTER</name>  <init pos:line="811" pos:column="38">= <expr><lit:literal type="number" pos:line="811" pos:column="40">20</lit:literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier pos:line="814" pos:column="1">const</specifier> <name pos:line="814" pos:column="7">int</name></type> <name pos:line="814" pos:column="11">MASK_ReplaceBySpc</name> <init pos:line="814" pos:column="29">= <expr><lit:literal type="number" pos:line="814" pos:column="31">0x80</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="815" pos:column="1">const</specifier> <name pos:line="815" pos:column="7">int</name></type> <name pos:line="815" pos:column="11">MASK_TabSize</name> <init pos:line="815" pos:column="24">= <expr><lit:literal type="number" pos:line="815" pos:column="26">0x7F</lit:literal></expr></init></decl>;</decl_stmt>

<struct pos:line="817" pos:column="1">struct <name pos:line="817" pos:column="8">Lang</name>
<block pos:line="818" pos:column="1">{<public type="default" pos:line="818" pos:column="2">
	<decl_stmt><decl><type><name pos:line="819" pos:column="9">LangType</name></type> <name pos:line="819" pos:column="18">_langID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="820" pos:column="9">generic_string</name></type> <name pos:line="820" pos:column="24">_langName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="821" pos:column="9">const</specifier> <name pos:line="821" pos:column="15">TCHAR</name> <type:modifier pos:line="821" pos:column="21">*</type:modifier></type><name pos:line="821" pos:column="22">_defaultExtList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="822" pos:column="9">const</specifier> <name pos:line="822" pos:column="15">TCHAR</name> <type:modifier pos:line="822" pos:column="21">*</type:modifier></type><name><name pos:line="822" pos:column="22">_langKeyWordList</name><index pos:line="822" pos:column="38">[<expr><name pos:line="822" pos:column="39">NB_LIST</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="823" pos:column="9">const</specifier> <name pos:line="823" pos:column="15">TCHAR</name> <type:modifier pos:line="823" pos:column="21">*</type:modifier></type><name pos:line="823" pos:column="22">_pCommentLineSymbol</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="824" pos:column="9">const</specifier> <name pos:line="824" pos:column="15">TCHAR</name> <type:modifier pos:line="824" pos:column="21">*</type:modifier></type><name pos:line="824" pos:column="22">_pCommentStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="825" pos:column="9">const</specifier> <name pos:line="825" pos:column="15">TCHAR</name> <type:modifier pos:line="825" pos:column="21">*</type:modifier></type><name pos:line="825" pos:column="22">_pCommentEnd</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="827" pos:column="5">bool</name></type> <name pos:line="827" pos:column="10">_isTabReplacedBySpace</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="828" pos:column="5">int</name></type> <name pos:line="828" pos:column="9">_tabSize</name></decl>;</decl_stmt>

    <constructor><name pos:line="830" pos:column="5">Lang</name><parameter_list pos:line="830" pos:column="9">()</parameter_list><member_list pos:line="830" pos:column="11">: <call><name pos:line="830" pos:column="13">_langID</name><argument_list pos:line="830" pos:column="20">(<argument><expr><name pos:line="830" pos:column="21">L_TEXT</name></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="28">,</op:operator> <call><name pos:line="830" pos:column="30">_langName</name><argument_list pos:line="830" pos:column="39">(<argument><expr><call><name pos:line="830" pos:column="40">TEXT</name><argument_list pos:line="830" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="830" pos:column="45">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="49">,</op:operator> <call><name pos:line="830" pos:column="51">_defaultExtList</name><argument_list pos:line="830" pos:column="66">(<argument><expr><name pos:line="830" pos:column="67">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="72">,</op:operator> <call><name pos:line="830" pos:column="74">_pCommentLineSymbol</name><argument_list pos:line="830" pos:column="93">(<argument><expr><name pos:line="830" pos:column="94">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="99">,</op:operator> <call><name pos:line="830" pos:column="101">_pCommentStart</name><argument_list pos:line="830" pos:column="115">(<argument><expr><name pos:line="830" pos:column="116">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="121">,</op:operator>
            <call><name pos:line="831" pos:column="13">_pCommentEnd</name><argument_list pos:line="831" pos:column="25">(<argument><expr><name pos:line="831" pos:column="26">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="831" pos:column="31">,</op:operator> <call><name pos:line="831" pos:column="33">_isTabReplacedBySpace</name><argument_list pos:line="831" pos:column="54">(<argument><expr><lit:literal type="boolean" pos:line="831" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="831" pos:column="61">,</op:operator> <call><name pos:line="831" pos:column="63">_tabSize</name><argument_list pos:line="831" pos:column="71">(<argument><expr><op:operator pos:line="831" pos:column="72">-</op:operator><lit:literal type="number" pos:line="831" pos:column="73">1</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="831" pos:column="76">{
        <for pos:line="832" pos:column="9">for (<init><decl><type><name pos:line="832" pos:column="14">int</name></type> <name pos:line="832" pos:column="18">i</name> <init pos:line="832" pos:column="20">= <expr><lit:literal type="number" pos:line="832" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="832" pos:column="26">i</name> <op:operator pos:line="832" pos:column="28">&lt;</op:operator> <name pos:line="832" pos:column="30">NB_LIST</name></expr> ;</condition> <incr><expr><name><name pos:line="832" pos:column="40">_langKeyWordList</name><index pos:line="832" pos:column="56">[<expr><name pos:line="832" pos:column="57">i</name></expr>]</index></name> <op:operator pos:line="832" pos:column="60">=</op:operator> <name pos:line="832" pos:column="62">NULL</name></expr> <op:operator pos:line="832" pos:column="67">,</op:operator><expr><name pos:line="832" pos:column="68">i</name><op:operator pos:line="832" pos:column="69">++</op:operator></expr></incr>)<empty_stmt pos:line="832" pos:column="72">;</empty_stmt></for>
    }</block></constructor><empty_stmt pos:line="833" pos:column="6">;</empty_stmt>
	<constructor><name pos:line="834" pos:column="9">Lang</name><parameter_list pos:line="834" pos:column="13">(<param><decl><type><name pos:line="834" pos:column="14">LangType</name></type> <name pos:line="834" pos:column="23">langID</name></decl></param>, <param><decl><type><specifier pos:line="834" pos:column="31">const</specifier> <name pos:line="834" pos:column="37">TCHAR</name> <type:modifier pos:line="834" pos:column="43">*</type:modifier></type><name pos:line="834" pos:column="44">name</name></decl></param>)</parameter_list> <member_list pos:line="834" pos:column="50">: <call><name pos:line="834" pos:column="52">_langID</name><argument_list pos:line="834" pos:column="59">(<argument><expr><name pos:line="834" pos:column="60">langID</name></expr></argument>)</argument_list></call><op:operator pos:line="834" pos:column="67">,</op:operator> <call><name pos:line="834" pos:column="69">_langName</name><argument_list pos:line="834" pos:column="78">(<argument><expr><name pos:line="834" pos:column="79">name</name><op:operator pos:line="834" pos:column="83">?</op:operator><name pos:line="834" pos:column="84">name</name><op:operator pos:line="834" pos:column="88">:</op:operator><call><name pos:line="834" pos:column="89">TEXT</name><argument_list pos:line="834" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="834" pos:column="94">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="834" pos:column="98">,</op:operator>\
                                               <call><name pos:line="835" pos:column="48">_defaultExtList</name><argument_list pos:line="835" pos:column="63">(<argument><expr><name pos:line="835" pos:column="64">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="835" pos:column="69">,</op:operator> <call><name pos:line="835" pos:column="71">_pCommentLineSymbol</name><argument_list pos:line="835" pos:column="90">(<argument><expr><name pos:line="835" pos:column="91">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="835" pos:column="96">,</op:operator> <call><name pos:line="835" pos:column="98">_pCommentStart</name><argument_list pos:line="835" pos:column="112">(<argument><expr><name pos:line="835" pos:column="113">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="835" pos:column="118">,</op:operator>\
                                               <call><name pos:line="836" pos:column="48">_pCommentEnd</name><argument_list pos:line="836" pos:column="60">(<argument><expr><name pos:line="836" pos:column="61">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="836" pos:column="66">,</op:operator> <call><name pos:line="836" pos:column="68">_isTabReplacedBySpace</name><argument_list pos:line="836" pos:column="89">(<argument><expr><lit:literal type="boolean" pos:line="836" pos:column="90">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="836" pos:column="96">,</op:operator> <call><name pos:line="836" pos:column="98">_tabSize</name><argument_list pos:line="836" pos:column="106">(<argument><expr><op:operator pos:line="836" pos:column="107">-</op:operator><lit:literal type="number" pos:line="836" pos:column="108">1</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="836" pos:column="111">{
		<for pos:line="837" pos:column="17">for (<init><decl><type><name pos:line="837" pos:column="22">int</name></type> <name pos:line="837" pos:column="26">i</name> <init pos:line="837" pos:column="28">= <expr><lit:literal type="number" pos:line="837" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="837" pos:column="34">i</name> <op:operator pos:line="837" pos:column="36">&lt;</op:operator> <name pos:line="837" pos:column="38">NB_LIST</name></expr> ;</condition> <incr><expr><name><name pos:line="837" pos:column="48">_langKeyWordList</name><index pos:line="837" pos:column="64">[<expr><name pos:line="837" pos:column="65">i</name></expr>]</index></name> <op:operator pos:line="837" pos:column="68">=</op:operator> <name pos:line="837" pos:column="70">NULL</name></expr> <op:operator pos:line="837" pos:column="75">,</op:operator><expr><name pos:line="837" pos:column="76">i</name><op:operator pos:line="837" pos:column="77">++</op:operator></expr></incr>)<empty_stmt pos:line="837" pos:column="80">;</empty_stmt></for>
	}</block></constructor><empty_stmt pos:line="838" pos:column="10">;</empty_stmt>
	<destructor><name pos:line="839" pos:column="9">~<name pos:line="839" pos:column="10">Lang</name></name><parameter_list pos:line="839" pos:column="14">()</parameter_list> <block pos:line="839" pos:column="17">{}</block></destructor><empty_stmt pos:line="839" pos:column="19">;</empty_stmt>
	<function><type><name pos:line="840" pos:column="9">void</name></type> <name pos:line="840" pos:column="14">setDefaultExtList</name><parameter_list pos:line="840" pos:column="31">(<param><decl><type><specifier pos:line="840" pos:column="32">const</specifier> <name pos:line="840" pos:column="38">TCHAR</name> <type:modifier pos:line="840" pos:column="44">*</type:modifier></type><name pos:line="840" pos:column="45">extLst</name></decl></param>)</parameter_list><block pos:line="840" pos:column="52">{
		<expr_stmt><expr><name pos:line="841" pos:column="17">_defaultExtList</name> <op:operator pos:line="841" pos:column="33">=</op:operator> <name pos:line="841" pos:column="35">extLst</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="842" pos:column="10">;</empty_stmt>
	
	<function><type><name pos:line="844" pos:column="9">void</name></type> <name pos:line="844" pos:column="14">setCommentLineSymbol</name><parameter_list pos:line="844" pos:column="34">(<param><decl><type><specifier pos:line="844" pos:column="35">const</specifier> <name pos:line="844" pos:column="41">TCHAR</name> <type:modifier pos:line="844" pos:column="47">*</type:modifier></type><name pos:line="844" pos:column="48">commentLine</name></decl></param>)</parameter_list><block pos:line="844" pos:column="60">{
		<expr_stmt><expr><name pos:line="845" pos:column="17">_pCommentLineSymbol</name> <op:operator pos:line="845" pos:column="37">=</op:operator> <name pos:line="845" pos:column="39">commentLine</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="846" pos:column="10">;</empty_stmt>
	
	<function><type><name pos:line="848" pos:column="9">void</name></type> <name pos:line="848" pos:column="14">setCommentStart</name><parameter_list pos:line="848" pos:column="29">(<param><decl><type><specifier pos:line="848" pos:column="30">const</specifier> <name pos:line="848" pos:column="36">TCHAR</name> <type:modifier pos:line="848" pos:column="42">*</type:modifier></type><name pos:line="848" pos:column="43">commentStart</name></decl></param>)</parameter_list><block pos:line="848" pos:column="56">{
		<expr_stmt><expr><name pos:line="849" pos:column="17">_pCommentStart</name> <op:operator pos:line="849" pos:column="32">=</op:operator> <name pos:line="849" pos:column="34">commentStart</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="850" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="852" pos:column="9">void</name></type> <name pos:line="852" pos:column="14">setCommentEnd</name><parameter_list pos:line="852" pos:column="27">(<param><decl><type><specifier pos:line="852" pos:column="28">const</specifier> <name pos:line="852" pos:column="34">TCHAR</name> <type:modifier pos:line="852" pos:column="40">*</type:modifier></type><name pos:line="852" pos:column="41">commentEnd</name></decl></param>)</parameter_list><block pos:line="852" pos:column="52">{
		<expr_stmt><expr><name pos:line="853" pos:column="17">_pCommentEnd</name> <op:operator pos:line="853" pos:column="30">=</op:operator> <name pos:line="853" pos:column="32">commentEnd</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="854" pos:column="10">;</empty_stmt>

    <function><type><name pos:line="856" pos:column="5">void</name></type> <name pos:line="856" pos:column="10">setTabInfo</name><parameter_list pos:line="856" pos:column="20">(<param><decl><type><name pos:line="856" pos:column="21">int</name></type> <name pos:line="856" pos:column="25">tabInfo</name></decl></param>)</parameter_list> <block pos:line="856" pos:column="34">{
        <if pos:line="857" pos:column="9">if <condition pos:line="857" pos:column="12">(<expr><name pos:line="857" pos:column="13">tabInfo</name> <op:operator pos:line="857" pos:column="21">!=</op:operator> <op:operator pos:line="857" pos:column="24">-</op:operator><lit:literal type="number" pos:line="857" pos:column="25">1</lit:literal> <op:operator pos:line="857" pos:column="27">&amp;&amp;</op:operator> <name pos:line="857" pos:column="30">tabInfo</name> <op:operator pos:line="857" pos:column="38">&amp;</op:operator> <name pos:line="857" pos:column="40">MASK_TabSize</name></expr>)</condition><then pos:line="857" pos:column="53">
        <block pos:line="858" pos:column="9">{
            <expr_stmt><expr><name pos:line="859" pos:column="13">_isTabReplacedBySpace</name> <op:operator pos:line="859" pos:column="35">=</op:operator> <op:operator pos:line="859" pos:column="37">(</op:operator><name pos:line="859" pos:column="38">tabInfo</name> <op:operator pos:line="859" pos:column="46">&amp;</op:operator> <name pos:line="859" pos:column="48">MASK_ReplaceBySpc</name><op:operator pos:line="859" pos:column="65">)</op:operator> <op:operator pos:line="859" pos:column="67">!=</op:operator> <lit:literal type="number" pos:line="859" pos:column="70">0</lit:literal></expr>;</expr_stmt> 
            <expr_stmt><expr><name pos:line="860" pos:column="13">_tabSize</name> <op:operator pos:line="860" pos:column="22">=</op:operator> <name pos:line="860" pos:column="24">tabInfo</name> <op:operator pos:line="860" pos:column="32">&amp;</op:operator> <name pos:line="860" pos:column="34">MASK_TabSize</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function><empty_stmt pos:line="862" pos:column="6">;</empty_stmt>

	<function><type><specifier pos:line="864" pos:column="9">const</specifier> <name pos:line="864" pos:column="15">TCHAR</name> <type:modifier pos:line="864" pos:column="21">*</type:modifier></type> <name pos:line="864" pos:column="23">getDefaultExtList</name><parameter_list pos:line="864" pos:column="40">()</parameter_list> <specifier pos:line="864" pos:column="43">const</specifier> <block pos:line="864" pos:column="49">{
		<return pos:line="865" pos:column="17">return <expr><name pos:line="865" pos:column="24">_defaultExtList</name></expr>;</return>
	}</block></function><empty_stmt pos:line="866" pos:column="10">;</empty_stmt>
	
	<function><type><name pos:line="868" pos:column="9">void</name></type> <name pos:line="868" pos:column="14">setWords</name><parameter_list pos:line="868" pos:column="22">(<param><decl><type><specifier pos:line="868" pos:column="23">const</specifier> <name pos:line="868" pos:column="29">TCHAR</name> <type:modifier pos:line="868" pos:column="35">*</type:modifier></type><name pos:line="868" pos:column="36">words</name></decl></param>, <param><decl><type><name pos:line="868" pos:column="43">int</name></type> <name pos:line="868" pos:column="47">index</name></decl></param>)</parameter_list> <block pos:line="868" pos:column="54">{
		<expr_stmt><expr><name><name pos:line="869" pos:column="17">_langKeyWordList</name><index pos:line="869" pos:column="33">[<expr><name pos:line="869" pos:column="34">index</name></expr>]</index></name> <op:operator pos:line="869" pos:column="41">=</op:operator> <name pos:line="869" pos:column="43">words</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="870" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="872" pos:column="9">const</specifier> <name pos:line="872" pos:column="15">TCHAR</name> <type:modifier pos:line="872" pos:column="21">*</type:modifier></type> <name pos:line="872" pos:column="23">getWords</name><parameter_list pos:line="872" pos:column="31">(<param><decl><type><name pos:line="872" pos:column="32">int</name></type> <name pos:line="872" pos:column="36">index</name></decl></param>)</parameter_list> <specifier pos:line="872" pos:column="43">const</specifier> <block pos:line="872" pos:column="49">{
		<return pos:line="873" pos:column="17">return <expr><name><name pos:line="873" pos:column="24">_langKeyWordList</name><index pos:line="873" pos:column="40">[<expr><name pos:line="873" pos:column="41">index</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="874" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="876" pos:column="9">LangType</name></type> <name pos:line="876" pos:column="18">getLangID</name><parameter_list pos:line="876" pos:column="27">()</parameter_list> <specifier pos:line="876" pos:column="30">const</specifier> <block pos:line="876" pos:column="36">{<return pos:line="876" pos:column="37">return <expr><name pos:line="876" pos:column="44">_langID</name></expr>;</return>}</block></function><empty_stmt pos:line="876" pos:column="53">;</empty_stmt>
	<function><type><specifier pos:line="877" pos:column="9">const</specifier> <name pos:line="877" pos:column="15">TCHAR</name> <type:modifier pos:line="877" pos:column="21">*</type:modifier></type> <name pos:line="877" pos:column="23">getLangName</name><parameter_list pos:line="877" pos:column="34">()</parameter_list> <specifier pos:line="877" pos:column="37">const</specifier> <block pos:line="877" pos:column="43">{<return pos:line="877" pos:column="44">return <expr><call><name><name pos:line="877" pos:column="51">_langName</name><op:operator pos:line="877" pos:column="60">.</op:operator><name pos:line="877" pos:column="61">c_str</name></name><argument_list pos:line="877" pos:column="66">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="877" pos:column="70">;</empty_stmt>

    <function><type><name pos:line="879" pos:column="5">int</name></type> <name pos:line="879" pos:column="9">getTabInfo</name><parameter_list pos:line="879" pos:column="19">()</parameter_list> <specifier pos:line="879" pos:column="22">const</specifier> <block pos:line="879" pos:column="28">{
        <if pos:line="880" pos:column="9">if <condition pos:line="880" pos:column="12">(<expr><name pos:line="880" pos:column="13">_tabSize</name> <op:operator pos:line="880" pos:column="22">==</op:operator> <op:operator pos:line="880" pos:column="25">-</op:operator><lit:literal type="number" pos:line="880" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="880" pos:column="28"> <return pos:line="880" pos:column="29">return <expr><op:operator pos:line="880" pos:column="36">-</op:operator><lit:literal type="number" pos:line="880" pos:column="37">1</lit:literal></expr>;</return></then></if>
        <return pos:line="881" pos:column="9">return <expr><op:operator pos:line="881" pos:column="16">(</op:operator><name pos:line="881" pos:column="17">_isTabReplacedBySpace</name><op:operator pos:line="881" pos:column="38">?</op:operator><lit:literal type="number" pos:line="881" pos:column="39">0x80</lit:literal><op:operator pos:line="881" pos:column="43">:</op:operator><lit:literal type="number" pos:line="881" pos:column="44">0x00</lit:literal><op:operator pos:line="881" pos:column="48">)</op:operator> <op:operator pos:line="881" pos:column="50">|</op:operator> <name pos:line="881" pos:column="52">_tabSize</name></expr>;</return>
    }</block></function><empty_stmt pos:line="882" pos:column="6">;</empty_stmt>
</public>}</block>;</struct>

<class pos:line="885" pos:column="1">class <name pos:line="885" pos:column="7">UserLangContainer</name>
<block pos:line="886" pos:column="1">{<private type="default" pos:line="886" pos:column="2">
<class_decl><specifier pos:line="887" pos:column="1">friend</specifier> class <name pos:line="887" pos:column="14">Notepad_plus</name>;</class_decl>
<class_decl><specifier pos:line="888" pos:column="1">friend</specifier> class <name pos:line="888" pos:column="14">ScintillaEditView</name>;</class_decl>
<class_decl><specifier pos:line="889" pos:column="1">friend</specifier> class <name pos:line="889" pos:column="14">NppParameters</name>;</class_decl>

<class_decl><specifier pos:line="891" pos:column="1">friend</specifier> class <name pos:line="891" pos:column="14">SharedParametersDialog</name>;</class_decl>
<class_decl><specifier pos:line="892" pos:column="1">friend</specifier> class <name pos:line="892" pos:column="14">FolderStyleDialog</name>;</class_decl>
<class_decl><specifier pos:line="893" pos:column="1">friend</specifier> class <name pos:line="893" pos:column="14">KeyWordsStyleDialog</name>;</class_decl>
<class_decl><specifier pos:line="894" pos:column="1">friend</specifier> class <name pos:line="894" pos:column="14">CommentStyleDialog</name>;</class_decl>
<class_decl><specifier pos:line="895" pos:column="1">friend</specifier> class <name pos:line="895" pos:column="14">SymbolsStyleDialog</name>;</class_decl>
<class_decl><specifier pos:line="896" pos:column="1">friend</specifier> class <name pos:line="896" pos:column="14">UserDefineDialog</name>;</class_decl>
<class_decl><specifier pos:line="897" pos:column="1">friend</specifier> class <name pos:line="897" pos:column="14">StylerDlg</name>;</class_decl>

</private><public pos:line="899" pos:column="1">public :
	<constructor><name pos:line="900" pos:column="9">UserLangContainer</name><parameter_list pos:line="900" pos:column="26">()</parameter_list><block pos:line="900" pos:column="28">{
		<expr_stmt><expr><name pos:line="901" pos:column="17">_name</name> <op:operator pos:line="901" pos:column="23">=</op:operator> <call><name pos:line="901" pos:column="25">TEXT</name><argument_list pos:line="901" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="901" pos:column="30">"new user define"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="902" pos:column="17">_ext</name> <op:operator pos:line="902" pos:column="22">=</op:operator> <call><name pos:line="902" pos:column="24">TEXT</name><argument_list pos:line="902" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="902" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="903" pos:column="17">_udlVersion</name> <op:operator pos:line="903" pos:column="29">=</op:operator> <call><name pos:line="903" pos:column="31">TEXT</name><argument_list pos:line="903" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="903" pos:column="36">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="904" pos:column="9">_allowFoldOfComments</name> <op:operator pos:line="904" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="904" pos:column="32">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="905" pos:column="17">_forceLineCommentsAtBOL</name> <op:operator pos:line="905" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="905" pos:column="43">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="906" pos:column="17">_foldCompact</name> <op:operator pos:line="906" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="906" pos:column="32">false</lit:literal></expr>;</expr_stmt>

		<for pos:line="908" pos:column="17">for (<init><decl><type><name pos:line="908" pos:column="22">int</name></type> <name pos:line="908" pos:column="26">i</name> <init pos:line="908" pos:column="28">= <expr><lit:literal type="number" pos:line="908" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="908" pos:column="34">i</name> <op:operator pos:line="908" pos:column="36">&lt;</op:operator> <name pos:line="908" pos:column="38">SCE_USER_KWLIST_TOTAL</name></expr> ;</condition> <incr><expr><name pos:line="908" pos:column="62">i</name><op:operator pos:line="908" pos:column="63">++</op:operator></expr></incr>)
			<expr_stmt><expr><op:operator pos:line="909" pos:column="25">*</op:operator><name><name pos:line="909" pos:column="26">_keywordLists</name><index pos:line="909" pos:column="39">[<expr><name pos:line="909" pos:column="40">i</name></expr>]</index></name> <op:operator pos:line="909" pos:column="43">=</op:operator> <lit:literal type="char" pos:line="909" pos:column="45">'\0'</lit:literal></expr>;</expr_stmt></for>
	}</block></constructor><empty_stmt pos:line="910" pos:column="10">;</empty_stmt>
	<constructor><name pos:line="911" pos:column="9">UserLangContainer</name><parameter_list pos:line="911" pos:column="26">(<param><decl><type><specifier pos:line="911" pos:column="27">const</specifier> <name pos:line="911" pos:column="33">TCHAR</name> <type:modifier pos:line="911" pos:column="39">*</type:modifier></type><name pos:line="911" pos:column="40">name</name></decl></param>, <param><decl><type><specifier pos:line="911" pos:column="46">const</specifier> <name pos:line="911" pos:column="52">TCHAR</name> <type:modifier pos:line="911" pos:column="58">*</type:modifier></type><name pos:line="911" pos:column="59">ext</name></decl></param>, <param><decl><type><specifier pos:line="911" pos:column="64">const</specifier> <name pos:line="911" pos:column="70">TCHAR</name> <type:modifier pos:line="911" pos:column="76">*</type:modifier></type><name pos:line="911" pos:column="77">udlVer</name></decl></param>)</parameter_list> <member_list pos:line="911" pos:column="85">: <call><name pos:line="911" pos:column="87">_name</name><argument_list pos:line="911" pos:column="92">(<argument><expr><name pos:line="911" pos:column="93">name</name></expr></argument>)</argument_list></call><op:operator pos:line="911" pos:column="98">,</op:operator> <call><name pos:line="911" pos:column="100">_ext</name><argument_list pos:line="911" pos:column="104">(<argument><expr><name pos:line="911" pos:column="105">ext</name></expr></argument>)</argument_list></call><op:operator pos:line="911" pos:column="109">,</op:operator> <call><name pos:line="911" pos:column="111">_udlVersion</name><argument_list pos:line="911" pos:column="122">(<argument><expr><name pos:line="911" pos:column="123">udlVer</name></expr></argument>)</argument_list></call> </member_list><block pos:line="911" pos:column="131">{
        <expr_stmt><expr><name pos:line="912" pos:column="9">_allowFoldOfComments</name> <op:operator pos:line="912" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="912" pos:column="32">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="913" pos:column="17">_forceLineCommentsAtBOL</name> <op:operator pos:line="913" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="913" pos:column="43">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="914" pos:column="17">_foldCompact</name> <op:operator pos:line="914" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="914" pos:column="32">false</lit:literal></expr>;</expr_stmt>

		<for pos:line="916" pos:column="17">for (<init><decl><type><name pos:line="916" pos:column="22">int</name></type> <name pos:line="916" pos:column="26">j</name> <init pos:line="916" pos:column="28">= <expr><lit:literal type="number" pos:line="916" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="916" pos:column="34">j</name> <op:operator pos:line="916" pos:column="36">&lt;</op:operator> <name pos:line="916" pos:column="38">SCE_USER_KWLIST_TOTAL</name></expr> ;</condition> <incr><expr><name pos:line="916" pos:column="62">j</name><op:operator pos:line="916" pos:column="63">++</op:operator></expr></incr>)
			<expr_stmt><expr><op:operator pos:line="917" pos:column="25">*</op:operator><name><name pos:line="917" pos:column="26">_keywordLists</name><index pos:line="917" pos:column="39">[<expr><name pos:line="917" pos:column="40">j</name></expr>]</index></name> <op:operator pos:line="917" pos:column="43">=</op:operator> <lit:literal type="char" pos:line="917" pos:column="45">'\0'</lit:literal></expr>;</expr_stmt></for>
	}</block></constructor><empty_stmt pos:line="918" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="920" pos:column="9">UserLangContainer</name> <type:modifier pos:line="920" pos:column="27">&amp;</type:modifier></type> <name pos:line="920" pos:column="29">operator=</name><parameter_list pos:line="920" pos:column="38">(<param><decl><type><specifier pos:line="920" pos:column="39">const</specifier> <name pos:line="920" pos:column="45">UserLangContainer</name> <type:modifier pos:line="920" pos:column="63">&amp;</type:modifier></type> <name pos:line="920" pos:column="65">ulc</name></decl></param>)</parameter_list> <block pos:line="920" pos:column="70">{
		<if pos:line="921" pos:column="17">if <condition pos:line="921" pos:column="20">(<expr><name pos:line="921" pos:column="21">this</name> <op:operator pos:line="921" pos:column="26">!=</op:operator> <op:operator pos:line="921" pos:column="29">&amp;</op:operator><name pos:line="921" pos:column="30">ulc</name></expr>)</condition><then pos:line="921" pos:column="34">
        <block pos:line="922" pos:column="9">{
			<expr_stmt><expr><name><name pos:line="923" pos:column="25">this</name><op:operator pos:line="923" pos:column="29">-&gt;</op:operator><name pos:line="923" pos:column="31">_name</name></name> <op:operator pos:line="923" pos:column="37">=</op:operator> <name><name pos:line="923" pos:column="39">ulc</name><op:operator pos:line="923" pos:column="42">.</op:operator><name pos:line="923" pos:column="43">_name</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="924" pos:column="25">this</name><op:operator pos:line="924" pos:column="29">-&gt;</op:operator><name pos:line="924" pos:column="31">_ext</name></name> <op:operator pos:line="924" pos:column="36">=</op:operator> <name><name pos:line="924" pos:column="38">ulc</name><op:operator pos:line="924" pos:column="41">.</op:operator><name pos:line="924" pos:column="42">_ext</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="925" pos:column="25">this</name><op:operator pos:line="925" pos:column="29">-&gt;</op:operator><name pos:line="925" pos:column="31">_udlVersion</name></name> <op:operator pos:line="925" pos:column="43">=</op:operator> <name><name pos:line="925" pos:column="45">ulc</name><op:operator pos:line="925" pos:column="48">.</op:operator><name pos:line="925" pos:column="49">_udlVersion</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="926" pos:column="25">this</name><op:operator pos:line="926" pos:column="29">-&gt;</op:operator><name pos:line="926" pos:column="31">_isCaseIgnored</name></name> <op:operator pos:line="926" pos:column="46">=</op:operator> <name><name pos:line="926" pos:column="48">ulc</name><op:operator pos:line="926" pos:column="51">.</op:operator><name pos:line="926" pos:column="52">_isCaseIgnored</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="927" pos:column="25">this</name><op:operator pos:line="927" pos:column="29">-&gt;</op:operator><name pos:line="927" pos:column="31">_styleArray</name></name> <op:operator pos:line="927" pos:column="43">=</op:operator> <name><name pos:line="927" pos:column="45">ulc</name><op:operator pos:line="927" pos:column="48">.</op:operator><name pos:line="927" pos:column="49">_styleArray</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="928" pos:column="25">this</name><op:operator pos:line="928" pos:column="29">-&gt;</op:operator><name pos:line="928" pos:column="31">_allowFoldOfComments</name></name> <op:operator pos:line="928" pos:column="52">=</op:operator> <name><name pos:line="928" pos:column="54">ulc</name><op:operator pos:line="928" pos:column="57">.</op:operator><name pos:line="928" pos:column="58">_allowFoldOfComments</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="929" pos:column="25">this</name><op:operator pos:line="929" pos:column="29">-&gt;</op:operator><name pos:line="929" pos:column="31">_forceLineCommentsAtBOL</name></name> <op:operator pos:line="929" pos:column="55">=</op:operator> <name><name pos:line="929" pos:column="57">ulc</name><op:operator pos:line="929" pos:column="60">.</op:operator><name pos:line="929" pos:column="61">_forceLineCommentsAtBOL</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="930" pos:column="25">this</name><op:operator pos:line="930" pos:column="29">-&gt;</op:operator><name pos:line="930" pos:column="31">_foldCompact</name></name> <op:operator pos:line="930" pos:column="44">=</op:operator> <name><name pos:line="930" pos:column="46">ulc</name><op:operator pos:line="930" pos:column="49">.</op:operator><name pos:line="930" pos:column="50">_foldCompact</name></name></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="931" pos:column="25">int</name></type> <name pos:line="931" pos:column="29">nbStyler</name> <init pos:line="931" pos:column="38">= <expr><call><name><name pos:line="931" pos:column="40">this</name><op:operator pos:line="931" pos:column="44">-&gt;</op:operator><name pos:line="931" pos:column="46">_styleArray</name><op:operator pos:line="931" pos:column="57">.</op:operator><name pos:line="931" pos:column="58">getNbStyler</name></name><argument_list pos:line="931" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="932" pos:column="25">for (<init><decl><type><name pos:line="932" pos:column="30">int</name></type> <name pos:line="932" pos:column="34">i</name> <init pos:line="932" pos:column="36">= <expr><lit:literal type="number" pos:line="932" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="932" pos:column="42">i</name> <op:operator pos:line="932" pos:column="44">&lt;</op:operator> <name pos:line="932" pos:column="46">nbStyler</name></expr> ;</condition> <incr><expr><name pos:line="932" pos:column="57">i</name><op:operator pos:line="932" pos:column="58">++</op:operator></expr></incr>)
			<block pos:line="933" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="934" pos:column="33">Style</name> <type:modifier pos:line="934" pos:column="39">&amp;</type:modifier></type> <name pos:line="934" pos:column="41">st</name> <init pos:line="934" pos:column="44">= <expr><call><name><name pos:line="934" pos:column="46">this</name><op:operator pos:line="934" pos:column="50">-&gt;</op:operator><name pos:line="934" pos:column="52">_styleArray</name><op:operator pos:line="934" pos:column="63">.</op:operator><name pos:line="934" pos:column="64">getStyler</name></name><argument_list pos:line="934" pos:column="73">(<argument><expr><name pos:line="934" pos:column="74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="935" pos:column="33">if <condition pos:line="935" pos:column="36">(<expr><name><name pos:line="935" pos:column="37">st</name><op:operator pos:line="935" pos:column="39">.</op:operator><name pos:line="935" pos:column="40">_bgColor</name></name> <op:operator pos:line="935" pos:column="49">==</op:operator> <call><name pos:line="935" pos:column="52">COLORREF</name><argument_list pos:line="935" pos:column="60">(<argument><expr><op:operator pos:line="935" pos:column="61">-</op:operator><lit:literal type="number" pos:line="935" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="935" pos:column="65">
					<expr_stmt><expr><name><name pos:line="936" pos:column="41">st</name><op:operator pos:line="936" pos:column="43">.</op:operator><name pos:line="936" pos:column="44">_bgColor</name></name> <op:operator pos:line="936" pos:column="53">=</op:operator> <name pos:line="936" pos:column="55">white</name></expr>;</expr_stmt></then></if>
				<if pos:line="937" pos:column="33">if <condition pos:line="937" pos:column="36">(<expr><name><name pos:line="937" pos:column="37">st</name><op:operator pos:line="937" pos:column="39">.</op:operator><name pos:line="937" pos:column="40">_fgColor</name></name> <op:operator pos:line="937" pos:column="49">==</op:operator> <call><name pos:line="937" pos:column="52">COLORREF</name><argument_list pos:line="937" pos:column="60">(<argument><expr><op:operator pos:line="937" pos:column="61">-</op:operator><lit:literal type="number" pos:line="937" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="937" pos:column="65">
					<expr_stmt><expr><name><name pos:line="938" pos:column="41">st</name><op:operator pos:line="938" pos:column="43">.</op:operator><name pos:line="938" pos:column="44">_fgColor</name></name> <op:operator pos:line="938" pos:column="53">=</op:operator> <name pos:line="938" pos:column="55">black</name></expr>;</expr_stmt></then></if>
			}</block></for>
			<for pos:line="940" pos:column="25">for (<init><decl><type><name pos:line="940" pos:column="30">int</name></type> <name pos:line="940" pos:column="34">i</name> <init pos:line="940" pos:column="36">= <expr><lit:literal type="number" pos:line="940" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="940" pos:column="42">i</name> <op:operator pos:line="940" pos:column="44">&lt;</op:operator> <name pos:line="940" pos:column="46">SCE_USER_KWLIST_TOTAL</name></expr> ;</condition> <incr><expr><name pos:line="940" pos:column="70">i</name><op:operator pos:line="940" pos:column="71">++</op:operator></expr></incr>)
				<expr_stmt><expr><call><name pos:line="941" pos:column="33">lstrcpy</name><argument_list pos:line="941" pos:column="40">(<argument><expr><name><name pos:line="941" pos:column="41">this</name><op:operator pos:line="941" pos:column="45">-&gt;</op:operator><name pos:line="941" pos:column="47">_keywordLists</name><index pos:line="941" pos:column="60">[<expr><name pos:line="941" pos:column="61">i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="941" pos:column="65">ulc</name><op:operator pos:line="941" pos:column="68">.</op:operator><name pos:line="941" pos:column="69">_keywordLists</name><index pos:line="941" pos:column="82">[<expr><name pos:line="941" pos:column="83">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
		}</block></then></if>
		<return pos:line="943" pos:column="17">return <expr><op:operator pos:line="943" pos:column="24">*</op:operator><name pos:line="943" pos:column="25">this</name></expr>;</return>
	}</block></function><empty_stmt pos:line="944" pos:column="10">;</empty_stmt>

	<comment type="line" pos:line="946" pos:column="9">// int getNbKeywordList() {return SCE_USER_KWLIST_TOTAL;};</comment>
	<function><type><specifier pos:line="947" pos:column="9">const</specifier> <name pos:line="947" pos:column="15">TCHAR</name> <type:modifier pos:line="947" pos:column="21">*</type:modifier></type> <name pos:line="947" pos:column="23">getName</name><parameter_list pos:line="947" pos:column="30">()</parameter_list> <block pos:line="947" pos:column="33">{<return pos:line="947" pos:column="34">return <expr><call><name><name pos:line="947" pos:column="41">_name</name><op:operator pos:line="947" pos:column="46">.</op:operator><name pos:line="947" pos:column="47">c_str</name></name><argument_list pos:line="947" pos:column="52">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="947" pos:column="56">;</empty_stmt>
	<function><type><specifier pos:line="948" pos:column="9">const</specifier> <name pos:line="948" pos:column="15">TCHAR</name> <type:modifier pos:line="948" pos:column="21">*</type:modifier></type> <name pos:line="948" pos:column="23">getExtention</name><parameter_list pos:line="948" pos:column="35">()</parameter_list> <block pos:line="948" pos:column="38">{<return pos:line="948" pos:column="39">return <expr><call><name><name pos:line="948" pos:column="46">_ext</name><op:operator pos:line="948" pos:column="50">.</op:operator><name pos:line="948" pos:column="51">c_str</name></name><argument_list pos:line="948" pos:column="56">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="948" pos:column="60">;</empty_stmt>
	<function><type><specifier pos:line="949" pos:column="9">const</specifier> <name pos:line="949" pos:column="15">TCHAR</name> <type:modifier pos:line="949" pos:column="21">*</type:modifier></type> <name pos:line="949" pos:column="23">getUdlVersion</name><parameter_list pos:line="949" pos:column="36">()</parameter_list> <block pos:line="949" pos:column="39">{<return pos:line="949" pos:column="40">return <expr><call><name><name pos:line="949" pos:column="47">_udlVersion</name><op:operator pos:line="949" pos:column="58">.</op:operator><name pos:line="949" pos:column="59">c_str</name></name><argument_list pos:line="949" pos:column="64">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="949" pos:column="68">;</empty_stmt>

</public><private pos:line="951" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="952" pos:column="9">StyleArray</name></type> <name pos:line="952" pos:column="20">_styleArray</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="953" pos:column="9">generic_string</name></type> <name pos:line="953" pos:column="24">_name</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="954" pos:column="9">generic_string</name></type> <name pos:line="954" pos:column="24">_ext</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="955" pos:column="9">generic_string</name></type> <name pos:line="955" pos:column="24">_udlVersion</name></decl>;</decl_stmt>

	<comment type="line" pos:line="957" pos:column="9">//TCHAR _keywordLists[nbKeywodList][max_char];</comment>
	<decl_stmt><decl><type><name pos:line="958" pos:column="9">TCHAR</name></type> <name><name pos:line="958" pos:column="15">_keywordLists</name><index pos:line="958" pos:column="28">[<expr><name pos:line="958" pos:column="29">SCE_USER_KWLIST_TOTAL</name></expr>]</index><index pos:line="958" pos:column="51">[<expr><name pos:line="958" pos:column="52">max_char</name></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="960" pos:column="9">bool</name></type> <name pos:line="960" pos:column="14">_isCaseIgnored</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="961" pos:column="9">bool</name></type> <name pos:line="961" pos:column="14">_allowFoldOfComments</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="962" pos:column="9">bool</name></type> <name pos:line="962" pos:column="14">_forceLineCommentsAtBOL</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="963" pos:column="9">bool</name></type> <name pos:line="963" pos:column="14">_foldCompact</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="964" pos:column="9">bool</name></type> <name><name pos:line="964" pos:column="14">_isPrefix</name><index pos:line="964" pos:column="23">[<expr><name pos:line="964" pos:column="24">SCE_USER_TOTAL_KEYWORD_GROUPS</name></expr>]</index></name></decl>;</decl_stmt>
</private>}</block>;</class>

<cpp:define pos:line="967" pos:column="1">#<cpp:directive pos:line="967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="967" pos:column="9">MAX_EXTERNAL_LEXER_NAME_LEN</name></cpp:macro> <cpp:value pos:line="967" pos:column="37">16</cpp:value></cpp:define>
<cpp:define pos:line="968" pos:column="1">#<cpp:directive pos:line="968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="968" pos:column="9">MAX_EXTERNAL_LEXER_DESC_LEN</name></cpp:macro> <cpp:value pos:line="968" pos:column="37">32</cpp:value></cpp:define>

<class pos:line="970" pos:column="1">class <name pos:line="970" pos:column="7">ExternalLangContainer</name>
<block pos:line="971" pos:column="1">{<private type="default" pos:line="971" pos:column="2">
</private><public pos:line="972" pos:column="1">public:
	<decl_stmt><decl><type><name pos:line="973" pos:column="9">TCHAR</name></type> <name><name pos:line="973" pos:column="15">_name</name><index pos:line="973" pos:column="20">[<expr><name pos:line="973" pos:column="21">MAX_EXTERNAL_LEXER_NAME_LEN</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="974" pos:column="9">TCHAR</name></type> <name><name pos:line="974" pos:column="15">_desc</name><index pos:line="974" pos:column="20">[<expr><name pos:line="974" pos:column="21">MAX_EXTERNAL_LEXER_DESC_LEN</name></expr>]</index></name></decl>;</decl_stmt>

	<constructor><name pos:line="976" pos:column="9">ExternalLangContainer</name><parameter_list pos:line="976" pos:column="30">(<param><decl><type><specifier pos:line="976" pos:column="31">const</specifier> <name pos:line="976" pos:column="37">TCHAR</name> <type:modifier pos:line="976" pos:column="43">*</type:modifier></type><name pos:line="976" pos:column="44">name</name></decl></param>, <param><decl><type><specifier pos:line="976" pos:column="50">const</specifier> <name pos:line="976" pos:column="56">TCHAR</name> <type:modifier pos:line="976" pos:column="62">*</type:modifier></type><name pos:line="976" pos:column="63">desc</name></decl></param>)</parameter_list> <block pos:line="976" pos:column="69">{
		<expr_stmt><expr><call><name pos:line="977" pos:column="17">generic_strncpy</name><argument_list pos:line="977" pos:column="32">(<argument><expr><name pos:line="977" pos:column="33">_name</name></expr></argument>, <argument><expr><name pos:line="977" pos:column="40">name</name></expr></argument>, <argument><expr><name pos:line="977" pos:column="46">MAX_EXTERNAL_LEXER_NAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="978" pos:column="17">generic_strncpy</name><argument_list pos:line="978" pos:column="32">(<argument><expr><name pos:line="978" pos:column="33">_desc</name></expr></argument>, <argument><expr><name pos:line="978" pos:column="40">desc</name></expr></argument>, <argument><expr><name pos:line="978" pos:column="46">MAX_EXTERNAL_LEXER_DESC_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="979" pos:column="10">;</empty_stmt>
</public>}</block>;</class>

<struct pos:line="982" pos:column="1">struct <name pos:line="982" pos:column="8">FindHistory</name> <block pos:line="982" pos:column="20">{<public type="default" pos:line="982" pos:column="21">
	<enum pos:line="983" pos:column="9">enum <name pos:line="983" pos:column="14">searchMode</name><block pos:line="983" pos:column="24">{<decl><name pos:line="983" pos:column="25">normal</name></decl><op:operator pos:line="983" pos:column="31">,</op:operator> <decl><name pos:line="983" pos:column="33">extended</name></decl><op:operator pos:line="983" pos:column="41">,</op:operator> <decl><name pos:line="983" pos:column="43">regExpr</name></decl>}</block>;</enum>
	<enum pos:line="984" pos:column="9">enum <name pos:line="984" pos:column="14">transparencyMode</name><block pos:line="984" pos:column="30">{<decl><name pos:line="984" pos:column="31">none</name></decl><op:operator pos:line="984" pos:column="35">,</op:operator> <decl><name pos:line="984" pos:column="37">onLossingFocus</name></decl><op:operator pos:line="984" pos:column="51">,</op:operator> <decl><name pos:line="984" pos:column="53">persistant</name></decl>}</block>;</enum>

	<constructor><name pos:line="986" pos:column="9">FindHistory</name><parameter_list pos:line="986" pos:column="20">()</parameter_list> <member_list pos:line="986" pos:column="23">: <call><name pos:line="986" pos:column="25">_nbMaxFindHistoryPath</name><argument_list pos:line="986" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="986" pos:column="47">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="986" pos:column="50">,</op:operator> <call><name pos:line="986" pos:column="52">_nbMaxFindHistoryFilter</name><argument_list pos:line="986" pos:column="75">(<argument><expr><lit:literal type="number" pos:line="986" pos:column="76">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="986" pos:column="79">,</op:operator> <call><name pos:line="986" pos:column="81">_nbMaxFindHistoryFind</name><argument_list pos:line="986" pos:column="102">(<argument><expr><lit:literal type="number" pos:line="986" pos:column="103">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="986" pos:column="106">,</op:operator> <call><name pos:line="986" pos:column="108">_nbMaxFindHistoryReplace</name><argument_list pos:line="986" pos:column="132">(<argument><expr><lit:literal type="number" pos:line="986" pos:column="133">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="986" pos:column="136">,</op:operator>\
					<call><name pos:line="987" pos:column="41">_isMatchWord</name><argument_list pos:line="987" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="987" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="987" pos:column="60">,</op:operator> <call><name pos:line="987" pos:column="62">_isMatchCase</name><argument_list pos:line="987" pos:column="74">(<argument><expr><lit:literal type="boolean" pos:line="987" pos:column="75">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="987" pos:column="81">,</op:operator><call><name pos:line="987" pos:column="82">_isWrap</name><argument_list pos:line="987" pos:column="89">(<argument><expr><lit:literal type="boolean" pos:line="987" pos:column="90">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="987" pos:column="95">,</op:operator><call><name pos:line="987" pos:column="96">_isDirectionDown</name><argument_list pos:line="987" pos:column="112">(<argument><expr><lit:literal type="boolean" pos:line="987" pos:column="113">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="987" pos:column="118">,</op:operator>\
					<call><name pos:line="988" pos:column="41">_isFifRecuisive</name><argument_list pos:line="988" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="988" pos:column="57">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="988" pos:column="62">,</op:operator> <call><name pos:line="988" pos:column="64">_isFifInHiddenFolder</name><argument_list pos:line="988" pos:column="84">(<argument><expr><lit:literal type="boolean" pos:line="988" pos:column="85">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="988" pos:column="91">,</op:operator> <call><name pos:line="988" pos:column="93">_isDlgAlwaysVisible</name><argument_list pos:line="988" pos:column="112">(<argument><expr><lit:literal type="boolean" pos:line="988" pos:column="113">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="988" pos:column="119">,</op:operator>\
					<call><name pos:line="989" pos:column="41">_isFilterFollowDoc</name><argument_list pos:line="989" pos:column="59">(<argument><expr><lit:literal type="boolean" pos:line="989" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="989" pos:column="66">,</op:operator> <call><name pos:line="989" pos:column="68">_isFolderFollowDoc</name><argument_list pos:line="989" pos:column="86">(<argument><expr><lit:literal type="boolean" pos:line="989" pos:column="87">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="989" pos:column="93">,</op:operator>\
					<call><name pos:line="990" pos:column="41">_searchMode</name><argument_list pos:line="990" pos:column="52">(<argument><expr><name pos:line="990" pos:column="53">normal</name></expr></argument>)</argument_list></call><op:operator pos:line="990" pos:column="60">,</op:operator> <call><name pos:line="990" pos:column="62">_transparencyMode</name><argument_list pos:line="990" pos:column="79">(<argument><expr><name pos:line="990" pos:column="80">onLossingFocus</name></expr></argument>)</argument_list></call><op:operator pos:line="990" pos:column="95">,</op:operator> <call><name pos:line="990" pos:column="97">_transparency</name><argument_list pos:line="990" pos:column="110">(<argument><expr><lit:literal type="number" pos:line="990" pos:column="111">150</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="990" pos:column="115">,</op:operator>
					<call><name pos:line="991" pos:column="41">_dotMatchesNewline</name><argument_list pos:line="991" pos:column="59">(<argument><expr><lit:literal type="boolean" pos:line="991" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call>
					
	</member_list><block pos:line="993" pos:column="9">{}</block></constructor><empty_stmt pos:line="993" pos:column="11">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="994" pos:column="9">int</name></type> <name pos:line="994" pos:column="13">_nbMaxFindHistoryPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="995" pos:column="9">int</name></type> <name pos:line="995" pos:column="13">_nbMaxFindHistoryFilter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="996" pos:column="9">int</name></type> <name pos:line="996" pos:column="13">_nbMaxFindHistoryFind</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="997" pos:column="9">int</name></type> <name pos:line="997" pos:column="13">_nbMaxFindHistoryReplace</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="999" pos:column="5">vector</name><argument_list pos:line="999" pos:column="11">&lt;<argument><expr><name pos:line="999" pos:column="12">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="999" pos:column="28">_findHistoryPaths</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1000" pos:column="9">vector</name><argument_list pos:line="1000" pos:column="15">&lt;<argument><expr><name pos:line="1000" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1000" pos:column="32">_findHistoryFilters</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1001" pos:column="9">vector</name><argument_list pos:line="1001" pos:column="15">&lt;<argument><expr><name pos:line="1001" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1001" pos:column="32">_findHistoryFinds</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1002" pos:column="9">vector</name><argument_list pos:line="1002" pos:column="15">&lt;<argument><expr><name pos:line="1002" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1002" pos:column="32">_findHistoryReplaces</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1004" pos:column="9">bool</name></type> <name pos:line="1004" pos:column="14">_isMatchWord</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1005" pos:column="9">bool</name></type> <name pos:line="1005" pos:column="14">_isMatchCase</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1006" pos:column="9">bool</name></type> <name pos:line="1006" pos:column="14">_isWrap</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1007" pos:column="9">bool</name></type> <name pos:line="1007" pos:column="14">_isDirectionDown</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1008" pos:column="9">bool</name></type> <name pos:line="1008" pos:column="14">_dotMatchesNewline</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1010" pos:column="9">bool</name></type> <name pos:line="1010" pos:column="14">_isFifRecuisive</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1011" pos:column="9">bool</name></type> <name pos:line="1011" pos:column="14">_isFifInHiddenFolder</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="1013" pos:column="9">searchMode</name></type> <name pos:line="1013" pos:column="20">_searchMode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1014" pos:column="9">transparencyMode</name></type> <name pos:line="1014" pos:column="26">_transparencyMode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1015" pos:column="9">int</name></type> <name pos:line="1015" pos:column="13">_transparency</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1017" pos:column="9">bool</name></type> <name pos:line="1017" pos:column="14">_isDlgAlwaysVisible</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1018" pos:column="9">bool</name></type> <name pos:line="1018" pos:column="14">_isFilterFollowDoc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1019" pos:column="9">bool</name></type> <name pos:line="1019" pos:column="14">_isFolderFollowDoc</name></decl>;</decl_stmt>
</public>}</block>;</struct>


<cpp:ifdef pos:line="1023" pos:column="1">#<cpp:directive pos:line="1023" pos:column="2">ifdef</cpp:directive> <name pos:line="1023" pos:column="8">UNICODE</name></cpp:ifdef>

<class pos:line="1025" pos:column="1">class <name pos:line="1025" pos:column="7">LocalizationSwitcher</name> <block pos:line="1025" pos:column="28">{<private type="default" pos:line="1025" pos:column="29">
<class_decl><specifier pos:line="1026" pos:column="1">friend</specifier> class <name pos:line="1026" pos:column="14">NppParameters</name>;</class_decl>
</private><public pos:line="1027" pos:column="1">public :
    <constructor><name pos:line="1028" pos:column="5">LocalizationSwitcher</name><parameter_list pos:line="1028" pos:column="25">()</parameter_list> <member_list pos:line="1028" pos:column="28">: <call><name pos:line="1028" pos:column="30">_fileName</name><argument_list pos:line="1028" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1028" pos:column="40">""</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="1028" pos:column="44">{}</block></constructor><empty_stmt pos:line="1028" pos:column="46">;</empty_stmt>

	<struct pos:line="1030" pos:column="9">struct <name pos:line="1030" pos:column="16">LocalizationDefinition</name> <block pos:line="1030" pos:column="39">{<public type="default" pos:line="1030" pos:column="40">
		<decl_stmt><decl><type><name pos:line="1031" pos:column="17">wchar_t</name> <type:modifier pos:line="1031" pos:column="25">*</type:modifier></type><name pos:line="1031" pos:column="26">_langName</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1032" pos:column="17">wchar_t</name> <type:modifier pos:line="1032" pos:column="25">*</type:modifier></type><name pos:line="1032" pos:column="26">_xmlFileName</name></decl>;</decl_stmt>
	</public>}</block>;</struct>

	<function_decl><type><name pos:line="1035" pos:column="9">bool</name></type> <name pos:line="1035" pos:column="14">addLanguageFromXml</name><parameter_list pos:line="1035" pos:column="32">(<param><decl><type><name pos:line="1035" pos:column="33">wstring</name></type> <name pos:line="1035" pos:column="41">xmlFullPath</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1036" pos:column="9">wstring</name></type> <name pos:line="1036" pos:column="17">getLangFromXmlFileName</name><parameter_list pos:line="1036" pos:column="39">(<param><decl><type><specifier pos:line="1036" pos:column="40">const</specifier> <name pos:line="1036" pos:column="46">wchar_t</name> <type:modifier pos:line="1036" pos:column="54">*</type:modifier></type><name pos:line="1036" pos:column="55">fn</name></decl></param>)</parameter_list> <specifier pos:line="1036" pos:column="59">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="1038" pos:column="9">wstring</name></type> <name pos:line="1038" pos:column="17">getXmlFilePathFromLangName</name><parameter_list pos:line="1038" pos:column="43">(<param><decl><type><specifier pos:line="1038" pos:column="44">const</specifier> <name pos:line="1038" pos:column="50">wchar_t</name> <type:modifier pos:line="1038" pos:column="58">*</type:modifier></type><name pos:line="1038" pos:column="59">langName</name></decl></param>)</parameter_list> <specifier pos:line="1038" pos:column="69">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="1039" pos:column="9">bool</name></type> <name pos:line="1039" pos:column="14">switchToLang</name><parameter_list pos:line="1039" pos:column="26">(<param><decl><type><name pos:line="1039" pos:column="27">wchar_t</name> <type:modifier pos:line="1039" pos:column="35">*</type:modifier></type><name pos:line="1039" pos:column="36">lang2switch</name></decl></param>)</parameter_list> <specifier pos:line="1039" pos:column="49">const</specifier>;</function_decl>

	<function><type><name pos:line="1041" pos:column="9">size_t</name></type> <name pos:line="1041" pos:column="16">size</name><parameter_list pos:line="1041" pos:column="20">()</parameter_list> <specifier pos:line="1041" pos:column="23">const</specifier> <block pos:line="1041" pos:column="29">{
		<return pos:line="1042" pos:column="17">return <expr><call><name><name pos:line="1042" pos:column="24">_localizationList</name><op:operator pos:line="1042" pos:column="41">.</op:operator><name pos:line="1042" pos:column="42">size</name></name><argument_list pos:line="1042" pos:column="46">()</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="1043" pos:column="10">;</empty_stmt>

	<function><type><name><name pos:line="1045" pos:column="9">pair</name><argument_list pos:line="1045" pos:column="13">&lt;<argument><expr><name pos:line="1045" pos:column="14">wstring</name></expr></argument>, <argument><expr><name pos:line="1045" pos:column="23">wstring</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1045" pos:column="32">getElementFromIndex</name><parameter_list pos:line="1045" pos:column="51">(<param><decl><type><name pos:line="1045" pos:column="52">size_t</name></type> <name pos:line="1045" pos:column="59">index</name></decl></param>)</parameter_list> <block pos:line="1045" pos:column="66">{
		<if pos:line="1046" pos:column="17">if <condition pos:line="1046" pos:column="20">(<expr><name pos:line="1046" pos:column="21">index</name> <op:operator pos:line="1046" pos:column="27">&gt;=</op:operator> <call><name><name pos:line="1046" pos:column="30">_localizationList</name><op:operator pos:line="1046" pos:column="47">.</op:operator><name pos:line="1046" pos:column="48">size</name></name><argument_list pos:line="1046" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="1046" pos:column="55">
			<return pos:line="1047" pos:column="25">return <expr><call><name><name pos:line="1047" pos:column="32">pair</name><argument_list pos:line="1047" pos:column="36">&lt;<argument><expr><name pos:line="1047" pos:column="37">wstring</name></expr></argument>, <argument><expr><name pos:line="1047" pos:column="46">wstring</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1047" pos:column="54">(<argument><expr><call><name pos:line="1047" pos:column="55">TEXT</name><argument_list pos:line="1047" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1047" pos:column="60">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1047" pos:column="65">TEXT</name><argument_list pos:line="1047" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="1047" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
		<return pos:line="1048" pos:column="17">return <expr><name><name pos:line="1048" pos:column="24">_localizationList</name><index pos:line="1048" pos:column="41">[<expr><name pos:line="1048" pos:column="42">index</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="1049" pos:column="10">;</empty_stmt>

    <function><type><name pos:line="1051" pos:column="5">void</name></type> <name pos:line="1051" pos:column="10">setFileName</name><parameter_list pos:line="1051" pos:column="21">(<param><decl><type><specifier pos:line="1051" pos:column="22">const</specifier> <name pos:line="1051" pos:column="28">char</name> <type:modifier pos:line="1051" pos:column="33">*</type:modifier></type><name pos:line="1051" pos:column="34">fn</name></decl></param>)</parameter_list> <block pos:line="1051" pos:column="38">{
        <if pos:line="1052" pos:column="9">if <condition pos:line="1052" pos:column="12">(<expr><name pos:line="1052" pos:column="13">fn</name></expr>)</condition><then pos:line="1052" pos:column="16">
            <expr_stmt><expr><name pos:line="1053" pos:column="13">_fileName</name> <op:operator pos:line="1053" pos:column="23">=</op:operator> <name pos:line="1053" pos:column="25">fn</name></expr>;</expr_stmt></then></if>
    }</block></function><empty_stmt pos:line="1054" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="1056" pos:column="5">string</name></type> <name pos:line="1056" pos:column="12">getFileName</name><parameter_list pos:line="1056" pos:column="23">()</parameter_list> <specifier pos:line="1056" pos:column="26">const</specifier> <block pos:line="1056" pos:column="32">{
        <return pos:line="1057" pos:column="9">return <expr><name pos:line="1057" pos:column="16">_fileName</name></expr>;</return>
    }</block></function><empty_stmt pos:line="1058" pos:column="6">;</empty_stmt>

</public><private pos:line="1060" pos:column="1">private :
	<decl_stmt><decl><type><name><name pos:line="1061" pos:column="9">vector</name><argument_list pos:line="1061" pos:column="15">&lt; <argument><expr><name><name pos:line="1061" pos:column="17">pair</name><argument_list pos:line="1061" pos:column="21">&lt; <argument><expr><name pos:line="1061" pos:column="23">wstring</name></expr></argument>, <argument><expr><name pos:line="1061" pos:column="32">wstring</name></expr></argument> &gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name pos:line="1061" pos:column="44">_localizationList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1062" pos:column="9">wstring</name></type> <name pos:line="1062" pos:column="17">_nativeLangPath</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1063" pos:column="5">string</name></type> <name pos:line="1063" pos:column="12">_fileName</name></decl>;</decl_stmt>
</private>}</block>;</class>
<cpp:endif pos:line="1065" pos:column="1">#<cpp:directive pos:line="1065" pos:column="2">endif</cpp:directive></cpp:endif>

<class pos:line="1067" pos:column="1">class <name pos:line="1067" pos:column="7">ThemeSwitcher</name> <block pos:line="1067" pos:column="21">{<private type="default" pos:line="1067" pos:column="22">
<class_decl><specifier pos:line="1068" pos:column="1">friend</specifier> class <name pos:line="1068" pos:column="14">NppParameters</name>;</class_decl>

</private><public pos:line="1070" pos:column="1">public :
	<constructor><name pos:line="1071" pos:column="9">ThemeSwitcher</name><parameter_list pos:line="1071" pos:column="22">()</parameter_list><block pos:line="1071" pos:column="24">{}</block></constructor><empty_stmt pos:line="1071" pos:column="26">;</empty_stmt>

	<function><type><name pos:line="1073" pos:column="9">void</name></type> <name pos:line="1073" pos:column="14">addThemeFromXml</name><parameter_list pos:line="1073" pos:column="29">(<param><decl><type><name pos:line="1073" pos:column="30">generic_string</name></type> <name pos:line="1073" pos:column="45">xmlFullPath</name></decl></param>)</parameter_list> <block pos:line="1073" pos:column="58">{
		<expr_stmt><expr><call><name><name pos:line="1074" pos:column="17">_themeList</name><op:operator pos:line="1074" pos:column="27">.</op:operator><name pos:line="1074" pos:column="28">push_back</name></name><argument_list pos:line="1074" pos:column="37">(<argument><expr><call><name><name pos:line="1074" pos:column="38">pair</name><argument_list pos:line="1074" pos:column="42">&lt;<argument><expr><name pos:line="1074" pos:column="43">generic_string</name></expr></argument>, <argument><expr><name pos:line="1074" pos:column="59">generic_string</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1074" pos:column="74">(<argument><expr><call><name pos:line="1074" pos:column="75">getThemeFromXmlFileName</name><argument_list pos:line="1074" pos:column="98">(<argument><expr><call><name><name pos:line="1074" pos:column="99">xmlFullPath</name><op:operator pos:line="1074" pos:column="110">.</op:operator><name pos:line="1074" pos:column="111">c_str</name></name><argument_list pos:line="1074" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1074" pos:column="121">xmlFullPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1075" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1077" pos:column="9">void</name></type> <name pos:line="1077" pos:column="14">addDefaultThemeFromXml</name><parameter_list pos:line="1077" pos:column="36">(<param><decl><type><name pos:line="1077" pos:column="37">generic_string</name></type> <name pos:line="1077" pos:column="52">xmlFullPath</name></decl></param>)</parameter_list> <block pos:line="1077" pos:column="65">{
		<expr_stmt><expr><call><name><name pos:line="1078" pos:column="17">_themeList</name><op:operator pos:line="1078" pos:column="27">.</op:operator><name pos:line="1078" pos:column="28">push_back</name></name><argument_list pos:line="1078" pos:column="37">(<argument><expr><call><name><name pos:line="1078" pos:column="38">pair</name><argument_list pos:line="1078" pos:column="42">&lt;<argument><expr><name pos:line="1078" pos:column="43">generic_string</name></expr></argument>, <argument><expr><name pos:line="1078" pos:column="59">generic_string</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1078" pos:column="74">(<argument><expr><call><name pos:line="1078" pos:column="75">TEXT</name><argument_list pos:line="1078" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="1078" pos:column="80">"Default (stylers.xml)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1078" pos:column="106">xmlFullPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1079" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="1081" pos:column="9">generic_string</name></type> <name pos:line="1081" pos:column="24">getThemeFromXmlFileName</name><parameter_list pos:line="1081" pos:column="47">(<param><decl><type><specifier pos:line="1081" pos:column="48">const</specifier> <name pos:line="1081" pos:column="54">TCHAR</name> <type:modifier pos:line="1081" pos:column="60">*</type:modifier></type><name pos:line="1081" pos:column="61">fn</name></decl></param>)</parameter_list> <specifier pos:line="1081" pos:column="65">const</specifier>;</function_decl>

	<function><type><name pos:line="1083" pos:column="9">generic_string</name></type> <name pos:line="1083" pos:column="24">getXmlFilePathFromThemeName</name><parameter_list pos:line="1083" pos:column="51">(<param><decl><type><specifier pos:line="1083" pos:column="52">const</specifier> <name pos:line="1083" pos:column="58">TCHAR</name> <type:modifier pos:line="1083" pos:column="64">*</type:modifier></type><name pos:line="1083" pos:column="65">themeName</name></decl></param>)</parameter_list> <specifier pos:line="1083" pos:column="76">const</specifier> <block pos:line="1083" pos:column="82">{
		<if pos:line="1084" pos:column="17">if <condition pos:line="1084" pos:column="20">(<expr><op:operator pos:line="1084" pos:column="21">!</op:operator><name pos:line="1084" pos:column="22">themeName</name> <op:operator pos:line="1084" pos:column="32">||</op:operator> <name><name pos:line="1084" pos:column="35">themeName</name><index pos:line="1084" pos:column="44">[<expr><lit:literal type="number" pos:line="1084" pos:column="45">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1084" pos:column="48">
			<return pos:line="1085" pos:column="25">return <expr><call><name pos:line="1085" pos:column="32">TEXT</name><argument_list pos:line="1085" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1085" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
		<decl_stmt><decl><type><name pos:line="1086" pos:column="17">generic_string</name></type> <name pos:line="1086" pos:column="32">themePath</name> <init pos:line="1086" pos:column="42">= <expr><name pos:line="1086" pos:column="44">_stylesXmlPath</name></expr></init></decl>;</decl_stmt>
		<return pos:line="1087" pos:column="17">return <expr><name pos:line="1087" pos:column="24">themePath</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1088" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1090" pos:column="9">bool</name></type> <name pos:line="1090" pos:column="14">themeNameExists</name><parameter_list pos:line="1090" pos:column="29">(<param><decl><type><specifier pos:line="1090" pos:column="30">const</specifier> <name pos:line="1090" pos:column="36">TCHAR</name> <type:modifier pos:line="1090" pos:column="42">*</type:modifier></type><name pos:line="1090" pos:column="43">themeName</name></decl></param>)</parameter_list> <block pos:line="1090" pos:column="54">{
		<for pos:line="1091" pos:column="17">for (<init><decl><type><name pos:line="1091" pos:column="22">size_t</name></type> <name pos:line="1091" pos:column="29">i</name> <init pos:line="1091" pos:column="31">= <expr><lit:literal type="number" pos:line="1091" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1091" pos:column="36">i</name> <op:operator pos:line="1091" pos:column="38">&lt;</op:operator> <call><name><name pos:line="1091" pos:column="40">_themeList</name><op:operator pos:line="1091" pos:column="50">.</op:operator><name pos:line="1091" pos:column="51">size</name></name><argument_list pos:line="1091" pos:column="55">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="1091" pos:column="59">i</name><op:operator pos:line="1091" pos:column="60">++</op:operator></expr></incr> )
		<block pos:line="1092" pos:column="17">{
			<if pos:line="1093" pos:column="25">if <condition pos:line="1093" pos:column="28">(<expr><op:operator pos:line="1093" pos:column="29">!</op:operator> <op:operator pos:line="1093" pos:column="31">(</op:operator><call><name pos:line="1093" pos:column="32">getElementFromIndex</name><argument_list pos:line="1093" pos:column="51">(<argument><expr><name pos:line="1093" pos:column="52">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1093" pos:column="54">)</op:operator><op:operator pos:line="1093" pos:column="55">.</op:operator><call><name><name pos:line="1093" pos:column="56">first</name><op:operator pos:line="1093" pos:column="61">.</op:operator><name pos:line="1093" pos:column="62">compare</name></name><argument_list pos:line="1093" pos:column="69">(<argument><expr><name pos:line="1093" pos:column="70">themeName</name></expr></argument>)</argument_list></call></expr> )</condition><then pos:line="1093" pos:column="82"> <return pos:line="1093" pos:column="83">return <expr><lit:literal type="boolean" pos:line="1093" pos:column="90">true</lit:literal></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1095" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1095" pos:column="24">false</lit:literal></expr>;</return>
	}</block></function>

	<function><type><name pos:line="1098" pos:column="9">size_t</name></type> <name pos:line="1098" pos:column="16">size</name><parameter_list pos:line="1098" pos:column="20">()</parameter_list> <specifier pos:line="1098" pos:column="23">const</specifier> <block pos:line="1098" pos:column="29">{
		<return pos:line="1099" pos:column="17">return <expr><call><name><name pos:line="1099" pos:column="24">_themeList</name><op:operator pos:line="1099" pos:column="34">.</op:operator><name pos:line="1099" pos:column="35">size</name></name><argument_list pos:line="1099" pos:column="39">()</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="1100" pos:column="10">;</empty_stmt>

	
	<function><type><name><name pos:line="1103" pos:column="9">pair</name><argument_list pos:line="1103" pos:column="13">&lt;<argument><expr><name pos:line="1103" pos:column="14">generic_string</name></expr></argument>, <argument><expr><name pos:line="1103" pos:column="30">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1103" pos:column="46">&amp;</type:modifier></type> <name pos:line="1103" pos:column="48">getElementFromIndex</name><parameter_list pos:line="1103" pos:column="67">(<param><decl><type><name pos:line="1103" pos:column="68">size_t</name></type> <name pos:line="1103" pos:column="75">index</name></decl></param>)</parameter_list> <block pos:line="1103" pos:column="82">{
		<comment type="line" pos:line="1104" pos:column="17">//if (index &gt;= _themeList.size())</comment>
			<comment type="line" pos:line="1105" pos:column="25">//return pair&lt;generic_string, generic_string&gt;(TEXT(""), TEXT(""));</comment>
		<return pos:line="1106" pos:column="17">return <expr><name><name pos:line="1106" pos:column="24">_themeList</name><index pos:line="1106" pos:column="34">[<expr><name pos:line="1106" pos:column="35">index</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="1107" pos:column="10">;</empty_stmt>

</public><private pos:line="1109" pos:column="1">private :
	<decl_stmt><decl><type><name><name pos:line="1110" pos:column="9">vector</name><argument_list pos:line="1110" pos:column="15">&lt; <argument><expr><name><name pos:line="1110" pos:column="17">pair</name><argument_list pos:line="1110" pos:column="21">&lt; <argument><expr><name pos:line="1110" pos:column="23">generic_string</name></expr></argument>, <argument><expr><name pos:line="1110" pos:column="39">generic_string</name></expr></argument> &gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name pos:line="1110" pos:column="58">_themeList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1111" pos:column="9">generic_string</name></type> <name pos:line="1111" pos:column="24">_stylesXmlPath</name></decl>;</decl_stmt>
</private>}</block>;</class>

<class pos:line="1114" pos:column="1">class <name pos:line="1114" pos:column="7">PluginList</name> <block pos:line="1114" pos:column="18">{<private type="default" pos:line="1114" pos:column="19">
</private><public pos:line="1115" pos:column="1">public :
    <function><type><name pos:line="1116" pos:column="5">void</name></type> <name pos:line="1116" pos:column="10">add</name><parameter_list pos:line="1116" pos:column="13">(<param><decl><type><name pos:line="1116" pos:column="14">generic_string</name></type> <name pos:line="1116" pos:column="29">fn</name></decl></param>, <param><decl><type><name pos:line="1116" pos:column="33">bool</name></type> <name pos:line="1116" pos:column="38">isInBL</name></decl></param>)</parameter_list><block pos:line="1116" pos:column="45">{
        <expr_stmt><expr><call><name><name pos:line="1117" pos:column="9">_list</name><op:operator pos:line="1117" pos:column="14">.</op:operator><name pos:line="1117" pos:column="15">push_back</name></name><argument_list pos:line="1117" pos:column="24">(<argument><expr><call><name><name pos:line="1117" pos:column="25">pair</name><argument_list pos:line="1117" pos:column="29">&lt;<argument><expr><name pos:line="1117" pos:column="30">generic_string</name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="46">bool</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1117" pos:column="51">(<argument><expr><name pos:line="1117" pos:column="52">fn</name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="56">isInBL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="1118" pos:column="6">;</empty_stmt>
</public><private pos:line="1119" pos:column="1">private :
    <decl_stmt><decl><type><name><name pos:line="1120" pos:column="5">vector</name><argument_list pos:line="1120" pos:column="11">&lt;<argument><expr><name><name pos:line="1120" pos:column="12">pair</name><argument_list pos:line="1120" pos:column="16">&lt;<argument><expr><name pos:line="1120" pos:column="17">generic_string</name></expr></argument>, <argument><expr><name pos:line="1120" pos:column="33">bool</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type><name pos:line="1120" pos:column="39">_list</name></decl>;</decl_stmt>
</private>}</block>;</class>

<decl_stmt><decl><type><specifier pos:line="1123" pos:column="1">const</specifier> <name pos:line="1123" pos:column="7">int</name></type> <name pos:line="1123" pos:column="11">NB_LANG</name> <init pos:line="1123" pos:column="19">= <expr><lit:literal type="number" pos:line="1123" pos:column="21">80</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1124" pos:column="1">const</specifier> <name pos:line="1124" pos:column="7">bool</name></type> <name pos:line="1124" pos:column="12">DUP</name> <init pos:line="1124" pos:column="16">= <expr><lit:literal type="boolean" pos:line="1124" pos:column="18">true</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1125" pos:column="1">const</specifier> <name pos:line="1125" pos:column="7">bool</name></type> <name pos:line="1125" pos:column="12">FREE</name> <init pos:line="1125" pos:column="17">= <expr><lit:literal type="boolean" pos:line="1125" pos:column="19">false</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="1127" pos:column="1">const</specifier> <name pos:line="1127" pos:column="7">int</name></type> <name pos:line="1127" pos:column="11">RECENTFILES_SHOWFULLPATH</name> <init pos:line="1127" pos:column="36">= <expr><op:operator pos:line="1127" pos:column="38">-</op:operator><lit:literal type="number" pos:line="1127" pos:column="39">1</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1128" pos:column="1">const</specifier> <name pos:line="1128" pos:column="7">int</name></type> <name pos:line="1128" pos:column="11">RECENTFILES_SHOWONLYFILENAME</name> <init pos:line="1128" pos:column="40">= <expr><lit:literal type="number" pos:line="1128" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>

<class pos:line="1130" pos:column="1">class <name pos:line="1130" pos:column="7">NppParameters</name> 
<block pos:line="1131" pos:column="1">{<private type="default" pos:line="1131" pos:column="2">
</private><public pos:line="1132" pos:column="1">public:
    <function><type><specifier pos:line="1133" pos:column="5">static</specifier> <name pos:line="1133" pos:column="12">NppParameters</name> <type:modifier pos:line="1133" pos:column="26">*</type:modifier></type> <name pos:line="1133" pos:column="28">getInstance</name><parameter_list pos:line="1133" pos:column="39">()</parameter_list> <block pos:line="1133" pos:column="42">{<return pos:line="1133" pos:column="43">return <expr><name pos:line="1133" pos:column="50">_pSelf</name></expr>;</return>}</block></function><empty_stmt pos:line="1133" pos:column="58">;</empty_stmt>
	<function_decl><type><specifier pos:line="1134" pos:column="9">static</specifier> <name pos:line="1134" pos:column="16">LangType</name></type> <name pos:line="1134" pos:column="25">getLangIDFromStr</name><parameter_list pos:line="1134" pos:column="41">(<param><decl><type><specifier pos:line="1134" pos:column="42">const</specifier> <name pos:line="1134" pos:column="48">TCHAR</name> <type:modifier pos:line="1134" pos:column="54">*</type:modifier></type><name pos:line="1134" pos:column="55">langName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1135" pos:column="9">bool</name></type> <name pos:line="1135" pos:column="14">load</name><parameter_list pos:line="1135" pos:column="18">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1136" pos:column="9">bool</name></type> <name pos:line="1136" pos:column="14">reloadLang</name><parameter_list pos:line="1136" pos:column="24">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1137" pos:column="9">bool</name></type> <name pos:line="1137" pos:column="14">reloadStylers</name><parameter_list pos:line="1137" pos:column="27">(<param><decl><type><name pos:line="1137" pos:column="28">TCHAR</name> <type:modifier pos:line="1137" pos:column="34">*</type:modifier></type><name pos:line="1137" pos:column="35">stylePath</name> <init pos:line="1137" pos:column="45">= <expr><name pos:line="1137" pos:column="47">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1138" pos:column="5">void</name></type> <name pos:line="1138" pos:column="10">destroyInstance</name><parameter_list pos:line="1138" pos:column="25">()</parameter_list>;</function_decl>

	<decl_stmt><decl><type><name pos:line="1140" pos:column="9">bool</name></type> <name pos:line="1140" pos:column="14">_isTaskListRBUTTONUP_Active</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1141" pos:column="9">int</name></type> <name pos:line="1141" pos:column="13">L_END</name></decl>;</decl_stmt>

	<function><type><specifier pos:line="1143" pos:column="9">const</specifier> <name pos:line="1143" pos:column="15">NppGUI</name> <type:modifier pos:line="1143" pos:column="22">&amp;</type:modifier></type> <name pos:line="1143" pos:column="24">getNppGUI</name><parameter_list pos:line="1143" pos:column="33">()</parameter_list> <specifier pos:line="1143" pos:column="36">const</specifier> <block pos:line="1143" pos:column="42">{
        <return pos:line="1144" pos:column="9">return <expr><name pos:line="1144" pos:column="16">_nppGUI</name></expr>;</return>
    }</block></function><empty_stmt pos:line="1145" pos:column="6">;</empty_stmt>

    <function><type><specifier pos:line="1147" pos:column="5">const</specifier> <name pos:line="1147" pos:column="11">TCHAR</name> <type:modifier pos:line="1147" pos:column="17">*</type:modifier></type> <name pos:line="1147" pos:column="19">getWordList</name><parameter_list pos:line="1147" pos:column="30">(<param><decl><type><name pos:line="1147" pos:column="31">LangType</name></type> <name pos:line="1147" pos:column="40">langID</name></decl></param>, <param><decl><type><name pos:line="1147" pos:column="48">int</name></type> <name pos:line="1147" pos:column="52">typeIndex</name></decl></param>)</parameter_list> <specifier pos:line="1147" pos:column="63">const</specifier> <block pos:line="1147" pos:column="69">{
    	<decl_stmt><decl><type><name pos:line="1148" pos:column="9">Lang</name> <type:modifier pos:line="1148" pos:column="14">*</type:modifier></type><name pos:line="1148" pos:column="15">pLang</name> <init pos:line="1148" pos:column="21">= <expr><call><name pos:line="1148" pos:column="23">getLangFromID</name><argument_list pos:line="1148" pos:column="36">(<argument><expr><name pos:line="1148" pos:column="37">langID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <if pos:line="1149" pos:column="13">if <condition pos:line="1149" pos:column="16">(<expr><op:operator pos:line="1149" pos:column="17">!</op:operator><name pos:line="1149" pos:column="18">pLang</name></expr>)</condition><then pos:line="1149" pos:column="24"> <return pos:line="1149" pos:column="25">return <expr><name pos:line="1149" pos:column="32">NULL</name></expr>;</return></then></if>

        <return pos:line="1151" pos:column="9">return <expr><call><name><name pos:line="1151" pos:column="16">pLang</name><op:operator pos:line="1151" pos:column="21">-&gt;</op:operator><name pos:line="1151" pos:column="23">getWords</name></name><argument_list pos:line="1151" pos:column="31">(<argument><expr><name pos:line="1151" pos:column="32">typeIndex</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function><empty_stmt pos:line="1152" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="1154" pos:column="9">Lang</name> <type:modifier pos:line="1154" pos:column="14">*</type:modifier></type> <name pos:line="1154" pos:column="16">getLangFromID</name><parameter_list pos:line="1154" pos:column="29">(<param><decl><type><name pos:line="1154" pos:column="30">LangType</name></type> <name pos:line="1154" pos:column="39">langID</name></decl></param>)</parameter_list> <specifier pos:line="1154" pos:column="47">const</specifier> <block pos:line="1154" pos:column="53">{
		<for pos:line="1155" pos:column="17">for (<init><decl><type><name pos:line="1155" pos:column="22">int</name></type> <name pos:line="1155" pos:column="26">i</name> <init pos:line="1155" pos:column="28">= <expr><lit:literal type="number" pos:line="1155" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1155" pos:column="34">i</name> <op:operator pos:line="1155" pos:column="36">&lt;</op:operator> <name pos:line="1155" pos:column="38">_nbLang</name></expr> ;</condition> <incr><expr><name pos:line="1155" pos:column="48">i</name><op:operator pos:line="1155" pos:column="49">++</op:operator></expr></incr>)
		<block pos:line="1156" pos:column="17">{
			<if pos:line="1157" pos:column="25">if <condition pos:line="1157" pos:column="28">(<expr><op:operator pos:line="1157" pos:column="29">(</op:operator><name><name pos:line="1157" pos:column="30">_langList</name><index pos:line="1157" pos:column="39">[<expr><name pos:line="1157" pos:column="40">i</name></expr>]</index></name><op:operator pos:line="1157" pos:column="42">-&gt;</op:operator><name pos:line="1157" pos:column="44">_langID</name> <op:operator pos:line="1157" pos:column="52">==</op:operator> <name pos:line="1157" pos:column="55">langID</name><op:operator pos:line="1157" pos:column="61">)</op:operator> <op:operator pos:line="1157" pos:column="63">||</op:operator> <op:operator pos:line="1157" pos:column="66">(</op:operator><op:operator pos:line="1157" pos:column="67">!</op:operator><name><name pos:line="1157" pos:column="68">_langList</name><index pos:line="1157" pos:column="77">[<expr><name pos:line="1157" pos:column="78">i</name></expr>]</index></name><op:operator pos:line="1157" pos:column="80">)</op:operator></expr>)</condition><then pos:line="1157" pos:column="82">
				<return pos:line="1158" pos:column="33">return <expr><name><name pos:line="1158" pos:column="40">_langList</name><index pos:line="1158" pos:column="49">[<expr><name pos:line="1158" pos:column="50">i</name></expr>]</index></name></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1160" pos:column="17">return <expr><name pos:line="1160" pos:column="24">NULL</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1161" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1163" pos:column="9">Lang</name> <type:modifier pos:line="1163" pos:column="14">*</type:modifier></type> <name pos:line="1163" pos:column="16">getLangFromIndex</name><parameter_list pos:line="1163" pos:column="32">(<param><decl><type><name pos:line="1163" pos:column="33">int</name></type> <name pos:line="1163" pos:column="37">i</name></decl></param>)</parameter_list> <specifier pos:line="1163" pos:column="40">const</specifier> <block pos:line="1163" pos:column="46">{
		<if pos:line="1164" pos:column="17">if <condition pos:line="1164" pos:column="20">(<expr><name pos:line="1164" pos:column="21">i</name> <op:operator pos:line="1164" pos:column="23">&gt;=</op:operator> <name pos:line="1164" pos:column="26">_nbLang</name></expr>)</condition><then pos:line="1164" pos:column="34"> <return pos:line="1164" pos:column="35">return <expr><name pos:line="1164" pos:column="42">NULL</name></expr>;</return></then></if>
		<return pos:line="1165" pos:column="17">return <expr><name><name pos:line="1165" pos:column="24">_langList</name><index pos:line="1165" pos:column="33">[<expr><name pos:line="1165" pos:column="34">i</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="1166" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1168" pos:column="9">int</name></type> <name pos:line="1168" pos:column="13">getNbLang</name><parameter_list pos:line="1168" pos:column="22">()</parameter_list> <specifier pos:line="1168" pos:column="25">const</specifier> <block pos:line="1168" pos:column="31">{<return pos:line="1168" pos:column="32">return <expr><name pos:line="1168" pos:column="39">_nbLang</name></expr>;</return>}</block></function><empty_stmt pos:line="1168" pos:column="48">;</empty_stmt>
	
	<function_decl><type><name pos:line="1170" pos:column="9">LangType</name></type> <name pos:line="1170" pos:column="18">getLangFromExt</name><parameter_list pos:line="1170" pos:column="32">(<param><decl><type><specifier pos:line="1170" pos:column="33">const</specifier> <name pos:line="1170" pos:column="39">TCHAR</name> <type:modifier pos:line="1170" pos:column="45">*</type:modifier></type><name pos:line="1170" pos:column="46">ext</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><specifier pos:line="1172" pos:column="9">const</specifier> <name pos:line="1172" pos:column="15">TCHAR</name> <type:modifier pos:line="1172" pos:column="21">*</type:modifier></type> <name pos:line="1172" pos:column="23">getLangExtFromName</name><parameter_list pos:line="1172" pos:column="41">(<param><decl><type><specifier pos:line="1172" pos:column="42">const</specifier> <name pos:line="1172" pos:column="48">TCHAR</name> <type:modifier pos:line="1172" pos:column="54">*</type:modifier></type><name pos:line="1172" pos:column="55">langName</name></decl></param>)</parameter_list> <specifier pos:line="1172" pos:column="65">const</specifier> <block pos:line="1172" pos:column="71">{
		<for pos:line="1173" pos:column="17">for (<init><decl><type><name pos:line="1173" pos:column="22">int</name></type> <name pos:line="1173" pos:column="26">i</name> <init pos:line="1173" pos:column="28">= <expr><lit:literal type="number" pos:line="1173" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1173" pos:column="34">i</name> <op:operator pos:line="1173" pos:column="36">&lt;</op:operator> <name pos:line="1173" pos:column="38">_nbLang</name></expr> ;</condition> <incr><expr><name pos:line="1173" pos:column="48">i</name><op:operator pos:line="1173" pos:column="49">++</op:operator></expr></incr>)
		<block pos:line="1174" pos:column="17">{
			<if pos:line="1175" pos:column="25">if <condition pos:line="1175" pos:column="28">(<expr><name><name pos:line="1175" pos:column="29">_langList</name><index pos:line="1175" pos:column="38">[<expr><name pos:line="1175" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="1175" pos:column="41">-&gt;</op:operator><name pos:line="1175" pos:column="43">_langName</name> <op:operator pos:line="1175" pos:column="53">==</op:operator> <name pos:line="1175" pos:column="56">langName</name></expr>)</condition><then pos:line="1175" pos:column="65">
				<return pos:line="1176" pos:column="33">return <expr><name><name pos:line="1176" pos:column="40">_langList</name><index pos:line="1176" pos:column="49">[<expr><name pos:line="1176" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="1176" pos:column="52">-&gt;</op:operator><name pos:line="1176" pos:column="54">_defaultExtList</name></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1178" pos:column="17">return <expr><name pos:line="1178" pos:column="24">NULL</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1179" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="1181" pos:column="9">const</specifier> <name pos:line="1181" pos:column="15">TCHAR</name> <type:modifier pos:line="1181" pos:column="21">*</type:modifier></type> <name pos:line="1181" pos:column="23">getLangExtFromLangType</name><parameter_list pos:line="1181" pos:column="45">(<param><decl><type><name pos:line="1181" pos:column="46">LangType</name></type> <name pos:line="1181" pos:column="55">langType</name></decl></param>)</parameter_list> <specifier pos:line="1181" pos:column="65">const</specifier> <block pos:line="1181" pos:column="71">{
		<for pos:line="1182" pos:column="17">for (<init><decl><type><name pos:line="1182" pos:column="22">int</name></type> <name pos:line="1182" pos:column="26">i</name> <init pos:line="1182" pos:column="28">= <expr><lit:literal type="number" pos:line="1182" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1182" pos:column="34">i</name> <op:operator pos:line="1182" pos:column="36">&lt;</op:operator> <name pos:line="1182" pos:column="38">_nbLang</name></expr> ;</condition> <incr><expr><name pos:line="1182" pos:column="48">i</name><op:operator pos:line="1182" pos:column="49">++</op:operator></expr></incr>)
		<block pos:line="1183" pos:column="17">{
			<if pos:line="1184" pos:column="25">if <condition pos:line="1184" pos:column="28">(<expr><name><name pos:line="1184" pos:column="29">_langList</name><index pos:line="1184" pos:column="38">[<expr><name pos:line="1184" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="1184" pos:column="41">-&gt;</op:operator><name pos:line="1184" pos:column="43">_langID</name> <op:operator pos:line="1184" pos:column="51">==</op:operator> <name pos:line="1184" pos:column="54">langType</name></expr>)</condition><then pos:line="1184" pos:column="63">
				<return pos:line="1185" pos:column="33">return <expr><name><name pos:line="1185" pos:column="40">_langList</name><index pos:line="1185" pos:column="49">[<expr><name pos:line="1185" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="1185" pos:column="52">-&gt;</op:operator><name pos:line="1185" pos:column="54">_defaultExtList</name></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1187" pos:column="17">return <expr><name pos:line="1187" pos:column="24">NULL</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1188" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1190" pos:column="9">int</name></type> <name pos:line="1190" pos:column="13">getNbLRFile</name><parameter_list pos:line="1190" pos:column="24">()</parameter_list> <specifier pos:line="1190" pos:column="27">const</specifier> <block pos:line="1190" pos:column="33">{<return pos:line="1190" pos:column="34">return <expr><name pos:line="1190" pos:column="41">_nbRecentFile</name></expr>;</return>}</block></function><empty_stmt pos:line="1190" pos:column="56">;</empty_stmt>

	<function><type><name pos:line="1192" pos:column="9">generic_string</name> <type:modifier pos:line="1192" pos:column="24">*</type:modifier></type><name pos:line="1192" pos:column="25">getLRFile</name><parameter_list pos:line="1192" pos:column="34">(<param><decl><type><name pos:line="1192" pos:column="35">int</name></type> <name pos:line="1192" pos:column="39">index</name></decl></param>)</parameter_list> <specifier pos:line="1192" pos:column="46">const</specifier> <block pos:line="1192" pos:column="52">{
		<return pos:line="1193" pos:column="17">return <expr><name><name pos:line="1193" pos:column="24">_LRFileList</name><index pos:line="1193" pos:column="35">[<expr><name pos:line="1193" pos:column="36">index</name></expr>]</index></name></expr>;</return>
	}</block></function><empty_stmt pos:line="1194" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1196" pos:column="9">void</name></type> <name pos:line="1196" pos:column="14">setNbMaxRecentFile</name><parameter_list pos:line="1196" pos:column="32">(<param><decl><type><name pos:line="1196" pos:column="33">int</name></type> <name pos:line="1196" pos:column="37">nb</name></decl></param>)</parameter_list> <block pos:line="1196" pos:column="41">{
		<expr_stmt><expr><name pos:line="1197" pos:column="17">_nbMaxRecentFile</name> <op:operator pos:line="1197" pos:column="34">=</op:operator> <name pos:line="1197" pos:column="36">nb</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1198" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1200" pos:column="9">int</name></type> <name pos:line="1200" pos:column="13">getNbMaxRecentFile</name><parameter_list pos:line="1200" pos:column="31">()</parameter_list> <specifier pos:line="1200" pos:column="34">const</specifier> <block pos:line="1200" pos:column="40">{<return pos:line="1200" pos:column="41">return <expr><name pos:line="1200" pos:column="48">_nbMaxRecentFile</name></expr>;</return>}</block></function><empty_stmt pos:line="1200" pos:column="66">;</empty_stmt>

	<function><type><name pos:line="1202" pos:column="9">void</name></type> <name pos:line="1202" pos:column="14">setPutRecentFileInSubMenu</name><parameter_list pos:line="1202" pos:column="39">(<param><decl><type><name pos:line="1202" pos:column="40">bool</name></type> <name pos:line="1202" pos:column="45">doSubmenu</name></decl></param>)</parameter_list> <block pos:line="1202" pos:column="56">{
		<expr_stmt><expr><name pos:line="1203" pos:column="17">_putRecentFileInSubMenu</name> <op:operator pos:line="1203" pos:column="41">=</op:operator> <name pos:line="1203" pos:column="43">doSubmenu</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1204" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1206" pos:column="9">bool</name></type> <name pos:line="1206" pos:column="14">putRecentFileInSubMenu</name><parameter_list pos:line="1206" pos:column="36">()</parameter_list> <specifier pos:line="1206" pos:column="39">const</specifier> <block pos:line="1206" pos:column="45">{<return pos:line="1206" pos:column="46">return <expr><name pos:line="1206" pos:column="53">_putRecentFileInSubMenu</name></expr>;</return>}</block></function><empty_stmt pos:line="1206" pos:column="78">;</empty_stmt>

	<function><type><name pos:line="1208" pos:column="9">void</name></type> <name pos:line="1208" pos:column="14">setRecentFileCustomLength</name><parameter_list pos:line="1208" pos:column="39">(<param><decl><type><name pos:line="1208" pos:column="40">int</name></type> <name pos:line="1208" pos:column="44">len</name></decl></param>)</parameter_list> <block pos:line="1208" pos:column="49">{
		<expr_stmt><expr><name pos:line="1209" pos:column="17">_recentFileCustomLength</name> <op:operator pos:line="1209" pos:column="41">=</op:operator> <name pos:line="1209" pos:column="43">len</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1210" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1212" pos:column="9">int</name></type> <name pos:line="1212" pos:column="13">getRecentFileCustomLength</name><parameter_list pos:line="1212" pos:column="38">()</parameter_list> <specifier pos:line="1212" pos:column="41">const</specifier> <block pos:line="1212" pos:column="47">{<return pos:line="1212" pos:column="48">return <expr><name pos:line="1212" pos:column="55">_recentFileCustomLength</name></expr>;</return>}</block></function><empty_stmt pos:line="1212" pos:column="80">;</empty_stmt>


    <function><type><specifier pos:line="1215" pos:column="5">const</specifier> <name pos:line="1215" pos:column="11">ScintillaViewParams</name> <type:modifier pos:line="1215" pos:column="31">&amp;</type:modifier></type> <name pos:line="1215" pos:column="33">getSVP</name><parameter_list pos:line="1215" pos:column="39">()</parameter_list> <specifier pos:line="1215" pos:column="42">const</specifier> <block pos:line="1215" pos:column="48">{
        <return pos:line="1216" pos:column="9">return <expr><name pos:line="1216" pos:column="16">_svp</name></expr>;</return>
    }</block></function><empty_stmt pos:line="1217" pos:column="6">;</empty_stmt>

	<function_decl><type><name pos:line="1219" pos:column="9">bool</name></type> <name pos:line="1219" pos:column="14">writeRecentFileHistorySettings</name><parameter_list pos:line="1219" pos:column="44">(<param><decl><type><name pos:line="1219" pos:column="45">int</name></type> <name pos:line="1219" pos:column="49">nbMaxFile</name> <init pos:line="1219" pos:column="59">= <expr><op:operator pos:line="1219" pos:column="61">-</op:operator><lit:literal type="number" pos:line="1219" pos:column="62">1</lit:literal></expr></init></decl></param>)</parameter_list> <specifier pos:line="1219" pos:column="65">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="1220" pos:column="9">bool</name></type> <name pos:line="1220" pos:column="14">writeHistory</name><parameter_list pos:line="1220" pos:column="26">(<param><decl><type><specifier pos:line="1220" pos:column="27">const</specifier> <name pos:line="1220" pos:column="33">TCHAR</name> <type:modifier pos:line="1220" pos:column="39">*</type:modifier></type><name pos:line="1220" pos:column="40">fullpath</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1222" pos:column="9">bool</name></type> <name pos:line="1222" pos:column="14">writeProjectPanelsSettings</name><parameter_list pos:line="1222" pos:column="40">()</parameter_list> <specifier pos:line="1222" pos:column="43">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="1224" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1224" pos:column="19">*</type:modifier></type> <name pos:line="1224" pos:column="21">getChildElementByAttribut</name><parameter_list pos:line="1224" pos:column="46">(<param><decl><type><name pos:line="1224" pos:column="47">TiXmlNode</name> <type:modifier pos:line="1224" pos:column="57">*</type:modifier></type><name pos:line="1224" pos:column="58">pere</name></decl></param>, <param><decl><type><specifier pos:line="1224" pos:column="64">const</specifier> <name pos:line="1224" pos:column="70">TCHAR</name> <type:modifier pos:line="1224" pos:column="76">*</type:modifier></type><name pos:line="1224" pos:column="77">childName</name></decl></param>,\
										  <param><decl><type><specifier pos:line="1225" pos:column="83">const</specifier> <name pos:line="1225" pos:column="89">TCHAR</name> <type:modifier pos:line="1225" pos:column="95">*</type:modifier></type><name pos:line="1225" pos:column="96">attributName</name></decl></param>, <param><decl><type><specifier pos:line="1225" pos:column="110">const</specifier> <name pos:line="1225" pos:column="116">TCHAR</name> <type:modifier pos:line="1225" pos:column="122">*</type:modifier></type><name pos:line="1225" pos:column="123">attributVal</name></decl></param>)</parameter_list> <specifier pos:line="1225" pos:column="136">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="1227" pos:column="9">bool</name></type> <name pos:line="1227" pos:column="14">writeScintillaParams</name><parameter_list pos:line="1227" pos:column="34">(<param><decl><type><specifier pos:line="1227" pos:column="35">const</specifier> <name pos:line="1227" pos:column="41">ScintillaViewParams</name> <type:modifier pos:line="1227" pos:column="61">&amp;</type:modifier></type> <name pos:line="1227" pos:column="63">svp</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1229" pos:column="9">bool</name></type> <name pos:line="1229" pos:column="14">writeGUIParams</name><parameter_list pos:line="1229" pos:column="28">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1231" pos:column="9">void</name></type> <name pos:line="1231" pos:column="14">writeStyles</name><parameter_list pos:line="1231" pos:column="25">(<param><decl><type><name pos:line="1231" pos:column="26">LexerStylerArray</name> <type:modifier pos:line="1231" pos:column="43">&amp;</type:modifier></type> <name pos:line="1231" pos:column="45">lexersStylers</name></decl></param>, <param><decl><type><name pos:line="1231" pos:column="60">StyleArray</name> <type:modifier pos:line="1231" pos:column="71">&amp;</type:modifier></type> <name pos:line="1231" pos:column="73">globalStylers</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1232" pos:column="5">bool</name></type> <name pos:line="1232" pos:column="10">insertTabInfo</name><parameter_list pos:line="1232" pos:column="23">(<param><decl><type><specifier pos:line="1232" pos:column="24">const</specifier> <name pos:line="1232" pos:column="30">TCHAR</name> <type:modifier pos:line="1232" pos:column="36">*</type:modifier></type><name pos:line="1232" pos:column="37">langName</name></decl></param>, <param><decl><type><name pos:line="1232" pos:column="47">int</name></type> <name pos:line="1232" pos:column="51">tabInfo</name></decl></param>)</parameter_list>;</function_decl>

    <function><type><name pos:line="1234" pos:column="5">LexerStylerArray</name> <type:modifier pos:line="1234" pos:column="22">&amp;</type:modifier></type> <name pos:line="1234" pos:column="24">getLStylerArray</name><parameter_list pos:line="1234" pos:column="39">()</parameter_list> <block pos:line="1234" pos:column="42">{<return pos:line="1234" pos:column="43">return <expr><name pos:line="1234" pos:column="50">_lexerStylerArray</name></expr>;</return>}</block></function><empty_stmt pos:line="1234" pos:column="69">;</empty_stmt>
    <function><type><name pos:line="1235" pos:column="5">StyleArray</name> <type:modifier pos:line="1235" pos:column="16">&amp;</type:modifier></type> <name pos:line="1235" pos:column="18">getGlobalStylers</name><parameter_list pos:line="1235" pos:column="34">()</parameter_list> <block pos:line="1235" pos:column="37">{<return pos:line="1235" pos:column="38">return <expr><name pos:line="1235" pos:column="45">_widgetStyleArray</name></expr>;</return>}</block></function><empty_stmt pos:line="1235" pos:column="64">;</empty_stmt>

    <function><type><name pos:line="1237" pos:column="5">StyleArray</name> <type:modifier pos:line="1237" pos:column="16">&amp;</type:modifier></type> <name pos:line="1237" pos:column="18">getMiscStylerArray</name><parameter_list pos:line="1237" pos:column="36">()</parameter_list> <block pos:line="1237" pos:column="39">{<return pos:line="1237" pos:column="40">return <expr><name pos:line="1237" pos:column="47">_widgetStyleArray</name></expr>;</return>}</block></function><empty_stmt pos:line="1237" pos:column="66">;</empty_stmt>
	<function><type><name pos:line="1238" pos:column="9">GlobalOverride</name> <type:modifier pos:line="1238" pos:column="24">&amp;</type:modifier></type> <name pos:line="1238" pos:column="26">getGlobalOverrideStyle</name><parameter_list pos:line="1238" pos:column="48">()</parameter_list> <block pos:line="1238" pos:column="51">{<return pos:line="1238" pos:column="52">return <expr><name><name pos:line="1238" pos:column="59">_nppGUI</name><op:operator pos:line="1238" pos:column="66">.</op:operator><name pos:line="1238" pos:column="67">_globalOverride</name></name></expr>;</return>}</block></function><empty_stmt pos:line="1238" pos:column="84">;</empty_stmt>

    <function><type><name pos:line="1240" pos:column="5">COLORREF</name></type> <name pos:line="1240" pos:column="14">getCurLineHilitingColour</name><parameter_list pos:line="1240" pos:column="38">()</parameter_list> <block pos:line="1240" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="1241" pos:column="17">int</name></type> <name pos:line="1241" pos:column="21">i</name> <init pos:line="1241" pos:column="23">= <expr><call><name><name pos:line="1241" pos:column="25">_widgetStyleArray</name><op:operator pos:line="1241" pos:column="42">.</op:operator><name pos:line="1241" pos:column="43">getStylerIndexByName</name></name><argument_list pos:line="1241" pos:column="63">(<argument><expr><call><name pos:line="1241" pos:column="64">TEXT</name><argument_list pos:line="1241" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="1241" pos:column="69">"Current line background colour"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="1242" pos:column="9">if <condition pos:line="1242" pos:column="12">(<expr><name pos:line="1242" pos:column="13">i</name> <op:operator pos:line="1242" pos:column="15">==</op:operator> <op:operator pos:line="1242" pos:column="18">-</op:operator><lit:literal type="number" pos:line="1242" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="1242" pos:column="21"> <return pos:line="1242" pos:column="22">return <expr><name pos:line="1242" pos:column="29">i</name></expr>;</return></then></if>
        <decl_stmt><decl><type><name pos:line="1243" pos:column="9">Style</name> <type:modifier pos:line="1243" pos:column="15">&amp;</type:modifier></type> <name pos:line="1243" pos:column="17">style</name> <init pos:line="1243" pos:column="23">= <expr><call><name><name pos:line="1243" pos:column="25">_widgetStyleArray</name><op:operator pos:line="1243" pos:column="42">.</op:operator><name pos:line="1243" pos:column="43">getStyler</name></name><argument_list pos:line="1243" pos:column="52">(<argument><expr><name pos:line="1243" pos:column="53">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return pos:line="1244" pos:column="9">return <expr><name><name pos:line="1244" pos:column="16">style</name><op:operator pos:line="1244" pos:column="21">.</op:operator><name pos:line="1244" pos:column="22">_bgColor</name></name></expr>;</return>
    }</block></function><empty_stmt pos:line="1245" pos:column="6">;</empty_stmt>
    <function><type><name pos:line="1246" pos:column="5">void</name></type> <name pos:line="1246" pos:column="10">setCurLineHilitingColour</name><parameter_list pos:line="1246" pos:column="34">(<param><decl><type><name pos:line="1246" pos:column="35">COLORREF</name></type> <name pos:line="1246" pos:column="44">colour2Set</name></decl></param>)</parameter_list> <block pos:line="1246" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="1247" pos:column="9">int</name></type> <name pos:line="1247" pos:column="13">i</name> <init pos:line="1247" pos:column="15">= <expr><call><name><name pos:line="1247" pos:column="17">_widgetStyleArray</name><op:operator pos:line="1247" pos:column="34">.</op:operator><name pos:line="1247" pos:column="35">getStylerIndexByName</name></name><argument_list pos:line="1247" pos:column="55">(<argument><expr><call><name pos:line="1247" pos:column="56">TEXT</name><argument_list pos:line="1247" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1247" pos:column="61">"Current line background colour"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="1248" pos:column="9">if <condition pos:line="1248" pos:column="12">(<expr><name pos:line="1248" pos:column="13">i</name> <op:operator pos:line="1248" pos:column="15">==</op:operator> <op:operator pos:line="1248" pos:column="18">-</op:operator><lit:literal type="number" pos:line="1248" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="1248" pos:column="21"> <return pos:line="1248" pos:column="22">return;</return></then></if>
        <decl_stmt><decl><type><name pos:line="1249" pos:column="9">Style</name> <type:modifier pos:line="1249" pos:column="15">&amp;</type:modifier></type> <name pos:line="1249" pos:column="17">style</name> <init pos:line="1249" pos:column="23">= <expr><call><name><name pos:line="1249" pos:column="25">_widgetStyleArray</name><op:operator pos:line="1249" pos:column="42">.</op:operator><name pos:line="1249" pos:column="43">getStyler</name></name><argument_list pos:line="1249" pos:column="52">(<argument><expr><name pos:line="1249" pos:column="53">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name pos:line="1250" pos:column="9">style</name><op:operator pos:line="1250" pos:column="14">.</op:operator><name pos:line="1250" pos:column="15">_bgColor</name></name> <op:operator pos:line="1250" pos:column="24">=</op:operator> <name pos:line="1250" pos:column="26">colour2Set</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="1251" pos:column="6">;</empty_stmt>

	<function_decl><type><name pos:line="1253" pos:column="9">void</name></type> <name pos:line="1253" pos:column="14">setFontList</name><parameter_list pos:line="1253" pos:column="25">(<param><decl><type><name pos:line="1253" pos:column="26">HWND</name></type> <name pos:line="1253" pos:column="31">hWnd</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><specifier pos:line="1254" pos:column="9">const</specifier> <name><name pos:line="1254" pos:column="15">vector</name><argument_list pos:line="1254" pos:column="21">&lt;<argument><expr><name pos:line="1254" pos:column="22">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1254" pos:column="38">&amp;</type:modifier></type> <name pos:line="1254" pos:column="40">getFontList</name><parameter_list pos:line="1254" pos:column="51">()</parameter_list> <specifier pos:line="1254" pos:column="54">const</specifier> <block pos:line="1254" pos:column="60">{<return pos:line="1254" pos:column="61">return <expr><name pos:line="1254" pos:column="68">_fontlist</name></expr>;</return>}</block></function><empty_stmt pos:line="1254" pos:column="79">;</empty_stmt>
	
	<function><type><name pos:line="1256" pos:column="9">int</name></type> <name pos:line="1256" pos:column="13">getNbUserLang</name><parameter_list pos:line="1256" pos:column="26">()</parameter_list> <specifier pos:line="1256" pos:column="29">const</specifier> <block pos:line="1256" pos:column="35">{<return pos:line="1256" pos:column="36">return <expr><name pos:line="1256" pos:column="43">_nbUserLang</name></expr>;</return>}</block></function><empty_stmt pos:line="1256" pos:column="56">;</empty_stmt>
	<function><type><name pos:line="1257" pos:column="9">UserLangContainer</name> <type:modifier pos:line="1257" pos:column="27">&amp;</type:modifier></type> <name pos:line="1257" pos:column="29">getULCFromIndex</name><parameter_list pos:line="1257" pos:column="44">(<param><decl><type><name pos:line="1257" pos:column="45">int</name></type> <name pos:line="1257" pos:column="49">i</name></decl></param>)</parameter_list> <block pos:line="1257" pos:column="52">{<return pos:line="1257" pos:column="53">return <expr><op:operator pos:line="1257" pos:column="60">*</op:operator><name><name pos:line="1257" pos:column="61">_userLangArray</name><index pos:line="1257" pos:column="75">[<expr><name pos:line="1257" pos:column="76">i</name></expr>]</index></name></expr>;</return>}</block></function><empty_stmt pos:line="1257" pos:column="80">;</empty_stmt>
	<function><type><name pos:line="1258" pos:column="9">UserLangContainer</name> <type:modifier pos:line="1258" pos:column="27">*</type:modifier></type> <name pos:line="1258" pos:column="29">getULCFromName</name><parameter_list pos:line="1258" pos:column="43">(<param><decl><type><specifier pos:line="1258" pos:column="44">const</specifier> <name pos:line="1258" pos:column="50">TCHAR</name> <type:modifier pos:line="1258" pos:column="56">*</type:modifier></type><name pos:line="1258" pos:column="57">userLangName</name></decl></param>)</parameter_list> <block pos:line="1258" pos:column="71">{
		<for pos:line="1259" pos:column="17">for (<init><decl><type><name pos:line="1259" pos:column="22">int</name></type> <name pos:line="1259" pos:column="26">i</name> <init pos:line="1259" pos:column="28">= <expr><lit:literal type="number" pos:line="1259" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1259" pos:column="34">i</name> <op:operator pos:line="1259" pos:column="36">&lt;</op:operator> <name pos:line="1259" pos:column="38">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="1259" pos:column="52">i</name><op:operator pos:line="1259" pos:column="53">++</op:operator></expr></incr>)
			<if pos:line="1260" pos:column="25">if <condition pos:line="1260" pos:column="28">(<expr><op:operator pos:line="1260" pos:column="29">!</op:operator><call><name pos:line="1260" pos:column="30">lstrcmp</name><argument_list pos:line="1260" pos:column="37">(<argument><expr><name pos:line="1260" pos:column="38">userLangName</name></expr></argument>, <argument><expr><name><name pos:line="1260" pos:column="52">_userLangArray</name><index pos:line="1260" pos:column="66">[<expr><name pos:line="1260" pos:column="67">i</name></expr>]</index></name><op:operator pos:line="1260" pos:column="69">-&gt;</op:operator><call><name><name pos:line="1260" pos:column="71">_name</name><op:operator pos:line="1260" pos:column="76">.</op:operator><name pos:line="1260" pos:column="77">c_str</name></name><argument_list pos:line="1260" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1260" pos:column="86">
				<return pos:line="1261" pos:column="33">return <expr><name><name pos:line="1261" pos:column="40">_userLangArray</name><index pos:line="1261" pos:column="54">[<expr><name pos:line="1261" pos:column="55">i</name></expr>]</index></name></expr>;</return></then></if></for>
		<comment type="line" pos:line="1262" pos:column="17">//qui doit etre jamais passer</comment>
		<return pos:line="1263" pos:column="17">return <expr><name pos:line="1263" pos:column="24">NULL</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1264" pos:column="10">;</empty_stmt>
	
	<function><type><name pos:line="1266" pos:column="9">int</name></type> <name pos:line="1266" pos:column="13">getNbExternalLang</name><parameter_list pos:line="1266" pos:column="30">()</parameter_list> <specifier pos:line="1266" pos:column="33">const</specifier> <block pos:line="1266" pos:column="39">{<return pos:line="1266" pos:column="40">return <expr><name pos:line="1266" pos:column="47">_nbExternalLang</name></expr>;</return>}</block></function><empty_stmt pos:line="1266" pos:column="64">;</empty_stmt>
	<function><type><name pos:line="1267" pos:column="9">int</name></type> <name pos:line="1267" pos:column="13">getExternalLangIndexFromName</name><parameter_list pos:line="1267" pos:column="41">(<param><decl><type><specifier pos:line="1267" pos:column="42">const</specifier> <name pos:line="1267" pos:column="48">TCHAR</name> <type:modifier pos:line="1267" pos:column="54">*</type:modifier></type><name pos:line="1267" pos:column="55">externalLangName</name></decl></param>)</parameter_list> <specifier pos:line="1267" pos:column="73">const</specifier> <block pos:line="1267" pos:column="79">{
		<for pos:line="1268" pos:column="17">for (<init><decl><type><name pos:line="1268" pos:column="22">int</name></type> <name pos:line="1268" pos:column="26">i</name> <init pos:line="1268" pos:column="28">= <expr><lit:literal type="number" pos:line="1268" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1268" pos:column="34">i</name> <op:operator pos:line="1268" pos:column="36">&lt;</op:operator> <name pos:line="1268" pos:column="38">_nbExternalLang</name></expr> ;</condition> <incr><expr><name pos:line="1268" pos:column="56">i</name><op:operator pos:line="1268" pos:column="57">++</op:operator></expr></incr>)
		<block pos:line="1269" pos:column="17">{
			<if pos:line="1270" pos:column="25">if <condition pos:line="1270" pos:column="28">(<expr><op:operator pos:line="1270" pos:column="29">!</op:operator><call><name pos:line="1270" pos:column="30">lstrcmp</name><argument_list pos:line="1270" pos:column="37">(<argument><expr><name pos:line="1270" pos:column="38">externalLangName</name></expr></argument>, <argument><expr><name><name pos:line="1270" pos:column="56">_externalLangArray</name><index pos:line="1270" pos:column="74">[<expr><name pos:line="1270" pos:column="75">i</name></expr>]</index></name><op:operator pos:line="1270" pos:column="77">-&gt;</op:operator><name pos:line="1270" pos:column="79">_name</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1270" pos:column="86">
				<return pos:line="1271" pos:column="33">return <expr><name pos:line="1271" pos:column="40">i</name></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1273" pos:column="17">return <expr><op:operator pos:line="1273" pos:column="24">-</op:operator><lit:literal type="number" pos:line="1273" pos:column="25">1</lit:literal></expr>;</return>
	}</block></function><empty_stmt pos:line="1274" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="1275" pos:column="9">ExternalLangContainer</name> <type:modifier pos:line="1275" pos:column="31">&amp;</type:modifier></type> <name pos:line="1275" pos:column="33">getELCFromIndex</name><parameter_list pos:line="1275" pos:column="48">(<param><decl><type><name pos:line="1275" pos:column="49">int</name></type> <name pos:line="1275" pos:column="53">i</name></decl></param>)</parameter_list> <block pos:line="1275" pos:column="56">{<return pos:line="1275" pos:column="57">return <expr><op:operator pos:line="1275" pos:column="64">*</op:operator><name><name pos:line="1275" pos:column="65">_externalLangArray</name><index pos:line="1275" pos:column="83">[<expr><name pos:line="1275" pos:column="84">i</name></expr>]</index></name></expr>;</return>}</block></function><empty_stmt pos:line="1275" pos:column="88">;</empty_stmt>

	<function><type><name pos:line="1277" pos:column="9">bool</name></type> <name pos:line="1277" pos:column="14">ExternalLangHasRoom</name><parameter_list pos:line="1277" pos:column="33">()</parameter_list> <specifier pos:line="1277" pos:column="36">const</specifier> <block pos:line="1277" pos:column="42">{<return pos:line="1277" pos:column="43">return <expr><name pos:line="1277" pos:column="50">_nbExternalLang</name> <op:operator pos:line="1277" pos:column="66">&lt;</op:operator> <name pos:line="1277" pos:column="68">NB_MAX_EXTERNAL_LANG</name></expr>;</return>}</block></function><empty_stmt pos:line="1277" pos:column="90">;</empty_stmt>

	<function_decl><type><name pos:line="1279" pos:column="9">void</name></type> <name pos:line="1279" pos:column="14">getExternalLexerFromXmlTree</name><parameter_list pos:line="1279" pos:column="41">(<param><decl><type><name pos:line="1279" pos:column="42">TiXmlDocument</name> <type:modifier pos:line="1279" pos:column="56">*</type:modifier></type><name pos:line="1279" pos:column="57">doc</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name><name pos:line="1280" pos:column="9">vector</name><argument_list pos:line="1280" pos:column="15">&lt;<argument><expr><name pos:line="1280" pos:column="16">TiXmlDocument</name> <type:modifier pos:line="1280" pos:column="30">*</type:modifier></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1280" pos:column="33">*</type:modifier></type> <name pos:line="1280" pos:column="35">getExternalLexerDoc</name><parameter_list pos:line="1280" pos:column="54">()</parameter_list> <block pos:line="1280" pos:column="57">{ <return pos:line="1280" pos:column="59">return <expr><op:operator pos:line="1280" pos:column="66">&amp;</op:operator><name pos:line="1280" pos:column="67">_pXmlExternalLexerDoc</name></expr>;</return>}</block></function><empty_stmt pos:line="1280" pos:column="90">;</empty_stmt>

	<function_decl><type><name pos:line="1282" pos:column="9">void</name></type> <name pos:line="1282" pos:column="14">writeUserDefinedLang</name><parameter_list pos:line="1282" pos:column="34">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1283" pos:column="9">void</name></type> <name pos:line="1283" pos:column="14">writeShortcuts</name><parameter_list pos:line="1283" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1284" pos:column="9">void</name></type> <name pos:line="1284" pos:column="14">writeSession</name><parameter_list pos:line="1284" pos:column="26">(<param><decl><type><specifier pos:line="1284" pos:column="27">const</specifier> <name pos:line="1284" pos:column="33">Session</name> <type:modifier pos:line="1284" pos:column="41">&amp;</type:modifier></type> <name pos:line="1284" pos:column="43">session</name></decl></param>, <param><decl><type><specifier pos:line="1284" pos:column="52">const</specifier> <name pos:line="1284" pos:column="58">TCHAR</name> <type:modifier pos:line="1284" pos:column="64">*</type:modifier></type><name pos:line="1284" pos:column="65">fileName</name> <init pos:line="1284" pos:column="74">= <expr><name pos:line="1284" pos:column="76">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1285" pos:column="9">bool</name></type> <name pos:line="1285" pos:column="14">writeFindHistory</name><parameter_list pos:line="1285" pos:column="30">()</parameter_list>;</function_decl>


	<function><type><name pos:line="1288" pos:column="9">bool</name></type> <name pos:line="1288" pos:column="14">isExistingUserLangName</name><parameter_list pos:line="1288" pos:column="36">(<param><decl><type><specifier pos:line="1288" pos:column="37">const</specifier> <name pos:line="1288" pos:column="43">TCHAR</name> <type:modifier pos:line="1288" pos:column="49">*</type:modifier></type><name pos:line="1288" pos:column="50">newName</name></decl></param>)</parameter_list> <specifier pos:line="1288" pos:column="59">const</specifier> <block pos:line="1288" pos:column="65">{
		<if pos:line="1289" pos:column="17">if <condition pos:line="1289" pos:column="20">(<expr><op:operator pos:line="1289" pos:column="21">(</op:operator><op:operator pos:line="1289" pos:column="22">!</op:operator><name pos:line="1289" pos:column="23">newName</name><op:operator pos:line="1289" pos:column="30">)</op:operator> <op:operator pos:line="1289" pos:column="32">||</op:operator> <op:operator pos:line="1289" pos:column="35">(</op:operator><op:operator pos:line="1289" pos:column="36">!</op:operator><name><name pos:line="1289" pos:column="37">newName</name><index pos:line="1289" pos:column="44">[<expr><lit:literal type="number" pos:line="1289" pos:column="45">0</lit:literal></expr>]</index></name><op:operator pos:line="1289" pos:column="47">)</op:operator></expr>)</condition><then pos:line="1289" pos:column="49">
			<return pos:line="1290" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1290" pos:column="32">true</lit:literal></expr>;</return></then></if>

		<for pos:line="1292" pos:column="17">for (<init><decl><type><name pos:line="1292" pos:column="22">int</name></type> <name pos:line="1292" pos:column="26">i</name> <init pos:line="1292" pos:column="28">= <expr><lit:literal type="number" pos:line="1292" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1292" pos:column="34">i</name> <op:operator pos:line="1292" pos:column="36">&lt;</op:operator> <name pos:line="1292" pos:column="38">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="1292" pos:column="52">i</name><op:operator pos:line="1292" pos:column="53">++</op:operator></expr></incr>)
		<block pos:line="1293" pos:column="17">{
			<if pos:line="1294" pos:column="25">if <condition pos:line="1294" pos:column="28">(<expr><op:operator pos:line="1294" pos:column="29">!</op:operator><call><name pos:line="1294" pos:column="30">lstrcmp</name><argument_list pos:line="1294" pos:column="37">(<argument><expr><name><name pos:line="1294" pos:column="38">_userLangArray</name><index pos:line="1294" pos:column="52">[<expr><name pos:line="1294" pos:column="53">i</name></expr>]</index></name><op:operator pos:line="1294" pos:column="55">-&gt;</op:operator><call><name><name pos:line="1294" pos:column="57">_name</name><op:operator pos:line="1294" pos:column="62">.</op:operator><name pos:line="1294" pos:column="63">c_str</name></name><argument_list pos:line="1294" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1294" pos:column="72">newName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1294" pos:column="81">
				<return pos:line="1295" pos:column="33">return <expr><lit:literal type="boolean" pos:line="1295" pos:column="40">true</lit:literal></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1297" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1297" pos:column="24">false</lit:literal></expr>;</return>
	}</block></function><empty_stmt pos:line="1298" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="1300" pos:column="9">const</specifier> <name pos:line="1300" pos:column="15">TCHAR</name> <type:modifier pos:line="1300" pos:column="21">*</type:modifier></type> <name pos:line="1300" pos:column="23">getUserDefinedLangNameFromExt</name><parameter_list pos:line="1300" pos:column="52">(<param><decl><type><name pos:line="1300" pos:column="53">TCHAR</name> <type:modifier pos:line="1300" pos:column="59">*</type:modifier></type><name pos:line="1300" pos:column="60">ext</name></decl></param>, <param><decl><type><name pos:line="1300" pos:column="65">TCHAR</name> <type:modifier pos:line="1300" pos:column="71">*</type:modifier></type><name pos:line="1300" pos:column="72">fullName</name></decl></param>)</parameter_list> <block pos:line="1300" pos:column="82">{
		<if pos:line="1301" pos:column="17">if <condition pos:line="1301" pos:column="20">(<expr><op:operator pos:line="1301" pos:column="21">(</op:operator><op:operator pos:line="1301" pos:column="22">!</op:operator><name pos:line="1301" pos:column="23">ext</name><op:operator pos:line="1301" pos:column="26">)</op:operator> <op:operator pos:line="1301" pos:column="28">||</op:operator> <op:operator pos:line="1301" pos:column="31">(</op:operator><op:operator pos:line="1301" pos:column="32">!</op:operator><name><name pos:line="1301" pos:column="33">ext</name><index pos:line="1301" pos:column="36">[<expr><lit:literal type="number" pos:line="1301" pos:column="37">0</lit:literal></expr>]</index></name><op:operator pos:line="1301" pos:column="39">)</op:operator></expr>)</condition><then pos:line="1301" pos:column="41">
			<return pos:line="1302" pos:column="25">return <expr><name pos:line="1302" pos:column="32">NULL</name></expr>;</return></then></if>

		<for pos:line="1304" pos:column="17">for (<init><decl><type><name pos:line="1304" pos:column="22">int</name></type> <name pos:line="1304" pos:column="26">i</name> <init pos:line="1304" pos:column="28">= <expr><lit:literal type="number" pos:line="1304" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1304" pos:column="34">i</name> <op:operator pos:line="1304" pos:column="36">&lt;</op:operator> <name pos:line="1304" pos:column="38">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="1304" pos:column="52">i</name><op:operator pos:line="1304" pos:column="53">++</op:operator></expr></incr>)
		<block pos:line="1305" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="1306" pos:column="25">vector</name><argument_list pos:line="1306" pos:column="31">&lt;<argument><expr><name pos:line="1306" pos:column="32">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1306" pos:column="48">extVect</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1307" pos:column="25">cutString</name><argument_list pos:line="1307" pos:column="34">(<argument><expr><name><name pos:line="1307" pos:column="35">_userLangArray</name><index pos:line="1307" pos:column="49">[<expr><name pos:line="1307" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="1307" pos:column="52">-&gt;</op:operator><call><name><name pos:line="1307" pos:column="54">_ext</name><op:operator pos:line="1307" pos:column="58">.</op:operator><name pos:line="1307" pos:column="59">c_str</name></name><argument_list pos:line="1307" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1307" pos:column="68">extVect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="1308" pos:column="25">for (<init><decl><type><name pos:line="1308" pos:column="30">size_t</name></type> <name pos:line="1308" pos:column="37">j</name> <init pos:line="1308" pos:column="39">= <expr><lit:literal type="number" pos:line="1308" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1308" pos:column="45">j</name> <op:operator pos:line="1308" pos:column="47">&lt;</op:operator> <call><name><name pos:line="1308" pos:column="49">extVect</name><op:operator pos:line="1308" pos:column="56">.</op:operator><name pos:line="1308" pos:column="57">size</name></name><argument_list pos:line="1308" pos:column="61">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1308" pos:column="66">j</name><op:operator pos:line="1308" pos:column="67">++</op:operator></expr></incr>)
				<if pos:line="1309" pos:column="33">if <condition pos:line="1309" pos:column="36">(<expr><op:operator pos:line="1309" pos:column="37">!</op:operator><call><name pos:line="1309" pos:column="38">generic_stricmp</name><argument_list pos:line="1309" pos:column="53">(<argument><expr><name><name pos:line="1309" pos:column="54">extVect</name><index pos:line="1309" pos:column="61">[<expr><name pos:line="1309" pos:column="62">j</name></expr>]</index></name><op:operator pos:line="1309" pos:column="64">.</op:operator><call><name pos:line="1309" pos:column="65">c_str</name><argument_list pos:line="1309" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1309" pos:column="74">ext</name></expr></argument>)</argument_list></call> <op:operator pos:line="1309" pos:column="79">||</op:operator> <op:operator pos:line="1309" pos:column="82">(</op:operator><call><name pos:line="1309" pos:column="83">_tcschr</name><argument_list pos:line="1309" pos:column="90">(<argument><expr><name pos:line="1309" pos:column="91">fullName</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="1309" pos:column="101">'.'</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1309" pos:column="106">&amp;&amp;</op:operator> <op:operator pos:line="1309" pos:column="109">!</op:operator><call><name pos:line="1309" pos:column="110">generic_stricmp</name><argument_list pos:line="1309" pos:column="125">(<argument><expr><name><name pos:line="1309" pos:column="126">extVect</name><index pos:line="1309" pos:column="133">[<expr><name pos:line="1309" pos:column="134">j</name></expr>]</index></name><op:operator pos:line="1309" pos:column="136">.</op:operator><call><name pos:line="1309" pos:column="137">c_str</name><argument_list pos:line="1309" pos:column="142">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1309" pos:column="146">fullName</name></expr></argument>)</argument_list></call><op:operator pos:line="1309" pos:column="155">)</op:operator></expr>)</condition><then pos:line="1309" pos:column="157">
					<return pos:line="1310" pos:column="41">return <expr><name><name pos:line="1310" pos:column="48">_userLangArray</name><index pos:line="1310" pos:column="62">[<expr><name pos:line="1310" pos:column="63">i</name></expr>]</index></name><op:operator pos:line="1310" pos:column="65">-&gt;</op:operator><call><name><name pos:line="1310" pos:column="67">_name</name><op:operator pos:line="1310" pos:column="72">.</op:operator><name pos:line="1310" pos:column="73">c_str</name></name><argument_list pos:line="1310" pos:column="78">()</argument_list></call></expr>;</return></then></if></for>
		}</block></for>
		<return pos:line="1312" pos:column="17">return <expr><name pos:line="1312" pos:column="24">NULL</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1313" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="1315" pos:column="9">int</name></type> <name pos:line="1315" pos:column="13">addUserLangToEnd</name><parameter_list pos:line="1315" pos:column="29">(<param><decl><type><specifier pos:line="1315" pos:column="30">const</specifier> <name pos:line="1315" pos:column="36">UserLangContainer</name> <type:modifier pos:line="1315" pos:column="54">&amp;</type:modifier></type> <name pos:line="1315" pos:column="56">userLang</name></decl></param>, <param><decl><type><specifier pos:line="1315" pos:column="66">const</specifier> <name pos:line="1315" pos:column="72">TCHAR</name> <type:modifier pos:line="1315" pos:column="78">*</type:modifier></type><name pos:line="1315" pos:column="79">newName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1316" pos:column="9">void</name></type> <name pos:line="1316" pos:column="14">removeUserLang</name><parameter_list pos:line="1316" pos:column="28">(<param><decl><type><name pos:line="1316" pos:column="29">int</name></type> <name pos:line="1316" pos:column="33">index</name></decl></param>)</parameter_list>;</function_decl>
	
	<function><type><name pos:line="1318" pos:column="9">bool</name></type> <name pos:line="1318" pos:column="14">isExistingExternalLangName</name><parameter_list pos:line="1318" pos:column="40">(<param><decl><type><specifier pos:line="1318" pos:column="41">const</specifier> <name pos:line="1318" pos:column="47">TCHAR</name> <type:modifier pos:line="1318" pos:column="53">*</type:modifier></type><name pos:line="1318" pos:column="54">newName</name></decl></param>)</parameter_list> <specifier pos:line="1318" pos:column="63">const</specifier> <block pos:line="1318" pos:column="69">{
		<if pos:line="1319" pos:column="17">if <condition pos:line="1319" pos:column="20">(<expr><op:operator pos:line="1319" pos:column="21">(</op:operator><op:operator pos:line="1319" pos:column="22">!</op:operator><name pos:line="1319" pos:column="23">newName</name><op:operator pos:line="1319" pos:column="30">)</op:operator> <op:operator pos:line="1319" pos:column="32">||</op:operator> <op:operator pos:line="1319" pos:column="35">(</op:operator><op:operator pos:line="1319" pos:column="36">!</op:operator><name><name pos:line="1319" pos:column="37">newName</name><index pos:line="1319" pos:column="44">[<expr><lit:literal type="number" pos:line="1319" pos:column="45">0</lit:literal></expr>]</index></name><op:operator pos:line="1319" pos:column="47">)</op:operator></expr>)</condition><then pos:line="1319" pos:column="49">
			<return pos:line="1320" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1320" pos:column="32">true</lit:literal></expr>;</return></then></if>

		<for pos:line="1322" pos:column="17">for (<init><decl><type><name pos:line="1322" pos:column="22">int</name></type> <name pos:line="1322" pos:column="26">i</name> <init pos:line="1322" pos:column="28">= <expr><lit:literal type="number" pos:line="1322" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1322" pos:column="34">i</name> <op:operator pos:line="1322" pos:column="36">&lt;</op:operator> <name pos:line="1322" pos:column="38">_nbExternalLang</name></expr> ;</condition> <incr><expr><name pos:line="1322" pos:column="56">i</name><op:operator pos:line="1322" pos:column="57">++</op:operator></expr></incr>)
		<block pos:line="1323" pos:column="17">{
			<if pos:line="1324" pos:column="25">if <condition pos:line="1324" pos:column="28">(<expr><op:operator pos:line="1324" pos:column="29">!</op:operator><call><name pos:line="1324" pos:column="30">lstrcmp</name><argument_list pos:line="1324" pos:column="37">(<argument><expr><name><name pos:line="1324" pos:column="38">_externalLangArray</name><index pos:line="1324" pos:column="56">[<expr><name pos:line="1324" pos:column="57">i</name></expr>]</index></name><op:operator pos:line="1324" pos:column="59">-&gt;</op:operator><name pos:line="1324" pos:column="61">_name</name></expr></argument>, <argument><expr><name pos:line="1324" pos:column="68">newName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1324" pos:column="77">
				<return pos:line="1325" pos:column="33">return <expr><lit:literal type="boolean" pos:line="1325" pos:column="40">true</lit:literal></expr>;</return></then></if>
		}</block></for>
		<return pos:line="1327" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1327" pos:column="24">false</lit:literal></expr>;</return>
	}</block></function><empty_stmt pos:line="1328" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="1330" pos:column="9">int</name></type> <name pos:line="1330" pos:column="13">addExternalLangToEnd</name><parameter_list pos:line="1330" pos:column="33">(<param><decl><type><name pos:line="1330" pos:column="34">ExternalLangContainer</name> <type:modifier pos:line="1330" pos:column="56">*</type:modifier></type> <name pos:line="1330" pos:column="58">externalLang</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="1332" pos:column="9">TiXmlDocumentA</name> <type:modifier pos:line="1332" pos:column="24">*</type:modifier></type> <name pos:line="1332" pos:column="26">getNativeLangA</name><parameter_list pos:line="1332" pos:column="40">()</parameter_list> <specifier pos:line="1332" pos:column="43">const</specifier> <block pos:line="1332" pos:column="49">{<return pos:line="1332" pos:column="50">return <expr><name pos:line="1332" pos:column="57">_pXmlNativeLangDocA</name></expr>;</return>}</block></function><empty_stmt pos:line="1332" pos:column="78">;</empty_stmt>

	<function><type><name pos:line="1334" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="1334" pos:column="23">*</type:modifier></type> <name pos:line="1334" pos:column="25">getToolIcons</name><parameter_list pos:line="1334" pos:column="37">()</parameter_list> <specifier pos:line="1334" pos:column="40">const</specifier> <block pos:line="1334" pos:column="46">{<return pos:line="1334" pos:column="47">return <expr><name pos:line="1334" pos:column="54">_pXmlToolIconsDoc</name></expr>;</return>}</block></function><empty_stmt pos:line="1334" pos:column="73">;</empty_stmt>

	<function><type><name pos:line="1336" pos:column="9">bool</name></type> <name pos:line="1336" pos:column="14">isTransparentAvailable</name><parameter_list pos:line="1336" pos:column="36">()</parameter_list> <specifier pos:line="1336" pos:column="39">const</specifier> <block pos:line="1336" pos:column="45">{
		<return pos:line="1337" pos:column="17">return <expr><op:operator pos:line="1337" pos:column="24">(</op:operator><name pos:line="1337" pos:column="25">_transparentFuncAddr</name> <op:operator pos:line="1337" pos:column="46">!=</op:operator> <name pos:line="1337" pos:column="49">NULL</name><op:operator pos:line="1337" pos:column="53">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="1338" pos:column="10">;</empty_stmt>

	<comment type="line" pos:line="1340" pos:column="9">// 0 &lt;= percent &lt; 256</comment>
	<comment type="line" pos:line="1341" pos:column="9">// if (percent == 255) then opacq</comment>
	<function><type><name pos:line="1342" pos:column="9">void</name></type> <name pos:line="1342" pos:column="14">SetTransparent</name><parameter_list pos:line="1342" pos:column="28">(<param><decl><type><name pos:line="1342" pos:column="29">HWND</name></type> <name pos:line="1342" pos:column="34">hwnd</name></decl></param>, <param><decl><type><name pos:line="1342" pos:column="40">int</name></type> <name pos:line="1342" pos:column="44">percent</name></decl></param>)</parameter_list> <block pos:line="1342" pos:column="53">{
		<if pos:line="1343" pos:column="17">if <condition pos:line="1343" pos:column="20">(<expr><op:operator pos:line="1343" pos:column="21">!</op:operator><name pos:line="1343" pos:column="22">_transparentFuncAddr</name></expr>)</condition><then pos:line="1343" pos:column="43"> <return pos:line="1343" pos:column="44">return;</return></then></if>
		<expr_stmt><expr><call><name><op:operator pos:line="1344" pos:column="17">::</op:operator><name pos:line="1344" pos:column="19">SetWindowLongPtr</name></name><argument_list pos:line="1344" pos:column="35">(<argument><expr><name pos:line="1344" pos:column="36">hwnd</name></expr></argument>, <argument><expr><name pos:line="1344" pos:column="42">GWL_EXSTYLE</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="1344" pos:column="55">::</op:operator><name pos:line="1344" pos:column="57">GetWindowLongPtrW</name></name><argument_list pos:line="1344" pos:column="74">(<argument><expr><name pos:line="1344" pos:column="75">hwnd</name></expr></argument>, <argument><expr><name pos:line="1344" pos:column="81">GWL_EXSTYLE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1344" pos:column="94">|</op:operator> <lit:literal type="number" pos:line="1344" pos:column="96">0x00080000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1345" pos:column="17">if <condition pos:line="1345" pos:column="20">(<expr><name pos:line="1345" pos:column="21">percent</name> <op:operator pos:line="1345" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="1345" pos:column="31">255</lit:literal></expr>)</condition><then pos:line="1345" pos:column="35">
			<expr_stmt><expr><name pos:line="1346" pos:column="25">percent</name> <op:operator pos:line="1346" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="1346" pos:column="35">255</lit:literal></expr>;</expr_stmt></then></if>
		<if pos:line="1347" pos:column="17">if <condition pos:line="1347" pos:column="20">(<expr><name pos:line="1347" pos:column="21">percent</name> <op:operator pos:line="1347" pos:column="29">&lt;</op:operator> <lit:literal type="number" pos:line="1347" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="1347" pos:column="33">
			<expr_stmt><expr><name pos:line="1348" pos:column="25">percent</name> <op:operator pos:line="1348" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="1348" pos:column="35">0</lit:literal></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="1349" pos:column="17">_transparentFuncAddr</name><argument_list pos:line="1349" pos:column="37">(<argument><expr><name pos:line="1349" pos:column="38">hwnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1349" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1349" pos:column="47">percent</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1349" pos:column="56">0x00000002</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	}</block></function><empty_stmt pos:line="1350" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1352" pos:column="9">void</name></type> <name pos:line="1352" pos:column="14">removeTransparent</name><parameter_list pos:line="1352" pos:column="31">(<param><decl><type><name pos:line="1352" pos:column="32">HWND</name></type> <name pos:line="1352" pos:column="37">hwnd</name></decl></param>)</parameter_list> <block pos:line="1352" pos:column="43">{
		<expr_stmt><expr><call><name><op:operator pos:line="1353" pos:column="17">::</op:operator><name pos:line="1353" pos:column="19">SetWindowLongPtr</name></name><argument_list pos:line="1353" pos:column="35">(<argument><expr><name pos:line="1353" pos:column="36">hwnd</name></expr></argument>, <argument><expr><name pos:line="1353" pos:column="42">GWL_EXSTYLE</name></expr></argument>,  <argument><expr><call><name><op:operator pos:line="1353" pos:column="56">::</op:operator><name pos:line="1353" pos:column="58">GetWindowLongPtr</name></name><argument_list pos:line="1353" pos:column="74">(<argument><expr><name pos:line="1353" pos:column="75">hwnd</name></expr></argument>, <argument><expr><name pos:line="1353" pos:column="81">GWL_EXSTYLE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1353" pos:column="94">&amp;</op:operator> <op:operator pos:line="1353" pos:column="96">~</op:operator><lit:literal type="number" pos:line="1353" pos:column="97">0x00080000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1354" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1356" pos:column="9">void</name></type> <name pos:line="1356" pos:column="14">setCmdlineParam</name><parameter_list pos:line="1356" pos:column="29">(<param><decl><type><specifier pos:line="1356" pos:column="30">const</specifier> <name pos:line="1356" pos:column="36">CmdLineParams</name> <type:modifier pos:line="1356" pos:column="50">&amp;</type:modifier></type> <name pos:line="1356" pos:column="52">cmdLineParams</name></decl></param>)</parameter_list> <block pos:line="1356" pos:column="67">{
		<expr_stmt><expr><name pos:line="1357" pos:column="17">_cmdLineParams</name> <op:operator pos:line="1357" pos:column="32">=</op:operator> <name pos:line="1357" pos:column="34">cmdLineParams</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1358" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="1359" pos:column="9">CmdLineParams</name> <type:modifier pos:line="1359" pos:column="23">&amp;</type:modifier></type> <name pos:line="1359" pos:column="25">getCmdLineParams</name><parameter_list pos:line="1359" pos:column="41">()</parameter_list> <block pos:line="1359" pos:column="44">{<return pos:line="1359" pos:column="45">return <expr><name pos:line="1359" pos:column="52">_cmdLineParams</name></expr>;</return>}</block></function><empty_stmt pos:line="1359" pos:column="68">;</empty_stmt>

	<function><type><name pos:line="1361" pos:column="9">void</name></type> <name pos:line="1361" pos:column="14">setFileSaveDlgFilterIndex</name><parameter_list pos:line="1361" pos:column="39">(<param><decl><type><name pos:line="1361" pos:column="40">int</name></type> <name pos:line="1361" pos:column="44">ln</name></decl></param>)</parameter_list> <block pos:line="1361" pos:column="48">{<expr_stmt><expr><name pos:line="1361" pos:column="49">_fileSaveDlgFilterIndex</name> <op:operator pos:line="1361" pos:column="73">=</op:operator> <name pos:line="1361" pos:column="75">ln</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="1361" pos:column="79">;</empty_stmt>
	<function><type><name pos:line="1362" pos:column="9">int</name></type> <name pos:line="1362" pos:column="13">getFileSaveDlgFilterIndex</name><parameter_list pos:line="1362" pos:column="38">()</parameter_list> <specifier pos:line="1362" pos:column="41">const</specifier> <block pos:line="1362" pos:column="47">{<return pos:line="1362" pos:column="48">return <expr><name pos:line="1362" pos:column="55">_fileSaveDlgFilterIndex</name></expr>;</return>}</block></function><empty_stmt pos:line="1362" pos:column="80">;</empty_stmt>

	<function><type><name pos:line="1364" pos:column="9">bool</name></type> <name pos:line="1364" pos:column="14">isRemappingShortcut</name><parameter_list pos:line="1364" pos:column="33">()</parameter_list> <specifier pos:line="1364" pos:column="36">const</specifier> <block pos:line="1364" pos:column="42">{<return pos:line="1364" pos:column="43">return <expr><call><name><name pos:line="1364" pos:column="50">_shortcuts</name><op:operator pos:line="1364" pos:column="60">.</op:operator><name pos:line="1364" pos:column="61">size</name></name><argument_list pos:line="1364" pos:column="65">()</argument_list></call> <op:operator pos:line="1364" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="1364" pos:column="71">0</lit:literal></expr>;</return>}</block></function><empty_stmt pos:line="1364" pos:column="74">;</empty_stmt>

	<function><type><name><name pos:line="1366" pos:column="9">vector</name><argument_list pos:line="1366" pos:column="15">&lt;<argument><expr><name pos:line="1366" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1366" pos:column="33">&amp;</type:modifier></type> <name pos:line="1366" pos:column="35">getUserShortcuts</name><parameter_list pos:line="1366" pos:column="51">()</parameter_list> <block pos:line="1366" pos:column="54">{<return pos:line="1366" pos:column="55">return <expr><name pos:line="1366" pos:column="62">_shortcuts</name></expr>;</return>}</block></function><empty_stmt pos:line="1366" pos:column="74">;</empty_stmt>
	<function><type><name><name pos:line="1367" pos:column="9">vector</name><argument_list pos:line="1367" pos:column="15">&lt;<argument><expr><name pos:line="1367" pos:column="16">int</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1367" pos:column="21">&amp;</type:modifier></type> <name pos:line="1367" pos:column="23">getUserModifiedShortcuts</name><parameter_list pos:line="1367" pos:column="47">()</parameter_list> <block pos:line="1367" pos:column="50">{<return pos:line="1367" pos:column="51">return <expr><name pos:line="1367" pos:column="58">_customizedShortcuts</name></expr>;</return>}</block></function><empty_stmt pos:line="1367" pos:column="80">;</empty_stmt>
	<function_decl><type><name pos:line="1368" pos:column="9">void</name></type> <name pos:line="1368" pos:column="14">addUserModifiedIndex</name><parameter_list pos:line="1368" pos:column="34">(<param><decl><type><name pos:line="1368" pos:column="35">int</name></type> <name pos:line="1368" pos:column="39">index</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name><name pos:line="1370" pos:column="9">vector</name><argument_list pos:line="1370" pos:column="15">&lt;<argument><expr><name pos:line="1370" pos:column="16">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1370" pos:column="31">&amp;</type:modifier></type> <name pos:line="1370" pos:column="33">getMacroList</name><parameter_list pos:line="1370" pos:column="45">()</parameter_list> <block pos:line="1370" pos:column="48">{<return pos:line="1370" pos:column="49">return <expr><name pos:line="1370" pos:column="56">_macros</name></expr>;</return>}</block></function><empty_stmt pos:line="1370" pos:column="65">;</empty_stmt>
	<function><type><name><name pos:line="1371" pos:column="9">vector</name><argument_list pos:line="1371" pos:column="15">&lt;<argument><expr><name pos:line="1371" pos:column="16">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1371" pos:column="29">&amp;</type:modifier></type> <name pos:line="1371" pos:column="31">getUserCommandList</name><parameter_list pos:line="1371" pos:column="49">()</parameter_list> <block pos:line="1371" pos:column="52">{<return pos:line="1371" pos:column="53">return <expr><name pos:line="1371" pos:column="60">_userCommands</name></expr>;</return>}</block></function><empty_stmt pos:line="1371" pos:column="75">;</empty_stmt>
	<function><type><name><name pos:line="1372" pos:column="9">vector</name><argument_list pos:line="1372" pos:column="15">&lt;<argument><expr><name pos:line="1372" pos:column="16">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1372" pos:column="35">&amp;</type:modifier></type> <name pos:line="1372" pos:column="37">getPluginCommandList</name><parameter_list pos:line="1372" pos:column="57">()</parameter_list> <block pos:line="1372" pos:column="60">{<return pos:line="1372" pos:column="61">return <expr><name pos:line="1372" pos:column="68">_pluginCommands</name></expr>;</return>}</block></function><empty_stmt pos:line="1372" pos:column="85">;</empty_stmt>
	<function><type><name><name pos:line="1373" pos:column="9">vector</name><argument_list pos:line="1373" pos:column="15">&lt;<argument><expr><name pos:line="1373" pos:column="16">int</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1373" pos:column="21">&amp;</type:modifier></type> <name pos:line="1373" pos:column="23">getPluginModifiedKeyIndices</name><parameter_list pos:line="1373" pos:column="50">()</parameter_list> <block pos:line="1373" pos:column="53">{<return pos:line="1373" pos:column="54">return <expr><name pos:line="1373" pos:column="61">_pluginCustomizedCmds</name></expr>;</return>}</block></function><empty_stmt pos:line="1373" pos:column="84">;</empty_stmt>
	<function_decl><type><name pos:line="1374" pos:column="9">void</name></type> <name pos:line="1374" pos:column="14">addPluginModifiedIndex</name><parameter_list pos:line="1374" pos:column="36">(<param><decl><type><name pos:line="1374" pos:column="37">int</name></type> <name pos:line="1374" pos:column="41">index</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name><name pos:line="1376" pos:column="9">vector</name><argument_list pos:line="1376" pos:column="15">&lt;<argument><expr><name pos:line="1376" pos:column="16">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1376" pos:column="33">&amp;</type:modifier></type> <name pos:line="1376" pos:column="35">getScintillaKeyList</name><parameter_list pos:line="1376" pos:column="54">()</parameter_list> <block pos:line="1376" pos:column="57">{<return pos:line="1376" pos:column="58">return <expr><name pos:line="1376" pos:column="65">_scintillaKeyCommands</name></expr>;</return>}</block></function><empty_stmt pos:line="1376" pos:column="88">;</empty_stmt>
	<function><type><name><name pos:line="1377" pos:column="9">vector</name><argument_list pos:line="1377" pos:column="15">&lt;<argument><expr><name pos:line="1377" pos:column="16">int</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1377" pos:column="21">&amp;</type:modifier></type> <name pos:line="1377" pos:column="23">getScintillaModifiedKeyIndices</name><parameter_list pos:line="1377" pos:column="53">()</parameter_list> <block pos:line="1377" pos:column="56">{<return pos:line="1377" pos:column="57">return <expr><name pos:line="1377" pos:column="64">_scintillaModifiedKeyIndices</name></expr>;</return>}</block></function><empty_stmt pos:line="1377" pos:column="94">;</empty_stmt>
	<function_decl><type><name pos:line="1378" pos:column="9">void</name></type> <name pos:line="1378" pos:column="14">addScintillaModifiedIndex</name><parameter_list pos:line="1378" pos:column="39">(<param><decl><type><name pos:line="1378" pos:column="40">int</name></type> <name pos:line="1378" pos:column="44">index</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name><name pos:line="1380" pos:column="9">vector</name><argument_list pos:line="1380" pos:column="15">&lt;<argument><expr><name pos:line="1380" pos:column="16">MenuItemUnit</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1380" pos:column="30">&amp;</type:modifier></type> <name pos:line="1380" pos:column="32">getContextMenuItems</name><parameter_list pos:line="1380" pos:column="51">()</parameter_list> <block pos:line="1380" pos:column="54">{<return pos:line="1380" pos:column="55">return <expr><name pos:line="1380" pos:column="62">_contextMenuItems</name></expr>;</return>}</block></function><empty_stmt pos:line="1380" pos:column="81">;</empty_stmt>
	<function><type><specifier pos:line="1381" pos:column="9">const</specifier> <name pos:line="1381" pos:column="15">Session</name> <type:modifier pos:line="1381" pos:column="23">&amp;</type:modifier></type> <name pos:line="1381" pos:column="25">getSession</name><parameter_list pos:line="1381" pos:column="35">()</parameter_list> <specifier pos:line="1381" pos:column="38">const</specifier> <block pos:line="1381" pos:column="44">{<return pos:line="1381" pos:column="45">return <expr><name pos:line="1381" pos:column="52">_session</name></expr>;</return>}</block></function><empty_stmt pos:line="1381" pos:column="62">;</empty_stmt>
	<function><type><name pos:line="1382" pos:column="9">bool</name></type> <name pos:line="1382" pos:column="14">hasCustomContextMenu</name><parameter_list pos:line="1382" pos:column="34">()</parameter_list> <specifier pos:line="1382" pos:column="37">const</specifier> <block pos:line="1382" pos:column="43">{<return pos:line="1382" pos:column="44">return <expr><op:operator pos:line="1382" pos:column="51">!</op:operator><call><name><name pos:line="1382" pos:column="52">_contextMenuItems</name><op:operator pos:line="1382" pos:column="69">.</op:operator><name pos:line="1382" pos:column="70">empty</name></name><argument_list pos:line="1382" pos:column="75">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="1382" pos:column="79">;</empty_stmt>

	<function><type><name pos:line="1384" pos:column="9">void</name></type> <name pos:line="1384" pos:column="14">setAccelerator</name><parameter_list pos:line="1384" pos:column="28">(<param><decl><type><name pos:line="1384" pos:column="29">Accelerator</name> <type:modifier pos:line="1384" pos:column="41">*</type:modifier></type><name pos:line="1384" pos:column="42">pAccel</name></decl></param>)</parameter_list> <block pos:line="1384" pos:column="50">{<expr_stmt><expr><name pos:line="1384" pos:column="51">_pAccelerator</name> <op:operator pos:line="1384" pos:column="65">=</op:operator> <name pos:line="1384" pos:column="67">pAccel</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="1384" pos:column="75">;</empty_stmt>
	<function><type><name pos:line="1385" pos:column="9">Accelerator</name> <type:modifier pos:line="1385" pos:column="21">*</type:modifier></type> <name pos:line="1385" pos:column="23">getAccelerator</name><parameter_list pos:line="1385" pos:column="37">()</parameter_list> <block pos:line="1385" pos:column="40">{<return pos:line="1385" pos:column="41">return <expr><name pos:line="1385" pos:column="48">_pAccelerator</name></expr>;</return>}</block></function><empty_stmt pos:line="1385" pos:column="63">;</empty_stmt>
	<function><type><name pos:line="1386" pos:column="9">void</name></type> <name pos:line="1386" pos:column="14">setScintillaAccelerator</name><parameter_list pos:line="1386" pos:column="37">(<param><decl><type><name pos:line="1386" pos:column="38">ScintillaAccelerator</name> <type:modifier pos:line="1386" pos:column="59">*</type:modifier></type><name pos:line="1386" pos:column="60">pScintAccel</name></decl></param>)</parameter_list> <block pos:line="1386" pos:column="73">{<expr_stmt><expr><name pos:line="1386" pos:column="74">_pScintAccelerator</name> <op:operator pos:line="1386" pos:column="93">=</op:operator> <name pos:line="1386" pos:column="95">pScintAccel</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="1386" pos:column="108">;</empty_stmt>
	<function><type><name pos:line="1387" pos:column="9">ScintillaAccelerator</name> <type:modifier pos:line="1387" pos:column="30">*</type:modifier></type> <name pos:line="1387" pos:column="32">getScintillaAccelerator</name><parameter_list pos:line="1387" pos:column="55">()</parameter_list> <block pos:line="1387" pos:column="58">{<return pos:line="1387" pos:column="59">return <expr><name pos:line="1387" pos:column="66">_pScintAccelerator</name></expr>;</return>}</block></function><empty_stmt pos:line="1387" pos:column="86">;</empty_stmt> 

	<function><type><name pos:line="1389" pos:column="9">generic_string</name></type> <name pos:line="1389" pos:column="24">getNppPath</name><parameter_list pos:line="1389" pos:column="34">()</parameter_list> <specifier pos:line="1389" pos:column="37">const</specifier> <block pos:line="1389" pos:column="43">{<return pos:line="1389" pos:column="44">return <expr><name pos:line="1389" pos:column="51">_nppPath</name></expr>;</return>}</block></function><empty_stmt pos:line="1389" pos:column="61">;</empty_stmt>
    <function><type><name pos:line="1390" pos:column="5">generic_string</name></type> <name pos:line="1390" pos:column="20">getContextMenuPath</name><parameter_list pos:line="1390" pos:column="38">()</parameter_list> <specifier pos:line="1390" pos:column="41">const</specifier> <block pos:line="1390" pos:column="47">{<return pos:line="1390" pos:column="48">return <expr><name pos:line="1390" pos:column="55">_contextMenuPath</name></expr>;</return>}</block></function><empty_stmt pos:line="1390" pos:column="73">;</empty_stmt>
	<function><type><specifier pos:line="1391" pos:column="9">const</specifier> <name pos:line="1391" pos:column="15">TCHAR</name> <type:modifier pos:line="1391" pos:column="21">*</type:modifier></type> <name pos:line="1391" pos:column="23">getAppDataNppDir</name><parameter_list pos:line="1391" pos:column="39">()</parameter_list> <specifier pos:line="1391" pos:column="42">const</specifier> <block pos:line="1391" pos:column="48">{<return pos:line="1391" pos:column="49">return <expr><call><name><name pos:line="1391" pos:column="56">_appdataNppDir</name><op:operator pos:line="1391" pos:column="70">.</op:operator><name pos:line="1391" pos:column="71">c_str</name></name><argument_list pos:line="1391" pos:column="76">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="1391" pos:column="80">;</empty_stmt>
	<function><type><specifier pos:line="1392" pos:column="9">const</specifier> <name pos:line="1392" pos:column="15">TCHAR</name> <type:modifier pos:line="1392" pos:column="21">*</type:modifier></type> <name pos:line="1392" pos:column="23">getWorkingDir</name><parameter_list pos:line="1392" pos:column="36">()</parameter_list> <specifier pos:line="1392" pos:column="39">const</specifier> <block pos:line="1392" pos:column="45">{<return pos:line="1392" pos:column="46">return <expr><call><name><name pos:line="1392" pos:column="53">_currentDirectory</name><op:operator pos:line="1392" pos:column="70">.</op:operator><name pos:line="1392" pos:column="71">c_str</name></name><argument_list pos:line="1392" pos:column="76">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="1392" pos:column="80">;</empty_stmt>
	<function><type><specifier pos:line="1393" pos:column="9">const</specifier> <name pos:line="1393" pos:column="15">TCHAR</name> <type:modifier pos:line="1393" pos:column="21">*</type:modifier></type> <name pos:line="1393" pos:column="23">getworkSpaceFilePath</name><parameter_list pos:line="1393" pos:column="43">(<param><decl><type><name pos:line="1393" pos:column="44">int</name></type> <name pos:line="1393" pos:column="48">i</name></decl></param>)</parameter_list> <specifier pos:line="1393" pos:column="51">const</specifier> <block pos:line="1393" pos:column="57">{
		<if pos:line="1394" pos:column="17">if <condition pos:line="1394" pos:column="20">(<expr><name><name pos:line="1394" pos:column="21">i</name> <argument_list pos:line="1394" pos:column="23">&lt; <argument><expr><lit:literal type="number" pos:line="1394" pos:column="25">0</lit:literal> <op:operator pos:line="1394" pos:column="27">||</op:operator> <name pos:line="1394" pos:column="30">i</name></expr></argument> &gt;</argument_list></name> <lit:literal type="number" pos:line="1394" pos:column="34">2</lit:literal></expr>)</condition><then pos:line="1394" pos:column="36"> <return pos:line="1394" pos:column="37">return <expr><name pos:line="1394" pos:column="44">NULL</name></expr>;</return></then></if>
		<return pos:line="1395" pos:column="17">return <expr><name><name pos:line="1395" pos:column="24">_workSpaceFilePathes</name><index pos:line="1395" pos:column="44">[<expr><name pos:line="1395" pos:column="45">i</name></expr>]</index></name><op:operator pos:line="1395" pos:column="47">.</op:operator><call><name pos:line="1395" pos:column="48">c_str</name><argument_list pos:line="1395" pos:column="53">()</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="1396" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1398" pos:column="9">void</name></type> <name pos:line="1398" pos:column="14">setWorkSpaceFilePath</name><parameter_list pos:line="1398" pos:column="34">(<param><decl><type><name pos:line="1398" pos:column="35">int</name></type> <name pos:line="1398" pos:column="39">i</name></decl></param>, <param><decl><type><specifier pos:line="1398" pos:column="42">const</specifier> <name pos:line="1398" pos:column="48">TCHAR</name> <type:modifier pos:line="1398" pos:column="54">*</type:modifier></type><name pos:line="1398" pos:column="55">wsFile</name></decl></param>)</parameter_list> <block pos:line="1398" pos:column="63">{
		<if pos:line="1399" pos:column="17">if <condition pos:line="1399" pos:column="20">(<expr><name><name pos:line="1399" pos:column="21">i</name> <argument_list pos:line="1399" pos:column="23">&lt; <argument><expr><lit:literal type="number" pos:line="1399" pos:column="25">0</lit:literal> <op:operator pos:line="1399" pos:column="27">||</op:operator> <name pos:line="1399" pos:column="30">i</name></expr></argument> &gt;</argument_list></name> <lit:literal type="number" pos:line="1399" pos:column="34">2</lit:literal> <op:operator pos:line="1399" pos:column="36">||</op:operator> <op:operator pos:line="1399" pos:column="39">!</op:operator><name pos:line="1399" pos:column="40">wsFile</name></expr>)</condition><then pos:line="1399" pos:column="47"> <return pos:line="1399" pos:column="48">return;</return></then></if>
		<expr_stmt><expr><name><name pos:line="1400" pos:column="17">_workSpaceFilePathes</name><index pos:line="1400" pos:column="37">[<expr><name pos:line="1400" pos:column="38">i</name></expr>]</index></name> <op:operator pos:line="1400" pos:column="41">=</op:operator> <name pos:line="1400" pos:column="43">wsFile</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1401" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="1403" pos:column="9">void</name></type> <name pos:line="1403" pos:column="14">setWorkingDir</name><parameter_list pos:line="1403" pos:column="27">(<param><decl><type><specifier pos:line="1403" pos:column="28">const</specifier> <name pos:line="1403" pos:column="34">TCHAR</name> <type:modifier pos:line="1403" pos:column="40">*</type:modifier></type> <name pos:line="1403" pos:column="42">newPath</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1405" pos:column="9">bool</name></type> <name pos:line="1405" pos:column="14">loadSession</name><parameter_list pos:line="1405" pos:column="25">(<param><decl><type><name pos:line="1405" pos:column="26">Session</name> <type:modifier pos:line="1405" pos:column="34">&amp;</type:modifier></type> <name pos:line="1405" pos:column="36">session</name></decl></param>, <param><decl><type><specifier pos:line="1405" pos:column="45">const</specifier> <name pos:line="1405" pos:column="51">TCHAR</name> <type:modifier pos:line="1405" pos:column="57">*</type:modifier></type><name pos:line="1405" pos:column="58">sessionFileName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1406" pos:column="9">int</name></type> <name pos:line="1406" pos:column="13">langTypeToCommandID</name><parameter_list pos:line="1406" pos:column="32">(<param><decl><type><name pos:line="1406" pos:column="33">LangType</name></type> <name pos:line="1406" pos:column="42">lt</name></decl></param>)</parameter_list> <specifier pos:line="1406" pos:column="46">const</specifier>;</function_decl>
	<function><type><name pos:line="1407" pos:column="9">WNDPROC</name></type> <name pos:line="1407" pos:column="17">getEnableThemeDlgTexture</name><parameter_list pos:line="1407" pos:column="41">()</parameter_list> <specifier pos:line="1407" pos:column="44">const</specifier> <block pos:line="1407" pos:column="50">{<return pos:line="1407" pos:column="51">return <expr><name pos:line="1407" pos:column="58">_enableThemeDialogTextureFuncAddr</name></expr>;</return>}</block></function><empty_stmt pos:line="1407" pos:column="93">;</empty_stmt>

	<struct pos:line="1409" pos:column="9">struct <name pos:line="1409" pos:column="16">FindDlgTabTitiles</name> <block pos:line="1409" pos:column="34">{<public type="default" pos:line="1409" pos:column="35">
		<decl_stmt><decl><type><name pos:line="1410" pos:column="17">generic_string</name></type> <name pos:line="1410" pos:column="32">_find</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1411" pos:column="17">generic_string</name></type> <name pos:line="1411" pos:column="32">_replace</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1412" pos:column="17">generic_string</name></type> <name pos:line="1412" pos:column="32">_findInFiles</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1413" pos:column="17">generic_string</name></type> <name pos:line="1413" pos:column="32">_mark</name></decl>;</decl_stmt>
		<constructor><name pos:line="1414" pos:column="17">FindDlgTabTitiles</name><parameter_list pos:line="1414" pos:column="34">()</parameter_list> <member_list pos:line="1414" pos:column="37">: <call><name pos:line="1414" pos:column="39">_find</name><argument_list pos:line="1414" pos:column="44">(<argument><expr><call><name pos:line="1414" pos:column="45">TEXT</name><argument_list pos:line="1414" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="1414" pos:column="50">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1414" pos:column="54">,</op:operator> <call><name pos:line="1414" pos:column="56">_replace</name><argument_list pos:line="1414" pos:column="64">(<argument><expr><call><name pos:line="1414" pos:column="65">TEXT</name><argument_list pos:line="1414" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="1414" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1414" pos:column="74">,</op:operator> <call><name pos:line="1414" pos:column="76">_findInFiles</name><argument_list pos:line="1414" pos:column="88">(<argument><expr><call><name pos:line="1414" pos:column="89">TEXT</name><argument_list pos:line="1414" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="1414" pos:column="94">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1414" pos:column="98">,</op:operator> <call><name pos:line="1414" pos:column="100">_mark</name><argument_list pos:line="1414" pos:column="105">(<argument><expr><call><name pos:line="1414" pos:column="106">TEXT</name><argument_list pos:line="1414" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="1414" pos:column="111">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="1414" pos:column="116">{}</block></constructor><empty_stmt pos:line="1414" pos:column="118">;</empty_stmt>
	</public>}</block>;</struct>

	<function><type><name pos:line="1417" pos:column="9">FindDlgTabTitiles</name> <type:modifier pos:line="1417" pos:column="27">&amp;</type:modifier></type> <name pos:line="1417" pos:column="29">getFindDlgTabTitiles</name><parameter_list pos:line="1417" pos:column="49">()</parameter_list> <block pos:line="1417" pos:column="52">{ <return pos:line="1417" pos:column="54">return <expr><name pos:line="1417" pos:column="61">_findDlgTabTitiles</name></expr>;</return>}</block></function><empty_stmt pos:line="1417" pos:column="81">;</empty_stmt>

	<function><type><name pos:line="1419" pos:column="9">bool</name></type> <name pos:line="1419" pos:column="14">asNotepadStyle</name><parameter_list pos:line="1419" pos:column="28">()</parameter_list> <specifier pos:line="1419" pos:column="31">const</specifier> <block pos:line="1419" pos:column="37">{<return pos:line="1419" pos:column="38">return <expr><name pos:line="1419" pos:column="45">_asNotepadStyle</name></expr>;</return>}</block></function><empty_stmt pos:line="1419" pos:column="62">;</empty_stmt>

	<function><type><name pos:line="1421" pos:column="9">bool</name></type> <name pos:line="1421" pos:column="14">reloadPluginCmds</name><parameter_list pos:line="1421" pos:column="30">()</parameter_list> <block pos:line="1421" pos:column="33">{
		<return pos:line="1422" pos:column="17">return <expr><call><name pos:line="1422" pos:column="24">getPluginCmdsFromXmlTree</name><argument_list pos:line="1422" pos:column="48">()</argument_list></call></expr>;</return>
	}</block></function>

	<function_decl><type><name pos:line="1425" pos:column="9">bool</name></type> <name pos:line="1425" pos:column="14">getContextMenuFromXmlTree</name><parameter_list pos:line="1425" pos:column="39">(<param><decl><type><name pos:line="1425" pos:column="40">HMENU</name></type> <name pos:line="1425" pos:column="46">mainMenuHadle</name></decl></param>, <param><decl><type><name pos:line="1425" pos:column="61">HMENU</name></type> <name pos:line="1425" pos:column="67">pluginsMenu</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1426" pos:column="9">bool</name></type> <name pos:line="1426" pos:column="14">reloadContextMenuFromXmlTree</name><parameter_list pos:line="1426" pos:column="42">(<param><decl><type><name pos:line="1426" pos:column="43">HMENU</name></type> <name pos:line="1426" pos:column="49">mainMenuHadle</name></decl></param>, <param><decl><type><name pos:line="1426" pos:column="64">HMENU</name></type> <name pos:line="1426" pos:column="70">pluginsMenu</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="1427" pos:column="9">winVer</name></type> <name pos:line="1427" pos:column="16">getWinVersion</name><parameter_list pos:line="1427" pos:column="29">()</parameter_list> <block pos:line="1427" pos:column="32">{ <return pos:line="1427" pos:column="34">return <expr><name pos:line="1427" pos:column="41">_winVersion</name></expr>;</return>}</block></function><empty_stmt pos:line="1427" pos:column="54">;</empty_stmt>
	<function><type><name pos:line="1428" pos:column="9">FindHistory</name> <type:modifier pos:line="1428" pos:column="21">&amp;</type:modifier></type> <name pos:line="1428" pos:column="23">getFindHistory</name><parameter_list pos:line="1428" pos:column="37">()</parameter_list> <block pos:line="1428" pos:column="40">{<return pos:line="1428" pos:column="41">return <expr><name pos:line="1428" pos:column="48">_findHistory</name></expr>;</return>}</block></function><empty_stmt pos:line="1428" pos:column="62">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="1429" pos:column="9">bool</name></type> <name pos:line="1429" pos:column="14">_isFindReplacing</name></decl>;</decl_stmt> <comment type="line" pos:line="1429" pos:column="32">// an on the fly variable for find/replace functions</comment>
	<function_decl><type><name pos:line="1430" pos:column="9">void</name></type> <name pos:line="1430" pos:column="14">safeWow64EnableWow64FsRedirection</name><parameter_list pos:line="1430" pos:column="47">(<param><decl><type><name pos:line="1430" pos:column="48">BOOL</name></type> <name pos:line="1430" pos:column="53">Wow64FsEnableRedirection</name></decl></param>)</parameter_list>;</function_decl>

<cpp:ifdef pos:line="1432" pos:column="1">#<cpp:directive pos:line="1432" pos:column="2">ifdef</cpp:directive> <name pos:line="1432" pos:column="8">UNICODE</name></cpp:ifdef>
	<function><type><name pos:line="1433" pos:column="9">LocalizationSwitcher</name> <type:modifier pos:line="1433" pos:column="30">&amp;</type:modifier></type> <name pos:line="1433" pos:column="32">getLocalizationSwitcher</name><parameter_list pos:line="1433" pos:column="55">()</parameter_list> <block pos:line="1433" pos:column="58">{
		<return pos:line="1434" pos:column="17">return <expr><name pos:line="1434" pos:column="24">_localizationSwitcher</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1435" pos:column="10">;</empty_stmt>
<cpp:endif pos:line="1436" pos:column="1">#<cpp:directive pos:line="1436" pos:column="2">endif</cpp:directive></cpp:endif>
	<function><type><name pos:line="1437" pos:column="9">ThemeSwitcher</name> <type:modifier pos:line="1437" pos:column="23">&amp;</type:modifier></type> <name pos:line="1437" pos:column="25">getThemeSwitcher</name><parameter_list pos:line="1437" pos:column="41">()</parameter_list> <block pos:line="1437" pos:column="44">{
		<return pos:line="1438" pos:column="17">return <expr><name pos:line="1438" pos:column="24">_themeSwitcher</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1439" pos:column="10">;</empty_stmt>


    <function><type><name><name pos:line="1442" pos:column="5">vector</name><argument_list pos:line="1442" pos:column="11">&lt;<argument><expr><name pos:line="1442" pos:column="12">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1442" pos:column="28">&amp;</type:modifier></type> <name pos:line="1442" pos:column="30">getBlackList</name><parameter_list pos:line="1442" pos:column="42">()</parameter_list> <block pos:line="1442" pos:column="45">{<return pos:line="1442" pos:column="46">return <expr><name pos:line="1442" pos:column="53">_blacklist</name></expr>;</return>}</block></function><empty_stmt pos:line="1442" pos:column="65">;</empty_stmt>
    <function><type><name pos:line="1443" pos:column="5">bool</name></type> <name pos:line="1443" pos:column="10">isInBlackList</name><parameter_list pos:line="1443" pos:column="23">(<param><decl><type><name pos:line="1443" pos:column="24">TCHAR</name> <type:modifier pos:line="1443" pos:column="30">*</type:modifier></type><name pos:line="1443" pos:column="31">fn</name></decl></param>)</parameter_list> <block pos:line="1443" pos:column="35">{
        <for pos:line="1444" pos:column="9">for (<init><decl><type><name pos:line="1444" pos:column="14">size_t</name></type> <name pos:line="1444" pos:column="21">i</name> <init pos:line="1444" pos:column="23">= <expr><lit:literal type="number" pos:line="1444" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1444" pos:column="29">i</name> <op:operator pos:line="1444" pos:column="31">&lt;</op:operator> <call><name><name pos:line="1444" pos:column="33">_blacklist</name><op:operator pos:line="1444" pos:column="43">.</op:operator><name pos:line="1444" pos:column="44">size</name></name><argument_list pos:line="1444" pos:column="48">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1444" pos:column="53">i</name><op:operator pos:line="1444" pos:column="54">++</op:operator></expr></incr>)
            <if pos:line="1445" pos:column="13">if <condition pos:line="1445" pos:column="16">(<expr><name><name pos:line="1445" pos:column="17">_blacklist</name><index pos:line="1445" pos:column="27">[<expr><name pos:line="1445" pos:column="28">i</name></expr>]</index></name> <op:operator pos:line="1445" pos:column="31">==</op:operator> <name pos:line="1445" pos:column="34">fn</name></expr>)</condition><then pos:line="1445" pos:column="37">
                <return pos:line="1446" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1446" pos:column="24">true</lit:literal></expr>;</return></then></if></for>
        <return pos:line="1447" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1447" pos:column="16">false</lit:literal></expr>;</return>
    }</block></function><empty_stmt pos:line="1448" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="1450" pos:column="5">PluginList</name> <type:modifier pos:line="1450" pos:column="16">&amp;</type:modifier></type> <name pos:line="1450" pos:column="18">getPluginList</name><parameter_list pos:line="1450" pos:column="31">()</parameter_list> <block pos:line="1450" pos:column="34">{<return pos:line="1450" pos:column="35">return <expr><name pos:line="1450" pos:column="42">_pluginList</name></expr>;</return>}</block></function><empty_stmt pos:line="1450" pos:column="55">;</empty_stmt>
    <function_decl><type><name pos:line="1451" pos:column="5">bool</name></type> <name pos:line="1451" pos:column="10">importUDLFromFile</name><parameter_list pos:line="1451" pos:column="27">(<param><decl><type><name pos:line="1451" pos:column="28">generic_string</name></type> <name pos:line="1451" pos:column="43">sourceFile</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1452" pos:column="5">bool</name></type> <name pos:line="1452" pos:column="10">exportUDLToFile</name><parameter_list pos:line="1452" pos:column="25">(<param><decl><type><name pos:line="1452" pos:column="26">int</name></type> <name pos:line="1452" pos:column="30">langIndex2export</name></decl></param>, <param><decl><type><name pos:line="1452" pos:column="48">generic_string</name></type> <name pos:line="1452" pos:column="63">fileName2save</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="1453" pos:column="9">NativeLangSpeaker</name> <type:modifier pos:line="1453" pos:column="27">*</type:modifier></type> <name pos:line="1453" pos:column="29">getNativeLangSpeaker</name><parameter_list pos:line="1453" pos:column="49">()</parameter_list> <block pos:line="1453" pos:column="52">{
		<return pos:line="1454" pos:column="17">return <expr><name pos:line="1454" pos:column="24">_pNativeLangSpeaker</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1455" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="1456" pos:column="9">void</name></type> <name pos:line="1456" pos:column="14">setNativeLangSpeaker</name><parameter_list pos:line="1456" pos:column="34">(<param><decl><type><name pos:line="1456" pos:column="35">NativeLangSpeaker</name> <type:modifier pos:line="1456" pos:column="53">*</type:modifier></type><name pos:line="1456" pos:column="54">nls</name></decl></param>)</parameter_list> <block pos:line="1456" pos:column="59">{
		<expr_stmt><expr><name pos:line="1457" pos:column="17">_pNativeLangSpeaker</name> <op:operator pos:line="1457" pos:column="37">=</op:operator> <name pos:line="1457" pos:column="39">nls</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1458" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1460" pos:column="9">bool</name></type> <name pos:line="1460" pos:column="14">isLocal</name><parameter_list pos:line="1460" pos:column="21">()</parameter_list> <specifier pos:line="1460" pos:column="24">const</specifier> <block pos:line="1460" pos:column="30">{
		<return pos:line="1461" pos:column="17">return <expr><name pos:line="1461" pos:column="24">_isLocal</name></expr>;</return>
	}</block></function><empty_stmt pos:line="1462" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="1464" pos:column="9">void</name></type> <name pos:line="1464" pos:column="14">saveConfig_xml</name><parameter_list pos:line="1464" pos:column="28">()</parameter_list> <block pos:line="1464" pos:column="31">{
		<expr_stmt><expr><call><name><name pos:line="1465" pos:column="17">_pXmlUserDoc</name><op:operator pos:line="1465" pos:column="29">-&gt;</op:operator><name pos:line="1465" pos:column="31">SaveFile</name></name><argument_list pos:line="1465" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="1466" pos:column="10">;</empty_stmt>

</public><private pos:line="1468" pos:column="1">private:
    <constructor_decl><name pos:line="1469" pos:column="5">NppParameters</name><parameter_list pos:line="1469" pos:column="18">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="1470" pos:column="9">~<name pos:line="1470" pos:column="10">NppParameters</name></name><parameter_list pos:line="1470" pos:column="23">()</parameter_list>;</destructor_decl>

    <decl_stmt><decl><type><specifier pos:line="1472" pos:column="5">static</specifier> <name pos:line="1472" pos:column="12">NppParameters</name> <type:modifier pos:line="1472" pos:column="26">*</type:modifier></type><name pos:line="1472" pos:column="27">_pSelf</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1474" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="1474" pos:column="23">*</type:modifier></type><name pos:line="1474" pos:column="24">_pXmlDoc</name></decl><op:operator pos:line="1474" pos:column="32">,</op:operator> <type:modifier pos:line="1474" pos:column="34">*</type:modifier><decl><type ref="prev"/><name pos:line="1474" pos:column="35">_pXmlUserDoc</name></decl><op:operator pos:line="1474" pos:column="47">,</op:operator> <type:modifier pos:line="1474" pos:column="49">*</type:modifier><decl><type ref="prev"/><name pos:line="1474" pos:column="50">_pXmlUserStylerDoc</name></decl><op:operator pos:line="1474" pos:column="68">,</op:operator> <type:modifier pos:line="1474" pos:column="70">*</type:modifier><decl><type ref="prev"/><name pos:line="1474" pos:column="71">_pXmlUserLangDoc</name></decl><op:operator pos:line="1474" pos:column="87">,</op:operator>\
		<type:modifier pos:line="1475" pos:column="17">*</type:modifier><decl><type ref="prev"/><name pos:line="1475" pos:column="18">_pXmlToolIconsDoc</name></decl><op:operator pos:line="1475" pos:column="35">,</op:operator> <type:modifier pos:line="1475" pos:column="37">*</type:modifier><decl><type ref="prev"/><name pos:line="1475" pos:column="38">_pXmlShortcutDoc</name></decl><op:operator pos:line="1475" pos:column="54">,</op:operator> <type:modifier pos:line="1475" pos:column="56">*</type:modifier><decl><type ref="prev"/><name pos:line="1475" pos:column="57">_pXmlSessionDoc</name></decl><op:operator pos:line="1475" pos:column="72">,</op:operator>\
        <type:modifier pos:line="1476" pos:column="9">*</type:modifier><decl><type ref="prev"/><name pos:line="1476" pos:column="10">_pXmlBlacklistDoc</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1478" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="1478" pos:column="23">*</type:modifier></type><name><name pos:line="1478" pos:column="24">_importedULD</name><index pos:line="1478" pos:column="36">[<expr><name pos:line="1478" pos:column="37">NB_MAX_IMPORTED_UDL</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1479" pos:column="9">int</name></type> <name pos:line="1479" pos:column="13">_nbImportedULD</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="1481" pos:column="9">TiXmlDocumentA</name> <type:modifier pos:line="1481" pos:column="24">*</type:modifier></type><name pos:line="1481" pos:column="25">_pXmlNativeLangDocA</name></decl><op:operator pos:line="1481" pos:column="44">,</op:operator> <type:modifier pos:line="1481" pos:column="46">*</type:modifier><decl><type ref="prev"/><name pos:line="1481" pos:column="47">_pXmlContextMenuDocA</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="1483" pos:column="9">vector</name><argument_list pos:line="1483" pos:column="15">&lt;<argument><expr><name pos:line="1483" pos:column="16">TiXmlDocument</name> <type:modifier pos:line="1483" pos:column="30">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="1483" pos:column="33">_pXmlExternalLexerDoc</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1485" pos:column="9">NppGUI</name></type> <name pos:line="1485" pos:column="16">_nppGUI</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1486" pos:column="9">ScintillaViewParams</name></type> <name pos:line="1486" pos:column="29">_svp</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1487" pos:column="9">Lang</name> <type:modifier pos:line="1487" pos:column="14">*</type:modifier></type><name><name pos:line="1487" pos:column="15">_langList</name><index pos:line="1487" pos:column="24">[<expr><name pos:line="1487" pos:column="25">NB_LANG</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1488" pos:column="9">int</name></type> <name pos:line="1488" pos:column="13">_nbLang</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1490" pos:column="9">// Recent File History</comment>
	<decl_stmt><decl><type><name pos:line="1491" pos:column="9">generic_string</name> <type:modifier pos:line="1491" pos:column="24">*</type:modifier></type><name><name pos:line="1491" pos:column="25">_LRFileList</name><index pos:line="1491" pos:column="36">[<expr><name pos:line="1491" pos:column="37">NB_MAX_LRF_FILE</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1492" pos:column="9">int</name></type> <name pos:line="1492" pos:column="13">_nbRecentFile</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1493" pos:column="9">int</name></type> <name pos:line="1493" pos:column="13">_nbMaxRecentFile</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1494" pos:column="9">bool</name></type> <name pos:line="1494" pos:column="14">_putRecentFileInSubMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1495" pos:column="9">int</name></type> <name pos:line="1495" pos:column="13">_recentFileCustomLength</name></decl>;</decl_stmt>	<comment type="line" pos:line="1495" pos:column="41">//	&lt;0: Full File Path Name</comment>
									<comment type="line" pos:line="1496" pos:column="73">//	=0: Only File Name</comment>
									<comment type="line" pos:line="1497" pos:column="73">//	&gt;0: Custom Entry Length</comment>

	<decl_stmt><decl><type><name pos:line="1499" pos:column="9">FindHistory</name></type> <name pos:line="1499" pos:column="21">_findHistory</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1501" pos:column="9">UserLangContainer</name> <type:modifier pos:line="1501" pos:column="27">*</type:modifier></type><name><name pos:line="1501" pos:column="28">_userLangArray</name><index pos:line="1501" pos:column="42">[<expr><name pos:line="1501" pos:column="43">NB_MAX_USER_LANG</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1502" pos:column="9">int</name></type> <name pos:line="1502" pos:column="13">_nbUserLang</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1503" pos:column="9">generic_string</name></type> <name pos:line="1503" pos:column="24">_userDefineLangPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1504" pos:column="9">ExternalLangContainer</name> <type:modifier pos:line="1504" pos:column="31">*</type:modifier></type><name><name pos:line="1504" pos:column="32">_externalLangArray</name><index pos:line="1504" pos:column="50">[<expr><name pos:line="1504" pos:column="51">NB_MAX_EXTERNAL_LANG</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1505" pos:column="9">int</name></type> <name pos:line="1505" pos:column="13">_nbExternalLang</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1507" pos:column="9">CmdLineParams</name></type> <name pos:line="1507" pos:column="23">_cmdLineParams</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1509" pos:column="9">int</name></type> <name pos:line="1509" pos:column="13">_fileSaveDlgFilterIndex</name></decl>;</decl_stmt>

    <comment type="line" pos:line="1511" pos:column="5">// All Styles (colours &amp; fonts)</comment>
	<decl_stmt><decl><type><name pos:line="1512" pos:column="9">LexerStylerArray</name></type> <name pos:line="1512" pos:column="26">_lexerStylerArray</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1513" pos:column="5">StyleArray</name></type> <name pos:line="1513" pos:column="16">_widgetStyleArray</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="1515" pos:column="9">vector</name><argument_list pos:line="1515" pos:column="15">&lt;<argument><expr><name pos:line="1515" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1515" pos:column="32">_fontlist</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="1516" pos:column="5">vector</name><argument_list pos:line="1516" pos:column="11">&lt;<argument><expr><name pos:line="1516" pos:column="12">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1516" pos:column="28">_blacklist</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1517" pos:column="5">PluginList</name></type> <name pos:line="1517" pos:column="16">_pluginList</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1519" pos:column="9">HMODULE</name></type> <name pos:line="1519" pos:column="17">_hUser32</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1520" pos:column="9">HMODULE</name></type> <name pos:line="1520" pos:column="17">_hUXTheme</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1522" pos:column="9">WNDPROC</name></type> <name pos:line="1522" pos:column="17">_transparentFuncAddr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1523" pos:column="9">WNDPROC</name></type> <name pos:line="1523" pos:column="17">_enableThemeDialogTextureFuncAddr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1524" pos:column="9">bool</name></type> <name pos:line="1524" pos:column="14">_isLocal</name></decl>;</decl_stmt>


	<decl_stmt><decl><type><name><name pos:line="1527" pos:column="9">vector</name><argument_list pos:line="1527" pos:column="15">&lt;<argument><expr><name pos:line="1527" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1527" pos:column="33">_shortcuts</name></decl>;</decl_stmt>			<comment type="line" pos:line="1527" pos:column="65">//main menu shortuts. Static size</comment>
	<decl_stmt><decl><type><name><name pos:line="1528" pos:column="9">vector</name><argument_list pos:line="1528" pos:column="15">&lt;<argument><expr><name pos:line="1528" pos:column="16">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1528" pos:column="21">_customizedShortcuts</name></decl>;</decl_stmt>			<comment type="line" pos:line="1528" pos:column="65">//altered main menu shortcuts. Indices static. Needed when saving alterations</comment>
	<decl_stmt><decl><type><name><name pos:line="1529" pos:column="9">vector</name><argument_list pos:line="1529" pos:column="15">&lt;<argument><expr><name pos:line="1529" pos:column="16">MacroShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1529" pos:column="31">_macros</name></decl>;</decl_stmt>				<comment type="line" pos:line="1529" pos:column="65">//macro shortcuts, dynamic size, defined on loading macros and adding/deleting them</comment>
	<decl_stmt><decl><type><name><name pos:line="1530" pos:column="9">vector</name><argument_list pos:line="1530" pos:column="15">&lt;<argument><expr><name pos:line="1530" pos:column="16">UserCommand</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1530" pos:column="29">_userCommands</name></decl>;</decl_stmt>			<comment type="line" pos:line="1530" pos:column="65">//run shortcuts, dynamic size, defined on loading run commands and adding/deleting them</comment>
	<decl_stmt><decl><type><name><name pos:line="1531" pos:column="9">vector</name><argument_list pos:line="1531" pos:column="15">&lt;<argument><expr><name pos:line="1531" pos:column="16">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1531" pos:column="35">_pluginCommands</name></decl>;</decl_stmt>	<comment type="line" pos:line="1531" pos:column="57">//plugin commands, dynamic size, defined on loading plugins</comment>
	<decl_stmt><decl><type><name><name pos:line="1532" pos:column="9">vector</name><argument_list pos:line="1532" pos:column="15">&lt;<argument><expr><name pos:line="1532" pos:column="16">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1532" pos:column="21">_pluginCustomizedCmds</name></decl>;</decl_stmt>			<comment type="line" pos:line="1532" pos:column="65">//plugincommands that have been altered. Indices determined after loading ALL plugins. Needed when saving alterations</comment>

	<decl_stmt><decl><type><name><name pos:line="1534" pos:column="9">vector</name><argument_list pos:line="1534" pos:column="15">&lt;<argument><expr><name pos:line="1534" pos:column="16">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1534" pos:column="33">_scintillaKeyCommands</name></decl>;</decl_stmt>	<comment type="line" pos:line="1534" pos:column="57">//scintilla keycommands. Static size</comment>
	<decl_stmt><decl><type><name><name pos:line="1535" pos:column="9">vector</name><argument_list pos:line="1535" pos:column="15">&lt;<argument><expr><name pos:line="1535" pos:column="16">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1535" pos:column="21">_scintillaModifiedKeyIndices</name></decl>;</decl_stmt>		<comment type="line" pos:line="1535" pos:column="65">//modified scintilla keys. Indices static, determined by searching for commandId. Needed when saving alterations</comment>
<cpp:ifdef pos:line="1536" pos:column="1">#<cpp:directive pos:line="1536" pos:column="2">ifdef</cpp:directive> <name pos:line="1536" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="1537" pos:column="9">LocalizationSwitcher</name></type> <name pos:line="1537" pos:column="30">_localizationSwitcher</name></decl>;</decl_stmt>
<cpp:endif pos:line="1538" pos:column="1">#<cpp:directive pos:line="1538" pos:column="2">endif</cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="1539" pos:column="9">ThemeSwitcher</name></type> <name pos:line="1539" pos:column="23">_themeSwitcher</name></decl>;</decl_stmt>

	<comment type="line" pos:line="1541" pos:column="9">//vector&lt;generic_string&gt; _noMenuCmdNames;</comment>
	<decl_stmt><decl><type><name><name pos:line="1542" pos:column="9">vector</name><argument_list pos:line="1542" pos:column="15">&lt;<argument><expr><name pos:line="1542" pos:column="16">MenuItemUnit</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1542" pos:column="30">_contextMenuItems</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1543" pos:column="9">Session</name></type> <name pos:line="1543" pos:column="17">_session</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1545" pos:column="9">generic_string</name></type> <name pos:line="1545" pos:column="24">_shortcutsPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1546" pos:column="9">generic_string</name></type> <name pos:line="1546" pos:column="24">_contextMenuPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1547" pos:column="9">generic_string</name></type> <name pos:line="1547" pos:column="24">_sessionPath</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1548" pos:column="5">generic_string</name></type> <name pos:line="1548" pos:column="20">_blacklistPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1549" pos:column="9">generic_string</name></type> <name pos:line="1549" pos:column="24">_nppPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1550" pos:column="9">generic_string</name></type> <name pos:line="1550" pos:column="24">_userPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1551" pos:column="9">generic_string</name></type> <name pos:line="1551" pos:column="24">_stylerPath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1552" pos:column="9">generic_string</name></type> <name pos:line="1552" pos:column="24">_appdataNppDir</name></decl>;</decl_stmt> <comment type="line" pos:line="1552" pos:column="40">// sentinel of the absence of "doLocalConf.xml" : (_appdataNppDir == TEXT(""))?"doLocalConf.xml present":"doLocalConf.xml absent"</comment>
	<decl_stmt><decl><type><name pos:line="1553" pos:column="9">generic_string</name></type> <name pos:line="1553" pos:column="24">_currentDirectory</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1554" pos:column="9">generic_string</name></type> <name><name pos:line="1554" pos:column="24">_workSpaceFilePathes</name><index pos:line="1554" pos:column="44">[<expr><lit:literal type="number" pos:line="1554" pos:column="45">3</lit:literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1556" pos:column="9">Accelerator</name> <type:modifier pos:line="1556" pos:column="21">*</type:modifier></type><name pos:line="1556" pos:column="22">_pAccelerator</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1557" pos:column="9">ScintillaAccelerator</name> <type:modifier pos:line="1557" pos:column="30">*</type:modifier></type> <name pos:line="1557" pos:column="32">_pScintAccelerator</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1559" pos:column="9">FindDlgTabTitiles</name></type> <name pos:line="1559" pos:column="27">_findDlgTabTitiles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1560" pos:column="9">bool</name></type> <name pos:line="1560" pos:column="14">_asNotepadStyle</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1562" pos:column="9">winVer</name></type> <name pos:line="1562" pos:column="16">_winVersion</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1564" pos:column="9">NativeLangSpeaker</name> <type:modifier pos:line="1564" pos:column="27">*</type:modifier></type><name pos:line="1564" pos:column="28">_pNativeLangSpeaker</name></decl>;</decl_stmt>

	<function><type><specifier pos:line="1566" pos:column="9">static</specifier> <name pos:line="1566" pos:column="16">int</name> <name pos:line="1566" pos:column="20">CALLBACK</name></type> <name pos:line="1566" pos:column="29">EnumFontFamExProc</name><parameter_list pos:line="1566" pos:column="46">(<param><decl><type><name pos:line="1566" pos:column="47">ENUMLOGFONTEX</name> <type:modifier pos:line="1566" pos:column="61">*</type:modifier></type><name pos:line="1566" pos:column="62">lpelfe</name></decl></param>, <param><decl><type><name pos:line="1566" pos:column="70">NEWTEXTMETRICEX</name> <type:modifier pos:line="1566" pos:column="86">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="1566" pos:column="89">int</name></type></decl></param>, <param><decl><type><name pos:line="1566" pos:column="94">LPARAM</name></type> <name pos:line="1566" pos:column="101">lParam</name></decl></param>)</parameter_list> <block pos:line="1566" pos:column="109">{
		<decl_stmt><decl><type><name><name pos:line="1567" pos:column="17">vector</name><argument_list pos:line="1567" pos:column="23">&lt;<argument><expr><name pos:line="1567" pos:column="24">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1567" pos:column="40">*</type:modifier></type><name pos:line="1567" pos:column="41">pStrVect</name> <init pos:line="1567" pos:column="50">= <expr><op:operator pos:line="1567" pos:column="52">(</op:operator><name><name pos:line="1567" pos:column="53">vector</name><argument_list pos:line="1567" pos:column="59">&lt;<argument><expr><name pos:line="1567" pos:column="60">generic_string</name></expr></argument>&gt;</argument_list></name> <op:operator pos:line="1567" pos:column="76">*</op:operator><op:operator pos:line="1567" pos:column="77">)</op:operator><name pos:line="1567" pos:column="78">lParam</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="1568" pos:column="9">size_t</name></type> <name pos:line="1568" pos:column="16">vectSize</name> <init pos:line="1568" pos:column="25">= <expr><call><name><name pos:line="1568" pos:column="27">pStrVect</name><op:operator pos:line="1568" pos:column="35">-&gt;</op:operator><name pos:line="1568" pos:column="37">size</name></name><argument_list pos:line="1568" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="1570" pos:column="17">//Search through all the fonts, EnumFontFamiliesEx never states anything about order</comment>
		<comment type="line" pos:line="1571" pos:column="17">//Start at the end though, that's the most likely place to find a duplicate</comment>
		<for pos:line="1572" pos:column="17">for(<init><decl><type><name pos:line="1572" pos:column="21">int</name></type> <name pos:line="1572" pos:column="25">i</name> <init pos:line="1572" pos:column="27">= <expr><name pos:line="1572" pos:column="29">vectSize</name> <op:operator pos:line="1572" pos:column="38">-</op:operator> <lit:literal type="number" pos:line="1572" pos:column="40">1</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1572" pos:column="44">i</name> <op:operator pos:line="1572" pos:column="46">&gt;=</op:operator> <lit:literal type="number" pos:line="1572" pos:column="49">0</lit:literal></expr> ;</condition> <incr><expr><name pos:line="1572" pos:column="53">i</name><op:operator pos:line="1572" pos:column="54">--</op:operator></expr></incr>) <block pos:line="1572" pos:column="58">{
			<if pos:line="1573" pos:column="25">if <condition pos:line="1573" pos:column="28">( <expr><op:operator pos:line="1573" pos:column="30">!</op:operator><call><name pos:line="1573" pos:column="31">lstrcmp</name><argument_list pos:line="1573" pos:column="38">(<argument><expr><op:operator pos:line="1573" pos:column="39">(</op:operator><op:operator pos:line="1573" pos:column="40">*</op:operator><name pos:line="1573" pos:column="41">pStrVect</name><op:operator pos:line="1573" pos:column="49">)</op:operator><index pos:line="1573" pos:column="50">[<expr><name pos:line="1573" pos:column="51">i</name></expr>]</index><op:operator pos:line="1573" pos:column="53">.</op:operator><call><name pos:line="1573" pos:column="54">c_str</name><argument_list pos:line="1573" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1573" pos:column="63">(</op:operator>const <name pos:line="1573" pos:column="70">TCHAR</name> <op:operator pos:line="1573" pos:column="76">*</op:operator><op:operator pos:line="1573" pos:column="77">)</op:operator><name><name pos:line="1573" pos:column="78">lpelfe</name><op:operator pos:line="1573" pos:column="84">-&gt;</op:operator><name pos:line="1573" pos:column="86">elfLogFont</name><op:operator pos:line="1573" pos:column="96">.</op:operator><name pos:line="1573" pos:column="97">lfFaceName</name></name></expr></argument>)</argument_list></call></expr> )</condition><then pos:line="1573" pos:column="110">
				<return pos:line="1574" pos:column="33">return <expr><lit:literal type="number" pos:line="1574" pos:column="40">1</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="1574" pos:column="49">//we already have seen this typeface, ignore it</comment>
		}</block></for>
		<comment type="line" pos:line="1576" pos:column="17">//We can add the font</comment>
		<comment type="line" pos:line="1577" pos:column="17">//Add the face name and not the full name, we do not care about any styles</comment>
		<expr_stmt><expr><call><name><name pos:line="1578" pos:column="17">pStrVect</name><op:operator pos:line="1578" pos:column="25">-&gt;</op:operator><name pos:line="1578" pos:column="27">push_back</name></name><argument_list pos:line="1578" pos:column="36">(<argument><expr><op:operator pos:line="1578" pos:column="37">(</op:operator><name pos:line="1578" pos:column="38">TCHAR</name> <op:operator pos:line="1578" pos:column="44">*</op:operator><op:operator pos:line="1578" pos:column="45">)</op:operator><name><name pos:line="1578" pos:column="46">lpelfe</name><op:operator pos:line="1578" pos:column="52">-&gt;</op:operator><name pos:line="1578" pos:column="54">elfLogFont</name><op:operator pos:line="1578" pos:column="64">.</op:operator><name pos:line="1578" pos:column="65">lfFaceName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1579" pos:column="17">return <expr><lit:literal type="number" pos:line="1579" pos:column="24">1</lit:literal></expr>;</return> <comment type="line" pos:line="1579" pos:column="27">// I want to get all fonts</comment>
	}</block></function><empty_stmt pos:line="1580" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="1582" pos:column="9">void</name></type> <name pos:line="1582" pos:column="14">getLangKeywordsFromXmlTree</name><parameter_list pos:line="1582" pos:column="40">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1583" pos:column="9">bool</name></type> <name pos:line="1583" pos:column="14">getUserParametersFromXmlTree</name><parameter_list pos:line="1583" pos:column="42">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1584" pos:column="9">bool</name></type> <name pos:line="1584" pos:column="14">getUserStylersFromXmlTree</name><parameter_list pos:line="1584" pos:column="39">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1585" pos:column="9">bool</name></type> <name pos:line="1585" pos:column="14">getUserDefineLangsFromXmlTree</name><parameter_list pos:line="1585" pos:column="43">(<param><decl><type><name pos:line="1585" pos:column="44">TiXmlDocument</name> <type:modifier pos:line="1585" pos:column="58">*</type:modifier></type><name pos:line="1585" pos:column="59">tixmldoc</name></decl></param>)</parameter_list>;</function_decl>
    <function><type><name pos:line="1586" pos:column="5">bool</name></type> <name pos:line="1586" pos:column="10">getUserDefineLangsFromXmlTree</name><parameter_list pos:line="1586" pos:column="39">()</parameter_list> <block pos:line="1586" pos:column="42">{
        <return pos:line="1587" pos:column="9">return <expr><call><name pos:line="1587" pos:column="16">getUserDefineLangsFromXmlTree</name><argument_list pos:line="1587" pos:column="45">(<argument><expr><name pos:line="1587" pos:column="46">_pXmlUserLangDoc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function><empty_stmt pos:line="1588" pos:column="6">;</empty_stmt>

	<function_decl><type><name pos:line="1590" pos:column="9">bool</name></type> <name pos:line="1590" pos:column="14">getShortcutsFromXmlTree</name><parameter_list pos:line="1590" pos:column="37">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1592" pos:column="9">bool</name></type> <name pos:line="1592" pos:column="14">getMacrosFromXmlTree</name><parameter_list pos:line="1592" pos:column="34">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1593" pos:column="9">bool</name></type> <name pos:line="1593" pos:column="14">getUserCmdsFromXmlTree</name><parameter_list pos:line="1593" pos:column="36">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1594" pos:column="9">bool</name></type> <name pos:line="1594" pos:column="14">getPluginCmdsFromXmlTree</name><parameter_list pos:line="1594" pos:column="38">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1595" pos:column="9">bool</name></type> <name pos:line="1595" pos:column="14">getScintKeysFromXmlTree</name><parameter_list pos:line="1595" pos:column="37">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1596" pos:column="9">bool</name></type> <name pos:line="1596" pos:column="14">getSessionFromXmlTree</name><parameter_list pos:line="1596" pos:column="35">(<param><decl><type><name pos:line="1596" pos:column="36">TiXmlDocument</name> <type:modifier pos:line="1596" pos:column="50">*</type:modifier></type><name pos:line="1596" pos:column="51">pSessionDoc</name> <init pos:line="1596" pos:column="63">= <expr><name pos:line="1596" pos:column="65">NULL</name></expr></init></decl></param>, <name pos:line="1596" pos:column="71">Session</name> <type:modifier pos:line="1596" pos:column="79">*</type:modifier><name pos:line="1596" pos:column="80">session</name> <op:operator pos:line="1596" pos:column="88">=</op:operator> <name pos:line="1596" pos:column="90">NULL</name>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1597" pos:column="5">bool</name></type> <name pos:line="1597" pos:column="10">getBlackListFromXmlTree</name><parameter_list pos:line="1597" pos:column="33">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1599" pos:column="9">void</name></type> <name pos:line="1599" pos:column="14">feedGUIParameters</name><parameter_list pos:line="1599" pos:column="31">(<param><decl><type><name pos:line="1599" pos:column="32">TiXmlNode</name> <type:modifier pos:line="1599" pos:column="42">*</type:modifier></type><name pos:line="1599" pos:column="43">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1600" pos:column="9">void</name></type> <name pos:line="1600" pos:column="14">feedKeyWordsParameters</name><parameter_list pos:line="1600" pos:column="36">(<param><decl><type><name pos:line="1600" pos:column="37">TiXmlNode</name> <type:modifier pos:line="1600" pos:column="47">*</type:modifier></type><name pos:line="1600" pos:column="48">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1601" pos:column="9">void</name></type> <name pos:line="1601" pos:column="14">feedFileListParameters</name><parameter_list pos:line="1601" pos:column="36">(<param><decl><type><name pos:line="1601" pos:column="37">TiXmlNode</name> <type:modifier pos:line="1601" pos:column="47">*</type:modifier></type><name pos:line="1601" pos:column="48">node</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1602" pos:column="5">void</name></type> <name pos:line="1602" pos:column="10">feedScintillaParam</name><parameter_list pos:line="1602" pos:column="28">(<param><decl><type><name pos:line="1602" pos:column="29">TiXmlNode</name> <type:modifier pos:line="1602" pos:column="39">*</type:modifier></type><name pos:line="1602" pos:column="40">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1603" pos:column="9">void</name></type> <name pos:line="1603" pos:column="14">feedDockingManager</name><parameter_list pos:line="1603" pos:column="32">(<param><decl><type><name pos:line="1603" pos:column="33">TiXmlNode</name> <type:modifier pos:line="1603" pos:column="43">*</type:modifier></type><name pos:line="1603" pos:column="44">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1604" pos:column="9">void</name></type> <name pos:line="1604" pos:column="14">feedFindHistoryParameters</name><parameter_list pos:line="1604" pos:column="39">(<param><decl><type><name pos:line="1604" pos:column="40">TiXmlNode</name> <type:modifier pos:line="1604" pos:column="50">*</type:modifier></type><name pos:line="1604" pos:column="51">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1605" pos:column="9">void</name></type> <name pos:line="1605" pos:column="14">feedProjectPanelsParameters</name><parameter_list pos:line="1605" pos:column="41">(<param><decl><type><name pos:line="1605" pos:column="42">TiXmlNode</name> <type:modifier pos:line="1605" pos:column="52">*</type:modifier></type><name pos:line="1605" pos:column="53">node</name></decl></param>)</parameter_list>;</function_decl>
    
	<function_decl><type><name pos:line="1607" pos:column="9">bool</name></type> <name pos:line="1607" pos:column="14">feedStylerArray</name><parameter_list pos:line="1607" pos:column="29">(<param><decl><type><name pos:line="1607" pos:column="30">TiXmlNode</name> <type:modifier pos:line="1607" pos:column="40">*</type:modifier></type><name pos:line="1607" pos:column="41">node</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1608" pos:column="5">void</name></type> <name pos:line="1608" pos:column="10">getAllWordStyles</name><parameter_list pos:line="1608" pos:column="26">(<param><decl><type><name pos:line="1608" pos:column="27">TCHAR</name> <type:modifier pos:line="1608" pos:column="33">*</type:modifier></type><name pos:line="1608" pos:column="34">lexerName</name></decl></param>, <param><decl><type><name pos:line="1608" pos:column="45">TiXmlNode</name> <type:modifier pos:line="1608" pos:column="55">*</type:modifier></type><name pos:line="1608" pos:column="56">lexerNode</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1610" pos:column="9">bool</name></type> <name pos:line="1610" pos:column="14">feedUserLang</name><parameter_list pos:line="1610" pos:column="26">(<param><decl><type><name pos:line="1610" pos:column="27">TiXmlNode</name> <type:modifier pos:line="1610" pos:column="37">*</type:modifier></type><name pos:line="1610" pos:column="38">node</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1612" pos:column="9">int</name></type> <name pos:line="1612" pos:column="13">getIndexFromKeywordListName</name><parameter_list pos:line="1612" pos:column="40">(<param><decl><type><specifier pos:line="1612" pos:column="41">const</specifier> <name pos:line="1612" pos:column="47">TCHAR</name> <type:modifier pos:line="1612" pos:column="53">*</type:modifier></type><name pos:line="1612" pos:column="54">name</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1613" pos:column="9">void</name></type> <name pos:line="1613" pos:column="14">feedUserStyles</name><parameter_list pos:line="1613" pos:column="28">(<param><decl><type><name pos:line="1613" pos:column="29">TiXmlNode</name> <type:modifier pos:line="1613" pos:column="39">*</type:modifier></type><name pos:line="1613" pos:column="40">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1614" pos:column="9">void</name></type> <name pos:line="1614" pos:column="14">feedUserKeywordList</name><parameter_list pos:line="1614" pos:column="33">(<param><decl><type><name pos:line="1614" pos:column="34">TiXmlNode</name> <type:modifier pos:line="1614" pos:column="44">*</type:modifier></type><name pos:line="1614" pos:column="45">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1615" pos:column="9">void</name></type> <name pos:line="1615" pos:column="14">feedUserSettings</name><parameter_list pos:line="1615" pos:column="30">(<param><decl><type><name pos:line="1615" pos:column="31">TiXmlNode</name> <type:modifier pos:line="1615" pos:column="41">*</type:modifier></type><name pos:line="1615" pos:column="42">node</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1617" pos:column="9">void</name></type> <name pos:line="1617" pos:column="14">feedShortcut</name><parameter_list pos:line="1617" pos:column="26">(<param><decl><type><name pos:line="1617" pos:column="27">TiXmlNode</name> <type:modifier pos:line="1617" pos:column="37">*</type:modifier></type><name pos:line="1617" pos:column="38">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1618" pos:column="9">void</name></type> <name pos:line="1618" pos:column="14">feedMacros</name><parameter_list pos:line="1618" pos:column="24">(<param><decl><type><name pos:line="1618" pos:column="25">TiXmlNode</name> <type:modifier pos:line="1618" pos:column="35">*</type:modifier></type><name pos:line="1618" pos:column="36">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1619" pos:column="9">void</name></type> <name pos:line="1619" pos:column="14">feedUserCmds</name><parameter_list pos:line="1619" pos:column="26">(<param><decl><type><name pos:line="1619" pos:column="27">TiXmlNode</name> <type:modifier pos:line="1619" pos:column="37">*</type:modifier></type><name pos:line="1619" pos:column="38">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1620" pos:column="9">void</name></type> <name pos:line="1620" pos:column="14">feedPluginCustomizedCmds</name><parameter_list pos:line="1620" pos:column="38">(<param><decl><type><name pos:line="1620" pos:column="39">TiXmlNode</name> <type:modifier pos:line="1620" pos:column="49">*</type:modifier></type><name pos:line="1620" pos:column="50">node</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1621" pos:column="9">void</name></type> <name pos:line="1621" pos:column="14">feedScintKeys</name><parameter_list pos:line="1621" pos:column="27">(<param><decl><type><name pos:line="1621" pos:column="28">TiXmlNode</name> <type:modifier pos:line="1621" pos:column="38">*</type:modifier></type><name pos:line="1621" pos:column="39">node</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="1622" pos:column="5">bool</name></type> <name pos:line="1622" pos:column="10">feedBlacklist</name><parameter_list pos:line="1622" pos:column="23">(<param><decl><type><name pos:line="1622" pos:column="24">TiXmlNode</name> <type:modifier pos:line="1622" pos:column="34">*</type:modifier></type><name pos:line="1622" pos:column="35">node</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="1624" pos:column="9">void</name></type> <name pos:line="1624" pos:column="14">getActions</name><parameter_list pos:line="1624" pos:column="24">(<param><decl><type><name pos:line="1624" pos:column="25">TiXmlNode</name> <type:modifier pos:line="1624" pos:column="35">*</type:modifier></type><name pos:line="1624" pos:column="36">node</name></decl></param>, <param><decl><type><name pos:line="1624" pos:column="42">Macro</name> <type:modifier pos:line="1624" pos:column="48">&amp;</type:modifier></type> <name pos:line="1624" pos:column="50">macro</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1625" pos:column="9">bool</name></type> <name pos:line="1625" pos:column="14">getShortcuts</name><parameter_list pos:line="1625" pos:column="26">(<param><decl><type><name pos:line="1625" pos:column="27">TiXmlNode</name> <type:modifier pos:line="1625" pos:column="37">*</type:modifier></type><name pos:line="1625" pos:column="38">node</name></decl></param>, <param><decl><type><name pos:line="1625" pos:column="44">Shortcut</name> <type:modifier pos:line="1625" pos:column="53">&amp;</type:modifier></type> <name pos:line="1625" pos:column="55">sc</name></decl></param>)</parameter_list>;</function_decl>
	
    <function_decl><type><name pos:line="1627" pos:column="5">void</name></type> <name pos:line="1627" pos:column="10">writeStyle2Element</name><parameter_list pos:line="1627" pos:column="28">(<param><decl><type><name pos:line="1627" pos:column="29">Style</name> <type:modifier pos:line="1627" pos:column="35">&amp;</type:modifier></type> <name pos:line="1627" pos:column="37">style2Write</name></decl></param>, <param><decl><type><name pos:line="1627" pos:column="50">Style</name> <type:modifier pos:line="1627" pos:column="56">&amp;</type:modifier></type> <name pos:line="1627" pos:column="58">style2Sync</name></decl></param>, <param><decl><type><name pos:line="1627" pos:column="70">TiXmlElement</name> <type:modifier pos:line="1627" pos:column="83">*</type:modifier></type><name pos:line="1627" pos:column="84">element</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1628" pos:column="9">void</name></type> <name pos:line="1628" pos:column="14">insertUserLang2Tree</name><parameter_list pos:line="1628" pos:column="33">(<param><decl><type><name pos:line="1628" pos:column="34">TiXmlNode</name> <type:modifier pos:line="1628" pos:column="44">*</type:modifier></type><name pos:line="1628" pos:column="45">node</name></decl></param>, <param><decl><type><name pos:line="1628" pos:column="51">UserLangContainer</name> <type:modifier pos:line="1628" pos:column="69">*</type:modifier></type><name pos:line="1628" pos:column="70">userLang</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1629" pos:column="9">void</name></type> <name pos:line="1629" pos:column="14">insertCmd</name><parameter_list pos:line="1629" pos:column="23">(<param><decl><type><name pos:line="1629" pos:column="24">TiXmlNode</name> <type:modifier pos:line="1629" pos:column="34">*</type:modifier></type><name pos:line="1629" pos:column="35">cmdRoot</name></decl></param>, <param><decl><type><specifier pos:line="1629" pos:column="44">const</specifier> <name pos:line="1629" pos:column="50">CommandShortcut</name> <type:modifier pos:line="1629" pos:column="66">&amp;</type:modifier></type> <name pos:line="1629" pos:column="68">cmd</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1630" pos:column="9">void</name></type> <name pos:line="1630" pos:column="14">insertMacro</name><parameter_list pos:line="1630" pos:column="25">(<param><decl><type><name pos:line="1630" pos:column="26">TiXmlNode</name> <type:modifier pos:line="1630" pos:column="36">*</type:modifier></type><name pos:line="1630" pos:column="37">macrosRoot</name></decl></param>, <param><decl><type><specifier pos:line="1630" pos:column="49">const</specifier> <name pos:line="1630" pos:column="55">MacroShortcut</name> <type:modifier pos:line="1630" pos:column="69">&amp;</type:modifier></type> <name pos:line="1630" pos:column="71">macro</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1631" pos:column="9">void</name></type> <name pos:line="1631" pos:column="14">insertUserCmd</name><parameter_list pos:line="1631" pos:column="27">(<param><decl><type><name pos:line="1631" pos:column="28">TiXmlNode</name> <type:modifier pos:line="1631" pos:column="38">*</type:modifier></type><name pos:line="1631" pos:column="39">userCmdRoot</name></decl></param>, <param><decl><type><specifier pos:line="1631" pos:column="52">const</specifier> <name pos:line="1631" pos:column="58">UserCommand</name> <type:modifier pos:line="1631" pos:column="70">&amp;</type:modifier></type> <name pos:line="1631" pos:column="72">userCmd</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1632" pos:column="9">void</name></type> <name pos:line="1632" pos:column="14">insertScintKey</name><parameter_list pos:line="1632" pos:column="28">(<param><decl><type><name pos:line="1632" pos:column="29">TiXmlNode</name> <type:modifier pos:line="1632" pos:column="39">*</type:modifier></type><name pos:line="1632" pos:column="40">scintKeyRoot</name></decl></param>, <param><decl><type><specifier pos:line="1632" pos:column="54">const</specifier> <name pos:line="1632" pos:column="60">ScintillaKeyMap</name> <type:modifier pos:line="1632" pos:column="76">&amp;</type:modifier></type> <name pos:line="1632" pos:column="78">scintKeyMap</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1633" pos:column="9">void</name></type> <name pos:line="1633" pos:column="14">insertPluginCmd</name><parameter_list pos:line="1633" pos:column="29">(<param><decl><type><name pos:line="1633" pos:column="30">TiXmlNode</name> <type:modifier pos:line="1633" pos:column="40">*</type:modifier></type><name pos:line="1633" pos:column="41">pluginCmdRoot</name></decl></param>, <param><decl><type><specifier pos:line="1633" pos:column="56">const</specifier> <name pos:line="1633" pos:column="62">PluginCmdShortcut</name> <type:modifier pos:line="1633" pos:column="80">&amp;</type:modifier></type> <name pos:line="1633" pos:column="82">pluginCmd</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1634" pos:column="9">void</name></type> <name pos:line="1634" pos:column="14">stylerStrOp</name><parameter_list pos:line="1634" pos:column="25">(<param><decl><type><name pos:line="1634" pos:column="26">bool</name></type> <name pos:line="1634" pos:column="31">op</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1635" pos:column="9">TiXmlElement</name> <type:modifier pos:line="1635" pos:column="22">*</type:modifier></type> <name pos:line="1635" pos:column="24">insertGUIConfigBoolNode</name><parameter_list pos:line="1635" pos:column="47">(<param><decl><type><name pos:line="1635" pos:column="48">TiXmlNode</name> <type:modifier pos:line="1635" pos:column="58">*</type:modifier></type><name pos:line="1635" pos:column="59">r2w</name></decl></param>, <param><decl><type><specifier pos:line="1635" pos:column="64">const</specifier> <name pos:line="1635" pos:column="70">TCHAR</name> <type:modifier pos:line="1635" pos:column="76">*</type:modifier></type><name pos:line="1635" pos:column="77">name</name></decl></param>, <param><decl><type><name pos:line="1635" pos:column="83">bool</name></type> <name pos:line="1635" pos:column="88">bVal</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1636" pos:column="9">void</name></type> <name pos:line="1636" pos:column="14">insertDockingParamNode</name><parameter_list pos:line="1636" pos:column="36">(<param><decl><type><name pos:line="1636" pos:column="37">TiXmlNode</name> <type:modifier pos:line="1636" pos:column="47">*</type:modifier></type><name pos:line="1636" pos:column="48">GUIRoot</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1637" pos:column="9">void</name></type> <name pos:line="1637" pos:column="14">writeExcludedLangList</name><parameter_list pos:line="1637" pos:column="35">(<param><decl><type><name pos:line="1637" pos:column="36">TiXmlElement</name> <type:modifier pos:line="1637" pos:column="49">*</type:modifier></type><name pos:line="1637" pos:column="50">element</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1638" pos:column="9">void</name></type> <name pos:line="1638" pos:column="14">writePrintSetting</name><parameter_list pos:line="1638" pos:column="31">(<param><decl><type><name pos:line="1638" pos:column="32">TiXmlElement</name> <type:modifier pos:line="1638" pos:column="45">*</type:modifier></type><name pos:line="1638" pos:column="46">element</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="1639" pos:column="9">void</name></type> <name pos:line="1639" pos:column="14">initMenuKeys</name><parameter_list pos:line="1639" pos:column="26">()</parameter_list>;</function_decl>		<comment type="line" pos:line="1639" pos:column="41">//initialise menu keys and scintilla keys. Other keys are initialized on their own</comment>
	<function_decl><type><name pos:line="1640" pos:column="9">void</name></type> <name pos:line="1640" pos:column="14">initScintillaKeys</name><parameter_list pos:line="1640" pos:column="31">()</parameter_list>;</function_decl>	<comment type="line" pos:line="1640" pos:column="41">//these functions have to be called first before any modifications are loaded</comment>
</private>}</block>;</class>

<cpp:endif pos:line="1643" pos:column="1">#<cpp:directive pos:line="1643" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1643" pos:column="8">//PARAMETERS_H</comment>
</unit>
