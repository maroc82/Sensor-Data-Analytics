<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\Indicator.cxx" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file Indicator.cxx
 ** Defines the style of indicators which are text decorations such as underlining.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2001 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="8" pos:column="10">"Platform.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="10" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="11" pos:column="10">"Indicator.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef</cpp:directive> <name pos:line="13" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<using pos:line="14" pos:column="1">using namespace <name pos:line="14" pos:column="17">Scintilla</name>;</using>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="17" pos:column="1">void</name></type> <name><name pos:line="17" pos:column="6">Indicator</name><op:operator pos:line="17" pos:column="15">::</op:operator><name pos:line="17" pos:column="17">Draw</name></name><parameter_list pos:line="17" pos:column="21">(<param><decl><type><name pos:line="17" pos:column="22">Surface</name> <type:modifier pos:line="17" pos:column="30">*</type:modifier></type><name pos:line="17" pos:column="31">surface</name></decl></param>, <param><decl><type><specifier pos:line="17" pos:column="40">const</specifier> <name pos:line="17" pos:column="46">PRectangle</name> <type:modifier pos:line="17" pos:column="57">&amp;</type:modifier></type><name pos:line="17" pos:column="58">rc</name></decl></param>, <param><decl><type><specifier pos:line="17" pos:column="62">const</specifier> <name pos:line="17" pos:column="68">PRectangle</name> <type:modifier pos:line="17" pos:column="79">&amp;</type:modifier></type><name pos:line="17" pos:column="80">rcLine</name></decl></param>)</parameter_list> <block pos:line="17" pos:column="88">{
	<expr_stmt><expr><call><name><name pos:line="18" pos:column="9">surface</name><op:operator pos:line="18" pos:column="16">-&gt;</op:operator><name pos:line="18" pos:column="18">PenColour</name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">fore</name><op:operator pos:line="18" pos:column="32">.</op:operator><name pos:line="18" pos:column="33">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int</name></type> <name pos:line="19" pos:column="13">ymid</name> <init pos:line="19" pos:column="18">= <expr><op:operator pos:line="19" pos:column="20">(</op:operator><name><name pos:line="19" pos:column="21">rc</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">bottom</name></name> <op:operator pos:line="19" pos:column="31">+</op:operator> <name><name pos:line="19" pos:column="33">rc</name><op:operator pos:line="19" pos:column="35">.</op:operator><name pos:line="19" pos:column="36">top</name></name><op:operator pos:line="19" pos:column="39">)</op:operator> <op:operator pos:line="19" pos:column="41">/</op:operator> <lit:literal type="number" pos:line="19" pos:column="43">2</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">style</name> <op:operator pos:line="20" pos:column="19">==</op:operator> <name pos:line="20" pos:column="22">INDIC_SQUIGGLE</name></expr>)</condition><then pos:line="20" pos:column="37"> <block pos:line="20" pos:column="38">{
		<expr_stmt><expr><call><name><name pos:line="21" pos:column="17">surface</name><op:operator pos:line="21" pos:column="24">-&gt;</op:operator><name pos:line="21" pos:column="26">MoveTo</name></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">rc</name><op:operator pos:line="21" pos:column="35">.</op:operator><name pos:line="21" pos:column="36">left</name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="42">rc</name><op:operator pos:line="21" pos:column="44">.</op:operator><name pos:line="21" pos:column="45">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int</name></type> <name pos:line="22" pos:column="21">x</name> <init pos:line="22" pos:column="23">= <expr><name><name pos:line="22" pos:column="25">rc</name><op:operator pos:line="22" pos:column="27">.</op:operator><name pos:line="22" pos:column="28">left</name></name> <op:operator pos:line="22" pos:column="33">+</op:operator> <lit:literal type="number" pos:line="22" pos:column="35">2</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">int</name></type> <name pos:line="23" pos:column="21">y</name> <init pos:line="23" pos:column="23">= <expr><lit:literal type="number" pos:line="23" pos:column="25">2</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="24" pos:column="17">while <condition pos:line="24" pos:column="23">(<expr><name pos:line="24" pos:column="24">x</name> <op:operator pos:line="24" pos:column="26">&lt;</op:operator> <name><name pos:line="24" pos:column="28">rc</name><op:operator pos:line="24" pos:column="30">.</op:operator><name pos:line="24" pos:column="31">right</name></name></expr>)</condition> <block pos:line="24" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="25" pos:column="25">surface</name><op:operator pos:line="25" pos:column="32">-&gt;</op:operator><name pos:line="25" pos:column="34">LineTo</name></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">x</name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="44">rc</name><op:operator pos:line="25" pos:column="46">.</op:operator><name pos:line="25" pos:column="47">top</name></name> <op:operator pos:line="25" pos:column="51">+</op:operator> <name pos:line="25" pos:column="53">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">x</name> <op:operator pos:line="26" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="26" pos:column="30">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">y</name> <op:operator pos:line="27" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="27" pos:column="29">2</lit:literal> <op:operator pos:line="27" pos:column="31">-</op:operator> <name pos:line="27" pos:column="33">y</name></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><call><name><name pos:line="29" pos:column="17">surface</name><op:operator pos:line="29" pos:column="24">-&gt;</op:operator><name pos:line="29" pos:column="26">LineTo</name></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">rc</name><op:operator pos:line="29" pos:column="35">.</op:operator><name pos:line="29" pos:column="36">right</name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">rc</name><op:operator pos:line="29" pos:column="45">.</op:operator><name pos:line="29" pos:column="46">top</name></name> <op:operator pos:line="29" pos:column="50">+</op:operator> <name pos:line="29" pos:column="52">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="29" pos:column="57">// Finish the line</comment>
	}</block></then> <else pos:line="30" pos:column="11">else <if pos:line="30" pos:column="16">if <condition pos:line="30" pos:column="19">(<expr><name pos:line="30" pos:column="20">style</name> <op:operator pos:line="30" pos:column="26">==</op:operator> <name pos:line="30" pos:column="29">INDIC_SQUIGGLELOW</name></expr>)</condition><then pos:line="30" pos:column="47"> <block pos:line="30" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="31" pos:column="17">surface</name><op:operator pos:line="31" pos:column="24">-&gt;</op:operator><name pos:line="31" pos:column="26">MoveTo</name></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">rc</name><op:operator pos:line="31" pos:column="35">.</op:operator><name pos:line="31" pos:column="36">left</name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="42">rc</name><op:operator pos:line="31" pos:column="44">.</op:operator><name pos:line="31" pos:column="45">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int</name></type> <name pos:line="32" pos:column="21">x</name> <init pos:line="32" pos:column="23">= <expr><name><name pos:line="32" pos:column="25">rc</name><op:operator pos:line="32" pos:column="27">.</op:operator><name pos:line="32" pos:column="28">left</name></name> <op:operator pos:line="32" pos:column="33">+</op:operator> <lit:literal type="number" pos:line="32" pos:column="35">3</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">int</name></type> <name pos:line="33" pos:column="21">y</name> <init pos:line="33" pos:column="23">= <expr><lit:literal type="number" pos:line="33" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><name pos:line="34" pos:column="24">x</name> <op:operator pos:line="34" pos:column="26">&lt;</op:operator> <name><name pos:line="34" pos:column="28">rc</name><op:operator pos:line="34" pos:column="30">.</op:operator><name pos:line="34" pos:column="31">right</name></name></expr>)</condition> <block pos:line="34" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="35" pos:column="25">surface</name><op:operator pos:line="35" pos:column="32">-&gt;</op:operator><name pos:line="35" pos:column="34">LineTo</name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">x</name><op:operator pos:line="35" pos:column="42">-</op:operator><lit:literal type="number" pos:line="35" pos:column="43">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">rc</name><op:operator pos:line="35" pos:column="48">.</op:operator><name pos:line="35" pos:column="49">top</name></name> <op:operator pos:line="35" pos:column="53">+</op:operator> <name pos:line="35" pos:column="55">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">y</name> <op:operator pos:line="36" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="36" pos:column="29">1</lit:literal> <op:operator pos:line="36" pos:column="31">-</op:operator> <name pos:line="36" pos:column="33">y</name></expr>;</expr_stmt>
        	<expr_stmt><expr><call><name><name pos:line="37" pos:column="17">surface</name><op:operator pos:line="37" pos:column="24">-&gt;</op:operator><name pos:line="37" pos:column="26">LineTo</name></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">x</name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">rc</name><op:operator pos:line="37" pos:column="38">.</op:operator><name pos:line="37" pos:column="39">top</name></name> <op:operator pos:line="37" pos:column="43">+</op:operator> <name pos:line="37" pos:column="45">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">x</name> <op:operator pos:line="38" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="38" pos:column="30">3</lit:literal></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><call><name><name pos:line="40" pos:column="17">surface</name><op:operator pos:line="40" pos:column="24">-&gt;</op:operator><name pos:line="40" pos:column="26">LineTo</name></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name><name pos:line="40" pos:column="33">rc</name><op:operator pos:line="40" pos:column="35">.</op:operator><name pos:line="40" pos:column="36">right</name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">rc</name><op:operator pos:line="40" pos:column="45">.</op:operator><name pos:line="40" pos:column="46">top</name></name> <op:operator pos:line="40" pos:column="50">+</op:operator> <name pos:line="40" pos:column="52">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="40" pos:column="57">// Finish the line</comment>
	}</block></then> <else pos:line="41" pos:column="11">else <if pos:line="41" pos:column="16">if <condition pos:line="41" pos:column="19">(<expr><name pos:line="41" pos:column="20">style</name> <op:operator pos:line="41" pos:column="26">==</op:operator> <name pos:line="41" pos:column="29">INDIC_TT</name></expr>)</condition><then pos:line="41" pos:column="38"> <block pos:line="41" pos:column="39">{
		<expr_stmt><expr><call><name><name pos:line="42" pos:column="17">surface</name><op:operator pos:line="42" pos:column="24">-&gt;</op:operator><name pos:line="42" pos:column="26">MoveTo</name></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name><name pos:line="42" pos:column="33">rc</name><op:operator pos:line="42" pos:column="35">.</op:operator><name pos:line="42" pos:column="36">left</name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int</name></type> <name pos:line="43" pos:column="21">x</name> <init pos:line="43" pos:column="23">= <expr><name><name pos:line="43" pos:column="25">rc</name><op:operator pos:line="43" pos:column="27">.</op:operator><name pos:line="43" pos:column="28">left</name></name> <op:operator pos:line="43" pos:column="33">+</op:operator> <lit:literal type="number" pos:line="43" pos:column="35">5</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="44" pos:column="17">while <condition pos:line="44" pos:column="23">(<expr><name pos:line="44" pos:column="24">x</name> <op:operator pos:line="44" pos:column="26">&lt;</op:operator> <name><name pos:line="44" pos:column="28">rc</name><op:operator pos:line="44" pos:column="30">.</op:operator><name pos:line="44" pos:column="31">right</name></name></expr>)</condition> <block pos:line="44" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="45" pos:column="25">surface</name><op:operator pos:line="45" pos:column="32">-&gt;</op:operator><name pos:line="45" pos:column="34">LineTo</name></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">x</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="44">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="46" pos:column="25">surface</name><op:operator pos:line="46" pos:column="32">-&gt;</op:operator><name pos:line="46" pos:column="34">MoveTo</name></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">x</name><op:operator pos:line="46" pos:column="42">-</op:operator><lit:literal type="number" pos:line="46" pos:column="43">3</lit:literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="47" pos:column="25">surface</name><op:operator pos:line="47" pos:column="32">-&gt;</op:operator><name pos:line="47" pos:column="34">LineTo</name></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">x</name><op:operator pos:line="47" pos:column="42">-</op:operator><lit:literal type="number" pos:line="47" pos:column="43">3</lit:literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">ymid</name><op:operator pos:line="47" pos:column="50">+</op:operator><lit:literal type="number" pos:line="47" pos:column="51">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">x</name><op:operator pos:line="48" pos:column="26">++</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="49" pos:column="25">surface</name><op:operator pos:line="49" pos:column="32">-&gt;</op:operator><name pos:line="49" pos:column="34">MoveTo</name></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">x</name></expr></argument>, <argument><expr><name pos:line="49" pos:column="44">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">x</name> <op:operator pos:line="50" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="50" pos:column="30">5</lit:literal></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><call><name><name pos:line="52" pos:column="17">surface</name><op:operator pos:line="52" pos:column="24">-&gt;</op:operator><name pos:line="52" pos:column="26">LineTo</name></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name><name pos:line="52" pos:column="33">rc</name><op:operator pos:line="52" pos:column="35">.</op:operator><name pos:line="52" pos:column="36">right</name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="52" pos:column="57">// Finish the line</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">x</name> <op:operator pos:line="53" pos:column="23">-</op:operator> <lit:literal type="number" pos:line="53" pos:column="25">3</lit:literal> <op:operator pos:line="53" pos:column="27">&lt;=</op:operator> <name><name pos:line="53" pos:column="30">rc</name><op:operator pos:line="53" pos:column="32">.</op:operator><name pos:line="53" pos:column="33">right</name></name></expr>)</condition><then pos:line="53" pos:column="39"> <block pos:line="53" pos:column="40">{
			<expr_stmt><expr><call><name><name pos:line="54" pos:column="25">surface</name><op:operator pos:line="54" pos:column="32">-&gt;</op:operator><name pos:line="54" pos:column="34">MoveTo</name></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">x</name><op:operator pos:line="54" pos:column="42">-</op:operator><lit:literal type="number" pos:line="54" pos:column="43">3</lit:literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="55" pos:column="25">surface</name><op:operator pos:line="55" pos:column="32">-&gt;</op:operator><name pos:line="55" pos:column="34">LineTo</name></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">x</name><op:operator pos:line="55" pos:column="42">-</op:operator><lit:literal type="number" pos:line="55" pos:column="43">3</lit:literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">ymid</name><op:operator pos:line="55" pos:column="50">+</op:operator><lit:literal type="number" pos:line="55" pos:column="51">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="57" pos:column="11">else <if pos:line="57" pos:column="16">if <condition pos:line="57" pos:column="19">(<expr><name pos:line="57" pos:column="20">style</name> <op:operator pos:line="57" pos:column="26">==</op:operator> <name pos:line="57" pos:column="29">INDIC_DIAGONAL</name></expr>)</condition><then pos:line="57" pos:column="44"> <block pos:line="57" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">int</name></type> <name pos:line="58" pos:column="21">x</name> <init pos:line="58" pos:column="23">= <expr><name><name pos:line="58" pos:column="25">rc</name><op:operator pos:line="58" pos:column="27">.</op:operator><name pos:line="58" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<while pos:line="59" pos:column="17">while <condition pos:line="59" pos:column="23">(<expr><name pos:line="59" pos:column="24">x</name> <op:operator pos:line="59" pos:column="26">&lt;</op:operator> <name><name pos:line="59" pos:column="28">rc</name><op:operator pos:line="59" pos:column="30">.</op:operator><name pos:line="59" pos:column="31">right</name></name></expr>)</condition> <block pos:line="59" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="60" pos:column="25">surface</name><op:operator pos:line="60" pos:column="32">-&gt;</op:operator><name pos:line="60" pos:column="34">MoveTo</name></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">x</name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">rc</name><op:operator pos:line="60" pos:column="46">.</op:operator><name pos:line="60" pos:column="47">top</name></name><op:operator pos:line="60" pos:column="50">+</op:operator><lit:literal type="number" pos:line="60" pos:column="51">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="61" pos:column="25">int</name></type> <name pos:line="61" pos:column="29">endX</name> <init pos:line="61" pos:column="34">= <expr><name pos:line="61" pos:column="36">x</name><op:operator pos:line="61" pos:column="37">+</op:operator><lit:literal type="number" pos:line="61" pos:column="38">3</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="62" pos:column="25">int</name></type> <name pos:line="62" pos:column="29">endY</name> <init pos:line="62" pos:column="34">= <expr><name><name pos:line="62" pos:column="36">rc</name><op:operator pos:line="62" pos:column="38">.</op:operator><name pos:line="62" pos:column="39">top</name></name> <op:operator pos:line="62" pos:column="43">-</op:operator> <lit:literal type="number" pos:line="62" pos:column="45">1</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><name pos:line="63" pos:column="29">endX</name> <op:operator pos:line="63" pos:column="34">&gt;</op:operator> <name><name pos:line="63" pos:column="36">rc</name><op:operator pos:line="63" pos:column="38">.</op:operator><name pos:line="63" pos:column="39">right</name></name></expr>)</condition><then pos:line="63" pos:column="45"> <block pos:line="63" pos:column="46">{
				<expr_stmt><expr><name pos:line="64" pos:column="33">endY</name> <op:operator pos:line="64" pos:column="38">+=</op:operator> <name pos:line="64" pos:column="41">endX</name> <op:operator pos:line="64" pos:column="46">-</op:operator> <name><name pos:line="64" pos:column="48">rc</name><op:operator pos:line="64" pos:column="50">.</op:operator><name pos:line="64" pos:column="51">right</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="65" pos:column="33">endX</name> <op:operator pos:line="65" pos:column="38">=</op:operator> <name><name pos:line="65" pos:column="40">rc</name><op:operator pos:line="65" pos:column="42">.</op:operator><name pos:line="65" pos:column="43">right</name></name></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="67" pos:column="25">surface</name><op:operator pos:line="67" pos:column="32">-&gt;</op:operator><name pos:line="67" pos:column="34">LineTo</name></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">endX</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">endY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="68" pos:column="25">x</name> <op:operator pos:line="68" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="68" pos:column="30">4</lit:literal></expr>;</expr_stmt>
		}</block></while>
	}</block></then> <else pos:line="70" pos:column="11">else <if pos:line="70" pos:column="16">if <condition pos:line="70" pos:column="19">(<expr><name pos:line="70" pos:column="20">style</name> <op:operator pos:line="70" pos:column="26">==</op:operator> <name pos:line="70" pos:column="29">INDIC_STRIKE</name></expr>)</condition><then pos:line="70" pos:column="42"> <block pos:line="70" pos:column="43">{
		<expr_stmt><expr><call><name><name pos:line="71" pos:column="17">surface</name><op:operator pos:line="71" pos:column="24">-&gt;</op:operator><name pos:line="71" pos:column="26">MoveTo</name></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name><name pos:line="71" pos:column="33">rc</name><op:operator pos:line="71" pos:column="35">.</op:operator><name pos:line="71" pos:column="36">left</name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="42">rc</name><op:operator pos:line="71" pos:column="44">.</op:operator><name pos:line="71" pos:column="45">top</name></name> <op:operator pos:line="71" pos:column="49">-</op:operator> <lit:literal type="number" pos:line="71" pos:column="51">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="72" pos:column="17">surface</name><op:operator pos:line="72" pos:column="24">-&gt;</op:operator><name pos:line="72" pos:column="26">LineTo</name></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name><name pos:line="72" pos:column="33">rc</name><op:operator pos:line="72" pos:column="35">.</op:operator><name pos:line="72" pos:column="36">right</name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="43">rc</name><op:operator pos:line="72" pos:column="45">.</op:operator><name pos:line="72" pos:column="46">top</name></name> <op:operator pos:line="72" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="72" pos:column="52">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="73" pos:column="11">else <if pos:line="73" pos:column="16">if <condition pos:line="73" pos:column="19">(<expr><name pos:line="73" pos:column="20">style</name> <op:operator pos:line="73" pos:column="26">==</op:operator> <name pos:line="73" pos:column="29">INDIC_HIDDEN</name></expr>)</condition><then pos:line="73" pos:column="42"> <block pos:line="73" pos:column="43">{
		<comment type="line" pos:line="74" pos:column="17">// Draw nothing</comment>
	}</block></then> <else pos:line="75" pos:column="11">else <if pos:line="75" pos:column="16">if <condition pos:line="75" pos:column="19">(<expr><name pos:line="75" pos:column="20">style</name> <op:operator pos:line="75" pos:column="26">==</op:operator> <name pos:line="75" pos:column="29">INDIC_BOX</name></expr>)</condition><then pos:line="75" pos:column="39"> <block pos:line="75" pos:column="40">{
		<expr_stmt><expr><call><name><name pos:line="76" pos:column="17">surface</name><op:operator pos:line="76" pos:column="24">-&gt;</op:operator><name pos:line="76" pos:column="26">MoveTo</name></name><argument_list pos:line="76" pos:column="32">(<argument><expr><name><name pos:line="76" pos:column="33">rc</name><op:operator pos:line="76" pos:column="35">.</op:operator><name pos:line="76" pos:column="36">left</name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="42">ymid</name><op:operator pos:line="76" pos:column="46">+</op:operator><lit:literal type="number" pos:line="76" pos:column="47">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="77" pos:column="17">surface</name><op:operator pos:line="77" pos:column="24">-&gt;</op:operator><name pos:line="77" pos:column="26">LineTo</name></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name><name pos:line="77" pos:column="33">rc</name><op:operator pos:line="77" pos:column="35">.</op:operator><name pos:line="77" pos:column="36">right</name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">ymid</name><op:operator pos:line="77" pos:column="47">+</op:operator><lit:literal type="number" pos:line="77" pos:column="48">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="78" pos:column="17">surface</name><op:operator pos:line="78" pos:column="24">-&gt;</op:operator><name pos:line="78" pos:column="26">LineTo</name></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name><name pos:line="78" pos:column="33">rc</name><op:operator pos:line="78" pos:column="35">.</op:operator><name pos:line="78" pos:column="36">right</name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="43">rcLine</name><op:operator pos:line="78" pos:column="49">.</op:operator><name pos:line="78" pos:column="50">top</name></name><op:operator pos:line="78" pos:column="53">+</op:operator><lit:literal type="number" pos:line="78" pos:column="54">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="79" pos:column="17">surface</name><op:operator pos:line="79" pos:column="24">-&gt;</op:operator><name pos:line="79" pos:column="26">LineTo</name></name><argument_list pos:line="79" pos:column="32">(<argument><expr><name><name pos:line="79" pos:column="33">rc</name><op:operator pos:line="79" pos:column="35">.</op:operator><name pos:line="79" pos:column="36">left</name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="42">rcLine</name><op:operator pos:line="79" pos:column="48">.</op:operator><name pos:line="79" pos:column="49">top</name></name><op:operator pos:line="79" pos:column="52">+</op:operator><lit:literal type="number" pos:line="79" pos:column="53">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="80" pos:column="17">surface</name><op:operator pos:line="80" pos:column="24">-&gt;</op:operator><name pos:line="80" pos:column="26">LineTo</name></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name><name pos:line="80" pos:column="33">rc</name><op:operator pos:line="80" pos:column="35">.</op:operator><name pos:line="80" pos:column="36">left</name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="42">ymid</name><op:operator pos:line="80" pos:column="46">+</op:operator><lit:literal type="number" pos:line="80" pos:column="47">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="81" pos:column="11">else <if pos:line="81" pos:column="16">if <condition pos:line="81" pos:column="19">(<expr><name pos:line="81" pos:column="20">style</name> <op:operator pos:line="81" pos:column="26">==</op:operator> <name pos:line="81" pos:column="29">INDIC_ROUNDBOX</name> <op:operator pos:line="81" pos:column="44">||</op:operator> <name pos:line="81" pos:column="47">style</name> <op:operator pos:line="81" pos:column="53">==</op:operator> <name pos:line="81" pos:column="56">INDIC_STRAIGHTBOX</name></expr>)</condition><then pos:line="81" pos:column="74"> <block pos:line="81" pos:column="75">{
		<decl_stmt><decl><type><name pos:line="82" pos:column="17">PRectangle</name></type> <name pos:line="82" pos:column="28">rcBox</name> <init pos:line="82" pos:column="34">= <expr><name pos:line="82" pos:column="36">rcLine</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">rcBox</name><op:operator pos:line="83" pos:column="22">.</op:operator><name pos:line="83" pos:column="23">top</name></name> <op:operator pos:line="83" pos:column="27">=</op:operator> <name><name pos:line="83" pos:column="29">rcLine</name><op:operator pos:line="83" pos:column="35">.</op:operator><name pos:line="83" pos:column="36">top</name></name> <op:operator pos:line="83" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="83" pos:column="42">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">rcBox</name><op:operator pos:line="84" pos:column="22">.</op:operator><name pos:line="84" pos:column="23">left</name></name> <op:operator pos:line="84" pos:column="28">=</op:operator> <name><name pos:line="84" pos:column="30">rc</name><op:operator pos:line="84" pos:column="32">.</op:operator><name pos:line="84" pos:column="33">left</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="85" pos:column="17">rcBox</name><op:operator pos:line="85" pos:column="22">.</op:operator><name pos:line="85" pos:column="23">right</name></name> <op:operator pos:line="85" pos:column="29">=</op:operator> <name><name pos:line="85" pos:column="31">rc</name><op:operator pos:line="85" pos:column="33">.</op:operator><name pos:line="85" pos:column="34">right</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="86" pos:column="17">surface</name><op:operator pos:line="86" pos:column="24">-&gt;</op:operator><name pos:line="86" pos:column="26">AlphaRectangle</name></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">rcBox</name></expr></argument>, <argument><expr><op:operator pos:line="86" pos:column="48">(</op:operator><name pos:line="86" pos:column="49">style</name> <op:operator pos:line="86" pos:column="55">==</op:operator> <name pos:line="86" pos:column="58">INDIC_ROUNDBOX</name><op:operator pos:line="86" pos:column="72">)</op:operator> <op:operator pos:line="86" pos:column="74">?</op:operator> <lit:literal type="number" pos:line="86" pos:column="76">1</lit:literal> <op:operator pos:line="86" pos:column="78">:</op:operator> <lit:literal type="number" pos:line="86" pos:column="80">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="83">fore</name><op:operator pos:line="86" pos:column="87">.</op:operator><name pos:line="86" pos:column="88">allocated</name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="99">fillAlpha</name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="110">fore</name><op:operator pos:line="86" pos:column="114">.</op:operator><name pos:line="86" pos:column="115">allocated</name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="126">outlineAlpha</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="86" pos:column="140">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="87" pos:column="11">else <if pos:line="87" pos:column="16">if <condition pos:line="87" pos:column="19">(<expr><name pos:line="87" pos:column="20">style</name> <op:operator pos:line="87" pos:column="26">==</op:operator> <name pos:line="87" pos:column="29">INDIC_DASH</name></expr>)</condition><then pos:line="87" pos:column="40"> <block pos:line="87" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">int</name></type> <name pos:line="88" pos:column="21">x</name> <init pos:line="88" pos:column="23">= <expr><name><name pos:line="88" pos:column="25">rc</name><op:operator pos:line="88" pos:column="27">.</op:operator><name pos:line="88" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<while pos:line="89" pos:column="17">while <condition pos:line="89" pos:column="23">(<expr><name pos:line="89" pos:column="24">x</name> <op:operator pos:line="89" pos:column="26">&lt;</op:operator> <name><name pos:line="89" pos:column="28">rc</name><op:operator pos:line="89" pos:column="30">.</op:operator><name pos:line="89" pos:column="31">right</name></name></expr>)</condition> <block pos:line="89" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="90" pos:column="25">surface</name><op:operator pos:line="90" pos:column="32">-&gt;</op:operator><name pos:line="90" pos:column="34">MoveTo</name></name><argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">x</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="44">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="91" pos:column="25">surface</name><op:operator pos:line="91" pos:column="32">-&gt;</op:operator><name pos:line="91" pos:column="34">LineTo</name></name><argument_list pos:line="91" pos:column="40">(<argument><expr><call><name><name pos:line="91" pos:column="41">Platform</name><op:operator pos:line="91" pos:column="49">::</op:operator><name pos:line="91" pos:column="51">Minimum</name></name><argument_list pos:line="91" pos:column="58">(<argument><expr><name pos:line="91" pos:column="59">x</name> <op:operator pos:line="91" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="91" pos:column="63">4</lit:literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="66">rc</name><op:operator pos:line="91" pos:column="68">.</op:operator><name pos:line="91" pos:column="69">right</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="77">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="92" pos:column="25">x</name> <op:operator pos:line="92" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="92" pos:column="30">7</lit:literal></expr>;</expr_stmt>
		}</block></while>
	}</block></then> <else pos:line="94" pos:column="11">else <if pos:line="94" pos:column="16">if <condition pos:line="94" pos:column="19">(<expr><name pos:line="94" pos:column="20">style</name> <op:operator pos:line="94" pos:column="26">==</op:operator> <name pos:line="94" pos:column="29">INDIC_DOTS</name></expr>)</condition><then pos:line="94" pos:column="40"> <block pos:line="94" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="95" pos:column="17">int</name></type> <name pos:line="95" pos:column="21">x</name> <init pos:line="95" pos:column="23">= <expr><name><name pos:line="95" pos:column="25">rc</name><op:operator pos:line="95" pos:column="27">.</op:operator><name pos:line="95" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<while pos:line="96" pos:column="17">while <condition pos:line="96" pos:column="23">(<expr><name pos:line="96" pos:column="24">x</name> <op:operator pos:line="96" pos:column="26">&lt;</op:operator> <name><name pos:line="96" pos:column="28">rc</name><op:operator pos:line="96" pos:column="30">.</op:operator><name pos:line="96" pos:column="31">right</name></name></expr>)</condition> <block pos:line="96" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="97" pos:column="25">PRectangle</name></type> <name pos:line="97" pos:column="36">rcDot</name><argument_list pos:line="97" pos:column="41">(<argument><expr><name pos:line="97" pos:column="42">x</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="45">ymid</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="51">x</name><op:operator pos:line="97" pos:column="52">+</op:operator><lit:literal type="number" pos:line="97" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="56">ymid</name><op:operator pos:line="97" pos:column="60">+</op:operator><lit:literal type="number" pos:line="97" pos:column="61">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="98" pos:column="25">surface</name><op:operator pos:line="98" pos:column="32">-&gt;</op:operator><name pos:line="98" pos:column="34">FillRectangle</name></name><argument_list pos:line="98" pos:column="47">(<argument><expr><name pos:line="98" pos:column="48">rcDot</name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="55">fore</name><op:operator pos:line="98" pos:column="59">.</op:operator><name pos:line="98" pos:column="60">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="99" pos:column="25">x</name> <op:operator pos:line="99" pos:column="27">+=</op:operator> <lit:literal type="number" pos:line="99" pos:column="30">2</lit:literal></expr>;</expr_stmt>
		}</block></while>
	}</block></then> <else pos:line="101" pos:column="11">else <block pos:line="101" pos:column="16">{	<comment type="line" pos:line="101" pos:column="25">// Either INDIC_PLAIN or unknown</comment>
		<expr_stmt><expr><call><name><name pos:line="102" pos:column="17">surface</name><op:operator pos:line="102" pos:column="24">-&gt;</op:operator><name pos:line="102" pos:column="26">MoveTo</name></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name><name pos:line="102" pos:column="33">rc</name><op:operator pos:line="102" pos:column="35">.</op:operator><name pos:line="102" pos:column="36">left</name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="42">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="103" pos:column="17">surface</name><op:operator pos:line="103" pos:column="24">-&gt;</op:operator><name pos:line="103" pos:column="26">LineTo</name></name><argument_list pos:line="103" pos:column="32">(<argument><expr><name><name pos:line="103" pos:column="33">rc</name><op:operator pos:line="103" pos:column="35">.</op:operator><name pos:line="103" pos:column="36">right</name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="43">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
}</block></function>

</unit>
