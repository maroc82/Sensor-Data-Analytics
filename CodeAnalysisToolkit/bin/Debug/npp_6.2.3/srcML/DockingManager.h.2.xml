<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\dockingwnd\DockingManager.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// this file is part of docking functionality for Notepad++</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2006 Jens Lorenz &lt;jens.plugin.npp@gmx.de&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">// </comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">// </comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">// </comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">DOCKINGMANAGER_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">DOCKINGMANAGER_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">DOCKINGCONT</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"DockingCont.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//DOCKINGCONT</comment>

<class_decl pos:line="36" pos:column="1">class <name pos:line="36" pos:column="7">DockingSplitter</name>;</class_decl>

<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef</cpp:directive> <name pos:line="38" pos:column="9">SPLITTER_CONTAINER_H</name></cpp:ifndef>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"SplitterContainer.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="40" pos:column="8">//SPLITTER_CONTAINER_H</comment>

<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">DSPC_CLASS_NAME</name></cpp:macro> <cpp:value pos:line="42" pos:column="25">TEXT("dockingManager")</cpp:value></cpp:define>

<using pos:line="44" pos:column="1">using namespace <name pos:line="44" pos:column="17">std</name>;</using>


<cpp:define pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="47" pos:column="9">CONT_MAP_MAX</name></cpp:macro>	<cpp:value pos:line="47" pos:column="25">50</cpp:value></cpp:define>


<class pos:line="50" pos:column="1">class <name pos:line="50" pos:column="7">DockingManager</name> <super pos:line="50" pos:column="22">: <specifier pos:line="50" pos:column="24">public</specifier> <name pos:line="50" pos:column="31">Window</name></super>
<block pos:line="51" pos:column="1">{<private type="default" pos:line="51" pos:column="2">
</private><public pos:line="52" pos:column="1">public :
	<constructor_decl><name pos:line="53" pos:column="9">DockingManager</name><parameter_list pos:line="53" pos:column="23">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="54" pos:column="9">~<name pos:line="54" pos:column="10">DockingManager</name></name><parameter_list pos:line="54" pos:column="24">()</parameter_list>;</destructor_decl>

	<function_decl><type><name pos:line="56" pos:column="9">void</name></type> <name pos:line="56" pos:column="14">init</name><parameter_list pos:line="56" pos:column="18">(<param><decl><type><name pos:line="56" pos:column="19">HINSTANCE</name></type> <name pos:line="56" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="36">HWND</name></type> <name pos:line="56" pos:column="41">hWnd</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="47">Window</name> <type:modifier pos:line="56" pos:column="54">*</type:modifier><type:modifier pos:line="56" pos:column="55">*</type:modifier></type> <name pos:line="56" pos:column="57">ppWin</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="57" pos:column="9">virtual</specifier> <name pos:line="57" pos:column="17">void</name></type> <name pos:line="57" pos:column="22">reSizeTo</name><parameter_list pos:line="57" pos:column="30">(<param><decl><type><name pos:line="57" pos:column="31">RECT</name> <type:modifier pos:line="57" pos:column="36">&amp;</type:modifier></type> <name pos:line="57" pos:column="38">rc</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="59" pos:column="9">void</name></type> <name pos:line="59" pos:column="14">setClientWnd</name><parameter_list pos:line="59" pos:column="26">(<param><decl><type><name pos:line="59" pos:column="27">Window</name> <type:modifier pos:line="59" pos:column="34">*</type:modifier><type:modifier pos:line="59" pos:column="35">*</type:modifier></type> <name pos:line="59" pos:column="37">ppWin</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="44">{
		<expr_stmt><expr><name pos:line="60" pos:column="17">_ppWindow</name> <op:operator pos:line="60" pos:column="27">=</op:operator> <name pos:line="60" pos:column="29">ppWin</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">_ppMainWindow</name> <op:operator pos:line="61" pos:column="31">=</op:operator> <name pos:line="61" pos:column="33">ppWin</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="62" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="64" pos:column="9">void</name></type> <name pos:line="64" pos:column="14">showContainer</name><parameter_list pos:line="64" pos:column="27">(<param><decl><type><name pos:line="64" pos:column="28">HWND</name></type> <name pos:line="64" pos:column="33">hCont</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="40">BOOL</name></type> <name pos:line="64" pos:column="45">view</name> <init pos:line="64" pos:column="50">= <expr><name pos:line="64" pos:column="52">TRUE</name></expr></init></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="66" pos:column="9">void</name></type> <name pos:line="66" pos:column="14">showContainer</name><parameter_list pos:line="66" pos:column="27">(<param><decl><type><name pos:line="66" pos:column="28">UINT</name></type>	<name pos:line="66" pos:column="33">uCont</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="40">BOOL</name></type> <name pos:line="66" pos:column="45">view</name> <init pos:line="66" pos:column="50">= <expr><name pos:line="66" pos:column="52">TRUE</name></expr></init></decl></param>)</parameter_list> <block pos:line="66" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">_vContainer</name><index pos:line="67" pos:column="28">[<expr><name pos:line="67" pos:column="29">uCont</name></expr>]</index></name><op:operator pos:line="67" pos:column="35">-&gt;</op:operator><call><name pos:line="67" pos:column="37">doDialog</name><argument_list pos:line="67" pos:column="45">(<argument><expr><op:operator pos:line="67" pos:column="46">(</op:operator><name pos:line="67" pos:column="47">view</name> <op:operator pos:line="67" pos:column="52">==</op:operator> <name pos:line="67" pos:column="55">TRUE</name><op:operator pos:line="67" pos:column="59">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">onSize</name><argument_list pos:line="68" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function_decl><type><name pos:line="71" pos:column="9">void</name></type> <name pos:line="71" pos:column="14">updateContainerInfo</name><parameter_list pos:line="71" pos:column="33">(<param><decl><type><name pos:line="71" pos:column="34">HWND</name></type> <name pos:line="71" pos:column="39">hClient</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="72" pos:column="9">void</name></type> <name pos:line="72" pos:column="14">createDockableDlg</name><parameter_list pos:line="72" pos:column="31">(<param><decl><type><name pos:line="72" pos:column="32">tTbData</name></type> <name pos:line="72" pos:column="40">data</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="46">int</name></type> <name pos:line="72" pos:column="50">iCont</name> <init pos:line="72" pos:column="56">= <expr><name pos:line="72" pos:column="58">CONT_LEFT</name></expr></init></decl></param>, <name pos:line="72" pos:column="69">bool</name> <name pos:line="72" pos:column="74">isVisible</name> <op:operator pos:line="72" pos:column="84">=</op:operator> <lit:literal type="boolean" pos:line="72" pos:column="86">false</lit:literal>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="73" pos:column="9">void</name></type> <name pos:line="73" pos:column="14">setActiveTab</name><parameter_list pos:line="73" pos:column="26">(<param><decl><type><name pos:line="73" pos:column="27">int</name></type> <name pos:line="73" pos:column="31">iCont</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="38">int</name></type> <name pos:line="73" pos:column="42">iItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="74" pos:column="9">void</name></type> <name pos:line="74" pos:column="14">showDockableDlg</name><parameter_list pos:line="74" pos:column="29">(<param><decl><type><name pos:line="74" pos:column="30">HWND</name></type> <name pos:line="74" pos:column="35">hDlg</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="41">BOOL</name></type> <name pos:line="74" pos:column="46">view</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="75" pos:column="9">void</name></type> <name pos:line="75" pos:column="14">showDockableDlg</name><parameter_list pos:line="75" pos:column="29">(<param><decl><type><name pos:line="75" pos:column="30">TCHAR</name><type:modifier pos:line="75" pos:column="35">*</type:modifier></type> <name pos:line="75" pos:column="37">pszName</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="46">BOOL</name></type> <name pos:line="75" pos:column="51">view</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="77" pos:column="9">DockingCont</name><type:modifier pos:line="77" pos:column="20">*</type:modifier></type> <name pos:line="77" pos:column="22">toggleActiveTb</name><parameter_list pos:line="77" pos:column="36">(<param><decl><type><name pos:line="77" pos:column="37">DockingCont</name><type:modifier pos:line="77" pos:column="48">*</type:modifier></type> <name pos:line="77" pos:column="50">pContSrc</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="60">UINT</name></type> <name pos:line="77" pos:column="65">message</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="74">BOOL</name></type> <name pos:line="77" pos:column="79">bNew</name> <init pos:line="77" pos:column="84">= <expr><name pos:line="77" pos:column="86">FALSE</name></expr></init></decl></param>, <name pos:line="77" pos:column="93">LPRECT</name> <name pos:line="77" pos:column="100">rcFloat</name> <op:operator pos:line="77" pos:column="108">=</op:operator> <name pos:line="77" pos:column="110">NULL</name>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="78" pos:column="9">DockingCont</name><type:modifier pos:line="78" pos:column="20">*</type:modifier></type> <name pos:line="78" pos:column="22">toggleVisTb</name><parameter_list pos:line="78" pos:column="33">(<param><decl><type><name pos:line="78" pos:column="34">DockingCont</name><type:modifier pos:line="78" pos:column="45">*</type:modifier></type> <name pos:line="78" pos:column="47">pContSrc</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="57">UINT</name></type> <name pos:line="78" pos:column="62">message</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="71">LPRECT</name></type> <name pos:line="78" pos:column="78">rcFloat</name> <init pos:line="78" pos:column="86">= <expr><name pos:line="78" pos:column="88">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="79" pos:column="9">void</name></type>		 <name pos:line="79" pos:column="26">toggleActiveTb</name><parameter_list pos:line="79" pos:column="40">(<param><decl><type><name pos:line="79" pos:column="41">DockingCont</name><type:modifier pos:line="79" pos:column="52">*</type:modifier></type> <name pos:line="79" pos:column="54">pContSrc</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="64">DockingCont</name><type:modifier pos:line="79" pos:column="75">*</type:modifier></type> <name pos:line="79" pos:column="77">pContTgt</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="80" pos:column="9">void</name></type>		 <name pos:line="80" pos:column="26">toggleVisTb</name><parameter_list pos:line="80" pos:column="37">(<param><decl><type><name pos:line="80" pos:column="38">DockingCont</name><type:modifier pos:line="80" pos:column="49">*</type:modifier></type> <name pos:line="80" pos:column="51">pContSrc</name></decl></param>, <param><decl><type><name pos:line="80" pos:column="61">DockingCont</name><type:modifier pos:line="80" pos:column="72">*</type:modifier></type> <name pos:line="80" pos:column="74">pContTgt</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="82" pos:column="9">// get number of container</comment>
	<function_decl><type><name pos:line="83" pos:column="9">int</name></type>  <name pos:line="83" pos:column="14">GetContainer</name><parameter_list pos:line="83" pos:column="26">(<param><decl><type><name pos:line="83" pos:column="27">DockingCont</name><type:modifier pos:line="83" pos:column="38">*</type:modifier></type> <name pos:line="83" pos:column="40">pCont</name></decl></param>)</parameter_list>;</function_decl> 

	<comment type="line" pos:line="85" pos:column="9">// get all container in vector</comment>
	<function><type><name><name pos:line="86" pos:column="9">vector</name><argument_list pos:line="86" pos:column="15">&lt;<argument><expr><name pos:line="86" pos:column="16">DockingCont</name><type:modifier pos:line="86" pos:column="27">*</type:modifier></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="86" pos:column="30">&amp;</type:modifier></type> <name pos:line="86" pos:column="32">getContainerInfo</name><parameter_list pos:line="86" pos:column="48">()</parameter_list> <block pos:line="86" pos:column="51">{
		<return pos:line="87" pos:column="17">return <expr><name pos:line="87" pos:column="24">_vContainer</name></expr>;</return>
	}</block></function><empty_stmt pos:line="88" pos:column="10">;</empty_stmt>
	<comment type="line" pos:line="89" pos:column="9">// get dock data (sized areas)</comment>
	<function><type><name pos:line="90" pos:column="9">void</name></type> <name pos:line="90" pos:column="14">getDockInfo</name><parameter_list pos:line="90" pos:column="25">(<param><decl><type><name pos:line="90" pos:column="26">tDockMgr</name> <type:modifier pos:line="90" pos:column="35">*</type:modifier></type><name pos:line="90" pos:column="36">pDockData</name></decl></param>)</parameter_list> <block pos:line="90" pos:column="47">{
		<expr_stmt><expr><op:operator pos:line="91" pos:column="17">*</op:operator><name pos:line="91" pos:column="18">pDockData</name>	<op:operator pos:line="91" pos:column="33">=</op:operator> <name pos:line="91" pos:column="35">_dockData</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="92" pos:column="10">;</empty_stmt>

	<comment type="line" pos:line="94" pos:column="9">// setting styles of docking</comment>
	<function><type><name pos:line="95" pos:column="9">void</name></type> <name pos:line="95" pos:column="14">setStyleCaption</name><parameter_list pos:line="95" pos:column="29">(<param><decl><type><name pos:line="95" pos:column="30">BOOL</name></type> <name pos:line="95" pos:column="35">captionOnTop</name></decl></param>)</parameter_list> <block pos:line="95" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="96" pos:column="17">_vContainer</name><index pos:line="96" pos:column="28">[<expr><name pos:line="96" pos:column="29">CONT_TOP</name></expr>]</index></name><op:operator pos:line="96" pos:column="38">-&gt;</op:operator><call><name pos:line="96" pos:column="40">setCaptionTop</name><argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">captionOnTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">_vContainer</name><index pos:line="97" pos:column="28">[<expr><name pos:line="97" pos:column="29">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="97" pos:column="41">-&gt;</op:operator><call><name pos:line="97" pos:column="43">setCaptionTop</name><argument_list pos:line="97" pos:column="56">(<argument><expr><name pos:line="97" pos:column="57">captionOnTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="98" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="100" pos:column="9">void</name></type> <name pos:line="100" pos:column="14">setTabStyle</name><parameter_list pos:line="100" pos:column="25">(<param><decl><type><name pos:line="100" pos:column="26">BOOL</name></type> <name pos:line="100" pos:column="31">orangeLine</name></decl></param>)</parameter_list> <block pos:line="100" pos:column="43">{
		<for pos:line="101" pos:column="17">for (<init><decl><type><name pos:line="101" pos:column="22">size_t</name></type> <name pos:line="101" pos:column="29">i</name> <init pos:line="101" pos:column="31">= <expr><lit:literal type="number" pos:line="101" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="101" pos:column="36">i</name> <op:operator pos:line="101" pos:column="38">&lt;</op:operator> <call><name><name pos:line="101" pos:column="40">_vContainer</name><op:operator pos:line="101" pos:column="51">.</op:operator><name pos:line="101" pos:column="52">size</name></name><argument_list pos:line="101" pos:column="56">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="101" pos:column="60">i</name><op:operator pos:line="101" pos:column="61">++</op:operator></expr></incr>)
			<expr_stmt><expr><name><name pos:line="102" pos:column="25">_vContainer</name><index pos:line="102" pos:column="36">[<expr><name pos:line="102" pos:column="37">i</name></expr>]</index></name><op:operator pos:line="102" pos:column="39">-&gt;</op:operator><call><name pos:line="102" pos:column="41">setTabStyle</name><argument_list pos:line="102" pos:column="52">(<argument><expr><name pos:line="102" pos:column="53">orangeLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
	}</block></function><empty_stmt pos:line="103" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="105" pos:column="9">int</name></type> <name pos:line="105" pos:column="13">getDockedContSize</name><parameter_list pos:line="105" pos:column="30">(<param><decl><type><name pos:line="105" pos:column="31">int</name></type> <name pos:line="105" pos:column="35">iCont</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="106" pos:column="9">void</name></type> <name pos:line="106" pos:column="14">setDockedContSize</name><parameter_list pos:line="106" pos:column="31">(<param><decl><type><name pos:line="106" pos:column="32">int</name></type> <name pos:line="106" pos:column="36">iCont</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="43">int</name></type> <name pos:line="106" pos:column="47">iSize</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="107" pos:column="9">virtual</specifier> <name pos:line="107" pos:column="17">void</name></type> <name pos:line="107" pos:column="22">destroy</name><parameter_list pos:line="107" pos:column="29">()</parameter_list>;</function_decl>

</public><private pos:line="109" pos:column="1">private :

	<function_decl><type><specifier pos:line="111" pos:column="9">static</specifier> <name pos:line="111" pos:column="16">LRESULT</name> <name pos:line="111" pos:column="24">CALLBACK</name></type> <name pos:line="111" pos:column="33">staticWinProc</name><parameter_list pos:line="111" pos:column="46">(<param><decl><type><name pos:line="111" pos:column="47">HWND</name></type> <name pos:line="111" pos:column="52">hwnd</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="58">UINT</name></type> <name pos:line="111" pos:column="63">Message</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="72">WPARAM</name></type> <name pos:line="111" pos:column="79">wParam</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="87">LPARAM</name></type> <name pos:line="111" pos:column="94">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="112" pos:column="9">LRESULT</name></type> <name pos:line="112" pos:column="17">runProc</name><parameter_list pos:line="112" pos:column="24">(<param><decl><type><name pos:line="112" pos:column="25">HWND</name></type> <name pos:line="112" pos:column="30">hwnd</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="36">UINT</name></type> <name pos:line="112" pos:column="41">Message</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="50">WPARAM</name></type> <name pos:line="112" pos:column="57">wParam</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="65">LPARAM</name></type> <name pos:line="112" pos:column="72">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="113" pos:column="9">void</name></type> <name pos:line="113" pos:column="14">onSize</name><parameter_list pos:line="113" pos:column="20">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="115" pos:column="9">void</name></type>	<name pos:line="115" pos:column="17">toggleTb</name><parameter_list pos:line="115" pos:column="25">(<param><decl><type><name pos:line="115" pos:column="26">DockingCont</name><type:modifier pos:line="115" pos:column="37">*</type:modifier></type> <name pos:line="115" pos:column="39">pContSrc</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="49">DockingCont</name><type:modifier pos:line="115" pos:column="60">*</type:modifier></type> <name pos:line="115" pos:column="62">pContTgt</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="72">tTbData</name></type> <name pos:line="115" pos:column="80">TbData</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="117" pos:column="9">// test if container exists</comment>
	<function_decl><type><name pos:line="118" pos:column="9">BOOL</name></type> <name pos:line="118" pos:column="14">ContExists</name><parameter_list pos:line="118" pos:column="24">(<param><decl><type><name pos:line="118" pos:column="25">size_t</name></type> <name pos:line="118" pos:column="32">iCont</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="119" pos:column="9">int</name></type>	 <name pos:line="119" pos:column="18">FindEmptyContainer</name><parameter_list pos:line="119" pos:column="36">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="120" pos:column="9">LRESULT</name></type> <name pos:line="120" pos:column="17">SendNotify</name><parameter_list pos:line="120" pos:column="27">(<param><decl><type><name pos:line="120" pos:column="28">HWND</name></type> <name pos:line="120" pos:column="33">hWnd</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="39">UINT</name></type> <name pos:line="120" pos:column="44">message</name></decl></param>)</parameter_list>;</function_decl>

</private><private pos:line="122" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="123" pos:column="9">Window</name>						<type:modifier pos:line="123" pos:column="57">*</type:modifier><type:modifier pos:line="123" pos:column="58">*</type:modifier></type><name pos:line="123" pos:column="59">_ppWindow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">RECT</name></type>						<name pos:line="124" pos:column="57">_rcWork</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="125" pos:column="9">RECT</name></type>						<name pos:line="125" pos:column="57">_rect</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="126" pos:column="9">Window</name>						<type:modifier pos:line="126" pos:column="57">*</type:modifier><type:modifier pos:line="126" pos:column="58">*</type:modifier></type><name pos:line="126" pos:column="59">_ppMainWindow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="127" pos:column="9">vector</name><argument_list pos:line="127" pos:column="15">&lt;<argument><expr><name pos:line="127" pos:column="16">HWND</name></expr></argument>&gt;</argument_list></name></type>				<name pos:line="127" pos:column="49">_vImageList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">HIMAGELIST</name></type>					<name pos:line="128" pos:column="57">_hImageList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="129" pos:column="9">vector</name><argument_list pos:line="129" pos:column="15">&lt;<argument><expr><name pos:line="129" pos:column="16">DockingCont</name><type:modifier pos:line="129" pos:column="27">*</type:modifier></expr></argument>&gt;</argument_list></name></type>		<name pos:line="129" pos:column="41">_vContainer</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="130" pos:column="9">tDockMgr</name></type>					<name pos:line="130" pos:column="57">_dockData</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="131" pos:column="9">static</specifier> <name pos:line="131" pos:column="16">BOOL</name></type>					<name pos:line="131" pos:column="57">_isRegistered</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="132" pos:column="9">BOOL</name></type>						<name pos:line="132" pos:column="57">_isInitialized</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">int</name></type>							<name><name pos:line="133" pos:column="65">_iContMap</name><index pos:line="133" pos:column="74">[<expr><name pos:line="133" pos:column="75">CONT_MAP_MAX</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="134" pos:column="9">vector</name><argument_list pos:line="134" pos:column="15">&lt;<argument><expr><name pos:line="134" pos:column="16">DockingSplitter</name> <type:modifier pos:line="134" pos:column="32">*</type:modifier></expr></argument>&gt;</argument_list></name></type>	<name pos:line="134" pos:column="41">_vSplitter</name></decl>;</decl_stmt>
</private>}</block>;</class>

<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="137" pos:column="8">//DOCKINGMANAGER_H</comment>
</unit>
