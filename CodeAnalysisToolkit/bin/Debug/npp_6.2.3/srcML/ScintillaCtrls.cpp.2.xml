<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\ScintillaCtrls.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ScintillaCtrls.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">HWND</name></type> <name><name pos:line="33" pos:column="6">ScintillaCtrls</name><op:operator pos:line="33" pos:column="20">::</op:operator><name pos:line="33" pos:column="22">createSintilla</name></name><parameter_list pos:line="33" pos:column="36">(<param><decl><type><name pos:line="33" pos:column="37">HWND</name></type> <name pos:line="33" pos:column="42">hParent</name></decl></param>)</parameter_list> 
<block pos:line="34" pos:column="1">{
	<expr_stmt><expr><name pos:line="35" pos:column="9">_hParent</name> <op:operator pos:line="35" pos:column="18">=</op:operator> <name pos:line="35" pos:column="20">hParent</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="36" pos:column="27">*</type:modifier></type><name pos:line="36" pos:column="28">scint</name> <init pos:line="36" pos:column="34">= <expr><op:operator pos:line="36" pos:column="36">new</op:operator> <name pos:line="36" pos:column="40">ScintillaEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="37" pos:column="9">scint</name><op:operator pos:line="37" pos:column="14">-&gt;</op:operator><name pos:line="37" pos:column="16">init</name></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">_hInst</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="29">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="38" pos:column="9">_scintVector</name><op:operator pos:line="38" pos:column="21">.</op:operator><name pos:line="38" pos:column="22">push_back</name></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">scint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="39" pos:column="9">return <expr><call><name><name pos:line="39" pos:column="16">scint</name><op:operator pos:line="39" pos:column="21">-&gt;</op:operator><name pos:line="39" pos:column="23">getHSelf</name></name><argument_list pos:line="39" pos:column="31">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="42" pos:column="1">int</name></type> <name><name pos:line="42" pos:column="5">ScintillaCtrls</name><op:operator pos:line="42" pos:column="19">::</op:operator><name pos:line="42" pos:column="21">getIndexFrom</name></name><parameter_list pos:line="42" pos:column="33">(<param><decl><type><name pos:line="42" pos:column="34">HWND</name></type> <name pos:line="42" pos:column="39">handle2Find</name></decl></param>)</parameter_list>
<block pos:line="43" pos:column="1">{
	<for pos:line="44" pos:column="9">for (<init><decl><type><name pos:line="44" pos:column="14">size_t</name></type> <name pos:line="44" pos:column="21">i</name> <init pos:line="44" pos:column="23">= <expr><lit:literal type="number" pos:line="44" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="44" pos:column="29">i</name> <op:operator pos:line="44" pos:column="31">&lt;</op:operator> <call><name><name pos:line="44" pos:column="33">_scintVector</name><op:operator pos:line="44" pos:column="45">.</op:operator><name pos:line="44" pos:column="46">size</name></name><argument_list pos:line="44" pos:column="50">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="44" pos:column="55">i</name><op:operator pos:line="44" pos:column="56">++</op:operator></expr></incr>)
	<block pos:line="45" pos:column="9">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">_scintVector</name><index pos:line="46" pos:column="33">[<expr><name pos:line="46" pos:column="34">i</name></expr>]</index></name><op:operator pos:line="46" pos:column="36">-&gt;</op:operator><call><name pos:line="46" pos:column="38">getHSelf</name><argument_list pos:line="46" pos:column="46">()</argument_list></call> <op:operator pos:line="46" pos:column="49">==</op:operator> <name pos:line="46" pos:column="52">handle2Find</name></expr>)</condition><then pos:line="46" pos:column="64">
		<block pos:line="47" pos:column="17">{
			<return pos:line="48" pos:column="25">return <expr><name pos:line="48" pos:column="32">i</name></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="51" pos:column="9">return <expr><op:operator pos:line="51" pos:column="16">-</op:operator><lit:literal type="number" pos:line="51" pos:column="17">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="54" pos:column="1">ScintillaEditView</name> <type:modifier pos:line="54" pos:column="19">*</type:modifier></type> <name><name pos:line="54" pos:column="21">ScintillaCtrls</name><op:operator pos:line="54" pos:column="35">::</op:operator><name pos:line="54" pos:column="37">getScintillaEditViewFrom</name></name><parameter_list pos:line="54" pos:column="61">(<param><decl><type><name pos:line="54" pos:column="62">HWND</name></type> <name pos:line="54" pos:column="67">handle2Find</name></decl></param>)</parameter_list>
<block pos:line="55" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="56" pos:column="9">int</name></type> <name pos:line="56" pos:column="13">i</name> <init pos:line="56" pos:column="15">= <expr><call><name pos:line="56" pos:column="17">getIndexFrom</name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">handle2Find</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">i</name> <op:operator pos:line="57" pos:column="15">==</op:operator> <op:operator pos:line="57" pos:column="18">-</op:operator><lit:literal type="number" pos:line="57" pos:column="19">1</lit:literal> <op:operator pos:line="57" pos:column="21">||</op:operator> <call><name pos:line="57" pos:column="24">size_t</name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="57" pos:column="34">&gt;=</op:operator> <call><name><name pos:line="57" pos:column="37">_scintVector</name><op:operator pos:line="57" pos:column="49">.</op:operator><name pos:line="57" pos:column="50">size</name></name><argument_list pos:line="57" pos:column="54">()</argument_list></call></expr>)</condition><then pos:line="57" pos:column="57">
		<return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">NULL</name></expr>;</return></then></if>
	<return pos:line="59" pos:column="9">return <expr><name><name pos:line="59" pos:column="16">_scintVector</name><index pos:line="59" pos:column="28">[<expr><name pos:line="59" pos:column="29">i</name></expr>]</index></name></expr>;</return>
}</block></function>

<function><type><name pos:line="62" pos:column="1">bool</name></type> <name><name pos:line="62" pos:column="6">ScintillaCtrls</name><op:operator pos:line="62" pos:column="20">::</op:operator><name pos:line="62" pos:column="22">destroyScintilla</name></name><parameter_list pos:line="62" pos:column="38">(<param><decl><type><name pos:line="62" pos:column="39">HWND</name></type> <name pos:line="62" pos:column="44">handle2Destroy</name></decl></param>)</parameter_list>
<block pos:line="63" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="64" pos:column="9">int</name></type> <name pos:line="64" pos:column="13">i</name> <init pos:line="64" pos:column="15">= <expr><call><name pos:line="64" pos:column="17">getIndexFrom</name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">handle2Destroy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">i</name> <op:operator pos:line="65" pos:column="15">==</op:operator> <op:operator pos:line="65" pos:column="18">-</op:operator><lit:literal type="number" pos:line="65" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="65" pos:column="21">
		<return pos:line="66" pos:column="17">return <expr><lit:literal type="boolean" pos:line="66" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">_scintVector</name><index pos:line="68" pos:column="21">[<expr><name pos:line="68" pos:column="22">i</name></expr>]</index></name><op:operator pos:line="68" pos:column="24">-&gt;</op:operator><call><name pos:line="68" pos:column="26">destroy</name><argument_list pos:line="68" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="69" pos:column="9">delete</op:operator> <name><name pos:line="69" pos:column="16">_scintVector</name><index pos:line="69" pos:column="28">[<expr><name pos:line="69" pos:column="29">i</name></expr>]</index></name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name><name><name pos:line="71" pos:column="9">vector</name><argument_list pos:line="71" pos:column="15">&lt;<argument><expr><name pos:line="71" pos:column="16">ScintillaEditView</name> <type:modifier pos:line="71" pos:column="34">*</type:modifier></expr></argument>&gt;</argument_list></name><op:operator pos:line="71" pos:column="36">::</op:operator><name pos:line="71" pos:column="38">iterator</name></name></type> <name pos:line="71" pos:column="47">it2delete</name> <init pos:line="71" pos:column="57">= <expr><call><name><name pos:line="71" pos:column="59">_scintVector</name><op:operator pos:line="71" pos:column="71">.</op:operator><name pos:line="71" pos:column="72">begin</name></name><argument_list pos:line="71" pos:column="77">()</argument_list></call><op:operator pos:line="71" pos:column="79">+</op:operator> <name pos:line="71" pos:column="81">i</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="72" pos:column="9">_scintVector</name><op:operator pos:line="72" pos:column="21">.</op:operator><name pos:line="72" pos:column="22">erase</name></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">it2delete</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="73" pos:column="9">return <expr><lit:literal type="boolean" pos:line="73" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="76" pos:column="1">void</name></type> <name><name pos:line="76" pos:column="6">ScintillaCtrls</name><op:operator pos:line="76" pos:column="20">::</op:operator><name pos:line="76" pos:column="22">destroy</name></name><parameter_list pos:line="76" pos:column="29">()</parameter_list> 
<block pos:line="77" pos:column="1">{
	<for pos:line="78" pos:column="9">for (<init><decl><type><name pos:line="78" pos:column="14">size_t</name></type> <name pos:line="78" pos:column="21">i</name> <init pos:line="78" pos:column="23">= <expr><lit:literal type="number" pos:line="78" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="78" pos:column="29">i</name> <op:operator pos:line="78" pos:column="31">&lt;</op:operator> <call><name><name pos:line="78" pos:column="33">_scintVector</name><op:operator pos:line="78" pos:column="45">.</op:operator><name pos:line="78" pos:column="46">size</name></name><argument_list pos:line="78" pos:column="50">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="78" pos:column="55">i</name><op:operator pos:line="78" pos:column="56">++</op:operator></expr></incr>)
	<block pos:line="79" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="80" pos:column="17">_scintVector</name><index pos:line="80" pos:column="29">[<expr><name pos:line="80" pos:column="30">i</name></expr>]</index></name><op:operator pos:line="80" pos:column="32">-&gt;</op:operator><call><name pos:line="80" pos:column="34">destroy</name><argument_list pos:line="80" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="81" pos:column="17">delete</op:operator> <name><name pos:line="81" pos:column="24">_scintVector</name><index pos:line="81" pos:column="36">[<expr><name pos:line="81" pos:column="37">i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
}</block></function>
</unit>
