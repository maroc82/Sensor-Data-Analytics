<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TrayIcon\trayIconControler.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"trayIconControler.h"</lit:literal></cpp:file></cpp:include>

<constructor><name><name pos:line="32" pos:column="1">trayIconControler</name><op:operator pos:line="32" pos:column="18">::</op:operator><name pos:line="32" pos:column="20">trayIconControler</name></name><parameter_list pos:line="32" pos:column="37">(<param><decl><type><name pos:line="32" pos:column="38">HWND</name></type> <name pos:line="32" pos:column="43">hwnd</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="49">UINT</name></type> <name pos:line="32" pos:column="54">uID</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="59">UINT</name></type> <name pos:line="32" pos:column="64">uCBMsg</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="72">HICON</name></type> <name pos:line="32" pos:column="78">hicon</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="85">TCHAR</name> <type:modifier pos:line="32" pos:column="91">*</type:modifier></type><name pos:line="32" pos:column="92">tip</name></decl></param>)</parameter_list>
<block pos:line="33" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">_nid</name><op:operator pos:line="34" pos:column="7">.</op:operator><name pos:line="34" pos:column="8">cbSize</name></name> <op:operator pos:line="34" pos:column="15">=</op:operator> <sizeof pos:line="34" pos:column="17">sizeof<argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">_nid</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">_nid</name><op:operator pos:line="35" pos:column="7">.</op:operator><name pos:line="35" pos:column="8">hWnd</name></name> <op:operator pos:line="35" pos:column="13">=</op:operator> <name pos:line="35" pos:column="15">hwnd</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">_nid</name><op:operator pos:line="36" pos:column="7">.</op:operator><name pos:line="36" pos:column="8">uID</name></name> <op:operator pos:line="36" pos:column="12">=</op:operator> <name pos:line="36" pos:column="14">uID</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">_nid</name><op:operator pos:line="37" pos:column="7">.</op:operator><name pos:line="37" pos:column="8">uFlags</name></name> <op:operator pos:line="37" pos:column="15">=</op:operator> <name pos:line="37" pos:column="17">NIF_ICON</name> <op:operator pos:line="37" pos:column="26">|</op:operator> <name pos:line="37" pos:column="28">NIF_MESSAGE</name> <op:operator pos:line="37" pos:column="40">|</op:operator> <name pos:line="37" pos:column="42">NIF_TIP</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">_nid</name><op:operator pos:line="38" pos:column="7">.</op:operator><name pos:line="38" pos:column="8">uCallbackMessage</name></name> <op:operator pos:line="38" pos:column="25">=</op:operator> <name pos:line="38" pos:column="27">uCBMsg</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">_nid</name><op:operator pos:line="39" pos:column="7">.</op:operator><name pos:line="39" pos:column="8">hIcon</name></name> <op:operator pos:line="39" pos:column="14">=</op:operator> <name pos:line="39" pos:column="16">hicon</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">lstrcpy</name><argument_list pos:line="40" pos:column="10">(<argument><expr><name><name pos:line="40" pos:column="11">_nid</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">szTip</name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="23">tip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><call><name><op:operator pos:line="42" pos:column="3">::</op:operator><name pos:line="42" pos:column="5">RegisterWindowMessage</name></name><argument_list pos:line="42" pos:column="26">(<argument><expr><call><name pos:line="42" pos:column="27">TEXT</name><argument_list pos:line="42" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="32">"TaskbarCreated"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">_isIconShowed</name> <op:operator pos:line="43" pos:column="17">=</op:operator> <lit:literal type="boolean" pos:line="43" pos:column="19">false</lit:literal></expr>;</expr_stmt>
}</block></constructor>

<function><type><name pos:line="46" pos:column="1">int</name></type> <name><name pos:line="46" pos:column="5">trayIconControler</name><op:operator pos:line="46" pos:column="22">::</op:operator><name pos:line="46" pos:column="24">doTrayIcon</name></name><parameter_list pos:line="46" pos:column="34">(<param><decl><type><name pos:line="46" pos:column="35">DWORD</name></type> <name pos:line="46" pos:column="41">op</name></decl></param>)</parameter_list>
<block pos:line="47" pos:column="1">{
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><op:operator pos:line="48" pos:column="7">(</op:operator><name pos:line="48" pos:column="8">op</name> <op:operator pos:line="48" pos:column="11">!=</op:operator> <name pos:line="48" pos:column="14">ADD</name><op:operator pos:line="48" pos:column="17">)</op:operator><op:operator pos:line="48" pos:column="18">&amp;&amp;</op:operator><op:operator pos:line="48" pos:column="20">(</op:operator><name pos:line="48" pos:column="21">op</name> <op:operator pos:line="48" pos:column="24">!=</op:operator> <name pos:line="48" pos:column="27">REMOVE</name><op:operator pos:line="48" pos:column="33">)</op:operator></expr>)</condition><then pos:line="48" pos:column="35"> <return pos:line="48" pos:column="36">return <expr><name pos:line="48" pos:column="43">INCORRECT_OPERATION</name></expr>;</return></then></if>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><op:operator pos:line="49" pos:column="7">(</op:operator><op:operator pos:line="49" pos:column="8">(</op:operator><name pos:line="49" pos:column="9">_isIconShowed</name><op:operator pos:line="49" pos:column="22">)</op:operator><op:operator pos:line="49" pos:column="23">&amp;&amp;</op:operator><op:operator pos:line="49" pos:column="25">(</op:operator><name pos:line="49" pos:column="26">op</name> <op:operator pos:line="49" pos:column="29">==</op:operator> <name pos:line="49" pos:column="32">ADD</name><op:operator pos:line="49" pos:column="35">)</op:operator><op:operator pos:line="49" pos:column="36">)</op:operator><op:operator pos:line="49" pos:column="37">||</op:operator><op:operator pos:line="49" pos:column="39">(</op:operator><op:operator pos:line="49" pos:column="40">(</op:operator><op:operator pos:line="49" pos:column="41">!</op:operator><name pos:line="49" pos:column="42">_isIconShowed</name><op:operator pos:line="49" pos:column="55">)</op:operator><op:operator pos:line="49" pos:column="56">&amp;&amp;</op:operator><op:operator pos:line="49" pos:column="58">(</op:operator><name pos:line="49" pos:column="59">op</name> <op:operator pos:line="49" pos:column="62">==</op:operator> <name pos:line="49" pos:column="65">REMOVE</name><op:operator pos:line="49" pos:column="71">)</op:operator><op:operator pos:line="49" pos:column="72">)</op:operator></expr>)</condition><then pos:line="49" pos:column="74">
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">OPERATION_INCOHERENT</name></expr>;</return></then></if>
  <expr_stmt><expr><call><name><op:operator pos:line="51" pos:column="3">::</op:operator><name pos:line="51" pos:column="5">Shell_NotifyIcon</name></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">op</name></expr></argument>, <argument><expr><op:operator pos:line="51" pos:column="26">&amp;</op:operator><name pos:line="51" pos:column="27">_nid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">_isIconShowed</name> <op:operator pos:line="52" pos:column="17">=</op:operator> <op:operator pos:line="52" pos:column="19">!</op:operator><name pos:line="52" pos:column="20">_isIconShowed</name></expr>;</expr_stmt>

  <return pos:line="54" pos:column="3">return <expr><lit:literal type="number" pos:line="54" pos:column="10">0</lit:literal></expr>;</return>
}</block></function>
</unit>
