<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\tools\NppShell\src\NppShell.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">//---------------------------------------------------------------------------</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright 2002-2003 by Andre Burgaud &lt;andre@burgaud.com&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">// Copyright 2009 by Harry &lt;harrybharry@users.sourceforge.net&gt;</comment>
<comment type="line" pos:line="4" pos:column="1">// See license.txt</comment>
<comment type="line" pos:line="5" pos:column="1">//---------------------------------------------------------------------------</comment>

<cpp:ifndef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifndef</cpp:directive> <name pos:line="7" pos:column="9">STRICT</name></cpp:ifndef>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">STRICT</name></cpp:macro></cpp:define>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">INC_OLE2</name></cpp:macro></cpp:define>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">NOMINMAX</name></cpp:macro></cpp:define>

<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include</cpp:directive> <cpp:file pos:line="15" pos:column="10">&lt;windowsx.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">include</cpp:directive> <cpp:file pos:line="16" pos:column="10">&lt;shlobj.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include</cpp:directive> <cpp:file pos:line="17" pos:column="10">&lt;shlwapi.h&gt;</cpp:file></cpp:include>

<cpp:define pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19" pos:column="9">WINVER_VISTA</name></cpp:macro> <cpp:value pos:line="19" pos:column="22">0x600</cpp:value></cpp:define>

<comment type="line" pos:line="21" pos:column="1">//This is not ideal, but missing from current mingw</comment>
<cpp:ifndef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifndef</cpp:directive> <name pos:line="22" pos:column="9">ERROR_ELEVATION_REQUIRED</name></cpp:ifndef>
<cpp:define pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="23" pos:column="9">ERROR_ELEVATION_REQUIRED</name></cpp:macro> <cpp:value pos:line="23" pos:column="34">740</cpp:value></cpp:define>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:define pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="26" pos:column="9">GIL_DEFAULTICON</name></cpp:macro> <cpp:value pos:line="26" pos:column="25">0x0040</cpp:value></cpp:define>

<cpp:define pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="28" pos:column="9">GUID_SIZE</name></cpp:macro>			<cpp:value pos:line="28" pos:column="41">128</cpp:value></cpp:define>
<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">GUID_STRING_SIZE</name></cpp:macro>	<cpp:value pos:line="29" pos:column="33">40</cpp:value></cpp:define>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">TITLE_SIZE</name></cpp:macro>			<cpp:value pos:line="30" pos:column="41">64</cpp:value></cpp:define>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef</cpp:directive> <name pos:line="32" pos:column="8">ARRAYSIZE</name></cpp:ifdef>
<cpp:undef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">undef</cpp:directive> <name pos:line="33" pos:column="8">ARRAYSIZE</name></cpp:undef>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:define pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="35" pos:column="9">ARRAYSIZE</name><parameter_list pos:line="35" pos:column="18">(<param><type><name pos:line="35" pos:column="19">a</name></type></param>)</parameter_list></cpp:macro>		<cpp:value pos:line="35" pos:column="33">(sizeof(a)/sizeof(a[0]))</cpp:value></cpp:define>

<cpp:define pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="37" pos:column="9">MAX_CMD_LENGTH</name></cpp:macro>		<cpp:value pos:line="37" pos:column="33">32767</cpp:value></cpp:define>
<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">ResultFromShort</name><parameter_list pos:line="38" pos:column="24">(<param><type><name pos:line="38" pos:column="25">i</name></type></param>)</parameter_list></cpp:macro>	<cpp:value pos:line="38" pos:column="33">ResultFromScode(MAKE_SCODE(SEVERITY_SUCCESS, 0, (USHORT)(i)))</cpp:value></cpp:define>

<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">INITGUID</name></cpp:macro></cpp:define>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file pos:line="41" pos:column="10">&lt;initguid.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">include</cpp:directive> <cpp:file pos:line="42" pos:column="10">&lt;shlguid.h&gt;</cpp:file></cpp:include>

<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef</cpp:directive> <name pos:line="44" pos:column="8">WIN64</name></cpp:ifdef>
<comment type="line" pos:line="45" pos:column="1">// {B298D29A-A6ED-11DE-BA8C-A68E55D89593}</comment>
<expr_stmt><expr><call><name pos:line="46" pos:column="1">DEFINE_GUID</name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">CLSID_ShellExtension</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="35">0xB298D29A</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="47">0xA6ED</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="55">0x11DE</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="63">0xBA</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="69">0x8C</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="75">0xA6</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="81">0x8E</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="87">0x55</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="93">0xD8</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="99">0x95</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="105">0x93</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name pos:line="47" pos:column="1">TCHAR</name></type> <name><name pos:line="47" pos:column="7">szGUID</name><index pos:line="47" pos:column="13">[]</index></name> <init pos:line="47" pos:column="16">= <expr><call><name pos:line="47" pos:column="18">TEXT</name><argument_list pos:line="47" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="23">"{B298D29A-A6ED-11DE-BA8C-A68E55D89593}"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else</cpp:directive></cpp:else>
<comment type="line" pos:line="49" pos:column="1">// {00F3C2EC-A6EE-11DE-A03A-EF8F55D89593}</comment>
<expr_stmt><expr><call><name pos:line="50" pos:column="1">DEFINE_GUID</name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">CLSID_ShellExtension</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="35">0x00F3C2EC</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="47">0xA6EE</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="55">0x11DE</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="63">0xA0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="69">0x3A</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="75">0xEF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="81">0x8F</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="87">0x55</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="93">0xD8</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="99">0x95</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="105">0x93</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name pos:line="51" pos:column="1">TCHAR</name></type> <name><name pos:line="51" pos:column="7">szGUID</name><index pos:line="51" pos:column="13">[]</index></name> <init pos:line="51" pos:column="16">= <expr><call><name pos:line="51" pos:column="18">TEXT</name><argument_list pos:line="51" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="23">"{00F3C2EC-A6EE-11DE-A03A-EF8F55D89593}"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif</cpp:directive></cpp:endif>

<class pos:line="54" pos:column="1">class <name pos:line="54" pos:column="7">CShellExtClassFactory</name> <super pos:line="54" pos:column="29">: <specifier pos:line="54" pos:column="31">public</specifier> <name pos:line="54" pos:column="38">IClassFactory</name></super> <block pos:line="54" pos:column="52">{<private type="default" pos:line="54" pos:column="53">
</private><protected pos:line="55" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="56" pos:column="9">ULONG</name></type> <name pos:line="56" pos:column="15">m_cRef</name></decl>;</decl_stmt>

</protected><public pos:line="58" pos:column="1">public:
	<constructor_decl><name pos:line="59" pos:column="9">CShellExtClassFactory</name><parameter_list pos:line="59" pos:column="30">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="60" pos:column="9">virtual</specifier> <name pos:line="60" pos:column="17">~<name pos:line="60" pos:column="18">CShellExtClassFactory</name></name><parameter_list pos:line="60" pos:column="39">()</parameter_list>;</destructor_decl>

	<comment type="line" pos:line="62" pos:column="9">// *** IUnknown methods ***</comment>
	<function_decl><type><name pos:line="63" pos:column="9">STDMETHODIMP</name></type> <name pos:line="63" pos:column="22">QueryInterface</name><parameter_list pos:line="63" pos:column="36">(<param><decl><type><name pos:line="63" pos:column="37">REFIID</name></type></decl></param>, <param><decl><type><name pos:line="63" pos:column="45">LPVOID</name></type> <name pos:line="63" pos:column="52">FAR</name> <type:modifier pos:line="63" pos:column="56">*</type:modifier></decl></param>)</parameter_list>;</function_decl>
	<macro><name pos:line="64" pos:column="9">STDMETHODIMP_</name><argument_list pos:line="64" pos:column="22">(<argument pos:line="64" pos:column="23">ULONG</argument>)</argument_list></macro> <constructor_decl><name pos:line="64" pos:column="30">AddRef</name><parameter_list pos:line="64" pos:column="36">()</parameter_list>;</constructor_decl>
	<macro><name pos:line="65" pos:column="9">STDMETHODIMP_</name><argument_list pos:line="65" pos:column="22">(<argument pos:line="65" pos:column="23">ULONG</argument>)</argument_list></macro> <constructor_decl><name pos:line="65" pos:column="30">Release</name><parameter_list pos:line="65" pos:column="37">()</parameter_list>;</constructor_decl>
	<comment type="line" pos:line="66" pos:column="9">// *** IClassFactory methods ***</comment>
	<function_decl><type><name pos:line="67" pos:column="9">STDMETHODIMP</name></type> <name pos:line="67" pos:column="22">CreateInstance</name><parameter_list pos:line="67" pos:column="36">(<param><decl><type><name pos:line="67" pos:column="37">LPUNKNOWN</name></type></decl></param>, <param><decl><type><name pos:line="67" pos:column="48">REFIID</name></type></decl></param>, <param><decl><type><name pos:line="67" pos:column="56">LPVOID</name></type> <name pos:line="67" pos:column="63">FAR</name> <type:modifier pos:line="67" pos:column="67">*</type:modifier></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="68" pos:column="9">STDMETHODIMP</name></type> <name pos:line="68" pos:column="22">LockServer</name><parameter_list pos:line="68" pos:column="32">(<param><decl><type><name pos:line="68" pos:column="33">BOOL</name></type></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="71" pos:column="1">class <name pos:line="71" pos:column="7">CShellExt</name> <super pos:line="71" pos:column="17">: <specifier pos:line="71" pos:column="19">public</specifier> <name pos:line="71" pos:column="26">IContextMenu3</name>, <name pos:line="71" pos:column="41">IShellExtInit</name>, <name pos:line="71" pos:column="56">IPersistFile</name>, <name pos:line="71" pos:column="70">IExtractIcon</name></super> <block pos:line="71" pos:column="83">{<private type="default" pos:line="71" pos:column="84">
</private><private pos:line="72" pos:column="1">private:
	<comment type="line" pos:line="73" pos:column="9">//</comment>
	<decl_stmt><decl><type><name pos:line="74" pos:column="9">ULONG</name></type> <name pos:line="74" pos:column="15">m_cRef</name></decl>;</decl_stmt>

	<comment type="line" pos:line="76" pos:column="9">// Menu variables</comment>
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">UINT</name></type> <name pos:line="77" pos:column="14">m_cbFiles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">STGMEDIUM</name></type> <name pos:line="78" pos:column="19">m_stgMedium</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">LPDATAOBJECT</name></type> <name pos:line="79" pos:column="22">m_pDataObj</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">TCHAR</name></type> <name><name pos:line="80" pos:column="15">m_szDllDir</name><index pos:line="80" pos:column="25">[<expr><name pos:line="80" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="81" pos:column="9">TCHAR</name></type> <name><name pos:line="81" pos:column="15">m_szMenuTitle</name><index pos:line="81" pos:column="28">[<expr><name pos:line="81" pos:column="29">TITLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="82" pos:column="9">UINT</name></type> <name pos:line="82" pos:column="14">m_menuID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="83" pos:column="9">HMENU</name></type> <name pos:line="83" pos:column="15">m_hMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="84" pos:column="9">bool</name></type> <name pos:line="84" pos:column="14">m_showIcon</name></decl>;</decl_stmt>
	<comment type="line" pos:line="85" pos:column="9">// Icon variables</comment>
	<decl_stmt><decl><type><name pos:line="86" pos:column="9">TCHAR</name></type> <name><name pos:line="86" pos:column="15">m_szFilePath</name><index pos:line="86" pos:column="27">[<expr><name pos:line="86" pos:column="28">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="87" pos:column="9">TCHAR</name></type> <name><name pos:line="87" pos:column="15">m_szModule</name><index pos:line="87" pos:column="25">[<expr><name pos:line="87" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="88" pos:column="9">TCHAR</name></type> <name><name pos:line="88" pos:column="15">m_szCustomPath</name><index pos:line="88" pos:column="29">[<expr><name pos:line="88" pos:column="30">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="89" pos:column="9">bool</name></type> <name pos:line="89" pos:column="14">m_useCustom</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="90" pos:column="9">int</name></type> <name pos:line="90" pos:column="13">m_nameLength</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="91" pos:column="9">int</name></type> <name pos:line="91" pos:column="13">m_nameMaxLength</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">bool</name></type> <name pos:line="92" pos:column="14">m_isDynamic</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="94" pos:column="9">DWORD</name></type> <name pos:line="94" pos:column="15">m_winVer</name></decl>;</decl_stmt>	<comment type="line" pos:line="94" pos:column="25">//current windows version</comment>

	<comment type="line" pos:line="96" pos:column="9">// *** Private methods ***</comment>
	<function_decl><type><name pos:line="97" pos:column="9">STDMETHODIMP</name></type> <name pos:line="97" pos:column="22">InvokeNPP</name><parameter_list pos:line="97" pos:column="31">(<param><decl><type><name pos:line="97" pos:column="32">HWND</name></type> <name pos:line="97" pos:column="37">hParent</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="46">LPCSTR</name></type> <name pos:line="97" pos:column="53">pszWorkingDir</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="68">LPCSTR</name></type> <name pos:line="97" pos:column="75">pszCmd</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="83">LPCSTR</name></type> <name pos:line="97" pos:column="90">pszParam</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="100">int</name></type> <name pos:line="97" pos:column="104">iShowCmd</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="98" pos:column="9">STDMETHODIMP</name></type> <name pos:line="98" pos:column="22">LoadShellIcon</name><parameter_list pos:line="98" pos:column="35">(<param><decl><type><name pos:line="98" pos:column="36">int</name></type> <name pos:line="98" pos:column="40">cx</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="44">int</name></type> <name pos:line="98" pos:column="48">cy</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="52">HICON</name> <type:modifier pos:line="98" pos:column="58">*</type:modifier></type> <name pos:line="98" pos:column="60">phicon</name></decl></param>)</parameter_list>;</function_decl>

</private><public pos:line="100" pos:column="1">public:
	<constructor_decl><name pos:line="101" pos:column="9">CShellExt</name><parameter_list pos:line="101" pos:column="18">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="102" pos:column="9">virtual</specifier> <name pos:line="102" pos:column="17">~<name pos:line="102" pos:column="18">CShellExt</name></name><parameter_list pos:line="102" pos:column="27">()</parameter_list>;</destructor_decl>

	<comment type="line" pos:line="104" pos:column="9">// *** IUnknown methods ***</comment>
	<function_decl><type><name pos:line="105" pos:column="9">STDMETHODIMP</name></type> <name pos:line="105" pos:column="22">QueryInterface</name><parameter_list pos:line="105" pos:column="36">(<param><decl><type><name pos:line="105" pos:column="37">REFIID</name></type></decl></param>, <param><decl><type><name pos:line="105" pos:column="45">LPVOID</name></type> <name pos:line="105" pos:column="52">FAR</name> <type:modifier pos:line="105" pos:column="56">*</type:modifier></decl></param>)</parameter_list>;</function_decl>
	<macro><name pos:line="106" pos:column="9">STDMETHODIMP_</name><argument_list pos:line="106" pos:column="22">(<argument pos:line="106" pos:column="23">ULONG</argument>)</argument_list></macro> <constructor_decl><name pos:line="106" pos:column="30">AddRef</name><parameter_list pos:line="106" pos:column="36">()</parameter_list>;</constructor_decl>
	<macro><name pos:line="107" pos:column="9">STDMETHODIMP_</name><argument_list pos:line="107" pos:column="22">(<argument pos:line="107" pos:column="23">ULONG</argument>)</argument_list></macro> <constructor_decl><name pos:line="107" pos:column="30">Release</name><parameter_list pos:line="107" pos:column="37">()</parameter_list>;</constructor_decl>

	<comment type="line" pos:line="109" pos:column="9">// *** IShellExtInit methods ***</comment>
	<function_decl><type><name pos:line="110" pos:column="9">STDMETHODIMP</name></type> <name pos:line="110" pos:column="22">Initialize</name><parameter_list pos:line="110" pos:column="32">(<param><decl><type><name pos:line="110" pos:column="33">LPCITEMIDLIST</name></type> <name pos:line="110" pos:column="47">pIDFolder</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="58">LPDATAOBJECT</name></type> <name pos:line="110" pos:column="71">pDataObj</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="81">HKEY</name></type> <name pos:line="110" pos:column="86">hKeyID</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="112" pos:column="9">// *** IContextMenu methods ***</comment>
	<function_decl><type><name pos:line="113" pos:column="9">STDMETHODIMP</name></type> <name pos:line="113" pos:column="22">QueryContextMenu</name><parameter_list pos:line="113" pos:column="38">(<param><decl><type><name pos:line="113" pos:column="39">HMENU</name></type> <name pos:line="113" pos:column="45">hMenu</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="52">UINT</name></type> <name pos:line="113" pos:column="57">indexMenu</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="68">UINT</name></type> <name pos:line="113" pos:column="73">idCmdFirst</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="85">UINT</name></type> <name pos:line="113" pos:column="90">idCmdLast</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="101">UINT</name></type> <name pos:line="113" pos:column="106">uFlags</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="114" pos:column="9">STDMETHODIMP</name></type> <name pos:line="114" pos:column="22">InvokeCommand</name><parameter_list pos:line="114" pos:column="35">(<param><decl><type><name pos:line="114" pos:column="36">LPCMINVOKECOMMANDINFO</name></type> <name pos:line="114" pos:column="58">lpcmi</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="115" pos:column="9">STDMETHODIMP</name></type> <name pos:line="115" pos:column="22">GetCommandString</name><parameter_list pos:line="115" pos:column="38">(<param><decl><type><name pos:line="115" pos:column="39">UINT_PTR</name></type> <name pos:line="115" pos:column="48">idCmd</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="55">UINT</name></type> <name pos:line="115" pos:column="60">uFlags</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="68">UINT</name> <name pos:line="115" pos:column="73">FAR</name> <type:modifier pos:line="115" pos:column="77">*</type:modifier></type><name pos:line="115" pos:column="78">reserved</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="88">LPSTR</name></type> <name pos:line="115" pos:column="94">pszName</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="103">UINT</name></type> <name pos:line="115" pos:column="108">cchMax</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="116" pos:column="9">STDMETHODIMP</name></type> <name pos:line="116" pos:column="22">HandleMenuMsg</name><parameter_list pos:line="116" pos:column="35">(<param><decl><type><name pos:line="116" pos:column="36">UINT</name></type> <name pos:line="116" pos:column="41">uMsg</name></decl></param>, <param><decl><type><name pos:line="116" pos:column="47">WPARAM</name></type> <name pos:line="116" pos:column="54">wParam</name></decl></param>, <param><decl><type><name pos:line="116" pos:column="62">LPARAM</name></type> <name pos:line="116" pos:column="69">lParam</name></decl></param>)</parameter_list> <block pos:line="116" pos:column="77">{ <return pos:line="116" pos:column="79">return <expr><call><name pos:line="116" pos:column="86">HandleMenuMsg2</name><argument_list pos:line="116" pos:column="100">(<argument><expr><name pos:line="116" pos:column="101">uMsg</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="107">wParam</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="115">lParam</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="123">NULL</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function><empty_stmt pos:line="116" pos:column="131">;</empty_stmt>
	<function_decl><type><name pos:line="117" pos:column="9">STDMETHODIMP</name></type> <name pos:line="117" pos:column="22">HandleMenuMsg2</name><parameter_list pos:line="117" pos:column="36">(<param><decl><type><name pos:line="117" pos:column="37">UINT</name></type> <name pos:line="117" pos:column="42">uMsg</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="48">WPARAM</name></type> <name pos:line="117" pos:column="55">wParam</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="63">LPARAM</name></type> <name pos:line="117" pos:column="70">lParam</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="78">LRESULT</name> <type:modifier pos:line="117" pos:column="86">*</type:modifier></type><name pos:line="117" pos:column="87">plResult</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="119" pos:column="9">// *** IPersistFile methods ***</comment>
	<function><type><name pos:line="120" pos:column="9">STDMETHODIMP</name></type> <name pos:line="120" pos:column="22">GetClassID</name><parameter_list pos:line="120" pos:column="32">(<param><decl><type><name pos:line="120" pos:column="33">CLSID</name> <type:modifier pos:line="120" pos:column="39">*</type:modifier></type></decl></param>)</parameter_list>					<block pos:line="120" pos:column="81">{ <return pos:line="120" pos:column="83">return <expr><name pos:line="120" pos:column="90">E_NOTIMPL</name></expr>;</return> }</block></function><empty_stmt pos:line="120" pos:column="102">;</empty_stmt>
	<function><type><name pos:line="121" pos:column="9">STDMETHODIMP</name></type> <name pos:line="121" pos:column="22">IsDirty</name><parameter_list pos:line="121" pos:column="29">(<param><decl><type><name pos:line="121" pos:column="30">void</name></type></decl></param>)</parameter_list>									<block pos:line="121" pos:column="105">{ <return pos:line="121" pos:column="107">return <expr><name pos:line="121" pos:column="114">E_NOTIMPL</name></expr>;</return> }</block></function><empty_stmt pos:line="121" pos:column="126">;</empty_stmt>
	<function><type><name pos:line="122" pos:column="9">STDMETHODIMP</name></type> <name pos:line="122" pos:column="22">Save</name><parameter_list pos:line="122" pos:column="26">(<param><decl><type><name pos:line="122" pos:column="27">LPCOLESTR</name></type></decl></param>, <param><decl><type><name pos:line="122" pos:column="38">BOOL</name></type></decl></param>)</parameter_list>	<block pos:line="122" pos:column="49">{ <return pos:line="122" pos:column="51">return <expr><name pos:line="122" pos:column="58">E_NOTIMPL</name></expr>;</return> }</block></function><empty_stmt pos:line="122" pos:column="70">;</empty_stmt>
	<function><type><name pos:line="123" pos:column="9">STDMETHODIMP</name></type> <name pos:line="123" pos:column="22">SaveCompleted</name><parameter_list pos:line="123" pos:column="35">(<param><decl><type><name pos:line="123" pos:column="36">LPCOLESTR</name></type></decl></param>)</parameter_list>			<block pos:line="123" pos:column="65">{ <return pos:line="123" pos:column="67">return <expr><name pos:line="123" pos:column="74">E_NOTIMPL</name></expr>;</return> }</block></function><empty_stmt pos:line="123" pos:column="86">;</empty_stmt>
	<function><type><name pos:line="124" pos:column="9">STDMETHODIMP</name></type> <name pos:line="124" pos:column="22">GetCurFile</name><parameter_list pos:line="124" pos:column="32">(<param><decl><type><name pos:line="124" pos:column="33">LPOLESTR</name> <type:modifier pos:line="124" pos:column="42">*</type:modifier></type></decl></param>)</parameter_list>				<block pos:line="124" pos:column="73">{ <return pos:line="124" pos:column="75">return <expr><name pos:line="124" pos:column="82">E_NOTIMPL</name></expr>;</return> }</block></function><empty_stmt pos:line="124" pos:column="94">;</empty_stmt>
	<function_decl><type><name pos:line="125" pos:column="9">STDMETHODIMP</name></type> <name pos:line="125" pos:column="22">Load</name><parameter_list pos:line="125" pos:column="26">(<param><decl><type><name pos:line="125" pos:column="27">LPCOLESTR</name></type> <name pos:line="125" pos:column="37">pszFileName</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="50">DWORD</name></type> <name pos:line="125" pos:column="56">dwMode</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="127" pos:column="9">// *** IExtractIcon methods ***</comment>
	<function_decl><type><name pos:line="128" pos:column="9">STDMETHODIMP</name></type> <name pos:line="128" pos:column="22">GetIconLocation</name><parameter_list pos:line="128" pos:column="37">(<param><decl><type><name pos:line="128" pos:column="38">UINT</name></type> <name pos:line="128" pos:column="43">uFlags</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="51">LPTSTR</name></type> <name pos:line="128" pos:column="58">szIconFile</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="70">UINT</name></type> <name pos:line="128" pos:column="75">cchMax</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="83">int</name> <type:modifier pos:line="128" pos:column="87">*</type:modifier></type> <name pos:line="128" pos:column="89">piIndex</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="98">UINT</name> <type:modifier pos:line="128" pos:column="103">*</type:modifier></type> <name pos:line="128" pos:column="105">pwFlags</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="129" pos:column="9">STDMETHODIMP</name></type> <name pos:line="129" pos:column="22">Extract</name><parameter_list pos:line="129" pos:column="29">(<param><decl><type><name pos:line="129" pos:column="30">LPCTSTR</name></type> <name pos:line="129" pos:column="38">pszFile</name></decl></param>, <param><decl><type><name pos:line="129" pos:column="47">UINT</name></type> <name pos:line="129" pos:column="52">nIconIndex</name></decl></param>, <param><decl><type><name pos:line="129" pos:column="64">HICON</name> <type:modifier pos:line="129" pos:column="70">*</type:modifier></type> <name pos:line="129" pos:column="72">phiconLarge</name></decl></param>, <param><decl><type><name pos:line="129" pos:column="85">HICON</name> <type:modifier pos:line="129" pos:column="91">*</type:modifier></type> <name pos:line="129" pos:column="93">phiconSmall</name></decl></param>, <param><decl><type><name pos:line="129" pos:column="106">UINT</name></type> <name pos:line="129" pos:column="111">nIconSize</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>
</unit>
