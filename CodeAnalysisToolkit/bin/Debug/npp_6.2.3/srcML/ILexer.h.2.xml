<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\include\ILexer.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file ILexer.h
 ** Interface between Scintilla and lexers.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2010 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">ILEXER_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">ILEXER_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef</cpp:directive> <name pos:line="15" pos:column="8">_WIN32</name></cpp:ifdef>
	<cpp:define pos:line="16" pos:column="9">#<cpp:directive pos:line="16" pos:column="10">define</cpp:directive> <cpp:macro><name pos:line="16" pos:column="17">SCI_METHOD</name></cpp:macro> <cpp:value pos:line="16" pos:column="28">__stdcall</cpp:value></cpp:define>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else</cpp:directive></cpp:else>
	<cpp:define pos:line="18" pos:column="9">#<cpp:directive pos:line="18" pos:column="10">define</cpp:directive> <cpp:macro><name pos:line="18" pos:column="17">SCI_METHOD</name></cpp:macro></cpp:define>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif</cpp:directive></cpp:endif>

<enum pos:line="21" pos:column="1">enum <block pos:line="21" pos:column="6">{ <decl><name pos:line="21" pos:column="8">dvOriginal</name><init pos:line="21" pos:column="18">=<expr><lit:literal type="number" pos:line="21" pos:column="19">0</lit:literal></expr></init></decl> }</block>;</enum>

<class pos:line="23" pos:column="1">class <name pos:line="23" pos:column="7">IDocument</name> <block pos:line="23" pos:column="17">{<private type="default" pos:line="23" pos:column="18">
</private><public pos:line="24" pos:column="1">public:
	<function_decl><type><specifier pos:line="25" pos:column="9">virtual</specifier> <name pos:line="25" pos:column="17">int</name> <name pos:line="25" pos:column="21">SCI_METHOD</name></type> <name pos:line="25" pos:column="32">Version</name><parameter_list pos:line="25" pos:column="39">()</parameter_list> <specifier pos:line="25" pos:column="42">const</specifier> = <lit:literal type="number" pos:line="25" pos:column="50">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="26" pos:column="9">virtual</specifier> <name pos:line="26" pos:column="17">void</name> <name pos:line="26" pos:column="22">SCI_METHOD</name></type> <name pos:line="26" pos:column="33">SetErrorStatus</name><parameter_list pos:line="26" pos:column="47">(<param><decl><type><name pos:line="26" pos:column="48">int</name></type> <name pos:line="26" pos:column="52">status</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="26" pos:column="62">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="27" pos:column="9">virtual</specifier> <name pos:line="27" pos:column="17">int</name> <name pos:line="27" pos:column="21">SCI_METHOD</name></type> <name pos:line="27" pos:column="32">Length</name><parameter_list pos:line="27" pos:column="38">()</parameter_list> <specifier pos:line="27" pos:column="41">const</specifier> = <lit:literal type="number" pos:line="27" pos:column="49">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="28" pos:column="9">virtual</specifier> <name pos:line="28" pos:column="17">void</name> <name pos:line="28" pos:column="22">SCI_METHOD</name></type> <name pos:line="28" pos:column="33">GetCharRange</name><parameter_list pos:line="28" pos:column="45">(<param><decl><type><name pos:line="28" pos:column="46">char</name> <type:modifier pos:line="28" pos:column="51">*</type:modifier></type><name pos:line="28" pos:column="52">buffer</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="60">int</name></type> <name pos:line="28" pos:column="64">position</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="74">int</name></type> <name pos:line="28" pos:column="78">lengthRetrieve</name></decl></param>)</parameter_list> <specifier pos:line="28" pos:column="94">const</specifier> = <lit:literal type="number" pos:line="28" pos:column="102">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="29" pos:column="9">virtual</specifier> <name pos:line="29" pos:column="17">char</name> <name pos:line="29" pos:column="22">SCI_METHOD</name></type> <name pos:line="29" pos:column="33">StyleAt</name><parameter_list pos:line="29" pos:column="40">(<param><decl><type><name pos:line="29" pos:column="41">int</name></type> <name pos:line="29" pos:column="45">position</name></decl></param>)</parameter_list> <specifier pos:line="29" pos:column="55">const</specifier> = <lit:literal type="number" pos:line="29" pos:column="63">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="30" pos:column="9">virtual</specifier> <name pos:line="30" pos:column="17">int</name> <name pos:line="30" pos:column="21">SCI_METHOD</name></type> <name pos:line="30" pos:column="32">LineFromPosition</name><parameter_list pos:line="30" pos:column="48">(<param><decl><type><name pos:line="30" pos:column="49">int</name></type> <name pos:line="30" pos:column="53">position</name></decl></param>)</parameter_list> <specifier pos:line="30" pos:column="63">const</specifier> = <lit:literal type="number" pos:line="30" pos:column="71">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="31" pos:column="9">virtual</specifier> <name pos:line="31" pos:column="17">int</name> <name pos:line="31" pos:column="21">SCI_METHOD</name></type> <name pos:line="31" pos:column="32">LineStart</name><parameter_list pos:line="31" pos:column="41">(<param><decl><type><name pos:line="31" pos:column="42">int</name></type> <name pos:line="31" pos:column="46">line</name></decl></param>)</parameter_list> <specifier pos:line="31" pos:column="52">const</specifier> = <lit:literal type="number" pos:line="31" pos:column="60">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="32" pos:column="9">virtual</specifier> <name pos:line="32" pos:column="17">int</name> <name pos:line="32" pos:column="21">SCI_METHOD</name></type> <name pos:line="32" pos:column="32">GetLevel</name><parameter_list pos:line="32" pos:column="40">(<param><decl><type><name pos:line="32" pos:column="41">int</name></type> <name pos:line="32" pos:column="45">line</name></decl></param>)</parameter_list> <specifier pos:line="32" pos:column="51">const</specifier> = <lit:literal type="number" pos:line="32" pos:column="59">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="33" pos:column="9">virtual</specifier> <name pos:line="33" pos:column="17">int</name> <name pos:line="33" pos:column="21">SCI_METHOD</name></type> <name pos:line="33" pos:column="32">SetLevel</name><parameter_list pos:line="33" pos:column="40">(<param><decl><type><name pos:line="33" pos:column="41">int</name></type> <name pos:line="33" pos:column="45">line</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="51">int</name></type> <name pos:line="33" pos:column="55">level</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="33" pos:column="64">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="34" pos:column="9">virtual</specifier> <name pos:line="34" pos:column="17">int</name> <name pos:line="34" pos:column="21">SCI_METHOD</name></type> <name pos:line="34" pos:column="32">GetLineState</name><parameter_list pos:line="34" pos:column="44">(<param><decl><type><name pos:line="34" pos:column="45">int</name></type> <name pos:line="34" pos:column="49">line</name></decl></param>)</parameter_list> <specifier pos:line="34" pos:column="55">const</specifier> = <lit:literal type="number" pos:line="34" pos:column="63">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="35" pos:column="9">virtual</specifier> <name pos:line="35" pos:column="17">int</name> <name pos:line="35" pos:column="21">SCI_METHOD</name></type> <name pos:line="35" pos:column="32">SetLineState</name><parameter_list pos:line="35" pos:column="44">(<param><decl><type><name pos:line="35" pos:column="45">int</name></type> <name pos:line="35" pos:column="49">line</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="55">int</name></type> <name pos:line="35" pos:column="59">state</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="35" pos:column="68">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="36" pos:column="9">virtual</specifier> <name pos:line="36" pos:column="17">void</name> <name pos:line="36" pos:column="22">SCI_METHOD</name></type> <name pos:line="36" pos:column="33">StartStyling</name><parameter_list pos:line="36" pos:column="45">(<param><decl><type><name pos:line="36" pos:column="46">int</name></type> <name pos:line="36" pos:column="50">position</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="60">char</name></type> <name pos:line="36" pos:column="65">mask</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="36" pos:column="73">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="37" pos:column="9">virtual</specifier> <name pos:line="37" pos:column="17">bool</name> <name pos:line="37" pos:column="22">SCI_METHOD</name></type> <name pos:line="37" pos:column="33">SetStyleFor</name><parameter_list pos:line="37" pos:column="44">(<param><decl><type><name pos:line="37" pos:column="45">int</name></type> <name pos:line="37" pos:column="49">length</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="57">char</name></type> <name pos:line="37" pos:column="62">style</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="37" pos:column="71">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="38" pos:column="9">virtual</specifier> <name pos:line="38" pos:column="17">bool</name> <name pos:line="38" pos:column="22">SCI_METHOD</name></type> <name pos:line="38" pos:column="33">SetStyles</name><parameter_list pos:line="38" pos:column="42">(<param><decl><type><name pos:line="38" pos:column="43">int</name></type> <name pos:line="38" pos:column="47">length</name></decl></param>, <param><decl><type><specifier pos:line="38" pos:column="55">const</specifier> <name pos:line="38" pos:column="61">char</name> <type:modifier pos:line="38" pos:column="66">*</type:modifier></type><name pos:line="38" pos:column="67">styles</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="38" pos:column="77">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="39" pos:column="9">virtual</specifier> <name pos:line="39" pos:column="17">void</name> <name pos:line="39" pos:column="22">SCI_METHOD</name></type> <name pos:line="39" pos:column="33">DecorationSetCurrentIndicator</name><parameter_list pos:line="39" pos:column="62">(<param><decl><type><name pos:line="39" pos:column="63">int</name></type> <name pos:line="39" pos:column="67">indicator</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="39" pos:column="80">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="40" pos:column="9">virtual</specifier> <name pos:line="40" pos:column="17">void</name> <name pos:line="40" pos:column="22">SCI_METHOD</name></type> <name pos:line="40" pos:column="33">DecorationFillRange</name><parameter_list pos:line="40" pos:column="52">(<param><decl><type><name pos:line="40" pos:column="53">int</name></type> <name pos:line="40" pos:column="57">position</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="67">int</name></type> <name pos:line="40" pos:column="71">value</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="78">int</name></type> <name pos:line="40" pos:column="82">fillLength</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="40" pos:column="96">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="41" pos:column="9">virtual</specifier> <name pos:line="41" pos:column="17">void</name> <name pos:line="41" pos:column="22">SCI_METHOD</name></type> <name pos:line="41" pos:column="33">ChangeLexerState</name><parameter_list pos:line="41" pos:column="49">(<param><decl><type><name pos:line="41" pos:column="50">int</name></type> <name pos:line="41" pos:column="54">start</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="61">int</name></type> <name pos:line="41" pos:column="65">end</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="41" pos:column="72">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="42" pos:column="9">virtual</specifier> <name pos:line="42" pos:column="17">int</name> <name pos:line="42" pos:column="21">SCI_METHOD</name></type> <name pos:line="42" pos:column="32">CodePage</name><parameter_list pos:line="42" pos:column="40">()</parameter_list> <specifier pos:line="42" pos:column="43">const</specifier> = <lit:literal type="number" pos:line="42" pos:column="51">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="43" pos:column="9">virtual</specifier> <name pos:line="43" pos:column="17">bool</name> <name pos:line="43" pos:column="22">SCI_METHOD</name></type> <name pos:line="43" pos:column="33">IsDBCSLeadByte</name><parameter_list pos:line="43" pos:column="47">(<param><decl><type><name pos:line="43" pos:column="48">char</name></type> <name pos:line="43" pos:column="53">ch</name></decl></param>)</parameter_list> <specifier pos:line="43" pos:column="57">const</specifier> = <lit:literal type="number" pos:line="43" pos:column="65">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="44" pos:column="9">virtual</specifier> <specifier pos:line="44" pos:column="17">const</specifier> <name pos:line="44" pos:column="23">char</name> <type:modifier pos:line="44" pos:column="28">*</type:modifier> <name pos:line="44" pos:column="30">SCI_METHOD</name></type> <name pos:line="44" pos:column="41">BufferPointer</name><parameter_list pos:line="44" pos:column="54">()</parameter_list> = <lit:literal type="number" pos:line="44" pos:column="59">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="45" pos:column="9">virtual</specifier> <name pos:line="45" pos:column="17">int</name> <name pos:line="45" pos:column="21">SCI_METHOD</name></type> <name pos:line="45" pos:column="32">GetLineIndentation</name><parameter_list pos:line="45" pos:column="50">(<param><decl><type><name pos:line="45" pos:column="51">int</name></type> <name pos:line="45" pos:column="55">line</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="45" pos:column="63">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<enum pos:line="48" pos:column="1">enum <block pos:line="48" pos:column="6">{ <decl><name pos:line="48" pos:column="8">lvOriginal</name><init pos:line="48" pos:column="18">=<expr><lit:literal type="number" pos:line="48" pos:column="19">0</lit:literal></expr></init></decl> }</block>;</enum>

<class pos:line="50" pos:column="1">class <name pos:line="50" pos:column="7">ILexer</name> <block pos:line="50" pos:column="14">{<private type="default" pos:line="50" pos:column="15">
</private><public pos:line="51" pos:column="1">public:
	<function_decl><type><specifier pos:line="52" pos:column="9">virtual</specifier> <name pos:line="52" pos:column="17">int</name> <name pos:line="52" pos:column="21">SCI_METHOD</name></type> <name pos:line="52" pos:column="32">Version</name><parameter_list pos:line="52" pos:column="39">()</parameter_list> <specifier pos:line="52" pos:column="42">const</specifier> = <lit:literal type="number" pos:line="52" pos:column="50">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="53" pos:column="9">virtual</specifier> <name pos:line="53" pos:column="17">void</name> <name pos:line="53" pos:column="22">SCI_METHOD</name></type> <name pos:line="53" pos:column="33">Release</name><parameter_list pos:line="53" pos:column="40">()</parameter_list> = <lit:literal type="number" pos:line="53" pos:column="45">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="54" pos:column="9">virtual</specifier> <specifier pos:line="54" pos:column="17">const</specifier> <name pos:line="54" pos:column="23">char</name> <type:modifier pos:line="54" pos:column="28">*</type:modifier> <name pos:line="54" pos:column="30">SCI_METHOD</name></type> <name pos:line="54" pos:column="41">PropertyNames</name><parameter_list pos:line="54" pos:column="54">()</parameter_list> = <lit:literal type="number" pos:line="54" pos:column="59">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="55" pos:column="9">virtual</specifier> <name pos:line="55" pos:column="17">int</name> <name pos:line="55" pos:column="21">SCI_METHOD</name></type> <name pos:line="55" pos:column="32">PropertyType</name><parameter_list pos:line="55" pos:column="44">(<param><decl><type><specifier pos:line="55" pos:column="45">const</specifier> <name pos:line="55" pos:column="51">char</name> <type:modifier pos:line="55" pos:column="56">*</type:modifier></type><name pos:line="55" pos:column="57">name</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="55" pos:column="65">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="56" pos:column="9">virtual</specifier> <specifier pos:line="56" pos:column="17">const</specifier> <name pos:line="56" pos:column="23">char</name> <type:modifier pos:line="56" pos:column="28">*</type:modifier> <name pos:line="56" pos:column="30">SCI_METHOD</name></type> <name pos:line="56" pos:column="41">DescribeProperty</name><parameter_list pos:line="56" pos:column="57">(<param><decl><type><specifier pos:line="56" pos:column="58">const</specifier> <name pos:line="56" pos:column="64">char</name> <type:modifier pos:line="56" pos:column="69">*</type:modifier></type><name pos:line="56" pos:column="70">name</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="56" pos:column="78">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="57" pos:column="9">virtual</specifier> <name pos:line="57" pos:column="17">int</name> <name pos:line="57" pos:column="21">SCI_METHOD</name></type> <name pos:line="57" pos:column="32">PropertySet</name><parameter_list pos:line="57" pos:column="43">(<param><decl><type><specifier pos:line="57" pos:column="44">const</specifier> <name pos:line="57" pos:column="50">char</name> <type:modifier pos:line="57" pos:column="55">*</type:modifier></type><name pos:line="57" pos:column="56">key</name></decl></param>, <param><decl><type><specifier pos:line="57" pos:column="61">const</specifier> <name pos:line="57" pos:column="67">char</name> <type:modifier pos:line="57" pos:column="72">*</type:modifier></type><name pos:line="57" pos:column="73">val</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="57" pos:column="80">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="58" pos:column="9">virtual</specifier> <specifier pos:line="58" pos:column="17">const</specifier> <name pos:line="58" pos:column="23">char</name> <type:modifier pos:line="58" pos:column="28">*</type:modifier> <name pos:line="58" pos:column="30">SCI_METHOD</name></type> <name pos:line="58" pos:column="41">DescribeWordListSets</name><parameter_list pos:line="58" pos:column="61">()</parameter_list> = <lit:literal type="number" pos:line="58" pos:column="66">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="59" pos:column="9">virtual</specifier> <name pos:line="59" pos:column="17">int</name> <name pos:line="59" pos:column="21">SCI_METHOD</name></type> <name pos:line="59" pos:column="32">WordListSet</name><parameter_list pos:line="59" pos:column="43">(<param><decl><type><name pos:line="59" pos:column="44">int</name></type> <name pos:line="59" pos:column="48">n</name></decl></param>, <param><decl><type><specifier pos:line="59" pos:column="51">const</specifier> <name pos:line="59" pos:column="57">char</name> <type:modifier pos:line="59" pos:column="62">*</type:modifier></type><name pos:line="59" pos:column="63">wl</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="59" pos:column="69">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="60" pos:column="9">virtual</specifier> <name pos:line="60" pos:column="17">void</name> <name pos:line="60" pos:column="22">SCI_METHOD</name></type> <name pos:line="60" pos:column="33">Lex</name><parameter_list pos:line="60" pos:column="36">(<param><decl><type><name pos:line="60" pos:column="37">unsigned</name> <name pos:line="60" pos:column="46">int</name></type> <name pos:line="60" pos:column="50">startPos</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="60">int</name></type> <name pos:line="60" pos:column="64">lengthDoc</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="75">int</name></type> <name pos:line="60" pos:column="79">initStyle</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="90">IDocument</name> <type:modifier pos:line="60" pos:column="100">*</type:modifier></type><name pos:line="60" pos:column="101">pAccess</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="60" pos:column="112">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="61" pos:column="9">virtual</specifier> <name pos:line="61" pos:column="17">void</name> <name pos:line="61" pos:column="22">SCI_METHOD</name></type> <name pos:line="61" pos:column="33">Fold</name><parameter_list pos:line="61" pos:column="37">(<param><decl><type><name pos:line="61" pos:column="38">unsigned</name> <name pos:line="61" pos:column="47">int</name></type> <name pos:line="61" pos:column="51">startPos</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="61">int</name></type> <name pos:line="61" pos:column="65">lengthDoc</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="76">int</name></type> <name pos:line="61" pos:column="80">initStyle</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="91">IDocument</name> <type:modifier pos:line="61" pos:column="101">*</type:modifier></type><name pos:line="61" pos:column="102">pAccess</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="61" pos:column="113">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="62" pos:column="9">virtual</specifier> <name pos:line="62" pos:column="17">void</name> <type:modifier pos:line="62" pos:column="22">*</type:modifier> <name pos:line="62" pos:column="24">SCI_METHOD</name></type> <name pos:line="62" pos:column="35">PrivateCall</name><parameter_list pos:line="62" pos:column="46">(<param><decl><type><name pos:line="62" pos:column="47">int</name></type> <name pos:line="62" pos:column="51">operation</name></decl></param>, <param><decl><type><name pos:line="62" pos:column="62">void</name> <type:modifier pos:line="62" pos:column="67">*</type:modifier></type><name pos:line="62" pos:column="68">pointer</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="62" pos:column="79">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifdef</cpp:directive> <name pos:line="65" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
