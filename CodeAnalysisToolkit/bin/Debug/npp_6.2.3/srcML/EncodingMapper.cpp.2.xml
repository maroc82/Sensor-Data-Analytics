<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\EncodingMapper.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"EncodingMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>

<comment type="line" pos:line="33" pos:column="1">// Don't change the order</comment>
<decl_stmt><decl><type><name pos:line="34" pos:column="1">EncodingUnit</name></type> <name><name pos:line="34" pos:column="14">encodings</name><index pos:line="34" pos:column="23">[]</index></name> <init pos:line="34" pos:column="26">= <expr><block pos:line="34" pos:column="28">{
    <expr><block pos:line="35" pos:column="5">{<expr><lit:literal type="number" pos:line="35" pos:column="6">1250</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="35" pos:column="13">"windows-1250"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="35" pos:column="97">//IDM_FORMAT_WIN_1250</comment>
    <expr><block pos:line="36" pos:column="5">{<expr><lit:literal type="number" pos:line="36" pos:column="6">1251</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="36" pos:column="13">"windows-1251"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="36" pos:column="97">//IDM_FORMAT_WIN_1251</comment>
    <expr><block pos:line="37" pos:column="5">{<expr><lit:literal type="number" pos:line="37" pos:column="6">1252</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="37" pos:column="13">"windows-1252"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="37" pos:column="97">//IDM_FORMAT_WIN_1252</comment>
    <expr><block pos:line="38" pos:column="5">{<expr><lit:literal type="number" pos:line="38" pos:column="6">1253</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="38" pos:column="13">"windows-1253"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="38" pos:column="97">//IDM_FORMAT_WIN_1253</comment>
    <expr><block pos:line="39" pos:column="5">{<expr><lit:literal type="number" pos:line="39" pos:column="6">1254</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="39" pos:column="13">"windows-1254"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="39" pos:column="97">//IDM_FORMAT_WIN_1254</comment>
    <expr><block pos:line="40" pos:column="5">{<expr><lit:literal type="number" pos:line="40" pos:column="6">1255</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="40" pos:column="13">"windows-1255"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="40" pos:column="97">//IDM_FORMAT_WIN_1255</comment>
    <expr><block pos:line="41" pos:column="5">{<expr><lit:literal type="number" pos:line="41" pos:column="6">1256</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="41" pos:column="13">"windows-1256"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="41" pos:column="97">//IDM_FORMAT_WIN_1256</comment>
    <expr><block pos:line="42" pos:column="5">{<expr><lit:literal type="number" pos:line="42" pos:column="6">1257</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="42" pos:column="13">"windows-1257"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="42" pos:column="97">//IDM_FORMAT_WIN_1257</comment>
    <expr><block pos:line="43" pos:column="5">{<expr><lit:literal type="number" pos:line="43" pos:column="6">1258</lit:literal></expr>,  <expr><lit:literal type="string" pos:line="43" pos:column="13">"windows-1258"</lit:literal></expr>}</block></expr>,                                                                    <comment type="line" pos:line="43" pos:column="97">//IDM_FORMAT_WIN_1258</comment>
    <expr><block pos:line="44" pos:column="5">{<expr><lit:literal type="number" pos:line="44" pos:column="6">28591</lit:literal></expr>, <expr><lit:literal type="string" pos:line="44" pos:column="13">"latin1 ISO_8859-1 ISO-8859-1 CP819 IBM819 csISOLatin1 iso-ir-100 l1"</lit:literal></expr>}</block></expr>,             <comment type="line" pos:line="44" pos:column="97">//IDM_FORMAT_ISO_8859_1 </comment>
    <expr><block pos:line="45" pos:column="5">{<expr><lit:literal type="number" pos:line="45" pos:column="6">28592</lit:literal></expr>, <expr><lit:literal type="string" pos:line="45" pos:column="13">"latin2 ISO_8859-2 ISO-8859-2 csISOLatin2 iso-ir-101 l2"</lit:literal></expr>}</block></expr>,                          <comment type="line" pos:line="45" pos:column="97">//IDM_FORMAT_ISO_8859_2 </comment>
    <expr><block pos:line="46" pos:column="5">{<expr><lit:literal type="number" pos:line="46" pos:column="6">28593</lit:literal></expr>, <expr><lit:literal type="string" pos:line="46" pos:column="13">"latin3 ISO_8859-3 ISO-8859-3 csISOLatin3 iso-ir-109 l3"</lit:literal></expr>}</block></expr>,                          <comment type="line" pos:line="46" pos:column="97">//IDM_FORMAT_ISO_8859_3 </comment>
    <expr><block pos:line="47" pos:column="5">{<expr><lit:literal type="number" pos:line="47" pos:column="6">28594</lit:literal></expr>, <expr><lit:literal type="string" pos:line="47" pos:column="13">"latin4 ISO_8859-4 ISO-8859-4 csISOLatin4 iso-ir-110 l4"</lit:literal></expr>}</block></expr>,                          <comment type="line" pos:line="47" pos:column="97">//IDM_FORMAT_ISO_8859_4 </comment>
    <expr><block pos:line="48" pos:column="5">{<expr><lit:literal type="number" pos:line="48" pos:column="6">28595</lit:literal></expr>, <expr><lit:literal type="string" pos:line="48" pos:column="13">"cyrillic ISO_8859-5 ISO-8859-5 csISOLatinCyrillic iso-ir-144"</lit:literal></expr>}</block></expr>,                    <comment type="line" pos:line="48" pos:column="97">//IDM_FORMAT_ISO_8859_5 </comment>
    <expr><block pos:line="49" pos:column="5">{<expr><lit:literal type="number" pos:line="49" pos:column="6">28596</lit:literal></expr>, <expr><lit:literal type="string" pos:line="49" pos:column="13">"arabic ISO_8859-6 ISO-8859-6 csISOLatinArabic iso-ir-127 ASMO-708 ECMA-114"</lit:literal></expr>}</block></expr>,      <comment type="line" pos:line="49" pos:column="97">//IDM_FORMAT_ISO_8859_6 </comment>
    <expr><block pos:line="50" pos:column="5">{<expr><lit:literal type="number" pos:line="50" pos:column="6">28597</lit:literal></expr>, <expr><lit:literal type="string" pos:line="50" pos:column="13">"greek ISO_8859-7 ISO-8859-7 csISOLatinGreek greek8 iso-ir-126 ELOT_928 ECMA-118"</lit:literal></expr>}</block></expr>, <comment type="line" pos:line="50" pos:column="97">//IDM_FORMAT_ISO_8859_7 </comment>
    <expr><block pos:line="51" pos:column="5">{<expr><lit:literal type="number" pos:line="51" pos:column="6">28598</lit:literal></expr>, <expr><lit:literal type="string" pos:line="51" pos:column="13">"hebrew ISO_8859-8 ISO-8859-8 csISOLatinHebrew iso-ir-138"</lit:literal></expr>}</block></expr>,                        <comment type="line" pos:line="51" pos:column="97">//IDM_FORMAT_ISO_8859_8 </comment>
    <expr><block pos:line="52" pos:column="5">{<expr><lit:literal type="number" pos:line="52" pos:column="6">28599</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="13">"latin5 ISO_8859-9 ISO-8859-9 csISOLatin5 iso-ir-148 l5"</lit:literal></expr>}</block></expr>,                          <comment type="line" pos:line="52" pos:column="97">//IDM_FORMAT_ISO_8859_9 </comment>
    <expr><block pos:line="53" pos:column="5">{<expr><lit:literal type="number" pos:line="53" pos:column="6">28600</lit:literal></expr>, <expr><lit:literal type="string" pos:line="53" pos:column="13">""</lit:literal></expr><comment type="block" pos:line="53" pos:column="15">/*"latin6 ISO_8859-10 ISO-8859-10 csISOLatin6 iso-ir-157 l6"*/</comment>}</block></expr>,                        <comment type="line" pos:line="53" pos:column="103">//IDM_FORMAT_ISO_8859_10</comment>
    <expr><block pos:line="54" pos:column="5">{<expr><lit:literal type="number" pos:line="54" pos:column="6">28601</lit:literal></expr>, <expr><lit:literal type="string" pos:line="54" pos:column="13">""</lit:literal></expr><comment type="block" pos:line="54" pos:column="15">/*"ISO_8859-11 ISO-8859-11"*/</comment>}</block></expr>,                                                         <comment type="line" pos:line="54" pos:column="103">//IDM_FORMAT_ISO_8859_11</comment>
    <expr><block pos:line="55" pos:column="5">{<expr><lit:literal type="number" pos:line="55" pos:column="6">28603</lit:literal></expr>, <expr><lit:literal type="string" pos:line="55" pos:column="13">"ISO_8859-13 ISO-8859-13"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="55" pos:column="97">//IDM_FORMAT_ISO_8859_13</comment>
    <expr><block pos:line="56" pos:column="5">{<expr><lit:literal type="number" pos:line="56" pos:column="6">28604</lit:literal></expr>, <expr><lit:literal type="string" pos:line="56" pos:column="13">"iso-celtic latin8 ISO_8859-14 ISO-8859-14 18 iso-ir-199"</lit:literal></expr>}</block></expr>,                         <comment type="line" pos:line="56" pos:column="97">//IDM_FORMAT_ISO_8859_14</comment>
    <expr><block pos:line="57" pos:column="5">{<expr><lit:literal type="number" pos:line="57" pos:column="6">28605</lit:literal></expr>, <expr><lit:literal type="string" pos:line="57" pos:column="13">"Latin-9 ISO_8859-15 ISO-8859-15"</lit:literal></expr>}</block></expr>,                                                 <comment type="line" pos:line="57" pos:column="97">//IDM_FORMAT_ISO_8859_15</comment>
    <expr><block pos:line="58" pos:column="5">{<expr><lit:literal type="number" pos:line="58" pos:column="6">28606</lit:literal></expr>, <expr><lit:literal type="string" pos:line="58" pos:column="13">""</lit:literal></expr><comment type="block" pos:line="58" pos:column="15">/*"latin10 ISO_8859-16 ISO-8859-16 110 iso-ir-226"*/</comment>}</block></expr>,                                  <comment type="line" pos:line="58" pos:column="103">//IDM_FORMAT_ISO_8859_16</comment>
    <expr><block pos:line="59" pos:column="5">{<expr><lit:literal type="number" pos:line="59" pos:column="6">437</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="59" pos:column="13">"IBM437 cp437 437 csPC8CodePage437"</lit:literal></expr>}</block></expr>,                                               <comment type="line" pos:line="59" pos:column="97">//IDM_FORMAT_DOS_437</comment>
    <expr><block pos:line="60" pos:column="5">{<expr><lit:literal type="number" pos:line="60" pos:column="6">720</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="60" pos:column="13">"IBM720 cp720 oem720 720"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="60" pos:column="97">//IDM_FORMAT_DOS_720</comment>
    <expr><block pos:line="61" pos:column="5">{<expr><lit:literal type="number" pos:line="61" pos:column="6">737</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="61" pos:column="13">"IBM737 cp737 oem737 737"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="61" pos:column="97">//IDM_FORMAT_DOS_737</comment>
    <expr><block pos:line="62" pos:column="5">{<expr><lit:literal type="number" pos:line="62" pos:column="6">775</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="62" pos:column="13">"IBM775 cp775 oem775 775"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="62" pos:column="97">//IDM_FORMAT_DOS_775</comment>
    <expr><block pos:line="63" pos:column="5">{<expr><lit:literal type="number" pos:line="63" pos:column="6">850</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="63" pos:column="13">"IBM850 cp850 oem850 850"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="63" pos:column="97">//IDM_FORMAT_DOS_850</comment>
    <expr><block pos:line="64" pos:column="5">{<expr><lit:literal type="number" pos:line="64" pos:column="6">852</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="64" pos:column="13">"IBM852 cp852 oem852 852"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="64" pos:column="97">//IDM_FORMAT_DOS_852</comment>
    <expr><block pos:line="65" pos:column="5">{<expr><lit:literal type="number" pos:line="65" pos:column="6">855</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="65" pos:column="13">"IBM855 cp855 oem855 855 csIBM855"</lit:literal></expr>}</block></expr>,                                                <comment type="line" pos:line="65" pos:column="97">//IDM_FORMAT_DOS_855</comment>
    <expr><block pos:line="66" pos:column="5">{<expr><lit:literal type="number" pos:line="66" pos:column="6">857</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="66" pos:column="13">"IBM857 cp857 oem857 857"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="66" pos:column="97">//IDM_FORMAT_DOS_857</comment>
    <expr><block pos:line="67" pos:column="5">{<expr><lit:literal type="number" pos:line="67" pos:column="6">858</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="67" pos:column="13">"IBM858 cp858 oem858 858"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="67" pos:column="97">//IDM_FORMAT_DOS_858</comment>
    <expr><block pos:line="68" pos:column="5">{<expr><lit:literal type="number" pos:line="68" pos:column="6">860</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="68" pos:column="13">"IBM860 cp860 oem860 860"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="68" pos:column="97">//IDM_FORMAT_DOS_860</comment>
    <expr><block pos:line="69" pos:column="5">{<expr><lit:literal type="number" pos:line="69" pos:column="6">861</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="69" pos:column="13">"IBM861 cp861 oem861 861"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="69" pos:column="97">//IDM_FORMAT_DOS_861</comment>
    <expr><block pos:line="70" pos:column="5">{<expr><lit:literal type="number" pos:line="70" pos:column="6">862</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="70" pos:column="13">"IBM862 cp862 oem862 862"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="70" pos:column="97">//IDM_FORMAT_DOS_862</comment>
    <expr><block pos:line="71" pos:column="5">{<expr><lit:literal type="number" pos:line="71" pos:column="6">863</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="71" pos:column="13">"IBM863 cp863 oem863 863"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="71" pos:column="97">//IDM_FORMAT_DOS_863</comment>
    <expr><block pos:line="72" pos:column="5">{<expr><lit:literal type="number" pos:line="72" pos:column="6">865</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="72" pos:column="13">"IBM865 cp865 oem865 865"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="72" pos:column="97">//IDM_FORMAT_DOS_865</comment>
    <expr><block pos:line="73" pos:column="5">{<expr><lit:literal type="number" pos:line="73" pos:column="6">866</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="73" pos:column="13">"IBM866 cp866 oem866 866"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="73" pos:column="97">//IDM_FORMAT_DOS_866</comment>
    <expr><block pos:line="74" pos:column="5">{<expr><lit:literal type="number" pos:line="74" pos:column="6">869</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="74" pos:column="13">"IBM869 cp869 oem869 869"</lit:literal></expr>}</block></expr>,                                                         <comment type="line" pos:line="74" pos:column="97">//IDM_FORMAT_DOS_869</comment>
    <expr><block pos:line="75" pos:column="5">{<expr><lit:literal type="number" pos:line="75" pos:column="6">950</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="75" pos:column="13">"big5 csBig5"</lit:literal></expr>}</block></expr>,                                                                     <comment type="line" pos:line="75" pos:column="97">//IDM_FORMAT_BIG5</comment>
    <expr><block pos:line="76" pos:column="5">{<expr><lit:literal type="number" pos:line="76" pos:column="6">936</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="76" pos:column="13">"gb2312 gbk csGB2312"</lit:literal></expr>}</block></expr>,                                                             <comment type="line" pos:line="76" pos:column="97">//IDM_FORMAT_GB2312</comment>
    <expr><block pos:line="77" pos:column="5">{<expr><lit:literal type="number" pos:line="77" pos:column="6">932</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="77" pos:column="13">"Shift_JIS MS_Kanji csShiftJIS csWindows31J"</lit:literal></expr>}</block></expr>,                                      <comment type="line" pos:line="77" pos:column="97">//IDM_FORMAT_SHIFT_JIS</comment>
    <expr><block pos:line="78" pos:column="5">{<expr><lit:literal type="number" pos:line="78" pos:column="6">949</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="78" pos:column="13">"windows-949 korean"</lit:literal></expr>}</block></expr>,                                                              <comment type="line" pos:line="78" pos:column="97">//IDM_FORMAT_KOREAN_WIN</comment>
    <expr><block pos:line="79" pos:column="5">{<expr><lit:literal type="number" pos:line="79" pos:column="6">51949</lit:literal></expr>, <expr><lit:literal type="string" pos:line="79" pos:column="13">"euc-kr csEUCKR"</lit:literal></expr>}</block></expr>,                                                                  <comment type="line" pos:line="79" pos:column="97">//IDM_FORMAT_EUC_KR</comment>
    <expr><block pos:line="80" pos:column="5">{<expr><lit:literal type="number" pos:line="80" pos:column="6">874</lit:literal></expr>,   <expr><lit:literal type="string" pos:line="80" pos:column="13">"tis-620"</lit:literal></expr>}</block></expr>,                                                                         <comment type="line" pos:line="80" pos:column="97">//IDM_FORMAT_TIS_620</comment>
    <expr><block pos:line="81" pos:column="5">{<expr><lit:literal type="number" pos:line="81" pos:column="6">10007</lit:literal></expr>, <expr><lit:literal type="string" pos:line="81" pos:column="13">"x-mac-cyrillic xmaccyrillic"</lit:literal></expr>}</block></expr>,                                                     <comment type="line" pos:line="81" pos:column="97">//IDM_FORMAT_MAC_CYRILLIC</comment>
    <expr><block pos:line="82" pos:column="5">{<expr><lit:literal type="number" pos:line="82" pos:column="6">21866</lit:literal></expr>, <expr><lit:literal type="string" pos:line="82" pos:column="13">"koi8_u"</lit:literal></expr>}</block></expr>,                                                                          <comment type="line" pos:line="82" pos:column="97">//IDM_FORMAT_KOI8U_CYRILLIC</comment>
    <expr><block pos:line="83" pos:column="5">{<expr><lit:literal type="number" pos:line="83" pos:column="6">20866</lit:literal></expr>, <expr><lit:literal type="string" pos:line="83" pos:column="13">"koi8_r csKOI8R"</lit:literal></expr>}</block></expr>                                                                   <comment type="line" pos:line="83" pos:column="97">//IDM_FORMAT_KOI8R_CYRILLIC</comment>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="86" pos:column="1">EncodingMapper</name> <type:modifier pos:line="86" pos:column="16">*</type:modifier></type> <name><name pos:line="86" pos:column="18">EncodingMapper</name><op:operator pos:line="86" pos:column="32">::</op:operator><name pos:line="86" pos:column="34">_pSelf</name></name> <init pos:line="86" pos:column="41">= <expr><op:operator pos:line="86" pos:column="43">new</op:operator> <name pos:line="86" pos:column="47">EncodingMapper</name></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="88" pos:column="1">bool</name></type> <name pos:line="88" pos:column="6">isInListA</name><parameter_list pos:line="88" pos:column="15">(<param><decl><type><specifier pos:line="88" pos:column="16">const</specifier> <name pos:line="88" pos:column="22">char</name> <type:modifier pos:line="88" pos:column="27">*</type:modifier></type><name pos:line="88" pos:column="28">token</name></decl></param>, <param><decl><type><specifier pos:line="88" pos:column="35">const</specifier> <name pos:line="88" pos:column="41">char</name> <type:modifier pos:line="88" pos:column="46">*</type:modifier></type><name pos:line="88" pos:column="47">list</name></decl></param>)</parameter_list> <block pos:line="88" pos:column="53">{
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><op:operator pos:line="89" pos:column="13">(</op:operator><op:operator pos:line="89" pos:column="14">!</op:operator><name pos:line="89" pos:column="15">token</name><op:operator pos:line="89" pos:column="20">)</op:operator> <op:operator pos:line="89" pos:column="22">||</op:operator> <op:operator pos:line="89" pos:column="25">(</op:operator><op:operator pos:line="89" pos:column="26">!</op:operator><name pos:line="89" pos:column="27">list</name><op:operator pos:line="89" pos:column="31">)</op:operator></expr>)</condition><then pos:line="89" pos:column="33">
		<return pos:line="90" pos:column="17">return <expr><lit:literal type="boolean" pos:line="90" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="91" pos:column="9">char</name></type> <name><name pos:line="91" pos:column="14">word</name><index pos:line="91" pos:column="18">[<expr><lit:literal type="number" pos:line="91" pos:column="19">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">int</name></type> <name pos:line="92" pos:column="13">i</name> <init pos:line="92" pos:column="15">= <expr><lit:literal type="number" pos:line="92" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">int</name></type> <name pos:line="93" pos:column="13">j</name> <init pos:line="93" pos:column="15">= <expr><lit:literal type="number" pos:line="93" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="94" pos:column="9">for (<init pos:line="94" pos:column="14">;</init> <condition><expr><name pos:line="94" pos:column="16">i</name> <op:operator pos:line="94" pos:column="18">&lt;=</op:operator> <call><name pos:line="94" pos:column="21">int</name><argument_list pos:line="94" pos:column="24">(<argument><expr><call><name pos:line="94" pos:column="25">strlen</name><argument_list pos:line="94" pos:column="31">(<argument><expr><name pos:line="94" pos:column="32">list</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="94" pos:column="41">i</name><op:operator pos:line="94" pos:column="42">++</op:operator></expr></incr>)
	<block pos:line="95" pos:column="9">{
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><op:operator pos:line="96" pos:column="21">(</op:operator><name><name pos:line="96" pos:column="22">list</name><index pos:line="96" pos:column="26">[<expr><name pos:line="96" pos:column="27">i</name></expr>]</index></name> <op:operator pos:line="96" pos:column="30">==</op:operator> <lit:literal type="char" pos:line="96" pos:column="33">' '</lit:literal><op:operator pos:line="96" pos:column="36">)</op:operator><op:operator pos:line="96" pos:column="37">||</op:operator><op:operator pos:line="96" pos:column="39">(</op:operator><name><name pos:line="96" pos:column="40">list</name><index pos:line="96" pos:column="44">[<expr><name pos:line="96" pos:column="45">i</name></expr>]</index></name> <op:operator pos:line="96" pos:column="48">==</op:operator> <lit:literal type="char" pos:line="96" pos:column="51">'\0'</lit:literal><op:operator pos:line="96" pos:column="55">)</op:operator></expr>)</condition><then pos:line="96" pos:column="57">
		<block pos:line="97" pos:column="17">{
			<if pos:line="98" pos:column="25">if <condition pos:line="98" pos:column="28">(<expr><name pos:line="98" pos:column="29">j</name> <op:operator pos:line="98" pos:column="31">!=</op:operator> <lit:literal type="number" pos:line="98" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="98" pos:column="36">
			<block pos:line="99" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="100" pos:column="33">word</name><index pos:line="100" pos:column="37">[<expr><name pos:line="100" pos:column="38">j</name></expr>]</index></name> <op:operator pos:line="100" pos:column="41">=</op:operator> <lit:literal type="char" pos:line="100" pos:column="43">'\0'</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="101" pos:column="33">j</name> <op:operator pos:line="101" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="101" pos:column="37">0</lit:literal></expr>;</expr_stmt>
				
				<if pos:line="103" pos:column="33">if <condition pos:line="103" pos:column="36">(<expr><op:operator pos:line="103" pos:column="37">!</op:operator><call><name pos:line="103" pos:column="38">stricmp</name><argument_list pos:line="103" pos:column="45">(<argument><expr><name pos:line="103" pos:column="46">token</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="53">word</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="103" pos:column="59">
					<return pos:line="104" pos:column="41">return <expr><lit:literal type="boolean" pos:line="104" pos:column="48">true</lit:literal></expr>;</return></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="107" pos:column="17">else 
		<block pos:line="108" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="109" pos:column="25">word</name><index pos:line="109" pos:column="29">[<expr><name pos:line="109" pos:column="30">j</name></expr>]</index></name> <op:operator pos:line="109" pos:column="33">=</op:operator> <name><name pos:line="109" pos:column="35">list</name><index pos:line="109" pos:column="39">[<expr><name pos:line="109" pos:column="40">i</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="110" pos:column="25">j</name><op:operator pos:line="110" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<return pos:line="113" pos:column="9">return <expr><lit:literal type="boolean" pos:line="113" pos:column="16">false</lit:literal></expr>;</return>
}</block></function><empty_stmt pos:line="114" pos:column="2">;</empty_stmt>

<function><type><name pos:line="116" pos:column="1">int</name></type> <name><name pos:line="116" pos:column="5">EncodingMapper</name><op:operator pos:line="116" pos:column="19">::</op:operator><name pos:line="116" pos:column="21">getEncodingFromIndex</name></name><parameter_list pos:line="116" pos:column="41">(<param><decl><type><name pos:line="116" pos:column="42">int</name></type> <name pos:line="116" pos:column="46">index</name></decl></param>)</parameter_list> <specifier pos:line="116" pos:column="53">const</specifier>
<block pos:line="117" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">size_t</name></type> <name pos:line="118" pos:column="16">nbItem</name> <init pos:line="118" pos:column="23">= <expr><sizeof pos:line="118" pos:column="25">sizeof<argument_list pos:line="118" pos:column="31">(<argument><expr><name pos:line="118" pos:column="32">encodings</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="118" pos:column="42">/</op:operator><sizeof pos:line="118" pos:column="43">sizeof<argument_list pos:line="118" pos:column="49">(<argument><expr><name pos:line="118" pos:column="50">EncodingUnit</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">index</name> <argument_list pos:line="119" pos:column="19">&lt; <argument><expr><lit:literal type="number" pos:line="119" pos:column="21">0</lit:literal> <op:operator pos:line="119" pos:column="23">||</op:operator> <op:operator pos:line="119" pos:column="26">(</op:operator><name pos:line="119" pos:column="27">size_t</name><op:operator pos:line="119" pos:column="33">)</op:operator><name pos:line="119" pos:column="34">index</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="119" pos:column="41">=</op:operator> <name pos:line="119" pos:column="43">nbItem</name></expr>)</condition><then pos:line="119" pos:column="50">
		<return pos:line="120" pos:column="17">return <expr><op:operator pos:line="120" pos:column="24">-</op:operator><lit:literal type="number" pos:line="120" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<return pos:line="121" pos:column="9">return <expr><name><name pos:line="121" pos:column="16">encodings</name><index pos:line="121" pos:column="25">[<expr><name pos:line="121" pos:column="26">index</name></expr>]</index></name><op:operator pos:line="121" pos:column="32">.</op:operator><name pos:line="121" pos:column="33">_codePage</name></expr>;</return>
}</block></function>

<function><type><name pos:line="124" pos:column="1">int</name></type> <name><name pos:line="124" pos:column="5">EncodingMapper</name><op:operator pos:line="124" pos:column="19">::</op:operator><name pos:line="124" pos:column="21">getIndexFromEncoding</name></name><parameter_list pos:line="124" pos:column="41">(<param><decl><type><name pos:line="124" pos:column="42">int</name></type> <name pos:line="124" pos:column="46">encoding</name></decl></param>)</parameter_list> <specifier pos:line="124" pos:column="56">const</specifier>
<block pos:line="125" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="126" pos:column="9">bool</name></type> <name pos:line="126" pos:column="14">found</name> <init pos:line="126" pos:column="20">= <expr><lit:literal type="boolean" pos:line="126" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="127" pos:column="9">size_t</name></type> <name pos:line="127" pos:column="16">nbItem</name> <init pos:line="127" pos:column="23">= <expr><sizeof pos:line="127" pos:column="25">sizeof<argument_list pos:line="127" pos:column="31">(<argument><expr><name pos:line="127" pos:column="32">encodings</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="127" pos:column="42">/</op:operator><sizeof pos:line="127" pos:column="43">sizeof<argument_list pos:line="127" pos:column="49">(<argument><expr><name pos:line="127" pos:column="50">EncodingUnit</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">size_t</name></type> <name pos:line="128" pos:column="16">i</name> <init pos:line="128" pos:column="18">= <expr><lit:literal type="number" pos:line="128" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="129" pos:column="9">for ( <init pos:line="129" pos:column="15">;</init> <condition><expr><name pos:line="129" pos:column="17">i</name> <op:operator pos:line="129" pos:column="19">&lt;</op:operator> <name pos:line="129" pos:column="21">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="129" pos:column="30">i</name><op:operator pos:line="129" pos:column="31">++</op:operator></expr></incr>)
	<block pos:line="130" pos:column="9">{
		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name><name pos:line="131" pos:column="21">encodings</name><index pos:line="131" pos:column="30">[<expr><name pos:line="131" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="131" pos:column="33">.</op:operator><name pos:line="131" pos:column="34">_codePage</name> <op:operator pos:line="131" pos:column="44">==</op:operator> <name pos:line="131" pos:column="47">encoding</name></expr>)</condition><then pos:line="131" pos:column="56">
		<block pos:line="132" pos:column="17">{
			<expr_stmt><expr><name pos:line="133" pos:column="25">found</name> <op:operator pos:line="133" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="133" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="134" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<return pos:line="137" pos:column="9">return <expr><name pos:line="137" pos:column="16">found</name><op:operator pos:line="137" pos:column="21">?</op:operator><name pos:line="137" pos:column="22">i</name><op:operator pos:line="137" pos:column="23">:</op:operator><op:operator pos:line="137" pos:column="24">-</op:operator><lit:literal type="number" pos:line="137" pos:column="25">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="140" pos:column="1">int</name></type> <name><name pos:line="140" pos:column="5">EncodingMapper</name><op:operator pos:line="140" pos:column="19">::</op:operator><name pos:line="140" pos:column="21">getEncodingFromString</name></name><parameter_list pos:line="140" pos:column="42">(<param><decl><type><specifier pos:line="140" pos:column="43">const</specifier> <name pos:line="140" pos:column="49">char</name> <type:modifier pos:line="140" pos:column="54">*</type:modifier></type><name pos:line="140" pos:column="55">encodingAlias</name></decl></param>)</parameter_list> <specifier pos:line="140" pos:column="70">const</specifier>
<block pos:line="141" pos:column="1">{
    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><call><name pos:line="142" pos:column="9">isInListA</name><argument_list pos:line="142" pos:column="18">(<argument><expr><name pos:line="142" pos:column="19">encodingAlias</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="142" pos:column="34">"utf-8 utf8"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="142" pos:column="48">
        <return pos:line="143" pos:column="9">return <expr><name pos:line="143" pos:column="16">SC_CP_UTF8</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="145" pos:column="9">size_t</name></type> <name pos:line="145" pos:column="16">nbItem</name> <init pos:line="145" pos:column="23">= <expr><sizeof pos:line="145" pos:column="25">sizeof<argument_list pos:line="145" pos:column="31">(<argument><expr><name pos:line="145" pos:column="32">encodings</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="145" pos:column="42">/</op:operator><sizeof pos:line="145" pos:column="43">sizeof<argument_list pos:line="145" pos:column="49">(<argument><expr><name pos:line="145" pos:column="50">EncodingUnit</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="146" pos:column="9">int</name></type> <name pos:line="146" pos:column="13">enc</name> <init pos:line="146" pos:column="17">= <expr><op:operator pos:line="146" pos:column="19">-</op:operator><lit:literal type="number" pos:line="146" pos:column="20">1</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="147" pos:column="9">for (<init><decl><type><name pos:line="147" pos:column="14">size_t</name></type> <name pos:line="147" pos:column="21">i</name> <init pos:line="147" pos:column="23">= <expr><lit:literal type="number" pos:line="147" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="147" pos:column="29">i</name> <op:operator pos:line="147" pos:column="31">&lt;</op:operator> <name pos:line="147" pos:column="33">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="147" pos:column="42">i</name><op:operator pos:line="147" pos:column="43">++</op:operator></expr></incr>)
	<block pos:line="148" pos:column="9">{
		<if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><call><name pos:line="149" pos:column="21">isInListA</name><argument_list pos:line="149" pos:column="30">(<argument><expr><name pos:line="149" pos:column="31">encodingAlias</name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="46">encodings</name><index pos:line="149" pos:column="55">[<expr><name pos:line="149" pos:column="56">i</name></expr>]</index></name><op:operator pos:line="149" pos:column="58">.</op:operator><name pos:line="149" pos:column="59">_aliasList</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="149" pos:column="71">
		<block pos:line="150" pos:column="17">{
			<expr_stmt><expr><name pos:line="151" pos:column="25">enc</name> <op:operator pos:line="151" pos:column="29">=</op:operator> <name><name pos:line="151" pos:column="31">encodings</name><index pos:line="151" pos:column="40">[<expr><name pos:line="151" pos:column="41">i</name></expr>]</index></name><op:operator pos:line="151" pos:column="43">.</op:operator><name pos:line="151" pos:column="44">_codePage</name></expr>;</expr_stmt>
			<break pos:line="152" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<return pos:line="155" pos:column="9">return <expr><name pos:line="155" pos:column="16">enc</name></expr>;</return>
}</block></function></unit>
