<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\Grid\ShortcutMapper.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">SHORTCUTMAPPER</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">SHORTCUTMAPPER</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">BABYGRIDWRAPPER</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"BabyGridWrapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif><comment type="line" pos:line="34" pos:column="7">// BABYGRIDWRAPPER</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">SHORTCUTMAPPER_RC_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"ShortcutMapper_rc.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//SHORTCUTMAPPER_RC_H</comment>

<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">SHORTCUTS_H</name></cpp:ifndef>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"shortcut.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif><comment type="line" pos:line="42" pos:column="7">// SHORTCUTS_H</comment>

<cpp:ifndef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifndef</cpp:directive> <name pos:line="44" pos:column="9">CONTEXTMENU</name></cpp:ifndef>
<cpp:include pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="45" pos:column="10">"ContextMenu.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif</cpp:directive></cpp:endif><comment type="line" pos:line="46" pos:column="7">// CONTEXTMENU</comment>

<enum pos:line="48" pos:column="1">enum <name pos:line="48" pos:column="6">GridState</name> <block pos:line="48" pos:column="16">{<decl><name pos:line="48" pos:column="17">STATE_MENU</name></decl><op:operator pos:line="48" pos:column="27">,</op:operator> <decl><name pos:line="48" pos:column="29">STATE_MACRO</name></decl><op:operator pos:line="48" pos:column="40">,</op:operator> <decl><name pos:line="48" pos:column="42">STATE_USER</name></decl><op:operator pos:line="48" pos:column="52">,</op:operator> <decl><name pos:line="48" pos:column="54">STATE_PLUGIN</name></decl><op:operator pos:line="48" pos:column="66">,</op:operator> <decl><name pos:line="48" pos:column="68">STATE_SCINTILLA</name></decl>}</block>;</enum>

<class pos:line="50" pos:column="1">class <name pos:line="50" pos:column="7">ShortcutMapper</name> <super pos:line="50" pos:column="22">: <specifier pos:line="50" pos:column="24">public</specifier> <name pos:line="50" pos:column="31">StaticDialog</name></super> <block pos:line="50" pos:column="44">{<private type="default" pos:line="50" pos:column="45">
</private><public pos:line="51" pos:column="1">public:
	<constructor><name pos:line="52" pos:column="9">ShortcutMapper</name><parameter_list pos:line="52" pos:column="23">()</parameter_list> <member_list pos:line="52" pos:column="26">: <call><name pos:line="52" pos:column="28">_currentState</name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">STATE_MENU</name></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="53">,</op:operator> <call><name pos:line="52" pos:column="55">StaticDialog</name><argument_list pos:line="52" pos:column="67">()</argument_list></call> </member_list><block pos:line="52" pos:column="70">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">generic_strncpy</name><argument_list pos:line="53" pos:column="32">(<argument><expr><name><name pos:line="53" pos:column="33">tabNames</name><index pos:line="53" pos:column="41">[<expr><lit:literal type="number" pos:line="53" pos:column="42">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="46">TEXT</name><argument_list pos:line="53" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="51">"Main menu"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">generic_strncpy</name><argument_list pos:line="54" pos:column="32">(<argument><expr><name><name pos:line="54" pos:column="33">tabNames</name><index pos:line="54" pos:column="41">[<expr><lit:literal type="number" pos:line="54" pos:column="42">1</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="46">TEXT</name><argument_list pos:line="54" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="51">"Macros"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="62">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">generic_strncpy</name><argument_list pos:line="55" pos:column="32">(<argument><expr><name><name pos:line="55" pos:column="33">tabNames</name><index pos:line="55" pos:column="41">[<expr><lit:literal type="number" pos:line="55" pos:column="42">2</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="46">TEXT</name><argument_list pos:line="55" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="51">"Run commands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="68">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">generic_strncpy</name><argument_list pos:line="56" pos:column="32">(<argument><expr><name><name pos:line="56" pos:column="33">tabNames</name><index pos:line="56" pos:column="41">[<expr><lit:literal type="number" pos:line="56" pos:column="42">3</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="46">TEXT</name><argument_list pos:line="56" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="51">"Plugin commands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="71">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">generic_strncpy</name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">tabNames</name><index pos:line="57" pos:column="41">[<expr><lit:literal type="number" pos:line="57" pos:column="42">4</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="46">TEXT</name><argument_list pos:line="57" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="51">"Scintilla commands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="74">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="58" pos:column="10">;</empty_stmt>
	<destructor><name pos:line="59" pos:column="9">~<name pos:line="59" pos:column="10">ShortcutMapper</name></name><parameter_list pos:line="59" pos:column="24">()</parameter_list> <block pos:line="59" pos:column="27">{}</block></destructor><empty_stmt pos:line="59" pos:column="29">;</empty_stmt>

	<function><type><name pos:line="61" pos:column="9">void</name></type> <name pos:line="61" pos:column="14">init</name><parameter_list pos:line="61" pos:column="18">(<param><decl><type><name pos:line="61" pos:column="19">HINSTANCE</name></type> <name pos:line="61" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="36">HWND</name></type> <name pos:line="61" pos:column="41">parent</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="49">GridState</name></type> <name pos:line="61" pos:column="59">initState</name> <init pos:line="61" pos:column="69">= <expr><name pos:line="61" pos:column="71">STATE_MENU</name></expr></init></decl></param>)</parameter_list> <block pos:line="61" pos:column="83">{
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">Window</name><op:operator pos:line="62" pos:column="15">::</op:operator><name pos:line="62" pos:column="17">init</name></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">_currentState</name> <op:operator pos:line="63" pos:column="23">=</op:operator> <name pos:line="63" pos:column="25">initState</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="64" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="66" pos:column="9">void</name></type> <name pos:line="66" pos:column="14">destroy</name><parameter_list pos:line="66" pos:column="21">()</parameter_list> <block pos:line="66" pos:column="24">{}</block></function><empty_stmt pos:line="66" pos:column="26">;</empty_stmt>
	<function><type><name pos:line="67" pos:column="9">void</name></type> <name pos:line="67" pos:column="14">doDialog</name><parameter_list pos:line="67" pos:column="22">(<param><decl><type><name pos:line="67" pos:column="23">bool</name></type> <name pos:line="67" pos:column="28">isRTL</name> <init pos:line="67" pos:column="34">= <expr><lit:literal type="boolean" pos:line="67" pos:column="36">false</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="67" pos:column="43">{
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">isRTL</name></expr>)</condition><then pos:line="68" pos:column="27">
		<block pos:line="69" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="70" pos:column="25">DLGTEMPLATE</name> <type:modifier pos:line="70" pos:column="37">*</type:modifier></type><name pos:line="70" pos:column="38">pMyDlgTemplate</name> <init pos:line="70" pos:column="53">= <expr><name pos:line="70" pos:column="55">NULL</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="71" pos:column="25">HGLOBAL</name></type> <name pos:line="71" pos:column="33">hMyDlgTemplate</name> <init pos:line="71" pos:column="48">= <expr><call><name pos:line="71" pos:column="50">makeRTLResource</name><argument_list pos:line="71" pos:column="65">(<argument><expr><name pos:line="71" pos:column="66">IDD_SHORTCUTMAPPER_DLG</name></expr></argument>, <argument><expr><op:operator pos:line="71" pos:column="90">&amp;</op:operator><name pos:line="71" pos:column="91">pMyDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="72" pos:column="25">::</op:operator><name pos:line="72" pos:column="27">DialogBoxIndirectParam</name></name><argument_list pos:line="72" pos:column="49">(<argument><expr><name pos:line="72" pos:column="50">_hInst</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="58">pMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="74">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="72" pos:column="85">(</op:operator><name pos:line="72" pos:column="86">DLGPROC</name><op:operator pos:line="72" pos:column="93">)</op:operator><name pos:line="72" pos:column="94">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="72" pos:column="103">(</op:operator><name pos:line="72" pos:column="104">LPARAM</name><op:operator pos:line="72" pos:column="110">)</op:operator><name pos:line="72" pos:column="111">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="73" pos:column="25">::</op:operator><name pos:line="73" pos:column="27">GlobalFree</name></name><argument_list pos:line="73" pos:column="37">(<argument><expr><name pos:line="73" pos:column="38">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="75" pos:column="17">else
			<expr_stmt><expr><call><name><op:operator pos:line="76" pos:column="25">::</op:operator><name pos:line="76" pos:column="27">DialogBoxParam</name></name><argument_list pos:line="76" pos:column="41">(<argument><expr><name pos:line="76" pos:column="42">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="50">MAKEINTRESOURCE</name><argument_list pos:line="76" pos:column="65">(<argument><expr><name pos:line="76" pos:column="66">IDD_SHORTCUTMAPPER_DLG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="76" pos:column="91">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="76" pos:column="101">(</op:operator><name pos:line="76" pos:column="102">DLGPROC</name><op:operator pos:line="76" pos:column="109">)</op:operator><name pos:line="76" pos:column="110">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="76" pos:column="119">(</op:operator><name pos:line="76" pos:column="120">LPARAM</name><op:operator pos:line="76" pos:column="126">)</op:operator><name pos:line="76" pos:column="127">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></function><empty_stmt pos:line="77" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="78" pos:column="9">void</name></type> <name pos:line="78" pos:column="14">getClientRect</name><parameter_list pos:line="78" pos:column="27">(<param><decl><type><name pos:line="78" pos:column="28">RECT</name> <type:modifier pos:line="78" pos:column="33">&amp;</type:modifier></type> <name pos:line="78" pos:column="35">rc</name></decl></param>)</parameter_list> <specifier pos:line="78" pos:column="39">const</specifier> <block pos:line="78" pos:column="45">{
		<expr_stmt><expr><call><name><name pos:line="79" pos:column="17">Window</name><op:operator pos:line="79" pos:column="23">::</op:operator><name pos:line="79" pos:column="25">getClientRect</name></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name pos:line="79" pos:column="39">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="80" pos:column="17">rc</name><op:operator pos:line="80" pos:column="19">.</op:operator><name pos:line="80" pos:column="20">top</name></name> <op:operator pos:line="80" pos:column="24">+=</op:operator> <lit:literal type="number" pos:line="80" pos:column="27">40</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="81" pos:column="17">rc</name><op:operator pos:line="81" pos:column="19">.</op:operator><name pos:line="81" pos:column="20">bottom</name></name> <op:operator pos:line="81" pos:column="27">-=</op:operator> <lit:literal type="number" pos:line="81" pos:column="30">20</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="82" pos:column="17">rc</name><op:operator pos:line="82" pos:column="19">.</op:operator><name pos:line="82" pos:column="20">left</name></name> <op:operator pos:line="82" pos:column="25">+=</op:operator> <lit:literal type="number" pos:line="82" pos:column="28">5</lit:literal></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="83" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="85" pos:column="9">void</name></type> <name pos:line="85" pos:column="14">translateTab</name><parameter_list pos:line="85" pos:column="26">(<param><decl><type><name pos:line="85" pos:column="27">int</name></type> <name pos:line="85" pos:column="31">index</name></decl></param>, <param><decl><type><specifier pos:line="85" pos:column="38">const</specifier> <name pos:line="85" pos:column="44">TCHAR</name> <type:modifier pos:line="85" pos:column="50">*</type:modifier></type> <name pos:line="85" pos:column="52">newname</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="87" pos:column="1">protected :
	<function_decl><type><name pos:line="88" pos:column="9">BOOL</name> <name pos:line="88" pos:column="14">CALLBACK</name></type> <name pos:line="88" pos:column="23">run_dlgProc</name><parameter_list pos:line="88" pos:column="34">(<param><decl><type><name pos:line="88" pos:column="35">UINT</name></type> <name pos:line="88" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="49">WPARAM</name></type> <name pos:line="88" pos:column="56">wParam</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="64">LPARAM</name></type> <name pos:line="88" pos:column="71">lParam</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="90" pos:column="1">private:
	<decl_stmt><decl><type><specifier pos:line="91" pos:column="9">static</specifier> <specifier pos:line="91" pos:column="16">const</specifier> <name pos:line="91" pos:column="22">int</name></type> <name pos:line="91" pos:column="26">maxTabName</name> <init pos:line="91" pos:column="37">= <expr><lit:literal type="number" pos:line="91" pos:column="39">64</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">BabyGridWrapper</name></type> <name pos:line="92" pos:column="25">_babygrid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">ContextMenu</name></type> <name pos:line="93" pos:column="21">_rightClickMenu</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="95" pos:column="9">GridState</name></type> <name pos:line="95" pos:column="19">_currentState</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="96" pos:column="9">HWND</name></type> <name pos:line="96" pos:column="14">_hTabCtrl</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="98" pos:column="9">TCHAR</name></type> <name><name pos:line="98" pos:column="15">tabNames</name><index pos:line="98" pos:column="23">[<expr><lit:literal type="number" pos:line="98" pos:column="24">5</lit:literal></expr>]</index><index pos:line="98" pos:column="26">[<expr><name pos:line="98" pos:column="27">maxTabName</name></expr>]</index></name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="100" pos:column="9">void</name></type> <name pos:line="100" pos:column="14">initTabs</name><parameter_list pos:line="100" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="101" pos:column="9">void</name></type> <name pos:line="101" pos:column="14">initBabyGrid</name><parameter_list pos:line="101" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="102" pos:column="9">void</name></type> <name pos:line="102" pos:column="14">fillOutBabyGrid</name><parameter_list pos:line="102" pos:column="29">()</parameter_list>;</function_decl>
</private>}</block>;</class>

<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="105" pos:column="8">//SHORTCUTMAPPER</comment>
</unit>
