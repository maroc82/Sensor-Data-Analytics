<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\Notepad_plus.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"FileDialog.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"printer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"FileNameStringSplitter.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"lesDlgs.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="36" pos:column="10">"Utf8_16.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"regExtDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"RunDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ShortcutMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="40" pos:column="10">"preferenceDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"TaskListDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="42" pos:column="10">"xmlMatchedTagsHighlighter.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="43" pos:column="10">"EncodingMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="44" pos:column="10">"ansiCharPanel.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="45" pos:column="10">"clipboardHistoryPanel.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="46" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="47" pos:column="10">"ProjectPanel.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="48" pos:column="10">"documentMap.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="49" pos:column="10">"functionListPanel.h"</lit:literal></cpp:file></cpp:include>

<enum pos:line="51" pos:column="1">enum <name pos:line="51" pos:column="6">tb_stat</name> <block pos:line="51" pos:column="14">{<decl><name pos:line="51" pos:column="15">tb_saved</name></decl><op:operator pos:line="51" pos:column="23">,</op:operator> <decl><name pos:line="51" pos:column="25">tb_unsaved</name></decl><op:operator pos:line="51" pos:column="35">,</op:operator> <decl><name pos:line="51" pos:column="37">tb_ro</name></decl>}</block>;</enum>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">DIR_LEFT</name></cpp:macro> <cpp:value pos:line="52" pos:column="18">true</cpp:value></cpp:define>
<cpp:define pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="53" pos:column="9">DIR_RIGHT</name></cpp:macro> <cpp:value pos:line="53" pos:column="19">false</cpp:value></cpp:define>

<cpp:define pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="55" pos:column="9">NPP_INTERNAL_FUCTION_STR</name></cpp:macro> <cpp:value pos:line="55" pos:column="34">TEXT("Notepad++::InternalFunction")</cpp:value></cpp:define>

<decl_stmt><decl><type><name pos:line="57" pos:column="1">int</name></type> <name><name pos:line="57" pos:column="5">docTabIconIDs</name><index pos:line="57" pos:column="18">[]</index></name> <init pos:line="57" pos:column="21">= <expr><block pos:line="57" pos:column="23">{<expr><name pos:line="57" pos:column="24">IDI_SAVED_ICON</name></expr>, <expr><name pos:line="57" pos:column="40">IDI_UNSAVED_ICON</name></expr>, <expr><name pos:line="57" pos:column="58">IDI_READONLY_ICON</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="59" pos:column="1">ToolBarButtonUnit</name></type> <name><name pos:line="59" pos:column="19">toolBarIcons</name><index pos:line="59" pos:column="31">[]</index></name> <init pos:line="59" pos:column="34">= <expr><block pos:line="59" pos:column="36">{
	<expr><block pos:line="60" pos:column="9">{<expr><name pos:line="60" pos:column="10">IDM_FILE_NEW</name></expr>,		<expr><name pos:line="60" pos:column="33">IDI_NEW_OFF_ICON</name></expr>,		<expr><name pos:line="60" pos:column="65">IDI_NEW_ON_ICON</name></expr>,		<expr><name pos:line="60" pos:column="97">IDI_NEW_OFF_ICON</name></expr>, <expr><name pos:line="60" pos:column="115">IDR_FILENEW</name></expr>}</block></expr>,
	<expr><block pos:line="61" pos:column="9">{<expr><name pos:line="61" pos:column="10">IDM_FILE_OPEN</name></expr>,		<expr><name pos:line="61" pos:column="33">IDI_OPEN_OFF_ICON</name></expr>,		<expr><name pos:line="61" pos:column="65">IDI_OPEN_ON_ICON</name></expr>,		<expr><name pos:line="61" pos:column="97">IDI_OPEN_OFF_ICON</name></expr>, <expr><name pos:line="61" pos:column="116">IDR_FILEOPEN</name></expr>}</block></expr>,
	<expr><block pos:line="62" pos:column="9">{<expr><name pos:line="62" pos:column="10">IDM_FILE_SAVE</name></expr>,		<expr><name pos:line="62" pos:column="33">IDI_SAVE_OFF_ICON</name></expr>,		<expr><name pos:line="62" pos:column="65">IDI_SAVE_ON_ICON</name></expr>,		<expr><name pos:line="62" pos:column="97">IDI_SAVE_DISABLE_ICON</name></expr>, <expr><name pos:line="62" pos:column="120">IDR_FILESAVE</name></expr>}</block></expr>,
	<expr><block pos:line="63" pos:column="9">{<expr><name pos:line="63" pos:column="10">IDM_FILE_SAVEALL</name></expr>,	<expr><name pos:line="63" pos:column="33">IDI_SAVEALL_OFF_ICON</name></expr>,	<expr><name pos:line="63" pos:column="57">IDI_SAVEALL_ON_ICON</name></expr>,	<expr><name pos:line="63" pos:column="81">IDI_SAVEALL_DISABLE_ICON</name></expr>, <expr><name pos:line="63" pos:column="107">IDR_SAVEALL</name></expr>}</block></expr>,
	<expr><block pos:line="64" pos:column="9">{<expr><name pos:line="64" pos:column="10">IDM_FILE_CLOSE</name></expr>,	<expr><name pos:line="64" pos:column="33">IDI_CLOSE_OFF_ICON</name></expr>,		<expr><name pos:line="64" pos:column="65">IDI_CLOSE_ON_ICON</name></expr>,		<expr><name pos:line="64" pos:column="97">IDI_CLOSE_OFF_ICON</name></expr>, <expr><name pos:line="64" pos:column="117">IDR_CLOSEFILE</name></expr>}</block></expr>,
	<expr><block pos:line="65" pos:column="9">{<expr><name pos:line="65" pos:column="10">IDM_FILE_CLOSEALL</name></expr>,	<expr><name pos:line="65" pos:column="33">IDI_CLOSEALL_OFF_ICON</name></expr>,	<expr><name pos:line="65" pos:column="57">IDI_CLOSEALL_ON_ICON</name></expr>,	<expr><name pos:line="65" pos:column="81">IDI_CLOSEALL_OFF_ICON</name></expr>, <expr><name pos:line="65" pos:column="104">IDR_CLOSEALL</name></expr>}</block></expr>,
	<expr><block pos:line="66" pos:column="9">{<expr><name pos:line="66" pos:column="10">IDM_FILE_PRINTNOW</name></expr>,	<expr><name pos:line="66" pos:column="33">IDI_PRINT_OFF_ICON</name></expr>,		<expr><name pos:line="66" pos:column="65">IDI_PRINT_ON_ICON</name></expr>,		<expr><name pos:line="66" pos:column="97">IDI_PRINT_OFF_ICON</name></expr>, <expr><name pos:line="66" pos:column="117">IDR_PRINT</name></expr>}</block></expr>,

	<comment type="line" pos:line="68" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="69" pos:column="9">{<expr><lit:literal type="number" pos:line="69" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="69" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="69" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="69" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="69" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="70" pos:column="9">//-------------------------------------------------------------------------------------//</comment>

	<expr><block pos:line="72" pos:column="9">{<expr><name pos:line="72" pos:column="10">IDM_EDIT_CUT</name></expr>,		<expr><name pos:line="72" pos:column="33">IDI_CUT_OFF_ICON</name></expr>,		<expr><name pos:line="72" pos:column="65">IDI_CUT_ON_ICON</name></expr>,		<expr><name pos:line="72" pos:column="97">IDI_CUT_DISABLE_ICON</name></expr>, <expr><name pos:line="72" pos:column="119">IDR_CUT</name></expr>}</block></expr>,
	<expr><block pos:line="73" pos:column="9">{<expr><name pos:line="73" pos:column="10">IDM_EDIT_COPY</name></expr>,		<expr><name pos:line="73" pos:column="33">IDI_COPY_OFF_ICON</name></expr>,		<expr><name pos:line="73" pos:column="65">IDI_COPY_ON_ICON</name></expr>,		<expr><name pos:line="73" pos:column="97">IDI_COPY_DISABLE_ICON</name></expr>, <expr><name pos:line="73" pos:column="120">IDR_COPY</name></expr>}</block></expr>,
	<expr><block pos:line="74" pos:column="9">{<expr><name pos:line="74" pos:column="10">IDM_EDIT_PASTE</name></expr>,	<expr><name pos:line="74" pos:column="33">IDI_PASTE_OFF_ICON</name></expr>,		<expr><name pos:line="74" pos:column="65">IDI_PASTE_ON_ICON</name></expr>,		<expr><name pos:line="74" pos:column="97">IDI_PASTE_DISABLE_ICON</name></expr>, <expr><name pos:line="74" pos:column="121">IDR_PASTE</name></expr>}</block></expr>,

	<comment type="line" pos:line="76" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="77" pos:column="9">{<expr><lit:literal type="number" pos:line="77" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="77" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="77" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="77" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="77" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="78" pos:column="9">//-------------------------------------------------------------------------------------//</comment>

	<expr><block pos:line="80" pos:column="9">{<expr><name pos:line="80" pos:column="10">IDM_EDIT_UNDO</name></expr>,		<expr><name pos:line="80" pos:column="33">IDI_UNDO_OFF_ICON</name></expr>,		<expr><name pos:line="80" pos:column="65">IDI_UNDO_ON_ICON</name></expr>,		<expr><name pos:line="80" pos:column="97">IDI_UNDO_DISABLE_ICON</name></expr>, <expr><name pos:line="80" pos:column="120">IDR_UNDO</name></expr>}</block></expr>,
	<expr><block pos:line="81" pos:column="9">{<expr><name pos:line="81" pos:column="10">IDM_EDIT_REDO</name></expr>,		<expr><name pos:line="81" pos:column="33">IDI_REDO_OFF_ICON</name></expr>,		<expr><name pos:line="81" pos:column="65">IDI_REDO_ON_ICON</name></expr>,		<expr><name pos:line="81" pos:column="97">IDI_REDO_DISABLE_ICON</name></expr>, <expr><name pos:line="81" pos:column="120">IDR_REDO</name></expr>}</block></expr>,
	<comment type="line" pos:line="82" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="83" pos:column="9">{<expr><lit:literal type="number" pos:line="83" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="83" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="83" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="83" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="83" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="84" pos:column="9">//-------------------------------------------------------------------------------------//</comment>

	<expr><block pos:line="86" pos:column="9">{<expr><name pos:line="86" pos:column="10">IDM_SEARCH_FIND</name></expr>,		<expr><name pos:line="86" pos:column="41">IDI_FIND_OFF_ICON</name></expr>,		<expr><name pos:line="86" pos:column="73">IDI_FIND_ON_ICON</name></expr>,		<expr><name pos:line="86" pos:column="105">IDI_FIND_OFF_ICON</name></expr>, <expr><name pos:line="86" pos:column="124">IDR_FIND</name></expr>}</block></expr>,
	<expr><block pos:line="87" pos:column="9">{<expr><name pos:line="87" pos:column="10">IDM_SEARCH_REPLACE</name></expr>,  <expr><name pos:line="87" pos:column="31">IDI_REPLACE_OFF_ICON</name></expr>,	<expr><name pos:line="87" pos:column="57">IDI_REPLACE_ON_ICON</name></expr>,	<expr><name pos:line="87" pos:column="81">IDI_REPLACE_OFF_ICON</name></expr>, <expr><name pos:line="87" pos:column="103">IDR_REPLACE</name></expr>}</block></expr>,

	<comment type="line" pos:line="89" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="90" pos:column="9">{<expr><lit:literal type="number" pos:line="90" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="90" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="90" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="90" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="90" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="91" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="92" pos:column="9">{<expr><name pos:line="92" pos:column="10">IDM_VIEW_ZOOMIN</name></expr>,	<expr><name pos:line="92" pos:column="33">IDI_ZOOMIN_OFF_ICON</name></expr>,	<expr><name pos:line="92" pos:column="57">IDI_ZOOMIN_ON_ICON</name></expr>,		<expr><name pos:line="92" pos:column="89">IDI_ZOOMIN_OFF_ICON</name></expr>, <expr><name pos:line="92" pos:column="110">IDR_ZOOMIN</name></expr>}</block></expr>,
	<expr><block pos:line="93" pos:column="9">{<expr><name pos:line="93" pos:column="10">IDM_VIEW_ZOOMOUT</name></expr>,	<expr><name pos:line="93" pos:column="33">IDI_ZOOMOUT_OFF_ICON</name></expr>,	<expr><name pos:line="93" pos:column="57">IDI_ZOOMOUT_ON_ICON</name></expr>,	<expr><name pos:line="93" pos:column="81">IDI_ZOOMOUT_OFF_ICON</name></expr>, <expr><name pos:line="93" pos:column="103">IDR_ZOOMOUT</name></expr>}</block></expr>,

	<comment type="line" pos:line="95" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="96" pos:column="9">{<expr><lit:literal type="number" pos:line="96" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="96" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="96" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="96" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="96" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="97" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="98" pos:column="9">{<expr><name pos:line="98" pos:column="10">IDM_VIEW_SYNSCROLLV</name></expr>,	<expr><name pos:line="98" pos:column="33">IDI_SYNCV_OFF_ICON</name></expr>,	<expr><name pos:line="98" pos:column="57">IDI_SYNCV_ON_ICON</name></expr>,	<expr><name pos:line="98" pos:column="81">IDI_SYNCV_DISABLE_ICON</name></expr>, <expr><name pos:line="98" pos:column="105">IDR_SYNCV</name></expr>}</block></expr>,
	<expr><block pos:line="99" pos:column="9">{<expr><name pos:line="99" pos:column="10">IDM_VIEW_SYNSCROLLH</name></expr>,	<expr><name pos:line="99" pos:column="33">IDI_SYNCH_OFF_ICON</name></expr>,	<expr><name pos:line="99" pos:column="57">IDI_SYNCH_ON_ICON</name></expr>,	<expr><name pos:line="99" pos:column="81">IDI_SYNCH_DISABLE_ICON</name></expr>, <expr><name pos:line="99" pos:column="105">IDR_SYNCH</name></expr>}</block></expr>,

	<comment type="line" pos:line="101" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="102" pos:column="9">{<expr><lit:literal type="number" pos:line="102" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="102" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="102" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="102" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="102" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="103" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="104" pos:column="9">{<expr><name pos:line="104" pos:column="10">IDM_VIEW_WRAP</name></expr>,  <expr><name pos:line="104" pos:column="26">IDI_VIEW_WRAP_OFF_ICON</name></expr>,	<expr><name pos:line="104" pos:column="57">IDI_VIEW_WRAP_ON_ICON</name></expr>,	<expr><name pos:line="104" pos:column="81">IDI_VIEW_WRAP_OFF_ICON</name></expr>, <expr><name pos:line="104" pos:column="105">IDR_WRAP</name></expr>}</block></expr>,
	<expr><block pos:line="105" pos:column="9">{<expr><name pos:line="105" pos:column="10">IDM_VIEW_ALL_CHARACTERS</name></expr>,  <expr><name pos:line="105" pos:column="36">IDI_VIEW_ALL_CHAR_OFF_ICON</name></expr>,	<expr><name pos:line="105" pos:column="65">IDI_VIEW_ALL_CHAR_ON_ICON</name></expr>,	<expr><name pos:line="105" pos:column="97">IDI_VIEW_ALL_CHAR_OFF_ICON</name></expr>, <expr><name pos:line="105" pos:column="125">IDR_INVISIBLECHAR</name></expr>}</block></expr>,
	<expr><block pos:line="106" pos:column="9">{<expr><name pos:line="106" pos:column="10">IDM_VIEW_INDENT_GUIDE</name></expr>,  <expr><name pos:line="106" pos:column="34">IDI_VIEW_INDENT_OFF_ICON</name></expr>,	<expr><name pos:line="106" pos:column="65">IDI_VIEW_INDENT_ON_ICON</name></expr>,	<expr><name pos:line="106" pos:column="97">IDI_VIEW_INDENT_OFF_ICON</name></expr>, <expr><name pos:line="106" pos:column="123">IDR_INDENTGUIDE</name></expr>}</block></expr>,
	<expr><block pos:line="107" pos:column="9">{<expr><name pos:line="107" pos:column="10">IDM_LANG_USER_DLG</name></expr>,  <expr><name pos:line="107" pos:column="30">IDI_VIEW_UD_DLG_OFF_ICON</name></expr>,	<expr><name pos:line="107" pos:column="57">IDI_VIEW_UD_DLG_ON_ICON</name></expr>,	<expr><name pos:line="107" pos:column="89">IDI_VIEW_UD_DLG_OFF_ICON</name></expr>, <expr><name pos:line="107" pos:column="115">IDR_SHOWPANNEL</name></expr>}</block></expr>,

	<comment type="line" pos:line="109" pos:column="9">//-------------------------------------------------------------------------------------//</comment>
	<expr><block pos:line="110" pos:column="9">{<expr><lit:literal type="number" pos:line="110" pos:column="10">0</lit:literal></expr>,					<expr><name pos:line="110" pos:column="49">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="110" pos:column="81">IDI_SEPARATOR_ICON</name></expr>,		<expr><name pos:line="110" pos:column="113">IDI_SEPARATOR_ICON</name></expr>, <expr><name pos:line="110" pos:column="133">IDI_SEPARATOR_ICON</name></expr>}</block></expr>,
	<comment type="line" pos:line="111" pos:column="9">//-------------------------------------------------------------------------------------//</comment>

	<expr><block pos:line="113" pos:column="9">{<expr><name pos:line="113" pos:column="10">IDM_MACRO_STARTRECORDINGMACRO</name></expr>,		<expr><name pos:line="113" pos:column="49">IDI_STARTRECORD_OFF_ICON</name></expr>,	<expr><name pos:line="113" pos:column="81">IDI_STARTRECORD_ON_ICON</name></expr>,	<expr><name pos:line="113" pos:column="113">IDI_STARTRECORD_DISABLE_ICON</name></expr>, <expr><name pos:line="113" pos:column="143">IDR_STARTRECORD</name></expr>}</block></expr>,
	<expr><block pos:line="114" pos:column="9">{<expr><name pos:line="114" pos:column="10">IDM_MACRO_STOPRECORDINGMACRO</name></expr>,		<expr><name pos:line="114" pos:column="49">IDI_STOPRECORD_OFF_ICON</name></expr>,	<expr><name pos:line="114" pos:column="81">IDI_STOPRECORD_ON_ICON</name></expr>,		<expr><name pos:line="114" pos:column="113">IDI_STOPRECORD_DISABLE_ICON</name></expr>, <expr><name pos:line="114" pos:column="142">IDR_STOPRECORD</name></expr>}</block></expr>,
	<expr><block pos:line="115" pos:column="9">{<expr><name pos:line="115" pos:column="10">IDM_MACRO_PLAYBACKRECORDEDMACRO</name></expr>,	<expr><name pos:line="115" pos:column="49">IDI_PLAYRECORD_OFF_ICON</name></expr>,	<expr><name pos:line="115" pos:column="81">IDI_PLAYRECORD_ON_ICON</name></expr>,		<expr><name pos:line="115" pos:column="113">IDI_PLAYRECORD_DISABLE_ICON</name></expr>, <expr><name pos:line="115" pos:column="142">IDR_PLAYRECORD</name></expr>}</block></expr>,
	<expr><block pos:line="116" pos:column="9">{<expr><name pos:line="116" pos:column="10">IDM_MACRO_RUNMULTIMACRODLG</name></expr>,			<expr><name pos:line="116" pos:column="57">IDI_MMPLAY_OFF_ICON</name></expr>,		<expr><name pos:line="116" pos:column="89">IDI_MMPLAY_ON_ICON</name></expr>,			<expr><name pos:line="116" pos:column="129">IDI_MMPLAY_DIS_ICON</name></expr>, <expr><name pos:line="116" pos:column="150">IDR_M_PLAYRECORD</name></expr>}</block></expr>,
	<expr><block pos:line="117" pos:column="9">{<expr><name pos:line="117" pos:column="10">IDM_MACRO_SAVECURRENTMACRO</name></expr>,			<expr><name pos:line="117" pos:column="57">IDI_SAVERECORD_OFF_ICON</name></expr>,	<expr><name pos:line="117" pos:column="89">IDI_SAVERECORD_ON_ICON</name></expr>,		<expr><name pos:line="117" pos:column="121">IDI_SAVERECORD_DISABLE_ICON</name></expr>, <expr><name pos:line="117" pos:column="150">IDR_SAVERECORD</name></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>


<constructor><name><name pos:line="122" pos:column="1">Notepad_plus</name><op:operator pos:line="122" pos:column="13">::</op:operator><name pos:line="122" pos:column="15">Notepad_plus</name></name><parameter_list pos:line="122" pos:column="27">()</parameter_list><member_list pos:line="122" pos:column="29">: <call><name pos:line="122" pos:column="31">_mainWindowStatus</name><argument_list pos:line="122" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="122" pos:column="49">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="122" pos:column="51">,</op:operator> <call><name pos:line="122" pos:column="53">_pDocTab</name><argument_list pos:line="122" pos:column="61">(<argument><expr><name pos:line="122" pos:column="62">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="122" pos:column="67">,</op:operator> <call><name pos:line="122" pos:column="69">_pEditView</name><argument_list pos:line="122" pos:column="79">(<argument><expr><name pos:line="122" pos:column="80">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="122" pos:column="85">,</op:operator>
	<call><name pos:line="123" pos:column="9">_pMainSplitter</name><argument_list pos:line="123" pos:column="23">(<argument><expr><name pos:line="123" pos:column="24">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="123" pos:column="29">,</op:operator>
    <call><name pos:line="124" pos:column="5">_recordingMacro</name><argument_list pos:line="124" pos:column="20">(<argument><expr><lit:literal type="boolean" pos:line="124" pos:column="21">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="124" pos:column="27">,</op:operator> <call><name pos:line="124" pos:column="29">_pTrayIco</name><argument_list pos:line="124" pos:column="38">(<argument><expr><name pos:line="124" pos:column="39">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="124" pos:column="44">,</op:operator> <call><name pos:line="124" pos:column="46">_isUDDocked</name><argument_list pos:line="124" pos:column="57">(<argument><expr><lit:literal type="boolean" pos:line="124" pos:column="58">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="124" pos:column="64">,</op:operator> <call><name pos:line="124" pos:column="66">_pFileSwitcherPanel</name><argument_list pos:line="124" pos:column="85">(<argument><expr><name pos:line="124" pos:column="86">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="124" pos:column="91">,</op:operator>
	<call><name pos:line="125" pos:column="9">_pProjectPanel_1</name><argument_list pos:line="125" pos:column="25">(<argument><expr><name pos:line="125" pos:column="26">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="31">,</op:operator> <call><name pos:line="125" pos:column="33">_pProjectPanel_2</name><argument_list pos:line="125" pos:column="49">(<argument><expr><name pos:line="125" pos:column="50">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="55">,</op:operator> <call><name pos:line="125" pos:column="57">_pProjectPanel_3</name><argument_list pos:line="125" pos:column="73">(<argument><expr><name pos:line="125" pos:column="74">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="79">,</op:operator> <call><name pos:line="125" pos:column="81">_pDocMap</name><argument_list pos:line="125" pos:column="89">(<argument><expr><name pos:line="125" pos:column="90">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="95">,</op:operator> <call><name pos:line="125" pos:column="97">_pFuncList</name><argument_list pos:line="125" pos:column="107">(<argument><expr><name pos:line="125" pos:column="108">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="113">,</op:operator>
	<call><name pos:line="126" pos:column="9">_linkTriggered</name><argument_list pos:line="126" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="126" pos:column="24">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="126" pos:column="29">,</op:operator> <call><name pos:line="126" pos:column="31">_isHotspotDblClicked</name><argument_list pos:line="126" pos:column="51">(<argument><expr><lit:literal type="boolean" pos:line="126" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="126" pos:column="58">,</op:operator> <call><name pos:line="126" pos:column="60">_isFolding</name><argument_list pos:line="126" pos:column="70">(<argument><expr><lit:literal type="boolean" pos:line="126" pos:column="71">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="126" pos:column="77">,</op:operator> 
	<call><name pos:line="127" pos:column="9">_sysMenuEntering</name><argument_list pos:line="127" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="127" pos:column="26">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="32">,</op:operator>
	<call><name pos:line="128" pos:column="9">_autoCompleteMain</name><argument_list pos:line="128" pos:column="26">(<argument><expr><op:operator pos:line="128" pos:column="27">&amp;</op:operator><name pos:line="128" pos:column="28">_mainEditView</name></expr></argument>)</argument_list></call><op:operator pos:line="128" pos:column="42">,</op:operator> <call><name pos:line="128" pos:column="44">_autoCompleteSub</name><argument_list pos:line="128" pos:column="60">(<argument><expr><op:operator pos:line="128" pos:column="61">&amp;</op:operator><name pos:line="128" pos:column="62">_subEditView</name></expr></argument>)</argument_list></call><op:operator pos:line="128" pos:column="75">,</op:operator> <call><name pos:line="128" pos:column="77">_smartHighlighter</name><argument_list pos:line="128" pos:column="94">(<argument><expr><op:operator pos:line="128" pos:column="95">&amp;</op:operator><name pos:line="128" pos:column="96">_findReplaceDlg</name></expr></argument>)</argument_list></call><op:operator pos:line="128" pos:column="112">,</op:operator>
	<call><name pos:line="129" pos:column="9">_isFileOpening</name><argument_list pos:line="129" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="129" pos:column="24">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="30">,</op:operator> <call><name pos:line="129" pos:column="32">_rememberThisSession</name><argument_list pos:line="129" pos:column="52">(<argument><expr><lit:literal type="boolean" pos:line="129" pos:column="53">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="58">,</op:operator> <call><name pos:line="129" pos:column="60">_pAnsiCharPanel</name><argument_list pos:line="129" pos:column="75">(<argument><expr><name pos:line="129" pos:column="76">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="81">,</op:operator> <call><name pos:line="129" pos:column="83">_pClipboardHistoryPanel</name><argument_list pos:line="129" pos:column="106">(<argument><expr><name pos:line="129" pos:column="107">NULL</name></expr></argument>)</argument_list></call>
</member_list><block pos:line="130" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="131" pos:column="9">ZeroMemory</name><argument_list pos:line="131" pos:column="19">(<argument><expr><op:operator pos:line="131" pos:column="20">&amp;</op:operator><name pos:line="131" pos:column="21">_prevSelectedRange</name></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="41">sizeof<argument_list pos:line="131" pos:column="47">(<argument><expr><name pos:line="131" pos:column="48">_prevSelectedRange</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<decl_stmt><decl><type><name pos:line="134" pos:column="9">TiXmlDocumentA</name> <type:modifier pos:line="134" pos:column="24">*</type:modifier></type><name pos:line="134" pos:column="25">nativeLangDocRootA</name> <init pos:line="134" pos:column="44">= <expr><op:operator pos:line="134" pos:column="46">(</op:operator><call><name><name pos:line="134" pos:column="47">NppParameters</name><op:operator pos:line="134" pos:column="60">::</op:operator><name pos:line="134" pos:column="62">getInstance</name></name><argument_list pos:line="134" pos:column="73">()</argument_list></call><op:operator pos:line="134" pos:column="75">)</op:operator><op:operator pos:line="134" pos:column="76">-&gt;</op:operator><call><name pos:line="134" pos:column="78">getNativeLangA</name><argument_list pos:line="134" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="135" pos:column="5">_nativeLangSpeaker</name><op:operator pos:line="135" pos:column="23">.</op:operator><name pos:line="135" pos:column="24">init</name></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">nativeLangDocRootA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">ifdef</cpp:directive> <name pos:line="136" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="137" pos:column="9">LocalizationSwitcher</name> <type:modifier pos:line="137" pos:column="30">&amp;</type:modifier></type> <name pos:line="137" pos:column="32">localizationSwitcher</name> <init pos:line="137" pos:column="53">= <expr><op:operator pos:line="137" pos:column="55">(</op:operator><call><name><name pos:line="137" pos:column="56">NppParameters</name><op:operator pos:line="137" pos:column="69">::</op:operator><name pos:line="137" pos:column="71">getInstance</name></name><argument_list pos:line="137" pos:column="82">()</argument_list></call><op:operator pos:line="137" pos:column="84">)</op:operator><op:operator pos:line="137" pos:column="85">-&gt;</op:operator><call><name pos:line="137" pos:column="87">getLocalizationSwitcher</name><argument_list pos:line="137" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="138" pos:column="5">const</specifier> <name pos:line="138" pos:column="11">char</name> <type:modifier pos:line="138" pos:column="16">*</type:modifier></type><name pos:line="138" pos:column="17">fn</name> <init pos:line="138" pos:column="20">= <expr><call><name><name pos:line="138" pos:column="22">_nativeLangSpeaker</name><op:operator pos:line="138" pos:column="40">.</op:operator><name pos:line="138" pos:column="41">getFileName</name></name><argument_list pos:line="138" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name pos:line="139" pos:column="9">fn</name></expr>)</condition><then pos:line="139" pos:column="12">
    <block pos:line="140" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="141" pos:column="9">localizationSwitcher</name><op:operator pos:line="141" pos:column="29">.</op:operator><name pos:line="141" pos:column="30">setFileName</name></name><argument_list pos:line="141" pos:column="41">(<argument><expr><name pos:line="141" pos:column="42">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><op:operator pos:line="145" pos:column="9">(</op:operator><call><name><name pos:line="145" pos:column="10">NppParameters</name><op:operator pos:line="145" pos:column="23">::</op:operator><name pos:line="145" pos:column="25">getInstance</name></name><argument_list pos:line="145" pos:column="36">()</argument_list></call><op:operator pos:line="145" pos:column="38">)</op:operator><op:operator pos:line="145" pos:column="39">-&gt;</op:operator><call><name pos:line="145" pos:column="41">setNativeLangSpeaker</name><argument_list pos:line="145" pos:column="61">(<argument><expr><op:operator pos:line="145" pos:column="62">&amp;</op:operator><name pos:line="145" pos:column="63">_nativeLangSpeaker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="147" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="147" pos:column="23">*</type:modifier></type><name pos:line="147" pos:column="24">toolIconsDocRoot</name> <init pos:line="147" pos:column="41">= <expr><op:operator pos:line="147" pos:column="43">(</op:operator><call><name><name pos:line="147" pos:column="44">NppParameters</name><op:operator pos:line="147" pos:column="57">::</op:operator><name pos:line="147" pos:column="59">getInstance</name></name><argument_list pos:line="147" pos:column="70">()</argument_list></call><op:operator pos:line="147" pos:column="72">)</op:operator><op:operator pos:line="147" pos:column="73">-&gt;</op:operator><call><name pos:line="147" pos:column="75">getToolIcons</name><argument_list pos:line="147" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">toolIconsDocRoot</name></expr>)</condition><then pos:line="149" pos:column="30">
	<block pos:line="150" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="151" pos:column="9">_toolBar</name><op:operator pos:line="151" pos:column="17">.</op:operator><name pos:line="151" pos:column="18">initTheme</name></name><argument_list pos:line="151" pos:column="27">(<argument><expr><name pos:line="151" pos:column="28">toolIconsDocRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
}</block></constructor>

<comment type="line" pos:line="155" pos:column="1">// ATTENTION : the order of the destruction is very important</comment>
<comment type="line" pos:line="156" pos:column="1">// because if the parent's window handle is destroyed before</comment>
<comment type="line" pos:line="157" pos:column="1">// the destruction of its children windows' handles,</comment>
<comment type="line" pos:line="158" pos:column="1">// its children windows' handles will be destroyed automatically!</comment>
<destructor><name><name pos:line="159" pos:column="1">Notepad_plus</name><op:operator pos:line="159" pos:column="13">::</op:operator>~<name pos:line="159" pos:column="16">Notepad_plus</name></name><parameter_list pos:line="159" pos:column="28">()</parameter_list>
<block pos:line="160" pos:column="1">{
	<expr_stmt><expr><op:operator pos:line="161" pos:column="9">(</op:operator><call><name><name pos:line="161" pos:column="10">NppParameters</name><op:operator pos:line="161" pos:column="23">::</op:operator><name pos:line="161" pos:column="25">getInstance</name></name><argument_list pos:line="161" pos:column="36">()</argument_list></call><op:operator pos:line="161" pos:column="38">)</op:operator><op:operator pos:line="161" pos:column="39">-&gt;</op:operator><call><name pos:line="161" pos:column="41">destroyInstance</name><argument_list pos:line="161" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="162" pos:column="9">MainFileManager</name><op:operator pos:line="162" pos:column="24">-&gt;</op:operator><name pos:line="162" pos:column="26">destroyInstance</name></name><argument_list pos:line="162" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="163" pos:column="9">(</op:operator><call><name><name pos:line="163" pos:column="10">WcharMbcsConvertor</name><op:operator pos:line="163" pos:column="28">::</op:operator><name pos:line="163" pos:column="30">getInstance</name></name><argument_list pos:line="163" pos:column="41">()</argument_list></call><op:operator pos:line="163" pos:column="43">)</op:operator><op:operator pos:line="163" pos:column="44">-&gt;</op:operator><call><name pos:line="163" pos:column="46">destroyInstance</name><argument_list pos:line="163" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">_pTrayIco</name></expr>)</condition><then pos:line="164" pos:column="23">
		<expr_stmt><expr><op:operator pos:line="165" pos:column="17">delete</op:operator> <name pos:line="165" pos:column="24">_pTrayIco</name></expr>;</expr_stmt></then></if>

	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">_pAnsiCharPanel</name></expr>)</condition><then pos:line="167" pos:column="29">
		<expr_stmt><expr><op:operator pos:line="168" pos:column="17">delete</op:operator> <name pos:line="168" pos:column="24">_pAnsiCharPanel</name></expr>;</expr_stmt></then></if>

	<if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><name pos:line="170" pos:column="13">_pClipboardHistoryPanel</name></expr>)</condition><then pos:line="170" pos:column="37">
		<expr_stmt><expr><op:operator pos:line="171" pos:column="17">delete</op:operator> <name pos:line="171" pos:column="24">_pClipboardHistoryPanel</name></expr>;</expr_stmt></then></if>

	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="173" pos:column="33">
		<expr_stmt><expr><op:operator pos:line="174" pos:column="17">delete</op:operator> <name pos:line="174" pos:column="24">_pFileSwitcherPanel</name></expr>;</expr_stmt></then></if>

	<if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><name pos:line="176" pos:column="13">_pProjectPanel_1</name></expr>)</condition><then pos:line="176" pos:column="30">
	<block pos:line="177" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="178" pos:column="17">delete</op:operator> <name pos:line="178" pos:column="24">_pProjectPanel_1</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">_pProjectPanel_2</name></expr>)</condition><then pos:line="180" pos:column="30">
	<block pos:line="181" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="182" pos:column="17">delete</op:operator> <name pos:line="182" pos:column="24">_pProjectPanel_2</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">_pProjectPanel_3</name></expr>)</condition><then pos:line="184" pos:column="30">
	<block pos:line="185" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="186" pos:column="17">delete</op:operator> <name pos:line="186" pos:column="24">_pProjectPanel_3</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">_pDocMap</name></expr>)</condition><then pos:line="188" pos:column="22">
	<block pos:line="189" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="190" pos:column="17">delete</op:operator> <name pos:line="190" pos:column="24">_pDocMap</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">_pFuncList</name></expr>)</condition><then pos:line="192" pos:column="24">
	<block pos:line="193" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="194" pos:column="17">delete</op:operator> <name pos:line="194" pos:column="24">_pFuncList</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></destructor>




<function><type><name pos:line="201" pos:column="1">LRESULT</name></type> <name><name pos:line="201" pos:column="9">Notepad_plus</name><op:operator pos:line="201" pos:column="21">::</op:operator><name pos:line="201" pos:column="23">init</name></name><parameter_list pos:line="201" pos:column="27">(<param><decl><type><name pos:line="201" pos:column="28">HWND</name></type> <name pos:line="201" pos:column="33">hwnd</name></decl></param>)</parameter_list>
<block pos:line="202" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="203" pos:column="9">NppParameters</name> <type:modifier pos:line="203" pos:column="23">*</type:modifier></type><name pos:line="203" pos:column="24">pNppParam</name> <init pos:line="203" pos:column="34">= <expr><call><name><name pos:line="203" pos:column="36">NppParameters</name><op:operator pos:line="203" pos:column="49">::</op:operator><name pos:line="203" pos:column="51">getInstance</name></name><argument_list pos:line="203" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">NppGUI</name> <type:modifier pos:line="204" pos:column="16">&amp;</type:modifier></type> <name pos:line="204" pos:column="18">nppGUI</name> <init pos:line="204" pos:column="25">= <expr><op:operator pos:line="204" pos:column="27">(</op:operator><name pos:line="204" pos:column="28">NppGUI</name> <op:operator pos:line="204" pos:column="35">&amp;</op:operator><op:operator pos:line="204" pos:column="36">)</op:operator><call><name><name pos:line="204" pos:column="37">pNppParam</name><op:operator pos:line="204" pos:column="46">-&gt;</op:operator><name pos:line="204" pos:column="48">getNppGUI</name></name><argument_list pos:line="204" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="206" pos:column="9">// Menu</comment>
	<expr_stmt><expr><name pos:line="207" pos:column="9">_mainMenuHandle</name> <op:operator pos:line="207" pos:column="25">=</op:operator> <call><name><op:operator pos:line="207" pos:column="27">::</op:operator><name pos:line="207" pos:column="29">GetMenu</name></name><argument_list pos:line="207" pos:column="36">(<argument><expr><name pos:line="207" pos:column="37">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="208" pos:column="9">int</name></type> <name pos:line="208" pos:column="13">langPos2BeRemoved</name> <init pos:line="208" pos:column="31">= <expr><name pos:line="208" pos:column="33">MENUINDEX_LANGUAGE</name><op:operator pos:line="208" pos:column="51">+</op:operator><lit:literal type="number" pos:line="208" pos:column="52">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="209" pos:column="9">if <condition pos:line="209" pos:column="12">(<expr><name><name pos:line="209" pos:column="13">nppGUI</name><op:operator pos:line="209" pos:column="19">.</op:operator><name pos:line="209" pos:column="20">_isLangMenuCompact</name></name></expr>)</condition><then pos:line="209" pos:column="39">
		<expr_stmt><expr><name pos:line="210" pos:column="17">langPos2BeRemoved</name> <op:operator pos:line="210" pos:column="35">=</op:operator> <name pos:line="210" pos:column="37">MENUINDEX_LANGUAGE</name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="211" pos:column="9">::</op:operator><name pos:line="211" pos:column="11">RemoveMenu</name></name><argument_list pos:line="211" pos:column="21">(<argument><expr><name pos:line="211" pos:column="22">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="211" pos:column="39">langPos2BeRemoved</name></expr></argument>, <argument><expr><name pos:line="211" pos:column="58">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="213" pos:column="9">//Views</comment>
    <expr_stmt><expr><name pos:line="214" pos:column="5">_pDocTab</name> <op:operator pos:line="214" pos:column="14">=</op:operator> <op:operator pos:line="214" pos:column="16">&amp;</op:operator><name pos:line="214" pos:column="17">_mainDocTab</name></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="215" pos:column="5">_pEditView</name> <op:operator pos:line="215" pos:column="16">=</op:operator> <op:operator pos:line="215" pos:column="18">&amp;</op:operator><name pos:line="215" pos:column="19">_mainEditView</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="216" pos:column="9">_pNonDocTab</name> <op:operator pos:line="216" pos:column="21">=</op:operator> <op:operator pos:line="216" pos:column="23">&amp;</op:operator><name pos:line="216" pos:column="24">_subDocTab</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="217" pos:column="9">_pNonEditView</name> <op:operator pos:line="217" pos:column="23">=</op:operator> <op:operator pos:line="217" pos:column="25">&amp;</op:operator><name pos:line="217" pos:column="26">_subEditView</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="219" pos:column="9">_mainEditView</name><op:operator pos:line="219" pos:column="22">.</op:operator><name pos:line="219" pos:column="23">init</name></name><argument_list pos:line="219" pos:column="27">(<argument><expr><call><name><name pos:line="219" pos:column="28">_pPublicInterface</name><op:operator pos:line="219" pos:column="45">-&gt;</op:operator><name pos:line="219" pos:column="47">getHinst</name></name><argument_list pos:line="219" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="219" pos:column="59">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="220" pos:column="9">_subEditView</name><op:operator pos:line="220" pos:column="21">.</op:operator><name pos:line="220" pos:column="22">init</name></name><argument_list pos:line="220" pos:column="26">(<argument><expr><call><name><name pos:line="220" pos:column="27">_pPublicInterface</name><op:operator pos:line="220" pos:column="44">-&gt;</op:operator><name pos:line="220" pos:column="46">getHinst</name></name><argument_list pos:line="220" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="220" pos:column="58">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="222" pos:column="9">_fileEditView</name><op:operator pos:line="222" pos:column="22">.</op:operator><name pos:line="222" pos:column="23">init</name></name><argument_list pos:line="222" pos:column="27">(<argument><expr><call><name><name pos:line="222" pos:column="28">_pPublicInterface</name><op:operator pos:line="222" pos:column="45">-&gt;</op:operator><name pos:line="222" pos:column="47">getHinst</name></name><argument_list pos:line="222" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="222" pos:column="59">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="223" pos:column="9">MainFileManager</name><op:operator pos:line="223" pos:column="24">-&gt;</op:operator><name pos:line="223" pos:column="26">init</name></name><argument_list pos:line="223" pos:column="30">(<argument><expr><name pos:line="223" pos:column="31">this</name></expr></argument>, <argument><expr><op:operator pos:line="223" pos:column="37">&amp;</op:operator><name pos:line="223" pos:column="38">_fileEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="223" pos:column="57">//get it up and running asap.</comment>

	<expr_stmt><expr><call><name><name pos:line="225" pos:column="9">pNppParam</name><op:operator pos:line="225" pos:column="18">-&gt;</op:operator><name pos:line="225" pos:column="20">setFontList</name></name><argument_list pos:line="225" pos:column="31">(<argument><expr><name pos:line="225" pos:column="32">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<expr_stmt><expr><name pos:line="228" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="228" pos:column="27">=</op:operator> <name pos:line="228" pos:column="29">WindowMainActive</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="229" pos:column="9">_activeView</name> <op:operator pos:line="229" pos:column="21">=</op:operator> <name pos:line="229" pos:column="23">MAIN_VIEW</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="231" pos:column="5">const</specifier> <name pos:line="231" pos:column="11">ScintillaViewParams</name> <type:modifier pos:line="231" pos:column="31">&amp;</type:modifier></type> <name pos:line="231" pos:column="33">svp1</name> <init pos:line="231" pos:column="38">= <expr><call><name><name pos:line="231" pos:column="40">pNppParam</name><op:operator pos:line="231" pos:column="49">-&gt;</op:operator><name pos:line="231" pos:column="51">getSVP</name></name><argument_list pos:line="231" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="233" pos:column="9">int</name></type> <name pos:line="233" pos:column="13">tabBarStatus</name> <init pos:line="233" pos:column="26">= <expr><name><name pos:line="233" pos:column="28">nppGUI</name><op:operator pos:line="233" pos:column="34">.</op:operator><name pos:line="233" pos:column="35">_tabStatus</name></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="234" pos:column="9">_toReduceTabBar</name> <op:operator pos:line="234" pos:column="25">=</op:operator> <op:operator pos:line="234" pos:column="27">(</op:operator><op:operator pos:line="234" pos:column="28">(</op:operator><name pos:line="234" pos:column="29">tabBarStatus</name> <op:operator pos:line="234" pos:column="42">&amp;</op:operator> <name pos:line="234" pos:column="44">TAB_REDUCE</name><op:operator pos:line="234" pos:column="54">)</op:operator> <op:operator pos:line="234" pos:column="56">!=</op:operator> <lit:literal type="number" pos:line="234" pos:column="59">0</lit:literal><op:operator pos:line="234" pos:column="60">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="235" pos:column="9">_docTabIconList</name><op:operator pos:line="235" pos:column="24">.</op:operator><name pos:line="235" pos:column="25">create</name></name><argument_list pos:line="235" pos:column="31">(<argument><expr><name pos:line="235" pos:column="32">_toReduceTabBar</name><op:operator pos:line="235" pos:column="47">?</op:operator><lit:literal type="number" pos:line="235" pos:column="48">13</lit:literal><op:operator pos:line="235" pos:column="50">:</op:operator><lit:literal type="number" pos:line="235" pos:column="51">20</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="235" pos:column="55">_pPublicInterface</name><op:operator pos:line="235" pos:column="72">-&gt;</op:operator><name pos:line="235" pos:column="74">getHinst</name></name><argument_list pos:line="235" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="235" pos:column="86">docTabIconIDs</name></expr></argument>, <argument><expr><sizeof pos:line="235" pos:column="101">sizeof<argument_list pos:line="235" pos:column="107">(<argument><expr><name pos:line="235" pos:column="108">docTabIconIDs</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="235" pos:column="122">/</op:operator><sizeof pos:line="235" pos:column="123">sizeof<argument_list pos:line="235" pos:column="129">(<argument><expr><name pos:line="235" pos:column="130">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="237" pos:column="9">_mainDocTab</name><op:operator pos:line="237" pos:column="20">.</op:operator><name pos:line="237" pos:column="21">init</name></name><argument_list pos:line="237" pos:column="25">(<argument><expr><call><name><name pos:line="237" pos:column="26">_pPublicInterface</name><op:operator pos:line="237" pos:column="43">-&gt;</op:operator><name pos:line="237" pos:column="45">getHinst</name></name><argument_list pos:line="237" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="237" pos:column="57">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="237" pos:column="63">&amp;</op:operator><name pos:line="237" pos:column="64">_mainEditView</name></expr></argument>, <argument><expr><op:operator pos:line="237" pos:column="79">&amp;</op:operator><name pos:line="237" pos:column="80">_docTabIconList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="238" pos:column="9">_subDocTab</name><op:operator pos:line="238" pos:column="19">.</op:operator><name pos:line="238" pos:column="20">init</name></name><argument_list pos:line="238" pos:column="24">(<argument><expr><call><name><name pos:line="238" pos:column="25">_pPublicInterface</name><op:operator pos:line="238" pos:column="42">-&gt;</op:operator><name pos:line="238" pos:column="44">getHinst</name></name><argument_list pos:line="238" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="238" pos:column="56">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="238" pos:column="62">&amp;</op:operator><name pos:line="238" pos:column="63">_subEditView</name></expr></argument>, <argument><expr><op:operator pos:line="238" pos:column="77">&amp;</op:operator><name pos:line="238" pos:column="78">_docTabIconList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="240" pos:column="9">_mainEditView</name><op:operator pos:line="240" pos:column="22">.</op:operator><name pos:line="240" pos:column="23">display</name></name><argument_list pos:line="240" pos:column="30">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="242" pos:column="9">_invisibleEditView</name><op:operator pos:line="242" pos:column="27">.</op:operator><name pos:line="242" pos:column="28">init</name></name><argument_list pos:line="242" pos:column="32">(<argument><expr><call><name><name pos:line="242" pos:column="33">_pPublicInterface</name><op:operator pos:line="242" pos:column="50">-&gt;</op:operator><name pos:line="242" pos:column="52">getHinst</name></name><argument_list pos:line="242" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="242" pos:column="64">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="243" pos:column="9">_invisibleEditView</name><op:operator pos:line="243" pos:column="27">.</op:operator><name pos:line="243" pos:column="28">execute</name></name><argument_list pos:line="243" pos:column="35">(<argument><expr><name pos:line="243" pos:column="36">SCI_SETUNDOCOLLECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="244" pos:column="9">_invisibleEditView</name><op:operator pos:line="244" pos:column="27">.</op:operator><name pos:line="244" pos:column="28">execute</name></name><argument_list pos:line="244" pos:column="35">(<argument><expr><name pos:line="244" pos:column="36">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="245" pos:column="9">_invisibleEditView</name><op:operator pos:line="245" pos:column="27">.</op:operator><name pos:line="245" pos:column="28">wrap</name></name><argument_list pos:line="245" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="245" pos:column="33">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="245" pos:column="41">// Make sure no slow down</comment>

	<comment type="line" pos:line="247" pos:column="9">// Configuration of 2 scintilla views</comment>
    <expr_stmt><expr><call><name><name pos:line="248" pos:column="5">_mainEditView</name><op:operator pos:line="248" pos:column="18">.</op:operator><name pos:line="248" pos:column="19">showMargin</name></name><argument_list pos:line="248" pos:column="29">(<argument><expr><name><name pos:line="248" pos:column="30">ScintillaEditView</name><op:operator pos:line="248" pos:column="47">::</op:operator><name pos:line="248" pos:column="49">_SC_MARGE_LINENUMBER</name></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="71">svp1</name><op:operator pos:line="248" pos:column="75">.</op:operator><name pos:line="248" pos:column="76">_lineNumberMarginShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="249" pos:column="9">_subEditView</name><op:operator pos:line="249" pos:column="21">.</op:operator><name pos:line="249" pos:column="22">showMargin</name></name><argument_list pos:line="249" pos:column="32">(<argument><expr><name><name pos:line="249" pos:column="33">ScintillaEditView</name><op:operator pos:line="249" pos:column="50">::</op:operator><name pos:line="249" pos:column="52">_SC_MARGE_LINENUMBER</name></name></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="74">svp1</name><op:operator pos:line="249" pos:column="78">.</op:operator><name pos:line="249" pos:column="79">_lineNumberMarginShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="250" pos:column="5">_mainEditView</name><op:operator pos:line="250" pos:column="18">.</op:operator><name pos:line="250" pos:column="19">showMargin</name></name><argument_list pos:line="250" pos:column="29">(<argument><expr><name><name pos:line="250" pos:column="30">ScintillaEditView</name><op:operator pos:line="250" pos:column="47">::</op:operator><name pos:line="250" pos:column="49">_SC_MARGE_SYBOLE</name></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="67">svp1</name><op:operator pos:line="250" pos:column="71">.</op:operator><name pos:line="250" pos:column="72">_bookMarkMarginShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="251" pos:column="9">_subEditView</name><op:operator pos:line="251" pos:column="21">.</op:operator><name pos:line="251" pos:column="22">showMargin</name></name><argument_list pos:line="251" pos:column="32">(<argument><expr><name><name pos:line="251" pos:column="33">ScintillaEditView</name><op:operator pos:line="251" pos:column="50">::</op:operator><name pos:line="251" pos:column="52">_SC_MARGE_SYBOLE</name></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="70">svp1</name><op:operator pos:line="251" pos:column="74">.</op:operator><name pos:line="251" pos:column="75">_bookMarkMarginShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="253" pos:column="5">_mainEditView</name><op:operator pos:line="253" pos:column="18">.</op:operator><name pos:line="253" pos:column="19">showIndentGuideLine</name></name><argument_list pos:line="253" pos:column="38">(<argument><expr><name><name pos:line="253" pos:column="39">svp1</name><op:operator pos:line="253" pos:column="43">.</op:operator><name pos:line="253" pos:column="44">_indentGuideLineShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="254" pos:column="5">_subEditView</name><op:operator pos:line="254" pos:column="17">.</op:operator><name pos:line="254" pos:column="18">showIndentGuideLine</name></name><argument_list pos:line="254" pos:column="37">(<argument><expr><name><name pos:line="254" pos:column="38">svp1</name><op:operator pos:line="254" pos:column="42">.</op:operator><name pos:line="254" pos:column="43">_indentGuideLineShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="256" pos:column="9">::</op:operator><name pos:line="256" pos:column="11">SendMessage</name></name><argument_list pos:line="256" pos:column="22">(<argument><expr><name pos:line="256" pos:column="23">hwnd</name></expr></argument>, <argument><expr><name pos:line="256" pos:column="29">NPPM_INTERNAL_SETCARETWIDTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="257" pos:column="9">::</op:operator><name pos:line="257" pos:column="11">SendMessage</name></name><argument_list pos:line="257" pos:column="22">(<argument><expr><name pos:line="257" pos:column="23">hwnd</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="29">NPPM_INTERNAL_SETCARETBLINKRATE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="257" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="257" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="259" pos:column="9">_configStyleDlg</name><op:operator pos:line="259" pos:column="24">.</op:operator><name pos:line="259" pos:column="25">init</name></name><argument_list pos:line="259" pos:column="29">(<argument><expr><call><name><name pos:line="259" pos:column="30">_pPublicInterface</name><op:operator pos:line="259" pos:column="47">-&gt;</op:operator><name pos:line="259" pos:column="49">getHinst</name></name><argument_list pos:line="259" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="259" pos:column="61">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="260" pos:column="9">_preference</name><op:operator pos:line="260" pos:column="20">.</op:operator><name pos:line="260" pos:column="21">init</name></name><argument_list pos:line="260" pos:column="25">(<argument><expr><call><name><name pos:line="260" pos:column="26">_pPublicInterface</name><op:operator pos:line="260" pos:column="43">-&gt;</op:operator><name pos:line="260" pos:column="45">getHinst</name></name><argument_list pos:line="260" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="260" pos:column="57">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="262" pos:column="5">//Marker Margin config</comment>
    <expr_stmt><expr><call><name><name pos:line="263" pos:column="5">_mainEditView</name><op:operator pos:line="263" pos:column="18">.</op:operator><name pos:line="263" pos:column="19">setMakerStyle</name></name><argument_list pos:line="263" pos:column="32">(<argument><expr><name><name pos:line="263" pos:column="33">svp1</name><op:operator pos:line="263" pos:column="37">.</op:operator><name pos:line="263" pos:column="38">_folderStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="264" pos:column="5">_subEditView</name><op:operator pos:line="264" pos:column="17">.</op:operator><name pos:line="264" pos:column="18">setMakerStyle</name></name><argument_list pos:line="264" pos:column="31">(<argument><expr><name><name pos:line="264" pos:column="32">svp1</name><op:operator pos:line="264" pos:column="36">.</op:operator><name pos:line="264" pos:column="37">_folderStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="265" pos:column="9">_mainEditView</name><op:operator pos:line="265" pos:column="22">.</op:operator><name pos:line="265" pos:column="23">defineDocType</name></name><argument_list pos:line="265" pos:column="36">(<argument><expr><call><name><name pos:line="265" pos:column="37">_mainEditView</name><op:operator pos:line="265" pos:column="50">.</op:operator><name pos:line="265" pos:column="51">getCurrentBuffer</name></name><argument_list pos:line="265" pos:column="67">()</argument_list></call><op:operator pos:line="265" pos:column="69">-&gt;</op:operator><call><name pos:line="265" pos:column="71">getLangType</name><argument_list pos:line="265" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="266" pos:column="9">_subEditView</name><op:operator pos:line="266" pos:column="21">.</op:operator><name pos:line="266" pos:column="22">defineDocType</name></name><argument_list pos:line="266" pos:column="35">(<argument><expr><call><name><name pos:line="266" pos:column="36">_subEditView</name><op:operator pos:line="266" pos:column="48">.</op:operator><name pos:line="266" pos:column="49">getCurrentBuffer</name></name><argument_list pos:line="266" pos:column="65">()</argument_list></call><op:operator pos:line="266" pos:column="67">-&gt;</op:operator><call><name pos:line="266" pos:column="69">getLangType</name><argument_list pos:line="266" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="268" pos:column="9">//Line wrap method</comment>
	<expr_stmt><expr><call><name><name pos:line="269" pos:column="9">_mainEditView</name><op:operator pos:line="269" pos:column="22">.</op:operator><name pos:line="269" pos:column="23">setWrapMode</name></name><argument_list pos:line="269" pos:column="34">(<argument><expr><name><name pos:line="269" pos:column="35">svp1</name><op:operator pos:line="269" pos:column="39">.</op:operator><name pos:line="269" pos:column="40">_lineWrapMethod</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="270" pos:column="5">_subEditView</name><op:operator pos:line="270" pos:column="17">.</op:operator><name pos:line="270" pos:column="18">setWrapMode</name></name><argument_list pos:line="270" pos:column="29">(<argument><expr><name><name pos:line="270" pos:column="30">svp1</name><op:operator pos:line="270" pos:column="34">.</op:operator><name pos:line="270" pos:column="35">_lineWrapMethod</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="272" pos:column="9">_mainEditView</name><op:operator pos:line="272" pos:column="22">.</op:operator><name pos:line="272" pos:column="23">execute</name></name><argument_list pos:line="272" pos:column="30">(<argument><expr><name pos:line="272" pos:column="31">SCI_SETCARETLINEVISIBLE</name></expr></argument>, <argument><expr><name><name pos:line="272" pos:column="56">svp1</name><op:operator pos:line="272" pos:column="60">.</op:operator><name pos:line="272" pos:column="61">_currentLineHilitingShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="273" pos:column="9">_subEditView</name><op:operator pos:line="273" pos:column="21">.</op:operator><name pos:line="273" pos:column="22">execute</name></name><argument_list pos:line="273" pos:column="29">(<argument><expr><name pos:line="273" pos:column="30">SCI_SETCARETLINEVISIBLE</name></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="55">svp1</name><op:operator pos:line="273" pos:column="59">.</op:operator><name pos:line="273" pos:column="60">_currentLineHilitingShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="275" pos:column="9">_mainEditView</name><op:operator pos:line="275" pos:column="22">.</op:operator><name pos:line="275" pos:column="23">execute</name></name><argument_list pos:line="275" pos:column="30">(<argument><expr><name pos:line="275" pos:column="31">SCI_SETCARETLINEVISIBLEALWAYS</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="275" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="276" pos:column="9">_subEditView</name><op:operator pos:line="276" pos:column="21">.</op:operator><name pos:line="276" pos:column="22">execute</name></name><argument_list pos:line="276" pos:column="29">(<argument><expr><name pos:line="276" pos:column="30">SCI_SETCARETLINEVISIBLEALWAYS</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="276" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="278" pos:column="9">_mainEditView</name><op:operator pos:line="278" pos:column="22">.</op:operator><name pos:line="278" pos:column="23">wrap</name></name><argument_list pos:line="278" pos:column="27">(<argument><expr><name><name pos:line="278" pos:column="28">svp1</name><op:operator pos:line="278" pos:column="32">.</op:operator><name pos:line="278" pos:column="33">_doWrap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="279" pos:column="9">_subEditView</name><op:operator pos:line="279" pos:column="21">.</op:operator><name pos:line="279" pos:column="22">wrap</name></name><argument_list pos:line="279" pos:column="26">(<argument><expr><name><name pos:line="279" pos:column="27">svp1</name><op:operator pos:line="279" pos:column="31">.</op:operator><name pos:line="279" pos:column="32">_doWrap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="281" pos:column="9">_mainEditView</name><op:operator pos:line="281" pos:column="22">.</op:operator><name pos:line="281" pos:column="23">execute</name></name><argument_list pos:line="281" pos:column="30">(<argument><expr><name pos:line="281" pos:column="31">SCI_SETEDGECOLUMN</name></expr></argument>, <argument><expr><name><name pos:line="281" pos:column="50">svp1</name><op:operator pos:line="281" pos:column="54">.</op:operator><name pos:line="281" pos:column="55">_edgeNbColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="282" pos:column="9">_mainEditView</name><op:operator pos:line="282" pos:column="22">.</op:operator><name pos:line="282" pos:column="23">execute</name></name><argument_list pos:line="282" pos:column="30">(<argument><expr><name pos:line="282" pos:column="31">SCI_SETEDGEMODE</name></expr></argument>, <argument><expr><name><name pos:line="282" pos:column="48">svp1</name><op:operator pos:line="282" pos:column="52">.</op:operator><name pos:line="282" pos:column="53">_edgeMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="283" pos:column="9">_subEditView</name><op:operator pos:line="283" pos:column="21">.</op:operator><name pos:line="283" pos:column="22">execute</name></name><argument_list pos:line="283" pos:column="29">(<argument><expr><name pos:line="283" pos:column="30">SCI_SETEDGECOLUMN</name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="49">svp1</name><op:operator pos:line="283" pos:column="53">.</op:operator><name pos:line="283" pos:column="54">_edgeNbColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="284" pos:column="9">_subEditView</name><op:operator pos:line="284" pos:column="21">.</op:operator><name pos:line="284" pos:column="22">execute</name></name><argument_list pos:line="284" pos:column="29">(<argument><expr><name pos:line="284" pos:column="30">SCI_SETEDGEMODE</name></expr></argument>, <argument><expr><name><name pos:line="284" pos:column="47">svp1</name><op:operator pos:line="284" pos:column="51">.</op:operator><name pos:line="284" pos:column="52">_edgeMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="286" pos:column="9">_mainEditView</name><op:operator pos:line="286" pos:column="22">.</op:operator><name pos:line="286" pos:column="23">showEOL</name></name><argument_list pos:line="286" pos:column="30">(<argument><expr><name><name pos:line="286" pos:column="31">svp1</name><op:operator pos:line="286" pos:column="35">.</op:operator><name pos:line="286" pos:column="36">_eolShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="287" pos:column="9">_subEditView</name><op:operator pos:line="287" pos:column="21">.</op:operator><name pos:line="287" pos:column="22">showEOL</name></name><argument_list pos:line="287" pos:column="29">(<argument><expr><name><name pos:line="287" pos:column="30">svp1</name><op:operator pos:line="287" pos:column="34">.</op:operator><name pos:line="287" pos:column="35">_eolShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="289" pos:column="9">_mainEditView</name><op:operator pos:line="289" pos:column="22">.</op:operator><name pos:line="289" pos:column="23">showWSAndTab</name></name><argument_list pos:line="289" pos:column="35">(<argument><expr><name><name pos:line="289" pos:column="36">svp1</name><op:operator pos:line="289" pos:column="40">.</op:operator><name pos:line="289" pos:column="41">_whiteSpaceShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="290" pos:column="9">_subEditView</name><op:operator pos:line="290" pos:column="21">.</op:operator><name pos:line="290" pos:column="22">showWSAndTab</name></name><argument_list pos:line="290" pos:column="34">(<argument><expr><name><name pos:line="290" pos:column="35">svp1</name><op:operator pos:line="290" pos:column="39">.</op:operator><name pos:line="290" pos:column="40">_whiteSpaceShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="292" pos:column="9">_mainEditView</name><op:operator pos:line="292" pos:column="22">.</op:operator><name pos:line="292" pos:column="23">showWrapSymbol</name></name><argument_list pos:line="292" pos:column="37">(<argument><expr><name><name pos:line="292" pos:column="38">svp1</name><op:operator pos:line="292" pos:column="42">.</op:operator><name pos:line="292" pos:column="43">_wrapSymbolShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="293" pos:column="9">_subEditView</name><op:operator pos:line="293" pos:column="21">.</op:operator><name pos:line="293" pos:column="22">showWrapSymbol</name></name><argument_list pos:line="293" pos:column="36">(<argument><expr><name><name pos:line="293" pos:column="37">svp1</name><op:operator pos:line="293" pos:column="41">.</op:operator><name pos:line="293" pos:column="42">_wrapSymbolShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="295" pos:column="9">_mainEditView</name><op:operator pos:line="295" pos:column="22">.</op:operator><name pos:line="295" pos:column="23">performGlobalStyles</name></name><argument_list pos:line="295" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="296" pos:column="9">_subEditView</name><op:operator pos:line="296" pos:column="21">.</op:operator><name pos:line="296" pos:column="22">performGlobalStyles</name></name><argument_list pos:line="296" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="298" pos:column="9">_zoomOriginalValue</name> <op:operator pos:line="298" pos:column="28">=</op:operator> <call><name><name pos:line="298" pos:column="30">_pEditView</name><op:operator pos:line="298" pos:column="40">-&gt;</op:operator><name pos:line="298" pos:column="42">execute</name></name><argument_list pos:line="298" pos:column="49">(<argument><expr><name pos:line="298" pos:column="50">SCI_GETZOOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="299" pos:column="9">_mainEditView</name><op:operator pos:line="299" pos:column="22">.</op:operator><name pos:line="299" pos:column="23">execute</name></name><argument_list pos:line="299" pos:column="30">(<argument><expr><name pos:line="299" pos:column="31">SCI_SETZOOM</name></expr></argument>, <argument><expr><name><name pos:line="299" pos:column="44">svp1</name><op:operator pos:line="299" pos:column="48">.</op:operator><name pos:line="299" pos:column="49">_zoom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="300" pos:column="9">_subEditView</name><op:operator pos:line="300" pos:column="21">.</op:operator><name pos:line="300" pos:column="22">execute</name></name><argument_list pos:line="300" pos:column="29">(<argument><expr><name pos:line="300" pos:column="30">SCI_SETZOOM</name></expr></argument>, <argument><expr><name><name pos:line="300" pos:column="43">svp1</name><op:operator pos:line="300" pos:column="47">.</op:operator><name pos:line="300" pos:column="48">_zoom2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><op:operator pos:line="302" pos:column="5">::</op:operator><name pos:line="302" pos:column="7">SendMessage</name></name><argument_list pos:line="302" pos:column="18">(<argument><expr><name pos:line="302" pos:column="19">hwnd</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="25">NPPM_INTERNAL_SETMULTISELCTION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="302" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="302" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="304" pos:column="9">_mainEditView</name><op:operator pos:line="304" pos:column="22">.</op:operator><name pos:line="304" pos:column="23">execute</name></name><argument_list pos:line="304" pos:column="30">(<argument><expr><name pos:line="304" pos:column="31">SCI_SETADDITIONALSELECTIONTYPING</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="304" pos:column="65">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="305" pos:column="9">_subEditView</name><op:operator pos:line="305" pos:column="21">.</op:operator><name pos:line="305" pos:column="22">execute</name></name><argument_list pos:line="305" pos:column="29">(<argument><expr><name pos:line="305" pos:column="30">SCI_SETADDITIONALSELECTIONTYPING</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="305" pos:column="64">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="307" pos:column="9">_mainEditView</name><op:operator pos:line="307" pos:column="22">.</op:operator><name pos:line="307" pos:column="23">execute</name></name><argument_list pos:line="307" pos:column="30">(<argument><expr><name pos:line="307" pos:column="31">SCI_SETVIRTUALSPACEOPTIONS</name></expr></argument>, <argument><expr><name pos:line="307" pos:column="59">SCVS_RECTANGULARSELECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="308" pos:column="9">_subEditView</name><op:operator pos:line="308" pos:column="21">.</op:operator><name pos:line="308" pos:column="22">execute</name></name><argument_list pos:line="308" pos:column="29">(<argument><expr><name pos:line="308" pos:column="30">SCI_SETVIRTUALSPACEOPTIONS</name></expr></argument>, <argument><expr><name pos:line="308" pos:column="58">SCVS_RECTANGULARSELECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="310" pos:column="9">TabBarPlus</name><op:operator pos:line="310" pos:column="19">::</op:operator><name pos:line="310" pos:column="21">doDragNDrop</name></name><argument_list pos:line="310" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="310" pos:column="33">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="312" pos:column="9">if <condition pos:line="312" pos:column="12">(<expr><name pos:line="312" pos:column="13">_toReduceTabBar</name></expr>)</condition><then pos:line="312" pos:column="29">
	<block pos:line="313" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="314" pos:column="17">HFONT</name></type> <name pos:line="314" pos:column="23">hf</name> <init pos:line="314" pos:column="26">= <expr><op:operator pos:line="314" pos:column="28">(</op:operator><name pos:line="314" pos:column="29">HFONT</name><op:operator pos:line="314" pos:column="34">)</op:operator><call><name><op:operator pos:line="314" pos:column="35">::</op:operator><name pos:line="314" pos:column="37">GetStockObject</name></name><argument_list pos:line="314" pos:column="51">(<argument><expr><name pos:line="314" pos:column="52">DEFAULT_GUI_FONT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="316" pos:column="17">if <condition pos:line="316" pos:column="20">(<expr><name pos:line="316" pos:column="21">hf</name></expr>)</condition><then pos:line="316" pos:column="24">
		<block pos:line="317" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="318" pos:column="25">::</op:operator><name pos:line="318" pos:column="27">SendMessage</name></name><argument_list pos:line="318" pos:column="38">(<argument><expr><call><name><name pos:line="318" pos:column="39">_mainDocTab</name><op:operator pos:line="318" pos:column="50">.</op:operator><name pos:line="318" pos:column="51">getHSelf</name></name><argument_list pos:line="318" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="318" pos:column="63">WM_SETFONT</name></expr></argument>, <argument><expr><op:operator pos:line="318" pos:column="75">(</op:operator><name pos:line="318" pos:column="76">WPARAM</name><op:operator pos:line="318" pos:column="82">)</op:operator><name pos:line="318" pos:column="83">hf</name></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="87">MAKELPARAM</name><argument_list pos:line="318" pos:column="97">(<argument><expr><name pos:line="318" pos:column="98">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="318" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="319" pos:column="25">::</op:operator><name pos:line="319" pos:column="27">SendMessage</name></name><argument_list pos:line="319" pos:column="38">(<argument><expr><call><name><name pos:line="319" pos:column="39">_subDocTab</name><op:operator pos:line="319" pos:column="49">.</op:operator><name pos:line="319" pos:column="50">getHSelf</name></name><argument_list pos:line="319" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="319" pos:column="62">WM_SETFONT</name></expr></argument>, <argument><expr><op:operator pos:line="319" pos:column="74">(</op:operator><name pos:line="319" pos:column="75">WPARAM</name><op:operator pos:line="319" pos:column="81">)</op:operator><name pos:line="319" pos:column="82">hf</name></expr></argument>, <argument><expr><call><name pos:line="319" pos:column="86">MAKELPARAM</name><argument_list pos:line="319" pos:column="96">(<argument><expr><name pos:line="319" pos:column="97">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="319" pos:column="103">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="321" pos:column="17">TabCtrl_SetItemSize</name><argument_list pos:line="321" pos:column="36">(<argument><expr><call><name><name pos:line="321" pos:column="37">_mainDocTab</name><op:operator pos:line="321" pos:column="48">.</op:operator><name pos:line="321" pos:column="49">getHSelf</name></name><argument_list pos:line="321" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="321" pos:column="61">45</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="321" pos:column="65">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="322" pos:column="17">TabCtrl_SetItemSize</name><argument_list pos:line="322" pos:column="36">(<argument><expr><call><name><name pos:line="322" pos:column="37">_subDocTab</name><op:operator pos:line="322" pos:column="47">.</op:operator><name pos:line="322" pos:column="48">getHSelf</name></name><argument_list pos:line="322" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="322" pos:column="60">45</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="322" pos:column="64">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="324" pos:column="9">_mainDocTab</name><op:operator pos:line="324" pos:column="20">.</op:operator><name pos:line="324" pos:column="21">display</name></name><argument_list pos:line="324" pos:column="28">()</argument_list></call></expr>;</expr_stmt>


	<expr_stmt><expr><call><name><name pos:line="327" pos:column="9">TabBarPlus</name><op:operator pos:line="327" pos:column="19">::</op:operator><name pos:line="327" pos:column="21">doDragNDrop</name></name><argument_list pos:line="327" pos:column="32">(<argument><expr><op:operator pos:line="327" pos:column="33">(</op:operator><name pos:line="327" pos:column="34">tabBarStatus</name> <op:operator pos:line="327" pos:column="47">&amp;</op:operator> <name pos:line="327" pos:column="49">TAB_DRAGNDROP</name><op:operator pos:line="327" pos:column="62">)</op:operator> <op:operator pos:line="327" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="327" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="328" pos:column="9">TabBarPlus</name><op:operator pos:line="328" pos:column="19">::</op:operator><name pos:line="328" pos:column="21">setDrawTopBar</name></name><argument_list pos:line="328" pos:column="34">(<argument><expr><op:operator pos:line="328" pos:column="35">(</op:operator><name pos:line="328" pos:column="36">tabBarStatus</name> <op:operator pos:line="328" pos:column="49">&amp;</op:operator> <name pos:line="328" pos:column="51">TAB_DRAWTOPBAR</name><op:operator pos:line="328" pos:column="65">)</op:operator> <op:operator pos:line="328" pos:column="67">!=</op:operator> <lit:literal type="number" pos:line="328" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="329" pos:column="9">TabBarPlus</name><op:operator pos:line="329" pos:column="19">::</op:operator><name pos:line="329" pos:column="21">setDrawInactiveTab</name></name><argument_list pos:line="329" pos:column="39">(<argument><expr><op:operator pos:line="329" pos:column="40">(</op:operator><name pos:line="329" pos:column="41">tabBarStatus</name> <op:operator pos:line="329" pos:column="54">&amp;</op:operator> <name pos:line="329" pos:column="56">TAB_DRAWINACTIVETAB</name><op:operator pos:line="329" pos:column="75">)</op:operator> <op:operator pos:line="329" pos:column="77">!=</op:operator> <lit:literal type="number" pos:line="329" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="330" pos:column="9">TabBarPlus</name><op:operator pos:line="330" pos:column="19">::</op:operator><name pos:line="330" pos:column="21">setDrawTabCloseButton</name></name><argument_list pos:line="330" pos:column="42">(<argument><expr><op:operator pos:line="330" pos:column="43">(</op:operator><name pos:line="330" pos:column="44">tabBarStatus</name> <op:operator pos:line="330" pos:column="57">&amp;</op:operator> <name pos:line="330" pos:column="59">TAB_CLOSEBUTTON</name><op:operator pos:line="330" pos:column="74">)</op:operator> <op:operator pos:line="330" pos:column="76">!=</op:operator> <lit:literal type="number" pos:line="330" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="331" pos:column="9">TabBarPlus</name><op:operator pos:line="331" pos:column="19">::</op:operator><name pos:line="331" pos:column="21">setDbClk2Close</name></name><argument_list pos:line="331" pos:column="35">(<argument><expr><op:operator pos:line="331" pos:column="36">(</op:operator><name pos:line="331" pos:column="37">tabBarStatus</name> <op:operator pos:line="331" pos:column="50">&amp;</op:operator> <name pos:line="331" pos:column="52">TAB_DBCLK2CLOSE</name><op:operator pos:line="331" pos:column="67">)</op:operator> <op:operator pos:line="331" pos:column="69">!=</op:operator> <lit:literal type="number" pos:line="331" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="332" pos:column="9">TabBarPlus</name><op:operator pos:line="332" pos:column="19">::</op:operator><name pos:line="332" pos:column="21">setVertical</name></name><argument_list pos:line="332" pos:column="32">(<argument><expr><op:operator pos:line="332" pos:column="33">(</op:operator><name pos:line="332" pos:column="34">tabBarStatus</name> <op:operator pos:line="332" pos:column="47">&amp;</op:operator> <name pos:line="332" pos:column="49">TAB_VERTICAL</name><op:operator pos:line="332" pos:column="61">)</op:operator> <op:operator pos:line="332" pos:column="63">!=</op:operator> <lit:literal type="number" pos:line="332" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="333" pos:column="9">drawTabbarColoursFromStylerArray</name><argument_list pos:line="333" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="335" pos:column="5">//--Splitter Section--//</comment>
	<decl_stmt><decl><type><name pos:line="336" pos:column="9">bool</name></type> <name pos:line="336" pos:column="14">isVertical</name> <init pos:line="336" pos:column="25">= <expr><op:operator pos:line="336" pos:column="27">(</op:operator><name><name pos:line="336" pos:column="28">nppGUI</name><op:operator pos:line="336" pos:column="34">.</op:operator><name pos:line="336" pos:column="35">_splitterPos</name></name> <op:operator pos:line="336" pos:column="48">==</op:operator> <name pos:line="336" pos:column="51">POS_VERTICAL</name><op:operator pos:line="336" pos:column="63">)</op:operator></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="338" pos:column="5">_subSplitter</name><op:operator pos:line="338" pos:column="17">.</op:operator><name pos:line="338" pos:column="18">init</name></name><argument_list pos:line="338" pos:column="22">(<argument><expr><call><name><name pos:line="338" pos:column="23">_pPublicInterface</name><op:operator pos:line="338" pos:column="40">-&gt;</op:operator><name pos:line="338" pos:column="42">getHinst</name></name><argument_list pos:line="338" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="338" pos:column="54">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="339" pos:column="5">_subSplitter</name><op:operator pos:line="339" pos:column="17">.</op:operator><name pos:line="339" pos:column="18">create</name></name><argument_list pos:line="339" pos:column="24">(<argument><expr><op:operator pos:line="339" pos:column="25">&amp;</op:operator><name pos:line="339" pos:column="26">_mainDocTab</name></expr></argument>, <argument><expr><op:operator pos:line="339" pos:column="39">&amp;</op:operator><name pos:line="339" pos:column="40">_subDocTab</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="339" pos:column="52">8</lit:literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="55">DYNAMIC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="339" pos:column="64">50</lit:literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="68">isVertical</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="341" pos:column="5">//--Status Bar Section--//</comment>
	<decl_stmt><decl><type><name pos:line="342" pos:column="9">bool</name></type> <name pos:line="342" pos:column="14">willBeShown</name> <init pos:line="342" pos:column="26">= <expr><name><name pos:line="342" pos:column="28">nppGUI</name><op:operator pos:line="342" pos:column="34">.</op:operator><name pos:line="342" pos:column="35">_statusBarShow</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="343" pos:column="5">_statusBar</name><op:operator pos:line="343" pos:column="15">.</op:operator><name pos:line="343" pos:column="16">init</name></name><argument_list pos:line="343" pos:column="20">(<argument><expr><call><name><name pos:line="343" pos:column="21">_pPublicInterface</name><op:operator pos:line="343" pos:column="38">-&gt;</op:operator><name pos:line="343" pos:column="40">getHinst</name></name><argument_list pos:line="343" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="343" pos:column="52">hwnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="343" pos:column="58">6</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="344" pos:column="9">_statusBar</name><op:operator pos:line="344" pos:column="19">.</op:operator><name pos:line="344" pos:column="20">setPartWidth</name></name><argument_list pos:line="344" pos:column="32">(<argument><expr><name pos:line="344" pos:column="33">STATUSBAR_DOC_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="344" pos:column="53">200</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="345" pos:column="9">_statusBar</name><op:operator pos:line="345" pos:column="19">.</op:operator><name pos:line="345" pos:column="20">setPartWidth</name></name><argument_list pos:line="345" pos:column="32">(<argument><expr><name pos:line="345" pos:column="33">STATUSBAR_CUR_POS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="345" pos:column="52">260</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="346" pos:column="9">_statusBar</name><op:operator pos:line="346" pos:column="19">.</op:operator><name pos:line="346" pos:column="20">setPartWidth</name></name><argument_list pos:line="346" pos:column="32">(<argument><expr><name pos:line="346" pos:column="33">STATUSBAR_EOF_FORMAT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="346" pos:column="55">110</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="347" pos:column="9">_statusBar</name><op:operator pos:line="347" pos:column="19">.</op:operator><name pos:line="347" pos:column="20">setPartWidth</name></name><argument_list pos:line="347" pos:column="32">(<argument><expr><name pos:line="347" pos:column="33">STATUSBAR_UNICODE_TYPE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="347" pos:column="57">120</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="348" pos:column="9">_statusBar</name><op:operator pos:line="348" pos:column="19">.</op:operator><name pos:line="348" pos:column="20">setPartWidth</name></name><argument_list pos:line="348" pos:column="32">(<argument><expr><name pos:line="348" pos:column="33">STATUSBAR_TYPING_MODE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="348" pos:column="56">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="349" pos:column="5">_statusBar</name><op:operator pos:line="349" pos:column="15">.</op:operator><name pos:line="349" pos:column="16">display</name></name><argument_list pos:line="349" pos:column="23">(<argument><expr><name pos:line="349" pos:column="24">willBeShown</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name pos:line="351" pos:column="5">_pMainWindow</name> <op:operator pos:line="351" pos:column="18">=</op:operator> <op:operator pos:line="351" pos:column="20">&amp;</op:operator><name pos:line="351" pos:column="21">_mainDocTab</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="353" pos:column="9">_dockingManager</name><op:operator pos:line="353" pos:column="24">.</op:operator><name pos:line="353" pos:column="25">init</name></name><argument_list pos:line="353" pos:column="29">(<argument><expr><call><name><name pos:line="353" pos:column="30">_pPublicInterface</name><op:operator pos:line="353" pos:column="47">-&gt;</op:operator><name pos:line="353" pos:column="49">getHinst</name></name><argument_list pos:line="353" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="353" pos:column="61">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="353" pos:column="67">&amp;</op:operator><name pos:line="353" pos:column="68">_pMainWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="355" pos:column="9">if <condition pos:line="355" pos:column="12">(<expr><name><name pos:line="355" pos:column="13">nppGUI</name><op:operator pos:line="355" pos:column="19">.</op:operator><name pos:line="355" pos:column="20">_isMinimizedToTray</name></name> <op:operator pos:line="355" pos:column="39">&amp;&amp;</op:operator> <name pos:line="355" pos:column="42">_pTrayIco</name> <op:operator pos:line="355" pos:column="52">==</op:operator> <name pos:line="355" pos:column="55">NULL</name></expr>)</condition><then pos:line="355" pos:column="60">
		<expr_stmt><expr><name pos:line="356" pos:column="17">_pTrayIco</name> <op:operator pos:line="356" pos:column="27">=</op:operator> <op:operator pos:line="356" pos:column="29">new</op:operator> <call><name pos:line="356" pos:column="33">trayIconControler</name><argument_list pos:line="356" pos:column="50">(<argument><expr><name pos:line="356" pos:column="51">hwnd</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="57">IDI_M30ICON</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="70">IDC_MINIMIZED_TRAY</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="356" pos:column="90">::</op:operator><name pos:line="356" pos:column="92">LoadIcon</name></name><argument_list pos:line="356" pos:column="100">(<argument><expr><call><name><name pos:line="356" pos:column="101">_pPublicInterface</name><op:operator pos:line="356" pos:column="118">-&gt;</op:operator><name pos:line="356" pos:column="120">getHinst</name></name><argument_list pos:line="356" pos:column="128">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="356" pos:column="132">MAKEINTRESOURCE</name><argument_list pos:line="356" pos:column="147">(<argument><expr><name pos:line="356" pos:column="148">IDI_M30ICON</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="356" pos:column="163">TEXT</name><argument_list pos:line="356" pos:column="167">(<argument><expr><lit:literal type="string" pos:line="356" pos:column="168">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name pos:line="358" pos:column="9">checkSyncState</name><argument_list pos:line="358" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="360" pos:column="9">// Plugin Manager</comment>
	<decl_stmt><decl><type><name pos:line="361" pos:column="9">NppData</name></type> <name pos:line="361" pos:column="17">nppData</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="362" pos:column="9">nppData</name><op:operator pos:line="362" pos:column="16">.</op:operator><name pos:line="362" pos:column="17">_nppHandle</name></name> <op:operator pos:line="362" pos:column="28">=</op:operator> <name pos:line="362" pos:column="30">hwnd</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="363" pos:column="9">nppData</name><op:operator pos:line="363" pos:column="16">.</op:operator><name pos:line="363" pos:column="17">_scintillaMainHandle</name></name> <op:operator pos:line="363" pos:column="38">=</op:operator> <call><name><name pos:line="363" pos:column="40">_mainEditView</name><op:operator pos:line="363" pos:column="53">.</op:operator><name pos:line="363" pos:column="54">getHSelf</name></name><argument_list pos:line="363" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="364" pos:column="9">nppData</name><op:operator pos:line="364" pos:column="16">.</op:operator><name pos:line="364" pos:column="17">_scintillaSecondHandle</name></name> <op:operator pos:line="364" pos:column="40">=</op:operator> <call><name><name pos:line="364" pos:column="42">_subEditView</name><op:operator pos:line="364" pos:column="54">.</op:operator><name pos:line="364" pos:column="55">getHSelf</name></name><argument_list pos:line="364" pos:column="63">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="366" pos:column="9">_scintillaCtrls4Plugins</name><op:operator pos:line="366" pos:column="32">.</op:operator><name pos:line="366" pos:column="33">init</name></name><argument_list pos:line="366" pos:column="37">(<argument><expr><call><name><name pos:line="366" pos:column="38">_pPublicInterface</name><op:operator pos:line="366" pos:column="55">-&gt;</op:operator><name pos:line="366" pos:column="57">getHinst</name></name><argument_list pos:line="366" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="366" pos:column="69">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="367" pos:column="9">_pluginsManager</name><op:operator pos:line="367" pos:column="24">.</op:operator><name pos:line="367" pos:column="25">init</name></name><argument_list pos:line="367" pos:column="29">(<argument><expr><name pos:line="367" pos:column="30">nppData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="369" pos:column="9">// Load plugins firstly from "%APPDATA%/Notepad++/plugins" </comment>
	<comment type="line" pos:line="370" pos:column="9">// if Notepad++ is not in localConf mode. </comment>
	<comment type="line" pos:line="371" pos:column="9">// All the dll loaded are marked.</comment>
	<decl_stmt><decl><type><name pos:line="372" pos:column="9">bool</name></type> <name pos:line="372" pos:column="14">isLoadFromAppDataAllow</name> <init pos:line="372" pos:column="37">= <expr><call><name><op:operator pos:line="372" pos:column="39">::</op:operator><name pos:line="372" pos:column="41">SendMessage</name></name><argument_list pos:line="372" pos:column="52">(<argument><expr><call><name><name pos:line="372" pos:column="53">_pPublicInterface</name><op:operator pos:line="372" pos:column="70">-&gt;</op:operator><name pos:line="372" pos:column="72">getHSelf</name></name><argument_list pos:line="372" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="372" pos:column="84">NPPM_GETAPPDATAPLUGINSALLOWED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="372" pos:column="115">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="372" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="372" pos:column="121">==</op:operator> <name pos:line="372" pos:column="124">TRUE</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="373" pos:column="9">const</specifier> <name pos:line="373" pos:column="15">TCHAR</name> <type:modifier pos:line="373" pos:column="21">*</type:modifier></type><name pos:line="373" pos:column="22">appDataNpp</name> <init pos:line="373" pos:column="33">= <expr><call><name><name pos:line="373" pos:column="35">pNppParam</name><op:operator pos:line="373" pos:column="44">-&gt;</op:operator><name pos:line="373" pos:column="46">getAppDataNppDir</name></name><argument_list pos:line="373" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="374" pos:column="9">if <condition pos:line="374" pos:column="12">(<expr><name><name pos:line="374" pos:column="13">appDataNpp</name><index pos:line="374" pos:column="23">[<expr><lit:literal type="number" pos:line="374" pos:column="24">0</lit:literal></expr>]</index></name> <op:operator pos:line="374" pos:column="27">&amp;&amp;</op:operator> <name pos:line="374" pos:column="30">isLoadFromAppDataAllow</name></expr>)</condition><then pos:line="374" pos:column="53">
		<expr_stmt><expr><call><name><name pos:line="375" pos:column="17">_pluginsManager</name><op:operator pos:line="375" pos:column="32">.</op:operator><name pos:line="375" pos:column="33">loadPlugins</name></name><argument_list pos:line="375" pos:column="44">(<argument><expr><name pos:line="375" pos:column="45">appDataNpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="377" pos:column="9">// Load plugins from its installation directory.</comment>
	<comment type="line" pos:line="378" pos:column="9">// All loaded dll will be ignored</comment>
	<expr_stmt><expr><call><name><name pos:line="379" pos:column="9">_pluginsManager</name><op:operator pos:line="379" pos:column="24">.</op:operator><name pos:line="379" pos:column="25">loadPlugins</name></name><argument_list pos:line="379" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	

    <expr_stmt><expr><call><name><name pos:line="382" pos:column="5">_restoreButton</name><op:operator pos:line="382" pos:column="19">.</op:operator><name pos:line="382" pos:column="20">init</name></name><argument_list pos:line="382" pos:column="24">(<argument><expr><call><name><name pos:line="382" pos:column="25">_pPublicInterface</name><op:operator pos:line="382" pos:column="42">-&gt;</op:operator><name pos:line="382" pos:column="44">getHinst</name></name><argument_list pos:line="382" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="382" pos:column="56">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<comment type="line" pos:line="385" pos:column="9">// ------------ //</comment>
	<comment type="line" pos:line="386" pos:column="9">// Menu Section //</comment>
	<comment type="line" pos:line="387" pos:column="9">// ------------ //</comment>

	<comment type="line" pos:line="389" pos:column="9">// Macro Menu</comment>
	<decl_stmt><decl><type><name><name pos:line="390" pos:column="9">std</name><op:operator pos:line="390" pos:column="12">::</op:operator><name><name pos:line="390" pos:column="14">vector</name><argument_list pos:line="390" pos:column="20">&lt;<argument><expr><name pos:line="390" pos:column="21">MacroShortcut</name></expr></argument>&gt;</argument_list></name></name> <type:modifier pos:line="390" pos:column="36">&amp;</type:modifier></type> <name pos:line="390" pos:column="38">macros</name>  <init pos:line="390" pos:column="46">= <expr><call><name><name pos:line="390" pos:column="48">pNppParam</name><op:operator pos:line="390" pos:column="57">-&gt;</op:operator><name pos:line="390" pos:column="59">getMacroList</name></name><argument_list pos:line="390" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="391" pos:column="9">HMENU</name></type> <name pos:line="391" pos:column="15">hMacroMenu</name> <init pos:line="391" pos:column="26">= <expr><call><name><op:operator pos:line="391" pos:column="28">::</op:operator><name pos:line="391" pos:column="30">GetSubMenu</name></name><argument_list pos:line="391" pos:column="40">(<argument><expr><name pos:line="391" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="391" pos:column="58">MENUINDEX_MACRO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="392" pos:column="9">size_t</name> <specifier pos:line="392" pos:column="16">const</specifier></type> <name pos:line="392" pos:column="22">posBase</name> <init pos:line="392" pos:column="30">= <expr><lit:literal type="number" pos:line="392" pos:column="32">6</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="393" pos:column="9">size_t</name></type> <name pos:line="393" pos:column="16">nbMacro</name> <init pos:line="393" pos:column="24">= <expr><call><name><name pos:line="393" pos:column="26">macros</name><op:operator pos:line="393" pos:column="32">.</op:operator><name pos:line="393" pos:column="33">size</name></name><argument_list pos:line="393" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="394" pos:column="9">if <condition pos:line="394" pos:column="12">(<expr><name pos:line="394" pos:column="13">nbMacro</name> <op:operator pos:line="394" pos:column="21">&gt;=</op:operator> <lit:literal type="number" pos:line="394" pos:column="24">1</lit:literal></expr>)</condition><then pos:line="394" pos:column="26">
		<expr_stmt><expr><call><name><op:operator pos:line="395" pos:column="17">::</op:operator><name pos:line="395" pos:column="19">InsertMenu</name></name><argument_list pos:line="395" pos:column="29">(<argument><expr><name pos:line="395" pos:column="30">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="395" pos:column="42">posBase</name> <op:operator pos:line="395" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="395" pos:column="52">1</lit:literal></expr></argument>, <argument><expr><name pos:line="395" pos:column="55">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="395" pos:column="70">(</op:operator><name pos:line="395" pos:column="71">unsigned</name> <name pos:line="395" pos:column="80">int</name><op:operator pos:line="395" pos:column="83">)</op:operator><op:operator pos:line="395" pos:column="84">-</op:operator><lit:literal type="number" pos:line="395" pos:column="85">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="395" pos:column="88">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<for pos:line="397" pos:column="9">for (<init><decl><type><name pos:line="397" pos:column="14">size_t</name></type> <name pos:line="397" pos:column="21">i</name> <init pos:line="397" pos:column="23">= <expr><lit:literal type="number" pos:line="397" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="397" pos:column="29">i</name> <op:operator pos:line="397" pos:column="31">&lt;</op:operator> <name pos:line="397" pos:column="33">nbMacro</name></expr> ;</condition> <incr><expr><name pos:line="397" pos:column="43">i</name><op:operator pos:line="397" pos:column="44">++</op:operator></expr></incr>)
	<block pos:line="398" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="399" pos:column="17">::</op:operator><name pos:line="399" pos:column="19">InsertMenu</name></name><argument_list pos:line="399" pos:column="29">(<argument><expr><name pos:line="399" pos:column="30">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="399" pos:column="42">posBase</name> <op:operator pos:line="399" pos:column="50">+</op:operator> <name pos:line="399" pos:column="52">i</name></expr></argument>, <argument><expr><name pos:line="399" pos:column="55">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="399" pos:column="70">ID_MACRO</name> <op:operator pos:line="399" pos:column="79">+</op:operator> <name pos:line="399" pos:column="81">i</name></expr></argument>, <argument><expr><name><name pos:line="399" pos:column="84">macros</name><index pos:line="399" pos:column="90">[<expr><name pos:line="399" pos:column="91">i</name></expr>]</index></name><op:operator pos:line="399" pos:column="93">.</op:operator><call><name pos:line="399" pos:column="94">toMenuItemString</name><argument_list pos:line="399" pos:column="110">()</argument_list></call><op:operator pos:line="399" pos:column="112">.</op:operator><call><name pos:line="399" pos:column="113">c_str</name><argument_list pos:line="399" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

    <if pos:line="402" pos:column="5">if <condition pos:line="402" pos:column="8">(<expr><name pos:line="402" pos:column="9">nbMacro</name> <op:operator pos:line="402" pos:column="17">&gt;=</op:operator> <lit:literal type="number" pos:line="402" pos:column="20">1</lit:literal></expr>)</condition><then pos:line="402" pos:column="22">
    <block pos:line="403" pos:column="5">{
        <expr_stmt><expr><call><name><op:operator pos:line="404" pos:column="9">::</op:operator><name pos:line="404" pos:column="11">InsertMenu</name></name><argument_list pos:line="404" pos:column="21">(<argument><expr><name pos:line="404" pos:column="22">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="404" pos:column="34">posBase</name> <op:operator pos:line="404" pos:column="42">+</op:operator> <name pos:line="404" pos:column="44">nbMacro</name> <op:operator pos:line="404" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="404" pos:column="54">1</lit:literal></expr></argument>, <argument><expr><name pos:line="404" pos:column="57">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="404" pos:column="72">(</op:operator><name pos:line="404" pos:column="73">unsigned</name> <name pos:line="404" pos:column="82">int</name><op:operator pos:line="404" pos:column="85">)</op:operator><op:operator pos:line="404" pos:column="86">-</op:operator><lit:literal type="number" pos:line="404" pos:column="87">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="404" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="405" pos:column="9">::</op:operator><name pos:line="405" pos:column="11">InsertMenu</name></name><argument_list pos:line="405" pos:column="21">(<argument><expr><name pos:line="405" pos:column="22">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="34">posBase</name> <op:operator pos:line="405" pos:column="42">+</op:operator> <name pos:line="405" pos:column="44">nbMacro</name> <op:operator pos:line="405" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="405" pos:column="54">2</lit:literal></expr></argument>, <argument><expr><name pos:line="405" pos:column="57">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="71">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name></expr></argument>, <argument><expr><call><name pos:line="405" pos:column="106">TEXT</name><argument_list pos:line="405" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="405" pos:column="111">"Modify Shortcut/Delete Macro..."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
	<comment type="line" pos:line="407" pos:column="9">// Run Menu</comment>
	<decl_stmt><decl><type><name><name pos:line="408" pos:column="9">std</name><op:operator pos:line="408" pos:column="12">::</op:operator><name><name pos:line="408" pos:column="14">vector</name><argument_list pos:line="408" pos:column="20">&lt;<argument><expr><name pos:line="408" pos:column="21">UserCommand</name></expr></argument>&gt;</argument_list></name></name> <type:modifier pos:line="408" pos:column="34">&amp;</type:modifier></type> <name pos:line="408" pos:column="36">userCommands</name> <init pos:line="408" pos:column="49">= <expr><call><name><name pos:line="408" pos:column="51">pNppParam</name><op:operator pos:line="408" pos:column="60">-&gt;</op:operator><name pos:line="408" pos:column="62">getUserCommandList</name></name><argument_list pos:line="408" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="409" pos:column="9">HMENU</name></type> <name pos:line="409" pos:column="15">hRunMenu</name> <init pos:line="409" pos:column="24">= <expr><call><name><op:operator pos:line="409" pos:column="26">::</op:operator><name pos:line="409" pos:column="28">GetSubMenu</name></name><argument_list pos:line="409" pos:column="38">(<argument><expr><name pos:line="409" pos:column="39">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="409" pos:column="56">MENUINDEX_RUN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="410" pos:column="9">int</name> <specifier pos:line="410" pos:column="13">const</specifier></type> <name pos:line="410" pos:column="19">runPosBase</name> <init pos:line="410" pos:column="30">= <expr><lit:literal type="number" pos:line="410" pos:column="32">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="411" pos:column="9">size_t</name></type> <name pos:line="411" pos:column="16">nbUserCommand</name> <init pos:line="411" pos:column="30">= <expr><call><name><name pos:line="411" pos:column="32">userCommands</name><op:operator pos:line="411" pos:column="44">.</op:operator><name pos:line="411" pos:column="45">size</name></name><argument_list pos:line="411" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="412" pos:column="9">if <condition pos:line="412" pos:column="12">(<expr><name pos:line="412" pos:column="13">nbUserCommand</name> <op:operator pos:line="412" pos:column="27">&gt;=</op:operator> <lit:literal type="number" pos:line="412" pos:column="30">1</lit:literal></expr>)</condition><then pos:line="412" pos:column="32">
		<expr_stmt><expr><call><name><op:operator pos:line="413" pos:column="17">::</op:operator><name pos:line="413" pos:column="19">InsertMenu</name></name><argument_list pos:line="413" pos:column="29">(<argument><expr><name pos:line="413" pos:column="30">hRunMenu</name></expr></argument>, <argument><expr><name pos:line="413" pos:column="40">runPosBase</name> <op:operator pos:line="413" pos:column="51">-</op:operator> <lit:literal type="number" pos:line="413" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><name pos:line="413" pos:column="56">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="413" pos:column="71">(</op:operator><name pos:line="413" pos:column="72">unsigned</name> <name pos:line="413" pos:column="81">int</name><op:operator pos:line="413" pos:column="84">)</op:operator><op:operator pos:line="413" pos:column="85">-</op:operator><lit:literal type="number" pos:line="413" pos:column="86">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="413" pos:column="89">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<for pos:line="414" pos:column="9">for (<init><decl><type><name pos:line="414" pos:column="14">size_t</name></type> <name pos:line="414" pos:column="21">i</name> <init pos:line="414" pos:column="23">= <expr><lit:literal type="number" pos:line="414" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="414" pos:column="29">i</name> <op:operator pos:line="414" pos:column="31">&lt;</op:operator> <name pos:line="414" pos:column="33">nbUserCommand</name></expr> ;</condition> <incr><expr><name pos:line="414" pos:column="49">i</name><op:operator pos:line="414" pos:column="50">++</op:operator></expr></incr>)
	<block pos:line="415" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="416" pos:column="17">::</op:operator><name pos:line="416" pos:column="19">InsertMenu</name></name><argument_list pos:line="416" pos:column="29">(<argument><expr><name pos:line="416" pos:column="30">hRunMenu</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="40">runPosBase</name> <op:operator pos:line="416" pos:column="51">+</op:operator> <name pos:line="416" pos:column="53">i</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="56">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="71">ID_USER_CMD</name> <op:operator pos:line="416" pos:column="83">+</op:operator> <name pos:line="416" pos:column="85">i</name></expr></argument>, <argument><expr><name><name pos:line="416" pos:column="88">userCommands</name><index pos:line="416" pos:column="100">[<expr><name pos:line="416" pos:column="101">i</name></expr>]</index></name><op:operator pos:line="416" pos:column="103">.</op:operator><call><name pos:line="416" pos:column="104">toMenuItemString</name><argument_list pos:line="416" pos:column="120">()</argument_list></call><op:operator pos:line="416" pos:column="122">.</op:operator><call><name pos:line="416" pos:column="123">c_str</name><argument_list pos:line="416" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

    <if pos:line="419" pos:column="5">if <condition pos:line="419" pos:column="8">(<expr><name pos:line="419" pos:column="9">nbUserCommand</name> <op:operator pos:line="419" pos:column="23">&gt;=</op:operator> <lit:literal type="number" pos:line="419" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="419" pos:column="28">
    <block pos:line="420" pos:column="5">{
		<expr_stmt><expr><call><name><op:operator pos:line="421" pos:column="17">::</op:operator><name pos:line="421" pos:column="19">InsertMenu</name></name><argument_list pos:line="421" pos:column="29">(<argument><expr><name pos:line="421" pos:column="30">hRunMenu</name></expr></argument>, <argument><expr><name pos:line="421" pos:column="40">runPosBase</name> <op:operator pos:line="421" pos:column="51">+</op:operator> <name pos:line="421" pos:column="53">nbUserCommand</name> <op:operator pos:line="421" pos:column="67">+</op:operator> <lit:literal type="number" pos:line="421" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="421" pos:column="72">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="421" pos:column="87">(</op:operator><name pos:line="421" pos:column="88">unsigned</name> <name pos:line="421" pos:column="97">int</name><op:operator pos:line="421" pos:column="100">)</op:operator><op:operator pos:line="421" pos:column="101">-</op:operator><lit:literal type="number" pos:line="421" pos:column="102">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="421" pos:column="105">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="422" pos:column="9">::</op:operator><name pos:line="422" pos:column="11">InsertMenu</name></name><argument_list pos:line="422" pos:column="21">(<argument><expr><name pos:line="422" pos:column="22">hRunMenu</name></expr></argument>, <argument><expr><name pos:line="422" pos:column="32">runPosBase</name> <op:operator pos:line="422" pos:column="43">+</op:operator> <name pos:line="422" pos:column="45">nbUserCommand</name> <op:operator pos:line="422" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="422" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><name pos:line="422" pos:column="64">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="422" pos:column="78">IDM_SETTING_SHORTCUT_MAPPER_RUN</name></expr></argument>, <argument><expr><call><name pos:line="422" pos:column="111">TEXT</name><argument_list pos:line="422" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="422" pos:column="116">"Modify Shortcut/Delete Command..."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	<comment type="line" pos:line="425" pos:column="9">// Updater menu item</comment>
	<if pos:line="426" pos:column="9">if <condition pos:line="426" pos:column="12">(<expr><op:operator pos:line="426" pos:column="13">!</op:operator><name><name pos:line="426" pos:column="14">nppGUI</name><op:operator pos:line="426" pos:column="20">.</op:operator><name pos:line="426" pos:column="21">_doesExistUpdater</name></name></expr>)</condition><then pos:line="426" pos:column="39">
	<block pos:line="427" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="428" pos:column="17">::</op:operator><name pos:line="428" pos:column="19">DeleteMenu</name></name><argument_list pos:line="428" pos:column="29">(<argument><expr><name pos:line="428" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="428" pos:column="47">IDM_UPDATE_NPP</name></expr></argument>, <argument><expr><name pos:line="428" pos:column="63">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="429" pos:column="17">::</op:operator><name pos:line="429" pos:column="19">DrawMenuBar</name></name><argument_list pos:line="429" pos:column="30">(<argument><expr><name pos:line="429" pos:column="31">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="431" pos:column="9">//Languages Menu</comment>
	<decl_stmt><decl><type><name pos:line="432" pos:column="9">HMENU</name></type> <name pos:line="432" pos:column="15">hLangMenu</name> <init pos:line="432" pos:column="25">= <expr><call><name><op:operator pos:line="432" pos:column="27">::</op:operator><name pos:line="432" pos:column="29">GetSubMenu</name></name><argument_list pos:line="432" pos:column="39">(<argument><expr><name pos:line="432" pos:column="40">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="432" pos:column="57">MENUINDEX_LANGUAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="434" pos:column="9">// Add external languages to menu</comment>
	<for pos:line="435" pos:column="9">for (<init><decl><type><name pos:line="435" pos:column="14">int</name></type> <name pos:line="435" pos:column="18">i</name> <init pos:line="435" pos:column="20">= <expr><lit:literal type="number" pos:line="435" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="435" pos:column="26">i</name> <op:operator pos:line="435" pos:column="28">&lt;</op:operator> <call><name><name pos:line="435" pos:column="30">pNppParam</name><op:operator pos:line="435" pos:column="39">-&gt;</op:operator><name pos:line="435" pos:column="41">getNbExternalLang</name></name><argument_list pos:line="435" pos:column="58">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="435" pos:column="63">i</name><op:operator pos:line="435" pos:column="64">++</op:operator></expr></incr>)
	<block pos:line="436" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="437" pos:column="17">ExternalLangContainer</name> <type:modifier pos:line="437" pos:column="39">&amp;</type:modifier></type> <name pos:line="437" pos:column="41">externalLangContainer</name> <init pos:line="437" pos:column="63">= <expr><call><name><name pos:line="437" pos:column="65">pNppParam</name><op:operator pos:line="437" pos:column="74">-&gt;</op:operator><name pos:line="437" pos:column="76">getELCFromIndex</name></name><argument_list pos:line="437" pos:column="91">(<argument><expr><name pos:line="437" pos:column="92">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="439" pos:column="17">int</name></type> <name pos:line="439" pos:column="21">numLangs</name> <init pos:line="439" pos:column="30">= <expr><call><name><op:operator pos:line="439" pos:column="32">::</op:operator><name pos:line="439" pos:column="34">GetMenuItemCount</name></name><argument_list pos:line="439" pos:column="50">(<argument><expr><name pos:line="439" pos:column="51">hLangMenu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="440" pos:column="17">const</specifier> <name pos:line="440" pos:column="23">int</name></type> <name pos:line="440" pos:column="27">bufferSize</name> <init pos:line="440" pos:column="38">= <expr><lit:literal type="number" pos:line="440" pos:column="40">100</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="441" pos:column="17">TCHAR</name></type> <name><name pos:line="441" pos:column="23">buffer</name><index pos:line="441" pos:column="29">[<expr><name pos:line="441" pos:column="30">bufferSize</name></expr>]</index></name></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="443" pos:column="17">int</name></type> <name pos:line="443" pos:column="21">x</name></decl>;</decl_stmt>
		<for pos:line="444" pos:column="17">for(<init><expr><name pos:line="444" pos:column="21">x</name> <op:operator pos:line="444" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="444" pos:column="25">0</lit:literal></expr>;</init> <condition><expr><op:operator pos:line="444" pos:column="28">(</op:operator><name pos:line="444" pos:column="29">x</name> <op:operator pos:line="444" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="444" pos:column="34">0</lit:literal> <op:operator pos:line="444" pos:column="36">||</op:operator> <call><name pos:line="444" pos:column="39">lstrcmp</name><argument_list pos:line="444" pos:column="46">(<argument><expr><name><name pos:line="444" pos:column="47">externalLangContainer</name><op:operator pos:line="444" pos:column="68">.</op:operator><name pos:line="444" pos:column="69">_name</name></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="76">buffer</name></expr></argument>)</argument_list></call> <op:operator pos:line="444" pos:column="84">&gt;</op:operator> <lit:literal type="number" pos:line="444" pos:column="86">0</lit:literal><op:operator pos:line="444" pos:column="87">)</op:operator> <op:operator pos:line="444" pos:column="89">&amp;&amp;</op:operator> <name pos:line="444" pos:column="92">x</name> <op:operator pos:line="444" pos:column="94">&lt;</op:operator> <name pos:line="444" pos:column="96">numLangs</name></expr>;</condition> <incr><expr><name pos:line="444" pos:column="106">x</name><op:operator pos:line="444" pos:column="107">++</op:operator></expr></incr>)
		<block pos:line="445" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="446" pos:column="25">::</op:operator><name pos:line="446" pos:column="27">GetMenuString</name></name><argument_list pos:line="446" pos:column="40">(<argument><expr><name pos:line="446" pos:column="41">hLangMenu</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="52">x</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="55">buffer</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="63">bufferSize</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="75">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>

		<expr_stmt><expr><call><name><op:operator pos:line="449" pos:column="17">::</op:operator><name pos:line="449" pos:column="19">InsertMenu</name></name><argument_list pos:line="449" pos:column="29">(<argument><expr><name pos:line="449" pos:column="30">hLangMenu</name></expr></argument>, <argument><expr><name pos:line="449" pos:column="41">x</name><op:operator pos:line="449" pos:column="42">-</op:operator><lit:literal type="number" pos:line="449" pos:column="43">1</lit:literal></expr></argument>, <argument><expr><name pos:line="449" pos:column="46">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="449" pos:column="61">IDM_LANG_EXTERNAL</name> <op:operator pos:line="449" pos:column="79">+</op:operator> <name pos:line="449" pos:column="81">i</name></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="84">externalLangContainer</name><op:operator pos:line="449" pos:column="105">.</op:operator><name pos:line="449" pos:column="106">_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<if pos:line="452" pos:column="9">if <condition pos:line="452" pos:column="12">(<expr><call><name><name pos:line="452" pos:column="13">nppGUI</name><op:operator pos:line="452" pos:column="19">.</op:operator><name pos:line="452" pos:column="20">_excludedLangList</name><op:operator pos:line="452" pos:column="37">.</op:operator><name pos:line="452" pos:column="38">size</name></name><argument_list pos:line="452" pos:column="42">()</argument_list></call> <op:operator pos:line="452" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="452" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="452" pos:column="49">
	<block pos:line="453" pos:column="9">{
		<for pos:line="454" pos:column="17">for (<init><decl><type><name pos:line="454" pos:column="22">size_t</name></type> <name pos:line="454" pos:column="29">i</name> <init pos:line="454" pos:column="31">= <expr><lit:literal type="number" pos:line="454" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="454" pos:column="37">i</name> <op:operator pos:line="454" pos:column="39">&lt;</op:operator> <call><name><name pos:line="454" pos:column="41">nppGUI</name><op:operator pos:line="454" pos:column="47">.</op:operator><name pos:line="454" pos:column="48">_excludedLangList</name><op:operator pos:line="454" pos:column="65">.</op:operator><name pos:line="454" pos:column="66">size</name></name><argument_list pos:line="454" pos:column="70">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="454" pos:column="75">i</name><op:operator pos:line="454" pos:column="76">++</op:operator></expr></incr>)
		<block pos:line="455" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="456" pos:column="25">int</name></type> <name pos:line="456" pos:column="29">cmdID</name> <init pos:line="456" pos:column="35">= <expr><call><name><name pos:line="456" pos:column="37">pNppParam</name><op:operator pos:line="456" pos:column="46">-&gt;</op:operator><name pos:line="456" pos:column="48">langTypeToCommandID</name></name><argument_list pos:line="456" pos:column="67">(<argument><expr><name><name pos:line="456" pos:column="68">nppGUI</name><op:operator pos:line="456" pos:column="74">.</op:operator><name pos:line="456" pos:column="75">_excludedLangList</name><index pos:line="456" pos:column="92">[<expr><name pos:line="456" pos:column="93">i</name></expr>]</index></name><op:operator pos:line="456" pos:column="95">.</op:operator><name pos:line="456" pos:column="96">_langType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="457" pos:column="25">const</specifier> <name pos:line="457" pos:column="31">int</name></type> <name pos:line="457" pos:column="35">itemSize</name> <init pos:line="457" pos:column="44">= <expr><lit:literal type="number" pos:line="457" pos:column="46">256</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="458" pos:column="25">TCHAR</name></type> <name><name pos:line="458" pos:column="31">itemName</name><index pos:line="458" pos:column="39">[<expr><name pos:line="458" pos:column="40">itemSize</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="459" pos:column="25">::</op:operator><name pos:line="459" pos:column="27">GetMenuString</name></name><argument_list pos:line="459" pos:column="40">(<argument><expr><name pos:line="459" pos:column="41">hLangMenu</name></expr></argument>, <argument><expr><name pos:line="459" pos:column="52">cmdID</name></expr></argument>, <argument><expr><name pos:line="459" pos:column="59">itemName</name></expr></argument>, <argument><expr><name pos:line="459" pos:column="69">itemSize</name></expr></argument>, <argument><expr><name pos:line="459" pos:column="79">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="460" pos:column="25">nppGUI</name><op:operator pos:line="460" pos:column="31">.</op:operator><name pos:line="460" pos:column="32">_excludedLangList</name><index pos:line="460" pos:column="49">[<expr><name pos:line="460" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="460" pos:column="52">.</op:operator><name pos:line="460" pos:column="53">_cmdID</name> <op:operator pos:line="460" pos:column="60">=</op:operator> <name pos:line="460" pos:column="62">cmdID</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="461" pos:column="25">nppGUI</name><op:operator pos:line="461" pos:column="31">.</op:operator><name pos:line="461" pos:column="32">_excludedLangList</name><index pos:line="461" pos:column="49">[<expr><name pos:line="461" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="461" pos:column="52">.</op:operator><name pos:line="461" pos:column="53">_langName</name> <op:operator pos:line="461" pos:column="63">=</op:operator> <name pos:line="461" pos:column="65">itemName</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="462" pos:column="25">::</op:operator><name pos:line="462" pos:column="27">DeleteMenu</name></name><argument_list pos:line="462" pos:column="37">(<argument><expr><name pos:line="462" pos:column="38">hLangMenu</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="49">cmdID</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="56">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="463" pos:column="25">DrawMenuBar</name><argument_list pos:line="463" pos:column="36">(<argument><expr><name pos:line="463" pos:column="37">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<comment type="line" pos:line="467" pos:column="9">// Add User Define Languages Entry</comment>
	<decl_stmt><decl><type><name pos:line="468" pos:column="9">int</name></type> <name pos:line="468" pos:column="13">udlpos</name> <init pos:line="468" pos:column="20">= <expr><call><name><op:operator pos:line="468" pos:column="22">::</op:operator><name pos:line="468" pos:column="24">GetMenuItemCount</name></name><argument_list pos:line="468" pos:column="40">(<argument><expr><name pos:line="468" pos:column="41">hLangMenu</name></expr></argument>)</argument_list></call> <op:operator pos:line="468" pos:column="52">-</op:operator> <lit:literal type="number" pos:line="468" pos:column="54">1</lit:literal></expr></init></decl>;</decl_stmt>

	<for pos:line="470" pos:column="9">for (<init><decl><type><name pos:line="470" pos:column="14">int</name></type> <name pos:line="470" pos:column="18">i</name> <init pos:line="470" pos:column="20">= <expr><lit:literal type="number" pos:line="470" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="470" pos:column="26">i</name> <op:operator pos:line="470" pos:column="28">&lt;</op:operator> <call><name><name pos:line="470" pos:column="30">pNppParam</name><op:operator pos:line="470" pos:column="39">-&gt;</op:operator><name pos:line="470" pos:column="41">getNbUserLang</name></name><argument_list pos:line="470" pos:column="54">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="470" pos:column="59">i</name><op:operator pos:line="470" pos:column="60">++</op:operator></expr></incr>)
	<block pos:line="471" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="472" pos:column="17">UserLangContainer</name> <type:modifier pos:line="472" pos:column="35">&amp;</type:modifier></type> <name pos:line="472" pos:column="37">userLangContainer</name> <init pos:line="472" pos:column="55">= <expr><call><name><name pos:line="472" pos:column="57">pNppParam</name><op:operator pos:line="472" pos:column="66">-&gt;</op:operator><name pos:line="472" pos:column="68">getULCFromIndex</name></name><argument_list pos:line="472" pos:column="83">(<argument><expr><name pos:line="472" pos:column="84">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="473" pos:column="17">::</op:operator><name pos:line="473" pos:column="19">InsertMenu</name></name><argument_list pos:line="473" pos:column="29">(<argument><expr><name pos:line="473" pos:column="30">hLangMenu</name></expr></argument>, <argument><expr><name pos:line="473" pos:column="41">udlpos</name> <op:operator pos:line="473" pos:column="48">+</op:operator> <name pos:line="473" pos:column="50">i</name></expr></argument>, <argument><expr><name pos:line="473" pos:column="53">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="473" pos:column="68">IDM_LANG_USER</name> <op:operator pos:line="473" pos:column="82">+</op:operator> <name pos:line="473" pos:column="84">i</name> <op:operator pos:line="473" pos:column="86">+</op:operator> <lit:literal type="number" pos:line="473" pos:column="88">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="473" pos:column="91">userLangContainer</name><op:operator pos:line="473" pos:column="108">.</op:operator><name pos:line="473" pos:column="109">getName</name></name><argument_list pos:line="473" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<comment type="line" pos:line="476" pos:column="9">//Add recent files</comment>
	<decl_stmt><decl><type><name pos:line="477" pos:column="9">HMENU</name></type> <name pos:line="477" pos:column="15">hFileMenu</name> <init pos:line="477" pos:column="25">= <expr><call><name><op:operator pos:line="477" pos:column="27">::</op:operator><name pos:line="477" pos:column="29">GetSubMenu</name></name><argument_list pos:line="477" pos:column="39">(<argument><expr><name pos:line="477" pos:column="40">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="477" pos:column="57">MENUINDEX_FILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="478" pos:column="9">int</name></type> <name pos:line="478" pos:column="13">nbLRFile</name> <init pos:line="478" pos:column="22">= <expr><call><name><name pos:line="478" pos:column="24">pNppParam</name><op:operator pos:line="478" pos:column="33">-&gt;</op:operator><name pos:line="478" pos:column="35">getNbLRFile</name></name><argument_list pos:line="478" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="479" pos:column="9">int</name></type> <name pos:line="479" pos:column="13">pos</name> <init pos:line="479" pos:column="17">= <expr><name pos:line="479" pos:column="19">IDM_FILEMENU_LASTONE</name> <op:operator pos:line="479" pos:column="40">-</op:operator> <name pos:line="479" pos:column="42">IDM_FILE</name> <op:operator pos:line="479" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="479" pos:column="53">2</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="481" pos:column="9">_lastRecentFileList</name><op:operator pos:line="481" pos:column="28">.</op:operator><name pos:line="481" pos:column="29">initMenu</name></name><argument_list pos:line="481" pos:column="37">(<argument><expr><name pos:line="481" pos:column="38">hFileMenu</name></expr></argument>, <argument><expr><name pos:line="481" pos:column="49">IDM_FILEMENU_LASTONE</name> <op:operator pos:line="481" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="481" pos:column="72">1</lit:literal></expr></argument>, <argument><expr><name pos:line="481" pos:column="75">pos</name></expr></argument>, <argument><expr><call><name><name pos:line="481" pos:column="80">pNppParam</name><op:operator pos:line="481" pos:column="89">-&gt;</op:operator><name pos:line="481" pos:column="91">putRecentFileInSubMenu</name></name><argument_list pos:line="481" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="482" pos:column="9">_lastRecentFileList</name><op:operator pos:line="482" pos:column="28">.</op:operator><name pos:line="482" pos:column="29">setLangEncoding</name></name><argument_list pos:line="482" pos:column="44">(<argument><expr><call><name><name pos:line="482" pos:column="45">_nativeLangSpeaker</name><op:operator pos:line="482" pos:column="63">.</op:operator><name pos:line="482" pos:column="64">getLangEncoding</name></name><argument_list pos:line="482" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="483" pos:column="9">for (<init><decl><type><name pos:line="483" pos:column="14">int</name></type> <name pos:line="483" pos:column="18">i</name> <init pos:line="483" pos:column="20">= <expr><lit:literal type="number" pos:line="483" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="483" pos:column="26">i</name> <op:operator pos:line="483" pos:column="28">&lt;</op:operator> <name pos:line="483" pos:column="30">nbLRFile</name></expr> ;</condition> <incr><expr><name pos:line="483" pos:column="41">i</name><op:operator pos:line="483" pos:column="42">++</op:operator></expr></incr>)
	<block pos:line="484" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="485" pos:column="17">generic_string</name> <type:modifier pos:line="485" pos:column="32">*</type:modifier></type> <name pos:line="485" pos:column="34">stdStr</name> <init pos:line="485" pos:column="41">= <expr><call><name><name pos:line="485" pos:column="43">pNppParam</name><op:operator pos:line="485" pos:column="52">-&gt;</op:operator><name pos:line="485" pos:column="54">getLRFile</name></name><argument_list pos:line="485" pos:column="63">(<argument><expr><name pos:line="485" pos:column="64">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="486" pos:column="17">if <condition pos:line="486" pos:column="20">(<expr><op:operator pos:line="486" pos:column="21">!</op:operator><name><name pos:line="486" pos:column="22">nppGUI</name><op:operator pos:line="486" pos:column="28">.</op:operator><name pos:line="486" pos:column="29">_checkHistoryFiles</name></name> <op:operator pos:line="486" pos:column="48">||</op:operator> <call><name pos:line="486" pos:column="51">PathFileExists</name><argument_list pos:line="486" pos:column="65">(<argument><expr><call><name><name pos:line="486" pos:column="66">stdStr</name><op:operator pos:line="486" pos:column="72">-&gt;</op:operator><name pos:line="486" pos:column="74">c_str</name></name><argument_list pos:line="486" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="486" pos:column="83">
		<block pos:line="487" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="488" pos:column="25">_lastRecentFileList</name><op:operator pos:line="488" pos:column="44">.</op:operator><name pos:line="488" pos:column="45">add</name></name><argument_list pos:line="488" pos:column="48">(<argument><expr><call><name><name pos:line="488" pos:column="49">stdStr</name><op:operator pos:line="488" pos:column="55">-&gt;</op:operator><name pos:line="488" pos:column="57">c_str</name></name><argument_list pos:line="488" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<comment type="line" pos:line="492" pos:column="9">//Plugin menu</comment>
	<expr_stmt><expr><call><name><name pos:line="493" pos:column="9">_pluginsManager</name><op:operator pos:line="493" pos:column="24">.</op:operator><name pos:line="493" pos:column="25">setMenu</name></name><argument_list pos:line="493" pos:column="32">(<argument><expr><name pos:line="493" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="493" pos:column="50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="495" pos:column="9">//Main menu is loaded, now load context menu items</comment>
	<expr_stmt><expr><call><name><name pos:line="496" pos:column="9">pNppParam</name><op:operator pos:line="496" pos:column="18">-&gt;</op:operator><name pos:line="496" pos:column="20">getContextMenuFromXmlTree</name></name><argument_list pos:line="496" pos:column="45">(<argument><expr><name pos:line="496" pos:column="46">_mainMenuHandle</name></expr></argument>, <argument><expr><call><name><name pos:line="496" pos:column="63">_pluginsManager</name><op:operator pos:line="496" pos:column="78">.</op:operator><name pos:line="496" pos:column="79">getMenuHandle</name></name><argument_list pos:line="496" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="498" pos:column="9">if <condition pos:line="498" pos:column="12">(<expr><call><name><name pos:line="498" pos:column="13">pNppParam</name><op:operator pos:line="498" pos:column="22">-&gt;</op:operator><name pos:line="498" pos:column="24">hasCustomContextMenu</name></name><argument_list pos:line="498" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="498" pos:column="47">
	<block pos:line="499" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="500" pos:column="17">_mainEditView</name><op:operator pos:line="500" pos:column="30">.</op:operator><name pos:line="500" pos:column="31">execute</name></name><argument_list pos:line="500" pos:column="38">(<argument><expr><name pos:line="500" pos:column="39">SCI_USEPOPUP</name></expr></argument>, <argument><expr><name pos:line="500" pos:column="53">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="501" pos:column="17">_subEditView</name><op:operator pos:line="501" pos:column="29">.</op:operator><name pos:line="501" pos:column="30">execute</name></name><argument_list pos:line="501" pos:column="37">(<argument><expr><name pos:line="501" pos:column="38">SCI_USEPOPUP</name></expr></argument>, <argument><expr><name pos:line="501" pos:column="52">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="504" pos:column="9">generic_string</name></type> <name pos:line="504" pos:column="24">pluginsTrans</name></decl><op:operator pos:line="504" pos:column="36">,</op:operator> <decl><type ref="prev"/><name pos:line="504" pos:column="38">windowTrans</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="505" pos:column="9">_nativeLangSpeaker</name><op:operator pos:line="505" pos:column="27">.</op:operator><name pos:line="505" pos:column="28">changeMenuLang</name></name><argument_list pos:line="505" pos:column="42">(<argument><expr><name pos:line="505" pos:column="43">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="505" pos:column="60">pluginsTrans</name></expr></argument>, <argument><expr><name pos:line="505" pos:column="74">windowTrans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="506" pos:column="9">::</op:operator><name pos:line="506" pos:column="11">DrawMenuBar</name></name><argument_list pos:line="506" pos:column="22">(<argument><expr><name pos:line="506" pos:column="23">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<if pos:line="509" pos:column="9">if <condition pos:line="509" pos:column="12">(<expr><call><name><name pos:line="509" pos:column="13">_pluginsManager</name><op:operator pos:line="509" pos:column="28">.</op:operator><name pos:line="509" pos:column="29">hasPlugins</name></name><argument_list pos:line="509" pos:column="39">()</argument_list></call> <op:operator pos:line="509" pos:column="42">&amp;&amp;</op:operator> <name pos:line="509" pos:column="45">pluginsTrans</name> <op:operator pos:line="509" pos:column="58">!=</op:operator> <call><name pos:line="509" pos:column="61">TEXT</name><argument_list pos:line="509" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="509" pos:column="66">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="509" pos:column="70">
	<block pos:line="510" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="511" pos:column="17">::</op:operator><name pos:line="511" pos:column="19">ModifyMenu</name></name><argument_list pos:line="511" pos:column="29">(<argument><expr><name pos:line="511" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="511" pos:column="47">MENUINDEX_PLUGINS</name></expr></argument>, <argument><expr><name pos:line="511" pos:column="66">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="511" pos:column="81">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="511" pos:column="84">pluginsTrans</name><op:operator pos:line="511" pos:column="96">.</op:operator><name pos:line="511" pos:column="97">c_str</name></name><argument_list pos:line="511" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="513" pos:column="9">//Windows menu</comment>
	<expr_stmt><expr><call><name><name pos:line="514" pos:column="9">_windowsMenu</name><op:operator pos:line="514" pos:column="21">.</op:operator><name pos:line="514" pos:column="22">init</name></name><argument_list pos:line="514" pos:column="26">(<argument><expr><call><name><name pos:line="514" pos:column="27">_pPublicInterface</name><op:operator pos:line="514" pos:column="44">-&gt;</op:operator><name pos:line="514" pos:column="46">getHinst</name></name><argument_list pos:line="514" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="514" pos:column="58">_mainMenuHandle</name></expr></argument>, <argument><expr><call><name><name pos:line="514" pos:column="75">windowTrans</name><op:operator pos:line="514" pos:column="86">.</op:operator><name pos:line="514" pos:column="87">c_str</name></name><argument_list pos:line="514" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="516" pos:column="9">// Update context menu strings (translated)</comment>
	<decl_stmt><decl><type><name><name pos:line="517" pos:column="9">vector</name><argument_list pos:line="517" pos:column="15">&lt;<argument><expr><name pos:line="517" pos:column="16">MenuItemUnit</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="517" pos:column="30">&amp;</type:modifier></type> <name pos:line="517" pos:column="32">tmp</name> <init pos:line="517" pos:column="36">= <expr><call><name><name pos:line="517" pos:column="38">pNppParam</name><op:operator pos:line="517" pos:column="47">-&gt;</op:operator><name pos:line="517" pos:column="49">getContextMenuItems</name></name><argument_list pos:line="517" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="518" pos:column="9">size_t</name></type> <name pos:line="518" pos:column="16">len</name> <init pos:line="518" pos:column="20">= <expr><call><name><name pos:line="518" pos:column="22">tmp</name><op:operator pos:line="518" pos:column="25">.</op:operator><name pos:line="518" pos:column="26">size</name></name><argument_list pos:line="518" pos:column="30">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="519" pos:column="9">TCHAR</name></type> <name><name pos:line="519" pos:column="15">menuName</name><index pos:line="519" pos:column="23">[<expr><lit:literal type="number" pos:line="519" pos:column="24">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<for pos:line="520" pos:column="9">for (<init><decl><type><name pos:line="520" pos:column="14">size_t</name></type> <name pos:line="520" pos:column="21">i</name> <init pos:line="520" pos:column="23">= <expr><lit:literal type="number" pos:line="520" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="520" pos:column="29">i</name> <op:operator pos:line="520" pos:column="31">&lt;</op:operator> <name pos:line="520" pos:column="33">len</name></expr> ;</condition> <incr><expr><name pos:line="520" pos:column="39">i</name><op:operator pos:line="520" pos:column="40">++</op:operator></expr></incr>)
	<block pos:line="521" pos:column="9">{
		<if pos:line="522" pos:column="17">if <condition pos:line="522" pos:column="20">(<expr><name><name pos:line="522" pos:column="21">tmp</name><index pos:line="522" pos:column="24">[<expr><name pos:line="522" pos:column="25">i</name></expr>]</index></name><op:operator pos:line="522" pos:column="27">.</op:operator><name pos:line="522" pos:column="28">_itemName</name> <op:operator pos:line="522" pos:column="38">==</op:operator> <call><name pos:line="522" pos:column="41">TEXT</name><argument_list pos:line="522" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="522" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="522" pos:column="50">
		<block pos:line="523" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="524" pos:column="25">::</op:operator><name pos:line="524" pos:column="27">GetMenuString</name></name><argument_list pos:line="524" pos:column="40">(<argument><expr><name pos:line="524" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name><name pos:line="524" pos:column="58">tmp</name><index pos:line="524" pos:column="61">[<expr><name pos:line="524" pos:column="62">i</name></expr>]</index></name><op:operator pos:line="524" pos:column="64">.</op:operator><name pos:line="524" pos:column="65">_cmdID</name></expr></argument>, <argument><expr><name pos:line="524" pos:column="73">menuName</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="524" pos:column="83">64</lit:literal></expr></argument>, <argument><expr><name pos:line="524" pos:column="87">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="525" pos:column="25">tmp</name><index pos:line="525" pos:column="28">[<expr><name pos:line="525" pos:column="29">i</name></expr>]</index></name><op:operator pos:line="525" pos:column="31">.</op:operator><name pos:line="525" pos:column="32">_itemName</name> <op:operator pos:line="525" pos:column="42">=</op:operator> <call><name pos:line="525" pos:column="44">purgeMenuItemString</name><argument_list pos:line="525" pos:column="63">(<argument><expr><name pos:line="525" pos:column="64">menuName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<comment type="line" pos:line="529" pos:column="9">//Input all the menu item names into shortcut list</comment>
	<comment type="line" pos:line="530" pos:column="9">//This will automatically do all translations, since menu translation has been done already</comment>
	<decl_stmt><decl><type><name><name pos:line="531" pos:column="9">vector</name><argument_list pos:line="531" pos:column="15">&lt;<argument><expr><name pos:line="531" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="531" pos:column="33">&amp;</type:modifier></type> <name pos:line="531" pos:column="35">shortcuts</name> <init pos:line="531" pos:column="45">= <expr><call><name><name pos:line="531" pos:column="47">pNppParam</name><op:operator pos:line="531" pos:column="56">-&gt;</op:operator><name pos:line="531" pos:column="58">getUserShortcuts</name></name><argument_list pos:line="531" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="532" pos:column="9">len</name> <op:operator pos:line="532" pos:column="13">=</op:operator> <call><name><name pos:line="532" pos:column="15">shortcuts</name><op:operator pos:line="532" pos:column="24">.</op:operator><name pos:line="532" pos:column="25">size</name></name><argument_list pos:line="532" pos:column="29">()</argument_list></call></expr>;</expr_stmt>

	<for pos:line="534" pos:column="9">for(<init><decl><type><name pos:line="534" pos:column="13">size_t</name></type> <name pos:line="534" pos:column="20">i</name> <init pos:line="534" pos:column="22">= <expr><lit:literal type="number" pos:line="534" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="534" pos:column="27">i</name> <op:operator pos:line="534" pos:column="29">&lt;</op:operator> <name pos:line="534" pos:column="31">len</name></expr>;</condition> <incr><expr><name pos:line="534" pos:column="36">i</name><op:operator pos:line="534" pos:column="37">++</op:operator></expr></incr>)
	<block pos:line="535" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="536" pos:column="17">CommandShortcut</name> <type:modifier pos:line="536" pos:column="33">&amp;</type:modifier></type> <name pos:line="536" pos:column="35">csc</name> <init pos:line="536" pos:column="39">= <expr><name><name pos:line="536" pos:column="41">shortcuts</name><index pos:line="536" pos:column="50">[<expr><name pos:line="536" pos:column="51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<if pos:line="537" pos:column="17">if <condition pos:line="537" pos:column="20">(<expr><op:operator pos:line="537" pos:column="21">!</op:operator><call><name><name pos:line="537" pos:column="22">csc</name><op:operator pos:line="537" pos:column="25">.</op:operator><name pos:line="537" pos:column="26">getName</name></name><argument_list pos:line="537" pos:column="33">()</argument_list></call><index pos:line="537" pos:column="35">[<expr><lit:literal type="number" pos:line="537" pos:column="36">0</lit:literal></expr>]</index></expr>)</condition><then pos:line="537" pos:column="39">
		<block pos:line="538" pos:column="17">{	<comment type="line" pos:line="538" pos:column="25">//no predefined name, get name from menu and use that</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="539" pos:column="25">::</op:operator><name pos:line="539" pos:column="27">GetMenuString</name></name><argument_list pos:line="539" pos:column="40">(<argument><expr><name pos:line="539" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><call><name><name pos:line="539" pos:column="58">csc</name><op:operator pos:line="539" pos:column="61">.</op:operator><name pos:line="539" pos:column="62">getID</name></name><argument_list pos:line="539" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="539" pos:column="71">menuName</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="539" pos:column="81">64</lit:literal></expr></argument>, <argument><expr><name pos:line="539" pos:column="85">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="540" pos:column="25">csc</name><op:operator pos:line="540" pos:column="28">.</op:operator><name pos:line="540" pos:column="29">setName</name></name><argument_list pos:line="540" pos:column="36">(<argument><expr><call><name pos:line="540" pos:column="37">purgeMenuItemString</name><argument_list pos:line="540" pos:column="56">(<argument><expr><name pos:line="540" pos:column="57">menuName</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="540" pos:column="67">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="540" pos:column="72">.</op:operator><call><name pos:line="540" pos:column="73">c_str</name><argument_list pos:line="540" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<comment type="line" pos:line="543" pos:column="9">//Translate non-menu shortcuts</comment>
	<expr_stmt><expr><call><name><name pos:line="544" pos:column="9">_nativeLangSpeaker</name><op:operator pos:line="544" pos:column="27">.</op:operator><name pos:line="544" pos:column="28">changeShortcutLang</name></name><argument_list pos:line="544" pos:column="46">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="546" pos:column="9">//Update plugin shortcuts, all plugin commands should be available now</comment>
	<expr_stmt><expr><call><name><name pos:line="547" pos:column="9">pNppParam</name><op:operator pos:line="547" pos:column="18">-&gt;</op:operator><name pos:line="547" pos:column="20">reloadPluginCmds</name></name><argument_list pos:line="547" pos:column="36">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="549" pos:column="9">// Shortcut Accelerator : should be the last one since it will capture all the shortcuts</comment>
	<expr_stmt><expr><call><name><name pos:line="550" pos:column="9">_accelerator</name><op:operator pos:line="550" pos:column="21">.</op:operator><name pos:line="550" pos:column="22">init</name></name><argument_list pos:line="550" pos:column="26">(<argument><expr><name pos:line="550" pos:column="27">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="550" pos:column="44">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="551" pos:column="9">pNppParam</name><op:operator pos:line="551" pos:column="18">-&gt;</op:operator><name pos:line="551" pos:column="20">setAccelerator</name></name><argument_list pos:line="551" pos:column="34">(<argument><expr><op:operator pos:line="551" pos:column="35">&amp;</op:operator><name pos:line="551" pos:column="36">_accelerator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="553" pos:column="9">// Scintilla key accelerator</comment>
	<decl_stmt><decl><type><name><name pos:line="554" pos:column="9">vector</name><argument_list pos:line="554" pos:column="15">&lt;<argument><expr><name pos:line="554" pos:column="16">HWND</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="554" pos:column="22">scints</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="555" pos:column="9">scints</name><op:operator pos:line="555" pos:column="15">.</op:operator><name pos:line="555" pos:column="16">push_back</name></name><argument_list pos:line="555" pos:column="25">(<argument><expr><call><name><name pos:line="555" pos:column="26">_mainEditView</name><op:operator pos:line="555" pos:column="39">.</op:operator><name pos:line="555" pos:column="40">getHSelf</name></name><argument_list pos:line="555" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="556" pos:column="9">scints</name><op:operator pos:line="556" pos:column="15">.</op:operator><name pos:line="556" pos:column="16">push_back</name></name><argument_list pos:line="556" pos:column="25">(<argument><expr><call><name><name pos:line="556" pos:column="26">_subEditView</name><op:operator pos:line="556" pos:column="38">.</op:operator><name pos:line="556" pos:column="39">getHSelf</name></name><argument_list pos:line="556" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="557" pos:column="9">_scintaccelerator</name><op:operator pos:line="557" pos:column="26">.</op:operator><name pos:line="557" pos:column="27">init</name></name><argument_list pos:line="557" pos:column="31">(<argument><expr><op:operator pos:line="557" pos:column="32">&amp;</op:operator><name pos:line="557" pos:column="33">scints</name></expr></argument>, <argument><expr><name pos:line="557" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="557" pos:column="58">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="559" pos:column="9">pNppParam</name><op:operator pos:line="559" pos:column="18">-&gt;</op:operator><name pos:line="559" pos:column="20">setScintillaAccelerator</name></name><argument_list pos:line="559" pos:column="43">(<argument><expr><op:operator pos:line="559" pos:column="44">&amp;</op:operator><name pos:line="559" pos:column="45">_scintaccelerator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="560" pos:column="9">_scintaccelerator</name><op:operator pos:line="560" pos:column="26">.</op:operator><name pos:line="560" pos:column="27">updateKeys</name></name><argument_list pos:line="560" pos:column="37">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="562" pos:column="9">::</op:operator><name pos:line="562" pos:column="11">DrawMenuBar</name></name><argument_list pos:line="562" pos:column="22">(<argument><expr><name pos:line="562" pos:column="23">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <comment type="line" pos:line="565" pos:column="5">//-- Tool Bar Section --//</comment>
	<decl_stmt><decl><type><name pos:line="566" pos:column="9">toolBarStatusType</name></type> <name pos:line="566" pos:column="27">tbStatus</name> <init pos:line="566" pos:column="36">= <expr><name><name pos:line="566" pos:column="38">nppGUI</name><op:operator pos:line="566" pos:column="44">.</op:operator><name pos:line="566" pos:column="45">_toolBarStatus</name></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="567" pos:column="9">willBeShown</name> <op:operator pos:line="567" pos:column="21">=</op:operator> <name><name pos:line="567" pos:column="23">nppGUI</name><op:operator pos:line="567" pos:column="29">.</op:operator><name pos:line="567" pos:column="30">_toolbarShow</name></name></expr>;</expr_stmt>

	<comment type="line" pos:line="569" pos:column="9">// To notify plugins that toolbar icons can be registered</comment>
	<decl_stmt><decl><type><name pos:line="570" pos:column="9">SCNotification</name></type> <name pos:line="570" pos:column="24">scnN</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="571" pos:column="9">scnN</name><op:operator pos:line="571" pos:column="13">.</op:operator><name pos:line="571" pos:column="14">nmhdr</name><op:operator pos:line="571" pos:column="19">.</op:operator><name pos:line="571" pos:column="20">code</name></name> <op:operator pos:line="571" pos:column="25">=</op:operator> <name pos:line="571" pos:column="27">NPPN_TBMODIFICATION</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="572" pos:column="9">scnN</name><op:operator pos:line="572" pos:column="13">.</op:operator><name pos:line="572" pos:column="14">nmhdr</name><op:operator pos:line="572" pos:column="19">.</op:operator><name pos:line="572" pos:column="20">hwndFrom</name></name> <op:operator pos:line="572" pos:column="29">=</op:operator> <name pos:line="572" pos:column="31">hwnd</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="573" pos:column="9">scnN</name><op:operator pos:line="573" pos:column="13">.</op:operator><name pos:line="573" pos:column="14">nmhdr</name><op:operator pos:line="573" pos:column="19">.</op:operator><name pos:line="573" pos:column="20">idFrom</name></name> <op:operator pos:line="573" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="573" pos:column="29">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="574" pos:column="9">_pluginsManager</name><op:operator pos:line="574" pos:column="24">.</op:operator><name pos:line="574" pos:column="25">notify</name></name><argument_list pos:line="574" pos:column="31">(<argument><expr><op:operator pos:line="574" pos:column="32">&amp;</op:operator><name pos:line="574" pos:column="33">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="576" pos:column="9">_toolBar</name><op:operator pos:line="576" pos:column="17">.</op:operator><name pos:line="576" pos:column="18">init</name></name><argument_list pos:line="576" pos:column="22">(<argument><expr><call><name><name pos:line="576" pos:column="23">_pPublicInterface</name><op:operator pos:line="576" pos:column="40">-&gt;</op:operator><name pos:line="576" pos:column="42">getHinst</name></name><argument_list pos:line="576" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="576" pos:column="54">hwnd</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="60">tbStatus</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="70">toolBarIcons</name></expr></argument>, <argument><expr><sizeof pos:line="576" pos:column="84">sizeof<argument_list pos:line="576" pos:column="90">(<argument><expr><name pos:line="576" pos:column="91">toolBarIcons</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="576" pos:column="104">/</op:operator><sizeof pos:line="576" pos:column="105">sizeof<argument_list pos:line="576" pos:column="111">(<argument><expr><name pos:line="576" pos:column="112">ToolBarButtonUnit</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="578" pos:column="9">changeToolBarIcons</name><argument_list pos:line="578" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="580" pos:column="9">_rebarTop</name><op:operator pos:line="580" pos:column="18">.</op:operator><name pos:line="580" pos:column="19">init</name></name><argument_list pos:line="580" pos:column="23">(<argument><expr><call><name><name pos:line="580" pos:column="24">_pPublicInterface</name><op:operator pos:line="580" pos:column="41">-&gt;</op:operator><name pos:line="580" pos:column="43">getHinst</name></name><argument_list pos:line="580" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="580" pos:column="55">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="581" pos:column="9">_rebarBottom</name><op:operator pos:line="581" pos:column="21">.</op:operator><name pos:line="581" pos:column="22">init</name></name><argument_list pos:line="581" pos:column="26">(<argument><expr><call><name><name pos:line="581" pos:column="27">_pPublicInterface</name><op:operator pos:line="581" pos:column="44">-&gt;</op:operator><name pos:line="581" pos:column="46">getHinst</name></name><argument_list pos:line="581" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="581" pos:column="58">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="582" pos:column="9">_toolBar</name><op:operator pos:line="582" pos:column="17">.</op:operator><name pos:line="582" pos:column="18">addToRebar</name></name><argument_list pos:line="582" pos:column="28">(<argument><expr><op:operator pos:line="582" pos:column="29">&amp;</op:operator><name pos:line="582" pos:column="30">_rebarTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="583" pos:column="9">_rebarTop</name><op:operator pos:line="583" pos:column="18">.</op:operator><name pos:line="583" pos:column="19">setIDVisible</name></name><argument_list pos:line="583" pos:column="31">(<argument><expr><name pos:line="583" pos:column="32">REBAR_BAR_TOOLBAR</name></expr></argument>, <argument><expr><name pos:line="583" pos:column="51">willBeShown</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="585" pos:column="9">//--Init dialogs--//</comment>
    <expr_stmt><expr><call><name><name pos:line="586" pos:column="5">_findReplaceDlg</name><op:operator pos:line="586" pos:column="20">.</op:operator><name pos:line="586" pos:column="21">init</name></name><argument_list pos:line="586" pos:column="25">(<argument><expr><call><name><name pos:line="586" pos:column="26">_pPublicInterface</name><op:operator pos:line="586" pos:column="43">-&gt;</op:operator><name pos:line="586" pos:column="45">getHinst</name></name><argument_list pos:line="586" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="586" pos:column="57">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="586" pos:column="63">&amp;</op:operator><name pos:line="586" pos:column="64">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="587" pos:column="9">_incrementFindDlg</name><op:operator pos:line="587" pos:column="26">.</op:operator><name pos:line="587" pos:column="27">init</name></name><argument_list pos:line="587" pos:column="31">(<argument><expr><call><name><name pos:line="587" pos:column="32">_pPublicInterface</name><op:operator pos:line="587" pos:column="49">-&gt;</op:operator><name pos:line="587" pos:column="51">getHinst</name></name><argument_list pos:line="587" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="587" pos:column="63">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="587" pos:column="69">&amp;</op:operator><name pos:line="587" pos:column="70">_findReplaceDlg</name></expr></argument>, <argument><expr><call><name><name pos:line="587" pos:column="87">_nativeLangSpeaker</name><op:operator pos:line="587" pos:column="105">.</op:operator><name pos:line="587" pos:column="106">isRTL</name></name><argument_list pos:line="587" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="588" pos:column="9">_incrementFindDlg</name><op:operator pos:line="588" pos:column="26">.</op:operator><name pos:line="588" pos:column="27">addToRebar</name></name><argument_list pos:line="588" pos:column="37">(<argument><expr><op:operator pos:line="588" pos:column="38">&amp;</op:operator><name pos:line="588" pos:column="39">_rebarBottom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="589" pos:column="5">_goToLineDlg</name><op:operator pos:line="589" pos:column="17">.</op:operator><name pos:line="589" pos:column="18">init</name></name><argument_list pos:line="589" pos:column="22">(<argument><expr><call><name><name pos:line="589" pos:column="23">_pPublicInterface</name><op:operator pos:line="589" pos:column="40">-&gt;</op:operator><name pos:line="589" pos:column="42">getHinst</name></name><argument_list pos:line="589" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="589" pos:column="54">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="589" pos:column="60">&amp;</op:operator><name pos:line="589" pos:column="61">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="590" pos:column="9">_findCharsInRangeDlg</name><op:operator pos:line="590" pos:column="29">.</op:operator><name pos:line="590" pos:column="30">init</name></name><argument_list pos:line="590" pos:column="34">(<argument><expr><call><name><name pos:line="590" pos:column="35">_pPublicInterface</name><op:operator pos:line="590" pos:column="52">-&gt;</op:operator><name pos:line="590" pos:column="54">getHinst</name></name><argument_list pos:line="590" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="590" pos:column="66">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="590" pos:column="72">&amp;</op:operator><name pos:line="590" pos:column="73">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="591" pos:column="9">_colEditorDlg</name><op:operator pos:line="591" pos:column="22">.</op:operator><name pos:line="591" pos:column="23">init</name></name><argument_list pos:line="591" pos:column="27">(<argument><expr><call><name><name pos:line="591" pos:column="28">_pPublicInterface</name><op:operator pos:line="591" pos:column="45">-&gt;</op:operator><name pos:line="591" pos:column="47">getHinst</name></name><argument_list pos:line="591" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="591" pos:column="59">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="591" pos:column="65">&amp;</op:operator><name pos:line="591" pos:column="66">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="592" pos:column="5">_aboutDlg</name><op:operator pos:line="592" pos:column="14">.</op:operator><name pos:line="592" pos:column="15">init</name></name><argument_list pos:line="592" pos:column="19">(<argument><expr><call><name><name pos:line="592" pos:column="20">_pPublicInterface</name><op:operator pos:line="592" pos:column="37">-&gt;</op:operator><name pos:line="592" pos:column="39">getHinst</name></name><argument_list pos:line="592" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="592" pos:column="51">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="593" pos:column="9">_runDlg</name><op:operator pos:line="593" pos:column="16">.</op:operator><name pos:line="593" pos:column="17">init</name></name><argument_list pos:line="593" pos:column="21">(<argument><expr><call><name><name pos:line="593" pos:column="22">_pPublicInterface</name><op:operator pos:line="593" pos:column="39">-&gt;</op:operator><name pos:line="593" pos:column="41">getHinst</name></name><argument_list pos:line="593" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="593" pos:column="53">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="594" pos:column="9">_runMacroDlg</name><op:operator pos:line="594" pos:column="21">.</op:operator><name pos:line="594" pos:column="22">init</name></name><argument_list pos:line="594" pos:column="26">(<argument><expr><call><name><name pos:line="594" pos:column="27">_pPublicInterface</name><op:operator pos:line="594" pos:column="44">-&gt;</op:operator><name pos:line="594" pos:column="46">getHinst</name></name><argument_list pos:line="594" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="594" pos:column="58">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="596" pos:column="5">//--User Define Dialog Section--//</comment>
	<decl_stmt><decl><type><name pos:line="597" pos:column="9">int</name></type> <name pos:line="597" pos:column="13">uddStatus</name> <init pos:line="597" pos:column="23">= <expr><name><name pos:line="597" pos:column="25">nppGUI</name><op:operator pos:line="597" pos:column="31">.</op:operator><name pos:line="597" pos:column="32">_userDefineDlgStatus</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="598" pos:column="5">UserDefineDialog</name> <type:modifier pos:line="598" pos:column="22">*</type:modifier></type><name pos:line="598" pos:column="23">udd</name> <init pos:line="598" pos:column="27">= <expr><call><name><name pos:line="598" pos:column="29">_pEditView</name><op:operator pos:line="598" pos:column="39">-&gt;</op:operator><name pos:line="598" pos:column="41">getUserDefineDlg</name></name><argument_list pos:line="598" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="600" pos:column="9">bool</name></type> <name pos:line="600" pos:column="14">uddShow</name> <init pos:line="600" pos:column="22">= <expr><lit:literal type="boolean" pos:line="600" pos:column="24">false</lit:literal></expr></init></decl>;</decl_stmt>
	<switch pos:line="601" pos:column="9">switch <condition pos:line="601" pos:column="16">(<expr><name pos:line="601" pos:column="17">uddStatus</name></expr>)</condition>
    <block pos:line="602" pos:column="5">{
        <case pos:line="603" pos:column="9">case <expr><name pos:line="603" pos:column="14">UDD_SHOW</name></expr> :                 <comment type="line" pos:line="603" pos:column="41">// show &amp; undocked</comment>
			<expr_stmt><expr><call><name><name pos:line="604" pos:column="25">udd</name><op:operator pos:line="604" pos:column="28">-&gt;</op:operator><name pos:line="604" pos:column="30">doDialog</name></name><argument_list pos:line="604" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="604" pos:column="39">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="604" pos:column="45">_nativeLangSpeaker</name><op:operator pos:line="604" pos:column="63">.</op:operator><name pos:line="604" pos:column="64">isRTL</name></name><argument_list pos:line="604" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="605" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="605" pos:column="43">.</op:operator><name pos:line="605" pos:column="44">changeUserDefineLang</name></name><argument_list pos:line="605" pos:column="64">(<argument><expr><name pos:line="605" pos:column="65">udd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="606" pos:column="25">uddShow</name> <op:operator pos:line="606" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="606" pos:column="35">true</lit:literal></expr>;</expr_stmt>
            <break pos:line="607" pos:column="13">break;</break>
        </case><case pos:line="608" pos:column="9">case <expr><name pos:line="608" pos:column="14">UDD_DOCKED</name></expr> : <block pos:line="608" pos:column="27">{              <comment type="line" pos:line="608" pos:column="42">// hide &amp; docked</comment>
			<expr_stmt><expr><name pos:line="609" pos:column="25">_isUDDocked</name> <op:operator pos:line="609" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="609" pos:column="39">true</lit:literal></expr>;</expr_stmt>
            <break pos:line="610" pos:column="13">break;</break>}</block>
        </case><case pos:line="611" pos:column="9">case <expr><op:operator pos:line="611" pos:column="14">(</op:operator><name pos:line="611" pos:column="15">UDD_SHOW</name> <op:operator pos:line="611" pos:column="24">|</op:operator> <name pos:line="611" pos:column="26">UDD_DOCKED</name><op:operator pos:line="611" pos:column="36">)</op:operator></expr> :    <comment type="line" pos:line="611" pos:column="43">// show &amp; docked</comment>
            <expr_stmt><expr><call><name><name pos:line="612" pos:column="13">udd</name><op:operator pos:line="612" pos:column="16">-&gt;</op:operator><name pos:line="612" pos:column="18">doDialog</name></name><argument_list pos:line="612" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="612" pos:column="27">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="612" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="612" pos:column="51">.</op:operator><name pos:line="612" pos:column="52">isRTL</name></name><argument_list pos:line="612" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="613" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="613" pos:column="43">.</op:operator><name pos:line="613" pos:column="44">changeUserDefineLang</name></name><argument_list pos:line="613" pos:column="64">(<argument><expr><name pos:line="613" pos:column="65">udd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="614" pos:column="13">::</op:operator><name pos:line="614" pos:column="15">SendMessage</name></name><argument_list pos:line="614" pos:column="26">(<argument><expr><call><name><name pos:line="614" pos:column="27">udd</name><op:operator pos:line="614" pos:column="30">-&gt;</op:operator><name pos:line="614" pos:column="32">getHSelf</name></name><argument_list pos:line="614" pos:column="40">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="614" pos:column="44">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="614" pos:column="56">IDC_DOCK_BUTTON</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="614" pos:column="73">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="615" pos:column="25">uddShow</name> <op:operator pos:line="615" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="615" pos:column="35">true</lit:literal></expr>;</expr_stmt>
            <break pos:line="616" pos:column="13">break;</break>

		</case><default pos:line="618" pos:column="17">default :                        <comment type="line" pos:line="618" pos:column="50">// hide &amp; undocked</comment>
			<break pos:line="619" pos:column="25">break;</break>
    </default>}</block></switch>
    		<comment type="line" pos:line="621" pos:column="17">// UserDefine Dialog</comment>
	
	<expr_stmt><expr><call><name pos:line="623" pos:column="9">checkMenuItem</name><argument_list pos:line="623" pos:column="22">(<argument><expr><name pos:line="623" pos:column="23">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><name pos:line="623" pos:column="42">uddShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="624" pos:column="9">_toolBar</name><op:operator pos:line="624" pos:column="17">.</op:operator><name pos:line="624" pos:column="18">setCheck</name></name><argument_list pos:line="624" pos:column="26">(<argument><expr><name pos:line="624" pos:column="27">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><name pos:line="624" pos:column="46">uddShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="626" pos:column="9">//launch the plugin dlg memorized at the last session</comment>
	<decl_stmt><decl><type><name pos:line="627" pos:column="9">DockingManagerData</name> <type:modifier pos:line="627" pos:column="28">&amp;</type:modifier></type><name pos:line="627" pos:column="29">dmd</name> <init pos:line="627" pos:column="33">= <expr><name><name pos:line="627" pos:column="35">nppGUI</name><op:operator pos:line="627" pos:column="41">.</op:operator><name pos:line="627" pos:column="42">_dockingData</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="629" pos:column="9">_dockingManager</name><op:operator pos:line="629" pos:column="24">.</op:operator><name pos:line="629" pos:column="25">setDockedContSize</name></name><argument_list pos:line="629" pos:column="42">(<argument><expr><name pos:line="629" pos:column="43">CONT_LEFT</name></expr></argument>  , <argument><expr><name><name pos:line="629" pos:column="56">nppGUI</name><op:operator pos:line="629" pos:column="62">.</op:operator><name pos:line="629" pos:column="63">_dockingData</name><op:operator pos:line="629" pos:column="75">.</op:operator><name pos:line="629" pos:column="76">_leftWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="630" pos:column="9">_dockingManager</name><op:operator pos:line="630" pos:column="24">.</op:operator><name pos:line="630" pos:column="25">setDockedContSize</name></name><argument_list pos:line="630" pos:column="42">(<argument><expr><name pos:line="630" pos:column="43">CONT_RIGHT</name></expr></argument> , <argument><expr><name><name pos:line="630" pos:column="56">nppGUI</name><op:operator pos:line="630" pos:column="62">.</op:operator><name pos:line="630" pos:column="63">_dockingData</name><op:operator pos:line="630" pos:column="75">.</op:operator><name pos:line="630" pos:column="76">_rightWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="631" pos:column="9">_dockingManager</name><op:operator pos:line="631" pos:column="24">.</op:operator><name pos:line="631" pos:column="25">setDockedContSize</name></name><argument_list pos:line="631" pos:column="42">(<argument><expr><name pos:line="631" pos:column="43">CONT_TOP</name></expr></argument>	 , <argument><expr><name><name pos:line="631" pos:column="60">nppGUI</name><op:operator pos:line="631" pos:column="66">.</op:operator><name pos:line="631" pos:column="67">_dockingData</name><op:operator pos:line="631" pos:column="79">.</op:operator><name pos:line="631" pos:column="80">_topHeight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="632" pos:column="9">_dockingManager</name><op:operator pos:line="632" pos:column="24">.</op:operator><name pos:line="632" pos:column="25">setDockedContSize</name></name><argument_list pos:line="632" pos:column="42">(<argument><expr><name pos:line="632" pos:column="43">CONT_BOTTOM</name></expr></argument>, <argument><expr><name><name pos:line="632" pos:column="56">nppGUI</name><op:operator pos:line="632" pos:column="62">.</op:operator><name pos:line="632" pos:column="63">_dockingData</name><op:operator pos:line="632" pos:column="75">.</op:operator><name pos:line="632" pos:column="76">_bottomHight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="634" pos:column="9">for (<init><decl><type><name pos:line="634" pos:column="14">size_t</name></type> <name pos:line="634" pos:column="21">i</name> <init pos:line="634" pos:column="23">= <expr><lit:literal type="number" pos:line="634" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="634" pos:column="29">i</name> <op:operator pos:line="634" pos:column="31">&lt;</op:operator> <call><name><name pos:line="634" pos:column="33">dmd</name><op:operator pos:line="634" pos:column="36">.</op:operator><name pos:line="634" pos:column="37">_pluginDockInfo</name><op:operator pos:line="634" pos:column="52">.</op:operator><name pos:line="634" pos:column="53">size</name></name><argument_list pos:line="634" pos:column="57">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="634" pos:column="62">i</name><op:operator pos:line="634" pos:column="63">++</op:operator></expr></incr>)
	<block pos:line="635" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="636" pos:column="17">PluginDlgDockingInfo</name> <type:modifier pos:line="636" pos:column="38">&amp;</type:modifier></type> <name pos:line="636" pos:column="40">pdi</name> <init pos:line="636" pos:column="44">= <expr><name><name pos:line="636" pos:column="46">dmd</name><op:operator pos:line="636" pos:column="49">.</op:operator><name pos:line="636" pos:column="50">_pluginDockInfo</name><index pos:line="636" pos:column="65">[<expr><name pos:line="636" pos:column="66">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<if pos:line="637" pos:column="17">if <condition pos:line="637" pos:column="20">(<expr><name><name pos:line="637" pos:column="21">pdi</name><op:operator pos:line="637" pos:column="24">.</op:operator><name pos:line="637" pos:column="25">_isVisible</name></name></expr>)</condition><then pos:line="637" pos:column="36">
		<block pos:line="638" pos:column="17">{
			<if pos:line="639" pos:column="25">if <condition pos:line="639" pos:column="28">(<expr><name><name pos:line="639" pos:column="29">pdi</name><op:operator pos:line="639" pos:column="32">.</op:operator><name pos:line="639" pos:column="33">_name</name></name> <op:operator pos:line="639" pos:column="39">==</op:operator> <name pos:line="639" pos:column="42">NPP_INTERNAL_FUCTION_STR</name></expr>)</condition><then pos:line="639" pos:column="67">
			<block pos:line="640" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="641" pos:column="33">_internalFuncIDs</name><op:operator pos:line="641" pos:column="49">.</op:operator><name pos:line="641" pos:column="50">push_back</name></name><argument_list pos:line="641" pos:column="59">(<argument><expr><name><name pos:line="641" pos:column="60">pdi</name><op:operator pos:line="641" pos:column="63">.</op:operator><name pos:line="641" pos:column="64">_internalID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="643" pos:column="25">else
			<block pos:line="644" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="645" pos:column="33">_pluginsManager</name><op:operator pos:line="645" pos:column="48">.</op:operator><name pos:line="645" pos:column="49">runPluginCommand</name></name><argument_list pos:line="645" pos:column="65">(<argument><expr><call><name><name pos:line="645" pos:column="66">pdi</name><op:operator pos:line="645" pos:column="69">.</op:operator><name pos:line="645" pos:column="70">_name</name><op:operator pos:line="645" pos:column="75">.</op:operator><name pos:line="645" pos:column="76">c_str</name></name><argument_list pos:line="645" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="645" pos:column="85">pdi</name><op:operator pos:line="645" pos:column="88">.</op:operator><name pos:line="645" pos:column="89">_internalID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
	}</block></for>

	<for pos:line="650" pos:column="9">for (<init><decl><type><name pos:line="650" pos:column="14">size_t</name></type> <name pos:line="650" pos:column="21">i</name> <init pos:line="650" pos:column="23">= <expr><lit:literal type="number" pos:line="650" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="650" pos:column="29">i</name> <op:operator pos:line="650" pos:column="31">&lt;</op:operator> <call><name><name pos:line="650" pos:column="33">dmd</name><op:operator pos:line="650" pos:column="36">.</op:operator><name pos:line="650" pos:column="37">_containerTabInfo</name><op:operator pos:line="650" pos:column="54">.</op:operator><name pos:line="650" pos:column="55">size</name></name><argument_list pos:line="650" pos:column="59">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="650" pos:column="64">i</name><op:operator pos:line="650" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="651" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="652" pos:column="17">ContainerTabInfo</name> <type:modifier pos:line="652" pos:column="34">&amp;</type:modifier></type> <name pos:line="652" pos:column="36">cti</name> <init pos:line="652" pos:column="40">= <expr><name><name pos:line="652" pos:column="42">dmd</name><op:operator pos:line="652" pos:column="45">.</op:operator><name pos:line="652" pos:column="46">_containerTabInfo</name><index pos:line="652" pos:column="63">[<expr><name pos:line="652" pos:column="64">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="653" pos:column="17">_dockingManager</name><op:operator pos:line="653" pos:column="32">.</op:operator><name pos:line="653" pos:column="33">setActiveTab</name></name><argument_list pos:line="653" pos:column="45">(<argument><expr><name><name pos:line="653" pos:column="46">cti</name><op:operator pos:line="653" pos:column="49">.</op:operator><name pos:line="653" pos:column="50">_cont</name></name></expr></argument>, <argument><expr><name><name pos:line="653" pos:column="57">cti</name><op:operator pos:line="653" pos:column="60">.</op:operator><name pos:line="653" pos:column="61">_activeTab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<comment type="line" pos:line="655" pos:column="9">//Load initial docs into doctab</comment>
	<expr_stmt><expr><call><name pos:line="656" pos:column="9">loadBufferIntoView</name><argument_list pos:line="656" pos:column="27">(<argument><expr><call><name><name pos:line="656" pos:column="28">_mainEditView</name><op:operator pos:line="656" pos:column="41">.</op:operator><name pos:line="656" pos:column="42">getCurrentBufferID</name></name><argument_list pos:line="656" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="656" pos:column="64">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="657" pos:column="9">loadBufferIntoView</name><argument_list pos:line="657" pos:column="27">(<argument><expr><call><name><name pos:line="657" pos:column="28">_subEditView</name><op:operator pos:line="657" pos:column="40">.</op:operator><name pos:line="657" pos:column="41">getCurrentBufferID</name></name><argument_list pos:line="657" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="657" pos:column="63">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="658" pos:column="9">activateBuffer</name><argument_list pos:line="658" pos:column="23">(<argument><expr><call><name><name pos:line="658" pos:column="24">_mainEditView</name><op:operator pos:line="658" pos:column="37">.</op:operator><name pos:line="658" pos:column="38">getCurrentBufferID</name></name><argument_list pos:line="658" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="658" pos:column="60">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="659" pos:column="9">activateBuffer</name><argument_list pos:line="659" pos:column="23">(<argument><expr><call><name><name pos:line="659" pos:column="24">_subEditView</name><op:operator pos:line="659" pos:column="36">.</op:operator><name pos:line="659" pos:column="37">getCurrentBufferID</name></name><argument_list pos:line="659" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="659" pos:column="59">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="660" pos:column="9">MainFileManager</name><op:operator pos:line="660" pos:column="24">-&gt;</op:operator><name pos:line="660" pos:column="26">increaseDocNr</name></name><argument_list pos:line="660" pos:column="39">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="660" pos:column="49">//so next doc starts at 2</comment>

	<expr_stmt><expr><call><name><op:operator pos:line="662" pos:column="9">::</op:operator><name pos:line="662" pos:column="11">SetFocus</name></name><argument_list pos:line="662" pos:column="19">(<argument><expr><call><name><name pos:line="662" pos:column="20">_mainEditView</name><op:operator pos:line="662" pos:column="33">.</op:operator><name pos:line="662" pos:column="34">getHSelf</name></name><argument_list pos:line="662" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="663" pos:column="9">return <expr><name pos:line="663" pos:column="16">TRUE</name></expr>;</return>
}</block></function>



<function><type><name pos:line="668" pos:column="1">void</name></type> <name><name pos:line="668" pos:column="6">Notepad_plus</name><op:operator pos:line="668" pos:column="18">::</op:operator><name pos:line="668" pos:column="20">killAllChildren</name></name><parameter_list pos:line="668" pos:column="35">()</parameter_list>
<block pos:line="669" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="670" pos:column="9">_toolBar</name><op:operator pos:line="670" pos:column="17">.</op:operator><name pos:line="670" pos:column="18">destroy</name></name><argument_list pos:line="670" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="671" pos:column="9">_rebarTop</name><op:operator pos:line="671" pos:column="18">.</op:operator><name pos:line="671" pos:column="19">destroy</name></name><argument_list pos:line="671" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="672" pos:column="9">_rebarBottom</name><op:operator pos:line="672" pos:column="21">.</op:operator><name pos:line="672" pos:column="22">destroy</name></name><argument_list pos:line="672" pos:column="29">()</argument_list></call></expr>;</expr_stmt>

    <if pos:line="674" pos:column="5">if <condition pos:line="674" pos:column="8">(<expr><name pos:line="674" pos:column="9">_pMainSplitter</name></expr>)</condition><then pos:line="674" pos:column="24">
    <block pos:line="675" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="676" pos:column="9">_pMainSplitter</name><op:operator pos:line="676" pos:column="23">-&gt;</op:operator><name pos:line="676" pos:column="25">destroy</name></name><argument_list pos:line="676" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><op:operator pos:line="677" pos:column="9">delete</op:operator> <name pos:line="677" pos:column="16">_pMainSplitter</name></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><call><name><name pos:line="680" pos:column="5">_mainDocTab</name><op:operator pos:line="680" pos:column="16">.</op:operator><name pos:line="680" pos:column="17">destroy</name></name><argument_list pos:line="680" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="681" pos:column="5">_subDocTab</name><op:operator pos:line="681" pos:column="15">.</op:operator><name pos:line="681" pos:column="16">destroy</name></name><argument_list pos:line="681" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="683" pos:column="9">_mainEditView</name><op:operator pos:line="683" pos:column="22">.</op:operator><name pos:line="683" pos:column="23">destroy</name></name><argument_list pos:line="683" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="684" pos:column="5">_subEditView</name><op:operator pos:line="684" pos:column="17">.</op:operator><name pos:line="684" pos:column="18">destroy</name></name><argument_list pos:line="684" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="685" pos:column="9">_invisibleEditView</name><op:operator pos:line="685" pos:column="27">.</op:operator><name pos:line="685" pos:column="28">destroy</name></name><argument_list pos:line="685" pos:column="35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="687" pos:column="5">_subSplitter</name><op:operator pos:line="687" pos:column="17">.</op:operator><name pos:line="687" pos:column="18">destroy</name></name><argument_list pos:line="687" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="688" pos:column="5">_statusBar</name><op:operator pos:line="688" pos:column="15">.</op:operator><name pos:line="688" pos:column="16">destroy</name></name><argument_list pos:line="688" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="690" pos:column="9">_scintillaCtrls4Plugins</name><op:operator pos:line="690" pos:column="32">.</op:operator><name pos:line="690" pos:column="33">destroy</name></name><argument_list pos:line="690" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="691" pos:column="9">_dockingManager</name><op:operator pos:line="691" pos:column="24">.</op:operator><name pos:line="691" pos:column="25">destroy</name></name><argument_list pos:line="691" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="694" pos:column="1">bool</name></type> <name><name pos:line="694" pos:column="6">Notepad_plus</name><op:operator pos:line="694" pos:column="18">::</op:operator><name pos:line="694" pos:column="20">saveGUIParams</name></name><parameter_list pos:line="694" pos:column="33">()</parameter_list>
<block pos:line="695" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="696" pos:column="9">NppGUI</name> <type:modifier pos:line="696" pos:column="16">&amp;</type:modifier></type> <name pos:line="696" pos:column="18">nppGUI</name> <init pos:line="696" pos:column="25">= <expr><op:operator pos:line="696" pos:column="27">(</op:operator><name pos:line="696" pos:column="28">NppGUI</name> <op:operator pos:line="696" pos:column="35">&amp;</op:operator><op:operator pos:line="696" pos:column="36">)</op:operator><op:operator pos:line="696" pos:column="37">(</op:operator><call><name><name pos:line="696" pos:column="38">NppParameters</name><op:operator pos:line="696" pos:column="51">::</op:operator><name pos:line="696" pos:column="53">getInstance</name></name><argument_list pos:line="696" pos:column="64">()</argument_list></call><op:operator pos:line="696" pos:column="66">)</op:operator><op:operator pos:line="696" pos:column="67">-&gt;</op:operator><call><name pos:line="696" pos:column="69">getNppGUI</name><argument_list pos:line="696" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="697" pos:column="9">nppGUI</name><op:operator pos:line="697" pos:column="15">.</op:operator><name pos:line="697" pos:column="16">_toolbarShow</name></name> <op:operator pos:line="697" pos:column="29">=</op:operator> <call><name><name pos:line="697" pos:column="31">_rebarTop</name><op:operator pos:line="697" pos:column="40">.</op:operator><name pos:line="697" pos:column="41">getIDVisible</name></name><argument_list pos:line="697" pos:column="53">(<argument><expr><name pos:line="697" pos:column="54">REBAR_BAR_TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="698" pos:column="9">nppGUI</name><op:operator pos:line="698" pos:column="15">.</op:operator><name pos:line="698" pos:column="16">_toolBarStatus</name></name> <op:operator pos:line="698" pos:column="31">=</op:operator> <call><name><name pos:line="698" pos:column="33">_toolBar</name><op:operator pos:line="698" pos:column="41">.</op:operator><name pos:line="698" pos:column="42">getState</name></name><argument_list pos:line="698" pos:column="50">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="700" pos:column="9">nppGUI</name><op:operator pos:line="700" pos:column="15">.</op:operator><name pos:line="700" pos:column="16">_tabStatus</name></name> <op:operator pos:line="700" pos:column="27">=</op:operator> <op:operator pos:line="700" pos:column="29">(</op:operator><call><name><name pos:line="700" pos:column="30">TabBarPlus</name><op:operator pos:line="700" pos:column="40">::</op:operator><name pos:line="700" pos:column="42">doDragNDropOrNot</name></name><argument_list pos:line="700" pos:column="58">()</argument_list></call><op:operator pos:line="700" pos:column="60">?</op:operator><name pos:line="700" pos:column="61">TAB_DRAWTOPBAR</name><op:operator pos:line="700" pos:column="75">:</op:operator><lit:literal type="number" pos:line="700" pos:column="76">0</lit:literal><op:operator pos:line="700" pos:column="77">)</op:operator> <op:operator pos:line="700" pos:column="79">|</op:operator> \
						<op:operator pos:line="701" pos:column="49">(</op:operator><call><name><name pos:line="701" pos:column="50">TabBarPlus</name><op:operator pos:line="701" pos:column="60">::</op:operator><name pos:line="701" pos:column="62">drawTopBar</name></name><argument_list pos:line="701" pos:column="72">()</argument_list></call><op:operator pos:line="701" pos:column="74">?</op:operator><name pos:line="701" pos:column="75">TAB_DRAGNDROP</name><op:operator pos:line="701" pos:column="88">:</op:operator><lit:literal type="number" pos:line="701" pos:column="89">0</lit:literal><op:operator pos:line="701" pos:column="90">)</op:operator> <op:operator pos:line="701" pos:column="92">|</op:operator> \
						<op:operator pos:line="702" pos:column="49">(</op:operator><call><name><name pos:line="702" pos:column="50">TabBarPlus</name><op:operator pos:line="702" pos:column="60">::</op:operator><name pos:line="702" pos:column="62">drawInactiveTab</name></name><argument_list pos:line="702" pos:column="77">()</argument_list></call><op:operator pos:line="702" pos:column="79">?</op:operator><name pos:line="702" pos:column="80">TAB_DRAWINACTIVETAB</name><op:operator pos:line="702" pos:column="99">:</op:operator><lit:literal type="number" pos:line="702" pos:column="100">0</lit:literal><op:operator pos:line="702" pos:column="101">)</op:operator> <op:operator pos:line="702" pos:column="103">|</op:operator> \
						<op:operator pos:line="703" pos:column="49">(</op:operator><name pos:line="703" pos:column="50">_toReduceTabBar</name><op:operator pos:line="703" pos:column="65">?</op:operator><name pos:line="703" pos:column="66">TAB_REDUCE</name><op:operator pos:line="703" pos:column="76">:</op:operator><lit:literal type="number" pos:line="703" pos:column="77">0</lit:literal><op:operator pos:line="703" pos:column="78">)</op:operator> <op:operator pos:line="703" pos:column="80">|</op:operator> \
						<op:operator pos:line="704" pos:column="49">(</op:operator><call><name><name pos:line="704" pos:column="50">TabBarPlus</name><op:operator pos:line="704" pos:column="60">::</op:operator><name pos:line="704" pos:column="62">drawTabCloseButton</name></name><argument_list pos:line="704" pos:column="80">()</argument_list></call><op:operator pos:line="704" pos:column="82">?</op:operator><name pos:line="704" pos:column="83">TAB_CLOSEBUTTON</name><op:operator pos:line="704" pos:column="98">:</op:operator><lit:literal type="number" pos:line="704" pos:column="99">0</lit:literal><op:operator pos:line="704" pos:column="100">)</op:operator> <op:operator pos:line="704" pos:column="102">|</op:operator> \
						<op:operator pos:line="705" pos:column="49">(</op:operator><call><name><name pos:line="705" pos:column="50">TabBarPlus</name><op:operator pos:line="705" pos:column="60">::</op:operator><name pos:line="705" pos:column="62">isDbClk2Close</name></name><argument_list pos:line="705" pos:column="75">()</argument_list></call><op:operator pos:line="705" pos:column="77">?</op:operator><name pos:line="705" pos:column="78">TAB_DBCLK2CLOSE</name><op:operator pos:line="705" pos:column="93">:</op:operator><lit:literal type="number" pos:line="705" pos:column="94">0</lit:literal><op:operator pos:line="705" pos:column="95">)</op:operator> <op:operator pos:line="705" pos:column="97">|</op:operator> \
						<op:operator pos:line="706" pos:column="49">(</op:operator><call><name><name pos:line="706" pos:column="50">TabBarPlus</name><op:operator pos:line="706" pos:column="60">::</op:operator><name pos:line="706" pos:column="62">isVertical</name></name><argument_list pos:line="706" pos:column="72">()</argument_list></call> <op:operator pos:line="706" pos:column="75">?</op:operator> <name pos:line="706" pos:column="77">TAB_VERTICAL</name><op:operator pos:line="706" pos:column="89">:</op:operator><lit:literal type="number" pos:line="706" pos:column="90">0</lit:literal><op:operator pos:line="706" pos:column="91">)</op:operator> <op:operator pos:line="706" pos:column="93">|</op:operator> \
						<op:operator pos:line="707" pos:column="49">(</op:operator><call><name><name pos:line="707" pos:column="50">TabBarPlus</name><op:operator pos:line="707" pos:column="60">::</op:operator><name pos:line="707" pos:column="62">isMultiLine</name></name><argument_list pos:line="707" pos:column="73">()</argument_list></call> <op:operator pos:line="707" pos:column="76">?</op:operator> <name pos:line="707" pos:column="78">TAB_MULTILINE</name><op:operator pos:line="707" pos:column="91">:</op:operator><lit:literal type="number" pos:line="707" pos:column="92">0</lit:literal><op:operator pos:line="707" pos:column="93">)</op:operator> <op:operator pos:line="707" pos:column="95">|</op:operator>\
						<op:operator pos:line="708" pos:column="49">(</op:operator><name><name pos:line="708" pos:column="50">nppGUI</name><op:operator pos:line="708" pos:column="56">.</op:operator><name pos:line="708" pos:column="57">_tabStatus</name></name> <op:operator pos:line="708" pos:column="68">&amp;</op:operator> <name pos:line="708" pos:column="70">TAB_HIDE</name><op:operator pos:line="708" pos:column="78">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="709" pos:column="9">nppGUI</name><op:operator pos:line="709" pos:column="15">.</op:operator><name pos:line="709" pos:column="16">_splitterPos</name></name> <op:operator pos:line="709" pos:column="29">=</op:operator> <call><name><name pos:line="709" pos:column="31">_subSplitter</name><op:operator pos:line="709" pos:column="43">.</op:operator><name pos:line="709" pos:column="44">isVertical</name></name><argument_list pos:line="709" pos:column="54">()</argument_list></call><op:operator pos:line="709" pos:column="56">?</op:operator><name pos:line="709" pos:column="57">POS_VERTICAL</name><op:operator pos:line="709" pos:column="69">:</op:operator><name pos:line="709" pos:column="70">POS_HORIZOTAL</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="710" pos:column="9">UserDefineDialog</name> <type:modifier pos:line="710" pos:column="26">*</type:modifier></type><name pos:line="710" pos:column="27">udd</name> <init pos:line="710" pos:column="31">= <expr><call><name><name pos:line="710" pos:column="33">_pEditView</name><op:operator pos:line="710" pos:column="43">-&gt;</op:operator><name pos:line="710" pos:column="45">getUserDefineDlg</name></name><argument_list pos:line="710" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="711" pos:column="9">bool</name></type> <name pos:line="711" pos:column="14">b</name> <init pos:line="711" pos:column="16">= <expr><call><name><name pos:line="711" pos:column="18">udd</name><op:operator pos:line="711" pos:column="21">-&gt;</op:operator><name pos:line="711" pos:column="23">isDocked</name></name><argument_list pos:line="711" pos:column="31">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="712" pos:column="9">nppGUI</name><op:operator pos:line="712" pos:column="15">.</op:operator><name pos:line="712" pos:column="16">_userDefineDlgStatus</name></name> <op:operator pos:line="712" pos:column="37">=</op:operator> <op:operator pos:line="712" pos:column="39">(</op:operator><name pos:line="712" pos:column="40">b</name><op:operator pos:line="712" pos:column="41">?</op:operator><name pos:line="712" pos:column="42">UDD_DOCKED</name><op:operator pos:line="712" pos:column="52">:</op:operator><lit:literal type="number" pos:line="712" pos:column="53">0</lit:literal><op:operator pos:line="712" pos:column="54">)</op:operator> <op:operator pos:line="712" pos:column="56">|</op:operator> <op:operator pos:line="712" pos:column="58">(</op:operator><call><name><name pos:line="712" pos:column="59">udd</name><op:operator pos:line="712" pos:column="62">-&gt;</op:operator><name pos:line="712" pos:column="64">isVisible</name></name><argument_list pos:line="712" pos:column="73">()</argument_list></call><op:operator pos:line="712" pos:column="75">?</op:operator><name pos:line="712" pos:column="76">UDD_SHOW</name><op:operator pos:line="712" pos:column="84">:</op:operator><lit:literal type="number" pos:line="712" pos:column="85">0</lit:literal><op:operator pos:line="712" pos:column="86">)</op:operator></expr>;</expr_stmt>

	<comment type="line" pos:line="714" pos:column="9">// Save the position</comment>

	<decl_stmt><decl><type><name pos:line="716" pos:column="9">WINDOWPLACEMENT</name></type> <name pos:line="716" pos:column="25">posInfo</name></decl>;</decl_stmt>

    <expr_stmt><expr><name><name pos:line="718" pos:column="5">posInfo</name><op:operator pos:line="718" pos:column="12">.</op:operator><name pos:line="718" pos:column="13">length</name></name> <op:operator pos:line="718" pos:column="20">=</op:operator> <sizeof pos:line="718" pos:column="22">sizeof<argument_list pos:line="718" pos:column="28">(<argument><expr><name pos:line="718" pos:column="29">WINDOWPLACEMENT</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="719" pos:column="9">::</op:operator><name pos:line="719" pos:column="11">GetWindowPlacement</name></name><argument_list pos:line="719" pos:column="29">(<argument><expr><call><name><name pos:line="719" pos:column="30">_pPublicInterface</name><op:operator pos:line="719" pos:column="47">-&gt;</op:operator><name pos:line="719" pos:column="49">getHSelf</name></name><argument_list pos:line="719" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="719" pos:column="61">&amp;</op:operator><name pos:line="719" pos:column="62">posInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="721" pos:column="9">nppGUI</name><op:operator pos:line="721" pos:column="15">.</op:operator><name pos:line="721" pos:column="16">_appPos</name><op:operator pos:line="721" pos:column="23">.</op:operator><name pos:line="721" pos:column="24">left</name></name> <op:operator pos:line="721" pos:column="29">=</op:operator> <name><name pos:line="721" pos:column="31">posInfo</name><op:operator pos:line="721" pos:column="38">.</op:operator><name pos:line="721" pos:column="39">rcNormalPosition</name><op:operator pos:line="721" pos:column="55">.</op:operator><name pos:line="721" pos:column="56">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="722" pos:column="9">nppGUI</name><op:operator pos:line="722" pos:column="15">.</op:operator><name pos:line="722" pos:column="16">_appPos</name><op:operator pos:line="722" pos:column="23">.</op:operator><name pos:line="722" pos:column="24">top</name></name> <op:operator pos:line="722" pos:column="28">=</op:operator> <name><name pos:line="722" pos:column="30">posInfo</name><op:operator pos:line="722" pos:column="37">.</op:operator><name pos:line="722" pos:column="38">rcNormalPosition</name><op:operator pos:line="722" pos:column="54">.</op:operator><name pos:line="722" pos:column="55">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="723" pos:column="9">nppGUI</name><op:operator pos:line="723" pos:column="15">.</op:operator><name pos:line="723" pos:column="16">_appPos</name><op:operator pos:line="723" pos:column="23">.</op:operator><name pos:line="723" pos:column="24">right</name></name> <op:operator pos:line="723" pos:column="30">=</op:operator> <name><name pos:line="723" pos:column="32">posInfo</name><op:operator pos:line="723" pos:column="39">.</op:operator><name pos:line="723" pos:column="40">rcNormalPosition</name><op:operator pos:line="723" pos:column="56">.</op:operator><name pos:line="723" pos:column="57">right</name></name> <op:operator pos:line="723" pos:column="63">-</op:operator> <name><name pos:line="723" pos:column="65">posInfo</name><op:operator pos:line="723" pos:column="72">.</op:operator><name pos:line="723" pos:column="73">rcNormalPosition</name><op:operator pos:line="723" pos:column="89">.</op:operator><name pos:line="723" pos:column="90">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="724" pos:column="9">nppGUI</name><op:operator pos:line="724" pos:column="15">.</op:operator><name pos:line="724" pos:column="16">_appPos</name><op:operator pos:line="724" pos:column="23">.</op:operator><name pos:line="724" pos:column="24">bottom</name></name> <op:operator pos:line="724" pos:column="31">=</op:operator> <name><name pos:line="724" pos:column="33">posInfo</name><op:operator pos:line="724" pos:column="40">.</op:operator><name pos:line="724" pos:column="41">rcNormalPosition</name><op:operator pos:line="724" pos:column="57">.</op:operator><name pos:line="724" pos:column="58">bottom</name></name> <op:operator pos:line="724" pos:column="65">-</op:operator> <name><name pos:line="724" pos:column="67">posInfo</name><op:operator pos:line="724" pos:column="74">.</op:operator><name pos:line="724" pos:column="75">rcNormalPosition</name><op:operator pos:line="724" pos:column="91">.</op:operator><name pos:line="724" pos:column="92">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="725" pos:column="9">nppGUI</name><op:operator pos:line="725" pos:column="15">.</op:operator><name pos:line="725" pos:column="16">_isMaximized</name></name> <op:operator pos:line="725" pos:column="29">=</op:operator> <op:operator pos:line="725" pos:column="31">(</op:operator><call><name pos:line="725" pos:column="32">IsZoomed</name><argument_list pos:line="725" pos:column="40">(<argument><expr><call><name><name pos:line="725" pos:column="41">_pPublicInterface</name><op:operator pos:line="725" pos:column="58">-&gt;</op:operator><name pos:line="725" pos:column="60">getHSelf</name></name><argument_list pos:line="725" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="725" pos:column="72">||</op:operator> <op:operator pos:line="725" pos:column="75">(</op:operator><name><name pos:line="725" pos:column="76">posInfo</name><op:operator pos:line="725" pos:column="83">.</op:operator><name pos:line="725" pos:column="84">flags</name></name> <op:operator pos:line="725" pos:column="90">&amp;</op:operator> <name pos:line="725" pos:column="92">WPF_RESTORETOMAXIMIZED</name><op:operator pos:line="725" pos:column="114">)</op:operator><op:operator pos:line="725" pos:column="115">)</op:operator></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="727" pos:column="9">saveDockingParams</name><argument_list pos:line="727" pos:column="26">()</argument_list></call></expr>;</expr_stmt>

	<return pos:line="729" pos:column="9">return <expr><op:operator pos:line="729" pos:column="16">(</op:operator><call><name><name pos:line="729" pos:column="17">NppParameters</name><op:operator pos:line="729" pos:column="30">::</op:operator><name pos:line="729" pos:column="32">getInstance</name></name><argument_list pos:line="729" pos:column="43">()</argument_list></call><op:operator pos:line="729" pos:column="45">)</op:operator><op:operator pos:line="729" pos:column="46">-&gt;</op:operator><call><name pos:line="729" pos:column="48">writeGUIParams</name><argument_list pos:line="729" pos:column="62">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="732" pos:column="1">bool</name></type> <name><name pos:line="732" pos:column="6">Notepad_plus</name><op:operator pos:line="732" pos:column="18">::</op:operator><name pos:line="732" pos:column="20">saveProjectPanelsParams</name></name><parameter_list pos:line="732" pos:column="43">()</parameter_list>
<block pos:line="733" pos:column="1">{
	<if pos:line="734" pos:column="9">if <condition pos:line="734" pos:column="12">(<expr><name pos:line="734" pos:column="13">_pProjectPanel_1</name></expr>)</condition><then pos:line="734" pos:column="30">
	<block pos:line="735" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="736" pos:column="17">_pProjectPanel_1</name><op:operator pos:line="736" pos:column="33">-&gt;</op:operator><name pos:line="736" pos:column="35">checkIfNeedSave</name></name><argument_list pos:line="736" pos:column="50">(<argument><expr><call><name pos:line="736" pos:column="51">TEXT</name><argument_list pos:line="736" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="736" pos:column="56">"Project Panel 1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="737" pos:column="17">(</op:operator><call><name><name pos:line="737" pos:column="18">NppParameters</name><op:operator pos:line="737" pos:column="31">::</op:operator><name pos:line="737" pos:column="33">getInstance</name></name><argument_list pos:line="737" pos:column="44">()</argument_list></call><op:operator pos:line="737" pos:column="46">)</op:operator><op:operator pos:line="737" pos:column="47">-&gt;</op:operator><call><name pos:line="737" pos:column="49">setWorkSpaceFilePath</name><argument_list pos:line="737" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="737" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="737" pos:column="73">_pProjectPanel_1</name><op:operator pos:line="737" pos:column="89">-&gt;</op:operator><name pos:line="737" pos:column="91">getWorkSpaceFilePath</name></name><argument_list pos:line="737" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="739" pos:column="9">if <condition pos:line="739" pos:column="12">(<expr><name pos:line="739" pos:column="13">_pProjectPanel_2</name></expr>)</condition><then pos:line="739" pos:column="30">
	<block pos:line="740" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="741" pos:column="17">_pProjectPanel_2</name><op:operator pos:line="741" pos:column="33">-&gt;</op:operator><name pos:line="741" pos:column="35">checkIfNeedSave</name></name><argument_list pos:line="741" pos:column="50">(<argument><expr><call><name pos:line="741" pos:column="51">TEXT</name><argument_list pos:line="741" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="741" pos:column="56">"Project Panel 2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="742" pos:column="17">(</op:operator><call><name><name pos:line="742" pos:column="18">NppParameters</name><op:operator pos:line="742" pos:column="31">::</op:operator><name pos:line="742" pos:column="33">getInstance</name></name><argument_list pos:line="742" pos:column="44">()</argument_list></call><op:operator pos:line="742" pos:column="46">)</op:operator><op:operator pos:line="742" pos:column="47">-&gt;</op:operator><call><name pos:line="742" pos:column="49">setWorkSpaceFilePath</name><argument_list pos:line="742" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="742" pos:column="70">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="742" pos:column="73">_pProjectPanel_2</name><op:operator pos:line="742" pos:column="89">-&gt;</op:operator><name pos:line="742" pos:column="91">getWorkSpaceFilePath</name></name><argument_list pos:line="742" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="744" pos:column="9">if <condition pos:line="744" pos:column="12">(<expr><name pos:line="744" pos:column="13">_pProjectPanel_3</name></expr>)</condition><then pos:line="744" pos:column="30">
	<block pos:line="745" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="746" pos:column="17">_pProjectPanel_3</name><op:operator pos:line="746" pos:column="33">-&gt;</op:operator><name pos:line="746" pos:column="35">checkIfNeedSave</name></name><argument_list pos:line="746" pos:column="50">(<argument><expr><call><name pos:line="746" pos:column="51">TEXT</name><argument_list pos:line="746" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="746" pos:column="56">"Project Panel 3"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="747" pos:column="17">(</op:operator><call><name><name pos:line="747" pos:column="18">NppParameters</name><op:operator pos:line="747" pos:column="31">::</op:operator><name pos:line="747" pos:column="33">getInstance</name></name><argument_list pos:line="747" pos:column="44">()</argument_list></call><op:operator pos:line="747" pos:column="46">)</op:operator><op:operator pos:line="747" pos:column="47">-&gt;</op:operator><call><name pos:line="747" pos:column="49">setWorkSpaceFilePath</name><argument_list pos:line="747" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="747" pos:column="70">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="747" pos:column="73">_pProjectPanel_3</name><op:operator pos:line="747" pos:column="89">-&gt;</op:operator><name pos:line="747" pos:column="91">getWorkSpaceFilePath</name></name><argument_list pos:line="747" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="749" pos:column="9">return <expr><op:operator pos:line="749" pos:column="16">(</op:operator><call><name><name pos:line="749" pos:column="17">NppParameters</name><op:operator pos:line="749" pos:column="30">::</op:operator><name pos:line="749" pos:column="32">getInstance</name></name><argument_list pos:line="749" pos:column="43">()</argument_list></call><op:operator pos:line="749" pos:column="45">)</op:operator><op:operator pos:line="749" pos:column="46">-&gt;</op:operator><call><name pos:line="749" pos:column="48">writeProjectPanelsSettings</name><argument_list pos:line="749" pos:column="74">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="752" pos:column="1">void</name></type> <name><name pos:line="752" pos:column="6">Notepad_plus</name><op:operator pos:line="752" pos:column="18">::</op:operator><name pos:line="752" pos:column="20">saveDockingParams</name></name><parameter_list pos:line="752" pos:column="37">()</parameter_list>
<block pos:line="753" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="754" pos:column="9">NppGUI</name> <type:modifier pos:line="754" pos:column="16">&amp;</type:modifier></type> <name pos:line="754" pos:column="18">nppGUI</name> <init pos:line="754" pos:column="25">= <expr><op:operator pos:line="754" pos:column="27">(</op:operator><name pos:line="754" pos:column="28">NppGUI</name> <op:operator pos:line="754" pos:column="35">&amp;</op:operator><op:operator pos:line="754" pos:column="36">)</op:operator><op:operator pos:line="754" pos:column="37">(</op:operator><call><name><name pos:line="754" pos:column="38">NppParameters</name><op:operator pos:line="754" pos:column="51">::</op:operator><name pos:line="754" pos:column="53">getInstance</name></name><argument_list pos:line="754" pos:column="64">()</argument_list></call><op:operator pos:line="754" pos:column="66">)</op:operator><op:operator pos:line="754" pos:column="67">-&gt;</op:operator><call><name pos:line="754" pos:column="69">getNppGUI</name><argument_list pos:line="754" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="756" pos:column="9">// Save the docking information</comment>
	<expr_stmt><expr><name><name pos:line="757" pos:column="9">nppGUI</name><op:operator pos:line="757" pos:column="15">.</op:operator><name pos:line="757" pos:column="16">_dockingData</name><op:operator pos:line="757" pos:column="28">.</op:operator><name pos:line="757" pos:column="29">_leftWidth</name></name>		<op:operator pos:line="757" pos:column="49">=</op:operator> <call><name><name pos:line="757" pos:column="51">_dockingManager</name><op:operator pos:line="757" pos:column="66">.</op:operator><name pos:line="757" pos:column="67">getDockedContSize</name></name><argument_list pos:line="757" pos:column="84">(<argument><expr><name pos:line="757" pos:column="85">CONT_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="758" pos:column="9">nppGUI</name><op:operator pos:line="758" pos:column="15">.</op:operator><name pos:line="758" pos:column="16">_dockingData</name><op:operator pos:line="758" pos:column="28">.</op:operator><name pos:line="758" pos:column="29">_rightWidth</name></name>		<op:operator pos:line="758" pos:column="49">=</op:operator> <call><name><name pos:line="758" pos:column="51">_dockingManager</name><op:operator pos:line="758" pos:column="66">.</op:operator><name pos:line="758" pos:column="67">getDockedContSize</name></name><argument_list pos:line="758" pos:column="84">(<argument><expr><name pos:line="758" pos:column="85">CONT_RIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="759" pos:column="9">nppGUI</name><op:operator pos:line="759" pos:column="15">.</op:operator><name pos:line="759" pos:column="16">_dockingData</name><op:operator pos:line="759" pos:column="28">.</op:operator><name pos:line="759" pos:column="29">_topHeight</name></name>		<op:operator pos:line="759" pos:column="49">=</op:operator> <call><name><name pos:line="759" pos:column="51">_dockingManager</name><op:operator pos:line="759" pos:column="66">.</op:operator><name pos:line="759" pos:column="67">getDockedContSize</name></name><argument_list pos:line="759" pos:column="84">(<argument><expr><name pos:line="759" pos:column="85">CONT_TOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="760" pos:column="9">nppGUI</name><op:operator pos:line="760" pos:column="15">.</op:operator><name pos:line="760" pos:column="16">_dockingData</name><op:operator pos:line="760" pos:column="28">.</op:operator><name pos:line="760" pos:column="29">_bottomHight</name></name>	<op:operator pos:line="760" pos:column="49">=</op:operator> <call><name><name pos:line="760" pos:column="51">_dockingManager</name><op:operator pos:line="760" pos:column="66">.</op:operator><name pos:line="760" pos:column="67">getDockedContSize</name></name><argument_list pos:line="760" pos:column="84">(<argument><expr><name pos:line="760" pos:column="85">CONT_BOTTOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="762" pos:column="9">// clear the conatainer tab information (active tab)</comment>
	<expr_stmt><expr><call><name><name pos:line="763" pos:column="9">nppGUI</name><op:operator pos:line="763" pos:column="15">.</op:operator><name pos:line="763" pos:column="16">_dockingData</name><op:operator pos:line="763" pos:column="28">.</op:operator><name pos:line="763" pos:column="29">_containerTabInfo</name><op:operator pos:line="763" pos:column="46">.</op:operator><name pos:line="763" pos:column="47">clear</name></name><argument_list pos:line="763" pos:column="52">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="765" pos:column="9">// create a vector to save the current information</comment>
	<decl_stmt><decl><type><name><name pos:line="766" pos:column="9">vector</name><argument_list pos:line="766" pos:column="15">&lt;<argument><expr><name pos:line="766" pos:column="16">PluginDlgDockingInfo</name></expr></argument>&gt;</argument_list></name></type>	<name pos:line="766" pos:column="41">vPluginDockInfo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="767" pos:column="9">vector</name><argument_list pos:line="767" pos:column="15">&lt;<argument><expr><name pos:line="767" pos:column="16">FloatingWindowInfo</name></expr></argument>&gt;</argument_list></name></type>		<name pos:line="767" pos:column="49">vFloatingWindowInfo</name></decl>;</decl_stmt>

	<comment type="line" pos:line="769" pos:column="9">// save every container</comment>
	<decl_stmt><decl><type><name><name pos:line="770" pos:column="9">vector</name><argument_list pos:line="770" pos:column="15">&lt;<argument><expr><name pos:line="770" pos:column="16">DockingCont</name><type:modifier pos:line="770" pos:column="27">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="770" pos:column="30">vCont</name> <init pos:line="770" pos:column="36">= <expr><call><name><name pos:line="770" pos:column="38">_dockingManager</name><op:operator pos:line="770" pos:column="53">.</op:operator><name pos:line="770" pos:column="54">getContainerInfo</name></name><argument_list pos:line="770" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="772" pos:column="9">for (<init><decl><type><name pos:line="772" pos:column="14">size_t</name></type> <name pos:line="772" pos:column="21">i</name> <init pos:line="772" pos:column="23">= <expr><lit:literal type="number" pos:line="772" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="772" pos:column="29">i</name> <op:operator pos:line="772" pos:column="31">&lt;</op:operator> <call><name><name pos:line="772" pos:column="33">vCont</name><op:operator pos:line="772" pos:column="38">.</op:operator><name pos:line="772" pos:column="39">size</name></name><argument_list pos:line="772" pos:column="43">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="772" pos:column="48">i</name><op:operator pos:line="772" pos:column="49">++</op:operator></expr></incr>)
	<block pos:line="773" pos:column="9">{
		<comment type="line" pos:line="774" pos:column="17">// save at first the visible Tb's</comment>
		<decl_stmt><decl><type><name><name pos:line="775" pos:column="17">vector</name><argument_list pos:line="775" pos:column="23">&lt;<argument><expr><name pos:line="775" pos:column="24">tTbData</name> <type:modifier pos:line="775" pos:column="32">*</type:modifier></expr></argument>&gt;</argument_list></name></type>	<name pos:line="775" pos:column="41">vDataVis</name>	<init pos:line="775" pos:column="57">= <expr><name><name pos:line="775" pos:column="59">vCont</name><index pos:line="775" pos:column="64">[<expr><name pos:line="775" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="775" pos:column="67">-&gt;</op:operator><call><name pos:line="775" pos:column="69">getDataOfVisTb</name><argument_list pos:line="775" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<for pos:line="777" pos:column="17">for (<init><decl><type><name pos:line="777" pos:column="22">size_t</name></type> <name pos:line="777" pos:column="29">j</name> <init pos:line="777" pos:column="31">= <expr><lit:literal type="number" pos:line="777" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="777" pos:column="37">j</name> <op:operator pos:line="777" pos:column="39">&lt;</op:operator> <call><name><name pos:line="777" pos:column="41">vDataVis</name><op:operator pos:line="777" pos:column="49">.</op:operator><name pos:line="777" pos:column="50">size</name></name><argument_list pos:line="777" pos:column="54">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="777" pos:column="59">j</name><op:operator pos:line="777" pos:column="60">++</op:operator></expr></incr>)
		<block pos:line="778" pos:column="17">{
			<if pos:line="779" pos:column="25">if <condition pos:line="779" pos:column="28">(<expr><name><name pos:line="779" pos:column="29">vDataVis</name><index pos:line="779" pos:column="37">[<expr><name pos:line="779" pos:column="38">j</name></expr>]</index></name><op:operator pos:line="779" pos:column="40">-&gt;</op:operator><name pos:line="779" pos:column="42">pszName</name> <op:operator pos:line="779" pos:column="50">&amp;&amp;</op:operator> <name><name pos:line="779" pos:column="53">vDataVis</name><index pos:line="779" pos:column="61">[<expr><name pos:line="779" pos:column="62">j</name></expr>]</index></name><op:operator pos:line="779" pos:column="64">-&gt;</op:operator><name><name pos:line="779" pos:column="66">pszName</name><index pos:line="779" pos:column="73">[<expr><lit:literal type="number" pos:line="779" pos:column="74">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="779" pos:column="77">
			<block pos:line="780" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="781" pos:column="33">PluginDlgDockingInfo</name></type> <name pos:line="781" pos:column="54">pddi</name><argument_list pos:line="781" pos:column="58">(<argument><expr><name><name pos:line="781" pos:column="59">vDataVis</name><index pos:line="781" pos:column="67">[<expr><name pos:line="781" pos:column="68">j</name></expr>]</index></name><op:operator pos:line="781" pos:column="70">-&gt;</op:operator><name pos:line="781" pos:column="72">pszModuleName</name></expr></argument>, <argument><expr><name><name pos:line="781" pos:column="87">vDataVis</name><index pos:line="781" pos:column="95">[<expr><name pos:line="781" pos:column="96">j</name></expr>]</index></name><op:operator pos:line="781" pos:column="98">-&gt;</op:operator><name pos:line="781" pos:column="100">dlgID</name></expr></argument>, <argument><expr><name pos:line="781" pos:column="107">i</name></expr></argument>, <argument><expr><name><name pos:line="781" pos:column="110">vDataVis</name><index pos:line="781" pos:column="118">[<expr><name pos:line="781" pos:column="119">j</name></expr>]</index></name><op:operator pos:line="781" pos:column="121">-&gt;</op:operator><name pos:line="781" pos:column="123">iPrevCont</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="781" pos:column="134">true</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="782" pos:column="33">vPluginDockInfo</name><op:operator pos:line="782" pos:column="48">.</op:operator><name pos:line="782" pos:column="49">push_back</name></name><argument_list pos:line="782" pos:column="58">(<argument><expr><name pos:line="782" pos:column="59">pddi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>

		<comment type="line" pos:line="786" pos:column="17">// save the hidden Tb's</comment>
		<decl_stmt><decl><type><name><name pos:line="787" pos:column="17">vector</name><argument_list pos:line="787" pos:column="23">&lt;<argument><expr><name pos:line="787" pos:column="24">tTbData</name> <type:modifier pos:line="787" pos:column="32">*</type:modifier></expr></argument>&gt;</argument_list></name></type>	<name pos:line="787" pos:column="41">vDataAll</name>	<init pos:line="787" pos:column="57">= <expr><name><name pos:line="787" pos:column="59">vCont</name><index pos:line="787" pos:column="64">[<expr><name pos:line="787" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="787" pos:column="67">-&gt;</op:operator><call><name pos:line="787" pos:column="69">getDataOfAllTb</name><argument_list pos:line="787" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<for pos:line="789" pos:column="17">for (<init><decl><type><name pos:line="789" pos:column="22">size_t</name></type> <name pos:line="789" pos:column="29">j</name> <init pos:line="789" pos:column="31">= <expr><lit:literal type="number" pos:line="789" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="789" pos:column="37">j</name> <op:operator pos:line="789" pos:column="39">&lt;</op:operator> <call><name><name pos:line="789" pos:column="41">vDataAll</name><op:operator pos:line="789" pos:column="49">.</op:operator><name pos:line="789" pos:column="50">size</name></name><argument_list pos:line="789" pos:column="54">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="789" pos:column="59">j</name><op:operator pos:line="789" pos:column="60">++</op:operator></expr></incr>)
		<block pos:line="790" pos:column="17">{
			<if pos:line="791" pos:column="25">if <condition pos:line="791" pos:column="28">(<expr><op:operator pos:line="791" pos:column="29">(</op:operator><name><name pos:line="791" pos:column="30">vDataAll</name><index pos:line="791" pos:column="38">[<expr><name pos:line="791" pos:column="39">j</name></expr>]</index></name><op:operator pos:line="791" pos:column="41">-&gt;</op:operator><name pos:line="791" pos:column="43">pszName</name> <op:operator pos:line="791" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="791" pos:column="54">vDataAll</name><index pos:line="791" pos:column="62">[<expr><name pos:line="791" pos:column="63">j</name></expr>]</index></name><op:operator pos:line="791" pos:column="65">-&gt;</op:operator><name><name pos:line="791" pos:column="67">pszName</name><index pos:line="791" pos:column="74">[<expr><lit:literal type="number" pos:line="791" pos:column="75">0</lit:literal></expr>]</index></name><op:operator pos:line="791" pos:column="77">)</op:operator> <op:operator pos:line="791" pos:column="79">&amp;&amp;</op:operator> <op:operator pos:line="791" pos:column="82">(</op:operator><op:operator pos:line="791" pos:column="83">!</op:operator><name><name pos:line="791" pos:column="84">vCont</name><index pos:line="791" pos:column="89">[<expr><name pos:line="791" pos:column="90">i</name></expr>]</index></name><op:operator pos:line="791" pos:column="92">-&gt;</op:operator><call><name pos:line="791" pos:column="94">isTbVis</name><argument_list pos:line="791" pos:column="101">(<argument><expr><name><name pos:line="791" pos:column="102">vDataAll</name><index pos:line="791" pos:column="110">[<expr><name pos:line="791" pos:column="111">j</name></expr>]</index></name></expr></argument>)</argument_list></call><op:operator pos:line="791" pos:column="114">)</op:operator></expr>)</condition><then pos:line="791" pos:column="116">
			<block pos:line="792" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="793" pos:column="33">PluginDlgDockingInfo</name></type> <name pos:line="793" pos:column="54">pddi</name><argument_list pos:line="793" pos:column="58">(<argument><expr><name><name pos:line="793" pos:column="59">vDataAll</name><index pos:line="793" pos:column="67">[<expr><name pos:line="793" pos:column="68">j</name></expr>]</index></name><op:operator pos:line="793" pos:column="70">-&gt;</op:operator><name pos:line="793" pos:column="72">pszModuleName</name></expr></argument>, <argument><expr><name><name pos:line="793" pos:column="87">vDataAll</name><index pos:line="793" pos:column="95">[<expr><name pos:line="793" pos:column="96">j</name></expr>]</index></name><op:operator pos:line="793" pos:column="98">-&gt;</op:operator><name pos:line="793" pos:column="100">dlgID</name></expr></argument>, <argument><expr><name pos:line="793" pos:column="107">i</name></expr></argument>, <argument><expr><name><name pos:line="793" pos:column="110">vDataAll</name><index pos:line="793" pos:column="118">[<expr><name pos:line="793" pos:column="119">j</name></expr>]</index></name><op:operator pos:line="793" pos:column="121">-&gt;</op:operator><name pos:line="793" pos:column="123">iPrevCont</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="793" pos:column="134">false</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="794" pos:column="33">vPluginDockInfo</name><op:operator pos:line="794" pos:column="48">.</op:operator><name pos:line="794" pos:column="49">push_back</name></name><argument_list pos:line="794" pos:column="58">(<argument><expr><name pos:line="794" pos:column="59">pddi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>

		<comment type="line" pos:line="798" pos:column="17">// save the position, when container is a floated one</comment>
		<if pos:line="799" pos:column="17">if <condition pos:line="799" pos:column="20">(<expr><name pos:line="799" pos:column="21">i</name> <op:operator pos:line="799" pos:column="23">&gt;=</op:operator> <name pos:line="799" pos:column="26">DOCKCONT_MAX</name></expr>)</condition><then pos:line="799" pos:column="39">
		<block pos:line="800" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="801" pos:column="25">RECT</name></type>	<name pos:line="801" pos:column="33">rc</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="802" pos:column="25">vCont</name><index pos:line="802" pos:column="30">[<expr><name pos:line="802" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="802" pos:column="33">-&gt;</op:operator><call><name pos:line="802" pos:column="35">getWindowRect</name><argument_list pos:line="802" pos:column="48">(<argument><expr><name pos:line="802" pos:column="49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<function_decl><type><name pos:line="803" pos:column="25">FloatingWindowInfo</name></type> <name pos:line="803" pos:column="44">fwi</name><parameter_list pos:line="803" pos:column="47">(<param><decl><type><name pos:line="803" pos:column="48">i</name></type></decl></param>, <param><decl><type><name><name pos:line="803" pos:column="51">rc</name><op:operator pos:line="803" pos:column="53">.</op:operator><name pos:line="803" pos:column="54">left</name></name></type></decl></param>, <param><decl><type><name><name pos:line="803" pos:column="60">rc</name><op:operator pos:line="803" pos:column="62">.</op:operator><name pos:line="803" pos:column="63">top</name></name></type></decl></param>, <param><decl><type><name><name pos:line="803" pos:column="68">rc</name><op:operator pos:line="803" pos:column="70">.</op:operator><name pos:line="803" pos:column="71">right</name></name></type></decl></param>, <param><decl><type><name><name pos:line="803" pos:column="78">rc</name><op:operator pos:line="803" pos:column="80">.</op:operator><name pos:line="803" pos:column="81">bottom</name></name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name><name pos:line="804" pos:column="25">vFloatingWindowInfo</name><op:operator pos:line="804" pos:column="44">.</op:operator><name pos:line="804" pos:column="45">push_back</name></name><argument_list pos:line="804" pos:column="54">(<argument><expr><name pos:line="804" pos:column="55">fwi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="807" pos:column="17">// save the active tab</comment>
		<decl_stmt><decl><type><name pos:line="808" pos:column="17">ContainerTabInfo</name></type> <name pos:line="808" pos:column="34">act</name><argument_list pos:line="808" pos:column="37">(<argument><expr><name pos:line="808" pos:column="38">i</name></expr></argument>, <argument><expr><name><name pos:line="808" pos:column="41">vCont</name><index pos:line="808" pos:column="46">[<expr><name pos:line="808" pos:column="47">i</name></expr>]</index></name><op:operator pos:line="808" pos:column="49">-&gt;</op:operator><call><name pos:line="808" pos:column="51">getActiveTb</name><argument_list pos:line="808" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="809" pos:column="17">nppGUI</name><op:operator pos:line="809" pos:column="23">.</op:operator><name pos:line="809" pos:column="24">_dockingData</name><op:operator pos:line="809" pos:column="36">.</op:operator><name pos:line="809" pos:column="37">_containerTabInfo</name><op:operator pos:line="809" pos:column="54">.</op:operator><name pos:line="809" pos:column="55">push_back</name></name><argument_list pos:line="809" pos:column="64">(<argument><expr><name pos:line="809" pos:column="65">act</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<comment type="line" pos:line="812" pos:column="9">// add the missing information and store it in nppGUI</comment>
	<decl_stmt><decl><type><name pos:line="813" pos:column="9">UCHAR</name></type> <name><name pos:line="813" pos:column="15">floatContArray</name><index pos:line="813" pos:column="29">[<expr><lit:literal type="number" pos:line="813" pos:column="30">50</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="814" pos:column="9">memset</name><argument_list pos:line="814" pos:column="15">(<argument><expr><name pos:line="814" pos:column="16">floatContArray</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="814" pos:column="32">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="814" pos:column="35">50</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="816" pos:column="9">for (<init><decl><type><name pos:line="816" pos:column="14">size_t</name></type> <name pos:line="816" pos:column="21">i</name> <init pos:line="816" pos:column="23">= <expr><lit:literal type="number" pos:line="816" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="816" pos:column="29">i</name> <op:operator pos:line="816" pos:column="31">&lt;</op:operator> <call><name><name pos:line="816" pos:column="33">nppGUI</name><op:operator pos:line="816" pos:column="39">.</op:operator><name pos:line="816" pos:column="40">_dockingData</name><op:operator pos:line="816" pos:column="52">.</op:operator><name pos:line="816" pos:column="53">_pluginDockInfo</name><op:operator pos:line="816" pos:column="68">.</op:operator><name pos:line="816" pos:column="69">size</name></name><argument_list pos:line="816" pos:column="73">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="816" pos:column="78">i</name><op:operator pos:line="816" pos:column="79">++</op:operator></expr></incr>)
	<block pos:line="817" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="818" pos:column="17">BOOL</name></type>	<name pos:line="818" pos:column="25">isStored</name> <init pos:line="818" pos:column="34">= <expr><name pos:line="818" pos:column="36">FALSE</name></expr></init></decl>;</decl_stmt>
		<for pos:line="819" pos:column="17">for (<init><decl><type><name pos:line="819" pos:column="22">size_t</name></type> <name pos:line="819" pos:column="29">j</name> <init pos:line="819" pos:column="31">= <expr><lit:literal type="number" pos:line="819" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="819" pos:column="36">j</name> <op:operator pos:line="819" pos:column="38">&lt;</op:operator> <call><name><name pos:line="819" pos:column="40">vPluginDockInfo</name><op:operator pos:line="819" pos:column="55">.</op:operator><name pos:line="819" pos:column="56">size</name></name><argument_list pos:line="819" pos:column="60">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="819" pos:column="64">j</name><op:operator pos:line="819" pos:column="65">++</op:operator></expr></incr>)
		<block pos:line="820" pos:column="17">{
			<if pos:line="821" pos:column="25">if <condition pos:line="821" pos:column="28">(<expr><name><name pos:line="821" pos:column="29">nppGUI</name><op:operator pos:line="821" pos:column="35">.</op:operator><name pos:line="821" pos:column="36">_dockingData</name><op:operator pos:line="821" pos:column="48">.</op:operator><name pos:line="821" pos:column="49">_pluginDockInfo</name><index pos:line="821" pos:column="64">[<expr><name pos:line="821" pos:column="65">i</name></expr>]</index></name> <op:operator pos:line="821" pos:column="68">==</op:operator> <name><name pos:line="821" pos:column="71">vPluginDockInfo</name><index pos:line="821" pos:column="86">[<expr><name pos:line="821" pos:column="87">j</name></expr>]</index></name></expr>)</condition><then pos:line="821" pos:column="90">
			<block pos:line="822" pos:column="25">{
				<expr_stmt><expr><name pos:line="823" pos:column="33">isStored</name> <op:operator pos:line="823" pos:column="42">=</op:operator> <name pos:line="823" pos:column="44">TRUE</name></expr>;</expr_stmt>
				<break pos:line="824" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>

		<if pos:line="828" pos:column="17">if <condition pos:line="828" pos:column="20">(<expr><name pos:line="828" pos:column="21">isStored</name> <op:operator pos:line="828" pos:column="30">==</op:operator> <name pos:line="828" pos:column="33">FALSE</name></expr>)</condition><then pos:line="828" pos:column="39">
		<block pos:line="829" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="830" pos:column="25">int</name></type> <name pos:line="830" pos:column="29">floatCont</name>	<init pos:line="830" pos:column="41">= <expr><lit:literal type="number" pos:line="830" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>

			<if pos:line="832" pos:column="25">if <condition pos:line="832" pos:column="28">(<expr><name><name pos:line="832" pos:column="29">nppGUI</name><op:operator pos:line="832" pos:column="35">.</op:operator><name pos:line="832" pos:column="36">_dockingData</name><op:operator pos:line="832" pos:column="48">.</op:operator><name pos:line="832" pos:column="49">_pluginDockInfo</name><index pos:line="832" pos:column="64">[<expr><name pos:line="832" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="832" pos:column="67">.</op:operator><name pos:line="832" pos:column="68">_currContainer</name> <op:operator pos:line="832" pos:column="83">&gt;=</op:operator> <name pos:line="832" pos:column="86">DOCKCONT_MAX</name></expr>)</condition><then pos:line="832" pos:column="99">
				<expr_stmt><expr><name pos:line="833" pos:column="33">floatCont</name> <op:operator pos:line="833" pos:column="43">=</op:operator> <name><name pos:line="833" pos:column="45">nppGUI</name><op:operator pos:line="833" pos:column="51">.</op:operator><name pos:line="833" pos:column="52">_dockingData</name><op:operator pos:line="833" pos:column="64">.</op:operator><name pos:line="833" pos:column="65">_pluginDockInfo</name><index pos:line="833" pos:column="80">[<expr><name pos:line="833" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="833" pos:column="83">.</op:operator><name pos:line="833" pos:column="84">_currContainer</name></expr>;</expr_stmt></then>
			<else pos:line="834" pos:column="25">else
				<expr_stmt><expr><name pos:line="835" pos:column="33">floatCont</name> <op:operator pos:line="835" pos:column="43">=</op:operator> <name><name pos:line="835" pos:column="45">nppGUI</name><op:operator pos:line="835" pos:column="51">.</op:operator><name pos:line="835" pos:column="52">_dockingData</name><op:operator pos:line="835" pos:column="64">.</op:operator><name pos:line="835" pos:column="65">_pluginDockInfo</name><index pos:line="835" pos:column="80">[<expr><name pos:line="835" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="835" pos:column="83">.</op:operator><name pos:line="835" pos:column="84">_prevContainer</name></expr>;</expr_stmt></else></if>

			<if pos:line="837" pos:column="25">if <condition pos:line="837" pos:column="28">(<expr><name><name pos:line="837" pos:column="29">floatContArray</name><index pos:line="837" pos:column="43">[<expr><name pos:line="837" pos:column="44">floatCont</name></expr>]</index></name> <op:operator pos:line="837" pos:column="55">==</op:operator> <lit:literal type="number" pos:line="837" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="837" pos:column="60">
			<block pos:line="838" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="839" pos:column="33">RECT</name></type> <name pos:line="839" pos:column="38">rc</name></decl>;</decl_stmt>
				<if pos:line="840" pos:column="33">if <condition pos:line="840" pos:column="36">(<expr><call><name><name pos:line="840" pos:column="37">nppGUI</name><op:operator pos:line="840" pos:column="43">.</op:operator><name pos:line="840" pos:column="44">_dockingData</name><op:operator pos:line="840" pos:column="56">.</op:operator><name pos:line="840" pos:column="57">getFloatingRCFrom</name></name><argument_list pos:line="840" pos:column="74">(<argument><expr><name pos:line="840" pos:column="75">floatCont</name></expr></argument>, <argument><expr><name pos:line="840" pos:column="86">rc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="840" pos:column="90">
				<block pos:line="841" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="842" pos:column="41">vFloatingWindowInfo</name><op:operator pos:line="842" pos:column="60">.</op:operator><name pos:line="842" pos:column="61">push_back</name></name><argument_list pos:line="842" pos:column="70">(<argument><expr><call><name pos:line="842" pos:column="71">FloatingWindowInfo</name><argument_list pos:line="842" pos:column="89">(<argument><expr><name pos:line="842" pos:column="90">floatCont</name></expr></argument>, <argument><expr><name><name pos:line="842" pos:column="101">rc</name><op:operator pos:line="842" pos:column="103">.</op:operator><name pos:line="842" pos:column="104">left</name></name></expr></argument>, <argument><expr><name><name pos:line="842" pos:column="110">rc</name><op:operator pos:line="842" pos:column="112">.</op:operator><name pos:line="842" pos:column="113">top</name></name></expr></argument>, <argument><expr><name><name pos:line="842" pos:column="118">rc</name><op:operator pos:line="842" pos:column="120">.</op:operator><name pos:line="842" pos:column="121">right</name></name></expr></argument>, <argument><expr><name><name pos:line="842" pos:column="128">rc</name><op:operator pos:line="842" pos:column="130">.</op:operator><name pos:line="842" pos:column="131">bottom</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name><name pos:line="844" pos:column="33">floatContArray</name><index pos:line="844" pos:column="47">[<expr><name pos:line="844" pos:column="48">floatCont</name></expr>]</index></name> <op:operator pos:line="844" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="844" pos:column="61">1</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><call><name><name pos:line="847" pos:column="25">vPluginDockInfo</name><op:operator pos:line="847" pos:column="40">.</op:operator><name pos:line="847" pos:column="41">push_back</name></name><argument_list pos:line="847" pos:column="50">(<argument><expr><name><name pos:line="847" pos:column="51">nppGUI</name><op:operator pos:line="847" pos:column="57">.</op:operator><name pos:line="847" pos:column="58">_dockingData</name><op:operator pos:line="847" pos:column="70">.</op:operator><name pos:line="847" pos:column="71">_pluginDockInfo</name><index pos:line="847" pos:column="86">[<expr><name pos:line="847" pos:column="87">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<expr_stmt><expr><name><name pos:line="851" pos:column="9">nppGUI</name><op:operator pos:line="851" pos:column="15">.</op:operator><name pos:line="851" pos:column="16">_dockingData</name><op:operator pos:line="851" pos:column="28">.</op:operator><name pos:line="851" pos:column="29">_pluginDockInfo</name></name> <op:operator pos:line="851" pos:column="45">=</op:operator> <name pos:line="851" pos:column="47">vPluginDockInfo</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="852" pos:column="9">nppGUI</name><op:operator pos:line="852" pos:column="15">.</op:operator><name pos:line="852" pos:column="16">_dockingData</name><op:operator pos:line="852" pos:column="28">.</op:operator><name pos:line="852" pos:column="29">_flaotingWindowInfo</name></name> <op:operator pos:line="852" pos:column="49">=</op:operator> <name pos:line="852" pos:column="51">vFloatingWindowInfo</name></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="856" pos:column="1">int</name></type> <name><name pos:line="856" pos:column="5">Notepad_plus</name><op:operator pos:line="856" pos:column="17">::</op:operator><name pos:line="856" pos:column="19">getHtmlXmlEncoding</name></name><parameter_list pos:line="856" pos:column="37">(<param><decl><type><specifier pos:line="856" pos:column="38">const</specifier> <name pos:line="856" pos:column="44">TCHAR</name> <type:modifier pos:line="856" pos:column="50">*</type:modifier></type><name pos:line="856" pos:column="51">fileName</name></decl></param>)</parameter_list> <specifier pos:line="856" pos:column="61">const</specifier>
<block pos:line="857" pos:column="1">{
	<comment type="line" pos:line="858" pos:column="9">// Get Language type</comment>
	<decl_stmt><decl><type><name pos:line="859" pos:column="9">TCHAR</name> <type:modifier pos:line="859" pos:column="15">*</type:modifier></type><name pos:line="859" pos:column="16">ext</name> <init pos:line="859" pos:column="20">= <expr><call><name pos:line="859" pos:column="22">PathFindExtension</name><argument_list pos:line="859" pos:column="39">(<argument><expr><name pos:line="859" pos:column="40">fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="860" pos:column="9">if <condition pos:line="860" pos:column="12">(<expr><op:operator pos:line="860" pos:column="13">*</op:operator><name pos:line="860" pos:column="14">ext</name> <op:operator pos:line="860" pos:column="18">==</op:operator> <lit:literal type="char" pos:line="860" pos:column="21">'.'</lit:literal></expr>)</condition><then pos:line="860" pos:column="25"> <comment type="line" pos:line="860" pos:column="26">//extension found</comment>
	<block pos:line="861" pos:column="9">{
		<expr_stmt><expr><name pos:line="862" pos:column="17">ext</name> <op:operator pos:line="862" pos:column="21">+=</op:operator> <lit:literal type="number" pos:line="862" pos:column="24">1</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="864" pos:column="9">else
	<block pos:line="865" pos:column="9">{
		<return pos:line="866" pos:column="17">return <expr><op:operator pos:line="866" pos:column="24">-</op:operator><lit:literal type="number" pos:line="866" pos:column="25">1</lit:literal></expr>;</return>
	}</block></else></if>
	<decl_stmt><decl><type><name pos:line="868" pos:column="9">NppParameters</name> <type:modifier pos:line="868" pos:column="23">*</type:modifier></type><name pos:line="868" pos:column="24">pNppParamInst</name> <init pos:line="868" pos:column="38">= <expr><call><name><name pos:line="868" pos:column="40">NppParameters</name><op:operator pos:line="868" pos:column="53">::</op:operator><name pos:line="868" pos:column="55">getInstance</name></name><argument_list pos:line="868" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="869" pos:column="9">LangType</name></type> <name pos:line="869" pos:column="18">langT</name> <init pos:line="869" pos:column="24">= <expr><call><name><name pos:line="869" pos:column="26">pNppParamInst</name><op:operator pos:line="869" pos:column="39">-&gt;</op:operator><name pos:line="869" pos:column="41">getLangFromExt</name></name><argument_list pos:line="869" pos:column="55">(<argument><expr><name pos:line="869" pos:column="56">ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="871" pos:column="9">if <condition pos:line="871" pos:column="12">(<expr><op:operator pos:line="871" pos:column="13">(</op:operator><name pos:line="871" pos:column="14">langT</name> <op:operator pos:line="871" pos:column="20">!=</op:operator> <name pos:line="871" pos:column="23">L_XML</name><op:operator pos:line="871" pos:column="28">)</op:operator> <op:operator pos:line="871" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="871" pos:column="33">(</op:operator><name pos:line="871" pos:column="34">langT</name> <op:operator pos:line="871" pos:column="40">!=</op:operator> <name pos:line="871" pos:column="43">L_HTML</name><op:operator pos:line="871" pos:column="49">)</op:operator></expr>)</condition><then pos:line="871" pos:column="51">
		<return pos:line="872" pos:column="17">return <expr><op:operator pos:line="872" pos:column="24">-</op:operator><lit:literal type="number" pos:line="872" pos:column="25">1</lit:literal></expr>;</return></then></if>

	<comment type="line" pos:line="874" pos:column="9">// Get the begining of file data</comment>
	<decl_stmt><decl><type><name pos:line="875" pos:column="9">FILE</name> <type:modifier pos:line="875" pos:column="14">*</type:modifier></type><name pos:line="875" pos:column="15">f</name> <init pos:line="875" pos:column="17">= <expr><call><name pos:line="875" pos:column="19">generic_fopen</name><argument_list pos:line="875" pos:column="32">(<argument><expr><name pos:line="875" pos:column="33">fileName</name></expr></argument>, <argument><expr><call><name pos:line="875" pos:column="43">TEXT</name><argument_list pos:line="875" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="875" pos:column="48">"rb"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="876" pos:column="9">if <condition pos:line="876" pos:column="12">(<expr><op:operator pos:line="876" pos:column="13">!</op:operator><name pos:line="876" pos:column="14">f</name></expr>)</condition><then pos:line="876" pos:column="16">
		<return pos:line="877" pos:column="17">return <expr><op:operator pos:line="877" pos:column="24">-</op:operator><lit:literal type="number" pos:line="877" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<decl_stmt><decl><type><specifier pos:line="878" pos:column="9">const</specifier> <name pos:line="878" pos:column="15">int</name></type> <name pos:line="878" pos:column="19">blockSize</name> <init pos:line="878" pos:column="29">= <expr><lit:literal type="number" pos:line="878" pos:column="31">1024</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="878" pos:column="37">// To ensure that length is long enough to capture the encoding in html</comment>
	<decl_stmt><decl><type><name pos:line="879" pos:column="9">char</name></type> <name><name pos:line="879" pos:column="14">data</name><index pos:line="879" pos:column="18">[<expr><name pos:line="879" pos:column="19">blockSize</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="880" pos:column="9">int</name></type> <name pos:line="880" pos:column="13">lenFile</name> <init pos:line="880" pos:column="21">= <expr><call><name pos:line="880" pos:column="23">fread</name><argument_list pos:line="880" pos:column="28">(<argument><expr><name pos:line="880" pos:column="29">data</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="880" pos:column="35">1</lit:literal></expr></argument>, <argument><expr><name pos:line="880" pos:column="38">blockSize</name></expr></argument>, <argument><expr><name pos:line="880" pos:column="49">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="881" pos:column="9">fclose</name><argument_list pos:line="881" pos:column="15">(<argument><expr><name pos:line="881" pos:column="16">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="883" pos:column="9">// Put data in _invisibleEditView</comment>
	<expr_stmt><expr><call><name><name pos:line="884" pos:column="9">_invisibleEditView</name><op:operator pos:line="884" pos:column="27">.</op:operator><name pos:line="884" pos:column="28">execute</name></name><argument_list pos:line="884" pos:column="35">(<argument><expr><name pos:line="884" pos:column="36">SCI_CLEARALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="885" pos:column="5">_invisibleEditView</name><op:operator pos:line="885" pos:column="23">.</op:operator><name pos:line="885" pos:column="24">execute</name></name><argument_list pos:line="885" pos:column="31">(<argument><expr><name pos:line="885" pos:column="32">SCI_APPENDTEXT</name></expr></argument>, <argument><expr><name pos:line="885" pos:column="48">lenFile</name></expr></argument>, <argument><expr><op:operator pos:line="885" pos:column="57">(</op:operator><name pos:line="885" pos:column="58">LPARAM</name><op:operator pos:line="885" pos:column="64">)</op:operator><name pos:line="885" pos:column="65">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><specifier pos:line="887" pos:column="9">const</specifier> <name pos:line="887" pos:column="15">char</name> <type:modifier pos:line="887" pos:column="20">*</type:modifier></type><name pos:line="887" pos:column="21">encodingAliasRegExpr</name> <init pos:line="887" pos:column="42">= <expr><lit:literal type="string" pos:line="887" pos:column="44">"[a-zA-Z0-9_-]+"</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="889" pos:column="9">if <condition pos:line="889" pos:column="12">(<expr><name pos:line="889" pos:column="13">langT</name> <op:operator pos:line="889" pos:column="19">==</op:operator> <name pos:line="889" pos:column="22">L_XML</name></expr>)</condition><then pos:line="889" pos:column="28">
	<block pos:line="890" pos:column="9">{
		<comment type="line" pos:line="891" pos:column="17">// find encoding by RegExpr</comment>

		<decl_stmt><decl><type><specifier pos:line="893" pos:column="17">const</specifier> <name pos:line="893" pos:column="23">char</name> <type:modifier pos:line="893" pos:column="28">*</type:modifier></type><name pos:line="893" pos:column="29">xmlHeaderRegExpr</name> <init pos:line="893" pos:column="46">= <expr><lit:literal type="string" pos:line="893" pos:column="48">"&lt;?xml[ \\t]+version[ \\t]*=[ \\t]*\"[^\"]+\"[ \\t]+encoding[ \\t]*=[ \\t]*\"[^\"]+\"[ \\t]*.*?&gt;"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="895" pos:column="9">int</name></type> <name pos:line="895" pos:column="13">startPos</name> <init pos:line="895" pos:column="22">= <expr><lit:literal type="number" pos:line="895" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="896" pos:column="17">int</name></type> <name pos:line="896" pos:column="21">endPos</name> <init pos:line="896" pos:column="28">= <expr><name pos:line="896" pos:column="30">lenFile</name><op:operator pos:line="896" pos:column="37">-</op:operator><lit:literal type="number" pos:line="896" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="897" pos:column="17">_invisibleEditView</name><op:operator pos:line="897" pos:column="35">.</op:operator><name pos:line="897" pos:column="36">execute</name></name><argument_list pos:line="897" pos:column="43">(<argument><expr><name pos:line="897" pos:column="44">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="897" pos:column="64">SCFIND_REGEXP</name><op:operator pos:line="897" pos:column="77">|</op:operator><name pos:line="897" pos:column="78">SCFIND_POSIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="899" pos:column="17">_invisibleEditView</name><op:operator pos:line="899" pos:column="35">.</op:operator><name pos:line="899" pos:column="36">execute</name></name><argument_list pos:line="899" pos:column="43">(<argument><expr><name pos:line="899" pos:column="44">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><name pos:line="899" pos:column="64">startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="900" pos:column="17">_invisibleEditView</name><op:operator pos:line="900" pos:column="35">.</op:operator><name pos:line="900" pos:column="36">execute</name></name><argument_list pos:line="900" pos:column="43">(<argument><expr><name pos:line="900" pos:column="44">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><name pos:line="900" pos:column="62">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="902" pos:column="17">int</name></type> <name pos:line="902" pos:column="21">posFound</name> <init pos:line="902" pos:column="30">= <expr><call><name><name pos:line="902" pos:column="32">_invisibleEditView</name><op:operator pos:line="902" pos:column="50">.</op:operator><name pos:line="902" pos:column="51">execute</name></name><argument_list pos:line="902" pos:column="58">(<argument><expr><name pos:line="902" pos:column="59">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="902" pos:column="79">strlen</name><argument_list pos:line="902" pos:column="85">(<argument><expr><name pos:line="902" pos:column="86">xmlHeaderRegExpr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="902" pos:column="105">(</op:operator><name pos:line="902" pos:column="106">LPARAM</name><op:operator pos:line="902" pos:column="112">)</op:operator><name pos:line="902" pos:column="113">xmlHeaderRegExpr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="903" pos:column="17">if <condition pos:line="903" pos:column="20">(<expr><name pos:line="903" pos:column="21">posFound</name> <op:operator pos:line="903" pos:column="30">!=</op:operator> <op:operator pos:line="903" pos:column="33">-</op:operator><lit:literal type="number" pos:line="903" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="903" pos:column="36">
		<block pos:line="904" pos:column="17">{
            <decl_stmt><decl><type><specifier pos:line="905" pos:column="13">const</specifier> <name pos:line="905" pos:column="19">char</name> <type:modifier pos:line="905" pos:column="24">*</type:modifier></type><name pos:line="905" pos:column="25">encodingBlockRegExpr</name> <init pos:line="905" pos:column="46">= <expr><lit:literal type="string" pos:line="905" pos:column="48">"encoding[ \\t]*=[ \\t]*\"[^\".]+\""</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="906" pos:column="13">posFound</name> <op:operator pos:line="906" pos:column="22">=</op:operator> <call><name><name pos:line="906" pos:column="24">_invisibleEditView</name><op:operator pos:line="906" pos:column="42">.</op:operator><name pos:line="906" pos:column="43">execute</name></name><argument_list pos:line="906" pos:column="50">(<argument><expr><name pos:line="906" pos:column="51">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="906" pos:column="71">strlen</name><argument_list pos:line="906" pos:column="77">(<argument><expr><name pos:line="906" pos:column="78">encodingBlockRegExpr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="906" pos:column="101">(</op:operator><name pos:line="906" pos:column="102">LPARAM</name><op:operator pos:line="906" pos:column="108">)</op:operator><name pos:line="906" pos:column="109">encodingBlockRegExpr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><specifier pos:line="908" pos:column="13">const</specifier> <name pos:line="908" pos:column="19">char</name> <type:modifier pos:line="908" pos:column="24">*</type:modifier></type><name pos:line="908" pos:column="25">encodingRegExpr</name> <init pos:line="908" pos:column="41">= <expr><lit:literal type="string" pos:line="908" pos:column="43">"\".+\""</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="909" pos:column="13">posFound</name> <op:operator pos:line="909" pos:column="22">=</op:operator> <call><name><name pos:line="909" pos:column="24">_invisibleEditView</name><op:operator pos:line="909" pos:column="42">.</op:operator><name pos:line="909" pos:column="43">execute</name></name><argument_list pos:line="909" pos:column="50">(<argument><expr><name pos:line="909" pos:column="51">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="909" pos:column="71">strlen</name><argument_list pos:line="909" pos:column="77">(<argument><expr><name pos:line="909" pos:column="78">encodingRegExpr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="909" pos:column="96">(</op:operator><name pos:line="909" pos:column="97">LPARAM</name><op:operator pos:line="909" pos:column="103">)</op:operator><name pos:line="909" pos:column="104">encodingRegExpr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="911" pos:column="25">posFound</name> <op:operator pos:line="911" pos:column="34">=</op:operator> <call><name><name pos:line="911" pos:column="36">_invisibleEditView</name><op:operator pos:line="911" pos:column="54">.</op:operator><name pos:line="911" pos:column="55">execute</name></name><argument_list pos:line="911" pos:column="62">(<argument><expr><name pos:line="911" pos:column="63">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="911" pos:column="83">strlen</name><argument_list pos:line="911" pos:column="89">(<argument><expr><name pos:line="911" pos:column="90">encodingAliasRegExpr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="911" pos:column="113">(</op:operator><name pos:line="911" pos:column="114">LPARAM</name><op:operator pos:line="911" pos:column="120">)</op:operator><name pos:line="911" pos:column="121">encodingAliasRegExpr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="913" pos:column="13">startPos</name> <op:operator pos:line="913" pos:column="22">=</op:operator> <call><name pos:line="913" pos:column="24">int</name><argument_list pos:line="913" pos:column="27">(<argument><expr><call><name><name pos:line="913" pos:column="28">_invisibleEditView</name><op:operator pos:line="913" pos:column="46">.</op:operator><name pos:line="913" pos:column="47">execute</name></name><argument_list pos:line="913" pos:column="54">(<argument><expr><name pos:line="913" pos:column="55">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="914" pos:column="25">endPos</name> <op:operator pos:line="914" pos:column="32">=</op:operator> <call><name pos:line="914" pos:column="34">int</name><argument_list pos:line="914" pos:column="37">(<argument><expr><call><name><name pos:line="914" pos:column="38">_invisibleEditView</name><op:operator pos:line="914" pos:column="56">.</op:operator><name pos:line="914" pos:column="57">execute</name></name><argument_list pos:line="914" pos:column="64">(<argument><expr><name pos:line="914" pos:column="65">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="916" pos:column="13">char</name></type> <name><name pos:line="916" pos:column="18">encodingStr</name><index pos:line="916" pos:column="29">[<expr><lit:literal type="number" pos:line="916" pos:column="30">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="917" pos:column="13">_invisibleEditView</name><op:operator pos:line="917" pos:column="31">.</op:operator><name pos:line="917" pos:column="32">getText</name></name><argument_list pos:line="917" pos:column="39">(<argument><expr><name pos:line="917" pos:column="40">encodingStr</name></expr></argument>, <argument><expr><name pos:line="917" pos:column="53">startPos</name></expr></argument>, <argument><expr><name pos:line="917" pos:column="63">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="919" pos:column="25">EncodingMapper</name> <type:modifier pos:line="919" pos:column="40">*</type:modifier></type><name pos:line="919" pos:column="41">em</name> <init pos:line="919" pos:column="44">= <expr><call><name><name pos:line="919" pos:column="46">EncodingMapper</name><op:operator pos:line="919" pos:column="60">::</op:operator><name pos:line="919" pos:column="62">getInstance</name></name><argument_list pos:line="919" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="920" pos:column="13">int</name></type> <name pos:line="920" pos:column="17">enc</name> <init pos:line="920" pos:column="21">= <expr><call><name><name pos:line="920" pos:column="23">em</name><op:operator pos:line="920" pos:column="25">-&gt;</op:operator><name pos:line="920" pos:column="27">getEncodingFromString</name></name><argument_list pos:line="920" pos:column="48">(<argument><expr><name pos:line="920" pos:column="49">encodingStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="921" pos:column="13">return <expr><op:operator pos:line="921" pos:column="20">(</op:operator><name pos:line="921" pos:column="21">enc</name><op:operator pos:line="921" pos:column="24">==</op:operator><name pos:line="921" pos:column="26">CP_ACP</name><op:operator pos:line="921" pos:column="32">?</op:operator><op:operator pos:line="921" pos:column="33">-</op:operator><lit:literal type="number" pos:line="921" pos:column="34">1</lit:literal><op:operator pos:line="921" pos:column="35">:</op:operator><name pos:line="921" pos:column="36">enc</name><op:operator pos:line="921" pos:column="39">)</op:operator></expr>;</return>
		}</block></then></if>
        <return pos:line="923" pos:column="9">return <expr><op:operator pos:line="923" pos:column="16">-</op:operator><lit:literal type="number" pos:line="923" pos:column="17">1</lit:literal></expr>;</return>
	}</block></then>
	<else pos:line="925" pos:column="9">else <comment type="line" pos:line="925" pos:column="14">// if (langT == L_HTML)</comment>
	<block pos:line="926" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="927" pos:column="17">const</specifier> <name pos:line="927" pos:column="23">char</name> <type:modifier pos:line="927" pos:column="28">*</type:modifier></type><name pos:line="927" pos:column="29">htmlHeaderRegExpr</name>  <init pos:line="927" pos:column="48">= <expr><lit:literal type="string" pos:line="927" pos:column="50">"&lt;meta[ \\t]+http-equiv[ \\t]*=[ \\t\"']*Content-Type[ \\t\"']*content[ \\t]*= *[\"']text/html;[ \\t]+charset[ \\t]*=[ \\t]*.+[\"'] */*&gt;"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="928" pos:column="17">const</specifier> <name pos:line="928" pos:column="23">char</name> <type:modifier pos:line="928" pos:column="28">*</type:modifier></type><name pos:line="928" pos:column="29">htmlHeaderRegExpr2</name> <init pos:line="928" pos:column="48">= <expr><lit:literal type="string" pos:line="928" pos:column="50">"&lt;meta[ \\t]+content[ \\t]*= *[\"']text/html;[ \\t]+charset[ \\t]*=[ \\t]*.+[ \\t\"']http-equiv[ \\t]*=[ \\t\"']*Content-Type[ \\t\"']*/*&gt;"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="929" pos:column="17">const</specifier> <name pos:line="929" pos:column="23">char</name> <type:modifier pos:line="929" pos:column="28">*</type:modifier></type><name pos:line="929" pos:column="29">charsetBlock</name> <init pos:line="929" pos:column="42">= <expr><lit:literal type="string" pos:line="929" pos:column="44">"charset[ \\t]*=[ \\t]*[^\"']+"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="930" pos:column="17">const</specifier> <name pos:line="930" pos:column="23">char</name> <type:modifier pos:line="930" pos:column="28">*</type:modifier></type><name pos:line="930" pos:column="29">intermediaire</name> <init pos:line="930" pos:column="43">= <expr><lit:literal type="string" pos:line="930" pos:column="45">"=[ \\t]*.+"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="931" pos:column="17">const</specifier> <name pos:line="931" pos:column="23">char</name> <type:modifier pos:line="931" pos:column="28">*</type:modifier></type><name pos:line="931" pos:column="29">encodingStrRE</name> <init pos:line="931" pos:column="43">= <expr><lit:literal type="string" pos:line="931" pos:column="45">"[^ \\t=]+"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="933" pos:column="9">int</name></type> <name pos:line="933" pos:column="13">startPos</name> <init pos:line="933" pos:column="22">= <expr><lit:literal type="number" pos:line="933" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="934" pos:column="17">int</name></type> <name pos:line="934" pos:column="21">endPos</name> <init pos:line="934" pos:column="28">= <expr><name pos:line="934" pos:column="30">lenFile</name><op:operator pos:line="934" pos:column="37">-</op:operator><lit:literal type="number" pos:line="934" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="935" pos:column="17">_invisibleEditView</name><op:operator pos:line="935" pos:column="35">.</op:operator><name pos:line="935" pos:column="36">execute</name></name><argument_list pos:line="935" pos:column="43">(<argument><expr><name pos:line="935" pos:column="44">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="935" pos:column="64">SCFIND_REGEXP</name><op:operator pos:line="935" pos:column="77">|</op:operator><name pos:line="935" pos:column="78">SCFIND_POSIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="937" pos:column="17">_invisibleEditView</name><op:operator pos:line="937" pos:column="35">.</op:operator><name pos:line="937" pos:column="36">execute</name></name><argument_list pos:line="937" pos:column="43">(<argument><expr><name pos:line="937" pos:column="44">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><name pos:line="937" pos:column="64">startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="938" pos:column="17">_invisibleEditView</name><op:operator pos:line="938" pos:column="35">.</op:operator><name pos:line="938" pos:column="36">execute</name></name><argument_list pos:line="938" pos:column="43">(<argument><expr><name pos:line="938" pos:column="44">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><name pos:line="938" pos:column="62">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="940" pos:column="17">int</name></type> <name pos:line="940" pos:column="21">posFound</name> <init pos:line="940" pos:column="30">= <expr><call><name><name pos:line="940" pos:column="32">_invisibleEditView</name><op:operator pos:line="940" pos:column="50">.</op:operator><name pos:line="940" pos:column="51">execute</name></name><argument_list pos:line="940" pos:column="58">(<argument><expr><name pos:line="940" pos:column="59">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="940" pos:column="79">strlen</name><argument_list pos:line="940" pos:column="85">(<argument><expr><name pos:line="940" pos:column="86">htmlHeaderRegExpr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="940" pos:column="106">(</op:operator><name pos:line="940" pos:column="107">LPARAM</name><op:operator pos:line="940" pos:column="113">)</op:operator><name pos:line="940" pos:column="114">htmlHeaderRegExpr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="942" pos:column="17">if <condition pos:line="942" pos:column="20">(<expr><name pos:line="942" pos:column="21">posFound</name> <op:operator pos:line="942" pos:column="30">==</op:operator> <op:operator pos:line="942" pos:column="33">-</op:operator><lit:literal type="number" pos:line="942" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="942" pos:column="36">
		<block pos:line="943" pos:column="17">{
			<expr_stmt><expr><name pos:line="944" pos:column="25">posFound</name> <op:operator pos:line="944" pos:column="34">=</op:operator> <call><name><name pos:line="944" pos:column="36">_invisibleEditView</name><op:operator pos:line="944" pos:column="54">.</op:operator><name pos:line="944" pos:column="55">execute</name></name><argument_list pos:line="944" pos:column="62">(<argument><expr><name pos:line="944" pos:column="63">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="944" pos:column="83">strlen</name><argument_list pos:line="944" pos:column="89">(<argument><expr><name pos:line="944" pos:column="90">htmlHeaderRegExpr2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="944" pos:column="111">(</op:operator><name pos:line="944" pos:column="112">LPARAM</name><op:operator pos:line="944" pos:column="118">)</op:operator><name pos:line="944" pos:column="119">htmlHeaderRegExpr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="945" pos:column="25">if <condition pos:line="945" pos:column="28">(<expr><name pos:line="945" pos:column="29">posFound</name> <op:operator pos:line="945" pos:column="38">==</op:operator> <op:operator pos:line="945" pos:column="41">-</op:operator><lit:literal type="number" pos:line="945" pos:column="42">1</lit:literal></expr>)</condition><then pos:line="945" pos:column="44">
				<return pos:line="946" pos:column="33">return <expr><op:operator pos:line="946" pos:column="40">-</op:operator><lit:literal type="number" pos:line="946" pos:column="41">1</lit:literal></expr>;</return></then></if>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="948" pos:column="17">posFound</name> <op:operator pos:line="948" pos:column="26">=</op:operator> <call><name><name pos:line="948" pos:column="28">_invisibleEditView</name><op:operator pos:line="948" pos:column="46">.</op:operator><name pos:line="948" pos:column="47">execute</name></name><argument_list pos:line="948" pos:column="54">(<argument><expr><name pos:line="948" pos:column="55">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="948" pos:column="75">strlen</name><argument_list pos:line="948" pos:column="81">(<argument><expr><name pos:line="948" pos:column="82">charsetBlock</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="948" pos:column="97">(</op:operator><name pos:line="948" pos:column="98">LPARAM</name><op:operator pos:line="948" pos:column="104">)</op:operator><name pos:line="948" pos:column="105">charsetBlock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="949" pos:column="17">posFound</name> <op:operator pos:line="949" pos:column="26">=</op:operator> <call><name><name pos:line="949" pos:column="28">_invisibleEditView</name><op:operator pos:line="949" pos:column="46">.</op:operator><name pos:line="949" pos:column="47">execute</name></name><argument_list pos:line="949" pos:column="54">(<argument><expr><name pos:line="949" pos:column="55">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="949" pos:column="75">strlen</name><argument_list pos:line="949" pos:column="81">(<argument><expr><name pos:line="949" pos:column="82">intermediaire</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="949" pos:column="98">(</op:operator><name pos:line="949" pos:column="99">LPARAM</name><op:operator pos:line="949" pos:column="105">)</op:operator><name pos:line="949" pos:column="106">intermediaire</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="950" pos:column="17">posFound</name> <op:operator pos:line="950" pos:column="26">=</op:operator> <call><name><name pos:line="950" pos:column="28">_invisibleEditView</name><op:operator pos:line="950" pos:column="46">.</op:operator><name pos:line="950" pos:column="47">execute</name></name><argument_list pos:line="950" pos:column="54">(<argument><expr><name pos:line="950" pos:column="55">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="950" pos:column="75">strlen</name><argument_list pos:line="950" pos:column="81">(<argument><expr><name pos:line="950" pos:column="82">encodingStrRE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="950" pos:column="98">(</op:operator><name pos:line="950" pos:column="99">LPARAM</name><op:operator pos:line="950" pos:column="105">)</op:operator><name pos:line="950" pos:column="106">encodingStrRE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="952" pos:column="9">startPos</name> <op:operator pos:line="952" pos:column="18">=</op:operator> <call><name pos:line="952" pos:column="20">int</name><argument_list pos:line="952" pos:column="23">(<argument><expr><call><name><name pos:line="952" pos:column="24">_invisibleEditView</name><op:operator pos:line="952" pos:column="42">.</op:operator><name pos:line="952" pos:column="43">execute</name></name><argument_list pos:line="952" pos:column="50">(<argument><expr><name pos:line="952" pos:column="51">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="953" pos:column="17">endPos</name> <op:operator pos:line="953" pos:column="24">=</op:operator> <call><name pos:line="953" pos:column="26">int</name><argument_list pos:line="953" pos:column="29">(<argument><expr><call><name><name pos:line="953" pos:column="30">_invisibleEditView</name><op:operator pos:line="953" pos:column="48">.</op:operator><name pos:line="953" pos:column="49">execute</name></name><argument_list pos:line="953" pos:column="56">(<argument><expr><name pos:line="953" pos:column="57">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="955" pos:column="9">char</name></type> <name><name pos:line="955" pos:column="14">encodingStr</name><index pos:line="955" pos:column="25">[<expr><lit:literal type="number" pos:line="955" pos:column="26">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="956" pos:column="9">_invisibleEditView</name><op:operator pos:line="956" pos:column="27">.</op:operator><name pos:line="956" pos:column="28">getText</name></name><argument_list pos:line="956" pos:column="35">(<argument><expr><name pos:line="956" pos:column="36">encodingStr</name></expr></argument>, <argument><expr><name pos:line="956" pos:column="49">startPos</name></expr></argument>, <argument><expr><name pos:line="956" pos:column="59">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="958" pos:column="17">EncodingMapper</name> <type:modifier pos:line="958" pos:column="32">*</type:modifier></type><name pos:line="958" pos:column="33">em</name> <init pos:line="958" pos:column="36">= <expr><call><name><name pos:line="958" pos:column="38">EncodingMapper</name><op:operator pos:line="958" pos:column="52">::</op:operator><name pos:line="958" pos:column="54">getInstance</name></name><argument_list pos:line="958" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="959" pos:column="17">int</name></type> <name pos:line="959" pos:column="21">enc</name> <init pos:line="959" pos:column="25">= <expr><call><name><name pos:line="959" pos:column="27">em</name><op:operator pos:line="959" pos:column="29">-&gt;</op:operator><name pos:line="959" pos:column="31">getEncodingFromString</name></name><argument_list pos:line="959" pos:column="52">(<argument><expr><name pos:line="959" pos:column="53">encodingStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return pos:line="960" pos:column="9">return <expr><op:operator pos:line="960" pos:column="16">(</op:operator><name pos:line="960" pos:column="17">enc</name><op:operator pos:line="960" pos:column="20">==</op:operator><name pos:line="960" pos:column="22">CP_ACP</name><op:operator pos:line="960" pos:column="28">?</op:operator><op:operator pos:line="960" pos:column="29">-</op:operator><lit:literal type="number" pos:line="960" pos:column="30">1</lit:literal><op:operator pos:line="960" pos:column="31">:</op:operator><name pos:line="960" pos:column="32">enc</name><op:operator pos:line="960" pos:column="35">)</op:operator></expr>;</return>
	}</block></else></if>
}</block></function>


<function><type><name pos:line="965" pos:column="1">bool</name></type> <name><name pos:line="965" pos:column="6">Notepad_plus</name><op:operator pos:line="965" pos:column="18">::</op:operator><name pos:line="965" pos:column="20">replaceAllFiles</name></name><parameter_list pos:line="965" pos:column="35">()</parameter_list> <block pos:line="965" pos:column="38">{

	<decl_stmt><decl><type><name pos:line="967" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="967" pos:column="27">*</type:modifier></type><name pos:line="967" pos:column="28">pOldView</name> <init pos:line="967" pos:column="37">= <expr><name pos:line="967" pos:column="39">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="968" pos:column="9">_pEditView</name> <op:operator pos:line="968" pos:column="20">=</op:operator> <op:operator pos:line="968" pos:column="22">&amp;</op:operator><name pos:line="968" pos:column="23">_invisibleEditView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="969" pos:column="9">Document</name></type> <name pos:line="969" pos:column="18">oldDoc</name> <init pos:line="969" pos:column="25">= <expr><call><name><name pos:line="969" pos:column="27">_invisibleEditView</name><op:operator pos:line="969" pos:column="45">.</op:operator><name pos:line="969" pos:column="46">execute</name></name><argument_list pos:line="969" pos:column="53">(<argument><expr><name pos:line="969" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="970" pos:column="9">Buffer</name> <type:modifier pos:line="970" pos:column="16">*</type:modifier></type> <name pos:line="970" pos:column="18">oldBuf</name> <init pos:line="970" pos:column="25">= <expr><call><name><name pos:line="970" pos:column="27">_invisibleEditView</name><op:operator pos:line="970" pos:column="45">.</op:operator><name pos:line="970" pos:column="46">getCurrentBuffer</name></name><argument_list pos:line="970" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="970" pos:column="73">//for manually setting the buffer, so notifications can be handled properly</comment>

	<decl_stmt><decl><type><name pos:line="972" pos:column="9">Buffer</name> <type:modifier pos:line="972" pos:column="16">*</type:modifier></type> <name pos:line="972" pos:column="18">pBuf</name> <init pos:line="972" pos:column="23">= <expr><name pos:line="972" pos:column="25">NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="974" pos:column="9">int</name></type> <name pos:line="974" pos:column="13">nbTotal</name> <init pos:line="974" pos:column="21">= <expr><lit:literal type="number" pos:line="974" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="975" pos:column="9">const</specifier> <name pos:line="975" pos:column="15">bool</name></type> <name pos:line="975" pos:column="20">isEntireDoc</name> <init pos:line="975" pos:column="32">= <expr><lit:literal type="boolean" pos:line="975" pos:column="34">true</lit:literal></expr></init></decl>;</decl_stmt>

    <if pos:line="977" pos:column="5">if <condition pos:line="977" pos:column="8">(<expr><name pos:line="977" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="977" pos:column="27">&amp;</op:operator> <name pos:line="977" pos:column="29">WindowMainActive</name></expr>)</condition><then pos:line="977" pos:column="46">
    <block pos:line="978" pos:column="5">{
		<for pos:line="979" pos:column="17">for (<init><decl><type><name pos:line="979" pos:column="22">int</name></type> <name pos:line="979" pos:column="26">i</name> <init pos:line="979" pos:column="28">= <expr><lit:literal type="number" pos:line="979" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="979" pos:column="34">i</name> <op:operator pos:line="979" pos:column="36">&lt;</op:operator> <call><name><name pos:line="979" pos:column="38">_mainDocTab</name><op:operator pos:line="979" pos:column="49">.</op:operator><name pos:line="979" pos:column="50">nbItem</name></name><argument_list pos:line="979" pos:column="56">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="979" pos:column="61">i</name><op:operator pos:line="979" pos:column="62">++</op:operator></expr></incr>)
	    <block pos:line="980" pos:column="13">{
			<expr_stmt><expr><name pos:line="981" pos:column="25">pBuf</name> <op:operator pos:line="981" pos:column="30">=</op:operator> <call><name><name pos:line="981" pos:column="32">MainFileManager</name><op:operator pos:line="981" pos:column="47">-&gt;</op:operator><name pos:line="981" pos:column="49">getBufferByID</name></name><argument_list pos:line="981" pos:column="62">(<argument><expr><call><name><name pos:line="981" pos:column="63">_mainDocTab</name><op:operator pos:line="981" pos:column="74">.</op:operator><name pos:line="981" pos:column="75">getBufferByIndex</name></name><argument_list pos:line="981" pos:column="91">(<argument><expr><name pos:line="981" pos:column="92">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="982" pos:column="25">if <condition pos:line="982" pos:column="28">(<expr><call><name><name pos:line="982" pos:column="29">pBuf</name><op:operator pos:line="982" pos:column="33">-&gt;</op:operator><name pos:line="982" pos:column="35">isReadOnly</name></name><argument_list pos:line="982" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="982" pos:column="48">
				<continue pos:line="983" pos:column="33">continue;</continue></then></if>
			<expr_stmt><expr><call><name><name pos:line="984" pos:column="25">_invisibleEditView</name><op:operator pos:line="984" pos:column="43">.</op:operator><name pos:line="984" pos:column="44">execute</name></name><argument_list pos:line="984" pos:column="51">(<argument><expr><name pos:line="984" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="984" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="984" pos:column="74">pBuf</name><op:operator pos:line="984" pos:column="78">-&gt;</op:operator><name pos:line="984" pos:column="80">getDocument</name></name><argument_list pos:line="984" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="985" pos:column="25">int</name></type> <name pos:line="985" pos:column="29">cp</name> <init pos:line="985" pos:column="32">= <expr><call><name><name pos:line="985" pos:column="34">_invisibleEditView</name><op:operator pos:line="985" pos:column="52">.</op:operator><name pos:line="985" pos:column="53">execute</name></name><argument_list pos:line="985" pos:column="60">(<argument><expr><name pos:line="985" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="986" pos:column="25">_invisibleEditView</name><op:operator pos:line="986" pos:column="43">.</op:operator><name pos:line="986" pos:column="44">execute</name></name><argument_list pos:line="986" pos:column="51">(<argument><expr><name pos:line="986" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="986" pos:column="69">pBuf</name><op:operator pos:line="986" pos:column="73">-&gt;</op:operator><name pos:line="986" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="986" pos:column="89">()</argument_list></call> <op:operator pos:line="986" pos:column="92">==</op:operator> <name pos:line="986" pos:column="95">uni8Bit</name> <op:operator pos:line="986" pos:column="103">?</op:operator> <name pos:line="986" pos:column="105">cp</name> <op:operator pos:line="986" pos:column="108">:</op:operator> <name pos:line="986" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="987" pos:column="25">_invisibleEditView</name><op:operator pos:line="987" pos:column="43">.</op:operator><name pos:line="987" pos:column="44">setCurrentBuffer</name></name><argument_list pos:line="987" pos:column="60">(<argument><expr><name pos:line="987" pos:column="61">pBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <expr_stmt><expr><call><name><name pos:line="988" pos:column="21">_invisibleEditView</name><op:operator pos:line="988" pos:column="39">.</op:operator><name pos:line="988" pos:column="40">execute</name></name><argument_list pos:line="988" pos:column="47">(<argument><expr><name pos:line="988" pos:column="48">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="989" pos:column="25">nbTotal</name> <op:operator pos:line="989" pos:column="33">+=</op:operator> <call><name><name pos:line="989" pos:column="36">_findReplaceDlg</name><op:operator pos:line="989" pos:column="51">.</op:operator><name pos:line="989" pos:column="52">processAll</name></name><argument_list pos:line="989" pos:column="62">(<argument><expr><name pos:line="989" pos:column="63">ProcessReplaceAll</name></expr></argument>, <argument><expr><name><name pos:line="989" pos:column="82">FindReplaceDlg</name><op:operator pos:line="989" pos:column="96">::</op:operator><name pos:line="989" pos:column="98">_env</name></name></expr></argument>, <argument><expr><name pos:line="989" pos:column="104">isEntireDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="990" pos:column="25">_invisibleEditView</name><op:operator pos:line="990" pos:column="43">.</op:operator><name pos:line="990" pos:column="44">execute</name></name><argument_list pos:line="990" pos:column="51">(<argument><expr><name pos:line="990" pos:column="52">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<if pos:line="994" pos:column="9">if <condition pos:line="994" pos:column="12">(<expr><name pos:line="994" pos:column="13">_mainWindowStatus</name> <op:operator pos:line="994" pos:column="31">&amp;</op:operator> <name pos:line="994" pos:column="33">WindowSubActive</name></expr>)</condition><then pos:line="994" pos:column="49">
    <block pos:line="995" pos:column="5">{
		<for pos:line="996" pos:column="17">for (<init><decl><type><name pos:line="996" pos:column="22">int</name></type> <name pos:line="996" pos:column="26">i</name> <init pos:line="996" pos:column="28">= <expr><lit:literal type="number" pos:line="996" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="996" pos:column="34">i</name> <op:operator pos:line="996" pos:column="36">&lt;</op:operator> <call><name><name pos:line="996" pos:column="38">_subDocTab</name><op:operator pos:line="996" pos:column="48">.</op:operator><name pos:line="996" pos:column="49">nbItem</name></name><argument_list pos:line="996" pos:column="55">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="996" pos:column="60">i</name><op:operator pos:line="996" pos:column="61">++</op:operator></expr></incr>)
	    <block pos:line="997" pos:column="13">{
			<expr_stmt><expr><name pos:line="998" pos:column="25">pBuf</name> <op:operator pos:line="998" pos:column="30">=</op:operator> <call><name><name pos:line="998" pos:column="32">MainFileManager</name><op:operator pos:line="998" pos:column="47">-&gt;</op:operator><name pos:line="998" pos:column="49">getBufferByID</name></name><argument_list pos:line="998" pos:column="62">(<argument><expr><call><name><name pos:line="998" pos:column="63">_subDocTab</name><op:operator pos:line="998" pos:column="73">.</op:operator><name pos:line="998" pos:column="74">getBufferByIndex</name></name><argument_list pos:line="998" pos:column="90">(<argument><expr><name pos:line="998" pos:column="91">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="999" pos:column="25">if <condition pos:line="999" pos:column="28">(<expr><call><name><name pos:line="999" pos:column="29">pBuf</name><op:operator pos:line="999" pos:column="33">-&gt;</op:operator><name pos:line="999" pos:column="35">isReadOnly</name></name><argument_list pos:line="999" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="999" pos:column="48">
				<continue pos:line="1000" pos:column="33">continue;</continue></then></if>
			<expr_stmt><expr><call><name><name pos:line="1001" pos:column="25">_invisibleEditView</name><op:operator pos:line="1001" pos:column="43">.</op:operator><name pos:line="1001" pos:column="44">execute</name></name><argument_list pos:line="1001" pos:column="51">(<argument><expr><name pos:line="1001" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1001" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1001" pos:column="74">pBuf</name><op:operator pos:line="1001" pos:column="78">-&gt;</op:operator><name pos:line="1001" pos:column="80">getDocument</name></name><argument_list pos:line="1001" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1002" pos:column="25">int</name></type> <name pos:line="1002" pos:column="29">cp</name> <init pos:line="1002" pos:column="32">= <expr><call><name><name pos:line="1002" pos:column="34">_invisibleEditView</name><op:operator pos:line="1002" pos:column="52">.</op:operator><name pos:line="1002" pos:column="53">execute</name></name><argument_list pos:line="1002" pos:column="60">(<argument><expr><name pos:line="1002" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1003" pos:column="25">_invisibleEditView</name><op:operator pos:line="1003" pos:column="43">.</op:operator><name pos:line="1003" pos:column="44">execute</name></name><argument_list pos:line="1003" pos:column="51">(<argument><expr><name pos:line="1003" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1003" pos:column="69">pBuf</name><op:operator pos:line="1003" pos:column="73">-&gt;</op:operator><name pos:line="1003" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="1003" pos:column="89">()</argument_list></call> <op:operator pos:line="1003" pos:column="92">==</op:operator> <name pos:line="1003" pos:column="95">uni8Bit</name> <op:operator pos:line="1003" pos:column="103">?</op:operator> <name pos:line="1003" pos:column="105">cp</name> <op:operator pos:line="1003" pos:column="108">:</op:operator> <name pos:line="1003" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1004" pos:column="25">_invisibleEditView</name><op:operator pos:line="1004" pos:column="43">.</op:operator><name pos:line="1004" pos:column="44">setCurrentBuffer</name></name><argument_list pos:line="1004" pos:column="60">(<argument><expr><name pos:line="1004" pos:column="61">pBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <expr_stmt><expr><call><name><name pos:line="1005" pos:column="21">_invisibleEditView</name><op:operator pos:line="1005" pos:column="39">.</op:operator><name pos:line="1005" pos:column="40">execute</name></name><argument_list pos:line="1005" pos:column="47">(<argument><expr><name pos:line="1005" pos:column="48">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1006" pos:column="25">nbTotal</name> <op:operator pos:line="1006" pos:column="33">+=</op:operator> <call><name><name pos:line="1006" pos:column="36">_findReplaceDlg</name><op:operator pos:line="1006" pos:column="51">.</op:operator><name pos:line="1006" pos:column="52">processAll</name></name><argument_list pos:line="1006" pos:column="62">(<argument><expr><name pos:line="1006" pos:column="63">ProcessReplaceAll</name></expr></argument>, <argument><expr><name><name pos:line="1006" pos:column="82">FindReplaceDlg</name><op:operator pos:line="1006" pos:column="96">::</op:operator><name pos:line="1006" pos:column="98">_env</name></name></expr></argument>, <argument><expr><name pos:line="1006" pos:column="104">isEntireDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1007" pos:column="25">_invisibleEditView</name><op:operator pos:line="1007" pos:column="43">.</op:operator><name pos:line="1007" pos:column="44">execute</name></name><argument_list pos:line="1007" pos:column="51">(<argument><expr><name pos:line="1007" pos:column="52">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="1011" pos:column="9">_invisibleEditView</name><op:operator pos:line="1011" pos:column="27">.</op:operator><name pos:line="1011" pos:column="28">execute</name></name><argument_list pos:line="1011" pos:column="35">(<argument><expr><name pos:line="1011" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1011" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1011" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1012" pos:column="9">_invisibleEditView</name><op:operator pos:line="1012" pos:column="27">.</op:operator><name pos:line="1012" pos:column="28">setCurrentBuffer</name></name><argument_list pos:line="1012" pos:column="44">(<argument><expr><name pos:line="1012" pos:column="45">oldBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1013" pos:column="9">_pEditView</name> <op:operator pos:line="1013" pos:column="20">=</op:operator> <name pos:line="1013" pos:column="22">pOldView</name></expr>;</expr_stmt>


	<if pos:line="1016" pos:column="9">if <condition pos:line="1016" pos:column="12">(<expr><name pos:line="1016" pos:column="13">nbTotal</name> <op:operator pos:line="1016" pos:column="21">&lt;</op:operator> <lit:literal type="number" pos:line="1016" pos:column="23">0</lit:literal></expr>)</condition><then pos:line="1016" pos:column="25">
		<expr_stmt><expr><call><name><op:operator pos:line="1017" pos:column="17">::</op:operator><name pos:line="1017" pos:column="19">printStr</name></name><argument_list pos:line="1017" pos:column="27">(<argument><expr><call><name pos:line="1017" pos:column="28">TEXT</name><argument_list pos:line="1017" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1017" pos:column="33">"The regular expression to search is formed badly"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1018" pos:column="9">else
	<block pos:line="1019" pos:column="9">{
		<if pos:line="1020" pos:column="17">if <condition pos:line="1020" pos:column="20">(<expr><name pos:line="1020" pos:column="21">nbTotal</name></expr>)</condition><then pos:line="1020" pos:column="29">
			<expr_stmt><expr><call><name pos:line="1021" pos:column="25">enableCommand</name><argument_list pos:line="1021" pos:column="38">(<argument><expr><name pos:line="1021" pos:column="39">IDM_FILE_SAVEALL</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1021" pos:column="57">true</lit:literal></expr></argument>, <argument><expr><name pos:line="1021" pos:column="63">MENU</name> <op:operator pos:line="1021" pos:column="68">|</op:operator> <name pos:line="1021" pos:column="70">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<decl_stmt><decl><type><name pos:line="1022" pos:column="17">TCHAR</name></type> <name><name pos:line="1022" pos:column="23">result</name><index pos:line="1022" pos:column="29">[<expr><lit:literal type="number" pos:line="1022" pos:column="30">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1023" pos:column="17">wsprintf</name><argument_list pos:line="1023" pos:column="25">(<argument><expr><name pos:line="1023" pos:column="26">result</name></expr></argument>, <argument><expr><call><name pos:line="1023" pos:column="34">TEXT</name><argument_list pos:line="1023" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="1023" pos:column="39">"%d occurrences replaced."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1023" pos:column="68">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1024" pos:column="17">::</op:operator><name pos:line="1024" pos:column="19">printStr</name></name><argument_list pos:line="1024" pos:column="27">(<argument><expr><name pos:line="1024" pos:column="28">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>


	<return pos:line="1028" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1028" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1031" pos:column="1">bool</name></type> <name><name pos:line="1031" pos:column="6">Notepad_plus</name><op:operator pos:line="1031" pos:column="18">::</op:operator><name pos:line="1031" pos:column="20">matchInList</name></name><parameter_list pos:line="1031" pos:column="31">(<param><decl><type><specifier pos:line="1031" pos:column="32">const</specifier> <name pos:line="1031" pos:column="38">TCHAR</name> <type:modifier pos:line="1031" pos:column="44">*</type:modifier></type><name pos:line="1031" pos:column="45">fileName</name></decl></param>, <param><decl><type><specifier pos:line="1031" pos:column="55">const</specifier> <name><name pos:line="1031" pos:column="61">vector</name><argument_list pos:line="1031" pos:column="67">&lt;<argument><expr><name pos:line="1031" pos:column="68">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1031" pos:column="84">&amp;</type:modifier></type> <name pos:line="1031" pos:column="86">patterns</name></decl></param>)</parameter_list>
<block pos:line="1032" pos:column="1">{
	<for pos:line="1033" pos:column="9">for (<init><decl><type><name pos:line="1033" pos:column="14">size_t</name></type> <name pos:line="1033" pos:column="21">i</name> <init pos:line="1033" pos:column="23">= <expr><lit:literal type="number" pos:line="1033" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1033" pos:column="29">i</name> <op:operator pos:line="1033" pos:column="31">&lt;</op:operator> <call><name><name pos:line="1033" pos:column="33">patterns</name><op:operator pos:line="1033" pos:column="41">.</op:operator><name pos:line="1033" pos:column="42">size</name></name><argument_list pos:line="1033" pos:column="46">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1033" pos:column="51">i</name><op:operator pos:line="1033" pos:column="52">++</op:operator></expr></incr>)
	<block pos:line="1034" pos:column="9">{
		<if pos:line="1035" pos:column="17">if <condition pos:line="1035" pos:column="20">(<expr><call><name pos:line="1035" pos:column="21">PathMatchSpec</name><argument_list pos:line="1035" pos:column="34">(<argument><expr><name pos:line="1035" pos:column="35">fileName</name></expr></argument>, <argument><expr><name><name pos:line="1035" pos:column="45">patterns</name><index pos:line="1035" pos:column="53">[<expr><name pos:line="1035" pos:column="54">i</name></expr>]</index></name><op:operator pos:line="1035" pos:column="56">.</op:operator><call><name pos:line="1035" pos:column="57">c_str</name><argument_list pos:line="1035" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1035" pos:column="66">
			<return pos:line="1036" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1036" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="1038" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1038" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1041" pos:column="1">void</name></type> <name><name pos:line="1041" pos:column="6">Notepad_plus</name><op:operator pos:line="1041" pos:column="18">::</op:operator><name pos:line="1041" pos:column="20">wsTabConvert</name></name><parameter_list pos:line="1041" pos:column="32">(<param><decl><type><name pos:line="1041" pos:column="33">spaceTab</name></type> <name pos:line="1041" pos:column="42">whichWay</name></decl></param>)</parameter_list>
<block pos:line="1042" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1043" pos:column="9">int</name></type> <name pos:line="1043" pos:column="13">tabWidth</name> <init pos:line="1043" pos:column="22">= <expr><call><name><name pos:line="1043" pos:column="24">_pEditView</name><op:operator pos:line="1043" pos:column="34">-&gt;</op:operator><name pos:line="1043" pos:column="36">execute</name></name><argument_list pos:line="1043" pos:column="43">(<argument><expr><name pos:line="1043" pos:column="44">SCI_GETTABWIDTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1044" pos:column="9">int</name></type> <name pos:line="1044" pos:column="13">docLength</name> <init pos:line="1044" pos:column="23">= <expr><call><name pos:line="1044" pos:column="25">int</name><argument_list pos:line="1044" pos:column="28">(<argument><expr><call><name><name pos:line="1044" pos:column="29">_pEditView</name><op:operator pos:line="1044" pos:column="39">-&gt;</op:operator><name pos:line="1044" pos:column="41">execute</name></name><argument_list pos:line="1044" pos:column="48">(<argument><expr><name pos:line="1044" pos:column="49">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1044" pos:column="65">+</op:operator> <lit:literal type="number" pos:line="1044" pos:column="67">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1045" pos:column="9">if <condition pos:line="1045" pos:column="12">(<expr><name pos:line="1045" pos:column="13">docLength</name> <op:operator pos:line="1045" pos:column="23">&lt;</op:operator> <lit:literal type="number" pos:line="1045" pos:column="25">2</lit:literal></expr>)</condition><then pos:line="1045" pos:column="27"> 
		<return pos:line="1046" pos:column="17">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="1047" pos:column="9">int</name></type> <name pos:line="1047" pos:column="13">count</name> <init pos:line="1047" pos:column="19">= <expr><lit:literal type="number" pos:line="1047" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1048" pos:column="9">int</name></type> <name pos:line="1048" pos:column="13">column</name> <init pos:line="1048" pos:column="20">= <expr><lit:literal type="number" pos:line="1048" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1049" pos:column="9">int</name></type> <name pos:line="1049" pos:column="13">counter</name> <init pos:line="1049" pos:column="21">= <expr><lit:literal type="number" pos:line="1049" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1050" pos:column="9">int</name></type> <name pos:line="1050" pos:column="13">tabStop</name> <init pos:line="1050" pos:column="21">= <expr><name pos:line="1050" pos:column="23">tabWidth</name> <op:operator pos:line="1050" pos:column="32">-</op:operator> <lit:literal type="number" pos:line="1050" pos:column="34">1</lit:literal></expr></init></decl>;</decl_stmt>   <comment type="line" pos:line="1050" pos:column="39">// remember, counting from zero !</comment>
	<decl_stmt><decl><type><name pos:line="1051" pos:column="9">bool</name></type> <name pos:line="1051" pos:column="14">onlyLeading</name> <init pos:line="1051" pos:column="26">= <expr><lit:literal type="boolean" pos:line="1051" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1052" pos:column="9">bool</name></type> <name pos:line="1052" pos:column="14">nonSpaceFound</name> <init pos:line="1052" pos:column="28">= <expr><lit:literal type="boolean" pos:line="1052" pos:column="30">false</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1054" pos:column="9">char</name> <type:modifier pos:line="1054" pos:column="14">*</type:modifier></type> <name pos:line="1054" pos:column="16">source</name> <init pos:line="1054" pos:column="23">= <expr><op:operator pos:line="1054" pos:column="25">new</op:operator> <name><name pos:line="1054" pos:column="29">char</name><index pos:line="1054" pos:column="33">[<expr><name pos:line="1054" pos:column="34">docLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<if pos:line="1055" pos:column="9">if <condition pos:line="1055" pos:column="12">(<expr><name pos:line="1055" pos:column="13">source</name> <op:operator pos:line="1055" pos:column="20">==</op:operator> <name pos:line="1055" pos:column="23">NULL</name></expr>)</condition><then pos:line="1055" pos:column="28">
		<return pos:line="1056" pos:column="17">return;</return></then></if>
	<expr_stmt><expr><call><name><name pos:line="1057" pos:column="9">_pEditView</name><op:operator pos:line="1057" pos:column="19">-&gt;</op:operator><name pos:line="1057" pos:column="21">execute</name></name><argument_list pos:line="1057" pos:column="28">(<argument><expr><name pos:line="1057" pos:column="29">SCI_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="1057" pos:column="42">docLength</name></expr></argument>, <argument><expr><op:operator pos:line="1057" pos:column="53">(</op:operator><name pos:line="1057" pos:column="54">LPARAM</name><op:operator pos:line="1057" pos:column="60">)</op:operator><name pos:line="1057" pos:column="61">source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1059" pos:column="9">if <condition pos:line="1059" pos:column="12">(<expr><name pos:line="1059" pos:column="13">whichWay</name> <op:operator pos:line="1059" pos:column="22">==</op:operator> <name pos:line="1059" pos:column="25">tab2Space</name></expr>)</condition><then pos:line="1059" pos:column="35">
	<block pos:line="1060" pos:column="9">{
		<comment type="line" pos:line="1061" pos:column="17">// count how many tabs are there</comment>
		<for pos:line="1062" pos:column="17">for (<init><decl><type><specifier pos:line="1062" pos:column="22">const</specifier> <name pos:line="1062" pos:column="28">char</name> <type:modifier pos:line="1062" pos:column="33">*</type:modifier></type> <name pos:line="1062" pos:column="35">ch</name><init pos:line="1062" pos:column="37">=<expr><name pos:line="1062" pos:column="38">source</name></expr></init></decl>;</init> <condition><expr><op:operator pos:line="1062" pos:column="46">*</op:operator><name pos:line="1062" pos:column="47">ch</name></expr>;</condition> <incr><expr><op:operator pos:line="1062" pos:column="51">++</op:operator><name pos:line="1062" pos:column="53">ch</name></expr></incr>)
		<block pos:line="1063" pos:column="17">{
    		<if pos:line="1064" pos:column="17">if <condition pos:line="1064" pos:column="20">(<expr><op:operator pos:line="1064" pos:column="21">*</op:operator><name pos:line="1064" pos:column="22">ch</name> <op:operator pos:line="1064" pos:column="25">==</op:operator> <lit:literal type="char" pos:line="1064" pos:column="28">'\t'</lit:literal></expr>)</condition><then pos:line="1064" pos:column="33">
    			<expr_stmt><expr><op:operator pos:line="1065" pos:column="25">++</op:operator><name pos:line="1065" pos:column="27">count</name></expr>;</expr_stmt></then></if>
		}</block></for>
		<if pos:line="1067" pos:column="17">if <condition pos:line="1067" pos:column="20">(<expr><name pos:line="1067" pos:column="21">count</name> <op:operator pos:line="1067" pos:column="27">==</op:operator> <lit:literal type="number" pos:line="1067" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="1067" pos:column="32">
		<block pos:line="1068" pos:column="17">{
			<expr_stmt><expr><op:operator pos:line="1069" pos:column="25">delete</op:operator> <index pos:line="1069" pos:column="32">[]</index> <name pos:line="1069" pos:column="35">source</name></expr>;</expr_stmt>
			<return pos:line="1070" pos:column="25">return;</return>
		}</block></then></if>
	}</block></then></if>
	<comment type="line" pos:line="1073" pos:column="9">// allocate tabwidth-1 chars extra per tab, just to be safe</comment>
	<decl_stmt><decl><type><name pos:line="1074" pos:column="9">size_t</name></type> <name pos:line="1074" pos:column="16">newlen</name> <init pos:line="1074" pos:column="23">= <expr><name pos:line="1074" pos:column="25">docLength</name> <op:operator pos:line="1074" pos:column="35">+</op:operator> <name pos:line="1074" pos:column="37">count</name> <op:operator pos:line="1074" pos:column="43">*</op:operator> <op:operator pos:line="1074" pos:column="45">(</op:operator><name pos:line="1074" pos:column="46">tabWidth</name> <op:operator pos:line="1074" pos:column="55">-</op:operator> <lit:literal type="number" pos:line="1074" pos:column="57">1</lit:literal><op:operator pos:line="1074" pos:column="58">)</op:operator> <op:operator pos:line="1074" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="1074" pos:column="62">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1075" pos:column="9">char</name> <type:modifier pos:line="1075" pos:column="14">*</type:modifier></type> <name pos:line="1075" pos:column="16">destination</name> <init pos:line="1075" pos:column="28">= <expr><op:operator pos:line="1075" pos:column="30">new</op:operator> <name><name pos:line="1075" pos:column="34">char</name><index pos:line="1075" pos:column="38">[<expr><name pos:line="1075" pos:column="39">newlen</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<if pos:line="1076" pos:column="9">if <condition pos:line="1076" pos:column="12">(<expr><name pos:line="1076" pos:column="13">destination</name> <op:operator pos:line="1076" pos:column="25">==</op:operator> <name pos:line="1076" pos:column="28">NULL</name></expr>)</condition><then pos:line="1076" pos:column="33">
	<block pos:line="1077" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1078" pos:column="17">delete</op:operator> <index pos:line="1078" pos:column="24">[]</index> <name pos:line="1078" pos:column="27">source</name></expr>;</expr_stmt>
		<return pos:line="1079" pos:column="17">return;</return>
	}</block></then></if>	
    <decl_stmt><decl><type><name pos:line="1081" pos:column="5">char</name> <type:modifier pos:line="1081" pos:column="10">*</type:modifier></type> <name pos:line="1081" pos:column="12">dest</name> <init pos:line="1081" pos:column="17">= <expr><name pos:line="1081" pos:column="19">destination</name></expr></init></decl>;</decl_stmt>

	<switch pos:line="1083" pos:column="9">switch <condition pos:line="1083" pos:column="16">(<expr><name pos:line="1083" pos:column="17">whichWay</name></expr>)</condition>
	<block pos:line="1084" pos:column="9">{
		<case pos:line="1085" pos:column="17">case <expr><name pos:line="1085" pos:column="22">tab2Space</name></expr>:
		<block pos:line="1086" pos:column="17">{
			<comment type="line" pos:line="1087" pos:column="25">// rip through each line in the file</comment>
			<for pos:line="1088" pos:column="25">for (<init><decl><type><specifier pos:line="1088" pos:column="30">const</specifier> <name pos:line="1088" pos:column="36">char</name> <type:modifier pos:line="1088" pos:column="41">*</type:modifier></type> <name pos:line="1088" pos:column="43">ch</name> <init pos:line="1088" pos:column="46">= <expr><name pos:line="1088" pos:column="48">source</name></expr></init></decl>;</init> <condition><expr><op:operator pos:line="1088" pos:column="56">*</op:operator><name pos:line="1088" pos:column="57">ch</name></expr>;</condition> <incr><expr><op:operator pos:line="1088" pos:column="61">++</op:operator><name pos:line="1088" pos:column="63">ch</name></expr></incr>)
			<block pos:line="1089" pos:column="25">{
				<if pos:line="1090" pos:column="33">if <condition pos:line="1090" pos:column="36">(<expr><op:operator pos:line="1090" pos:column="37">*</op:operator><name pos:line="1090" pos:column="38">ch</name> <op:operator pos:line="1090" pos:column="41">==</op:operator> <lit:literal type="char" pos:line="1090" pos:column="44">'\t'</lit:literal></expr>)</condition><then pos:line="1090" pos:column="49">
				<block pos:line="1091" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1092" pos:column="41">size_t</name></type> <name pos:line="1092" pos:column="48">insertTabs</name> <init pos:line="1092" pos:column="59">= <expr><name pos:line="1092" pos:column="61">tabWidth</name> <op:operator pos:line="1092" pos:column="70">-</op:operator> <op:operator pos:line="1092" pos:column="72">(</op:operator><name pos:line="1092" pos:column="73">column</name> <op:operator pos:line="1092" pos:column="80">%</op:operator> <name pos:line="1092" pos:column="82">tabWidth</name><op:operator pos:line="1092" pos:column="90">)</op:operator></expr></init></decl>;</decl_stmt>
					<for pos:line="1093" pos:column="41">for (<init><decl><type><name pos:line="1093" pos:column="46">size_t</name></type> <name pos:line="1093" pos:column="53">i</name> <init pos:line="1093" pos:column="55">= <expr><lit:literal type="number" pos:line="1093" pos:column="57">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1093" pos:column="60">i</name><op:operator pos:line="1093" pos:column="61">&lt;</op:operator><name pos:line="1093" pos:column="62">insertTabs</name></expr>;</condition> <incr><expr><op:operator pos:line="1093" pos:column="74">++</op:operator><name pos:line="1093" pos:column="76">i</name></expr></incr>)
					<block pos:line="1094" pos:column="41">{
						<expr_stmt><expr><op:operator pos:line="1095" pos:column="49">*</op:operator><name pos:line="1095" pos:column="50">dest</name><op:operator pos:line="1095" pos:column="54">++</op:operator> <op:operator pos:line="1095" pos:column="57">=</op:operator> <lit:literal type="char" pos:line="1095" pos:column="59">' '</lit:literal></expr>;</expr_stmt>
					}</block></for>
					<expr_stmt><expr><name pos:line="1097" pos:column="41">column</name> <op:operator pos:line="1097" pos:column="48">+=</op:operator> <name pos:line="1097" pos:column="51">insertTabs</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="1099" pos:column="33">else
				<block pos:line="1100" pos:column="33">{
					<expr_stmt><expr><op:operator pos:line="1101" pos:column="41">*</op:operator><name pos:line="1101" pos:column="42">dest</name><op:operator pos:line="1101" pos:column="46">++</op:operator> <op:operator pos:line="1101" pos:column="49">=</op:operator> <op:operator pos:line="1101" pos:column="51">*</op:operator><name pos:line="1101" pos:column="52">ch</name></expr>;</expr_stmt>
					<if pos:line="1102" pos:column="41">if <condition pos:line="1102" pos:column="44">(<expr><op:operator pos:line="1102" pos:column="45">(</op:operator><op:operator pos:line="1102" pos:column="46">*</op:operator><name pos:line="1102" pos:column="47">ch</name> <op:operator pos:line="1102" pos:column="50">==</op:operator> <lit:literal type="char" pos:line="1102" pos:column="53">'\n'</lit:literal><op:operator pos:line="1102" pos:column="57">)</op:operator> <op:operator pos:line="1102" pos:column="59">||</op:operator> <op:operator pos:line="1102" pos:column="62">(</op:operator><op:operator pos:line="1102" pos:column="63">*</op:operator><name pos:line="1102" pos:column="64">ch</name> <op:operator pos:line="1102" pos:column="67">==</op:operator> <lit:literal type="char" pos:line="1102" pos:column="70">'\r'</lit:literal><op:operator pos:line="1102" pos:column="74">)</op:operator></expr>)</condition><then pos:line="1102" pos:column="76">
						<expr_stmt><expr><name pos:line="1103" pos:column="49">column</name> <op:operator pos:line="1103" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1103" pos:column="58">0</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="1104" pos:column="41">else
						<expr_stmt><expr><op:operator pos:line="1105" pos:column="49">++</op:operator><name pos:line="1105" pos:column="51">column</name></expr>;</expr_stmt></else></if>
				}</block></else></if>
			}</block></for>
			<expr_stmt><expr><op:operator pos:line="1108" pos:column="25">*</op:operator><name pos:line="1108" pos:column="26">dest</name> <op:operator pos:line="1108" pos:column="31">=</op:operator> <lit:literal type="char" pos:line="1108" pos:column="33">'\0'</lit:literal></expr>;</expr_stmt>
			<break pos:line="1109" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1111" pos:column="17">case <expr><name pos:line="1111" pos:column="22">space2TabLeading</name></expr>:
		<block pos:line="1112" pos:column="17">{
			<expr_stmt><expr><name pos:line="1113" pos:column="25">onlyLeading</name> <op:operator pos:line="1113" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="1113" pos:column="39">true</lit:literal></expr>;</expr_stmt>
		}</block>
		</case><case pos:line="1115" pos:column="17">case <expr><name pos:line="1115" pos:column="22">space2TabAll</name></expr>:
		<block pos:line="1116" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1117" pos:column="25">bool</name></type> <name pos:line="1117" pos:column="30">nextChar</name> <init pos:line="1117" pos:column="39">= <expr><lit:literal type="boolean" pos:line="1117" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
            <for pos:line="1118" pos:column="13">for (<init><decl><type><specifier pos:line="1118" pos:column="18">const</specifier> <name pos:line="1118" pos:column="24">char</name> <type:modifier pos:line="1118" pos:column="29">*</type:modifier></type> <name pos:line="1118" pos:column="31">ch</name><init pos:line="1118" pos:column="33">=<expr><name pos:line="1118" pos:column="34">source</name></expr></init></decl>;</init> <condition><expr><op:operator pos:line="1118" pos:column="42">*</op:operator><name pos:line="1118" pos:column="43">ch</name></expr>;</condition> <incr><expr><op:operator pos:line="1118" pos:column="47">++</op:operator><name pos:line="1118" pos:column="49">ch</name></expr></incr>)
			<block pos:line="1119" pos:column="25">{
				<if pos:line="1120" pos:column="33">if <condition pos:line="1120" pos:column="36">(<expr><name pos:line="1120" pos:column="37">nonSpaceFound</name> <op:operator pos:line="1120" pos:column="51">==</op:operator> <lit:literal type="boolean" pos:line="1120" pos:column="54">false</lit:literal></expr>)</condition><then pos:line="1120" pos:column="60">
				<block pos:line="1121" pos:column="33">{
					<while pos:line="1122" pos:column="41">while <condition pos:line="1122" pos:column="47">(<expr><op:operator pos:line="1122" pos:column="48">*</op:operator><op:operator pos:line="1122" pos:column="49">(</op:operator><name pos:line="1122" pos:column="50">ch</name> <op:operator pos:line="1122" pos:column="53">+</op:operator> <name pos:line="1122" pos:column="55">counter</name><op:operator pos:line="1122" pos:column="62">)</op:operator> <op:operator pos:line="1122" pos:column="64">==</op:operator> <lit:literal type="char" pos:line="1122" pos:column="67">' '</lit:literal></expr>)</condition>
					<block pos:line="1123" pos:column="41">{
						<if pos:line="1124" pos:column="49">if <condition pos:line="1124" pos:column="52">(<expr><op:operator pos:line="1124" pos:column="53">(</op:operator><name pos:line="1124" pos:column="54">column</name> <op:operator pos:line="1124" pos:column="61">+</op:operator> <name pos:line="1124" pos:column="63">counter</name><op:operator pos:line="1124" pos:column="70">)</op:operator> <op:operator pos:line="1124" pos:column="72">==</op:operator> <name pos:line="1124" pos:column="75">tabStop</name></expr>)</condition><then pos:line="1124" pos:column="83">
						<block pos:line="1125" pos:column="49">{
							<expr_stmt><expr><name pos:line="1126" pos:column="57">tabStop</name> <op:operator pos:line="1126" pos:column="65">+=</op:operator> <name pos:line="1126" pos:column="68">tabWidth</name></expr>;</expr_stmt>
							<if pos:line="1127" pos:column="57">if <condition pos:line="1127" pos:column="60">(<expr><name pos:line="1127" pos:column="61">counter</name> <op:operator pos:line="1127" pos:column="69">&gt;=</op:operator> <lit:literal type="number" pos:line="1127" pos:column="72">1</lit:literal></expr>)</condition><then pos:line="1127" pos:column="74">        <comment type="line" pos:line="1127" pos:column="82">// counter is counted from 0, so counter &gt;= max -1</comment>
							<block pos:line="1128" pos:column="57">{
								<expr_stmt><expr><op:operator pos:line="1129" pos:column="65">*</op:operator><name pos:line="1129" pos:column="66">dest</name><op:operator pos:line="1129" pos:column="70">++</op:operator> <op:operator pos:line="1129" pos:column="73">=</op:operator> <lit:literal type="char" pos:line="1129" pos:column="75">'\t'</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1130" pos:column="65">ch</name> <op:operator pos:line="1130" pos:column="68">+=</op:operator> <name pos:line="1130" pos:column="71">counter</name></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1131" pos:column="65">column</name> <op:operator pos:line="1131" pos:column="72">+=</op:operator> <name pos:line="1131" pos:column="75">counter</name> <op:operator pos:line="1131" pos:column="83">+</op:operator> <lit:literal type="number" pos:line="1131" pos:column="85">1</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1132" pos:column="65">counter</name> <op:operator pos:line="1132" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1132" pos:column="75">0</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1133" pos:column="65">nextChar</name> <op:operator pos:line="1133" pos:column="74">=</op:operator> <lit:literal type="boolean" pos:line="1133" pos:column="76">true</lit:literal></expr>;</expr_stmt>
								<break pos:line="1134" pos:column="65">break;</break>
							}</block></then>
							<else pos:line="1136" pos:column="57">else <if pos:line="1136" pos:column="62">if <condition pos:line="1136" pos:column="65">(<expr><op:operator pos:line="1136" pos:column="66">*</op:operator><op:operator pos:line="1136" pos:column="67">(</op:operator><name pos:line="1136" pos:column="68">ch</name><op:operator pos:line="1136" pos:column="70">+</op:operator><lit:literal type="number" pos:line="1136" pos:column="71">1</lit:literal><op:operator pos:line="1136" pos:column="72">)</op:operator> <op:operator pos:line="1136" pos:column="74">==</op:operator> <lit:literal type="char" pos:line="1136" pos:column="77">' '</lit:literal> <op:operator pos:line="1136" pos:column="81">||</op:operator> <op:operator pos:line="1136" pos:column="84">*</op:operator><op:operator pos:line="1136" pos:column="85">(</op:operator><name pos:line="1136" pos:column="86">ch</name><op:operator pos:line="1136" pos:column="88">+</op:operator><lit:literal type="number" pos:line="1136" pos:column="89">1</lit:literal><op:operator pos:line="1136" pos:column="90">)</op:operator> <op:operator pos:line="1136" pos:column="92">==</op:operator> <lit:literal type="char" pos:line="1136" pos:column="95">'\t'</lit:literal></expr>)</condition><then pos:line="1136" pos:column="100">  <comment type="line" pos:line="1136" pos:column="102">// if followed by space or TAB, convert even a single space to TAB</comment>
							<block pos:line="1137" pos:column="57">{
								<expr_stmt><expr><op:operator pos:line="1138" pos:column="65">*</op:operator><name pos:line="1138" pos:column="66">dest</name><op:operator pos:line="1138" pos:column="70">++</op:operator> <op:operator pos:line="1138" pos:column="73">=</op:operator> <lit:literal type="char" pos:line="1138" pos:column="75">'\t'</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1139" pos:column="65">ch</name><op:operator pos:line="1139" pos:column="67">++</op:operator></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1140" pos:column="65">column</name> <op:operator pos:line="1140" pos:column="72">+=</op:operator> <lit:literal type="number" pos:line="1140" pos:column="75">1</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1141" pos:column="65">counter</name> <op:operator pos:line="1141" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1141" pos:column="75">0</lit:literal></expr>;</expr_stmt>
							}</block></then>
							<else pos:line="1143" pos:column="57">else       <comment type="line" pos:line="1143" pos:column="68">// single space, don't convert it to TAB</comment>
							<block pos:line="1144" pos:column="57">{
								<expr_stmt><expr><op:operator pos:line="1145" pos:column="65">*</op:operator><name pos:line="1145" pos:column="66">dest</name><op:operator pos:line="1145" pos:column="70">++</op:operator> <op:operator pos:line="1145" pos:column="73">=</op:operator> <op:operator pos:line="1145" pos:column="75">*</op:operator><name pos:line="1145" pos:column="76">ch</name></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1146" pos:column="65">column</name> <op:operator pos:line="1146" pos:column="72">+=</op:operator> <lit:literal type="number" pos:line="1146" pos:column="75">1</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1147" pos:column="65">counter</name> <op:operator pos:line="1147" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1147" pos:column="75">0</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="1148" pos:column="65">nextChar</name> <op:operator pos:line="1148" pos:column="74">=</op:operator> <lit:literal type="boolean" pos:line="1148" pos:column="76">true</lit:literal></expr>;</expr_stmt>
								<break pos:line="1149" pos:column="65">break;</break>
							}</block></else></if></else></if>
						}</block></then>
						<else pos:line="1152" pos:column="49">else
							<expr_stmt><expr><op:operator pos:line="1153" pos:column="57">++</op:operator><name pos:line="1153" pos:column="59">counter</name></expr>;</expr_stmt></else></if>
					}</block></while>
                    
					<if pos:line="1156" pos:column="41">if <condition pos:line="1156" pos:column="44">(<expr><name pos:line="1156" pos:column="45">nextChar</name> <op:operator pos:line="1156" pos:column="54">==</op:operator> <lit:literal type="boolean" pos:line="1156" pos:column="57">true</lit:literal></expr>)</condition><then pos:line="1156" pos:column="62">
					<block pos:line="1157" pos:column="41">{
						<expr_stmt><expr><name pos:line="1158" pos:column="49">nextChar</name> <op:operator pos:line="1158" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="1158" pos:column="60">false</lit:literal></expr>;</expr_stmt>
						<continue pos:line="1159" pos:column="49">continue;</continue>
					}</block></then></if>
                    
                    <if pos:line="1162" pos:column="21">if <condition pos:line="1162" pos:column="24">(<expr><op:operator pos:line="1162" pos:column="25">*</op:operator><name pos:line="1162" pos:column="26">ch</name> <op:operator pos:line="1162" pos:column="29">==</op:operator> <lit:literal type="char" pos:line="1162" pos:column="32">' '</lit:literal> <op:operator pos:line="1162" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="1162" pos:column="39">*</op:operator><op:operator pos:line="1162" pos:column="40">(</op:operator><name pos:line="1162" pos:column="41">ch</name> <op:operator pos:line="1162" pos:column="44">+</op:operator> <name pos:line="1162" pos:column="46">counter</name><op:operator pos:line="1162" pos:column="53">)</op:operator> <op:operator pos:line="1162" pos:column="55">==</op:operator> <lit:literal type="char" pos:line="1162" pos:column="58">'\t'</lit:literal></expr>)</condition><then pos:line="1162" pos:column="63"> <comment type="line" pos:line="1162" pos:column="64">// spaces "absorbed" by a TAB on the right</comment>
                    <block pos:line="1163" pos:column="21">{
                        <expr_stmt><expr><op:operator pos:line="1164" pos:column="25">*</op:operator><name pos:line="1164" pos:column="26">dest</name><op:operator pos:line="1164" pos:column="30">++</op:operator> <op:operator pos:line="1164" pos:column="33">=</op:operator> <lit:literal type="char" pos:line="1164" pos:column="35">'\t'</lit:literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="1165" pos:column="25">ch</name> <op:operator pos:line="1165" pos:column="28">+=</op:operator> <name pos:line="1165" pos:column="31">counter</name></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="1166" pos:column="25">column</name> <op:operator pos:line="1166" pos:column="32">=</op:operator> <name pos:line="1166" pos:column="34">tabStop</name> <op:operator pos:line="1166" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="1166" pos:column="44">1</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="1167" pos:column="49">tabStop</name> <op:operator pos:line="1167" pos:column="57">+=</op:operator> <name pos:line="1167" pos:column="60">tabWidth</name></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="1168" pos:column="25">counter</name> <op:operator pos:line="1168" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="1168" pos:column="35">0</lit:literal></expr>;</expr_stmt>
                        <continue pos:line="1169" pos:column="25">continue;</continue>
                    }</block></then></if>
				}</block></then></if>
                
				<if pos:line="1173" pos:column="33">if <condition pos:line="1173" pos:column="36">(<expr><name pos:line="1173" pos:column="37">onlyLeading</name> <op:operator pos:line="1173" pos:column="49">==</op:operator> <lit:literal type="boolean" pos:line="1173" pos:column="52">true</lit:literal> <op:operator pos:line="1173" pos:column="57">&amp;&amp;</op:operator> <name pos:line="1173" pos:column="60">nonSpaceFound</name> <op:operator pos:line="1173" pos:column="74">==</op:operator> <lit:literal type="boolean" pos:line="1173" pos:column="77">false</lit:literal></expr>)</condition><then pos:line="1173" pos:column="83">
					<expr_stmt><expr><name pos:line="1174" pos:column="41">nonSpaceFound</name> <op:operator pos:line="1174" pos:column="55">=</op:operator> <lit:literal type="boolean" pos:line="1174" pos:column="57">true</lit:literal></expr>;</expr_stmt></then></if>
					
				<if pos:line="1176" pos:column="33">if <condition pos:line="1176" pos:column="36">(<expr><op:operator pos:line="1176" pos:column="37">*</op:operator><name pos:line="1176" pos:column="38">ch</name> <op:operator pos:line="1176" pos:column="41">==</op:operator> <lit:literal type="char" pos:line="1176" pos:column="44">'\n'</lit:literal> <op:operator pos:line="1176" pos:column="49">||</op:operator> <op:operator pos:line="1176" pos:column="52">*</op:operator><name pos:line="1176" pos:column="53">ch</name> <op:operator pos:line="1176" pos:column="56">==</op:operator> <lit:literal type="char" pos:line="1176" pos:column="59">'\r'</lit:literal></expr>)</condition><then pos:line="1176" pos:column="64">
				<block pos:line="1177" pos:column="33">{
                    <expr_stmt><expr><op:operator pos:line="1178" pos:column="21">*</op:operator><name pos:line="1178" pos:column="22">dest</name><op:operator pos:line="1178" pos:column="26">++</op:operator> <op:operator pos:line="1178" pos:column="29">=</op:operator> <op:operator pos:line="1178" pos:column="31">*</op:operator><name pos:line="1178" pos:column="32">ch</name></expr>;</expr_stmt> 
					<expr_stmt><expr><name pos:line="1179" pos:column="41">column</name> <op:operator pos:line="1179" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="1179" pos:column="50">0</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1180" pos:column="41">tabStop</name> <op:operator pos:line="1180" pos:column="49">=</op:operator> <name pos:line="1180" pos:column="51">tabWidth</name> <op:operator pos:line="1180" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="1180" pos:column="62">1</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1181" pos:column="41">nonSpaceFound</name> <op:operator pos:line="1181" pos:column="55">=</op:operator> <lit:literal type="boolean" pos:line="1181" pos:column="57">false</lit:literal></expr>;</expr_stmt>
				}</block></then>
                <else pos:line="1183" pos:column="17">else <if pos:line="1183" pos:column="22">if <condition pos:line="1183" pos:column="25">(<expr><op:operator pos:line="1183" pos:column="26">*</op:operator><name pos:line="1183" pos:column="27">ch</name> <op:operator pos:line="1183" pos:column="30">==</op:operator> <lit:literal type="char" pos:line="1183" pos:column="33">'\t'</lit:literal></expr>)</condition><then pos:line="1183" pos:column="38">
                <block pos:line="1184" pos:column="17">{
                    <expr_stmt><expr><op:operator pos:line="1185" pos:column="21">*</op:operator><name pos:line="1185" pos:column="22">dest</name><op:operator pos:line="1185" pos:column="26">++</op:operator> <op:operator pos:line="1185" pos:column="29">=</op:operator> <op:operator pos:line="1185" pos:column="31">*</op:operator><name pos:line="1185" pos:column="32">ch</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="1186" pos:column="21">column</name> <op:operator pos:line="1186" pos:column="28">=</op:operator> <name pos:line="1186" pos:column="30">tabStop</name> <op:operator pos:line="1186" pos:column="38">+</op:operator> <lit:literal type="number" pos:line="1186" pos:column="40">1</lit:literal></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="1187" pos:column="21">tabStop</name> <op:operator pos:line="1187" pos:column="29">+=</op:operator> <name pos:line="1187" pos:column="32">tabWidth</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="1188" pos:column="21">counter</name> <op:operator pos:line="1188" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="1188" pos:column="31">0</lit:literal></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="1190" pos:column="17">else
                <block pos:line="1191" pos:column="17">{
                    <expr_stmt><expr><op:operator pos:line="1192" pos:column="21">*</op:operator><name pos:line="1192" pos:column="22">dest</name><op:operator pos:line="1192" pos:column="26">++</op:operator> <op:operator pos:line="1192" pos:column="29">=</op:operator> <op:operator pos:line="1192" pos:column="31">*</op:operator><name pos:line="1192" pos:column="32">ch</name></expr>;</expr_stmt> 
                    <expr_stmt><expr><op:operator pos:line="1193" pos:column="21">++</op:operator><name pos:line="1193" pos:column="23">column</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="1194" pos:column="21">counter</name> <op:operator pos:line="1194" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="1194" pos:column="31">0</lit:literal></expr>;</expr_stmt>                

                    <if pos:line="1196" pos:column="21">if <condition pos:line="1196" pos:column="24">(<expr><name pos:line="1196" pos:column="25">column</name> <op:operator pos:line="1196" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="1196" pos:column="34">0</lit:literal> <op:operator pos:line="1196" pos:column="36">&amp;&amp;</op:operator> <name pos:line="1196" pos:column="39">column</name> <op:operator pos:line="1196" pos:column="46">%</op:operator> <name pos:line="1196" pos:column="48">tabWidth</name> <op:operator pos:line="1196" pos:column="57">==</op:operator> <lit:literal type="number" pos:line="1196" pos:column="60">0</lit:literal></expr>)</condition><then pos:line="1196" pos:column="62">
                        <expr_stmt><expr><name pos:line="1197" pos:column="25">tabStop</name> <op:operator pos:line="1197" pos:column="33">+=</op:operator> <name pos:line="1197" pos:column="36">tabWidth</name></expr>;</expr_stmt></then></if>
                }</block></else></if></else></if>
			}</block></for>
		    <expr_stmt><expr><op:operator pos:line="1200" pos:column="21">*</op:operator><name pos:line="1200" pos:column="22">dest</name> <op:operator pos:line="1200" pos:column="27">=</op:operator> <lit:literal type="char" pos:line="1200" pos:column="29">'\0'</lit:literal></expr>;</expr_stmt>
            <break pos:line="1201" pos:column="13">break;</break>
		}</block>
	</case>}</block></switch>

	<expr_stmt><expr><call><name><name pos:line="1205" pos:column="9">_pEditView</name><op:operator pos:line="1205" pos:column="19">-&gt;</op:operator><name pos:line="1205" pos:column="21">execute</name></name><argument_list pos:line="1205" pos:column="28">(<argument><expr><name pos:line="1205" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
	<expr_stmt><expr><call><name><name pos:line="1206" pos:column="9">_pEditView</name><op:operator pos:line="1206" pos:column="19">-&gt;</op:operator><name pos:line="1206" pos:column="21">execute</name></name><argument_list pos:line="1206" pos:column="28">(<argument><expr><name pos:line="1206" pos:column="29">SCI_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1206" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1206" pos:column="45">(</op:operator><name pos:line="1206" pos:column="46">LPARAM</name><op:operator pos:line="1206" pos:column="52">)</op:operator><name pos:line="1206" pos:column="53">destination</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1207" pos:column="9">_pEditView</name><op:operator pos:line="1207" pos:column="19">-&gt;</op:operator><name pos:line="1207" pos:column="21">execute</name></name><argument_list pos:line="1207" pos:column="28">(<argument><expr><name pos:line="1207" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1209" pos:column="9">// clean up</comment>
	<expr_stmt><expr><op:operator pos:line="1210" pos:column="9">delete</op:operator> <index pos:line="1210" pos:column="16">[]</index> <name pos:line="1210" pos:column="19">source</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="1211" pos:column="9">delete</op:operator> <index pos:line="1211" pos:column="16">[]</index> <name pos:line="1211" pos:column="19">destination</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1214" pos:column="1">void</name></type> <name><name pos:line="1214" pos:column="6">Notepad_plus</name><op:operator pos:line="1214" pos:column="18">::</op:operator><name pos:line="1214" pos:column="20">doTrim</name></name><parameter_list pos:line="1214" pos:column="26">(<param><decl><type><name pos:line="1214" pos:column="27">trimOp</name></type> <name pos:line="1214" pos:column="34">whichPart</name></decl></param>)</parameter_list>
<block pos:line="1215" pos:column="1">{
	<comment type="line" pos:line="1216" pos:column="9">// whichPart : line head or line tail</comment>
	<decl_stmt><decl><type><name pos:line="1217" pos:column="9">FindOption</name></type> <name pos:line="1217" pos:column="20">env</name></decl>;</decl_stmt>
	<if pos:line="1218" pos:column="9">if <condition pos:line="1218" pos:column="12">(<expr><name pos:line="1218" pos:column="13">whichPart</name> <op:operator pos:line="1218" pos:column="23">==</op:operator> <name pos:line="1218" pos:column="26">lineHeader</name></expr>)</condition><then pos:line="1218" pos:column="37">
	<block pos:line="1219" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1220" pos:column="17">env</name><op:operator pos:line="1220" pos:column="20">.</op:operator><name pos:line="1220" pos:column="21">_str2Search</name></name> <op:operator pos:line="1220" pos:column="33">=</op:operator> <call><name pos:line="1220" pos:column="35">TEXT</name><argument_list pos:line="1220" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1220" pos:column="40">"^[	 ]+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1222" pos:column="9">else <if pos:line="1222" pos:column="14">if <condition pos:line="1222" pos:column="17">(<expr><name pos:line="1222" pos:column="18">whichPart</name> <op:operator pos:line="1222" pos:column="28">==</op:operator> <name pos:line="1222" pos:column="31">lineTail</name></expr>)</condition><then pos:line="1222" pos:column="40">
	<block pos:line="1223" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1224" pos:column="17">env</name><op:operator pos:line="1224" pos:column="20">.</op:operator><name pos:line="1224" pos:column="21">_str2Search</name></name> <op:operator pos:line="1224" pos:column="33">=</op:operator> <call><name pos:line="1224" pos:column="35">TEXT</name><argument_list pos:line="1224" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1224" pos:column="40">"[	 ]+$"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1226" pos:column="9">else
		<return pos:line="1227" pos:column="17">return;</return></else></if></else></if>
	<expr_stmt><expr><name><name pos:line="1228" pos:column="9">env</name><op:operator pos:line="1228" pos:column="12">.</op:operator><name pos:line="1228" pos:column="13">_str4Replace</name></name> <op:operator pos:line="1228" pos:column="26">=</op:operator> <call><name pos:line="1228" pos:column="28">TEXT</name><argument_list pos:line="1228" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1228" pos:column="33">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="1229" pos:column="5">env</name><op:operator pos:line="1229" pos:column="8">.</op:operator><name pos:line="1229" pos:column="9">_searchType</name></name> <op:operator pos:line="1229" pos:column="21">=</op:operator> <name pos:line="1229" pos:column="23">FindRegex</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1230" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1230" pos:column="24">.</op:operator><name pos:line="1230" pos:column="25">processAll</name></name><argument_list pos:line="1230" pos:column="35">(<argument><expr><name pos:line="1230" pos:column="36">ProcessReplaceAll</name></expr></argument>, <argument><expr><op:operator pos:line="1230" pos:column="55">&amp;</op:operator><name pos:line="1230" pos:column="56">env</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1230" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1233" pos:column="1">void</name></type> <name><name pos:line="1233" pos:column="6">Notepad_plus</name><op:operator pos:line="1233" pos:column="18">::</op:operator><name pos:line="1233" pos:column="20">removeEmptyLine</name></name><parameter_list pos:line="1233" pos:column="35">(<param><decl><type><name pos:line="1233" pos:column="36">bool</name></type> <name pos:line="1233" pos:column="41">isBlankContained</name></decl></param>)</parameter_list>
<block pos:line="1234" pos:column="1">{
	<comment type="line" pos:line="1235" pos:column="9">// whichPart : line head or line tail</comment>
	<decl_stmt><decl><type><name pos:line="1236" pos:column="9">FindOption</name></type> <name pos:line="1236" pos:column="20">env</name></decl>;</decl_stmt>
	<if pos:line="1237" pos:column="9">if <condition pos:line="1237" pos:column="12">(<expr><name pos:line="1237" pos:column="13">isBlankContained</name></expr>)</condition><then pos:line="1237" pos:column="30">
	<block pos:line="1238" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1239" pos:column="17">env</name><op:operator pos:line="1239" pos:column="20">.</op:operator><name pos:line="1239" pos:column="21">_str2Search</name></name> <op:operator pos:line="1239" pos:column="33">=</op:operator> <call><name pos:line="1239" pos:column="35">TEXT</name><argument_list pos:line="1239" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1239" pos:column="40">"^[\\t ]*$(\\r\\n|\\r|\\n)"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1241" pos:column="9">else
	<block pos:line="1242" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1243" pos:column="17">env</name><op:operator pos:line="1243" pos:column="20">.</op:operator><name pos:line="1243" pos:column="21">_str2Search</name></name> <op:operator pos:line="1243" pos:column="33">=</op:operator> <call><name pos:line="1243" pos:column="35">TEXT</name><argument_list pos:line="1243" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1243" pos:column="40">"^$(\\r\\n|\\r|\\n)"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><name><name pos:line="1245" pos:column="9">env</name><op:operator pos:line="1245" pos:column="12">.</op:operator><name pos:line="1245" pos:column="13">_str4Replace</name></name> <op:operator pos:line="1245" pos:column="26">=</op:operator> <call><name pos:line="1245" pos:column="28">TEXT</name><argument_list pos:line="1245" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1245" pos:column="33">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="1246" pos:column="5">env</name><op:operator pos:line="1246" pos:column="8">.</op:operator><name pos:line="1246" pos:column="9">_searchType</name></name> <op:operator pos:line="1246" pos:column="21">=</op:operator> <name pos:line="1246" pos:column="23">FindRegex</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name><name pos:line="1248" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1248" pos:column="24">.</op:operator><name pos:line="1248" pos:column="25">processAll</name></name><argument_list pos:line="1248" pos:column="35">(<argument><expr><name pos:line="1248" pos:column="36">ProcessReplaceAll</name></expr></argument>, <argument><expr><op:operator pos:line="1248" pos:column="55">&amp;</op:operator><name pos:line="1248" pos:column="56">env</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1248" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<comment type="line" pos:line="1251" pos:column="9">// remove the last line if it's an empty line.</comment>
	<if pos:line="1252" pos:column="9">if <condition pos:line="1252" pos:column="12">(<expr><name pos:line="1252" pos:column="13">isBlankContained</name></expr>)</condition><then pos:line="1252" pos:column="30">
	<block pos:line="1253" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1254" pos:column="17">env</name><op:operator pos:line="1254" pos:column="20">.</op:operator><name pos:line="1254" pos:column="21">_str2Search</name></name> <op:operator pos:line="1254" pos:column="33">=</op:operator> <call><name pos:line="1254" pos:column="35">TEXT</name><argument_list pos:line="1254" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1254" pos:column="40">"(\\r\\n|\\r|\\n)^[\\t ]*$"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1256" pos:column="9">else
	<block pos:line="1257" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1258" pos:column="17">env</name><op:operator pos:line="1258" pos:column="20">.</op:operator><name pos:line="1258" pos:column="21">_str2Search</name></name> <op:operator pos:line="1258" pos:column="33">=</op:operator> <call><name pos:line="1258" pos:column="35">TEXT</name><argument_list pos:line="1258" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1258" pos:column="40">"(\\r\\n|\\r|\\n)^$"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="1260" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1260" pos:column="24">.</op:operator><name pos:line="1260" pos:column="25">processAll</name></name><argument_list pos:line="1260" pos:column="35">(<argument><expr><name pos:line="1260" pos:column="36">ProcessReplaceAll</name></expr></argument>, <argument><expr><op:operator pos:line="1260" pos:column="55">&amp;</op:operator><name pos:line="1260" pos:column="56">env</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1260" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1263" pos:column="1">void</name></type> <name><name pos:line="1263" pos:column="6">Notepad_plus</name><op:operator pos:line="1263" pos:column="18">::</op:operator><name pos:line="1263" pos:column="20">getMatchedFileNames</name></name><parameter_list pos:line="1263" pos:column="39">(<param><decl><type><specifier pos:line="1263" pos:column="40">const</specifier> <name pos:line="1263" pos:column="46">TCHAR</name> <type:modifier pos:line="1263" pos:column="52">*</type:modifier></type><name pos:line="1263" pos:column="53">dir</name></decl></param>, <param><decl><type><specifier pos:line="1263" pos:column="58">const</specifier> <name><name pos:line="1263" pos:column="64">vector</name><argument_list pos:line="1263" pos:column="70">&lt;<argument><expr><name pos:line="1263" pos:column="71">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1263" pos:column="87">&amp;</type:modifier></type> <name pos:line="1263" pos:column="89">patterns</name></decl></param>, <param><decl><type><name><name pos:line="1263" pos:column="99">vector</name><argument_list pos:line="1263" pos:column="105">&lt;<argument><expr><name pos:line="1263" pos:column="106">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1263" pos:column="122">&amp;</type:modifier></type> <name pos:line="1263" pos:column="124">fileNames</name></decl></param>, <param><decl><type><name pos:line="1263" pos:column="135">bool</name></type> <name pos:line="1263" pos:column="140">isRecursive</name></decl></param>, <param><decl><type><name pos:line="1263" pos:column="153">bool</name></type> <name pos:line="1263" pos:column="158">isInHiddenDir</name></decl></param>)</parameter_list>
<block pos:line="1264" pos:column="1">{
	<function_decl><type><name pos:line="1265" pos:column="9">generic_string</name></type> <name pos:line="1265" pos:column="24">dirFilter</name><parameter_list pos:line="1265" pos:column="33">(<param><decl><type><name pos:line="1265" pos:column="34">dir</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><name pos:line="1266" pos:column="9">dirFilter</name> <op:operator pos:line="1266" pos:column="19">+=</op:operator> <call><name pos:line="1266" pos:column="22">TEXT</name><argument_list pos:line="1266" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="1266" pos:column="27">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1267" pos:column="9">WIN32_FIND_DATA</name></type> <name pos:line="1267" pos:column="25">foundData</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1269" pos:column="9">HANDLE</name></type> <name pos:line="1269" pos:column="16">hFile</name> <init pos:line="1269" pos:column="22">= <expr><call><name><op:operator pos:line="1269" pos:column="24">::</op:operator><name pos:line="1269" pos:column="26">FindFirstFile</name></name><argument_list pos:line="1269" pos:column="39">(<argument><expr><call><name><name pos:line="1269" pos:column="40">dirFilter</name><op:operator pos:line="1269" pos:column="49">.</op:operator><name pos:line="1269" pos:column="50">c_str</name></name><argument_list pos:line="1269" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1269" pos:column="59">&amp;</op:operator><name pos:line="1269" pos:column="60">foundData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="1271" pos:column="9">if <condition pos:line="1271" pos:column="12">(<expr><name pos:line="1271" pos:column="13">hFile</name> <op:operator pos:line="1271" pos:column="19">!=</op:operator> <name pos:line="1271" pos:column="22">INVALID_HANDLE_VALUE</name></expr>)</condition><then pos:line="1271" pos:column="43">
	<block pos:line="1272" pos:column="9">{

		<if pos:line="1274" pos:column="17">if <condition pos:line="1274" pos:column="20">(<expr><name><name pos:line="1274" pos:column="21">foundData</name><op:operator pos:line="1274" pos:column="30">.</op:operator><name pos:line="1274" pos:column="31">dwFileAttributes</name></name> <op:operator pos:line="1274" pos:column="48">&amp;</op:operator> <name pos:line="1274" pos:column="50">FILE_ATTRIBUTE_DIRECTORY</name></expr>)</condition><then pos:line="1274" pos:column="75">
		<block pos:line="1275" pos:column="17">{
			<if pos:line="1276" pos:column="25">if <condition pos:line="1276" pos:column="28">(<expr><op:operator pos:line="1276" pos:column="29">!</op:operator><name pos:line="1276" pos:column="30">isInHiddenDir</name> <op:operator pos:line="1276" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="1276" pos:column="47">(</op:operator><name><name pos:line="1276" pos:column="48">foundData</name><op:operator pos:line="1276" pos:column="57">.</op:operator><name pos:line="1276" pos:column="58">dwFileAttributes</name></name> <op:operator pos:line="1276" pos:column="75">&amp;</op:operator> <name pos:line="1276" pos:column="77">FILE_ATTRIBUTE_HIDDEN</name><op:operator pos:line="1276" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1276" pos:column="100">
			<block pos:line="1277" pos:column="25">{
				<comment type="line" pos:line="1278" pos:column="33">// do nothing</comment>
			}</block></then>
			<else pos:line="1280" pos:column="25">else <if pos:line="1280" pos:column="30">if <condition pos:line="1280" pos:column="33">(<expr><name pos:line="1280" pos:column="34">isRecursive</name></expr>)</condition><then pos:line="1280" pos:column="46">
			<block pos:line="1281" pos:column="25">{
				<if pos:line="1282" pos:column="33">if <condition pos:line="1282" pos:column="36">(<expr><op:operator pos:line="1282" pos:column="37">(</op:operator><call><name pos:line="1282" pos:column="38">lstrcmp</name><argument_list pos:line="1282" pos:column="45">(<argument><expr><name><name pos:line="1282" pos:column="46">foundData</name><op:operator pos:line="1282" pos:column="55">.</op:operator><name pos:line="1282" pos:column="56">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1282" pos:column="67">TEXT</name><argument_list pos:line="1282" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="1282" pos:column="72">"."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1282" pos:column="77">)</op:operator> <op:operator pos:line="1282" pos:column="79">&amp;&amp;</op:operator> <op:operator pos:line="1282" pos:column="82">(</op:operator><call><name pos:line="1282" pos:column="83">lstrcmp</name><argument_list pos:line="1282" pos:column="90">(<argument><expr><name><name pos:line="1282" pos:column="91">foundData</name><op:operator pos:line="1282" pos:column="100">.</op:operator><name pos:line="1282" pos:column="101">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1282" pos:column="112">TEXT</name><argument_list pos:line="1282" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="1282" pos:column="117">".."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1282" pos:column="123">)</op:operator></expr>)</condition><then pos:line="1282" pos:column="125">
				<block pos:line="1283" pos:column="33">{
					<function_decl><type><name pos:line="1284" pos:column="41">generic_string</name></type> <name pos:line="1284" pos:column="56">pathDir</name><parameter_list pos:line="1284" pos:column="63">(<param><decl><type><name pos:line="1284" pos:column="64">dir</name></type></decl></param>)</parameter_list>;</function_decl>
					<expr_stmt><expr><name pos:line="1285" pos:column="41">pathDir</name> <op:operator pos:line="1285" pos:column="49">+=</op:operator> <name><name pos:line="1285" pos:column="52">foundData</name><op:operator pos:line="1285" pos:column="61">.</op:operator><name pos:line="1285" pos:column="62">cFileName</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1286" pos:column="41">pathDir</name> <op:operator pos:line="1286" pos:column="49">+=</op:operator> <call><name pos:line="1286" pos:column="52">TEXT</name><argument_list pos:line="1286" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1286" pos:column="57">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1287" pos:column="41">getMatchedFileNames</name><argument_list pos:line="1287" pos:column="60">(<argument><expr><call><name><name pos:line="1287" pos:column="61">pathDir</name><op:operator pos:line="1287" pos:column="68">.</op:operator><name pos:line="1287" pos:column="69">c_str</name></name><argument_list pos:line="1287" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1287" pos:column="78">patterns</name></expr></argument>, <argument><expr><name pos:line="1287" pos:column="88">fileNames</name></expr></argument>, <argument><expr><name pos:line="1287" pos:column="99">isRecursive</name></expr></argument>, <argument><expr><name pos:line="1287" pos:column="112">isInHiddenDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if></else></if>
		}</block></then>
		<else pos:line="1291" pos:column="17">else
		<block pos:line="1292" pos:column="17">{
			<if pos:line="1293" pos:column="25">if <condition pos:line="1293" pos:column="28">(<expr><call><name pos:line="1293" pos:column="29">matchInList</name><argument_list pos:line="1293" pos:column="40">(<argument><expr><name><name pos:line="1293" pos:column="41">foundData</name><op:operator pos:line="1293" pos:column="50">.</op:operator><name pos:line="1293" pos:column="51">cFileName</name></name></expr></argument>, <argument><expr><name pos:line="1293" pos:column="62">patterns</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1293" pos:column="72">
			<block pos:line="1294" pos:column="25">{
				<function_decl><type><name pos:line="1295" pos:column="33">generic_string</name></type> <name pos:line="1295" pos:column="48">pathFile</name><parameter_list pos:line="1295" pos:column="56">(<param><decl><type><name pos:line="1295" pos:column="57">dir</name></type></decl></param>)</parameter_list>;</function_decl>
				<expr_stmt><expr><name pos:line="1296" pos:column="33">pathFile</name> <op:operator pos:line="1296" pos:column="42">+=</op:operator> <name><name pos:line="1296" pos:column="45">foundData</name><op:operator pos:line="1296" pos:column="54">.</op:operator><name pos:line="1296" pos:column="55">cFileName</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1297" pos:column="33">fileNames</name><op:operator pos:line="1297" pos:column="42">.</op:operator><name pos:line="1297" pos:column="43">push_back</name></name><argument_list pos:line="1297" pos:column="52">(<argument><expr><call><name><name pos:line="1297" pos:column="53">pathFile</name><op:operator pos:line="1297" pos:column="61">.</op:operator><name pos:line="1297" pos:column="62">c_str</name></name><argument_list pos:line="1297" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></then></if>
	<while pos:line="1301" pos:column="9">while <condition pos:line="1301" pos:column="15">(<expr><call><name><op:operator pos:line="1301" pos:column="16">::</op:operator><name pos:line="1301" pos:column="18">FindNextFile</name></name><argument_list pos:line="1301" pos:column="30">(<argument><expr><name pos:line="1301" pos:column="31">hFile</name></expr></argument>, <argument><expr><op:operator pos:line="1301" pos:column="38">&amp;</op:operator><name pos:line="1301" pos:column="39">foundData</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block pos:line="1302" pos:column="9">{
		<if pos:line="1303" pos:column="17">if <condition pos:line="1303" pos:column="20">(<expr><name><name pos:line="1303" pos:column="21">foundData</name><op:operator pos:line="1303" pos:column="30">.</op:operator><name pos:line="1303" pos:column="31">dwFileAttributes</name></name> <op:operator pos:line="1303" pos:column="48">&amp;</op:operator> <name pos:line="1303" pos:column="50">FILE_ATTRIBUTE_DIRECTORY</name></expr>)</condition><then pos:line="1303" pos:column="75">
		<block pos:line="1304" pos:column="17">{
			<if pos:line="1305" pos:column="25">if <condition pos:line="1305" pos:column="28">(<expr><op:operator pos:line="1305" pos:column="29">!</op:operator><name pos:line="1305" pos:column="30">isInHiddenDir</name> <op:operator pos:line="1305" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="1305" pos:column="47">(</op:operator><name><name pos:line="1305" pos:column="48">foundData</name><op:operator pos:line="1305" pos:column="57">.</op:operator><name pos:line="1305" pos:column="58">dwFileAttributes</name></name> <op:operator pos:line="1305" pos:column="75">&amp;</op:operator> <name pos:line="1305" pos:column="77">FILE_ATTRIBUTE_HIDDEN</name><op:operator pos:line="1305" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1305" pos:column="100">
			<block pos:line="1306" pos:column="25">{
				<comment type="line" pos:line="1307" pos:column="33">// do nothing</comment>
			}</block></then>
			<else pos:line="1309" pos:column="25">else <if pos:line="1309" pos:column="30">if <condition pos:line="1309" pos:column="33">(<expr><name pos:line="1309" pos:column="34">isRecursive</name></expr>)</condition><then pos:line="1309" pos:column="46">
			<block pos:line="1310" pos:column="25">{
				<if pos:line="1311" pos:column="33">if <condition pos:line="1311" pos:column="36">(<expr><op:operator pos:line="1311" pos:column="37">(</op:operator><call><name pos:line="1311" pos:column="38">lstrcmp</name><argument_list pos:line="1311" pos:column="45">(<argument><expr><name><name pos:line="1311" pos:column="46">foundData</name><op:operator pos:line="1311" pos:column="55">.</op:operator><name pos:line="1311" pos:column="56">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1311" pos:column="67">TEXT</name><argument_list pos:line="1311" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="1311" pos:column="72">"."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1311" pos:column="77">)</op:operator> <op:operator pos:line="1311" pos:column="79">&amp;&amp;</op:operator> <op:operator pos:line="1311" pos:column="82">(</op:operator><call><name pos:line="1311" pos:column="83">lstrcmp</name><argument_list pos:line="1311" pos:column="90">(<argument><expr><name><name pos:line="1311" pos:column="91">foundData</name><op:operator pos:line="1311" pos:column="100">.</op:operator><name pos:line="1311" pos:column="101">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1311" pos:column="112">TEXT</name><argument_list pos:line="1311" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="1311" pos:column="117">".."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1311" pos:column="123">)</op:operator></expr>)</condition><then pos:line="1311" pos:column="125">
				<block pos:line="1312" pos:column="33">{
					<function_decl><type><name pos:line="1313" pos:column="41">generic_string</name></type> <name pos:line="1313" pos:column="56">pathDir</name><parameter_list pos:line="1313" pos:column="63">(<param><decl><type><name pos:line="1313" pos:column="64">dir</name></type></decl></param>)</parameter_list>;</function_decl>
					<expr_stmt><expr><name pos:line="1314" pos:column="41">pathDir</name> <op:operator pos:line="1314" pos:column="49">+=</op:operator> <name><name pos:line="1314" pos:column="52">foundData</name><op:operator pos:line="1314" pos:column="61">.</op:operator><name pos:line="1314" pos:column="62">cFileName</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1315" pos:column="41">pathDir</name> <op:operator pos:line="1315" pos:column="49">+=</op:operator> <call><name pos:line="1315" pos:column="52">TEXT</name><argument_list pos:line="1315" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1315" pos:column="57">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1316" pos:column="41">getMatchedFileNames</name><argument_list pos:line="1316" pos:column="60">(<argument><expr><call><name><name pos:line="1316" pos:column="61">pathDir</name><op:operator pos:line="1316" pos:column="68">.</op:operator><name pos:line="1316" pos:column="69">c_str</name></name><argument_list pos:line="1316" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1316" pos:column="78">patterns</name></expr></argument>, <argument><expr><name pos:line="1316" pos:column="88">fileNames</name></expr></argument>, <argument><expr><name pos:line="1316" pos:column="99">isRecursive</name></expr></argument>, <argument><expr><name pos:line="1316" pos:column="112">isInHiddenDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if></else></if>
		}</block></then>
		<else pos:line="1320" pos:column="17">else
		<block pos:line="1321" pos:column="17">{
			<if pos:line="1322" pos:column="25">if <condition pos:line="1322" pos:column="28">(<expr><call><name pos:line="1322" pos:column="29">matchInList</name><argument_list pos:line="1322" pos:column="40">(<argument><expr><name><name pos:line="1322" pos:column="41">foundData</name><op:operator pos:line="1322" pos:column="50">.</op:operator><name pos:line="1322" pos:column="51">cFileName</name></name></expr></argument>, <argument><expr><name pos:line="1322" pos:column="62">patterns</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1322" pos:column="72">
			<block pos:line="1323" pos:column="25">{
				<function_decl><type><name pos:line="1324" pos:column="33">generic_string</name></type> <name pos:line="1324" pos:column="48">pathFile</name><parameter_list pos:line="1324" pos:column="56">(<param><decl><type><name pos:line="1324" pos:column="57">dir</name></type></decl></param>)</parameter_list>;</function_decl>
				<expr_stmt><expr><name pos:line="1325" pos:column="33">pathFile</name> <op:operator pos:line="1325" pos:column="42">+=</op:operator> <name><name pos:line="1325" pos:column="45">foundData</name><op:operator pos:line="1325" pos:column="54">.</op:operator><name pos:line="1325" pos:column="55">cFileName</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1326" pos:column="33">fileNames</name><op:operator pos:line="1326" pos:column="42">.</op:operator><name pos:line="1326" pos:column="43">push_back</name></name><argument_list pos:line="1326" pos:column="52">(<argument><expr><call><name><name pos:line="1326" pos:column="53">pathFile</name><op:operator pos:line="1326" pos:column="61">.</op:operator><name pos:line="1326" pos:column="62">c_str</name></name><argument_list pos:line="1326" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></while>
	<expr_stmt><expr><call><name><op:operator pos:line="1330" pos:column="9">::</op:operator><name pos:line="1330" pos:column="11">FindClose</name></name><argument_list pos:line="1330" pos:column="20">(<argument><expr><name pos:line="1330" pos:column="21">hFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1333" pos:column="1">DWORD</name> <name pos:line="1333" pos:column="7">WINAPI</name></type> <name pos:line="1333" pos:column="14">AsyncCancelFindInFiles</name><parameter_list pos:line="1333" pos:column="36">(<param><decl><type><name pos:line="1333" pos:column="37">LPVOID</name></type> <name pos:line="1333" pos:column="44">NppHWND</name></decl></param>)</parameter_list>
<block pos:line="1334" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="1335" pos:column="9">MessageBox</name><argument_list pos:line="1335" pos:column="19">(<argument><expr><op:operator pos:line="1335" pos:column="20">(</op:operator><name pos:line="1335" pos:column="21">HWND</name><op:operator pos:line="1335" pos:column="25">)</op:operator> <name pos:line="1335" pos:column="27">NULL</name></expr></argument>, <argument><expr><call><name pos:line="1335" pos:column="33">TEXT</name><argument_list pos:line="1335" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1335" pos:column="38">"Searching...\nPress Enter to Cancel"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1335" pos:column="78">TEXT</name><argument_list pos:line="1335" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="1335" pos:column="83">"Find In Files"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1335" pos:column="101">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1336" pos:column="9">PostMessage</name><argument_list pos:line="1336" pos:column="20">(<argument><expr><op:operator pos:line="1336" pos:column="21">(</op:operator><name pos:line="1336" pos:column="22">HWND</name><op:operator pos:line="1336" pos:column="26">)</op:operator> <name pos:line="1336" pos:column="28">NppHWND</name></expr></argument>, <argument><expr><name pos:line="1336" pos:column="37">NPPM_INTERNAL_CANCEL_FIND_IN_FILES</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1336" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1336" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1337" pos:column="9">return <expr><lit:literal type="number" pos:line="1337" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1340" pos:column="1">bool</name></type> <name><name pos:line="1340" pos:column="6">Notepad_plus</name><op:operator pos:line="1340" pos:column="18">::</op:operator><name pos:line="1340" pos:column="20">replaceInFiles</name></name><parameter_list pos:line="1340" pos:column="34">()</parameter_list>
<block pos:line="1341" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1342" pos:column="9">const</specifier> <name pos:line="1342" pos:column="15">TCHAR</name> <type:modifier pos:line="1342" pos:column="21">*</type:modifier></type><name pos:line="1342" pos:column="22">dir2Search</name> <init pos:line="1342" pos:column="33">= <expr><call><name><name pos:line="1342" pos:column="35">_findReplaceDlg</name><op:operator pos:line="1342" pos:column="50">.</op:operator><name pos:line="1342" pos:column="51">getDir2Search</name></name><argument_list pos:line="1342" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1343" pos:column="9">if <condition pos:line="1343" pos:column="12">(<expr><op:operator pos:line="1343" pos:column="13">!</op:operator><name><name pos:line="1343" pos:column="14">dir2Search</name><index pos:line="1343" pos:column="24">[<expr><lit:literal type="number" pos:line="1343" pos:column="25">0</lit:literal></expr>]</index></name> <op:operator pos:line="1343" pos:column="28">||</op:operator> <op:operator pos:line="1343" pos:column="31">!</op:operator><call><name><op:operator pos:line="1343" pos:column="32">::</op:operator><name pos:line="1343" pos:column="34">PathFileExists</name></name><argument_list pos:line="1343" pos:column="48">(<argument><expr><name pos:line="1343" pos:column="49">dir2Search</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1343" pos:column="61">
	<block pos:line="1344" pos:column="9">{
		<return pos:line="1345" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1345" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1348" pos:column="9">bool</name></type> <name pos:line="1348" pos:column="14">isRecursive</name> <init pos:line="1348" pos:column="26">= <expr><call><name><name pos:line="1348" pos:column="28">_findReplaceDlg</name><op:operator pos:line="1348" pos:column="43">.</op:operator><name pos:line="1348" pos:column="44">isRecursive</name></name><argument_list pos:line="1348" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1349" pos:column="9">bool</name></type> <name pos:line="1349" pos:column="14">isInHiddenDir</name> <init pos:line="1349" pos:column="28">= <expr><call><name><name pos:line="1349" pos:column="30">_findReplaceDlg</name><op:operator pos:line="1349" pos:column="45">.</op:operator><name pos:line="1349" pos:column="46">isInHiddenDir</name></name><argument_list pos:line="1349" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1350" pos:column="9">int</name></type> <name pos:line="1350" pos:column="13">nbTotal</name> <init pos:line="1350" pos:column="21">= <expr><lit:literal type="number" pos:line="1350" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1352" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="1352" pos:column="27">*</type:modifier></type><name pos:line="1352" pos:column="28">pOldView</name> <init pos:line="1352" pos:column="37">= <expr><name pos:line="1352" pos:column="39">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1353" pos:column="9">_pEditView</name> <op:operator pos:line="1353" pos:column="20">=</op:operator> <op:operator pos:line="1353" pos:column="22">&amp;</op:operator><name pos:line="1353" pos:column="23">_invisibleEditView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1354" pos:column="9">Document</name></type> <name pos:line="1354" pos:column="18">oldDoc</name> <init pos:line="1354" pos:column="25">= <expr><call><name><name pos:line="1354" pos:column="27">_invisibleEditView</name><op:operator pos:line="1354" pos:column="45">.</op:operator><name pos:line="1354" pos:column="46">execute</name></name><argument_list pos:line="1354" pos:column="53">(<argument><expr><name pos:line="1354" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1355" pos:column="9">Buffer</name> <type:modifier pos:line="1355" pos:column="16">*</type:modifier></type> <name pos:line="1355" pos:column="18">oldBuf</name> <init pos:line="1355" pos:column="25">= <expr><call><name><name pos:line="1355" pos:column="27">_invisibleEditView</name><op:operator pos:line="1355" pos:column="45">.</op:operator><name pos:line="1355" pos:column="46">getCurrentBuffer</name></name><argument_list pos:line="1355" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="1355" pos:column="73">//for manually setting the buffer, so notifications can be handled properly</comment>
	<decl_stmt><decl><type><name pos:line="1356" pos:column="9">HANDLE</name></type> <name pos:line="1356" pos:column="16">CancelThreadHandle</name> <init pos:line="1356" pos:column="35">= <expr><name pos:line="1356" pos:column="37">NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="1358" pos:column="9">vector</name><argument_list pos:line="1358" pos:column="15">&lt;<argument><expr><name pos:line="1358" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1358" pos:column="32">patterns2Match</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1359" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1359" pos:column="24">.</op:operator><name pos:line="1359" pos:column="25">getPatterns</name></name><argument_list pos:line="1359" pos:column="36">(<argument><expr><name pos:line="1359" pos:column="37">patterns2Match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1360" pos:column="9">if <condition pos:line="1360" pos:column="12">(<expr><call><name><name pos:line="1360" pos:column="13">patterns2Match</name><op:operator pos:line="1360" pos:column="27">.</op:operator><name pos:line="1360" pos:column="28">size</name></name><argument_list pos:line="1360" pos:column="32">()</argument_list></call> <op:operator pos:line="1360" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="1360" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="1360" pos:column="40">
	<block pos:line="1361" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="1362" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1362" pos:column="32">.</op:operator><name pos:line="1362" pos:column="33">setFindInFilesDirFilter</name></name><argument_list pos:line="1362" pos:column="56">(<argument><expr><name pos:line="1362" pos:column="57">NULL</name></expr></argument>, <argument><expr><call><name pos:line="1362" pos:column="63">TEXT</name><argument_list pos:line="1362" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="1362" pos:column="68">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1363" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1363" pos:column="32">.</op:operator><name pos:line="1363" pos:column="33">getPatterns</name></name><argument_list pos:line="1363" pos:column="44">(<argument><expr><name pos:line="1363" pos:column="45">patterns2Match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name><name pos:line="1365" pos:column="9">vector</name><argument_list pos:line="1365" pos:column="15">&lt;<argument><expr><name pos:line="1365" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1365" pos:column="32">fileNames</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1367" pos:column="9">getMatchedFileNames</name><argument_list pos:line="1367" pos:column="28">(<argument><expr><name pos:line="1367" pos:column="29">dir2Search</name></expr></argument>, <argument><expr><name pos:line="1367" pos:column="41">patterns2Match</name></expr></argument>, <argument><expr><name pos:line="1367" pos:column="57">fileNames</name></expr></argument>, <argument><expr><name pos:line="1367" pos:column="68">isRecursive</name></expr></argument>, <argument><expr><name pos:line="1367" pos:column="81">isInHiddenDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1369" pos:column="9">if <condition pos:line="1369" pos:column="12">(<expr><call><name><name pos:line="1369" pos:column="13">fileNames</name><op:operator pos:line="1369" pos:column="22">.</op:operator><name pos:line="1369" pos:column="23">size</name></name><argument_list pos:line="1369" pos:column="27">()</argument_list></call> <op:operator pos:line="1369" pos:column="30">&gt;</op:operator> <lit:literal type="number" pos:line="1369" pos:column="32">1</lit:literal></expr>)</condition><then pos:line="1369" pos:column="34">
		<expr_stmt><expr><name pos:line="1370" pos:column="17">CancelThreadHandle</name> <op:operator pos:line="1370" pos:column="36">=</op:operator> <call><name><op:operator pos:line="1370" pos:column="38">::</op:operator><name pos:line="1370" pos:column="40">CreateThread</name></name><argument_list pos:line="1370" pos:column="52">(<argument><expr><name pos:line="1370" pos:column="53">NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1370" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1370" pos:column="62">AsyncCancelFindInFiles</name></expr></argument>, <argument><expr><call><name><name pos:line="1370" pos:column="86">_pPublicInterface</name><op:operator pos:line="1370" pos:column="103">-&gt;</op:operator><name pos:line="1370" pos:column="105">getHSelf</name></name><argument_list pos:line="1370" pos:column="113">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1370" pos:column="117">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1370" pos:column="120">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="1372" pos:column="9">bool</name></type> <name pos:line="1372" pos:column="14">dontClose</name> <init pos:line="1372" pos:column="24">= <expr><lit:literal type="boolean" pos:line="1372" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="1373" pos:column="9">for (<init><decl><type><name pos:line="1373" pos:column="14">size_t</name></type> <name pos:line="1373" pos:column="21">i</name> <init pos:line="1373" pos:column="23">= <expr><lit:literal type="number" pos:line="1373" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1373" pos:column="29">i</name> <op:operator pos:line="1373" pos:column="31">&lt;</op:operator> <call><name><name pos:line="1373" pos:column="33">fileNames</name><op:operator pos:line="1373" pos:column="42">.</op:operator><name pos:line="1373" pos:column="43">size</name></name><argument_list pos:line="1373" pos:column="47">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1373" pos:column="52">i</name><op:operator pos:line="1373" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="1374" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1375" pos:column="17">MSG</name></type> <name pos:line="1375" pos:column="21">msg</name></decl>;</decl_stmt>
		<if pos:line="1376" pos:column="17">if <condition pos:line="1376" pos:column="20">(<expr><call><name pos:line="1376" pos:column="21">PeekMessage</name><argument_list pos:line="1376" pos:column="32">(<argument><expr><op:operator pos:line="1376" pos:column="33">&amp;</op:operator><name pos:line="1376" pos:column="34">msg</name></expr></argument>, <argument><expr><call><name><name pos:line="1376" pos:column="39">_pPublicInterface</name><op:operator pos:line="1376" pos:column="56">-&gt;</op:operator><name pos:line="1376" pos:column="58">getHSelf</name></name><argument_list pos:line="1376" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1376" pos:column="70">NPPM_INTERNAL_CANCEL_FIND_IN_FILES</name></expr></argument>, <argument><expr><name pos:line="1376" pos:column="106">NPPM_INTERNAL_CANCEL_FIND_IN_FILES</name></expr></argument>, <argument><expr><name pos:line="1376" pos:column="142">PM_REMOVE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1376" pos:column="153"> <break pos:line="1376" pos:column="154">break;</break></then></if>

		<decl_stmt><decl><type><name pos:line="1378" pos:column="17">BufferID</name></type> <name pos:line="1378" pos:column="26">id</name> <init pos:line="1378" pos:column="29">= <expr><call><name><name pos:line="1378" pos:column="31">MainFileManager</name><op:operator pos:line="1378" pos:column="46">-&gt;</op:operator><name pos:line="1378" pos:column="48">getBufferFromName</name></name><argument_list pos:line="1378" pos:column="65">(<argument><expr><call><name><name pos:line="1378" pos:column="66">fileNames</name><op:operator pos:line="1378" pos:column="75">.</op:operator><name pos:line="1378" pos:column="76">at</name></name><argument_list pos:line="1378" pos:column="78">(<argument><expr><name pos:line="1378" pos:column="79">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1378" pos:column="81">.</op:operator><call><name pos:line="1378" pos:column="82">c_str</name><argument_list pos:line="1378" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1379" pos:column="17">if <condition pos:line="1379" pos:column="20">(<expr><name pos:line="1379" pos:column="21">id</name> <op:operator pos:line="1379" pos:column="24">!=</op:operator> <name pos:line="1379" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="1379" pos:column="42">
		<block pos:line="1380" pos:column="17">{
			<expr_stmt><expr><name pos:line="1381" pos:column="25">dontClose</name> <op:operator pos:line="1381" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="1381" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1383" pos:column="17">else
		<block pos:line="1384" pos:column="17">{
			<expr_stmt><expr><name pos:line="1385" pos:column="25">id</name> <op:operator pos:line="1385" pos:column="28">=</op:operator> <call><name><name pos:line="1385" pos:column="30">MainFileManager</name><op:operator pos:line="1385" pos:column="45">-&gt;</op:operator><name pos:line="1385" pos:column="47">loadFile</name></name><argument_list pos:line="1385" pos:column="55">(<argument><expr><call><name><name pos:line="1385" pos:column="56">fileNames</name><op:operator pos:line="1385" pos:column="65">.</op:operator><name pos:line="1385" pos:column="66">at</name></name><argument_list pos:line="1385" pos:column="68">(<argument><expr><name pos:line="1385" pos:column="69">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1385" pos:column="71">.</op:operator><call><name pos:line="1385" pos:column="72">c_str</name><argument_list pos:line="1385" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1386" pos:column="25">dontClose</name> <op:operator pos:line="1386" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="1386" pos:column="37">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>

		<if pos:line="1389" pos:column="17">if <condition pos:line="1389" pos:column="20">(<expr><name pos:line="1389" pos:column="21">id</name> <op:operator pos:line="1389" pos:column="24">!=</op:operator> <name pos:line="1389" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="1389" pos:column="42">
		<block pos:line="1390" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1391" pos:column="25">Buffer</name> <type:modifier pos:line="1391" pos:column="32">*</type:modifier></type> <name pos:line="1391" pos:column="34">pBuf</name> <init pos:line="1391" pos:column="39">= <expr><call><name><name pos:line="1391" pos:column="41">MainFileManager</name><op:operator pos:line="1391" pos:column="56">-&gt;</op:operator><name pos:line="1391" pos:column="58">getBufferByID</name></name><argument_list pos:line="1391" pos:column="71">(<argument><expr><name pos:line="1391" pos:column="72">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1392" pos:column="25">_invisibleEditView</name><op:operator pos:line="1392" pos:column="43">.</op:operator><name pos:line="1392" pos:column="44">execute</name></name><argument_list pos:line="1392" pos:column="51">(<argument><expr><name pos:line="1392" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1392" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1392" pos:column="74">pBuf</name><op:operator pos:line="1392" pos:column="78">-&gt;</op:operator><name pos:line="1392" pos:column="80">getDocument</name></name><argument_list pos:line="1392" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1393" pos:column="25">int</name></type> <name pos:line="1393" pos:column="29">cp</name> <init pos:line="1393" pos:column="32">= <expr><call><name><name pos:line="1393" pos:column="34">_invisibleEditView</name><op:operator pos:line="1393" pos:column="52">.</op:operator><name pos:line="1393" pos:column="53">execute</name></name><argument_list pos:line="1393" pos:column="60">(<argument><expr><name pos:line="1393" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1394" pos:column="25">_invisibleEditView</name><op:operator pos:line="1394" pos:column="43">.</op:operator><name pos:line="1394" pos:column="44">execute</name></name><argument_list pos:line="1394" pos:column="51">(<argument><expr><name pos:line="1394" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1394" pos:column="69">pBuf</name><op:operator pos:line="1394" pos:column="73">-&gt;</op:operator><name pos:line="1394" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="1394" pos:column="89">()</argument_list></call> <op:operator pos:line="1394" pos:column="92">==</op:operator> <name pos:line="1394" pos:column="95">uni8Bit</name> <op:operator pos:line="1394" pos:column="103">?</op:operator> <name pos:line="1394" pos:column="105">cp</name> <op:operator pos:line="1394" pos:column="108">:</op:operator> <name pos:line="1394" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1395" pos:column="25">_invisibleEditView</name><op:operator pos:line="1395" pos:column="43">.</op:operator><name pos:line="1395" pos:column="44">setCurrentBuffer</name></name><argument_list pos:line="1395" pos:column="60">(<argument><expr><name pos:line="1395" pos:column="61">pBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="1397" pos:column="25">int</name></type> <name pos:line="1397" pos:column="29">nbReplaced</name> <init pos:line="1397" pos:column="40">= <expr><call><name><name pos:line="1397" pos:column="42">_findReplaceDlg</name><op:operator pos:line="1397" pos:column="57">.</op:operator><name pos:line="1397" pos:column="58">processAll</name></name><argument_list pos:line="1397" pos:column="68">(<argument><expr><name pos:line="1397" pos:column="69">ProcessReplaceAll</name></expr></argument>, <argument><expr><name><name pos:line="1397" pos:column="88">FindReplaceDlg</name><op:operator pos:line="1397" pos:column="102">::</op:operator><name pos:line="1397" pos:column="104">_env</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1397" pos:column="110">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1397" pos:column="116">fileNames</name><op:operator pos:line="1397" pos:column="125">.</op:operator><name pos:line="1397" pos:column="126">at</name></name><argument_list pos:line="1397" pos:column="128">(<argument><expr><name pos:line="1397" pos:column="129">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1397" pos:column="131">.</op:operator><call><name pos:line="1397" pos:column="132">c_str</name><argument_list pos:line="1397" pos:column="137">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1398" pos:column="25">nbTotal</name> <op:operator pos:line="1398" pos:column="33">+=</op:operator> <name pos:line="1398" pos:column="36">nbReplaced</name></expr>;</expr_stmt>
			<if pos:line="1399" pos:column="25">if <condition pos:line="1399" pos:column="28">(<expr><name pos:line="1399" pos:column="29">nbReplaced</name></expr>)</condition><then pos:line="1399" pos:column="40">
			<block pos:line="1400" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1401" pos:column="33">MainFileManager</name><op:operator pos:line="1401" pos:column="48">-&gt;</op:operator><name pos:line="1401" pos:column="50">saveBuffer</name></name><argument_list pos:line="1401" pos:column="60">(<argument><expr><name pos:line="1401" pos:column="61">id</name></expr></argument>, <argument><expr><call><name><name pos:line="1401" pos:column="65">pBuf</name><op:operator pos:line="1401" pos:column="69">-&gt;</op:operator><name pos:line="1401" pos:column="71">getFullPathName</name></name><argument_list pos:line="1401" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<if pos:line="1404" pos:column="25">if <condition pos:line="1404" pos:column="28">(<expr><op:operator pos:line="1404" pos:column="29">!</op:operator><name pos:line="1404" pos:column="30">dontClose</name></expr>)</condition><then pos:line="1404" pos:column="40">
				<expr_stmt><expr><call><name><name pos:line="1405" pos:column="33">MainFileManager</name><op:operator pos:line="1405" pos:column="48">-&gt;</op:operator><name pos:line="1405" pos:column="50">closeBuffer</name></name><argument_list pos:line="1405" pos:column="61">(<argument><expr><name pos:line="1405" pos:column="62">id</name></expr></argument>, <argument><expr><name pos:line="1405" pos:column="66">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></for>

	<if pos:line="1409" pos:column="9">if <condition pos:line="1409" pos:column="12">(<expr><name pos:line="1409" pos:column="13">CancelThreadHandle</name></expr>)</condition><then pos:line="1409" pos:column="32">
		<expr_stmt><expr><call><name pos:line="1410" pos:column="17">TerminateThread</name><argument_list pos:line="1410" pos:column="32">(<argument><expr><name pos:line="1410" pos:column="33">CancelThreadHandle</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1410" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><name pos:line="1412" pos:column="9">_invisibleEditView</name><op:operator pos:line="1412" pos:column="27">.</op:operator><name pos:line="1412" pos:column="28">execute</name></name><argument_list pos:line="1412" pos:column="35">(<argument><expr><name pos:line="1412" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1412" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1412" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1413" pos:column="9">_invisibleEditView</name><op:operator pos:line="1413" pos:column="27">.</op:operator><name pos:line="1413" pos:column="28">setCurrentBuffer</name></name><argument_list pos:line="1413" pos:column="44">(<argument><expr><name pos:line="1413" pos:column="45">oldBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1414" pos:column="9">_pEditView</name> <op:operator pos:line="1414" pos:column="20">=</op:operator> <name pos:line="1414" pos:column="22">pOldView</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1416" pos:column="9">TCHAR</name></type> <name><name pos:line="1416" pos:column="15">msg</name><index pos:line="1416" pos:column="18">[<expr><lit:literal type="number" pos:line="1416" pos:column="19">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1417" pos:column="9">wsprintf</name><argument_list pos:line="1417" pos:column="17">(<argument><expr><name pos:line="1417" pos:column="18">msg</name></expr></argument>, <argument><expr><call><name pos:line="1417" pos:column="23">TEXT</name><argument_list pos:line="1417" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="1417" pos:column="28">"%d occurences replaced"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1417" pos:column="55">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1418" pos:column="9">printStr</name><argument_list pos:line="1418" pos:column="17">(<argument><expr><name pos:line="1418" pos:column="18">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="1420" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1420" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1423" pos:column="1">bool</name></type> <name><name pos:line="1423" pos:column="6">Notepad_plus</name><op:operator pos:line="1423" pos:column="18">::</op:operator><name pos:line="1423" pos:column="20">findInFiles</name></name><parameter_list pos:line="1423" pos:column="31">()</parameter_list>
<block pos:line="1424" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1425" pos:column="9">const</specifier> <name pos:line="1425" pos:column="15">TCHAR</name> <type:modifier pos:line="1425" pos:column="21">*</type:modifier></type><name pos:line="1425" pos:column="22">dir2Search</name> <init pos:line="1425" pos:column="33">= <expr><call><name><name pos:line="1425" pos:column="35">_findReplaceDlg</name><op:operator pos:line="1425" pos:column="50">.</op:operator><name pos:line="1425" pos:column="51">getDir2Search</name></name><argument_list pos:line="1425" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="1427" pos:column="9">if <condition pos:line="1427" pos:column="12">(<expr><op:operator pos:line="1427" pos:column="13">!</op:operator><name><name pos:line="1427" pos:column="14">dir2Search</name><index pos:line="1427" pos:column="24">[<expr><lit:literal type="number" pos:line="1427" pos:column="25">0</lit:literal></expr>]</index></name> <op:operator pos:line="1427" pos:column="28">||</op:operator> <op:operator pos:line="1427" pos:column="31">!</op:operator><call><name><op:operator pos:line="1427" pos:column="32">::</op:operator><name pos:line="1427" pos:column="34">PathFileExists</name></name><argument_list pos:line="1427" pos:column="48">(<argument><expr><name pos:line="1427" pos:column="49">dir2Search</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1427" pos:column="61">
	<block pos:line="1428" pos:column="9">{
		<return pos:line="1429" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1429" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1432" pos:column="9">bool</name></type> <name pos:line="1432" pos:column="14">isRecursive</name> <init pos:line="1432" pos:column="26">= <expr><call><name><name pos:line="1432" pos:column="28">_findReplaceDlg</name><op:operator pos:line="1432" pos:column="43">.</op:operator><name pos:line="1432" pos:column="44">isRecursive</name></name><argument_list pos:line="1432" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1433" pos:column="9">bool</name></type> <name pos:line="1433" pos:column="14">isInHiddenDir</name> <init pos:line="1433" pos:column="28">= <expr><call><name><name pos:line="1433" pos:column="30">_findReplaceDlg</name><op:operator pos:line="1433" pos:column="45">.</op:operator><name pos:line="1433" pos:column="46">isInHiddenDir</name></name><argument_list pos:line="1433" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1434" pos:column="9">int</name></type> <name pos:line="1434" pos:column="13">nbTotal</name> <init pos:line="1434" pos:column="21">= <expr><lit:literal type="number" pos:line="1434" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1435" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="1435" pos:column="27">*</type:modifier></type><name pos:line="1435" pos:column="28">pOldView</name> <init pos:line="1435" pos:column="37">= <expr><name pos:line="1435" pos:column="39">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1436" pos:column="9">_pEditView</name> <op:operator pos:line="1436" pos:column="20">=</op:operator> <op:operator pos:line="1436" pos:column="22">&amp;</op:operator><name pos:line="1436" pos:column="23">_invisibleEditView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1437" pos:column="9">Document</name></type> <name pos:line="1437" pos:column="18">oldDoc</name> <init pos:line="1437" pos:column="25">= <expr><call><name><name pos:line="1437" pos:column="27">_invisibleEditView</name><op:operator pos:line="1437" pos:column="45">.</op:operator><name pos:line="1437" pos:column="46">execute</name></name><argument_list pos:line="1437" pos:column="53">(<argument><expr><name pos:line="1437" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1438" pos:column="9">HANDLE</name></type> <name pos:line="1438" pos:column="16">CancelThreadHandle</name> <init pos:line="1438" pos:column="35">= <expr><name pos:line="1438" pos:column="37">NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="1440" pos:column="9">vector</name><argument_list pos:line="1440" pos:column="15">&lt;<argument><expr><name pos:line="1440" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1440" pos:column="32">patterns2Match</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1441" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1441" pos:column="24">.</op:operator><name pos:line="1441" pos:column="25">getPatterns</name></name><argument_list pos:line="1441" pos:column="36">(<argument><expr><name pos:line="1441" pos:column="37">patterns2Match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1442" pos:column="9">if <condition pos:line="1442" pos:column="12">(<expr><call><name><name pos:line="1442" pos:column="13">patterns2Match</name><op:operator pos:line="1442" pos:column="27">.</op:operator><name pos:line="1442" pos:column="28">size</name></name><argument_list pos:line="1442" pos:column="32">()</argument_list></call> <op:operator pos:line="1442" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="1442" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="1442" pos:column="40">
	<block pos:line="1443" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="1444" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1444" pos:column="32">.</op:operator><name pos:line="1444" pos:column="33">setFindInFilesDirFilter</name></name><argument_list pos:line="1444" pos:column="56">(<argument><expr><name pos:line="1444" pos:column="57">NULL</name></expr></argument>, <argument><expr><call><name pos:line="1444" pos:column="63">TEXT</name><argument_list pos:line="1444" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="1444" pos:column="68">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1445" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1445" pos:column="32">.</op:operator><name pos:line="1445" pos:column="33">getPatterns</name></name><argument_list pos:line="1445" pos:column="44">(<argument><expr><name pos:line="1445" pos:column="45">patterns2Match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name><name pos:line="1447" pos:column="9">vector</name><argument_list pos:line="1447" pos:column="15">&lt;<argument><expr><name pos:line="1447" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1447" pos:column="32">fileNames</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1448" pos:column="9">getMatchedFileNames</name><argument_list pos:line="1448" pos:column="28">(<argument><expr><name pos:line="1448" pos:column="29">dir2Search</name></expr></argument>, <argument><expr><name pos:line="1448" pos:column="41">patterns2Match</name></expr></argument>, <argument><expr><name pos:line="1448" pos:column="57">fileNames</name></expr></argument>, <argument><expr><name pos:line="1448" pos:column="68">isRecursive</name></expr></argument>, <argument><expr><name pos:line="1448" pos:column="81">isInHiddenDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1450" pos:column="9">if <condition pos:line="1450" pos:column="12">(<expr><call><name><name pos:line="1450" pos:column="13">fileNames</name><op:operator pos:line="1450" pos:column="22">.</op:operator><name pos:line="1450" pos:column="23">size</name></name><argument_list pos:line="1450" pos:column="27">()</argument_list></call> <op:operator pos:line="1450" pos:column="30">&gt;</op:operator> <lit:literal type="number" pos:line="1450" pos:column="32">1</lit:literal></expr>)</condition><then pos:line="1450" pos:column="34">
		<expr_stmt><expr><name pos:line="1451" pos:column="17">CancelThreadHandle</name> <op:operator pos:line="1451" pos:column="36">=</op:operator> <call><name><op:operator pos:line="1451" pos:column="38">::</op:operator><name pos:line="1451" pos:column="40">CreateThread</name></name><argument_list pos:line="1451" pos:column="52">(<argument><expr><name pos:line="1451" pos:column="53">NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1451" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1451" pos:column="62">AsyncCancelFindInFiles</name></expr></argument>, <argument><expr><call><name><name pos:line="1451" pos:column="86">_pPublicInterface</name><op:operator pos:line="1451" pos:column="103">-&gt;</op:operator><name pos:line="1451" pos:column="105">getHSelf</name></name><argument_list pos:line="1451" pos:column="113">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1451" pos:column="117">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1451" pos:column="120">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><name pos:line="1453" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1453" pos:column="24">.</op:operator><name pos:line="1453" pos:column="25">beginNewFilesSearch</name></name><argument_list pos:line="1453" pos:column="44">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1455" pos:column="9">bool</name></type> <name pos:line="1455" pos:column="14">dontClose</name> <init pos:line="1455" pos:column="24">= <expr><lit:literal type="boolean" pos:line="1455" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="1456" pos:column="9">for (<init><decl><type><name pos:line="1456" pos:column="14">size_t</name></type> <name pos:line="1456" pos:column="21">i</name> <init pos:line="1456" pos:column="23">= <expr><lit:literal type="number" pos:line="1456" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1456" pos:column="29">i</name> <op:operator pos:line="1456" pos:column="31">&lt;</op:operator> <call><name><name pos:line="1456" pos:column="33">fileNames</name><op:operator pos:line="1456" pos:column="42">.</op:operator><name pos:line="1456" pos:column="43">size</name></name><argument_list pos:line="1456" pos:column="47">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1456" pos:column="52">i</name><op:operator pos:line="1456" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="1457" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1458" pos:column="17">MSG</name></type> <name pos:line="1458" pos:column="21">msg</name></decl>;</decl_stmt>
		<if pos:line="1459" pos:column="17">if <condition pos:line="1459" pos:column="20">(<expr><call><name pos:line="1459" pos:column="21">PeekMessage</name><argument_list pos:line="1459" pos:column="32">(<argument><expr><op:operator pos:line="1459" pos:column="33">&amp;</op:operator><name pos:line="1459" pos:column="34">msg</name></expr></argument>, <argument><expr><call><name><name pos:line="1459" pos:column="39">_pPublicInterface</name><op:operator pos:line="1459" pos:column="56">-&gt;</op:operator><name pos:line="1459" pos:column="58">getHSelf</name></name><argument_list pos:line="1459" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1459" pos:column="70">NPPM_INTERNAL_CANCEL_FIND_IN_FILES</name></expr></argument>, <argument><expr><name pos:line="1459" pos:column="106">NPPM_INTERNAL_CANCEL_FIND_IN_FILES</name></expr></argument>, <argument><expr><name pos:line="1459" pos:column="142">PM_REMOVE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1459" pos:column="153"> <break pos:line="1459" pos:column="154">break;</break></then></if>

		<decl_stmt><decl><type><name pos:line="1461" pos:column="17">BufferID</name></type> <name pos:line="1461" pos:column="26">id</name> <init pos:line="1461" pos:column="29">= <expr><call><name><name pos:line="1461" pos:column="31">MainFileManager</name><op:operator pos:line="1461" pos:column="46">-&gt;</op:operator><name pos:line="1461" pos:column="48">getBufferFromName</name></name><argument_list pos:line="1461" pos:column="65">(<argument><expr><call><name><name pos:line="1461" pos:column="66">fileNames</name><op:operator pos:line="1461" pos:column="75">.</op:operator><name pos:line="1461" pos:column="76">at</name></name><argument_list pos:line="1461" pos:column="78">(<argument><expr><name pos:line="1461" pos:column="79">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1461" pos:column="81">.</op:operator><call><name pos:line="1461" pos:column="82">c_str</name><argument_list pos:line="1461" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1462" pos:column="17">if <condition pos:line="1462" pos:column="20">(<expr><name pos:line="1462" pos:column="21">id</name> <op:operator pos:line="1462" pos:column="24">!=</op:operator> <name pos:line="1462" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="1462" pos:column="42">
		<block pos:line="1463" pos:column="17">{
			<expr_stmt><expr><name pos:line="1464" pos:column="25">dontClose</name> <op:operator pos:line="1464" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="1464" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1466" pos:column="17">else
		<block pos:line="1467" pos:column="17">{
			<expr_stmt><expr><name pos:line="1468" pos:column="25">id</name> <op:operator pos:line="1468" pos:column="28">=</op:operator> <call><name><name pos:line="1468" pos:column="30">MainFileManager</name><op:operator pos:line="1468" pos:column="45">-&gt;</op:operator><name pos:line="1468" pos:column="47">loadFile</name></name><argument_list pos:line="1468" pos:column="55">(<argument><expr><call><name><name pos:line="1468" pos:column="56">fileNames</name><op:operator pos:line="1468" pos:column="65">.</op:operator><name pos:line="1468" pos:column="66">at</name></name><argument_list pos:line="1468" pos:column="68">(<argument><expr><name pos:line="1468" pos:column="69">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1468" pos:column="71">.</op:operator><call><name pos:line="1468" pos:column="72">c_str</name><argument_list pos:line="1468" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1469" pos:column="25">dontClose</name> <op:operator pos:line="1469" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="1469" pos:column="37">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>

		<if pos:line="1472" pos:column="17">if <condition pos:line="1472" pos:column="20">(<expr><name pos:line="1472" pos:column="21">id</name> <op:operator pos:line="1472" pos:column="24">!=</op:operator> <name pos:line="1472" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="1472" pos:column="42">
		<block pos:line="1473" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1474" pos:column="25">Buffer</name> <type:modifier pos:line="1474" pos:column="32">*</type:modifier></type> <name pos:line="1474" pos:column="34">pBuf</name> <init pos:line="1474" pos:column="39">= <expr><call><name><name pos:line="1474" pos:column="41">MainFileManager</name><op:operator pos:line="1474" pos:column="56">-&gt;</op:operator><name pos:line="1474" pos:column="58">getBufferByID</name></name><argument_list pos:line="1474" pos:column="71">(<argument><expr><name pos:line="1474" pos:column="72">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1475" pos:column="25">_invisibleEditView</name><op:operator pos:line="1475" pos:column="43">.</op:operator><name pos:line="1475" pos:column="44">execute</name></name><argument_list pos:line="1475" pos:column="51">(<argument><expr><name pos:line="1475" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1475" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1475" pos:column="74">pBuf</name><op:operator pos:line="1475" pos:column="78">-&gt;</op:operator><name pos:line="1475" pos:column="80">getDocument</name></name><argument_list pos:line="1475" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1476" pos:column="25">int</name></type> <name pos:line="1476" pos:column="29">cp</name> <init pos:line="1476" pos:column="32">= <expr><call><name><name pos:line="1476" pos:column="34">_invisibleEditView</name><op:operator pos:line="1476" pos:column="52">.</op:operator><name pos:line="1476" pos:column="53">execute</name></name><argument_list pos:line="1476" pos:column="60">(<argument><expr><name pos:line="1476" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1477" pos:column="25">_invisibleEditView</name><op:operator pos:line="1477" pos:column="43">.</op:operator><name pos:line="1477" pos:column="44">execute</name></name><argument_list pos:line="1477" pos:column="51">(<argument><expr><name pos:line="1477" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1477" pos:column="69">pBuf</name><op:operator pos:line="1477" pos:column="73">-&gt;</op:operator><name pos:line="1477" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="1477" pos:column="89">()</argument_list></call> <op:operator pos:line="1477" pos:column="92">==</op:operator> <name pos:line="1477" pos:column="95">uni8Bit</name> <op:operator pos:line="1477" pos:column="103">?</op:operator> <name pos:line="1477" pos:column="105">cp</name> <op:operator pos:line="1477" pos:column="108">:</op:operator> <name pos:line="1477" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="1479" pos:column="25">nbTotal</name> <op:operator pos:line="1479" pos:column="33">+=</op:operator> <call><name><name pos:line="1479" pos:column="36">_findReplaceDlg</name><op:operator pos:line="1479" pos:column="51">.</op:operator><name pos:line="1479" pos:column="52">processAll</name></name><argument_list pos:line="1479" pos:column="62">(<argument><expr><name pos:line="1479" pos:column="63">ProcessFindAll</name></expr></argument>, <argument><expr><name><name pos:line="1479" pos:column="79">FindReplaceDlg</name><op:operator pos:line="1479" pos:column="93">::</op:operator><name pos:line="1479" pos:column="95">_env</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1479" pos:column="101">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1479" pos:column="107">fileNames</name><op:operator pos:line="1479" pos:column="116">.</op:operator><name pos:line="1479" pos:column="117">at</name></name><argument_list pos:line="1479" pos:column="119">(<argument><expr><name pos:line="1479" pos:column="120">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1479" pos:column="122">.</op:operator><call><name pos:line="1479" pos:column="123">c_str</name><argument_list pos:line="1479" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1480" pos:column="25">if <condition pos:line="1480" pos:column="28">(<expr><op:operator pos:line="1480" pos:column="29">!</op:operator><name pos:line="1480" pos:column="30">dontClose</name></expr>)</condition><then pos:line="1480" pos:column="40">
				<expr_stmt><expr><call><name><name pos:line="1481" pos:column="33">MainFileManager</name><op:operator pos:line="1481" pos:column="48">-&gt;</op:operator><name pos:line="1481" pos:column="50">closeBuffer</name></name><argument_list pos:line="1481" pos:column="61">(<argument><expr><name pos:line="1481" pos:column="62">id</name></expr></argument>, <argument><expr><name pos:line="1481" pos:column="66">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></for>

	<if pos:line="1485" pos:column="9">if <condition pos:line="1485" pos:column="12">(<expr><name pos:line="1485" pos:column="13">CancelThreadHandle</name></expr>)</condition><then pos:line="1485" pos:column="32">
		<expr_stmt><expr><call><name pos:line="1486" pos:column="17">TerminateThread</name><argument_list pos:line="1486" pos:column="32">(<argument><expr><name pos:line="1486" pos:column="33">CancelThreadHandle</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1486" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><name pos:line="1488" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1488" pos:column="24">.</op:operator><name pos:line="1488" pos:column="25">finishFilesSearch</name></name><argument_list pos:line="1488" pos:column="42">(<argument><expr><name pos:line="1488" pos:column="43">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1490" pos:column="9">_invisibleEditView</name><op:operator pos:line="1490" pos:column="27">.</op:operator><name pos:line="1490" pos:column="28">execute</name></name><argument_list pos:line="1490" pos:column="35">(<argument><expr><name pos:line="1490" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1490" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1490" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1491" pos:column="9">_pEditView</name> <op:operator pos:line="1491" pos:column="20">=</op:operator> <name pos:line="1491" pos:column="22">pOldView</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1493" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1493" pos:column="24">.</op:operator><name pos:line="1493" pos:column="25">putFindResult</name></name><argument_list pos:line="1493" pos:column="38">(<argument><expr><name pos:line="1493" pos:column="39">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1495" pos:column="9">FindHistory</name> <type:modifier pos:line="1495" pos:column="21">&amp;</type:modifier></type> <name pos:line="1495" pos:column="23">findHistory</name> <init pos:line="1495" pos:column="35">= <expr><op:operator pos:line="1495" pos:column="37">(</op:operator><call><name><name pos:line="1495" pos:column="38">NppParameters</name><op:operator pos:line="1495" pos:column="51">::</op:operator><name pos:line="1495" pos:column="53">getInstance</name></name><argument_list pos:line="1495" pos:column="64">()</argument_list></call><op:operator pos:line="1495" pos:column="66">)</op:operator><op:operator pos:line="1495" pos:column="67">-&gt;</op:operator><call><name pos:line="1495" pos:column="69">getFindHistory</name><argument_list pos:line="1495" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1496" pos:column="9">if <condition pos:line="1496" pos:column="12">(<expr><name pos:line="1496" pos:column="13">nbTotal</name> <op:operator pos:line="1496" pos:column="21">&amp;&amp;</op:operator> <op:operator pos:line="1496" pos:column="24">!</op:operator><name><name pos:line="1496" pos:column="25">findHistory</name><op:operator pos:line="1496" pos:column="36">.</op:operator><name pos:line="1496" pos:column="37">_isDlgAlwaysVisible</name></name></expr>)</condition><then pos:line="1496" pos:column="57">
		<expr_stmt><expr><call><name><name pos:line="1497" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1497" pos:column="32">.</op:operator><name pos:line="1497" pos:column="33">display</name></name><argument_list pos:line="1497" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="1497" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<return pos:line="1498" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1498" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="1502" pos:column="1">bool</name></type> <name><name pos:line="1502" pos:column="6">Notepad_plus</name><op:operator pos:line="1502" pos:column="18">::</op:operator><name pos:line="1502" pos:column="20">findInOpenedFiles</name></name><parameter_list pos:line="1502" pos:column="37">()</parameter_list>
<block pos:line="1503" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1504" pos:column="9">int</name></type> <name pos:line="1504" pos:column="13">nbTotal</name> <init pos:line="1504" pos:column="21">= <expr><lit:literal type="number" pos:line="1504" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1505" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="1505" pos:column="27">*</type:modifier></type><name pos:line="1505" pos:column="28">pOldView</name> <init pos:line="1505" pos:column="37">= <expr><name pos:line="1505" pos:column="39">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1506" pos:column="9">_pEditView</name> <op:operator pos:line="1506" pos:column="20">=</op:operator> <op:operator pos:line="1506" pos:column="22">&amp;</op:operator><name pos:line="1506" pos:column="23">_invisibleEditView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1507" pos:column="9">Document</name></type> <name pos:line="1507" pos:column="18">oldDoc</name> <init pos:line="1507" pos:column="25">= <expr><call><name><name pos:line="1507" pos:column="27">_invisibleEditView</name><op:operator pos:line="1507" pos:column="45">.</op:operator><name pos:line="1507" pos:column="46">execute</name></name><argument_list pos:line="1507" pos:column="53">(<argument><expr><name pos:line="1507" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1509" pos:column="9">Buffer</name> <type:modifier pos:line="1509" pos:column="16">*</type:modifier></type> <name pos:line="1509" pos:column="18">pBuf</name> <init pos:line="1509" pos:column="23">= <expr><name pos:line="1509" pos:column="25">NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="1511" pos:column="9">const</specifier> <name pos:line="1511" pos:column="15">bool</name></type> <name pos:line="1511" pos:column="20">isEntireDoc</name> <init pos:line="1511" pos:column="32">= <expr><lit:literal type="boolean" pos:line="1511" pos:column="34">true</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1513" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1513" pos:column="24">.</op:operator><name pos:line="1513" pos:column="25">beginNewFilesSearch</name></name><argument_list pos:line="1513" pos:column="44">()</argument_list></call></expr>;</expr_stmt>

    <if pos:line="1515" pos:column="5">if <condition pos:line="1515" pos:column="8">(<expr><name pos:line="1515" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="1515" pos:column="27">&amp;</op:operator> <name pos:line="1515" pos:column="29">WindowMainActive</name></expr>)</condition><then pos:line="1515" pos:column="46">
    <block pos:line="1516" pos:column="5">{
		<for pos:line="1517" pos:column="17">for (<init><decl><type><name pos:line="1517" pos:column="22">int</name></type> <name pos:line="1517" pos:column="26">i</name> <init pos:line="1517" pos:column="28">= <expr><lit:literal type="number" pos:line="1517" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1517" pos:column="34">i</name> <op:operator pos:line="1517" pos:column="36">&lt;</op:operator> <call><name><name pos:line="1517" pos:column="38">_mainDocTab</name><op:operator pos:line="1517" pos:column="49">.</op:operator><name pos:line="1517" pos:column="50">nbItem</name></name><argument_list pos:line="1517" pos:column="56">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1517" pos:column="61">i</name><op:operator pos:line="1517" pos:column="62">++</op:operator></expr></incr>)
	    <block pos:line="1518" pos:column="13">{
			<expr_stmt><expr><name pos:line="1519" pos:column="25">pBuf</name> <op:operator pos:line="1519" pos:column="30">=</op:operator> <call><name><name pos:line="1519" pos:column="32">MainFileManager</name><op:operator pos:line="1519" pos:column="47">-&gt;</op:operator><name pos:line="1519" pos:column="49">getBufferByID</name></name><argument_list pos:line="1519" pos:column="62">(<argument><expr><call><name><name pos:line="1519" pos:column="63">_mainDocTab</name><op:operator pos:line="1519" pos:column="74">.</op:operator><name pos:line="1519" pos:column="75">getBufferByIndex</name></name><argument_list pos:line="1519" pos:column="91">(<argument><expr><name pos:line="1519" pos:column="92">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1520" pos:column="25">_invisibleEditView</name><op:operator pos:line="1520" pos:column="43">.</op:operator><name pos:line="1520" pos:column="44">execute</name></name><argument_list pos:line="1520" pos:column="51">(<argument><expr><name pos:line="1520" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1520" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1520" pos:column="74">pBuf</name><op:operator pos:line="1520" pos:column="78">-&gt;</op:operator><name pos:line="1520" pos:column="80">getDocument</name></name><argument_list pos:line="1520" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1521" pos:column="25">int</name></type> <name pos:line="1521" pos:column="29">cp</name> <init pos:line="1521" pos:column="32">= <expr><call><name><name pos:line="1521" pos:column="34">_invisibleEditView</name><op:operator pos:line="1521" pos:column="52">.</op:operator><name pos:line="1521" pos:column="53">execute</name></name><argument_list pos:line="1521" pos:column="60">(<argument><expr><name pos:line="1521" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1522" pos:column="25">_invisibleEditView</name><op:operator pos:line="1522" pos:column="43">.</op:operator><name pos:line="1522" pos:column="44">execute</name></name><argument_list pos:line="1522" pos:column="51">(<argument><expr><name pos:line="1522" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1522" pos:column="69">pBuf</name><op:operator pos:line="1522" pos:column="73">-&gt;</op:operator><name pos:line="1522" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="1522" pos:column="89">()</argument_list></call> <op:operator pos:line="1522" pos:column="92">==</op:operator> <name pos:line="1522" pos:column="95">uni8Bit</name> <op:operator pos:line="1522" pos:column="103">?</op:operator> <name pos:line="1522" pos:column="105">cp</name> <op:operator pos:line="1522" pos:column="108">:</op:operator> <name pos:line="1522" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1523" pos:column="25">nbTotal</name> <op:operator pos:line="1523" pos:column="33">+=</op:operator> <call><name><name pos:line="1523" pos:column="36">_findReplaceDlg</name><op:operator pos:line="1523" pos:column="51">.</op:operator><name pos:line="1523" pos:column="52">processAll</name></name><argument_list pos:line="1523" pos:column="62">(<argument><expr><name pos:line="1523" pos:column="63">ProcessFindAll</name></expr></argument>, <argument><expr><name><name pos:line="1523" pos:column="79">FindReplaceDlg</name><op:operator pos:line="1523" pos:column="93">::</op:operator><name pos:line="1523" pos:column="95">_env</name></name></expr></argument>, <argument><expr><name pos:line="1523" pos:column="101">isEntireDoc</name></expr></argument>, <argument><expr><call><name><name pos:line="1523" pos:column="114">pBuf</name><op:operator pos:line="1523" pos:column="118">-&gt;</op:operator><name pos:line="1523" pos:column="120">getFullPathName</name></name><argument_list pos:line="1523" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    }</block></for>
    }</block></then></if>

    <if pos:line="1527" pos:column="5">if <condition pos:line="1527" pos:column="8">(<expr><name pos:line="1527" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="1527" pos:column="27">&amp;</op:operator> <name pos:line="1527" pos:column="29">WindowSubActive</name></expr>)</condition><then pos:line="1527" pos:column="45">
    <block pos:line="1528" pos:column="5">{
		<for pos:line="1529" pos:column="17">for (<init><decl><type><name pos:line="1529" pos:column="22">int</name></type> <name pos:line="1529" pos:column="26">i</name> <init pos:line="1529" pos:column="28">= <expr><lit:literal type="number" pos:line="1529" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1529" pos:column="34">i</name> <op:operator pos:line="1529" pos:column="36">&lt;</op:operator> <call><name><name pos:line="1529" pos:column="38">_subDocTab</name><op:operator pos:line="1529" pos:column="48">.</op:operator><name pos:line="1529" pos:column="49">nbItem</name></name><argument_list pos:line="1529" pos:column="55">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1529" pos:column="60">i</name><op:operator pos:line="1529" pos:column="61">++</op:operator></expr></incr>)
	    <block pos:line="1530" pos:column="13">{
			<expr_stmt><expr><name pos:line="1531" pos:column="25">pBuf</name> <op:operator pos:line="1531" pos:column="30">=</op:operator> <call><name><name pos:line="1531" pos:column="32">MainFileManager</name><op:operator pos:line="1531" pos:column="47">-&gt;</op:operator><name pos:line="1531" pos:column="49">getBufferByID</name></name><argument_list pos:line="1531" pos:column="62">(<argument><expr><call><name><name pos:line="1531" pos:column="63">_subDocTab</name><op:operator pos:line="1531" pos:column="73">.</op:operator><name pos:line="1531" pos:column="74">getBufferByIndex</name></name><argument_list pos:line="1531" pos:column="90">(<argument><expr><name pos:line="1531" pos:column="91">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1532" pos:column="25">_invisibleEditView</name><op:operator pos:line="1532" pos:column="43">.</op:operator><name pos:line="1532" pos:column="44">execute</name></name><argument_list pos:line="1532" pos:column="51">(<argument><expr><name pos:line="1532" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1532" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1532" pos:column="74">pBuf</name><op:operator pos:line="1532" pos:column="78">-&gt;</op:operator><name pos:line="1532" pos:column="80">getDocument</name></name><argument_list pos:line="1532" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1533" pos:column="25">int</name></type> <name pos:line="1533" pos:column="29">cp</name> <init pos:line="1533" pos:column="32">= <expr><call><name><name pos:line="1533" pos:column="34">_invisibleEditView</name><op:operator pos:line="1533" pos:column="52">.</op:operator><name pos:line="1533" pos:column="53">execute</name></name><argument_list pos:line="1533" pos:column="60">(<argument><expr><name pos:line="1533" pos:column="61">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1534" pos:column="25">_invisibleEditView</name><op:operator pos:line="1534" pos:column="43">.</op:operator><name pos:line="1534" pos:column="44">execute</name></name><argument_list pos:line="1534" pos:column="51">(<argument><expr><name pos:line="1534" pos:column="52">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1534" pos:column="69">pBuf</name><op:operator pos:line="1534" pos:column="73">-&gt;</op:operator><name pos:line="1534" pos:column="75">getUnicodeMode</name></name><argument_list pos:line="1534" pos:column="89">()</argument_list></call> <op:operator pos:line="1534" pos:column="92">==</op:operator> <name pos:line="1534" pos:column="95">uni8Bit</name> <op:operator pos:line="1534" pos:column="103">?</op:operator> <name pos:line="1534" pos:column="105">cp</name> <op:operator pos:line="1534" pos:column="108">:</op:operator> <name pos:line="1534" pos:column="110">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1535" pos:column="25">nbTotal</name> <op:operator pos:line="1535" pos:column="33">+=</op:operator> <call><name><name pos:line="1535" pos:column="36">_findReplaceDlg</name><op:operator pos:line="1535" pos:column="51">.</op:operator><name pos:line="1535" pos:column="52">processAll</name></name><argument_list pos:line="1535" pos:column="62">(<argument><expr><name pos:line="1535" pos:column="63">ProcessFindAll</name></expr></argument>, <argument><expr><name><name pos:line="1535" pos:column="79">FindReplaceDlg</name><op:operator pos:line="1535" pos:column="93">::</op:operator><name pos:line="1535" pos:column="95">_env</name></name></expr></argument>, <argument><expr><name pos:line="1535" pos:column="101">isEntireDoc</name></expr></argument>, <argument><expr><call><name><name pos:line="1535" pos:column="114">pBuf</name><op:operator pos:line="1535" pos:column="118">-&gt;</op:operator><name pos:line="1535" pos:column="120">getFullPathName</name></name><argument_list pos:line="1535" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    }</block></for>
    }</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="1539" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1539" pos:column="24">.</op:operator><name pos:line="1539" pos:column="25">finishFilesSearch</name></name><argument_list pos:line="1539" pos:column="42">(<argument><expr><name pos:line="1539" pos:column="43">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1541" pos:column="9">_invisibleEditView</name><op:operator pos:line="1541" pos:column="27">.</op:operator><name pos:line="1541" pos:column="28">execute</name></name><argument_list pos:line="1541" pos:column="35">(<argument><expr><name pos:line="1541" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1541" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1541" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1542" pos:column="9">_pEditView</name> <op:operator pos:line="1542" pos:column="20">=</op:operator> <name pos:line="1542" pos:column="22">pOldView</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1544" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1544" pos:column="24">.</op:operator><name pos:line="1544" pos:column="25">putFindResult</name></name><argument_list pos:line="1544" pos:column="38">(<argument><expr><name pos:line="1544" pos:column="39">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1546" pos:column="9">FindHistory</name> <type:modifier pos:line="1546" pos:column="21">&amp;</type:modifier></type> <name pos:line="1546" pos:column="23">findHistory</name> <init pos:line="1546" pos:column="35">= <expr><op:operator pos:line="1546" pos:column="37">(</op:operator><call><name><name pos:line="1546" pos:column="38">NppParameters</name><op:operator pos:line="1546" pos:column="51">::</op:operator><name pos:line="1546" pos:column="53">getInstance</name></name><argument_list pos:line="1546" pos:column="64">()</argument_list></call><op:operator pos:line="1546" pos:column="66">)</op:operator><op:operator pos:line="1546" pos:column="67">-&gt;</op:operator><call><name pos:line="1546" pos:column="69">getFindHistory</name><argument_list pos:line="1546" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1547" pos:column="9">if <condition pos:line="1547" pos:column="12">(<expr><name pos:line="1547" pos:column="13">nbTotal</name> <op:operator pos:line="1547" pos:column="21">&amp;&amp;</op:operator> <op:operator pos:line="1547" pos:column="24">!</op:operator><name><name pos:line="1547" pos:column="25">findHistory</name><op:operator pos:line="1547" pos:column="36">.</op:operator><name pos:line="1547" pos:column="37">_isDlgAlwaysVisible</name></name></expr>)</condition><then pos:line="1547" pos:column="57">
		<expr_stmt><expr><call><name><name pos:line="1548" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1548" pos:column="32">.</op:operator><name pos:line="1548" pos:column="33">display</name></name><argument_list pos:line="1548" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="1548" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<return pos:line="1549" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1549" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="1553" pos:column="1">bool</name></type> <name><name pos:line="1553" pos:column="6">Notepad_plus</name><op:operator pos:line="1553" pos:column="18">::</op:operator><name pos:line="1553" pos:column="20">findInCurrentFile</name></name><parameter_list pos:line="1553" pos:column="37">()</parameter_list>
<block pos:line="1554" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1555" pos:column="9">int</name></type> <name pos:line="1555" pos:column="13">nbTotal</name> <init pos:line="1555" pos:column="21">= <expr><lit:literal type="number" pos:line="1555" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1556" pos:column="9">Buffer</name> <type:modifier pos:line="1556" pos:column="16">*</type:modifier></type> <name pos:line="1556" pos:column="18">pBuf</name> <init pos:line="1556" pos:column="23">= <expr><call><name><name pos:line="1556" pos:column="25">_pEditView</name><op:operator pos:line="1556" pos:column="35">-&gt;</op:operator><name pos:line="1556" pos:column="37">getCurrentBuffer</name></name><argument_list pos:line="1556" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1557" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="1557" pos:column="27">*</type:modifier></type><name pos:line="1557" pos:column="28">pOldView</name> <init pos:line="1557" pos:column="37">= <expr><name pos:line="1557" pos:column="39">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1558" pos:column="9">_pEditView</name> <op:operator pos:line="1558" pos:column="20">=</op:operator> <op:operator pos:line="1558" pos:column="22">&amp;</op:operator><name pos:line="1558" pos:column="23">_invisibleEditView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1559" pos:column="9">Document</name></type> <name pos:line="1559" pos:column="18">oldDoc</name> <init pos:line="1559" pos:column="25">= <expr><call><name><name pos:line="1559" pos:column="27">_invisibleEditView</name><op:operator pos:line="1559" pos:column="45">.</op:operator><name pos:line="1559" pos:column="46">execute</name></name><argument_list pos:line="1559" pos:column="53">(<argument><expr><name pos:line="1559" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="1561" pos:column="9">const</specifier> <name pos:line="1561" pos:column="15">bool</name></type> <name pos:line="1561" pos:column="20">isEntireDoc</name> <init pos:line="1561" pos:column="32">= <expr><lit:literal type="boolean" pos:line="1561" pos:column="34">true</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1563" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1563" pos:column="24">.</op:operator><name pos:line="1563" pos:column="25">beginNewFilesSearch</name></name><argument_list pos:line="1563" pos:column="44">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1565" pos:column="9">_invisibleEditView</name><op:operator pos:line="1565" pos:column="27">.</op:operator><name pos:line="1565" pos:column="28">execute</name></name><argument_list pos:line="1565" pos:column="35">(<argument><expr><name pos:line="1565" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1565" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1565" pos:column="58">pBuf</name><op:operator pos:line="1565" pos:column="62">-&gt;</op:operator><name pos:line="1565" pos:column="64">getDocument</name></name><argument_list pos:line="1565" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1566" pos:column="9">int</name></type> <name pos:line="1566" pos:column="13">cp</name> <init pos:line="1566" pos:column="16">= <expr><call><name><name pos:line="1566" pos:column="18">_invisibleEditView</name><op:operator pos:line="1566" pos:column="36">.</op:operator><name pos:line="1566" pos:column="37">execute</name></name><argument_list pos:line="1566" pos:column="44">(<argument><expr><name pos:line="1566" pos:column="45">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1567" pos:column="9">_invisibleEditView</name><op:operator pos:line="1567" pos:column="27">.</op:operator><name pos:line="1567" pos:column="28">execute</name></name><argument_list pos:line="1567" pos:column="35">(<argument><expr><name pos:line="1567" pos:column="36">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><call><name><name pos:line="1567" pos:column="53">pBuf</name><op:operator pos:line="1567" pos:column="57">-&gt;</op:operator><name pos:line="1567" pos:column="59">getUnicodeMode</name></name><argument_list pos:line="1567" pos:column="73">()</argument_list></call> <op:operator pos:line="1567" pos:column="76">==</op:operator> <name pos:line="1567" pos:column="79">uni8Bit</name> <op:operator pos:line="1567" pos:column="87">?</op:operator> <name pos:line="1567" pos:column="89">cp</name> <op:operator pos:line="1567" pos:column="92">:</op:operator> <name pos:line="1567" pos:column="94">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1568" pos:column="9">nbTotal</name> <op:operator pos:line="1568" pos:column="17">+=</op:operator> <call><name><name pos:line="1568" pos:column="20">_findReplaceDlg</name><op:operator pos:line="1568" pos:column="35">.</op:operator><name pos:line="1568" pos:column="36">processAll</name></name><argument_list pos:line="1568" pos:column="46">(<argument><expr><name pos:line="1568" pos:column="47">ProcessFindAll</name></expr></argument>, <argument><expr><name><name pos:line="1568" pos:column="63">FindReplaceDlg</name><op:operator pos:line="1568" pos:column="77">::</op:operator><name pos:line="1568" pos:column="79">_env</name></name></expr></argument>, <argument><expr><name pos:line="1568" pos:column="85">isEntireDoc</name></expr></argument>, <argument><expr><call><name><name pos:line="1568" pos:column="98">pBuf</name><op:operator pos:line="1568" pos:column="102">-&gt;</op:operator><name pos:line="1568" pos:column="104">getFullPathName</name></name><argument_list pos:line="1568" pos:column="119">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1570" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1570" pos:column="24">.</op:operator><name pos:line="1570" pos:column="25">finishFilesSearch</name></name><argument_list pos:line="1570" pos:column="42">(<argument><expr><name pos:line="1570" pos:column="43">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1572" pos:column="9">_invisibleEditView</name><op:operator pos:line="1572" pos:column="27">.</op:operator><name pos:line="1572" pos:column="28">execute</name></name><argument_list pos:line="1572" pos:column="35">(<argument><expr><name pos:line="1572" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1572" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1572" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1573" pos:column="9">_pEditView</name> <op:operator pos:line="1573" pos:column="20">=</op:operator> <name pos:line="1573" pos:column="22">pOldView</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1575" pos:column="9">_findReplaceDlg</name><op:operator pos:line="1575" pos:column="24">.</op:operator><name pos:line="1575" pos:column="25">putFindResult</name></name><argument_list pos:line="1575" pos:column="38">(<argument><expr><name pos:line="1575" pos:column="39">nbTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1577" pos:column="9">FindHistory</name> <type:modifier pos:line="1577" pos:column="21">&amp;</type:modifier></type> <name pos:line="1577" pos:column="23">findHistory</name> <init pos:line="1577" pos:column="35">= <expr><op:operator pos:line="1577" pos:column="37">(</op:operator><call><name><name pos:line="1577" pos:column="38">NppParameters</name><op:operator pos:line="1577" pos:column="51">::</op:operator><name pos:line="1577" pos:column="53">getInstance</name></name><argument_list pos:line="1577" pos:column="64">()</argument_list></call><op:operator pos:line="1577" pos:column="66">)</op:operator><op:operator pos:line="1577" pos:column="67">-&gt;</op:operator><call><name pos:line="1577" pos:column="69">getFindHistory</name><argument_list pos:line="1577" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1578" pos:column="9">if <condition pos:line="1578" pos:column="12">(<expr><name pos:line="1578" pos:column="13">nbTotal</name> <op:operator pos:line="1578" pos:column="21">&amp;&amp;</op:operator> <op:operator pos:line="1578" pos:column="24">!</op:operator><name><name pos:line="1578" pos:column="25">findHistory</name><op:operator pos:line="1578" pos:column="36">.</op:operator><name pos:line="1578" pos:column="37">_isDlgAlwaysVisible</name></name></expr>)</condition><then pos:line="1578" pos:column="57">
		<expr_stmt><expr><call><name><name pos:line="1579" pos:column="17">_findReplaceDlg</name><op:operator pos:line="1579" pos:column="32">.</op:operator><name pos:line="1579" pos:column="33">display</name></name><argument_list pos:line="1579" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="1579" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<return pos:line="1580" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1580" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1583" pos:column="1">void</name></type> <name><name pos:line="1583" pos:column="6">Notepad_plus</name><op:operator pos:line="1583" pos:column="18">::</op:operator><name pos:line="1583" pos:column="20">filePrint</name></name><parameter_list pos:line="1583" pos:column="29">(<param><decl><type><name pos:line="1583" pos:column="30">bool</name></type> <name pos:line="1583" pos:column="35">showDialog</name></decl></param>)</parameter_list>
<block pos:line="1584" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1585" pos:column="9">Printer</name></type> <name pos:line="1585" pos:column="17">printer</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1587" pos:column="9">int</name></type> <name pos:line="1587" pos:column="13">startPos</name> <init pos:line="1587" pos:column="22">= <expr><call><name pos:line="1587" pos:column="24">int</name><argument_list pos:line="1587" pos:column="27">(<argument><expr><call><name><name pos:line="1587" pos:column="28">_pEditView</name><op:operator pos:line="1587" pos:column="38">-&gt;</op:operator><name pos:line="1587" pos:column="40">execute</name></name><argument_list pos:line="1587" pos:column="47">(<argument><expr><name pos:line="1587" pos:column="48">SCI_GETSELECTIONSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1588" pos:column="9">int</name></type> <name pos:line="1588" pos:column="13">endPos</name> <init pos:line="1588" pos:column="20">= <expr><call><name pos:line="1588" pos:column="22">int</name><argument_list pos:line="1588" pos:column="25">(<argument><expr><call><name><name pos:line="1588" pos:column="26">_pEditView</name><op:operator pos:line="1588" pos:column="36">-&gt;</op:operator><name pos:line="1588" pos:column="38">execute</name></name><argument_list pos:line="1588" pos:column="45">(<argument><expr><name pos:line="1588" pos:column="46">SCI_GETSELECTIONEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1590" pos:column="9">printer</name><op:operator pos:line="1590" pos:column="16">.</op:operator><name pos:line="1590" pos:column="17">init</name></name><argument_list pos:line="1590" pos:column="21">(<argument><expr><call><name><name pos:line="1590" pos:column="22">_pPublicInterface</name><op:operator pos:line="1590" pos:column="39">-&gt;</op:operator><name pos:line="1590" pos:column="41">getHinst</name></name><argument_list pos:line="1590" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1590" pos:column="53">_pPublicInterface</name><op:operator pos:line="1590" pos:column="70">-&gt;</op:operator><name pos:line="1590" pos:column="72">getHSelf</name></name><argument_list pos:line="1590" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1590" pos:column="84">_pEditView</name></expr></argument>, <argument><expr><name pos:line="1590" pos:column="96">showDialog</name></expr></argument>, <argument><expr><name pos:line="1590" pos:column="108">startPos</name></expr></argument>, <argument><expr><name pos:line="1590" pos:column="118">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1591" pos:column="9">printer</name><op:operator pos:line="1591" pos:column="16">.</op:operator><name pos:line="1591" pos:column="17">doPrint</name></name><argument_list pos:line="1591" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1594" pos:column="1">int</name></type> <name><name pos:line="1594" pos:column="5">Notepad_plus</name><op:operator pos:line="1594" pos:column="17">::</op:operator><name pos:line="1594" pos:column="19">doSaveOrNot</name></name><parameter_list pos:line="1594" pos:column="30">(<param><decl><type><specifier pos:line="1594" pos:column="31">const</specifier> <name pos:line="1594" pos:column="37">TCHAR</name> <type:modifier pos:line="1594" pos:column="43">*</type:modifier></type><name pos:line="1594" pos:column="44">fn</name></decl></param>)</parameter_list>
<block pos:line="1595" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1596" pos:column="9">TCHAR</name></type> <name><name pos:line="1596" pos:column="15">pattern</name><index pos:line="1596" pos:column="22">[<expr><lit:literal type="number" pos:line="1596" pos:column="23">64</lit:literal></expr>]</index></name> <init pos:line="1596" pos:column="27">= <expr><call><name pos:line="1596" pos:column="29">TEXT</name><argument_list pos:line="1596" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="1596" pos:column="34">"Save file \"%s\" ?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1597" pos:column="9">TCHAR</name></type> <name><name pos:line="1597" pos:column="15">phrase</name><index pos:line="1597" pos:column="21">[<expr><lit:literal type="number" pos:line="1597" pos:column="22">512</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1598" pos:column="9">wsprintf</name><argument_list pos:line="1598" pos:column="17">(<argument><expr><name pos:line="1598" pos:column="18">phrase</name></expr></argument>, <argument><expr><name pos:line="1598" pos:column="26">pattern</name></expr></argument>, <argument><expr><name pos:line="1598" pos:column="35">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1599" pos:column="9">return <expr><call><name pos:line="1599" pos:column="16">doActionOrNot</name><argument_list pos:line="1599" pos:column="29">(<argument><expr><call><name pos:line="1599" pos:column="30">TEXT</name><argument_list pos:line="1599" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1599" pos:column="35">"Save"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1599" pos:column="44">phrase</name></expr></argument>, <argument><expr><name pos:line="1599" pos:column="52">MB_YESNOCANCEL</name> <op:operator pos:line="1599" pos:column="67">|</op:operator> <name pos:line="1599" pos:column="69">MB_ICONQUESTION</name> <op:operator pos:line="1599" pos:column="85">|</op:operator> <name pos:line="1599" pos:column="87">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1602" pos:column="1">int</name></type> <name><name pos:line="1602" pos:column="5">Notepad_plus</name><op:operator pos:line="1602" pos:column="17">::</op:operator><name pos:line="1602" pos:column="19">doReloadOrNot</name></name><parameter_list pos:line="1602" pos:column="32">(<param><decl><type><specifier pos:line="1602" pos:column="33">const</specifier> <name pos:line="1602" pos:column="39">TCHAR</name> <type:modifier pos:line="1602" pos:column="45">*</type:modifier></type><name pos:line="1602" pos:column="46">fn</name></decl></param>, <param><decl><type><name pos:line="1602" pos:column="50">bool</name></type> <name pos:line="1602" pos:column="55">dirty</name></decl></param>)</parameter_list>
<block pos:line="1603" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1604" pos:column="9">TCHAR</name><type:modifier pos:line="1604" pos:column="14">*</type:modifier></type> <name pos:line="1604" pos:column="16">pattern</name> <init pos:line="1604" pos:column="24">= <expr><call><name pos:line="1604" pos:column="26">TEXT</name><argument_list pos:line="1604" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="1604" pos:column="31">"%s\r\rThis file has been modified by another program.\rDo you want to reload it%s?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1605" pos:column="9">TCHAR</name><type:modifier pos:line="1605" pos:column="14">*</type:modifier></type> <name pos:line="1605" pos:column="16">lose_info_str</name> <init pos:line="1605" pos:column="30">= <expr><name pos:line="1605" pos:column="32">dirty</name> <op:operator pos:line="1605" pos:column="38">?</op:operator> <call><name pos:line="1605" pos:column="40">TEXT</name><argument_list pos:line="1605" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1605" pos:column="45">" and lose the changes made in Notepad++"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1605" pos:column="88">:</op:operator> <call><name pos:line="1605" pos:column="90">TEXT</name><argument_list pos:line="1605" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="1605" pos:column="95">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1606" pos:column="9">TCHAR</name></type> <name><name pos:line="1606" pos:column="15">phrase</name><index pos:line="1606" pos:column="21">[<expr><lit:literal type="number" pos:line="1606" pos:column="22">512</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1607" pos:column="9">wsprintf</name><argument_list pos:line="1607" pos:column="17">(<argument><expr><name pos:line="1607" pos:column="18">phrase</name></expr></argument>, <argument><expr><name pos:line="1607" pos:column="26">pattern</name></expr></argument>, <argument><expr><name pos:line="1607" pos:column="35">fn</name></expr></argument>, <argument><expr><name pos:line="1607" pos:column="39">lose_info_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1608" pos:column="9">int</name></type> <name pos:line="1608" pos:column="13">icon</name> <init pos:line="1608" pos:column="18">= <expr><name pos:line="1608" pos:column="20">dirty</name> <op:operator pos:line="1608" pos:column="26">?</op:operator> <name pos:line="1608" pos:column="28">MB_ICONEXCLAMATION</name> <op:operator pos:line="1608" pos:column="47">:</op:operator> <name pos:line="1608" pos:column="49">MB_ICONQUESTION</name></expr></init></decl>;</decl_stmt>
	<return pos:line="1609" pos:column="9">return <expr><call><name pos:line="1609" pos:column="16">doActionOrNot</name><argument_list pos:line="1609" pos:column="29">(<argument><expr><call><name pos:line="1609" pos:column="30">TEXT</name><argument_list pos:line="1609" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1609" pos:column="35">"Reload"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1609" pos:column="46">phrase</name></expr></argument>, <argument><expr><name pos:line="1609" pos:column="54">MB_YESNO</name> <op:operator pos:line="1609" pos:column="63">|</op:operator> <name pos:line="1609" pos:column="65">MB_APPLMODAL</name> <op:operator pos:line="1609" pos:column="78">|</op:operator> <name pos:line="1609" pos:column="80">icon</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1612" pos:column="1">int</name></type> <name><name pos:line="1612" pos:column="5">Notepad_plus</name><op:operator pos:line="1612" pos:column="17">::</op:operator><name pos:line="1612" pos:column="19">doCloseOrNot</name></name><parameter_list pos:line="1612" pos:column="31">(<param><decl><type><specifier pos:line="1612" pos:column="32">const</specifier> <name pos:line="1612" pos:column="38">TCHAR</name> <type:modifier pos:line="1612" pos:column="44">*</type:modifier></type><name pos:line="1612" pos:column="45">fn</name></decl></param>)</parameter_list>
<block pos:line="1613" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1614" pos:column="9">TCHAR</name></type> <name><name pos:line="1614" pos:column="15">pattern</name><index pos:line="1614" pos:column="22">[<expr><lit:literal type="number" pos:line="1614" pos:column="23">128</lit:literal></expr>]</index></name> <init pos:line="1614" pos:column="28">= <expr><call><name pos:line="1614" pos:column="30">TEXT</name><argument_list pos:line="1614" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1614" pos:column="35">"The file \"%s\" doesn't exist anymore.\rKeep this file in editor?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1615" pos:column="9">TCHAR</name></type> <name><name pos:line="1615" pos:column="15">phrase</name><index pos:line="1615" pos:column="21">[<expr><lit:literal type="number" pos:line="1615" pos:column="22">512</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1616" pos:column="9">wsprintf</name><argument_list pos:line="1616" pos:column="17">(<argument><expr><name pos:line="1616" pos:column="18">phrase</name></expr></argument>, <argument><expr><name pos:line="1616" pos:column="26">pattern</name></expr></argument>, <argument><expr><name pos:line="1616" pos:column="35">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1617" pos:column="9">return <expr><call><name pos:line="1617" pos:column="16">doActionOrNot</name><argument_list pos:line="1617" pos:column="29">(<argument><expr><call><name pos:line="1617" pos:column="30">TEXT</name><argument_list pos:line="1617" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1617" pos:column="35">"Keep non existing file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1617" pos:column="62">phrase</name></expr></argument>, <argument><expr><name pos:line="1617" pos:column="70">MB_YESNO</name> <op:operator pos:line="1617" pos:column="79">|</op:operator> <name pos:line="1617" pos:column="81">MB_ICONQUESTION</name> <op:operator pos:line="1617" pos:column="97">|</op:operator> <name pos:line="1617" pos:column="99">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1620" pos:column="1">int</name></type> <name><name pos:line="1620" pos:column="5">Notepad_plus</name><op:operator pos:line="1620" pos:column="17">::</op:operator><name pos:line="1620" pos:column="19">doDeleteOrNot</name></name><parameter_list pos:line="1620" pos:column="32">(<param><decl><type><specifier pos:line="1620" pos:column="33">const</specifier> <name pos:line="1620" pos:column="39">TCHAR</name> <type:modifier pos:line="1620" pos:column="45">*</type:modifier></type><name pos:line="1620" pos:column="46">fn</name></decl></param>)</parameter_list>
<block pos:line="1621" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1622" pos:column="9">TCHAR</name></type> <name><name pos:line="1622" pos:column="15">pattern</name><index pos:line="1622" pos:column="22">[<expr><lit:literal type="number" pos:line="1622" pos:column="23">128</lit:literal></expr>]</index></name> <init pos:line="1622" pos:column="28">= <expr><call><name pos:line="1622" pos:column="30">TEXT</name><argument_list pos:line="1622" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1622" pos:column="35">"The file \"%s\"\rwill be moved to your Recycle Bin and this document will be closed.\rContinue?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1623" pos:column="9">TCHAR</name></type> <name><name pos:line="1623" pos:column="15">phrase</name><index pos:line="1623" pos:column="21">[<expr><lit:literal type="number" pos:line="1623" pos:column="22">512</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1624" pos:column="9">wsprintf</name><argument_list pos:line="1624" pos:column="17">(<argument><expr><name pos:line="1624" pos:column="18">phrase</name></expr></argument>, <argument><expr><name pos:line="1624" pos:column="26">pattern</name></expr></argument>, <argument><expr><name pos:line="1624" pos:column="35">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1625" pos:column="9">return <expr><call><name pos:line="1625" pos:column="16">doActionOrNot</name><argument_list pos:line="1625" pos:column="29">(<argument><expr><call><name pos:line="1625" pos:column="30">TEXT</name><argument_list pos:line="1625" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1625" pos:column="35">"Delete file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1625" pos:column="51">phrase</name></expr></argument>, <argument><expr><name pos:line="1625" pos:column="59">MB_YESNO</name> <op:operator pos:line="1625" pos:column="68">|</op:operator> <name pos:line="1625" pos:column="70">MB_ICONQUESTION</name> <op:operator pos:line="1625" pos:column="86">|</op:operator> <name pos:line="1625" pos:column="88">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1628" pos:column="1">int</name></type> <name><name pos:line="1628" pos:column="5">Notepad_plus</name><op:operator pos:line="1628" pos:column="17">::</op:operator><name pos:line="1628" pos:column="19">doActionOrNot</name></name><parameter_list pos:line="1628" pos:column="32">(<param><decl><type><specifier pos:line="1628" pos:column="33">const</specifier> <name pos:line="1628" pos:column="39">TCHAR</name> <type:modifier pos:line="1628" pos:column="45">*</type:modifier></type><name pos:line="1628" pos:column="46">title</name></decl></param>, <param><decl><type><specifier pos:line="1628" pos:column="53">const</specifier> <name pos:line="1628" pos:column="59">TCHAR</name> <type:modifier pos:line="1628" pos:column="65">*</type:modifier></type><name pos:line="1628" pos:column="66">displayText</name></decl></param>, <param><decl><type><name pos:line="1628" pos:column="79">int</name></type> <name pos:line="1628" pos:column="83">type</name></decl></param>)</parameter_list>
<block pos:line="1629" pos:column="1">{
	<return pos:line="1630" pos:column="9">return <expr><call><name><op:operator pos:line="1630" pos:column="16">::</op:operator><name pos:line="1630" pos:column="18">MessageBox</name></name><argument_list pos:line="1630" pos:column="28">(<argument><expr><call><name><name pos:line="1630" pos:column="29">_pPublicInterface</name><op:operator pos:line="1630" pos:column="46">-&gt;</op:operator><name pos:line="1630" pos:column="48">getHSelf</name></name><argument_list pos:line="1630" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1630" pos:column="60">displayText</name></expr></argument>, <argument><expr><name pos:line="1630" pos:column="73">title</name></expr></argument>, <argument><expr><name pos:line="1630" pos:column="80">type</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1633" pos:column="1">void</name></type> <name><name pos:line="1633" pos:column="6">Notepad_plus</name><op:operator pos:line="1633" pos:column="18">::</op:operator><name pos:line="1633" pos:column="20">enableMenu</name></name><parameter_list pos:line="1633" pos:column="30">(<param><decl><type><name pos:line="1633" pos:column="31">int</name></type> <name pos:line="1633" pos:column="35">cmdID</name></decl></param>, <param><decl><type><name pos:line="1633" pos:column="42">bool</name></type> <name pos:line="1633" pos:column="47">doEnable</name></decl></param>)</parameter_list> <specifier pos:line="1633" pos:column="57">const</specifier>
<block pos:line="1634" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1635" pos:column="9">int</name></type> <name pos:line="1635" pos:column="13">flag</name> <init pos:line="1635" pos:column="18">= <expr><name pos:line="1635" pos:column="20">doEnable</name><op:operator pos:line="1635" pos:column="28">?</op:operator><name pos:line="1635" pos:column="29">MF_ENABLED</name> <op:operator pos:line="1635" pos:column="40">|</op:operator> <name pos:line="1635" pos:column="42">MF_BYCOMMAND</name><op:operator pos:line="1635" pos:column="54">:</op:operator><name pos:line="1635" pos:column="55">MF_DISABLED</name> <op:operator pos:line="1635" pos:column="67">|</op:operator> <name pos:line="1635" pos:column="69">MF_GRAYED</name> <op:operator pos:line="1635" pos:column="79">|</op:operator> <name pos:line="1635" pos:column="81">MF_BYCOMMAND</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1636" pos:column="9">::</op:operator><name pos:line="1636" pos:column="11">EnableMenuItem</name></name><argument_list pos:line="1636" pos:column="25">(<argument><expr><name pos:line="1636" pos:column="26">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1636" pos:column="43">cmdID</name></expr></argument>, <argument><expr><name pos:line="1636" pos:column="50">flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1639" pos:column="1">void</name></type> <name><name pos:line="1639" pos:column="6">Notepad_plus</name><op:operator pos:line="1639" pos:column="18">::</op:operator><name pos:line="1639" pos:column="20">enableCommand</name></name><parameter_list pos:line="1639" pos:column="33">(<param><decl><type><name pos:line="1639" pos:column="34">int</name></type> <name pos:line="1639" pos:column="38">cmdID</name></decl></param>, <param><decl><type><name pos:line="1639" pos:column="45">bool</name></type> <name pos:line="1639" pos:column="50">doEnable</name></decl></param>, <param><decl><type><name pos:line="1639" pos:column="60">int</name></type> <name pos:line="1639" pos:column="64">which</name></decl></param>)</parameter_list> <specifier pos:line="1639" pos:column="71">const</specifier>
<block pos:line="1640" pos:column="1">{
	<if pos:line="1641" pos:column="9">if <condition pos:line="1641" pos:column="12">(<expr><name pos:line="1641" pos:column="13">which</name> <op:operator pos:line="1641" pos:column="19">&amp;</op:operator> <name pos:line="1641" pos:column="21">MENU</name></expr>)</condition><then pos:line="1641" pos:column="26">
	<block pos:line="1642" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="1643" pos:column="17">enableMenu</name><argument_list pos:line="1643" pos:column="27">(<argument><expr><name pos:line="1643" pos:column="28">cmdID</name></expr></argument>, <argument><expr><name pos:line="1643" pos:column="35">doEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="1645" pos:column="9">if <condition pos:line="1645" pos:column="12">(<expr><name pos:line="1645" pos:column="13">which</name> <op:operator pos:line="1645" pos:column="19">&amp;</op:operator> <name pos:line="1645" pos:column="21">TOOLBAR</name></expr>)</condition><then pos:line="1645" pos:column="29">
	<block pos:line="1646" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="1647" pos:column="17">_toolBar</name><op:operator pos:line="1647" pos:column="25">.</op:operator><name pos:line="1647" pos:column="26">enable</name></name><argument_list pos:line="1647" pos:column="32">(<argument><expr><name pos:line="1647" pos:column="33">cmdID</name></expr></argument>, <argument><expr><name pos:line="1647" pos:column="40">doEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1651" pos:column="1">void</name></type> <name><name pos:line="1651" pos:column="6">Notepad_plus</name><op:operator pos:line="1651" pos:column="18">::</op:operator><name pos:line="1651" pos:column="20">checkClipboard</name></name><parameter_list pos:line="1651" pos:column="34">()</parameter_list>
<block pos:line="1652" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1653" pos:column="9">bool</name></type> <name pos:line="1653" pos:column="14">hasSelection</name> <init pos:line="1653" pos:column="27">= <expr><op:operator pos:line="1653" pos:column="29">(</op:operator><call><name><name pos:line="1653" pos:column="30">_pEditView</name><op:operator pos:line="1653" pos:column="40">-&gt;</op:operator><name pos:line="1653" pos:column="42">execute</name></name><argument_list pos:line="1653" pos:column="49">(<argument><expr><name pos:line="1653" pos:column="50">SCI_GETSELECTIONSTART</name></expr></argument>)</argument_list></call> <op:operator pos:line="1653" pos:column="73">!=</op:operator> <call><name><name pos:line="1653" pos:column="76">_pEditView</name><op:operator pos:line="1653" pos:column="86">-&gt;</op:operator><name pos:line="1653" pos:column="88">execute</name></name><argument_list pos:line="1653" pos:column="95">(<argument><expr><name pos:line="1653" pos:column="96">SCI_GETSELECTIONEND</name></expr></argument>)</argument_list></call><op:operator pos:line="1653" pos:column="116">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1654" pos:column="9">bool</name></type> <name pos:line="1654" pos:column="14">canPaste</name> <init pos:line="1654" pos:column="23">= <expr><op:operator pos:line="1654" pos:column="25">(</op:operator><call><name><name pos:line="1654" pos:column="26">_pEditView</name><op:operator pos:line="1654" pos:column="36">-&gt;</op:operator><name pos:line="1654" pos:column="38">execute</name></name><argument_list pos:line="1654" pos:column="45">(<argument><expr><name pos:line="1654" pos:column="46">SCI_CANPASTE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1654" pos:column="60">!=</op:operator> <lit:literal type="number" pos:line="1654" pos:column="63">0</lit:literal><op:operator pos:line="1654" pos:column="64">)</op:operator></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1655" pos:column="9">enableCommand</name><argument_list pos:line="1655" pos:column="22">(<argument><expr><name pos:line="1655" pos:column="23">IDM_EDIT_CUT</name></expr></argument>, <argument><expr><name pos:line="1655" pos:column="37">hasSelection</name></expr></argument>, <argument><expr><name pos:line="1655" pos:column="51">MENU</name> <op:operator pos:line="1655" pos:column="56">|</op:operator> <name pos:line="1655" pos:column="58">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1656" pos:column="9">enableCommand</name><argument_list pos:line="1656" pos:column="22">(<argument><expr><name pos:line="1656" pos:column="23">IDM_EDIT_COPY</name></expr></argument>, <argument><expr><name pos:line="1656" pos:column="38">hasSelection</name></expr></argument>, <argument><expr><name pos:line="1656" pos:column="52">MENU</name> <op:operator pos:line="1656" pos:column="57">|</op:operator> <name pos:line="1656" pos:column="59">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1658" pos:column="9">enableCommand</name><argument_list pos:line="1658" pos:column="22">(<argument><expr><name pos:line="1658" pos:column="23">IDM_EDIT_PASTE</name></expr></argument>, <argument><expr><name pos:line="1658" pos:column="39">canPaste</name></expr></argument>, <argument><expr><name pos:line="1658" pos:column="49">MENU</name> <op:operator pos:line="1658" pos:column="54">|</op:operator> <name pos:line="1658" pos:column="56">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1659" pos:column="9">enableCommand</name><argument_list pos:line="1659" pos:column="22">(<argument><expr><name pos:line="1659" pos:column="23">IDM_EDIT_DELETE</name></expr></argument>, <argument><expr><name pos:line="1659" pos:column="40">hasSelection</name></expr></argument>, <argument><expr><name pos:line="1659" pos:column="54">MENU</name> <op:operator pos:line="1659" pos:column="59">|</op:operator> <name pos:line="1659" pos:column="61">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1660" pos:column="9">enableCommand</name><argument_list pos:line="1660" pos:column="22">(<argument><expr><name pos:line="1660" pos:column="23">IDM_EDIT_UPPERCASE</name></expr></argument>, <argument><expr><name pos:line="1660" pos:column="43">hasSelection</name></expr></argument>, <argument><expr><name pos:line="1660" pos:column="57">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1661" pos:column="9">enableCommand</name><argument_list pos:line="1661" pos:column="22">(<argument><expr><name pos:line="1661" pos:column="23">IDM_EDIT_LOWERCASE</name></expr></argument>, <argument><expr><name pos:line="1661" pos:column="43">hasSelection</name></expr></argument>, <argument><expr><name pos:line="1661" pos:column="57">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1664" pos:column="1">void</name></type> <name><name pos:line="1664" pos:column="6">Notepad_plus</name><op:operator pos:line="1664" pos:column="18">::</op:operator><name pos:line="1664" pos:column="20">checkDocState</name></name><parameter_list pos:line="1664" pos:column="33">()</parameter_list>
<block pos:line="1665" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1666" pos:column="9">Buffer</name> <type:modifier pos:line="1666" pos:column="16">*</type:modifier></type> <name pos:line="1666" pos:column="18">curBuf</name> <init pos:line="1666" pos:column="25">= <expr><call><name><name pos:line="1666" pos:column="27">_pEditView</name><op:operator pos:line="1666" pos:column="37">-&gt;</op:operator><name pos:line="1666" pos:column="39">getCurrentBuffer</name></name><argument_list pos:line="1666" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1668" pos:column="9">bool</name></type> <name pos:line="1668" pos:column="14">isCurrentDirty</name> <init pos:line="1668" pos:column="29">= <expr><call><name><name pos:line="1668" pos:column="31">curBuf</name><op:operator pos:line="1668" pos:column="37">-&gt;</op:operator><name pos:line="1668" pos:column="39">isDirty</name></name><argument_list pos:line="1668" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1669" pos:column="9">bool</name></type> <name pos:line="1669" pos:column="14">isSeveralDirty</name> <init pos:line="1669" pos:column="29">= <expr><name pos:line="1669" pos:column="31">isCurrentDirty</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1670" pos:column="9">bool</name></type> <name pos:line="1670" pos:column="14">isFileExisting</name> <init pos:line="1670" pos:column="29">= <expr><call><name pos:line="1670" pos:column="31">PathFileExists</name><argument_list pos:line="1670" pos:column="45">(<argument><expr><call><name><name pos:line="1670" pos:column="46">curBuf</name><op:operator pos:line="1670" pos:column="52">-&gt;</op:operator><name pos:line="1670" pos:column="54">getFullPathName</name></name><argument_list pos:line="1670" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1670" pos:column="73">!=</op:operator> <name pos:line="1670" pos:column="76">FALSE</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1671" pos:column="9">if <condition pos:line="1671" pos:column="12">(<expr><op:operator pos:line="1671" pos:column="13">!</op:operator><name pos:line="1671" pos:column="14">isCurrentDirty</name></expr>)</condition><then pos:line="1671" pos:column="29">
	<block pos:line="1672" pos:column="9">{
		<for pos:line="1673" pos:column="17">for(<init><decl><type><name pos:line="1673" pos:column="21">int</name></type> <name pos:line="1673" pos:column="25">i</name> <init pos:line="1673" pos:column="27">= <expr><lit:literal type="number" pos:line="1673" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1673" pos:column="32">i</name> <op:operator pos:line="1673" pos:column="34">&lt;</op:operator> <call><name><name pos:line="1673" pos:column="36">MainFileManager</name><op:operator pos:line="1673" pos:column="51">-&gt;</op:operator><name pos:line="1673" pos:column="53">getNrBuffers</name></name><argument_list pos:line="1673" pos:column="65">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="1673" pos:column="69">i</name><op:operator pos:line="1673" pos:column="70">++</op:operator></expr></incr>)
		<block pos:line="1674" pos:column="17">{
			<if pos:line="1675" pos:column="25">if <condition pos:line="1675" pos:column="28">(<expr><call><name><name pos:line="1675" pos:column="29">MainFileManager</name><op:operator pos:line="1675" pos:column="44">-&gt;</op:operator><name pos:line="1675" pos:column="46">getBufferByIndex</name></name><argument_list pos:line="1675" pos:column="62">(<argument><expr><name pos:line="1675" pos:column="63">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1675" pos:column="65">-&gt;</op:operator><call><name pos:line="1675" pos:column="67">isDirty</name><argument_list pos:line="1675" pos:column="74">()</argument_list></call></expr>)</condition><then pos:line="1675" pos:column="77">
			<block pos:line="1676" pos:column="25">{
				<expr_stmt><expr><name pos:line="1677" pos:column="33">isSeveralDirty</name> <op:operator pos:line="1677" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="1677" pos:column="50">true</lit:literal></expr>;</expr_stmt>
				<break pos:line="1678" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1683" pos:column="9">bool</name></type> <name pos:line="1683" pos:column="14">isCurrentUntitled</name> <init pos:line="1683" pos:column="32">= <expr><call><name><name pos:line="1683" pos:column="34">curBuf</name><op:operator pos:line="1683" pos:column="40">-&gt;</op:operator><name pos:line="1683" pos:column="42">isUntitled</name></name><argument_list pos:line="1683" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1684" pos:column="9">enableCommand</name><argument_list pos:line="1684" pos:column="22">(<argument><expr><name pos:line="1684" pos:column="23">IDM_FILE_SAVE</name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="38">isCurrentDirty</name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="54">MENU</name> <op:operator pos:line="1684" pos:column="59">|</op:operator> <name pos:line="1684" pos:column="61">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1685" pos:column="9">enableCommand</name><argument_list pos:line="1685" pos:column="22">(<argument><expr><name pos:line="1685" pos:column="23">IDM_FILE_SAVEALL</name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="41">isSeveralDirty</name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="57">MENU</name> <op:operator pos:line="1685" pos:column="62">|</op:operator> <name pos:line="1685" pos:column="64">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1686" pos:column="9">enableCommand</name><argument_list pos:line="1686" pos:column="22">(<argument><expr><name pos:line="1686" pos:column="23">IDM_VIEW_GOTO_NEW_INSTANCE</name></expr></argument>, <argument><expr><op:operator pos:line="1686" pos:column="51">!</op:operator><op:operator pos:line="1686" pos:column="52">(</op:operator><name pos:line="1686" pos:column="53">isCurrentDirty</name> <op:operator pos:line="1686" pos:column="68">||</op:operator> <name pos:line="1686" pos:column="71">isCurrentUntitled</name><op:operator pos:line="1686" pos:column="88">)</op:operator></expr></argument>, <argument><expr><name pos:line="1686" pos:column="91">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1687" pos:column="9">enableCommand</name><argument_list pos:line="1687" pos:column="22">(<argument><expr><name pos:line="1687" pos:column="23">IDM_VIEW_LOAD_IN_NEW_INSTANCE</name></expr></argument>, <argument><expr><op:operator pos:line="1687" pos:column="54">!</op:operator><op:operator pos:line="1687" pos:column="55">(</op:operator><name pos:line="1687" pos:column="56">isCurrentDirty</name> <op:operator pos:line="1687" pos:column="71">||</op:operator> <name pos:line="1687" pos:column="74">isCurrentUntitled</name><op:operator pos:line="1687" pos:column="91">)</op:operator></expr></argument>, <argument><expr><name pos:line="1687" pos:column="94">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1689" pos:column="9">bool</name></type> <name pos:line="1689" pos:column="14">isSysReadOnly</name> <init pos:line="1689" pos:column="28">= <expr><call><name><name pos:line="1689" pos:column="30">curBuf</name><op:operator pos:line="1689" pos:column="36">-&gt;</op:operator><name pos:line="1689" pos:column="38">getFileReadOnly</name></name><argument_list pos:line="1689" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1690" pos:column="9">if <condition pos:line="1690" pos:column="12">(<expr><name pos:line="1690" pos:column="13">isSysReadOnly</name></expr>)</condition><then pos:line="1690" pos:column="27">
	<block pos:line="1691" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="1692" pos:column="17">::</op:operator><name pos:line="1692" pos:column="19">CheckMenuItem</name></name><argument_list pos:line="1692" pos:column="32">(<argument><expr><name pos:line="1692" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1692" pos:column="50">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><name pos:line="1692" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1692" pos:column="85">|</op:operator> <name pos:line="1692" pos:column="87">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1693" pos:column="17">enableCommand</name><argument_list pos:line="1693" pos:column="30">(<argument><expr><name pos:line="1693" pos:column="31">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1693" pos:column="53">false</lit:literal></expr></argument>, <argument><expr><name pos:line="1693" pos:column="60">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1694" pos:column="17">enableCommand</name><argument_list pos:line="1694" pos:column="30">(<argument><expr><name pos:line="1694" pos:column="31">IDM_EDIT_CLEARREADONLY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1694" pos:column="55">true</lit:literal></expr></argument>, <argument><expr><name pos:line="1694" pos:column="61">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1696" pos:column="9">else
	<block pos:line="1697" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="1698" pos:column="17">enableCommand</name><argument_list pos:line="1698" pos:column="30">(<argument><expr><name pos:line="1698" pos:column="31">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1698" pos:column="53">true</lit:literal></expr></argument>, <argument><expr><name pos:line="1698" pos:column="59">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1699" pos:column="17">enableCommand</name><argument_list pos:line="1699" pos:column="30">(<argument><expr><name pos:line="1699" pos:column="31">IDM_EDIT_CLEARREADONLY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1699" pos:column="55">false</lit:literal></expr></argument>, <argument><expr><name pos:line="1699" pos:column="62">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1700" pos:column="17">bool</name></type> <name pos:line="1700" pos:column="22">isUserReadOnly</name> <init pos:line="1700" pos:column="37">= <expr><call><name><name pos:line="1700" pos:column="39">curBuf</name><op:operator pos:line="1700" pos:column="45">-&gt;</op:operator><name pos:line="1700" pos:column="47">getUserReadOnly</name></name><argument_list pos:line="1700" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1701" pos:column="17">::</op:operator><name pos:line="1701" pos:column="19">CheckMenuItem</name></name><argument_list pos:line="1701" pos:column="32">(<argument><expr><name pos:line="1701" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1701" pos:column="50">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><name pos:line="1701" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1701" pos:column="85">|</op:operator> <op:operator pos:line="1701" pos:column="87">(</op:operator><name pos:line="1701" pos:column="88">isUserReadOnly</name><op:operator pos:line="1701" pos:column="102">?</op:operator><name pos:line="1701" pos:column="103">MF_CHECKED</name><op:operator pos:line="1701" pos:column="113">:</op:operator><name pos:line="1701" pos:column="114">MF_UNCHECKED</name><op:operator pos:line="1701" pos:column="126">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="1703" pos:column="9">enableCommand</name><argument_list pos:line="1703" pos:column="22">(<argument><expr><name pos:line="1703" pos:column="23">IDM_FILE_DELETE</name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="40">isFileExisting</name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="56">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1704" pos:column="9">enableCommand</name><argument_list pos:line="1704" pos:column="22">(<argument><expr><name pos:line="1704" pos:column="23">IDM_FILE_RENAME</name></expr></argument>, <argument><expr><name pos:line="1704" pos:column="40">isFileExisting</name></expr></argument>, <argument><expr><name pos:line="1704" pos:column="56">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1706" pos:column="9">enableConvertMenuItems</name><argument_list pos:line="1706" pos:column="31">(<argument><expr><call><name><name pos:line="1706" pos:column="32">curBuf</name><op:operator pos:line="1706" pos:column="38">-&gt;</op:operator><name pos:line="1706" pos:column="40">getFormat</name></name><argument_list pos:line="1706" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1707" pos:column="9">checkUnicodeMenuItems</name><argument_list pos:line="1707" pos:column="30">(<comment type="block" pos:line="1707" pos:column="31">/*curBuf-&gt;getUnicodeMode()*/</comment>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1708" pos:column="9">checkLangsMenu</name><argument_list pos:line="1708" pos:column="23">(<argument><expr><op:operator pos:line="1708" pos:column="24">-</op:operator><lit:literal type="number" pos:line="1708" pos:column="25">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1710" pos:column="9">if <condition pos:line="1710" pos:column="12">(<expr><name pos:line="1710" pos:column="13">_pAnsiCharPanel</name></expr>)</condition><then pos:line="1710" pos:column="29">
		<expr_stmt><expr><call><name><name pos:line="1711" pos:column="17">_pAnsiCharPanel</name><op:operator pos:line="1711" pos:column="32">-&gt;</op:operator><name pos:line="1711" pos:column="34">switchEncoding</name></name><argument_list pos:line="1711" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="1714" pos:column="1">void</name></type> <name><name pos:line="1714" pos:column="6">Notepad_plus</name><op:operator pos:line="1714" pos:column="18">::</op:operator><name pos:line="1714" pos:column="20">checkUndoState</name></name><parameter_list pos:line="1714" pos:column="34">()</parameter_list>
<block pos:line="1715" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="1716" pos:column="9">enableCommand</name><argument_list pos:line="1716" pos:column="22">(<argument><expr><name pos:line="1716" pos:column="23">IDM_EDIT_UNDO</name></expr></argument>, <argument><expr><call><name><name pos:line="1716" pos:column="38">_pEditView</name><op:operator pos:line="1716" pos:column="48">-&gt;</op:operator><name pos:line="1716" pos:column="50">execute</name></name><argument_list pos:line="1716" pos:column="57">(<argument><expr><name pos:line="1716" pos:column="58">SCI_CANUNDO</name></expr></argument>)</argument_list></call> <op:operator pos:line="1716" pos:column="71">!=</op:operator> <lit:literal type="number" pos:line="1716" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1716" pos:column="77">MENU</name> <op:operator pos:line="1716" pos:column="82">|</op:operator> <name pos:line="1716" pos:column="84">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1717" pos:column="9">enableCommand</name><argument_list pos:line="1717" pos:column="22">(<argument><expr><name pos:line="1717" pos:column="23">IDM_EDIT_REDO</name></expr></argument>, <argument><expr><call><name><name pos:line="1717" pos:column="38">_pEditView</name><op:operator pos:line="1717" pos:column="48">-&gt;</op:operator><name pos:line="1717" pos:column="50">execute</name></name><argument_list pos:line="1717" pos:column="57">(<argument><expr><name pos:line="1717" pos:column="58">SCI_CANREDO</name></expr></argument>)</argument_list></call> <op:operator pos:line="1717" pos:column="71">!=</op:operator> <lit:literal type="number" pos:line="1717" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1717" pos:column="77">MENU</name> <op:operator pos:line="1717" pos:column="82">|</op:operator> <name pos:line="1717" pos:column="84">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1720" pos:column="1">void</name></type> <name><name pos:line="1720" pos:column="6">Notepad_plus</name><op:operator pos:line="1720" pos:column="18">::</op:operator><name pos:line="1720" pos:column="20">checkMacroState</name></name><parameter_list pos:line="1720" pos:column="35">()</parameter_list>
<block pos:line="1721" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="1722" pos:column="9">enableCommand</name><argument_list pos:line="1722" pos:column="22">(<argument><expr><name pos:line="1722" pos:column="23">IDM_MACRO_STARTRECORDINGMACRO</name></expr></argument>, <argument><expr><op:operator pos:line="1722" pos:column="54">!</op:operator><name pos:line="1722" pos:column="55">_recordingMacro</name></expr></argument>, <argument><expr><name pos:line="1722" pos:column="72">MENU</name> <op:operator pos:line="1722" pos:column="77">|</op:operator> <name pos:line="1722" pos:column="79">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1723" pos:column="9">enableCommand</name><argument_list pos:line="1723" pos:column="22">(<argument><expr><name pos:line="1723" pos:column="23">IDM_MACRO_STOPRECORDINGMACRO</name></expr></argument>, <argument><expr><name pos:line="1723" pos:column="53">_recordingMacro</name></expr></argument>, <argument><expr><name pos:line="1723" pos:column="70">MENU</name> <op:operator pos:line="1723" pos:column="75">|</op:operator> <name pos:line="1723" pos:column="77">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1724" pos:column="9">enableCommand</name><argument_list pos:line="1724" pos:column="22">(<argument><expr><name pos:line="1724" pos:column="23">IDM_MACRO_PLAYBACKRECORDEDMACRO</name></expr></argument>, <argument><expr><op:operator pos:line="1724" pos:column="56">!</op:operator><call><name><name pos:line="1724" pos:column="57">_macro</name><op:operator pos:line="1724" pos:column="63">.</op:operator><name pos:line="1724" pos:column="64">empty</name></name><argument_list pos:line="1724" pos:column="69">()</argument_list></call> <op:operator pos:line="1724" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="1724" pos:column="75">!</op:operator><name pos:line="1724" pos:column="76">_recordingMacro</name></expr></argument>, <argument><expr><name pos:line="1724" pos:column="93">MENU</name> <op:operator pos:line="1724" pos:column="98">|</op:operator> <name pos:line="1724" pos:column="100">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1725" pos:column="9">enableCommand</name><argument_list pos:line="1725" pos:column="22">(<argument><expr><name pos:line="1725" pos:column="23">IDM_MACRO_SAVECURRENTMACRO</name></expr></argument>, <argument><expr><op:operator pos:line="1725" pos:column="51">!</op:operator><call><name><name pos:line="1725" pos:column="52">_macro</name><op:operator pos:line="1725" pos:column="58">.</op:operator><name pos:line="1725" pos:column="59">empty</name></name><argument_list pos:line="1725" pos:column="64">()</argument_list></call> <op:operator pos:line="1725" pos:column="67">&amp;&amp;</op:operator> <op:operator pos:line="1725" pos:column="70">!</op:operator><name pos:line="1725" pos:column="71">_recordingMacro</name></expr></argument>, <argument><expr><name pos:line="1725" pos:column="88">MENU</name> <op:operator pos:line="1725" pos:column="93">|</op:operator> <name pos:line="1725" pos:column="95">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1727" pos:column="9">enableCommand</name><argument_list pos:line="1727" pos:column="22">(<argument><expr><name pos:line="1727" pos:column="23">IDM_MACRO_RUNMULTIMACRODLG</name></expr></argument>, <argument><expr><op:operator pos:line="1727" pos:column="51">(</op:operator><op:operator pos:line="1727" pos:column="52">!</op:operator><call><name><name pos:line="1727" pos:column="53">_macro</name><op:operator pos:line="1727" pos:column="59">.</op:operator><name pos:line="1727" pos:column="60">empty</name></name><argument_list pos:line="1727" pos:column="65">()</argument_list></call> <op:operator pos:line="1727" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="1727" pos:column="71">!</op:operator><name pos:line="1727" pos:column="72">_recordingMacro</name><op:operator pos:line="1727" pos:column="87">)</op:operator> <op:operator pos:line="1727" pos:column="89">||</op:operator> <op:operator pos:line="1727" pos:column="92">!</op:operator><op:operator pos:line="1727" pos:column="93">(</op:operator><op:operator pos:line="1727" pos:column="94">(</op:operator><call><name><name pos:line="1727" pos:column="95">NppParameters</name><op:operator pos:line="1727" pos:column="108">::</op:operator><name pos:line="1727" pos:column="110">getInstance</name></name><argument_list pos:line="1727" pos:column="121">()</argument_list></call><op:operator pos:line="1727" pos:column="123">)</op:operator><op:operator pos:line="1727" pos:column="124">-&gt;</op:operator><call><name pos:line="1727" pos:column="126">getMacroList</name><argument_list pos:line="1727" pos:column="138">()</argument_list></call><op:operator pos:line="1727" pos:column="140">)</op:operator><op:operator pos:line="1727" pos:column="141">.</op:operator><call><name pos:line="1727" pos:column="142">empty</name><argument_list pos:line="1727" pos:column="147">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1727" pos:column="151">MENU</name> <op:operator pos:line="1727" pos:column="156">|</op:operator> <name pos:line="1727" pos:column="158">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1730" pos:column="1">void</name></type> <name><name pos:line="1730" pos:column="6">Notepad_plus</name><op:operator pos:line="1730" pos:column="18">::</op:operator><name pos:line="1730" pos:column="20">checkSyncState</name></name><parameter_list pos:line="1730" pos:column="34">()</parameter_list>
<block pos:line="1731" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1732" pos:column="9">bool</name></type> <name pos:line="1732" pos:column="14">canDoSync</name> <init pos:line="1732" pos:column="24">= <expr><call><name pos:line="1732" pos:column="26">viewVisible</name><argument_list pos:line="1732" pos:column="37">(<argument><expr><name pos:line="1732" pos:column="38">MAIN_VIEW</name></expr></argument>)</argument_list></call> <op:operator pos:line="1732" pos:column="49">&amp;&amp;</op:operator> <call><name pos:line="1732" pos:column="52">viewVisible</name><argument_list pos:line="1732" pos:column="63">(<argument><expr><name pos:line="1732" pos:column="64">SUB_VIEW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1733" pos:column="9">if <condition pos:line="1733" pos:column="12">(<expr><op:operator pos:line="1733" pos:column="13">!</op:operator><name pos:line="1733" pos:column="14">canDoSync</name></expr>)</condition><then pos:line="1733" pos:column="24">
	<block pos:line="1734" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="1735" pos:column="17">_syncInfo</name><op:operator pos:line="1735" pos:column="26">.</op:operator><name pos:line="1735" pos:column="27">_isSynScollV</name></name> <op:operator pos:line="1735" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="1735" pos:column="42">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1736" pos:column="17">_syncInfo</name><op:operator pos:line="1736" pos:column="26">.</op:operator><name pos:line="1736" pos:column="27">_isSynScollH</name></name> <op:operator pos:line="1736" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="1736" pos:column="42">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1737" pos:column="17">checkMenuItem</name><argument_list pos:line="1737" pos:column="30">(<argument><expr><name pos:line="1737" pos:column="31">IDM_VIEW_SYNSCROLLV</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1737" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1738" pos:column="17">checkMenuItem</name><argument_list pos:line="1738" pos:column="30">(<argument><expr><name pos:line="1738" pos:column="31">IDM_VIEW_SYNSCROLLH</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1738" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1739" pos:column="17">_toolBar</name><op:operator pos:line="1739" pos:column="25">.</op:operator><name pos:line="1739" pos:column="26">setCheck</name></name><argument_list pos:line="1739" pos:column="34">(<argument><expr><name pos:line="1739" pos:column="35">IDM_VIEW_SYNSCROLLV</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1739" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1740" pos:column="17">_toolBar</name><op:operator pos:line="1740" pos:column="25">.</op:operator><name pos:line="1740" pos:column="26">setCheck</name></name><argument_list pos:line="1740" pos:column="34">(<argument><expr><name pos:line="1740" pos:column="35">IDM_VIEW_SYNSCROLLH</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1740" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="1742" pos:column="9">enableCommand</name><argument_list pos:line="1742" pos:column="22">(<argument><expr><name pos:line="1742" pos:column="23">IDM_VIEW_SYNSCROLLV</name></expr></argument>, <argument><expr><name pos:line="1742" pos:column="44">canDoSync</name></expr></argument>, <argument><expr><name pos:line="1742" pos:column="55">MENU</name> <op:operator pos:line="1742" pos:column="60">|</op:operator> <name pos:line="1742" pos:column="62">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1743" pos:column="9">enableCommand</name><argument_list pos:line="1743" pos:column="22">(<argument><expr><name pos:line="1743" pos:column="23">IDM_VIEW_SYNSCROLLH</name></expr></argument>, <argument><expr><name pos:line="1743" pos:column="44">canDoSync</name></expr></argument>, <argument><expr><name pos:line="1743" pos:column="55">MENU</name> <op:operator pos:line="1743" pos:column="60">|</op:operator> <name pos:line="1743" pos:column="62">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1746" pos:column="1">void</name></type> <name><name pos:line="1746" pos:column="6">Notepad_plus</name><op:operator pos:line="1746" pos:column="18">::</op:operator><name pos:line="1746" pos:column="20">checkLangsMenu</name></name><parameter_list pos:line="1746" pos:column="34">(<param><decl><type><name pos:line="1746" pos:column="35">int</name></type> <name pos:line="1746" pos:column="39">id</name></decl></param>)</parameter_list> <specifier pos:line="1746" pos:column="43">const</specifier>
<block pos:line="1747" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1748" pos:column="9">Buffer</name> <type:modifier pos:line="1748" pos:column="16">*</type:modifier></type> <name pos:line="1748" pos:column="18">curBuf</name> <init pos:line="1748" pos:column="25">= <expr><call><name><name pos:line="1748" pos:column="27">_pEditView</name><op:operator pos:line="1748" pos:column="37">-&gt;</op:operator><name pos:line="1748" pos:column="39">getCurrentBuffer</name></name><argument_list pos:line="1748" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1749" pos:column="9">if <condition pos:line="1749" pos:column="12">(<expr><name pos:line="1749" pos:column="13">id</name> <op:operator pos:line="1749" pos:column="16">==</op:operator> <op:operator pos:line="1749" pos:column="19">-</op:operator><lit:literal type="number" pos:line="1749" pos:column="20">1</lit:literal></expr>)</condition><then pos:line="1749" pos:column="22">
	<block pos:line="1750" pos:column="9">{
		<expr_stmt><expr><name pos:line="1751" pos:column="17">id</name> <op:operator pos:line="1751" pos:column="20">=</op:operator> <op:operator pos:line="1751" pos:column="22">(</op:operator><call><name><name pos:line="1751" pos:column="23">NppParameters</name><op:operator pos:line="1751" pos:column="36">::</op:operator><name pos:line="1751" pos:column="38">getInstance</name></name><argument_list pos:line="1751" pos:column="49">()</argument_list></call><op:operator pos:line="1751" pos:column="51">)</op:operator><op:operator pos:line="1751" pos:column="52">-&gt;</op:operator><call><name pos:line="1751" pos:column="54">langTypeToCommandID</name><argument_list pos:line="1751" pos:column="73">(<argument><expr><call><name><name pos:line="1751" pos:column="74">curBuf</name><op:operator pos:line="1751" pos:column="80">-&gt;</op:operator><name pos:line="1751" pos:column="82">getLangType</name></name><argument_list pos:line="1751" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1752" pos:column="17">if <condition pos:line="1752" pos:column="20">(<expr><name pos:line="1752" pos:column="21">id</name> <op:operator pos:line="1752" pos:column="24">==</op:operator> <name pos:line="1752" pos:column="27">IDM_LANG_USER</name></expr>)</condition><then pos:line="1752" pos:column="41">
		<block pos:line="1753" pos:column="17">{
			<if pos:line="1754" pos:column="25">if <condition pos:line="1754" pos:column="28">(<expr><call><name><name pos:line="1754" pos:column="29">curBuf</name><op:operator pos:line="1754" pos:column="35">-&gt;</op:operator><name pos:line="1754" pos:column="37">isUserDefineLangExt</name></name><argument_list pos:line="1754" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="1754" pos:column="59">
			<block pos:line="1755" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="1756" pos:column="33">const</specifier> <name pos:line="1756" pos:column="39">TCHAR</name> <type:modifier pos:line="1756" pos:column="45">*</type:modifier></type><name pos:line="1756" pos:column="46">userLangName</name> <init pos:line="1756" pos:column="59">= <expr><call><name><name pos:line="1756" pos:column="61">curBuf</name><op:operator pos:line="1756" pos:column="67">-&gt;</op:operator><name pos:line="1756" pos:column="69">getUserDefineLangName</name></name><argument_list pos:line="1756" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="1757" pos:column="33">const</specifier> <name pos:line="1757" pos:column="39">int</name></type> <name pos:line="1757" pos:column="43">nbChar</name> <init pos:line="1757" pos:column="50">= <expr><lit:literal type="number" pos:line="1757" pos:column="52">16</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1758" pos:column="33">TCHAR</name></type> <name><name pos:line="1758" pos:column="39">menuLangName</name><index pos:line="1758" pos:column="51">[<expr><name pos:line="1758" pos:column="52">nbChar</name></expr>]</index></name></decl>;</decl_stmt>

				<for pos:line="1760" pos:column="33">for (<init><decl><type><name pos:line="1760" pos:column="38">int</name></type> <name pos:line="1760" pos:column="42">i</name> <init pos:line="1760" pos:column="44">= <expr><name pos:line="1760" pos:column="46">IDM_LANG_USER</name> <op:operator pos:line="1760" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="1760" pos:column="62">1</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1760" pos:column="66">i</name> <op:operator pos:line="1760" pos:column="68">&lt;=</op:operator> <name pos:line="1760" pos:column="71">IDM_LANG_USER_LIMIT</name></expr> ;</condition> <incr><expr><name pos:line="1760" pos:column="93">i</name><op:operator pos:line="1760" pos:column="94">++</op:operator></expr></incr>)
				<block pos:line="1761" pos:column="33">{
					<if pos:line="1762" pos:column="41">if <condition pos:line="1762" pos:column="44">(<expr><call><name><op:operator pos:line="1762" pos:column="45">::</op:operator><name pos:line="1762" pos:column="47">GetMenuString</name></name><argument_list pos:line="1762" pos:column="60">(<argument><expr><name pos:line="1762" pos:column="61">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1762" pos:column="78">i</name></expr></argument>, <argument><expr><name pos:line="1762" pos:column="81">menuLangName</name></expr></argument>, <argument><expr><name pos:line="1762" pos:column="95">nbChar</name><op:operator pos:line="1762" pos:column="101">-</op:operator><lit:literal type="number" pos:line="1762" pos:column="102">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1762" pos:column="105">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1762" pos:column="119">
						<if pos:line="1763" pos:column="49">if <condition pos:line="1763" pos:column="52">(<expr><op:operator pos:line="1763" pos:column="53">!</op:operator><call><name pos:line="1763" pos:column="54">lstrcmp</name><argument_list pos:line="1763" pos:column="61">(<argument><expr><name pos:line="1763" pos:column="62">userLangName</name></expr></argument>, <argument><expr><name pos:line="1763" pos:column="76">menuLangName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1763" pos:column="90">
						<block pos:line="1764" pos:column="49">{
							<expr_stmt><expr><call><name><op:operator pos:line="1765" pos:column="57">::</op:operator><name pos:line="1765" pos:column="59">CheckMenuRadioItem</name></name><argument_list pos:line="1765" pos:column="77">(<argument><expr><name pos:line="1765" pos:column="78">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1765" pos:column="95">IDM_LANG_C</name></expr></argument>, <argument><expr><name pos:line="1765" pos:column="107">IDM_LANG_USER_LIMIT</name></expr></argument>, <argument><expr><name pos:line="1765" pos:column="128">i</name></expr></argument>, <argument><expr><name pos:line="1765" pos:column="131">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<return pos:line="1766" pos:column="57">return;</return>
						}</block></then></if></then></if>
				}</block></for>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="1772" pos:column="9">::</op:operator><name pos:line="1772" pos:column="11">CheckMenuRadioItem</name></name><argument_list pos:line="1772" pos:column="29">(<argument><expr><name pos:line="1772" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1772" pos:column="47">IDM_LANG_C</name></expr></argument>, <argument><expr><name pos:line="1772" pos:column="59">IDM_LANG_USER_LIMIT</name></expr></argument>, <argument><expr><name pos:line="1772" pos:column="80">id</name></expr></argument>, <argument><expr><name pos:line="1772" pos:column="84">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1775" pos:column="1">generic_string</name></type> <name><name pos:line="1775" pos:column="16">Notepad_plus</name><op:operator pos:line="1775" pos:column="28">::</op:operator><name pos:line="1775" pos:column="30">getLangDesc</name></name><parameter_list pos:line="1775" pos:column="41">(<param><decl><type><name pos:line="1775" pos:column="42">LangType</name></type> <name pos:line="1775" pos:column="51">langType</name></decl></param>, <param><decl><type><name pos:line="1775" pos:column="61">bool</name></type> <name pos:line="1775" pos:column="66">getName</name></decl></param>)</parameter_list>
<block pos:line="1776" pos:column="1">{

	<if pos:line="1778" pos:column="9">if <condition pos:line="1778" pos:column="12">(<expr><op:operator pos:line="1778" pos:column="13">(</op:operator><name pos:line="1778" pos:column="14">langType</name> <op:operator pos:line="1778" pos:column="23">&gt;=</op:operator> <name pos:line="1778" pos:column="26">L_EXTERNAL</name><op:operator pos:line="1778" pos:column="36">)</op:operator> <op:operator pos:line="1778" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="1778" pos:column="41">(</op:operator><name pos:line="1778" pos:column="42">langType</name> <op:operator pos:line="1778" pos:column="51">&lt;</op:operator> <call><name><name pos:line="1778" pos:column="53">NppParameters</name><op:operator pos:line="1778" pos:column="66">::</op:operator><name pos:line="1778" pos:column="68">getInstance</name></name><argument_list pos:line="1778" pos:column="79">()</argument_list></call><op:operator pos:line="1778" pos:column="81">-&gt;</op:operator><name pos:line="1778" pos:column="83">L_END</name><op:operator pos:line="1778" pos:column="88">)</op:operator></expr>)</condition><then pos:line="1778" pos:column="90">
	<block pos:line="1779" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1780" pos:column="17">ExternalLangContainer</name> <type:modifier pos:line="1780" pos:column="39">&amp;</type:modifier></type> <name pos:line="1780" pos:column="41">elc</name> <init pos:line="1780" pos:column="45">= <expr><call><name><name pos:line="1780" pos:column="47">NppParameters</name><op:operator pos:line="1780" pos:column="60">::</op:operator><name pos:line="1780" pos:column="62">getInstance</name></name><argument_list pos:line="1780" pos:column="73">()</argument_list></call><op:operator pos:line="1780" pos:column="75">-&gt;</op:operator><call><name pos:line="1780" pos:column="77">getELCFromIndex</name><argument_list pos:line="1780" pos:column="92">(<argument><expr><name pos:line="1780" pos:column="93">langType</name> <op:operator pos:line="1780" pos:column="102">-</op:operator> <name pos:line="1780" pos:column="104">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1781" pos:column="17">if <condition pos:line="1781" pos:column="20">(<expr><name pos:line="1781" pos:column="21">getName</name></expr>)</condition><then pos:line="1781" pos:column="29">
			<return pos:line="1782" pos:column="25">return <expr><call><name pos:line="1782" pos:column="32">generic_string</name><argument_list pos:line="1782" pos:column="46">(<argument><expr><name><name pos:line="1782" pos:column="47">elc</name><op:operator pos:line="1782" pos:column="50">.</op:operator><name pos:line="1782" pos:column="51">_name</name></name></expr></argument>)</argument_list></call></expr>;</return></then>
		<else pos:line="1783" pos:column="17">else
			<return pos:line="1784" pos:column="25">return <expr><call><name pos:line="1784" pos:column="32">generic_string</name><argument_list pos:line="1784" pos:column="46">(<argument><expr><name><name pos:line="1784" pos:column="47">elc</name><op:operator pos:line="1784" pos:column="50">.</op:operator><name pos:line="1784" pos:column="51">_desc</name></name></expr></argument>)</argument_list></call></expr>;</return></else></if>
	}</block></then></if>

	<if pos:line="1787" pos:column="9">if <condition pos:line="1787" pos:column="12">(<expr><name pos:line="1787" pos:column="13">langType</name> <op:operator pos:line="1787" pos:column="22">&gt;</op:operator> <name pos:line="1787" pos:column="24">L_EXTERNAL</name></expr>)</condition><then pos:line="1787" pos:column="35">
        <expr_stmt><expr><name pos:line="1788" pos:column="9">langType</name> <op:operator pos:line="1788" pos:column="18">=</op:operator> <name pos:line="1788" pos:column="20">L_TEXT</name></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="1790" pos:column="9">generic_string</name></type> <name pos:line="1790" pos:column="24">str2Show</name></decl>;</decl_stmt>
	<if pos:line="1791" pos:column="9">if <condition pos:line="1791" pos:column="12">(<expr><name pos:line="1791" pos:column="13">getName</name></expr>)</condition><then pos:line="1791" pos:column="21">
		<expr_stmt><expr><name pos:line="1792" pos:column="17">str2Show</name> <op:operator pos:line="1792" pos:column="26">=</op:operator> <name><name pos:line="1792" pos:column="28">ScintillaEditView</name><op:operator pos:line="1792" pos:column="45">::</op:operator><name pos:line="1792" pos:column="47">langNames</name><index pos:line="1792" pos:column="56">[<expr><name pos:line="1792" pos:column="57">langType</name></expr>]</index></name><op:operator pos:line="1792" pos:column="66">.</op:operator><name pos:line="1792" pos:column="67">shortName</name></expr>;</expr_stmt></then>
	<else pos:line="1793" pos:column="9">else
		<expr_stmt><expr><name pos:line="1794" pos:column="17">str2Show</name> <op:operator pos:line="1794" pos:column="26">=</op:operator> <name><name pos:line="1794" pos:column="28">ScintillaEditView</name><op:operator pos:line="1794" pos:column="45">::</op:operator><name pos:line="1794" pos:column="47">langNames</name><index pos:line="1794" pos:column="56">[<expr><name pos:line="1794" pos:column="57">langType</name></expr>]</index></name><op:operator pos:line="1794" pos:column="66">.</op:operator><name pos:line="1794" pos:column="67">longName</name></expr>;</expr_stmt></else></if>

	<if pos:line="1796" pos:column="9">if <condition pos:line="1796" pos:column="12">(<expr><name pos:line="1796" pos:column="13">langType</name> <op:operator pos:line="1796" pos:column="22">==</op:operator> <name pos:line="1796" pos:column="25">L_USER</name></expr>)</condition><then pos:line="1796" pos:column="32">
	<block pos:line="1797" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1798" pos:column="17">Buffer</name> <type:modifier pos:line="1798" pos:column="24">*</type:modifier></type> <name pos:line="1798" pos:column="26">currentBuf</name> <init pos:line="1798" pos:column="37">= <expr><call><name><name pos:line="1798" pos:column="39">_pEditView</name><op:operator pos:line="1798" pos:column="49">-&gt;</op:operator><name pos:line="1798" pos:column="51">getCurrentBuffer</name></name><argument_list pos:line="1798" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1799" pos:column="17">if <condition pos:line="1799" pos:column="20">(<expr><call><name><name pos:line="1799" pos:column="21">currentBuf</name><op:operator pos:line="1799" pos:column="31">-&gt;</op:operator><name pos:line="1799" pos:column="33">isUserDefineLangExt</name></name><argument_list pos:line="1799" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="1799" pos:column="55">
		<block pos:line="1800" pos:column="17">{
			<expr_stmt><expr><name pos:line="1801" pos:column="25">str2Show</name> <op:operator pos:line="1801" pos:column="34">+=</op:operator> <call><name pos:line="1801" pos:column="37">TEXT</name><argument_list pos:line="1801" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="1801" pos:column="42">" - "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1802" pos:column="25">str2Show</name> <op:operator pos:line="1802" pos:column="34">+=</op:operator> <call><name><name pos:line="1802" pos:column="37">currentBuf</name><op:operator pos:line="1802" pos:column="47">-&gt;</op:operator><name pos:line="1802" pos:column="49">getUserDefineLangName</name></name><argument_list pos:line="1802" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
	<return pos:line="1805" pos:column="9">return <expr><name pos:line="1805" pos:column="16">str2Show</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1808" pos:column="1">void</name></type> <name><name pos:line="1808" pos:column="6">Notepad_plus</name><op:operator pos:line="1808" pos:column="18">::</op:operator><name pos:line="1808" pos:column="20">copyMarkedLines</name></name><parameter_list pos:line="1808" pos:column="35">()</parameter_list>
<block pos:line="1809" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1810" pos:column="9">int</name></type> <name pos:line="1810" pos:column="13">lastLine</name> <init pos:line="1810" pos:column="22">= <expr><call><name><name pos:line="1810" pos:column="24">_pEditView</name><op:operator pos:line="1810" pos:column="34">-&gt;</op:operator><name pos:line="1810" pos:column="36">lastZeroBasedLineNumber</name></name><argument_list pos:line="1810" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1811" pos:column="9">generic_string</name></type> <name pos:line="1811" pos:column="24">globalStr</name> <init pos:line="1811" pos:column="34">= <expr><call><name pos:line="1811" pos:column="36">TEXT</name><argument_list pos:line="1811" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1811" pos:column="41">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="1812" pos:column="9">for (<init><decl><type><name pos:line="1812" pos:column="14">int</name></type> <name pos:line="1812" pos:column="18">i</name> <init pos:line="1812" pos:column="20">= <expr><name pos:line="1812" pos:column="22">lastLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="1812" pos:column="33">i</name> <op:operator pos:line="1812" pos:column="35">&gt;=</op:operator> <lit:literal type="number" pos:line="1812" pos:column="38">0</lit:literal></expr> ;</condition> <incr><expr><name pos:line="1812" pos:column="42">i</name><op:operator pos:line="1812" pos:column="43">--</op:operator></expr></incr>)
	<block pos:line="1813" pos:column="9">{
		<if pos:line="1814" pos:column="17">if <condition pos:line="1814" pos:column="20">(<expr><call><name pos:line="1814" pos:column="21">bookmarkPresent</name><argument_list pos:line="1814" pos:column="36">(<argument><expr><name pos:line="1814" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1814" pos:column="40">
		<block pos:line="1815" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1816" pos:column="25">generic_string</name></type> <name pos:line="1816" pos:column="40">currentStr</name> <init pos:line="1816" pos:column="51">= <expr><call><name pos:line="1816" pos:column="53">getMarkedLine</name><argument_list pos:line="1816" pos:column="66">(<argument><expr><name pos:line="1816" pos:column="67">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="1816" pos:column="70">+</op:operator> <name pos:line="1816" pos:column="72">globalStr</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1817" pos:column="25">globalStr</name> <op:operator pos:line="1817" pos:column="35">=</op:operator> <name pos:line="1817" pos:column="37">currentStr</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><call><name pos:line="1820" pos:column="9">str2Cliboard</name><argument_list pos:line="1820" pos:column="21">(<argument><expr><call><name><name pos:line="1820" pos:column="22">globalStr</name><op:operator pos:line="1820" pos:column="31">.</op:operator><name pos:line="1820" pos:column="32">c_str</name></name><argument_list pos:line="1820" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1823" pos:column="1">void</name></type> <name><name pos:line="1823" pos:column="6">Notepad_plus</name><op:operator pos:line="1823" pos:column="18">::</op:operator><name pos:line="1823" pos:column="20">cutMarkedLines</name></name><parameter_list pos:line="1823" pos:column="34">()</parameter_list>
<block pos:line="1824" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1825" pos:column="9">int</name></type> <name pos:line="1825" pos:column="13">lastLine</name> <init pos:line="1825" pos:column="22">= <expr><call><name><name pos:line="1825" pos:column="24">_pEditView</name><op:operator pos:line="1825" pos:column="34">-&gt;</op:operator><name pos:line="1825" pos:column="36">lastZeroBasedLineNumber</name></name><argument_list pos:line="1825" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1826" pos:column="9">generic_string</name></type> <name pos:line="1826" pos:column="24">globalStr</name> <init pos:line="1826" pos:column="34">= <expr><call><name pos:line="1826" pos:column="36">TEXT</name><argument_list pos:line="1826" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1826" pos:column="41">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1828" pos:column="9">_pEditView</name><op:operator pos:line="1828" pos:column="19">-&gt;</op:operator><name pos:line="1828" pos:column="21">execute</name></name><argument_list pos:line="1828" pos:column="28">(<argument><expr><name pos:line="1828" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="1829" pos:column="9">for (<init><decl><type><name pos:line="1829" pos:column="14">int</name></type> <name pos:line="1829" pos:column="18">i</name> <init pos:line="1829" pos:column="20">= <expr><name pos:line="1829" pos:column="22">lastLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="1829" pos:column="33">i</name> <op:operator pos:line="1829" pos:column="35">&gt;=</op:operator> <lit:literal type="number" pos:line="1829" pos:column="38">0</lit:literal></expr> ;</condition> <incr><expr><name pos:line="1829" pos:column="42">i</name><op:operator pos:line="1829" pos:column="43">--</op:operator></expr></incr>)
	<block pos:line="1830" pos:column="9">{
		<if pos:line="1831" pos:column="17">if <condition pos:line="1831" pos:column="20">(<expr><call><name pos:line="1831" pos:column="21">bookmarkPresent</name><argument_list pos:line="1831" pos:column="36">(<argument><expr><name pos:line="1831" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1831" pos:column="40">
		<block pos:line="1832" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1833" pos:column="25">generic_string</name></type> <name pos:line="1833" pos:column="40">currentStr</name> <init pos:line="1833" pos:column="51">= <expr><call><name pos:line="1833" pos:column="53">getMarkedLine</name><argument_list pos:line="1833" pos:column="66">(<argument><expr><name pos:line="1833" pos:column="67">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="1833" pos:column="70">+</op:operator> <name pos:line="1833" pos:column="72">globalStr</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1834" pos:column="25">globalStr</name> <op:operator pos:line="1834" pos:column="35">=</op:operator> <name pos:line="1834" pos:column="37">currentStr</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1836" pos:column="25">deleteMarkedline</name><argument_list pos:line="1836" pos:column="41">(<argument><expr><name pos:line="1836" pos:column="42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="1839" pos:column="9">_pEditView</name><op:operator pos:line="1839" pos:column="19">-&gt;</op:operator><name pos:line="1839" pos:column="21">execute</name></name><argument_list pos:line="1839" pos:column="28">(<argument><expr><name pos:line="1839" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1840" pos:column="9">str2Cliboard</name><argument_list pos:line="1840" pos:column="21">(<argument><expr><call><name><name pos:line="1840" pos:column="22">globalStr</name><op:operator pos:line="1840" pos:column="31">.</op:operator><name pos:line="1840" pos:column="32">c_str</name></name><argument_list pos:line="1840" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1843" pos:column="1">void</name></type> <name><name pos:line="1843" pos:column="6">Notepad_plus</name><op:operator pos:line="1843" pos:column="18">::</op:operator><name pos:line="1843" pos:column="20">deleteMarkedLines</name></name><parameter_list pos:line="1843" pos:column="37">(<param><decl><type><name pos:line="1843" pos:column="38">bool</name></type> <name pos:line="1843" pos:column="43">isMarked</name></decl></param>)</parameter_list>
<block pos:line="1844" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1845" pos:column="9">int</name></type> <name pos:line="1845" pos:column="13">lastLine</name> <init pos:line="1845" pos:column="22">= <expr><call><name><name pos:line="1845" pos:column="24">_pEditView</name><op:operator pos:line="1845" pos:column="34">-&gt;</op:operator><name pos:line="1845" pos:column="36">lastZeroBasedLineNumber</name></name><argument_list pos:line="1845" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1847" pos:column="9">_pEditView</name><op:operator pos:line="1847" pos:column="19">-&gt;</op:operator><name pos:line="1847" pos:column="21">execute</name></name><argument_list pos:line="1847" pos:column="28">(<argument><expr><name pos:line="1847" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="1848" pos:column="9">for (<init><decl><type><name pos:line="1848" pos:column="14">int</name></type> <name pos:line="1848" pos:column="18">i</name> <init pos:line="1848" pos:column="20">= <expr><name pos:line="1848" pos:column="22">lastLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="1848" pos:column="33">i</name> <op:operator pos:line="1848" pos:column="35">&gt;=</op:operator> <lit:literal type="number" pos:line="1848" pos:column="38">0</lit:literal></expr> ;</condition> <incr><expr><name pos:line="1848" pos:column="42">i</name><op:operator pos:line="1848" pos:column="43">--</op:operator></expr></incr>)
	<block pos:line="1849" pos:column="9">{
		<if pos:line="1850" pos:column="17">if <condition pos:line="1850" pos:column="20">(<expr><call><name pos:line="1850" pos:column="21">bookmarkPresent</name><argument_list pos:line="1850" pos:column="36">(<argument><expr><name pos:line="1850" pos:column="37">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="1850" pos:column="40">==</op:operator> <name pos:line="1850" pos:column="43">isMarked</name></expr>)</condition><then pos:line="1850" pos:column="52">
			<expr_stmt><expr><call><name pos:line="1851" pos:column="25">deleteMarkedline</name><argument_list pos:line="1851" pos:column="41">(<argument><expr><name pos:line="1851" pos:column="42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="1853" pos:column="9">_pEditView</name><op:operator pos:line="1853" pos:column="19">-&gt;</op:operator><name pos:line="1853" pos:column="21">execute</name></name><argument_list pos:line="1853" pos:column="28">(<argument><expr><name pos:line="1853" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1856" pos:column="1">void</name></type> <name><name pos:line="1856" pos:column="6">Notepad_plus</name><op:operator pos:line="1856" pos:column="18">::</op:operator><name pos:line="1856" pos:column="20">pasteToMarkedLines</name></name><parameter_list pos:line="1856" pos:column="38">()</parameter_list>
<block pos:line="1857" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1858" pos:column="9">int</name></type> <name pos:line="1858" pos:column="13">clipFormat</name></decl>;</decl_stmt>
<cpp:ifdef pos:line="1859" pos:column="1">#<cpp:directive pos:line="1859" pos:column="2">ifdef</cpp:directive> <name pos:line="1859" pos:column="8">UNICODE</name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="1860" pos:column="9">clipFormat</name> <op:operator pos:line="1860" pos:column="20">=</op:operator> <name pos:line="1860" pos:column="22">CF_UNICODETEXT</name></expr>;</expr_stmt>
<cpp:else pos:line="1861" pos:column="1">#<cpp:directive pos:line="1861" pos:column="2">else</cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="1862" pos:column="9">clipFormat</name> <op:operator pos:line="1862" pos:column="20">=</op:operator> <name pos:line="1862" pos:column="22">CF_TEXT</name></expr>;</expr_stmt>
<cpp:endif pos:line="1863" pos:column="1">#<cpp:directive pos:line="1863" pos:column="2">endif</cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="1864" pos:column="9">BOOL</name></type> <name pos:line="1864" pos:column="14">canPaste</name> <init pos:line="1864" pos:column="23">= <expr><call><name><op:operator pos:line="1864" pos:column="25">::</op:operator><name pos:line="1864" pos:column="27">IsClipboardFormatAvailable</name></name><argument_list pos:line="1864" pos:column="53">(<argument><expr><name pos:line="1864" pos:column="54">clipFormat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1865" pos:column="9">if <condition pos:line="1865" pos:column="12">(<expr><op:operator pos:line="1865" pos:column="13">!</op:operator><name pos:line="1865" pos:column="14">canPaste</name></expr>)</condition><then pos:line="1865" pos:column="23">
		<return pos:line="1866" pos:column="17">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="1867" pos:column="9">int</name></type> <name pos:line="1867" pos:column="13">lastLine</name> <init pos:line="1867" pos:column="22">= <expr><call><name><name pos:line="1867" pos:column="24">_pEditView</name><op:operator pos:line="1867" pos:column="34">-&gt;</op:operator><name pos:line="1867" pos:column="36">lastZeroBasedLineNumber</name></name><argument_list pos:line="1867" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1869" pos:column="9">::</op:operator><name pos:line="1869" pos:column="11">OpenClipboard</name></name><argument_list pos:line="1869" pos:column="24">(<argument><expr><call><name><name pos:line="1869" pos:column="25">_pPublicInterface</name><op:operator pos:line="1869" pos:column="42">-&gt;</op:operator><name pos:line="1869" pos:column="44">getHSelf</name></name><argument_list pos:line="1869" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1870" pos:column="9">HANDLE</name></type> <name pos:line="1870" pos:column="16">clipboardData</name> <init pos:line="1870" pos:column="30">= <expr><call><name><op:operator pos:line="1870" pos:column="32">::</op:operator><name pos:line="1870" pos:column="34">GetClipboardData</name></name><argument_list pos:line="1870" pos:column="50">(<argument><expr><name pos:line="1870" pos:column="51">clipFormat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1871" pos:column="9">::</op:operator><name pos:line="1871" pos:column="11">GlobalSize</name></name><argument_list pos:line="1871" pos:column="21">(<argument><expr><name pos:line="1871" pos:column="22">clipboardData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1872" pos:column="9">LPVOID</name></type> <name pos:line="1872" pos:column="16">clipboardDataPtr</name> <init pos:line="1872" pos:column="33">= <expr><call><name><op:operator pos:line="1872" pos:column="35">::</op:operator><name pos:line="1872" pos:column="37">GlobalLock</name></name><argument_list pos:line="1872" pos:column="47">(<argument><expr><name pos:line="1872" pos:column="48">clipboardData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1874" pos:column="9">generic_string</name></type> <name pos:line="1874" pos:column="24">clipboardStr</name> <init pos:line="1874" pos:column="37">= <expr><op:operator pos:line="1874" pos:column="39">(</op:operator>const <name pos:line="1874" pos:column="46">TCHAR</name> <op:operator pos:line="1874" pos:column="52">*</op:operator><op:operator pos:line="1874" pos:column="53">)</op:operator><name pos:line="1874" pos:column="54">clipboardDataPtr</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1876" pos:column="9">::</op:operator><name pos:line="1876" pos:column="11">GlobalUnlock</name></name><argument_list pos:line="1876" pos:column="23">(<argument><expr><name pos:line="1876" pos:column="24">clipboardData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1877" pos:column="9">::</op:operator><name pos:line="1877" pos:column="11">CloseClipboard</name></name><argument_list pos:line="1877" pos:column="25">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1879" pos:column="9">_pEditView</name><op:operator pos:line="1879" pos:column="19">-&gt;</op:operator><name pos:line="1879" pos:column="21">execute</name></name><argument_list pos:line="1879" pos:column="28">(<argument><expr><name pos:line="1879" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="1880" pos:column="9">for (<init><decl><type><name pos:line="1880" pos:column="14">int</name></type> <name pos:line="1880" pos:column="18">i</name> <init pos:line="1880" pos:column="20">= <expr><name pos:line="1880" pos:column="22">lastLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="1880" pos:column="33">i</name> <op:operator pos:line="1880" pos:column="35">&gt;=</op:operator> <lit:literal type="number" pos:line="1880" pos:column="38">0</lit:literal></expr> ;</condition> <incr><expr><name pos:line="1880" pos:column="42">i</name><op:operator pos:line="1880" pos:column="43">--</op:operator></expr></incr>)
	<block pos:line="1881" pos:column="9">{
		<if pos:line="1882" pos:column="17">if <condition pos:line="1882" pos:column="20">(<expr><call><name pos:line="1882" pos:column="21">bookmarkPresent</name><argument_list pos:line="1882" pos:column="36">(<argument><expr><name pos:line="1882" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1882" pos:column="40">
		<block pos:line="1883" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1884" pos:column="25">replaceMarkedline</name><argument_list pos:line="1884" pos:column="42">(<argument><expr><name pos:line="1884" pos:column="43">i</name></expr></argument>, <argument><expr><call><name><name pos:line="1884" pos:column="46">clipboardStr</name><op:operator pos:line="1884" pos:column="58">.</op:operator><name pos:line="1884" pos:column="59">c_str</name></name><argument_list pos:line="1884" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="1887" pos:column="9">_pEditView</name><op:operator pos:line="1887" pos:column="19">-&gt;</op:operator><name pos:line="1887" pos:column="21">execute</name></name><argument_list pos:line="1887" pos:column="28">(<argument><expr><name pos:line="1887" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1890" pos:column="1">void</name></type> <name><name pos:line="1890" pos:column="6">Notepad_plus</name><op:operator pos:line="1890" pos:column="18">::</op:operator><name pos:line="1890" pos:column="20">deleteMarkedline</name></name><parameter_list pos:line="1890" pos:column="36">(<param><decl><type><name pos:line="1890" pos:column="37">int</name></type> <name pos:line="1890" pos:column="41">ln</name></decl></param>)</parameter_list>
<block pos:line="1891" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1892" pos:column="9">int</name></type> <name pos:line="1892" pos:column="13">lineLen</name> <init pos:line="1892" pos:column="21">= <expr><call><name><name pos:line="1892" pos:column="23">_pEditView</name><op:operator pos:line="1892" pos:column="33">-&gt;</op:operator><name pos:line="1892" pos:column="35">execute</name></name><argument_list pos:line="1892" pos:column="42">(<argument><expr><name pos:line="1892" pos:column="43">SCI_LINELENGTH</name></expr></argument>, <argument><expr><name pos:line="1892" pos:column="59">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1893" pos:column="9">int</name></type> <name pos:line="1893" pos:column="13">lineBegin</name> <init pos:line="1893" pos:column="23">= <expr><call><name><name pos:line="1893" pos:column="25">_pEditView</name><op:operator pos:line="1893" pos:column="35">-&gt;</op:operator><name pos:line="1893" pos:column="37">execute</name></name><argument_list pos:line="1893" pos:column="44">(<argument><expr><name pos:line="1893" pos:column="45">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="1893" pos:column="67">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1895" pos:column="9">bookmarkDelete</name><argument_list pos:line="1895" pos:column="23">(<argument><expr><name pos:line="1895" pos:column="24">ln</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1896" pos:column="9">TCHAR</name></type> <name><name pos:line="1896" pos:column="15">emptyString</name><index pos:line="1896" pos:column="26">[<expr><lit:literal type="number" pos:line="1896" pos:column="27">2</lit:literal></expr>]</index></name> <init pos:line="1896" pos:column="30">= <expr><call><name pos:line="1896" pos:column="32">TEXT</name><argument_list pos:line="1896" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1896" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1897" pos:column="9">_pEditView</name><op:operator pos:line="1897" pos:column="19">-&gt;</op:operator><name pos:line="1897" pos:column="21">replaceTarget</name></name><argument_list pos:line="1897" pos:column="34">(<argument><expr><name pos:line="1897" pos:column="35">emptyString</name></expr></argument>, <argument><expr><name pos:line="1897" pos:column="48">lineBegin</name></expr></argument>, <argument><expr><name pos:line="1897" pos:column="59">lineBegin</name> <op:operator pos:line="1897" pos:column="69">+</op:operator> <name pos:line="1897" pos:column="71">lineLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1900" pos:column="1">void</name></type> <name><name pos:line="1900" pos:column="6">Notepad_plus</name><op:operator pos:line="1900" pos:column="18">::</op:operator><name pos:line="1900" pos:column="20">inverseMarks</name></name><parameter_list pos:line="1900" pos:column="32">()</parameter_list>
<block pos:line="1901" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1902" pos:column="9">int</name></type> <name pos:line="1902" pos:column="13">lastLine</name> <init pos:line="1902" pos:column="22">= <expr><call><name><name pos:line="1902" pos:column="24">_pEditView</name><op:operator pos:line="1902" pos:column="34">-&gt;</op:operator><name pos:line="1902" pos:column="36">lastZeroBasedLineNumber</name></name><argument_list pos:line="1902" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="1903" pos:column="9">for (<init><decl><type><name pos:line="1903" pos:column="14">int</name></type> <name pos:line="1903" pos:column="18">i</name> <init pos:line="1903" pos:column="20">= <expr><lit:literal type="number" pos:line="1903" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1903" pos:column="26">i</name> <op:operator pos:line="1903" pos:column="28">&lt;=</op:operator> <name pos:line="1903" pos:column="31">lastLine</name></expr>  ;</condition> <incr><expr><name pos:line="1903" pos:column="43">i</name><op:operator pos:line="1903" pos:column="44">++</op:operator></expr></incr>)
	<block pos:line="1904" pos:column="9">{
		<if pos:line="1905" pos:column="17">if <condition pos:line="1905" pos:column="20">(<expr><call><name pos:line="1905" pos:column="21">bookmarkPresent</name><argument_list pos:line="1905" pos:column="36">(<argument><expr><name pos:line="1905" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1905" pos:column="40">
		<block pos:line="1906" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1907" pos:column="25">bookmarkDelete</name><argument_list pos:line="1907" pos:column="39">(<argument><expr><name pos:line="1907" pos:column="40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1909" pos:column="17">else
		<block pos:line="1910" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1911" pos:column="25">bookmarkAdd</name><argument_list pos:line="1911" pos:column="36">(<argument><expr><name pos:line="1911" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="1916" pos:column="1">void</name></type> <name><name pos:line="1916" pos:column="6">Notepad_plus</name><op:operator pos:line="1916" pos:column="18">::</op:operator><name pos:line="1916" pos:column="20">replaceMarkedline</name></name><parameter_list pos:line="1916" pos:column="37">(<param><decl><type><name pos:line="1916" pos:column="38">int</name></type> <name pos:line="1916" pos:column="42">ln</name></decl></param>, <param><decl><type><specifier pos:line="1916" pos:column="46">const</specifier> <name pos:line="1916" pos:column="52">TCHAR</name> <type:modifier pos:line="1916" pos:column="58">*</type:modifier></type><name pos:line="1916" pos:column="59">str</name></decl></param>)</parameter_list>
<block pos:line="1917" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1918" pos:column="9">int</name></type> <name pos:line="1918" pos:column="13">lineBegin</name> <init pos:line="1918" pos:column="23">= <expr><call><name><name pos:line="1918" pos:column="25">_pEditView</name><op:operator pos:line="1918" pos:column="35">-&gt;</op:operator><name pos:line="1918" pos:column="37">execute</name></name><argument_list pos:line="1918" pos:column="44">(<argument><expr><name pos:line="1918" pos:column="45">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="1918" pos:column="67">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1919" pos:column="9">int</name></type> <name pos:line="1919" pos:column="13">lineEnd</name> <init pos:line="1919" pos:column="21">= <expr><call><name><name pos:line="1919" pos:column="23">_pEditView</name><op:operator pos:line="1919" pos:column="33">-&gt;</op:operator><name pos:line="1919" pos:column="35">execute</name></name><argument_list pos:line="1919" pos:column="42">(<argument><expr><name pos:line="1919" pos:column="43">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="1919" pos:column="67">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1921" pos:column="9">_pEditView</name><op:operator pos:line="1921" pos:column="19">-&gt;</op:operator><name pos:line="1921" pos:column="21">replaceTarget</name></name><argument_list pos:line="1921" pos:column="34">(<argument><expr><name pos:line="1921" pos:column="35">str</name></expr></argument>, <argument><expr><name pos:line="1921" pos:column="40">lineBegin</name></expr></argument>, <argument><expr><name pos:line="1921" pos:column="51">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1924" pos:column="1">generic_string</name></type> <name><name pos:line="1924" pos:column="16">Notepad_plus</name><op:operator pos:line="1924" pos:column="28">::</op:operator><name pos:line="1924" pos:column="30">getMarkedLine</name></name><parameter_list pos:line="1924" pos:column="43">(<param><decl><type><name pos:line="1924" pos:column="44">int</name></type> <name pos:line="1924" pos:column="48">ln</name></decl></param>)</parameter_list>
<block pos:line="1925" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1926" pos:column="9">int</name></type> <name pos:line="1926" pos:column="13">lineLen</name> <init pos:line="1926" pos:column="21">= <expr><call><name><name pos:line="1926" pos:column="23">_pEditView</name><op:operator pos:line="1926" pos:column="33">-&gt;</op:operator><name pos:line="1926" pos:column="35">execute</name></name><argument_list pos:line="1926" pos:column="42">(<argument><expr><name pos:line="1926" pos:column="43">SCI_LINELENGTH</name></expr></argument>, <argument><expr><name pos:line="1926" pos:column="59">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1927" pos:column="9">int</name></type> <name pos:line="1927" pos:column="13">lineBegin</name> <init pos:line="1927" pos:column="23">= <expr><call><name><name pos:line="1927" pos:column="25">_pEditView</name><op:operator pos:line="1927" pos:column="35">-&gt;</op:operator><name pos:line="1927" pos:column="37">execute</name></name><argument_list pos:line="1927" pos:column="44">(<argument><expr><name pos:line="1927" pos:column="45">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="1927" pos:column="67">ln</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1929" pos:column="9">TCHAR</name> <type:modifier pos:line="1929" pos:column="15">*</type:modifier></type> <name pos:line="1929" pos:column="17">buf</name> <init pos:line="1929" pos:column="21">= <expr><op:operator pos:line="1929" pos:column="23">new</op:operator> <name><name pos:line="1929" pos:column="27">TCHAR</name><index pos:line="1929" pos:column="32">[<expr><name pos:line="1929" pos:column="33">lineLen</name><op:operator pos:line="1929" pos:column="40">+</op:operator><lit:literal type="number" pos:line="1929" pos:column="41">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1930" pos:column="9">_pEditView</name><op:operator pos:line="1930" pos:column="19">-&gt;</op:operator><name pos:line="1930" pos:column="21">getGenericText</name></name><argument_list pos:line="1930" pos:column="35">(<argument><expr><name pos:line="1930" pos:column="36">buf</name></expr></argument>, <argument><expr><name pos:line="1930" pos:column="41">lineLen</name> <op:operator pos:line="1930" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="1930" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1930" pos:column="54">lineBegin</name></expr></argument>, <argument><expr><name pos:line="1930" pos:column="65">lineBegin</name> <op:operator pos:line="1930" pos:column="75">+</op:operator> <name pos:line="1930" pos:column="77">lineLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1931" pos:column="9">generic_string</name></type> <name pos:line="1931" pos:column="24">line</name> <init pos:line="1931" pos:column="29">= <expr><name pos:line="1931" pos:column="31">buf</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="1932" pos:column="9">delete</op:operator> <index pos:line="1932" pos:column="16">[]</index> <name pos:line="1932" pos:column="19">buf</name></expr>;</expr_stmt>

	<return pos:line="1934" pos:column="9">return <expr><name pos:line="1934" pos:column="16">line</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1937" pos:column="1">void</name></type> <name><name pos:line="1937" pos:column="6">Notepad_plus</name><op:operator pos:line="1937" pos:column="18">::</op:operator><name pos:line="1937" pos:column="20">findMatchingBracePos</name></name><parameter_list pos:line="1937" pos:column="40">(<param><decl><type><name pos:line="1937" pos:column="41">int</name> <type:modifier pos:line="1937" pos:column="45">&amp;</type:modifier></type> <name pos:line="1937" pos:column="47">braceAtCaret</name></decl></param>, <param><decl><type><name pos:line="1937" pos:column="61">int</name> <type:modifier pos:line="1937" pos:column="65">&amp;</type:modifier></type> <name pos:line="1937" pos:column="67">braceOpposite</name></decl></param>)</parameter_list>
<block pos:line="1938" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1939" pos:column="9">int</name></type> <name pos:line="1939" pos:column="13">caretPos</name> <init pos:line="1939" pos:column="22">= <expr><call><name pos:line="1939" pos:column="24">int</name><argument_list pos:line="1939" pos:column="27">(<argument><expr><call><name><name pos:line="1939" pos:column="28">_pEditView</name><op:operator pos:line="1939" pos:column="38">-&gt;</op:operator><name pos:line="1939" pos:column="40">execute</name></name><argument_list pos:line="1939" pos:column="47">(<argument><expr><name pos:line="1939" pos:column="48">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1940" pos:column="9">braceAtCaret</name> <op:operator pos:line="1940" pos:column="22">=</op:operator> <op:operator pos:line="1940" pos:column="24">-</op:operator><lit:literal type="number" pos:line="1940" pos:column="25">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1941" pos:column="9">braceOpposite</name> <op:operator pos:line="1941" pos:column="23">=</op:operator> <op:operator pos:line="1941" pos:column="25">-</op:operator><lit:literal type="number" pos:line="1941" pos:column="26">1</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1942" pos:column="9">TCHAR</name></type> <name pos:line="1942" pos:column="15">charBefore</name> <init pos:line="1942" pos:column="26">= <expr><lit:literal type="char" pos:line="1942" pos:column="28">'\0'</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1944" pos:column="9">int</name></type> <name pos:line="1944" pos:column="13">lengthDoc</name> <init pos:line="1944" pos:column="23">= <expr><call><name pos:line="1944" pos:column="25">int</name><argument_list pos:line="1944" pos:column="28">(<argument><expr><call><name><name pos:line="1944" pos:column="29">_pEditView</name><op:operator pos:line="1944" pos:column="39">-&gt;</op:operator><name pos:line="1944" pos:column="41">execute</name></name><argument_list pos:line="1944" pos:column="48">(<argument><expr><name pos:line="1944" pos:column="49">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="1946" pos:column="9">if <condition pos:line="1946" pos:column="12">(<expr><op:operator pos:line="1946" pos:column="13">(</op:operator><name pos:line="1946" pos:column="14">lengthDoc</name> <op:operator pos:line="1946" pos:column="24">&gt;</op:operator> <lit:literal type="number" pos:line="1946" pos:column="26">0</lit:literal><op:operator pos:line="1946" pos:column="27">)</op:operator> <op:operator pos:line="1946" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="1946" pos:column="32">(</op:operator><name pos:line="1946" pos:column="33">caretPos</name> <op:operator pos:line="1946" pos:column="42">&gt;</op:operator> <lit:literal type="number" pos:line="1946" pos:column="44">0</lit:literal><op:operator pos:line="1946" pos:column="45">)</op:operator></expr>)</condition><then pos:line="1946" pos:column="47">
    <block pos:line="1947" pos:column="5">{
		<expr_stmt><expr><name pos:line="1948" pos:column="17">charBefore</name> <op:operator pos:line="1948" pos:column="28">=</op:operator> <call><name pos:line="1948" pos:column="30">TCHAR</name><argument_list pos:line="1948" pos:column="35">(<argument><expr><call><name><name pos:line="1948" pos:column="36">_pEditView</name><op:operator pos:line="1948" pos:column="46">-&gt;</op:operator><name pos:line="1948" pos:column="48">execute</name></name><argument_list pos:line="1948" pos:column="55">(<argument><expr><name pos:line="1948" pos:column="56">SCI_GETCHARAT</name></expr></argument>, <argument><expr><name pos:line="1948" pos:column="71">caretPos</name> <op:operator pos:line="1948" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="1948" pos:column="82">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1948" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="1950" pos:column="9">// Priority goes to character before caret</comment>
	<if pos:line="1951" pos:column="9">if <condition pos:line="1951" pos:column="12">(<expr><name pos:line="1951" pos:column="13">charBefore</name> <op:operator pos:line="1951" pos:column="24">&amp;&amp;</op:operator> <call><name pos:line="1951" pos:column="27">generic_strchr</name><argument_list pos:line="1951" pos:column="41">(<argument><expr><call><name pos:line="1951" pos:column="42">TEXT</name><argument_list pos:line="1951" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="1951" pos:column="47">"[](){}"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1951" pos:column="58">charBefore</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1951" pos:column="70">
    <block pos:line="1952" pos:column="5">{
		<expr_stmt><expr><name pos:line="1953" pos:column="17">braceAtCaret</name> <op:operator pos:line="1953" pos:column="30">=</op:operator> <name pos:line="1953" pos:column="32">caretPos</name> <op:operator pos:line="1953" pos:column="41">-</op:operator> <lit:literal type="number" pos:line="1953" pos:column="43">1</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="1956" pos:column="9">if <condition pos:line="1956" pos:column="12">(<expr><name pos:line="1956" pos:column="13">lengthDoc</name> <op:operator pos:line="1956" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="1956" pos:column="25">0</lit:literal>  <op:operator pos:line="1956" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="1956" pos:column="31">(</op:operator><name pos:line="1956" pos:column="32">braceAtCaret</name> <op:operator pos:line="1956" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="1956" pos:column="47">0</lit:literal><op:operator pos:line="1956" pos:column="48">)</op:operator></expr>)</condition><then pos:line="1956" pos:column="50">
    <block pos:line="1957" pos:column="5">{
		<comment type="line" pos:line="1958" pos:column="17">// No brace found so check other side</comment>
		<decl_stmt><decl><type><name pos:line="1959" pos:column="17">TCHAR</name></type> <name pos:line="1959" pos:column="23">charAfter</name> <init pos:line="1959" pos:column="33">= <expr><call><name pos:line="1959" pos:column="35">TCHAR</name><argument_list pos:line="1959" pos:column="40">(<argument><expr><call><name><name pos:line="1959" pos:column="41">_pEditView</name><op:operator pos:line="1959" pos:column="51">-&gt;</op:operator><name pos:line="1959" pos:column="53">execute</name></name><argument_list pos:line="1959" pos:column="60">(<argument><expr><name pos:line="1959" pos:column="61">SCI_GETCHARAT</name></expr></argument>, <argument><expr><name pos:line="1959" pos:column="76">caretPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1959" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1960" pos:column="17">if <condition pos:line="1960" pos:column="20">(<expr><name pos:line="1960" pos:column="21">charAfter</name> <op:operator pos:line="1960" pos:column="31">&amp;&amp;</op:operator> <call><name pos:line="1960" pos:column="34">generic_strchr</name><argument_list pos:line="1960" pos:column="48">(<argument><expr><call><name pos:line="1960" pos:column="49">TEXT</name><argument_list pos:line="1960" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1960" pos:column="54">"[](){}"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1960" pos:column="65">charAfter</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1960" pos:column="76">
        <block pos:line="1961" pos:column="9">{
			<expr_stmt><expr><name pos:line="1962" pos:column="25">braceAtCaret</name> <op:operator pos:line="1962" pos:column="38">=</op:operator> <name pos:line="1962" pos:column="40">caretPos</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="1965" pos:column="9">if <condition pos:line="1965" pos:column="12">(<expr><name pos:line="1965" pos:column="13">braceAtCaret</name> <op:operator pos:line="1965" pos:column="26">&gt;=</op:operator> <lit:literal type="number" pos:line="1965" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="1965" pos:column="31">
		<expr_stmt><expr><name pos:line="1966" pos:column="17">braceOpposite</name> <op:operator pos:line="1966" pos:column="31">=</op:operator> <call><name pos:line="1966" pos:column="33">int</name><argument_list pos:line="1966" pos:column="36">(<argument><expr><call><name><name pos:line="1966" pos:column="37">_pEditView</name><op:operator pos:line="1966" pos:column="47">-&gt;</op:operator><name pos:line="1966" pos:column="49">execute</name></name><argument_list pos:line="1966" pos:column="56">(<argument><expr><name pos:line="1966" pos:column="57">SCI_BRACEMATCH</name></expr></argument>, <argument><expr><name pos:line="1966" pos:column="73">braceAtCaret</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1966" pos:column="87">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<comment type="line" pos:line="1969" pos:column="1">// return true if 1 or 2 (matched) brace(s) is found</comment>
<function><type><name pos:line="1970" pos:column="1">bool</name></type> <name><name pos:line="1970" pos:column="6">Notepad_plus</name><op:operator pos:line="1970" pos:column="18">::</op:operator><name pos:line="1970" pos:column="20">braceMatch</name></name><parameter_list pos:line="1970" pos:column="30">()</parameter_list>
<block pos:line="1971" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1972" pos:column="9">int</name></type> <name pos:line="1972" pos:column="13">braceAtCaret</name> <init pos:line="1972" pos:column="26">= <expr><op:operator pos:line="1972" pos:column="28">-</op:operator><lit:literal type="number" pos:line="1972" pos:column="29">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1973" pos:column="9">int</name></type> <name pos:line="1973" pos:column="13">braceOpposite</name> <init pos:line="1973" pos:column="27">= <expr><op:operator pos:line="1973" pos:column="29">-</op:operator><lit:literal type="number" pos:line="1973" pos:column="30">1</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1974" pos:column="9">findMatchingBracePos</name><argument_list pos:line="1974" pos:column="29">(<argument><expr><name pos:line="1974" pos:column="30">braceAtCaret</name></expr></argument>, <argument><expr><name pos:line="1974" pos:column="44">braceOpposite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1976" pos:column="9">if <condition pos:line="1976" pos:column="12">(<expr><op:operator pos:line="1976" pos:column="13">(</op:operator><name pos:line="1976" pos:column="14">braceAtCaret</name> <op:operator pos:line="1976" pos:column="27">!=</op:operator> <op:operator pos:line="1976" pos:column="30">-</op:operator><lit:literal type="number" pos:line="1976" pos:column="31">1</lit:literal><op:operator pos:line="1976" pos:column="32">)</op:operator> <op:operator pos:line="1976" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="1976" pos:column="37">(</op:operator><name pos:line="1976" pos:column="38">braceOpposite</name> <op:operator pos:line="1976" pos:column="52">==</op:operator> <op:operator pos:line="1976" pos:column="55">-</op:operator><lit:literal type="number" pos:line="1976" pos:column="56">1</lit:literal><op:operator pos:line="1976" pos:column="57">)</op:operator></expr>)</condition><then pos:line="1976" pos:column="59">
    <block pos:line="1977" pos:column="5">{
		<expr_stmt><expr><call><name><name pos:line="1978" pos:column="17">_pEditView</name><op:operator pos:line="1978" pos:column="27">-&gt;</op:operator><name pos:line="1978" pos:column="29">execute</name></name><argument_list pos:line="1978" pos:column="36">(<argument><expr><name pos:line="1978" pos:column="37">SCI_BRACEBADLIGHT</name></expr></argument>, <argument><expr><name pos:line="1978" pos:column="56">braceAtCaret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1979" pos:column="17">_pEditView</name><op:operator pos:line="1979" pos:column="27">-&gt;</op:operator><name pos:line="1979" pos:column="29">execute</name></name><argument_list pos:line="1979" pos:column="36">(<argument><expr><name pos:line="1979" pos:column="37">SCI_SETHIGHLIGHTGUIDE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1979" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
    <else pos:line="1981" pos:column="5">else
    <block pos:line="1982" pos:column="5">{
		<expr_stmt><expr><call><name><name pos:line="1983" pos:column="17">_pEditView</name><op:operator pos:line="1983" pos:column="27">-&gt;</op:operator><name pos:line="1983" pos:column="29">execute</name></name><argument_list pos:line="1983" pos:column="36">(<argument><expr><name pos:line="1983" pos:column="37">SCI_BRACEHIGHLIGHT</name></expr></argument>, <argument><expr><name pos:line="1983" pos:column="57">braceAtCaret</name></expr></argument>, <argument><expr><name pos:line="1983" pos:column="71">braceOpposite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="1985" pos:column="17">if <condition pos:line="1985" pos:column="20">(<expr><call><name><name pos:line="1985" pos:column="21">_pEditView</name><op:operator pos:line="1985" pos:column="31">-&gt;</op:operator><name pos:line="1985" pos:column="33">isShownIndentGuide</name></name><argument_list pos:line="1985" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="1985" pos:column="54">
        <block pos:line="1986" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="1987" pos:column="13">int</name></type> <name pos:line="1987" pos:column="17">columnAtCaret</name> <init pos:line="1987" pos:column="31">= <expr><call><name pos:line="1987" pos:column="33">int</name><argument_list pos:line="1987" pos:column="36">(<argument><expr><call><name><name pos:line="1987" pos:column="37">_pEditView</name><op:operator pos:line="1987" pos:column="47">-&gt;</op:operator><name pos:line="1987" pos:column="49">execute</name></name><argument_list pos:line="1987" pos:column="56">(<argument><expr><name pos:line="1987" pos:column="57">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="72">braceAtCaret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		    <decl_stmt><decl><type><name pos:line="1988" pos:column="21">int</name></type> <name pos:line="1988" pos:column="25">columnOpposite</name> <init pos:line="1988" pos:column="40">= <expr><call><name pos:line="1988" pos:column="42">int</name><argument_list pos:line="1988" pos:column="45">(<argument><expr><call><name><name pos:line="1988" pos:column="46">_pEditView</name><op:operator pos:line="1988" pos:column="56">-&gt;</op:operator><name pos:line="1988" pos:column="58">execute</name></name><argument_list pos:line="1988" pos:column="65">(<argument><expr><name pos:line="1988" pos:column="66">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="1988" pos:column="81">braceOpposite</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1989" pos:column="25">_pEditView</name><op:operator pos:line="1989" pos:column="35">-&gt;</op:operator><name pos:line="1989" pos:column="37">execute</name></name><argument_list pos:line="1989" pos:column="44">(<argument><expr><name pos:line="1989" pos:column="45">SCI_SETHIGHLIGHTGUIDE</name></expr></argument>, <argument><expr><op:operator pos:line="1989" pos:column="68">(</op:operator><name pos:line="1989" pos:column="69">columnAtCaret</name> <op:operator pos:line="1989" pos:column="83">&lt;</op:operator> <name pos:line="1989" pos:column="85">columnOpposite</name><op:operator pos:line="1989" pos:column="99">)</op:operator><op:operator pos:line="1989" pos:column="100">?</op:operator><name pos:line="1989" pos:column="101">columnAtCaret</name><op:operator pos:line="1989" pos:column="114">:</op:operator><name pos:line="1989" pos:column="115">columnOpposite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></else></if>

    <expr_stmt><expr><call><name pos:line="1993" pos:column="5">enableCommand</name><argument_list pos:line="1993" pos:column="18">(<argument><expr><name pos:line="1993" pos:column="19">IDM_SEARCH_GOTOMATCHINGBRACE</name></expr></argument>, <argument><expr><op:operator pos:line="1993" pos:column="49">(</op:operator><name pos:line="1993" pos:column="50">braceAtCaret</name> <op:operator pos:line="1993" pos:column="63">!=</op:operator> <op:operator pos:line="1993" pos:column="66">-</op:operator><lit:literal type="number" pos:line="1993" pos:column="67">1</lit:literal><op:operator pos:line="1993" pos:column="68">)</op:operator> <op:operator pos:line="1993" pos:column="70">&amp;&amp;</op:operator> <op:operator pos:line="1993" pos:column="73">(</op:operator><name pos:line="1993" pos:column="74">braceOpposite</name> <op:operator pos:line="1993" pos:column="88">!=</op:operator> <op:operator pos:line="1993" pos:column="91">-</op:operator><lit:literal type="number" pos:line="1993" pos:column="92">1</lit:literal><op:operator pos:line="1993" pos:column="93">)</op:operator></expr></argument>, <argument><expr><name pos:line="1993" pos:column="96">MENU</name> <op:operator pos:line="1993" pos:column="101">|</op:operator> <name pos:line="1993" pos:column="103">TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:line="1994" pos:column="5">return <expr><op:operator pos:line="1994" pos:column="12">(</op:operator><name pos:line="1994" pos:column="13">braceAtCaret</name> <op:operator pos:line="1994" pos:column="26">!=</op:operator> <op:operator pos:line="1994" pos:column="29">-</op:operator><lit:literal type="number" pos:line="1994" pos:column="30">1</lit:literal><op:operator pos:line="1994" pos:column="31">)</op:operator></expr>;</return>
}</block></function>


<function><type><name pos:line="1998" pos:column="1">void</name></type> <name><name pos:line="1998" pos:column="6">Notepad_plus</name><op:operator pos:line="1998" pos:column="18">::</op:operator><name pos:line="1998" pos:column="20">setDisplayFormat</name></name><parameter_list pos:line="1998" pos:column="36">(<param><decl><type><name pos:line="1998" pos:column="37">formatType</name></type> <name pos:line="1998" pos:column="48">f</name></decl></param>)</parameter_list>
<block pos:line="1999" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2000" pos:column="9">generic_string</name></type> <name pos:line="2000" pos:column="24">str</name></decl>;</decl_stmt>
	<switch pos:line="2001" pos:column="9">switch <condition pos:line="2001" pos:column="16">(<expr><name pos:line="2001" pos:column="17">f</name></expr>)</condition>
	<block pos:line="2002" pos:column="9">{
		<case pos:line="2003" pos:column="17">case <expr><name pos:line="2003" pos:column="22">MAC_FORMAT</name></expr> :
			<expr_stmt><expr><name pos:line="2004" pos:column="25">str</name> <op:operator pos:line="2004" pos:column="29">=</op:operator> <call><name pos:line="2004" pos:column="31">TEXT</name><argument_list pos:line="2004" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="2004" pos:column="36">"Macintosh"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2005" pos:column="25">break;</break>
		</case><case pos:line="2006" pos:column="17">case <expr><name pos:line="2006" pos:column="22">UNIX_FORMAT</name></expr> :
			<expr_stmt><expr><name pos:line="2007" pos:column="25">str</name> <op:operator pos:line="2007" pos:column="29">=</op:operator> <call><name pos:line="2007" pos:column="31">TEXT</name><argument_list pos:line="2007" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="2007" pos:column="36">"UNIX"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2008" pos:column="25">break;</break>
		</case><default pos:line="2009" pos:column="17">default :
			<expr_stmt><expr><name pos:line="2010" pos:column="25">str</name> <op:operator pos:line="2010" pos:column="29">=</op:operator> <call><name pos:line="2010" pos:column="31">TEXT</name><argument_list pos:line="2010" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="2010" pos:column="36">"Dos\\Windows"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</default>}</block></switch>
	<expr_stmt><expr><call><name><name pos:line="2012" pos:column="9">_statusBar</name><op:operator pos:line="2012" pos:column="19">.</op:operator><name pos:line="2012" pos:column="20">setText</name></name><argument_list pos:line="2012" pos:column="27">(<argument><expr><call><name><name pos:line="2012" pos:column="28">str</name><op:operator pos:line="2012" pos:column="31">.</op:operator><name pos:line="2012" pos:column="32">c_str</name></name><argument_list pos:line="2012" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2012" pos:column="41">STATUSBAR_EOF_FORMAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2015" pos:column="1">void</name></type> <name><name pos:line="2015" pos:column="6">Notepad_plus</name><op:operator pos:line="2015" pos:column="18">::</op:operator><name pos:line="2015" pos:column="20">setUniModeText</name></name><parameter_list pos:line="2015" pos:column="34">()</parameter_list>
<block pos:line="2016" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2017" pos:column="9">Buffer</name> <type:modifier pos:line="2017" pos:column="16">*</type:modifier></type><name pos:line="2017" pos:column="17">buf</name> <init pos:line="2017" pos:column="21">= <expr><call><name><name pos:line="2017" pos:column="23">_pEditView</name><op:operator pos:line="2017" pos:column="33">-&gt;</op:operator><name pos:line="2017" pos:column="35">getCurrentBuffer</name></name><argument_list pos:line="2017" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2018" pos:column="9">int</name></type> <name pos:line="2018" pos:column="13">encoding</name> <init pos:line="2018" pos:column="22">= <expr><call><name><name pos:line="2018" pos:column="24">buf</name><op:operator pos:line="2018" pos:column="27">-&gt;</op:operator><name pos:line="2018" pos:column="29">getEncoding</name></name><argument_list pos:line="2018" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2019" pos:column="9">UniMode</name></type> <name pos:line="2019" pos:column="17">um</name> <init pos:line="2019" pos:column="20">= <expr><call><name><name pos:line="2019" pos:column="22">buf</name><op:operator pos:line="2019" pos:column="25">-&gt;</op:operator><name pos:line="2019" pos:column="27">getUnicodeMode</name></name><argument_list pos:line="2019" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="2021" pos:column="9">generic_string</name></type> <name pos:line="2021" pos:column="24">uniModeTextString</name></decl>;</decl_stmt>

	<if pos:line="2023" pos:column="9">if <condition pos:line="2023" pos:column="12">(<expr><name pos:line="2023" pos:column="13">encoding</name> <op:operator pos:line="2023" pos:column="22">==</op:operator> <op:operator pos:line="2023" pos:column="25">-</op:operator><lit:literal type="number" pos:line="2023" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="2023" pos:column="28">
	<block pos:line="2024" pos:column="9">{
		<switch pos:line="2025" pos:column="17">switch <condition pos:line="2025" pos:column="24">(<expr><name pos:line="2025" pos:column="25">um</name></expr>)</condition>
		<block pos:line="2026" pos:column="17">{
			<case pos:line="2027" pos:column="25">case <expr><name pos:line="2027" pos:column="30">uniUTF8</name></expr>:
				<expr_stmt><expr><name pos:line="2028" pos:column="33">uniModeTextString</name> <op:operator pos:line="2028" pos:column="51">=</op:operator> <call><name pos:line="2028" pos:column="53">TEXT</name><argument_list pos:line="2028" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2028" pos:column="58">"UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2028" pos:column="68">break;</break>
			</case><case pos:line="2029" pos:column="25">case <expr><name pos:line="2029" pos:column="30">uni16BE</name></expr>:
				<expr_stmt><expr><name pos:line="2030" pos:column="33">uniModeTextString</name> <op:operator pos:line="2030" pos:column="51">=</op:operator> <call><name pos:line="2030" pos:column="53">TEXT</name><argument_list pos:line="2030" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2030" pos:column="58">"UCS-2 Big Endian"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2030" pos:column="79">break;</break>
			</case><case pos:line="2031" pos:column="25">case <expr><name pos:line="2031" pos:column="30">uni16LE</name></expr>:
				<expr_stmt><expr><name pos:line="2032" pos:column="33">uniModeTextString</name> <op:operator pos:line="2032" pos:column="51">=</op:operator> <call><name pos:line="2032" pos:column="53">TEXT</name><argument_list pos:line="2032" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2032" pos:column="58">"UCS-2 Little Endian"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2032" pos:column="82">break;</break>
			</case><case pos:line="2033" pos:column="25">case <expr><name pos:line="2033" pos:column="30">uni16BE_NoBOM</name></expr>:
				<expr_stmt><expr><name pos:line="2034" pos:column="33">uniModeTextString</name> <op:operator pos:line="2034" pos:column="51">=</op:operator> <call><name pos:line="2034" pos:column="53">TEXT</name><argument_list pos:line="2034" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2034" pos:column="58">"UCS-2 BE w/o BOM"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2034" pos:column="79">break;</break>
			</case><case pos:line="2035" pos:column="25">case <expr><name pos:line="2035" pos:column="30">uni16LE_NoBOM</name></expr>:
				<expr_stmt><expr><name pos:line="2036" pos:column="33">uniModeTextString</name> <op:operator pos:line="2036" pos:column="51">=</op:operator> <call><name pos:line="2036" pos:column="53">TEXT</name><argument_list pos:line="2036" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2036" pos:column="58">"UCS-2 LE w/o BOM"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2036" pos:column="79">break;</break>
			</case><case pos:line="2037" pos:column="25">case <expr><name pos:line="2037" pos:column="30">uniCookie</name></expr>:
				<expr_stmt><expr><name pos:line="2038" pos:column="33">uniModeTextString</name> <op:operator pos:line="2038" pos:column="51">=</op:operator> <call><name pos:line="2038" pos:column="53">TEXT</name><argument_list pos:line="2038" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2038" pos:column="58">"ANSI as UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:line="2038" pos:column="76">break;</break>
			</case><default pos:line="2039" pos:column="25">default :
				<expr_stmt><expr><name pos:line="2040" pos:column="33">uniModeTextString</name> <op:operator pos:line="2040" pos:column="51">=</op:operator> <call><name pos:line="2040" pos:column="53">TEXT</name><argument_list pos:line="2040" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2040" pos:column="58">"ANSI"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</default>}</block></switch>
	}</block></then>
	<else pos:line="2043" pos:column="9">else
	<block pos:line="2044" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2045" pos:column="17">EncodingMapper</name> <type:modifier pos:line="2045" pos:column="32">*</type:modifier></type><name pos:line="2045" pos:column="33">em</name> <init pos:line="2045" pos:column="36">= <expr><call><name><name pos:line="2045" pos:column="38">EncodingMapper</name><op:operator pos:line="2045" pos:column="52">::</op:operator><name pos:line="2045" pos:column="54">getInstance</name></name><argument_list pos:line="2045" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2046" pos:column="17">int</name></type> <name pos:line="2046" pos:column="21">cmdID</name> <init pos:line="2046" pos:column="27">= <expr><call><name><name pos:line="2046" pos:column="29">em</name><op:operator pos:line="2046" pos:column="31">-&gt;</op:operator><name pos:line="2046" pos:column="33">getIndexFromEncoding</name></name><argument_list pos:line="2046" pos:column="53">(<argument><expr><name pos:line="2046" pos:column="54">encoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2047" pos:column="17">if <condition pos:line="2047" pos:column="20">(<expr><name pos:line="2047" pos:column="21">cmdID</name> <op:operator pos:line="2047" pos:column="27">==</op:operator> <op:operator pos:line="2047" pos:column="30">-</op:operator><lit:literal type="number" pos:line="2047" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="2047" pos:column="33">
		<block pos:line="2048" pos:column="17">{
			<comment type="line" pos:line="2049" pos:column="25">//printStr(TEXT("Encoding problem. Encoding is not added in encoding_table?"));</comment>
			<return pos:line="2050" pos:column="25">return;</return>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2052" pos:column="17">cmdID</name> <op:operator pos:line="2052" pos:column="23">+=</op:operator> <name pos:line="2052" pos:column="26">IDM_FORMAT_ENCODE</name></expr>;</expr_stmt>

		<decl_stmt><decl><type><specifier pos:line="2054" pos:column="17">const</specifier> <name pos:line="2054" pos:column="23">int</name></type> <name pos:line="2054" pos:column="27">itemSize</name> <init pos:line="2054" pos:column="36">= <expr><lit:literal type="number" pos:line="2054" pos:column="38">64</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2055" pos:column="17">TCHAR</name></type> <name><name pos:line="2055" pos:column="23">uniModeText</name><index pos:line="2055" pos:column="34">[<expr><name pos:line="2055" pos:column="35">itemSize</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2056" pos:column="17">::</op:operator><name pos:line="2056" pos:column="19">GetMenuString</name></name><argument_list pos:line="2056" pos:column="32">(<argument><expr><name pos:line="2056" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="50">cmdID</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="57">uniModeText</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="70">itemSize</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="80">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2057" pos:column="17">uniModeTextString</name> <op:operator pos:line="2057" pos:column="35">=</op:operator> <name pos:line="2057" pos:column="37">uniModeText</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="2059" pos:column="9">_statusBar</name><op:operator pos:line="2059" pos:column="19">.</op:operator><name pos:line="2059" pos:column="20">setText</name></name><argument_list pos:line="2059" pos:column="27">(<argument><expr><call><name><name pos:line="2059" pos:column="28">uniModeTextString</name><op:operator pos:line="2059" pos:column="45">.</op:operator><name pos:line="2059" pos:column="46">c_str</name></name><argument_list pos:line="2059" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2059" pos:column="55">STATUSBAR_UNICODE_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="2063" pos:column="1">void</name></type> <name><name pos:line="2063" pos:column="6">Notepad_plus</name><op:operator pos:line="2063" pos:column="18">::</op:operator><name pos:line="2063" pos:column="20">addHotSpot</name></name><parameter_list pos:line="2063" pos:column="30">()</parameter_list>
<block pos:line="2064" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2065" pos:column="9">int</name></type> <name pos:line="2065" pos:column="13">startPos</name> <init pos:line="2065" pos:column="22">= <expr><lit:literal type="number" pos:line="2065" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2066" pos:column="9">int</name></type> <name pos:line="2066" pos:column="13">endPos</name> <init pos:line="2066" pos:column="20">= <expr><op:operator pos:line="2066" pos:column="22">-</op:operator><lit:literal type="number" pos:line="2066" pos:column="23">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2067" pos:column="9">int</name></type> <name pos:line="2067" pos:column="13">endStyle</name> <init pos:line="2067" pos:column="22">= <expr><call><name><name pos:line="2067" pos:column="24">_pEditView</name><op:operator pos:line="2067" pos:column="34">-&gt;</op:operator><name pos:line="2067" pos:column="36">execute</name></name><argument_list pos:line="2067" pos:column="43">(<argument><expr><name pos:line="2067" pos:column="44">SCI_GETENDSTYLED</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="2069" pos:column="9">_pEditView</name><op:operator pos:line="2069" pos:column="19">-&gt;</op:operator><name pos:line="2069" pos:column="21">getVisibleStartAndEndPosition</name></name><argument_list pos:line="2069" pos:column="50">(<argument><expr><op:operator pos:line="2069" pos:column="51">&amp;</op:operator><name pos:line="2069" pos:column="52">startPos</name></expr></argument>, <argument><expr><op:operator pos:line="2069" pos:column="62">&amp;</op:operator><name pos:line="2069" pos:column="63">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2071" pos:column="9">_pEditView</name><op:operator pos:line="2071" pos:column="19">-&gt;</op:operator><name pos:line="2071" pos:column="21">execute</name></name><argument_list pos:line="2071" pos:column="28">(<argument><expr><name pos:line="2071" pos:column="29">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="2071" pos:column="49">SCFIND_REGEXP</name><op:operator pos:line="2071" pos:column="62">|</op:operator><name pos:line="2071" pos:column="63">SCFIND_POSIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2073" pos:column="9">_pEditView</name><op:operator pos:line="2073" pos:column="19">-&gt;</op:operator><name pos:line="2073" pos:column="21">execute</name></name><argument_list pos:line="2073" pos:column="28">(<argument><expr><name pos:line="2073" pos:column="29">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><name pos:line="2073" pos:column="49">startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2074" pos:column="9">_pEditView</name><op:operator pos:line="2074" pos:column="19">-&gt;</op:operator><name pos:line="2074" pos:column="21">execute</name></name><argument_list pos:line="2074" pos:column="28">(<argument><expr><name pos:line="2074" pos:column="29">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><name pos:line="2074" pos:column="47">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name><name pos:line="2076" pos:column="9">std</name><op:operator pos:line="2076" pos:column="12">::</op:operator><name><name pos:line="2076" pos:column="14">vector</name><argument_list pos:line="2076" pos:column="20">&lt;<argument><expr><name pos:line="2076" pos:column="21">unsigned</name> <name pos:line="2076" pos:column="30">char</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="2076" pos:column="36">hotspotPairs</name></decl>;</decl_stmt> <comment type="line" pos:line="2076" pos:column="50">//= _pEditView-&gt;GetHotspotPairs();</comment>

	<decl_stmt><decl><type><name pos:line="2078" pos:column="9">unsigned</name> <name pos:line="2078" pos:column="18">char</name></type> <name pos:line="2078" pos:column="23">style_hotspot</name> <init pos:line="2078" pos:column="37">= <expr><lit:literal type="number" pos:line="2078" pos:column="39">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2079" pos:column="9">unsigned</name> <name pos:line="2079" pos:column="18">char</name></type> <name pos:line="2079" pos:column="23">mask</name> <init pos:line="2079" pos:column="28">= <expr><name pos:line="2079" pos:column="30">INDIC1_MASK</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2081" pos:column="9">// INDIC2_MASK == 255 and it represents MSB bit </comment>
	<comment type="line" pos:line="2082" pos:column="9">// only LEX_HTML and LEX_POSTSCRIPT use use INDIC2_MASK bit internally</comment>
	<comment type="line" pos:line="2083" pos:column="9">// LEX_HTML is using INDIC2_MASK bit even though it has only 127 states, so it is safe to overwrite 8th bit</comment>
	<comment type="line" pos:line="2084" pos:column="9">// INDIC2_MASK will be used for LEX_HTML</comment>

	<comment type="line" pos:line="2086" pos:column="9">// LEX_POSTSCRIPT is using INDIC2_MASK bit for "tokenization", and is using mask=31 in lexer,</comment>
	<comment type="line" pos:line="2087" pos:column="9">// therefore hotspot in LEX_POSTSCRIPT will be saved to 5th bit</comment>
	<comment type="line" pos:line="2088" pos:column="9">// there are only 15 states in LEX_POSTSCRIPT, so it is safe to overwrite 5th bit</comment>

	<comment type="line" pos:line="2090" pos:column="9">// rule of the thumb is, any lexet that calls: styler.StartAt(startPos, 255);</comment>
	<comment type="line" pos:line="2091" pos:column="9">// must have special processing here, all other lexers are fine with INDIC1_MASK (7th bit)</comment>

	<decl_stmt><decl><type><name pos:line="2093" pos:column="9">LangType</name></type> <name pos:line="2093" pos:column="18">type</name> <init pos:line="2093" pos:column="23">= <expr><call><name><name pos:line="2093" pos:column="25">_pEditView</name><op:operator pos:line="2093" pos:column="35">-&gt;</op:operator><name pos:line="2093" pos:column="37">getCurrentBuffer</name></name><argument_list pos:line="2093" pos:column="53">()</argument_list></call><op:operator pos:line="2093" pos:column="55">-&gt;</op:operator><call><name pos:line="2093" pos:column="57">getLangType</name><argument_list pos:line="2093" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="2095" pos:column="9">if <condition pos:line="2095" pos:column="12">(<expr><name pos:line="2095" pos:column="13">type</name> <op:operator pos:line="2095" pos:column="18">==</op:operator> <name pos:line="2095" pos:column="21">L_HTML</name> <op:operator pos:line="2095" pos:column="28">||</op:operator> <name pos:line="2095" pos:column="31">type</name> <op:operator pos:line="2095" pos:column="36">==</op:operator> <name pos:line="2095" pos:column="39">L_PHP</name> <op:operator pos:line="2095" pos:column="45">||</op:operator> <name pos:line="2095" pos:column="48">type</name> <op:operator pos:line="2095" pos:column="53">==</op:operator> <name pos:line="2095" pos:column="56">L_ASP</name> <op:operator pos:line="2095" pos:column="62">||</op:operator> <name pos:line="2095" pos:column="65">type</name> <op:operator pos:line="2095" pos:column="70">==</op:operator> <name pos:line="2095" pos:column="73">L_JSP</name></expr>)</condition><then pos:line="2095" pos:column="79">			
		<expr_stmt><expr><name pos:line="2096" pos:column="17">mask</name> <op:operator pos:line="2096" pos:column="22">=</op:operator> <name pos:line="2096" pos:column="24">INDIC2_MASK</name></expr>;</expr_stmt></then>
	<else pos:line="2097" pos:column="9">else <if pos:line="2097" pos:column="14">if <condition pos:line="2097" pos:column="17">(<expr><name pos:line="2097" pos:column="18">type</name> <op:operator pos:line="2097" pos:column="23">==</op:operator> <name pos:line="2097" pos:column="26">L_PS</name></expr>)</condition><then pos:line="2097" pos:column="31">
		<expr_stmt><expr><name pos:line="2098" pos:column="17">mask</name> <op:operator pos:line="2098" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="2098" pos:column="24">16</lit:literal></expr>;</expr_stmt></then></if></else></if>

	<decl_stmt><decl><type><name pos:line="2100" pos:column="9">int</name></type> <name pos:line="2100" pos:column="13">posFound</name> <init pos:line="2100" pos:column="22">= <expr><call><name><name pos:line="2100" pos:column="24">_pEditView</name><op:operator pos:line="2100" pos:column="34">-&gt;</op:operator><name pos:line="2100" pos:column="36">execute</name></name><argument_list pos:line="2100" pos:column="43">(<argument><expr><name pos:line="2100" pos:column="44">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="2100" pos:column="64">strlen</name><argument_list pos:line="2100" pos:column="70">(<argument><expr><name pos:line="2100" pos:column="71">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2100" pos:column="86">(</op:operator><name pos:line="2100" pos:column="87">LPARAM</name><op:operator pos:line="2100" pos:column="93">)</op:operator><name pos:line="2100" pos:column="94">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<while pos:line="2102" pos:column="9">while <condition pos:line="2102" pos:column="15">(<expr><name pos:line="2102" pos:column="16">posFound</name> <op:operator pos:line="2102" pos:column="25">!=</op:operator> <op:operator pos:line="2102" pos:column="28">-</op:operator><lit:literal type="number" pos:line="2102" pos:column="29">1</lit:literal></expr>)</condition>
	<block pos:line="2103" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2104" pos:column="17">int</name></type> <name pos:line="2104" pos:column="21">start</name> <init pos:line="2104" pos:column="27">= <expr><call><name pos:line="2104" pos:column="29">int</name><argument_list pos:line="2104" pos:column="32">(<argument><expr><call><name><name pos:line="2104" pos:column="33">_pEditView</name><op:operator pos:line="2104" pos:column="43">-&gt;</op:operator><name pos:line="2104" pos:column="45">execute</name></name><argument_list pos:line="2104" pos:column="52">(<argument><expr><name pos:line="2104" pos:column="53">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2105" pos:column="17">int</name></type> <name pos:line="2105" pos:column="21">end</name> <init pos:line="2105" pos:column="25">= <expr><call><name pos:line="2105" pos:column="27">int</name><argument_list pos:line="2105" pos:column="30">(<argument><expr><call><name><name pos:line="2105" pos:column="31">_pEditView</name><op:operator pos:line="2105" pos:column="41">-&gt;</op:operator><name pos:line="2105" pos:column="43">execute</name></name><argument_list pos:line="2105" pos:column="50">(<argument><expr><name pos:line="2105" pos:column="51">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2106" pos:column="17">int</name></type> <name pos:line="2106" pos:column="21">foundTextLen</name> <init pos:line="2106" pos:column="34">= <expr><name pos:line="2106" pos:column="36">end</name> <op:operator pos:line="2106" pos:column="40">-</op:operator> <name pos:line="2106" pos:column="42">start</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2107" pos:column="17">unsigned</name> <name pos:line="2107" pos:column="26">char</name></type> <name pos:line="2107" pos:column="31">idStyle</name> <init pos:line="2107" pos:column="39">= <expr><call><name><name pos:line="2107" pos:column="41">static_cast</name><argument_list pos:line="2107" pos:column="52">&lt;<argument><expr><name pos:line="2107" pos:column="53">unsigned</name> <name pos:line="2107" pos:column="62">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2107" pos:column="67">(<argument><expr><call><name><name pos:line="2107" pos:column="68">_pEditView</name><op:operator pos:line="2107" pos:column="78">-&gt;</op:operator><name pos:line="2107" pos:column="80">execute</name></name><argument_list pos:line="2107" pos:column="87">(<argument><expr><name pos:line="2107" pos:column="88">SCI_GETSTYLEAT</name></expr></argument>, <argument><expr><name pos:line="2107" pos:column="104">posFound</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="2109" pos:column="17">// Search the style</comment>
		<decl_stmt><decl><type><name pos:line="2110" pos:column="17">int</name></type> <name pos:line="2110" pos:column="21">fs</name> <init pos:line="2110" pos:column="24">= <expr><op:operator pos:line="2110" pos:column="26">-</op:operator><lit:literal type="number" pos:line="2110" pos:column="27">1</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="2111" pos:column="17">for (<init><decl><type><name pos:line="2111" pos:column="22">size_t</name></type> <name pos:line="2111" pos:column="29">i</name> <init pos:line="2111" pos:column="31">= <expr><lit:literal type="number" pos:line="2111" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2111" pos:column="37">i</name> <op:operator pos:line="2111" pos:column="39">&lt;</op:operator> <call><name><name pos:line="2111" pos:column="41">hotspotPairs</name><op:operator pos:line="2111" pos:column="53">.</op:operator><name pos:line="2111" pos:column="54">size</name></name><argument_list pos:line="2111" pos:column="58">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2111" pos:column="63">i</name><op:operator pos:line="2111" pos:column="64">++</op:operator></expr></incr>)
		<block pos:line="2112" pos:column="17">{
			<comment type="line" pos:line="2113" pos:column="25">// make sure to ignore "hotspot bit" when comparing document style with archived hotspot style</comment>
			<if pos:line="2114" pos:column="25">if <condition pos:line="2114" pos:column="28">(<expr><op:operator pos:line="2114" pos:column="29">(</op:operator><name><name pos:line="2114" pos:column="30">hotspotPairs</name><index pos:line="2114" pos:column="42">[<expr><name pos:line="2114" pos:column="43">i</name></expr>]</index></name> <op:operator pos:line="2114" pos:column="46">&amp;</op:operator> <op:operator pos:line="2114" pos:column="48">~</op:operator><name pos:line="2114" pos:column="49">mask</name><op:operator pos:line="2114" pos:column="53">)</op:operator> <op:operator pos:line="2114" pos:column="55">==</op:operator> <op:operator pos:line="2114" pos:column="58">(</op:operator><name pos:line="2114" pos:column="59">idStyle</name> <op:operator pos:line="2114" pos:column="67">&amp;</op:operator> <op:operator pos:line="2114" pos:column="69">~</op:operator><name pos:line="2114" pos:column="70">mask</name><op:operator pos:line="2114" pos:column="74">)</op:operator></expr>)</condition><then pos:line="2114" pos:column="76">
			<block pos:line="2115" pos:column="25">{
				<expr_stmt><expr><name pos:line="2116" pos:column="33">fs</name> <op:operator pos:line="2116" pos:column="36">=</op:operator> <name><name pos:line="2116" pos:column="38">hotspotPairs</name><index pos:line="2116" pos:column="50">[<expr><name pos:line="2116" pos:column="51">i</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2117" pos:column="33">_pEditView</name><op:operator pos:line="2117" pos:column="43">-&gt;</op:operator><name pos:line="2117" pos:column="45">execute</name></name><argument_list pos:line="2117" pos:column="52">(<argument><expr><name pos:line="2117" pos:column="53">SCI_STYLEGETFORE</name></expr></argument>, <argument><expr><name pos:line="2117" pos:column="71">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="2118" pos:column="41">break;</break>
			}</block></then></if>
		}</block></for>

		<comment type="line" pos:line="2122" pos:column="17">// if we found it then use it to colourize</comment>
		<if pos:line="2123" pos:column="17">if <condition pos:line="2123" pos:column="20">(<expr><name pos:line="2123" pos:column="21">fs</name> <op:operator pos:line="2123" pos:column="24">!=</op:operator> <op:operator pos:line="2123" pos:column="27">-</op:operator><lit:literal type="number" pos:line="2123" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="2123" pos:column="30">
		<block pos:line="2124" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="2125" pos:column="25">_pEditView</name><op:operator pos:line="2125" pos:column="35">-&gt;</op:operator><name pos:line="2125" pos:column="37">execute</name></name><argument_list pos:line="2125" pos:column="44">(<argument><expr><name pos:line="2125" pos:column="45">SCI_STARTSTYLING</name></expr></argument>, <argument><expr><name pos:line="2125" pos:column="63">start</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2125" pos:column="70">0xFF</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2126" pos:column="25">_pEditView</name><op:operator pos:line="2126" pos:column="35">-&gt;</op:operator><name pos:line="2126" pos:column="37">execute</name></name><argument_list pos:line="2126" pos:column="44">(<argument><expr><name pos:line="2126" pos:column="45">SCI_SETSTYLING</name></expr></argument>, <argument><expr><name pos:line="2126" pos:column="61">foundTextLen</name></expr></argument>, <argument><expr><name pos:line="2126" pos:column="75">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		}</block></then>
		<else pos:line="2129" pos:column="17">else <comment type="line" pos:line="2129" pos:column="22">// generize a new style and add it into a array</comment>
		<block pos:line="2130" pos:column="17">{
			<expr_stmt><expr><name pos:line="2131" pos:column="25">style_hotspot</name> <op:operator pos:line="2131" pos:column="39">=</op:operator> <name pos:line="2131" pos:column="41">idStyle</name> <op:operator pos:line="2131" pos:column="49">|</op:operator> <name pos:line="2131" pos:column="51">mask</name></expr>;</expr_stmt>	<comment type="line" pos:line="2131" pos:column="57">// set "hotspot bit"</comment>
			<expr_stmt><expr><call><name><name pos:line="2132" pos:column="25">hotspotPairs</name><op:operator pos:line="2132" pos:column="37">.</op:operator><name pos:line="2132" pos:column="38">push_back</name></name><argument_list pos:line="2132" pos:column="47">(<argument><expr><name pos:line="2132" pos:column="48">style_hotspot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2133" pos:column="25">int</name></type> <name pos:line="2133" pos:column="29">activeFG</name> <init pos:line="2133" pos:column="38">= <expr><lit:literal type="number" pos:line="2133" pos:column="40">0xFF0000</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2134" pos:column="25">unsigned</name> <name pos:line="2134" pos:column="34">char</name></type> <name pos:line="2134" pos:column="39">idStyleMSBunset</name> <init pos:line="2134" pos:column="55">= <expr><name pos:line="2134" pos:column="57">idStyle</name> <op:operator pos:line="2134" pos:column="65">&amp;</op:operator> <op:operator pos:line="2134" pos:column="67">~</op:operator><name pos:line="2134" pos:column="68">mask</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2135" pos:column="25">char</name></type> <name><name pos:line="2135" pos:column="30">fontNameA</name><index pos:line="2135" pos:column="39">[<expr><lit:literal type="number" pos:line="2135" pos:column="40">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="2137" pos:column="25">Style</name></type> <name pos:line="2137" pos:column="31">hotspotStyle</name></decl>;</decl_stmt>

			<expr_stmt><expr><name><name pos:line="2139" pos:column="25">hotspotStyle</name><op:operator pos:line="2139" pos:column="37">.</op:operator><name pos:line="2139" pos:column="38">_styleID</name></name> <op:operator pos:line="2139" pos:column="47">=</op:operator> <call><name><name pos:line="2139" pos:column="49">static_cast</name><argument_list pos:line="2139" pos:column="60">&lt;<argument><expr><name pos:line="2139" pos:column="61">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2139" pos:column="65">(<argument><expr><name pos:line="2139" pos:column="66">style_hotspot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2140" pos:column="25">_pEditView</name><op:operator pos:line="2140" pos:column="35">-&gt;</op:operator><name pos:line="2140" pos:column="37">execute</name></name><argument_list pos:line="2140" pos:column="44">(<argument><expr><name pos:line="2140" pos:column="45">SCI_STYLEGETFONT</name></expr></argument>, <argument><expr><name pos:line="2140" pos:column="63">idStyleMSBunset</name></expr></argument>, <argument><expr><op:operator pos:line="2140" pos:column="80">(</op:operator><name pos:line="2140" pos:column="81">LPARAM</name><op:operator pos:line="2140" pos:column="87">)</op:operator><name pos:line="2140" pos:column="88">fontNameA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2141" pos:column="25">TCHAR</name> <type:modifier pos:line="2141" pos:column="31">*</type:modifier></type><name pos:line="2141" pos:column="32">generic_fontname</name> <init pos:line="2141" pos:column="49">= <expr><op:operator pos:line="2141" pos:column="51">new</op:operator> <name><name pos:line="2141" pos:column="55">TCHAR</name><index pos:line="2141" pos:column="60">[<expr><lit:literal type="number" pos:line="2141" pos:column="61">128</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="2142" pos:column="1">#<cpp:directive pos:line="2142" pos:column="2">ifdef</cpp:directive> <name pos:line="2142" pos:column="8">UNICODE</name></cpp:ifdef>
			<decl_stmt><decl><type><name pos:line="2143" pos:column="25">WcharMbcsConvertor</name> <type:modifier pos:line="2143" pos:column="44">*</type:modifier></type><name pos:line="2143" pos:column="45">wmc</name> <init pos:line="2143" pos:column="49">= <expr><call><name><name pos:line="2143" pos:column="51">WcharMbcsConvertor</name><op:operator pos:line="2143" pos:column="69">::</op:operator><name pos:line="2143" pos:column="71">getInstance</name></name><argument_list pos:line="2143" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="2144" pos:column="25">const</specifier> <name pos:line="2144" pos:column="31">wchar_t</name> <type:modifier pos:line="2144" pos:column="39">*</type:modifier></type> <name pos:line="2144" pos:column="41">fontNameW</name> <init pos:line="2144" pos:column="51">= <expr><call><name><name pos:line="2144" pos:column="53">wmc</name><op:operator pos:line="2144" pos:column="56">-&gt;</op:operator><name pos:line="2144" pos:column="58">char2wchar</name></name><argument_list pos:line="2144" pos:column="68">(<argument><expr><name pos:line="2144" pos:column="69">fontNameA</name></expr></argument>, <argument><expr><call><name><name pos:line="2144" pos:column="80">_nativeLangSpeaker</name><op:operator pos:line="2144" pos:column="98">.</op:operator><name pos:line="2144" pos:column="99">getLangEncoding</name></name><argument_list pos:line="2144" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2145" pos:column="25">lstrcpy</name><argument_list pos:line="2145" pos:column="32">(<argument><expr><name pos:line="2145" pos:column="33">generic_fontname</name></expr></argument>, <argument><expr><name pos:line="2145" pos:column="51">fontNameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2146" pos:column="1">#<cpp:directive pos:line="2146" pos:column="2">else</cpp:directive></cpp:else>
			<expr_stmt><expr><call><name pos:line="2147" pos:column="25">lstrcpy</name><argument_list pos:line="2147" pos:column="32">(<argument><expr><name pos:line="2147" pos:column="33">generic_fontname</name></expr></argument>, <argument><expr><name pos:line="2147" pos:column="51">fontNameA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2148" pos:column="1">#<cpp:directive pos:line="2148" pos:column="2">endif</cpp:directive></cpp:endif>
			<expr_stmt><expr><name><name pos:line="2149" pos:column="25">hotspotStyle</name><op:operator pos:line="2149" pos:column="37">.</op:operator><name pos:line="2149" pos:column="38">_fontName</name></name> <op:operator pos:line="2149" pos:column="48">=</op:operator> <name pos:line="2149" pos:column="50">generic_fontname</name></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="2151" pos:column="25">hotspotStyle</name><op:operator pos:line="2151" pos:column="37">.</op:operator><name pos:line="2151" pos:column="38">_fgColor</name></name> <op:operator pos:line="2151" pos:column="47">=</op:operator> <call><name><name pos:line="2151" pos:column="49">_pEditView</name><op:operator pos:line="2151" pos:column="59">-&gt;</op:operator><name pos:line="2151" pos:column="61">execute</name></name><argument_list pos:line="2151" pos:column="68">(<argument><expr><name pos:line="2151" pos:column="69">SCI_STYLEGETFORE</name></expr></argument>, <argument><expr><name pos:line="2151" pos:column="87">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2152" pos:column="25">hotspotStyle</name><op:operator pos:line="2152" pos:column="37">.</op:operator><name pos:line="2152" pos:column="38">_bgColor</name></name> <op:operator pos:line="2152" pos:column="47">=</op:operator> <call><name><name pos:line="2152" pos:column="49">_pEditView</name><op:operator pos:line="2152" pos:column="59">-&gt;</op:operator><name pos:line="2152" pos:column="61">execute</name></name><argument_list pos:line="2152" pos:column="68">(<argument><expr><name pos:line="2152" pos:column="69">SCI_STYLEGETBACK</name></expr></argument>, <argument><expr><name pos:line="2152" pos:column="87">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2153" pos:column="25">hotspotStyle</name><op:operator pos:line="2153" pos:column="37">.</op:operator><name pos:line="2153" pos:column="38">_fontSize</name></name> <op:operator pos:line="2153" pos:column="48">=</op:operator> <call><name><name pos:line="2153" pos:column="50">_pEditView</name><op:operator pos:line="2153" pos:column="60">-&gt;</op:operator><name pos:line="2153" pos:column="62">execute</name></name><argument_list pos:line="2153" pos:column="69">(<argument><expr><name pos:line="2153" pos:column="70">SCI_STYLEGETSIZE</name></expr></argument>, <argument><expr><name pos:line="2153" pos:column="88">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2155" pos:column="25">int</name></type> <name pos:line="2155" pos:column="29">isBold</name> <init pos:line="2155" pos:column="36">= <expr><call><name><name pos:line="2155" pos:column="38">_pEditView</name><op:operator pos:line="2155" pos:column="48">-&gt;</op:operator><name pos:line="2155" pos:column="50">execute</name></name><argument_list pos:line="2155" pos:column="57">(<argument><expr><name pos:line="2155" pos:column="58">SCI_STYLEGETBOLD</name></expr></argument>, <argument><expr><name pos:line="2155" pos:column="76">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2156" pos:column="25">int</name></type> <name pos:line="2156" pos:column="29">isItalic</name> <init pos:line="2156" pos:column="38">= <expr><call><name><name pos:line="2156" pos:column="40">_pEditView</name><op:operator pos:line="2156" pos:column="50">-&gt;</op:operator><name pos:line="2156" pos:column="52">execute</name></name><argument_list pos:line="2156" pos:column="59">(<argument><expr><name pos:line="2156" pos:column="60">SCI_STYLEGETITALIC</name></expr></argument>, <argument><expr><name pos:line="2156" pos:column="80">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2157" pos:column="25">int</name></type> <name pos:line="2157" pos:column="29">isUnderline</name> <init pos:line="2157" pos:column="41">= <expr><call><name><name pos:line="2157" pos:column="43">_pEditView</name><op:operator pos:line="2157" pos:column="53">-&gt;</op:operator><name pos:line="2157" pos:column="55">execute</name></name><argument_list pos:line="2157" pos:column="62">(<argument><expr><name pos:line="2157" pos:column="63">SCI_STYLEGETUNDERLINE</name></expr></argument>, <argument><expr><name pos:line="2157" pos:column="86">idStyleMSBunset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="2158" pos:column="25">hotspotStyle</name><op:operator pos:line="2158" pos:column="37">.</op:operator><name pos:line="2158" pos:column="38">_fontStyle</name></name> <op:operator pos:line="2158" pos:column="49">=</op:operator> <op:operator pos:line="2158" pos:column="51">(</op:operator><name pos:line="2158" pos:column="52">isBold</name><op:operator pos:line="2158" pos:column="58">?</op:operator><name pos:line="2158" pos:column="59">FONTSTYLE_BOLD</name><op:operator pos:line="2158" pos:column="73">:</op:operator><lit:literal type="number" pos:line="2158" pos:column="74">0</lit:literal><op:operator pos:line="2158" pos:column="75">)</op:operator> <op:operator pos:line="2158" pos:column="77">|</op:operator> <op:operator pos:line="2158" pos:column="79">(</op:operator><name pos:line="2158" pos:column="80">isItalic</name><op:operator pos:line="2158" pos:column="88">?</op:operator><name pos:line="2158" pos:column="89">FONTSTYLE_ITALIC</name><op:operator pos:line="2158" pos:column="105">:</op:operator><lit:literal type="number" pos:line="2158" pos:column="106">0</lit:literal><op:operator pos:line="2158" pos:column="107">)</op:operator> <op:operator pos:line="2158" pos:column="109">|</op:operator> <op:operator pos:line="2158" pos:column="111">(</op:operator><name pos:line="2158" pos:column="112">isUnderline</name><op:operator pos:line="2158" pos:column="123">?</op:operator><name pos:line="2158" pos:column="124">FONTSTYLE_UNDERLINE</name><op:operator pos:line="2158" pos:column="143">:</op:operator><lit:literal type="number" pos:line="2158" pos:column="144">0</lit:literal><op:operator pos:line="2158" pos:column="145">)</op:operator></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2160" pos:column="25">int</name></type> <name pos:line="2160" pos:column="29">urlAction</name> <init pos:line="2160" pos:column="39">= <expr><op:operator pos:line="2160" pos:column="41">(</op:operator><call><name><name pos:line="2160" pos:column="42">NppParameters</name><op:operator pos:line="2160" pos:column="55">::</op:operator><name pos:line="2160" pos:column="57">getInstance</name></name><argument_list pos:line="2160" pos:column="68">()</argument_list></call><op:operator pos:line="2160" pos:column="70">)</op:operator><op:operator pos:line="2160" pos:column="71">-&gt;</op:operator><call><name pos:line="2160" pos:column="73">getNppGUI</name><argument_list pos:line="2160" pos:column="82">()</argument_list></call><op:operator pos:line="2160" pos:column="84">.</op:operator><name pos:line="2160" pos:column="85">_styleURL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="2161" pos:column="25">if <condition pos:line="2161" pos:column="28">(<expr><name pos:line="2161" pos:column="29">urlAction</name> <op:operator pos:line="2161" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="2161" pos:column="42">2</lit:literal></expr>)</condition><then pos:line="2161" pos:column="44">
				<expr_stmt><expr><name><name pos:line="2162" pos:column="33">hotspotStyle</name><op:operator pos:line="2162" pos:column="45">.</op:operator><name pos:line="2162" pos:column="46">_fontStyle</name></name> <op:operator pos:line="2162" pos:column="57">|=</op:operator> <name pos:line="2162" pos:column="60">FONTSTYLE_UNDERLINE</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="2164" pos:column="25">_pEditView</name><op:operator pos:line="2164" pos:column="35">-&gt;</op:operator><name pos:line="2164" pos:column="37">setHotspotStyle</name></name><argument_list pos:line="2164" pos:column="52">(<argument><expr><name pos:line="2164" pos:column="53">hotspotStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="2166" pos:column="25">_pEditView</name><op:operator pos:line="2166" pos:column="35">-&gt;</op:operator><name pos:line="2166" pos:column="37">execute</name></name><argument_list pos:line="2166" pos:column="44">(<argument><expr><name pos:line="2166" pos:column="45">SCI_STYLESETHOTSPOT</name></expr></argument>, <argument><expr><name pos:line="2166" pos:column="66">style_hotspot</name></expr></argument>, <argument><expr><name pos:line="2166" pos:column="81">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2167" pos:column="25">_pEditView</name><op:operator pos:line="2167" pos:column="35">-&gt;</op:operator><name pos:line="2167" pos:column="37">execute</name></name><argument_list pos:line="2167" pos:column="44">(<argument><expr><name pos:line="2167" pos:column="45">SCI_SETHOTSPOTACTIVEFORE</name></expr></argument>, <argument><expr><name pos:line="2167" pos:column="71">TRUE</name></expr></argument>, <argument><expr><name pos:line="2167" pos:column="77">activeFG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2168" pos:column="25">_pEditView</name><op:operator pos:line="2168" pos:column="35">-&gt;</op:operator><name pos:line="2168" pos:column="37">execute</name></name><argument_list pos:line="2168" pos:column="44">(<argument><expr><name pos:line="2168" pos:column="45">SCI_SETHOTSPOTSINGLELINE</name></expr></argument>, <argument><expr><name pos:line="2168" pos:column="71">style_hotspot</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2168" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="2170" pos:column="25">// colourize it!</comment>
			<expr_stmt><expr><call><name><name pos:line="2171" pos:column="25">_pEditView</name><op:operator pos:line="2171" pos:column="35">-&gt;</op:operator><name pos:line="2171" pos:column="37">execute</name></name><argument_list pos:line="2171" pos:column="44">(<argument><expr><name pos:line="2171" pos:column="45">SCI_STARTSTYLING</name></expr></argument>, <argument><expr><name pos:line="2171" pos:column="63">start</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2171" pos:column="70">0xFF</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2172" pos:column="25">_pEditView</name><op:operator pos:line="2172" pos:column="35">-&gt;</op:operator><name pos:line="2172" pos:column="37">execute</name></name><argument_list pos:line="2172" pos:column="44">(<argument><expr><name pos:line="2172" pos:column="45">SCI_SETSTYLING</name></expr></argument>, <argument><expr><name pos:line="2172" pos:column="61">foundTextLen</name></expr></argument>, <argument><expr><name pos:line="2172" pos:column="75">style_hotspot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>

		<expr_stmt><expr><call><name><name pos:line="2175" pos:column="17">_pEditView</name><op:operator pos:line="2175" pos:column="27">-&gt;</op:operator><name pos:line="2175" pos:column="29">execute</name></name><argument_list pos:line="2175" pos:column="36">(<argument><expr><name pos:line="2175" pos:column="37">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><name pos:line="2175" pos:column="57">posFound</name> <op:operator pos:line="2175" pos:column="66">+</op:operator> <name pos:line="2175" pos:column="68">foundTextLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2176" pos:column="17">_pEditView</name><op:operator pos:line="2176" pos:column="27">-&gt;</op:operator><name pos:line="2176" pos:column="29">execute</name></name><argument_list pos:line="2176" pos:column="36">(<argument><expr><name pos:line="2176" pos:column="37">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><name pos:line="2176" pos:column="55">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="2178" pos:column="17">posFound</name> <op:operator pos:line="2178" pos:column="26">=</op:operator> <call><name><name pos:line="2178" pos:column="28">_pEditView</name><op:operator pos:line="2178" pos:column="38">-&gt;</op:operator><name pos:line="2178" pos:column="40">execute</name></name><argument_list pos:line="2178" pos:column="47">(<argument><expr><name pos:line="2178" pos:column="48">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="2178" pos:column="68">strlen</name><argument_list pos:line="2178" pos:column="74">(<argument><expr><name pos:line="2178" pos:column="75">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2178" pos:column="90">(</op:operator><name pos:line="2178" pos:column="91">LPARAM</name><op:operator pos:line="2178" pos:column="97">)</op:operator><name pos:line="2178" pos:column="98">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>

	<expr_stmt><expr><call><name><name pos:line="2181" pos:column="9">_pEditView</name><op:operator pos:line="2181" pos:column="19">-&gt;</op:operator><name pos:line="2181" pos:column="21">execute</name></name><argument_list pos:line="2181" pos:column="28">(<argument><expr><name pos:line="2181" pos:column="29">SCI_STARTSTYLING</name></expr></argument>, <argument><expr><name pos:line="2181" pos:column="47">endStyle</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2181" pos:column="57">0xFF</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2182" pos:column="9">_pEditView</name><op:operator pos:line="2182" pos:column="19">-&gt;</op:operator><name pos:line="2182" pos:column="21">execute</name></name><argument_list pos:line="2182" pos:column="28">(<argument><expr><name pos:line="2182" pos:column="29">SCI_SETSTYLING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2182" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2182" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>



<function><type><name pos:line="2187" pos:column="1">void</name></type> <name><name pos:line="2187" pos:column="6">Notepad_plus</name><op:operator pos:line="2187" pos:column="18">::</op:operator><name pos:line="2187" pos:column="20">MaintainIndentation</name></name><parameter_list pos:line="2187" pos:column="39">(<param><decl><type><name pos:line="2187" pos:column="40">TCHAR</name></type> <name pos:line="2187" pos:column="46">ch</name></decl></param>)</parameter_list>
<block pos:line="2188" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2189" pos:column="9">int</name></type> <name pos:line="2189" pos:column="13">eolMode</name> <init pos:line="2189" pos:column="21">= <expr><call><name pos:line="2189" pos:column="23">int</name><argument_list pos:line="2189" pos:column="26">(<argument><expr><call><name><name pos:line="2189" pos:column="27">_pEditView</name><op:operator pos:line="2189" pos:column="37">-&gt;</op:operator><name pos:line="2189" pos:column="39">execute</name></name><argument_list pos:line="2189" pos:column="46">(<argument><expr><name pos:line="2189" pos:column="47">SCI_GETEOLMODE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2190" pos:column="9">int</name></type> <name pos:line="2190" pos:column="13">curLine</name> <init pos:line="2190" pos:column="21">= <expr><call><name pos:line="2190" pos:column="23">int</name><argument_list pos:line="2190" pos:column="26">(<argument><expr><call><name><name pos:line="2190" pos:column="27">_pEditView</name><op:operator pos:line="2190" pos:column="37">-&gt;</op:operator><name pos:line="2190" pos:column="39">getCurrentLineNumber</name></name><argument_list pos:line="2190" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2191" pos:column="9">int</name></type> <name pos:line="2191" pos:column="13">lastLine</name> <init pos:line="2191" pos:column="22">= <expr><name pos:line="2191" pos:column="24">curLine</name> <op:operator pos:line="2191" pos:column="32">-</op:operator> <lit:literal type="number" pos:line="2191" pos:column="34">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2192" pos:column="9">int</name></type> <name pos:line="2192" pos:column="13">indentAmount</name> <init pos:line="2192" pos:column="26">= <expr><lit:literal type="number" pos:line="2192" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="2194" pos:column="9">if <condition pos:line="2194" pos:column="12">(<expr><op:operator pos:line="2194" pos:column="13">(</op:operator><op:operator pos:line="2194" pos:column="14">(</op:operator><name pos:line="2194" pos:column="15">eolMode</name> <op:operator pos:line="2194" pos:column="23">==</op:operator> <name pos:line="2194" pos:column="26">SC_EOL_CRLF</name> <op:operator pos:line="2194" pos:column="38">||</op:operator> <name pos:line="2194" pos:column="41">eolMode</name> <op:operator pos:line="2194" pos:column="49">==</op:operator> <name pos:line="2194" pos:column="52">SC_EOL_LF</name><op:operator pos:line="2194" pos:column="61">)</op:operator> <op:operator pos:line="2194" pos:column="63">&amp;&amp;</op:operator> <name pos:line="2194" pos:column="66">ch</name> <op:operator pos:line="2194" pos:column="69">==</op:operator> <lit:literal type="char" pos:line="2194" pos:column="72">'\n'</lit:literal><op:operator pos:line="2194" pos:column="76">)</op:operator> <op:operator pos:line="2194" pos:column="78">||</op:operator>
	        <op:operator pos:line="2195" pos:column="17">(</op:operator><name pos:line="2195" pos:column="18">eolMode</name> <op:operator pos:line="2195" pos:column="26">==</op:operator> <name pos:line="2195" pos:column="29">SC_EOL_CR</name> <op:operator pos:line="2195" pos:column="39">&amp;&amp;</op:operator> <name pos:line="2195" pos:column="42">ch</name> <op:operator pos:line="2195" pos:column="45">==</op:operator> <lit:literal type="char" pos:line="2195" pos:column="48">'\r'</lit:literal><op:operator pos:line="2195" pos:column="52">)</op:operator></expr>)</condition><then pos:line="2195" pos:column="54">
	<block pos:line="2196" pos:column="9">{
		<while pos:line="2197" pos:column="17">while <condition pos:line="2197" pos:column="23">(<expr><name pos:line="2197" pos:column="24">lastLine</name> <op:operator pos:line="2197" pos:column="33">&gt;=</op:operator> <lit:literal type="number" pos:line="2197" pos:column="36">0</lit:literal> <op:operator pos:line="2197" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="2197" pos:column="41">_pEditView</name><op:operator pos:line="2197" pos:column="51">-&gt;</op:operator><name pos:line="2197" pos:column="53">getLineLength</name></name><argument_list pos:line="2197" pos:column="66">(<argument><expr><name pos:line="2197" pos:column="67">lastLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="2197" pos:column="77">==</op:operator> <lit:literal type="number" pos:line="2197" pos:column="80">0</lit:literal></expr>)</condition>
			<expr_stmt><expr><name pos:line="2198" pos:column="25">lastLine</name><op:operator pos:line="2198" pos:column="33">--</op:operator></expr>;</expr_stmt></while>

		<if pos:line="2200" pos:column="17">if <condition pos:line="2200" pos:column="20">(<expr><name pos:line="2200" pos:column="21">lastLine</name> <op:operator pos:line="2200" pos:column="30">&gt;=</op:operator> <lit:literal type="number" pos:line="2200" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="2200" pos:column="35"> <block pos:line="2200" pos:column="36">{
			<expr_stmt><expr><name pos:line="2201" pos:column="25">indentAmount</name> <op:operator pos:line="2201" pos:column="38">=</op:operator> <call><name><name pos:line="2201" pos:column="40">_pEditView</name><op:operator pos:line="2201" pos:column="50">-&gt;</op:operator><name pos:line="2201" pos:column="52">getLineIndent</name></name><argument_list pos:line="2201" pos:column="65">(<argument><expr><name pos:line="2201" pos:column="66">lastLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="2203" pos:column="17">if <condition pos:line="2203" pos:column="20">(<expr><name pos:line="2203" pos:column="21">indentAmount</name> <op:operator pos:line="2203" pos:column="34">&gt;</op:operator> <lit:literal type="number" pos:line="2203" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="2203" pos:column="38"> <block pos:line="2203" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="2204" pos:column="25">_pEditView</name><op:operator pos:line="2204" pos:column="35">-&gt;</op:operator><name pos:line="2204" pos:column="37">setLineIndent</name></name><argument_list pos:line="2204" pos:column="50">(<argument><expr><name pos:line="2204" pos:column="51">curLine</name></expr></argument>, <argument><expr><name pos:line="2204" pos:column="60">indentAmount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2209" pos:column="1">void</name></type> <name><name pos:line="2209" pos:column="6">Notepad_plus</name><op:operator pos:line="2209" pos:column="18">::</op:operator><name pos:line="2209" pos:column="20">specialCmd</name></name><parameter_list pos:line="2209" pos:column="30">(<param><decl><type><name pos:line="2209" pos:column="31">int</name></type> <name pos:line="2209" pos:column="35">id</name></decl></param>)</parameter_list>
<block pos:line="2210" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2211" pos:column="9">NppParameters</name> <type:modifier pos:line="2211" pos:column="23">*</type:modifier></type><name pos:line="2211" pos:column="24">pNppParam</name> <init pos:line="2211" pos:column="34">= <expr><call><name><name pos:line="2211" pos:column="36">NppParameters</name><op:operator pos:line="2211" pos:column="49">::</op:operator><name pos:line="2211" pos:column="51">getInstance</name></name><argument_list pos:line="2211" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<switch pos:line="2213" pos:column="9">switch <condition pos:line="2213" pos:column="16">(<expr><name pos:line="2213" pos:column="17">id</name></expr>)</condition>
	<block pos:line="2214" pos:column="9">{
        <case pos:line="2215" pos:column="9">case <expr><name pos:line="2215" pos:column="14">IDM_VIEW_LINENUMBER</name></expr>:
        </case><case pos:line="2216" pos:column="9">case <expr><name pos:line="2216" pos:column="14">IDM_VIEW_SYMBOLMARGIN</name></expr>:
		</case><case pos:line="2217" pos:column="17">case <expr><name pos:line="2217" pos:column="22">IDM_VIEW_DOCCHANGEMARGIN</name></expr>:
        <block pos:line="2218" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="2219" pos:column="13">int</name></type> <name pos:line="2219" pos:column="17">margin</name></decl>;</decl_stmt>
            <if pos:line="2220" pos:column="13">if <condition pos:line="2220" pos:column="16">(<expr><name pos:line="2220" pos:column="17">id</name> <op:operator pos:line="2220" pos:column="20">==</op:operator> <name pos:line="2220" pos:column="23">IDM_VIEW_LINENUMBER</name></expr>)</condition><then pos:line="2220" pos:column="43">
                <expr_stmt><expr><name pos:line="2221" pos:column="17">margin</name> <op:operator pos:line="2221" pos:column="24">=</op:operator> <name><name pos:line="2221" pos:column="26">ScintillaEditView</name><op:operator pos:line="2221" pos:column="43">::</op:operator><name pos:line="2221" pos:column="45">_SC_MARGE_LINENUMBER</name></name></expr>;</expr_stmt></then>
            <else pos:line="2222" pos:column="13">else <comment type="line" pos:line="2222" pos:column="18">//if (id == IDM_VIEW_SYMBOLMARGIN)</comment>
                <expr_stmt><expr><name pos:line="2223" pos:column="17">margin</name> <op:operator pos:line="2223" pos:column="24">=</op:operator> <name><name pos:line="2223" pos:column="26">ScintillaEditView</name><op:operator pos:line="2223" pos:column="43">::</op:operator><name pos:line="2223" pos:column="45">_SC_MARGE_SYBOLE</name></name></expr>;</expr_stmt></else></if>

			<if pos:line="2225" pos:column="25">if <condition pos:line="2225" pos:column="28">(<expr><call><name><name pos:line="2225" pos:column="29">_mainEditView</name><op:operator pos:line="2225" pos:column="42">.</op:operator><name pos:line="2225" pos:column="43">hasMarginShowed</name></name><argument_list pos:line="2225" pos:column="58">(<argument><expr><name pos:line="2225" pos:column="59">margin</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2225" pos:column="67">
			<block pos:line="2226" pos:column="25">{
                <expr_stmt><expr><call><name><name pos:line="2227" pos:column="17">_mainEditView</name><op:operator pos:line="2227" pos:column="30">.</op:operator><name pos:line="2227" pos:column="31">showMargin</name></name><argument_list pos:line="2227" pos:column="41">(<argument><expr><name pos:line="2227" pos:column="42">margin</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2227" pos:column="50">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2228" pos:column="33">_subEditView</name><op:operator pos:line="2228" pos:column="45">.</op:operator><name pos:line="2228" pos:column="46">showMargin</name></name><argument_list pos:line="2228" pos:column="56">(<argument><expr><name pos:line="2228" pos:column="57">margin</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2228" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
            <else pos:line="2230" pos:column="13">else
			<block pos:line="2231" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="2232" pos:column="33">_mainEditView</name><op:operator pos:line="2232" pos:column="46">.</op:operator><name pos:line="2232" pos:column="47">showMargin</name></name><argument_list pos:line="2232" pos:column="57">(<argument><expr><name pos:line="2232" pos:column="58">margin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="2233" pos:column="17">_subEditView</name><op:operator pos:line="2233" pos:column="29">.</op:operator><name pos:line="2233" pos:column="30">showMargin</name></name><argument_list pos:line="2233" pos:column="40">(<argument><expr><name pos:line="2233" pos:column="41">margin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			<break pos:line="2235" pos:column="25">break;</break>
        }</block>

        </case><case pos:line="2238" pos:column="9">case <expr><name pos:line="2238" pos:column="14">IDM_VIEW_FOLDERMAGIN_SIMPLE</name></expr>:
        </case><case pos:line="2239" pos:column="9">case <expr><name pos:line="2239" pos:column="14">IDM_VIEW_FOLDERMAGIN_ARROW</name></expr>:
        </case><case pos:line="2240" pos:column="9">case <expr><name pos:line="2240" pos:column="14">IDM_VIEW_FOLDERMAGIN_CIRCLE</name></expr>:
        </case><case pos:line="2241" pos:column="9">case <expr><name pos:line="2241" pos:column="14">IDM_VIEW_FOLDERMAGIN_BOX</name></expr>:
		</case><case pos:line="2242" pos:column="17">case <expr><name pos:line="2242" pos:column="22">IDM_VIEW_FOLDERMAGIN</name></expr>:
        <block pos:line="2243" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="2244" pos:column="13">folderStyle</name></type> <name pos:line="2244" pos:column="25">fStyle</name> <init pos:line="2244" pos:column="32">= <expr><op:operator pos:line="2244" pos:column="34">(</op:operator><name pos:line="2244" pos:column="35">id</name> <op:operator pos:line="2244" pos:column="38">==</op:operator> <name pos:line="2244" pos:column="41">IDM_VIEW_FOLDERMAGIN_SIMPLE</name><op:operator pos:line="2244" pos:column="68">)</op:operator><op:operator pos:line="2244" pos:column="69">?</op:operator><name pos:line="2244" pos:column="70">FOLDER_STYLE_SIMPLE</name><op:operator pos:line="2244" pos:column="89">:</op:operator>\
								 <op:operator pos:line="2245" pos:column="66">(</op:operator><name pos:line="2245" pos:column="67">id</name> <op:operator pos:line="2245" pos:column="70">==</op:operator> <name pos:line="2245" pos:column="73">IDM_VIEW_FOLDERMAGIN_ARROW</name><op:operator pos:line="2245" pos:column="99">)</op:operator><op:operator pos:line="2245" pos:column="100">?</op:operator><name pos:line="2245" pos:column="101">FOLDER_STYLE_ARROW</name><op:operator pos:line="2245" pos:column="119">:</op:operator>\
								 <op:operator pos:line="2246" pos:column="66">(</op:operator><name pos:line="2246" pos:column="67">id</name> <op:operator pos:line="2246" pos:column="70">==</op:operator> <name pos:line="2246" pos:column="73">IDM_VIEW_FOLDERMAGIN_CIRCLE</name><op:operator pos:line="2246" pos:column="100">)</op:operator><op:operator pos:line="2246" pos:column="101">?</op:operator><name pos:line="2246" pos:column="102">FOLDER_STYLE_CIRCLE</name><op:operator pos:line="2246" pos:column="121">:</op:operator>\
								 <op:operator pos:line="2247" pos:column="66">(</op:operator><name pos:line="2247" pos:column="67">id</name> <op:operator pos:line="2247" pos:column="70">==</op:operator> <name pos:line="2247" pos:column="73">IDM_VIEW_FOLDERMAGIN</name><op:operator pos:line="2247" pos:column="93">)</op:operator><op:operator pos:line="2247" pos:column="94">?</op:operator><name pos:line="2247" pos:column="95">FOLDER_STYLE_NONE</name><op:operator pos:line="2247" pos:column="112">:</op:operator><name pos:line="2247" pos:column="113">FOLDER_STYLE_BOX</name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="2249" pos:column="13">_mainEditView</name><op:operator pos:line="2249" pos:column="26">.</op:operator><name pos:line="2249" pos:column="27">setMakerStyle</name></name><argument_list pos:line="2249" pos:column="40">(<argument><expr><name pos:line="2249" pos:column="41">fStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2250" pos:column="25">_subEditView</name><op:operator pos:line="2250" pos:column="37">.</op:operator><name pos:line="2250" pos:column="38">setMakerStyle</name></name><argument_list pos:line="2250" pos:column="51">(<argument><expr><name pos:line="2250" pos:column="52">fStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="2251" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="2254" pos:column="17">case <expr><name pos:line="2254" pos:column="22">IDM_VIEW_CURLINE_HILITING</name></expr>:
		<block pos:line="2255" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="2256" pos:column="13">COLORREF</name></type> <name pos:line="2256" pos:column="22">colour</name> <init pos:line="2256" pos:column="29">= <expr><call><name><name pos:line="2256" pos:column="31">pNppParam</name><op:operator pos:line="2256" pos:column="40">-&gt;</op:operator><name pos:line="2256" pos:column="42">getCurLineHilitingColour</name></name><argument_list pos:line="2256" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2257" pos:column="25">_mainEditView</name><op:operator pos:line="2257" pos:column="38">.</op:operator><name pos:line="2257" pos:column="39">setCurrentLineHiLiting</name></name><argument_list pos:line="2257" pos:column="61">(<argument><expr><op:operator pos:line="2257" pos:column="62">!</op:operator><call><name><name pos:line="2257" pos:column="63">_pEditView</name><op:operator pos:line="2257" pos:column="73">-&gt;</op:operator><name pos:line="2257" pos:column="75">isCurrentLineHiLiting</name></name><argument_list pos:line="2257" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2257" pos:column="100">colour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2258" pos:column="25">_subEditView</name><op:operator pos:line="2258" pos:column="37">.</op:operator><name pos:line="2258" pos:column="38">setCurrentLineHiLiting</name></name><argument_list pos:line="2258" pos:column="60">(<argument><expr><op:operator pos:line="2258" pos:column="61">!</op:operator><call><name><name pos:line="2258" pos:column="62">_pEditView</name><op:operator pos:line="2258" pos:column="72">-&gt;</op:operator><name pos:line="2258" pos:column="74">isCurrentLineHiLiting</name></name><argument_list pos:line="2258" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2258" pos:column="99">colour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2259" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2262" pos:column="17">case <expr><name pos:line="2262" pos:column="22">IDM_VIEW_EDGEBACKGROUND</name></expr>:
		</case><case pos:line="2263" pos:column="17">case <expr><name pos:line="2263" pos:column="22">IDM_VIEW_EDGELINE</name></expr>:
		</case><case pos:line="2264" pos:column="17">case <expr><name pos:line="2264" pos:column="22">IDM_VIEW_EDGENONE</name></expr>:
		<block pos:line="2265" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2266" pos:column="25">int</name></type> <name pos:line="2266" pos:column="29">mode</name></decl>;</decl_stmt>
			<switch pos:line="2267" pos:column="25">switch <condition pos:line="2267" pos:column="32">(<expr><name pos:line="2267" pos:column="33">id</name></expr>)</condition>
			<block pos:line="2268" pos:column="25">{
				<case pos:line="2269" pos:column="33">case <expr><name pos:line="2269" pos:column="38">IDM_VIEW_EDGELINE</name></expr>:
				<block pos:line="2270" pos:column="33">{
					<expr_stmt><expr><name pos:line="2271" pos:column="41">mode</name> <op:operator pos:line="2271" pos:column="46">=</op:operator> <name pos:line="2271" pos:column="48">EDGE_LINE</name></expr>;</expr_stmt>
					<break pos:line="2272" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="2274" pos:column="33">case <expr><name pos:line="2274" pos:column="38">IDM_VIEW_EDGEBACKGROUND</name></expr>:
				<block pos:line="2275" pos:column="33">{
					<expr_stmt><expr><name pos:line="2276" pos:column="41">mode</name> <op:operator pos:line="2276" pos:column="46">=</op:operator> <name pos:line="2276" pos:column="48">EDGE_BACKGROUND</name></expr>;</expr_stmt>
					<break pos:line="2277" pos:column="41">break;</break>
				}</block>
				</case><default pos:line="2279" pos:column="33">default :
					<expr_stmt><expr><name pos:line="2280" pos:column="41">mode</name> <op:operator pos:line="2280" pos:column="46">=</op:operator> <name pos:line="2280" pos:column="48">EDGE_NONE</name></expr>;</expr_stmt>
			</default>}</block></switch>
			<expr_stmt><expr><call><name><name pos:line="2282" pos:column="25">_mainEditView</name><op:operator pos:line="2282" pos:column="38">.</op:operator><name pos:line="2282" pos:column="39">execute</name></name><argument_list pos:line="2282" pos:column="46">(<argument><expr><name pos:line="2282" pos:column="47">SCI_SETEDGEMODE</name></expr></argument>, <argument><expr><name pos:line="2282" pos:column="64">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2283" pos:column="25">_subEditView</name><op:operator pos:line="2283" pos:column="37">.</op:operator><name pos:line="2283" pos:column="38">execute</name></name><argument_list pos:line="2283" pos:column="45">(<argument><expr><name pos:line="2283" pos:column="46">SCI_SETEDGEMODE</name></expr></argument>, <argument><expr><name pos:line="2283" pos:column="63">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2284" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2287" pos:column="17">case <expr><name pos:line="2287" pos:column="22">IDM_VIEW_LWDEF</name></expr>:
		</case><case pos:line="2288" pos:column="17">case <expr><name pos:line="2288" pos:column="22">IDM_VIEW_LWALIGN</name></expr>:
		</case><case pos:line="2289" pos:column="17">case <expr><name pos:line="2289" pos:column="22">IDM_VIEW_LWINDENT</name></expr>:
		<block pos:line="2290" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2291" pos:column="25">int</name></type> <name pos:line="2291" pos:column="29">mode</name> <init pos:line="2291" pos:column="34">= <expr><op:operator pos:line="2291" pos:column="36">(</op:operator><name pos:line="2291" pos:column="37">id</name> <op:operator pos:line="2291" pos:column="40">==</op:operator> <name pos:line="2291" pos:column="43">IDM_VIEW_LWALIGN</name><op:operator pos:line="2291" pos:column="59">)</op:operator><op:operator pos:line="2291" pos:column="60">?</op:operator><name pos:line="2291" pos:column="61">SC_WRAPINDENT_SAME</name><op:operator pos:line="2291" pos:column="79">:</op:operator>\
				<op:operator pos:line="2292" pos:column="33">(</op:operator><name pos:line="2292" pos:column="34">id</name> <op:operator pos:line="2292" pos:column="37">==</op:operator> <name pos:line="2292" pos:column="40">IDM_VIEW_LWINDENT</name><op:operator pos:line="2292" pos:column="57">)</op:operator><op:operator pos:line="2292" pos:column="58">?</op:operator><name pos:line="2292" pos:column="59">SC_WRAPINDENT_INDENT</name><op:operator pos:line="2292" pos:column="79">:</op:operator><name pos:line="2292" pos:column="80">SC_WRAPINDENT_FIXED</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2293" pos:column="25">_mainEditView</name><op:operator pos:line="2293" pos:column="38">.</op:operator><name pos:line="2293" pos:column="39">execute</name></name><argument_list pos:line="2293" pos:column="46">(<argument><expr><name pos:line="2293" pos:column="47">SCI_SETWRAPINDENTMODE</name></expr></argument>, <argument><expr><name pos:line="2293" pos:column="70">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2294" pos:column="25">_subEditView</name><op:operator pos:line="2294" pos:column="37">.</op:operator><name pos:line="2294" pos:column="38">execute</name></name><argument_list pos:line="2294" pos:column="45">(<argument><expr><name pos:line="2294" pos:column="46">SCI_SETWRAPINDENTMODE</name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="69">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2295" pos:column="25">break;</break>
		}</block>
	</case>}</block></switch>
}</block></function>


<function><type><name pos:line="2301" pos:column="1">void</name></type> <name><name pos:line="2301" pos:column="6">Notepad_plus</name><op:operator pos:line="2301" pos:column="18">::</op:operator><name pos:line="2301" pos:column="20">setLanguage</name></name><parameter_list pos:line="2301" pos:column="31">(<param><decl><type><name pos:line="2301" pos:column="32">LangType</name></type> <name pos:line="2301" pos:column="41">langType</name></decl></param>)</parameter_list> <block pos:line="2301" pos:column="51">{
	<comment type="line" pos:line="2302" pos:column="9">//Add logic to prevent changing a language when a document is shared between two views</comment>
	<comment type="line" pos:line="2303" pos:column="9">//If so, release one document</comment>
	<decl_stmt><decl><type><name pos:line="2304" pos:column="9">bool</name></type> <name pos:line="2304" pos:column="14">reset</name> <init pos:line="2304" pos:column="20">= <expr><lit:literal type="boolean" pos:line="2304" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2305" pos:column="9">Document</name></type> <name pos:line="2305" pos:column="18">prev</name> <init pos:line="2305" pos:column="23">= <expr><lit:literal type="number" pos:line="2305" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="2306" pos:column="9">if <condition pos:line="2306" pos:column="12">(<expr><call><name pos:line="2306" pos:column="13">bothActive</name><argument_list pos:line="2306" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="2306" pos:column="26"> <block pos:line="2306" pos:column="27">{
		<if pos:line="2307" pos:column="17">if <condition pos:line="2307" pos:column="20">(<expr><call><name><name pos:line="2307" pos:column="21">_mainEditView</name><op:operator pos:line="2307" pos:column="34">.</op:operator><name pos:line="2307" pos:column="35">getCurrentBufferID</name></name><argument_list pos:line="2307" pos:column="53">()</argument_list></call> <op:operator pos:line="2307" pos:column="56">==</op:operator> <call><name><name pos:line="2307" pos:column="59">_subEditView</name><op:operator pos:line="2307" pos:column="71">.</op:operator><name pos:line="2307" pos:column="72">getCurrentBufferID</name></name><argument_list pos:line="2307" pos:column="90">()</argument_list></call></expr>)</condition><then pos:line="2307" pos:column="93"> <block pos:line="2307" pos:column="94">{
			<expr_stmt><expr><name pos:line="2308" pos:column="25">reset</name> <op:operator pos:line="2308" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="2308" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2309" pos:column="25">_subEditView</name><op:operator pos:line="2309" pos:column="37">.</op:operator><name pos:line="2309" pos:column="38">saveCurrentPos</name></name><argument_list pos:line="2309" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2310" pos:column="25">prev</name> <op:operator pos:line="2310" pos:column="30">=</op:operator> <call><name><name pos:line="2310" pos:column="32">_subEditView</name><op:operator pos:line="2310" pos:column="44">.</op:operator><name pos:line="2310" pos:column="45">execute</name></name><argument_list pos:line="2310" pos:column="52">(<argument><expr><name pos:line="2310" pos:column="53">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2311" pos:column="25">_subEditView</name><op:operator pos:line="2311" pos:column="37">.</op:operator><name pos:line="2311" pos:column="38">execute</name></name><argument_list pos:line="2311" pos:column="45">(<argument><expr><name pos:line="2311" pos:column="46">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2311" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2311" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="2314" pos:column="9">if <condition pos:line="2314" pos:column="12">(<expr><name pos:line="2314" pos:column="13">reset</name></expr>)</condition><then pos:line="2314" pos:column="19"> <block pos:line="2314" pos:column="20">{
		<expr_stmt><expr><call><name><name pos:line="2315" pos:column="17">_mainEditView</name><op:operator pos:line="2315" pos:column="30">.</op:operator><name pos:line="2315" pos:column="31">getCurrentBuffer</name></name><argument_list pos:line="2315" pos:column="47">()</argument_list></call><op:operator pos:line="2315" pos:column="49">-&gt;</op:operator><call><name pos:line="2315" pos:column="51">setLangType</name><argument_list pos:line="2315" pos:column="62">(<argument><expr><name pos:line="2315" pos:column="63">langType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="2316" pos:column="11">else <block pos:line="2316" pos:column="16">{
		<comment type="block" pos:line="2317" pos:column="17">/*
		int mode = _pEditView-&gt;execute(SCI_GETMODEVENTMASK, 0, 0);
		_pEditView-&gt;execute(SCI_SETMODEVENTMASK, 0, 0);
		_pEditView-&gt;getCurrentBuffer()-&gt;setLangType(langType);
		_pEditView-&gt;execute(SCI_SETMODEVENTMASK, mode, 0);
		*/</comment>
		<expr_stmt><expr><call><name><name pos:line="2323" pos:column="17">_pEditView</name><op:operator pos:line="2323" pos:column="27">-&gt;</op:operator><name pos:line="2323" pos:column="29">getCurrentBuffer</name></name><argument_list pos:line="2323" pos:column="45">()</argument_list></call><op:operator pos:line="2323" pos:column="47">-&gt;</op:operator><call><name pos:line="2323" pos:column="49">setLangType</name><argument_list pos:line="2323" pos:column="60">(<argument><expr><name pos:line="2323" pos:column="61">langType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="2326" pos:column="9">if <condition pos:line="2326" pos:column="12">(<expr><name pos:line="2326" pos:column="13">reset</name></expr>)</condition><then pos:line="2326" pos:column="19"> <block pos:line="2326" pos:column="20">{
		<expr_stmt><expr><call><name><name pos:line="2327" pos:column="17">_subEditView</name><op:operator pos:line="2327" pos:column="29">.</op:operator><name pos:line="2327" pos:column="30">execute</name></name><argument_list pos:line="2327" pos:column="37">(<argument><expr><name pos:line="2327" pos:column="38">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2327" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2327" pos:column="60">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2328" pos:column="17">_subEditView</name><op:operator pos:line="2328" pos:column="29">.</op:operator><name pos:line="2328" pos:column="30">restoreCurrentPos</name></name><argument_list pos:line="2328" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function><empty_stmt pos:line="2330" pos:column="2">;</empty_stmt>

<enum pos:line="2332" pos:column="1">enum <name pos:line="2332" pos:column="6">LangType</name> <name><name pos:line="2332" pos:column="15">Notepad_plus</name><op:operator pos:line="2332" pos:column="27">::</op:operator><name pos:line="2332" pos:column="29">menuID2LangType</name></name><expr_stmt><expr><op:operator pos:line="2332" pos:column="44">(</op:operator><name pos:line="2332" pos:column="45">int</name> <name pos:line="2332" pos:column="49">cmdID</name><op:operator pos:line="2332" pos:column="54">)</op:operator>
<block pos:line="2333" pos:column="1">{
	<switch pos:line="2334" pos:column="9">switch <condition pos:line="2334" pos:column="16">(<expr><name pos:line="2334" pos:column="17">cmdID</name></expr>)</condition>
	<block pos:line="2335" pos:column="9">{
        <case pos:line="2336" pos:column="9">case <expr><name pos:line="2336" pos:column="14">IDM_LANG_C</name></expr>	:
            <return pos:line="2337" pos:column="13">return <expr><name pos:line="2337" pos:column="20">L_C</name></expr>;</return>
        </case><case pos:line="2338" pos:column="9">case <expr><name pos:line="2338" pos:column="14">IDM_LANG_CPP</name></expr> :
            <return pos:line="2339" pos:column="13">return <expr><name pos:line="2339" pos:column="20">L_CPP</name></expr>;</return>
        </case><case pos:line="2340" pos:column="9">case <expr><name pos:line="2340" pos:column="14">IDM_LANG_JAVA</name></expr> :
            <return pos:line="2341" pos:column="13">return <expr><name pos:line="2341" pos:column="20">L_JAVA</name></expr>;</return>
        </case><case pos:line="2342" pos:column="9">case <expr><name pos:line="2342" pos:column="14">IDM_LANG_CS</name></expr> :
            <return pos:line="2343" pos:column="13">return <expr><name pos:line="2343" pos:column="20">L_CS</name></expr>;</return>
        </case><case pos:line="2344" pos:column="9">case <expr><name pos:line="2344" pos:column="14">IDM_LANG_HTML</name></expr> :
            <return pos:line="2345" pos:column="13">return <expr><name pos:line="2345" pos:column="20">L_HTML</name></expr>;</return>
        </case><case pos:line="2346" pos:column="9">case <expr><name pos:line="2346" pos:column="14">IDM_LANG_XML</name></expr> :
            <return pos:line="2347" pos:column="13">return <expr><name pos:line="2347" pos:column="20">L_XML</name></expr>;</return>
        </case><case pos:line="2348" pos:column="9">case <expr><name pos:line="2348" pos:column="14">IDM_LANG_JS</name></expr> :
            <return pos:line="2349" pos:column="13">return <expr><name pos:line="2349" pos:column="20">L_JS</name></expr>;</return>
        </case><case pos:line="2350" pos:column="9">case <expr><name pos:line="2350" pos:column="14">IDM_LANG_PHP</name></expr> :
            <return pos:line="2351" pos:column="13">return <expr><name pos:line="2351" pos:column="20">L_PHP</name></expr>;</return>
        </case><case pos:line="2352" pos:column="9">case <expr><name pos:line="2352" pos:column="14">IDM_LANG_ASP</name></expr> :
            <return pos:line="2353" pos:column="13">return <expr><name pos:line="2353" pos:column="20">L_ASP</name></expr>;</return>
        </case><case pos:line="2354" pos:column="9">case <expr><name pos:line="2354" pos:column="14">IDM_LANG_JSP</name></expr> :
            <return pos:line="2355" pos:column="13">return <expr><name pos:line="2355" pos:column="20">L_JSP</name></expr>;</return>
        </case><case pos:line="2356" pos:column="9">case <expr><name pos:line="2356" pos:column="14">IDM_LANG_CSS</name></expr> :
            <return pos:line="2357" pos:column="13">return <expr><name pos:line="2357" pos:column="20">L_CSS</name></expr>;</return>
        </case><case pos:line="2358" pos:column="9">case <expr><name pos:line="2358" pos:column="14">IDM_LANG_LUA</name></expr> :
            <return pos:line="2359" pos:column="13">return <expr><name pos:line="2359" pos:column="20">L_LUA</name></expr>;</return>
        </case><case pos:line="2360" pos:column="9">case <expr><name pos:line="2360" pos:column="14">IDM_LANG_PERL</name></expr> :
            <return pos:line="2361" pos:column="13">return <expr><name pos:line="2361" pos:column="20">L_PERL</name></expr>;</return>
        </case><case pos:line="2362" pos:column="9">case <expr><name pos:line="2362" pos:column="14">IDM_LANG_PYTHON</name></expr> :
            <return pos:line="2363" pos:column="13">return <expr><name pos:line="2363" pos:column="20">L_PYTHON</name></expr>;</return>
        </case><case pos:line="2364" pos:column="9">case <expr><name pos:line="2364" pos:column="14">IDM_LANG_PASCAL</name></expr> :
            <return pos:line="2365" pos:column="13">return <expr><name pos:line="2365" pos:column="20">L_PASCAL</name></expr>;</return>
        </case><case pos:line="2366" pos:column="9">case <expr><name pos:line="2366" pos:column="14">IDM_LANG_BATCH</name></expr> :
            <return pos:line="2367" pos:column="13">return <expr><name pos:line="2367" pos:column="20">L_BATCH</name></expr>;</return>
        </case><case pos:line="2368" pos:column="9">case <expr><name pos:line="2368" pos:column="14">IDM_LANG_OBJC</name></expr> :
            <return pos:line="2369" pos:column="13">return <expr><name pos:line="2369" pos:column="20">L_OBJC</name></expr>;</return>
        </case><case pos:line="2370" pos:column="9">case <expr><name pos:line="2370" pos:column="14">IDM_LANG_VB</name></expr> :
            <return pos:line="2371" pos:column="13">return <expr><name pos:line="2371" pos:column="20">L_VB</name></expr>;</return>
        </case><case pos:line="2372" pos:column="9">case <expr><name pos:line="2372" pos:column="14">IDM_LANG_SQL</name></expr> :
            <return pos:line="2373" pos:column="13">return <expr><name pos:line="2373" pos:column="20">L_SQL</name></expr>;</return>
        </case><case pos:line="2374" pos:column="9">case <expr><name pos:line="2374" pos:column="14">IDM_LANG_ASCII</name></expr> :
            <return pos:line="2375" pos:column="13">return <expr><name pos:line="2375" pos:column="20">L_ASCII</name></expr>;</return>
        </case><case pos:line="2376" pos:column="9">case <expr><name pos:line="2376" pos:column="14">IDM_LANG_TEXT</name></expr> :
            <return pos:line="2377" pos:column="13">return <expr><name pos:line="2377" pos:column="20">L_TEXT</name></expr>;</return>
        </case><case pos:line="2378" pos:column="9">case <expr><name pos:line="2378" pos:column="14">IDM_LANG_RC</name></expr> :
            <return pos:line="2379" pos:column="13">return <expr><name pos:line="2379" pos:column="20">L_RC</name></expr>;</return>
        </case><case pos:line="2380" pos:column="9">case <expr><name pos:line="2380" pos:column="14">IDM_LANG_MAKEFILE</name></expr> :
            <return pos:line="2381" pos:column="13">return <expr><name pos:line="2381" pos:column="20">L_MAKEFILE</name></expr>;</return>
        </case><case pos:line="2382" pos:column="9">case <expr><name pos:line="2382" pos:column="14">IDM_LANG_INI</name></expr> :
            <return pos:line="2383" pos:column="13">return <expr><name pos:line="2383" pos:column="20">L_INI</name></expr>;</return>
        </case><case pos:line="2384" pos:column="9">case <expr><name pos:line="2384" pos:column="14">IDM_LANG_TEX</name></expr> :
            <return pos:line="2385" pos:column="13">return <expr><name pos:line="2385" pos:column="20">L_TEX</name></expr>;</return>
        </case><case pos:line="2386" pos:column="9">case <expr><name pos:line="2386" pos:column="14">IDM_LANG_FORTRAN</name></expr> :
            <return pos:line="2387" pos:column="13">return <expr><name pos:line="2387" pos:column="20">L_FORTRAN</name></expr>;</return>
        </case><case pos:line="2388" pos:column="9">case <expr><name pos:line="2388" pos:column="14">IDM_LANG_BASH</name></expr> :
            <return pos:line="2389" pos:column="13">return <expr><name pos:line="2389" pos:column="20">L_BASH</name></expr>;</return>
        </case><case pos:line="2390" pos:column="9">case <expr><name pos:line="2390" pos:column="14">IDM_LANG_FLASH</name></expr> :
            <return pos:line="2391" pos:column="13">return <expr><name pos:line="2391" pos:column="20">L_FLASH</name></expr>;</return>
		</case><case pos:line="2392" pos:column="17">case <expr><name pos:line="2392" pos:column="22">IDM_LANG_NSIS</name></expr> :
            <return pos:line="2393" pos:column="13">return <expr><name pos:line="2393" pos:column="20">L_NSIS</name></expr>;</return>
		</case><case pos:line="2394" pos:column="17">case <expr><name pos:line="2394" pos:column="22">IDM_LANG_TCL</name></expr> :
            <return pos:line="2395" pos:column="13">return <expr><name pos:line="2395" pos:column="20">L_TCL</name></expr>;</return>
		</case><case pos:line="2396" pos:column="17">case <expr><name pos:line="2396" pos:column="22">IDM_LANG_LISP</name></expr> :
			<return pos:line="2397" pos:column="25">return <expr><name pos:line="2397" pos:column="32">L_LISP</name></expr>;</return>
		</case><case pos:line="2398" pos:column="17">case <expr><name pos:line="2398" pos:column="22">IDM_LANG_SCHEME</name></expr> :
			<return pos:line="2399" pos:column="25">return <expr><name pos:line="2399" pos:column="32">L_SCHEME</name></expr>;</return>
		</case><case pos:line="2400" pos:column="17">case <expr><name pos:line="2400" pos:column="22">IDM_LANG_ASM</name></expr> :
            <return pos:line="2401" pos:column="13">return <expr><name pos:line="2401" pos:column="20">L_ASM</name></expr>;</return>
		</case><case pos:line="2402" pos:column="17">case <expr><name pos:line="2402" pos:column="22">IDM_LANG_DIFF</name></expr> :
            <return pos:line="2403" pos:column="13">return <expr><name pos:line="2403" pos:column="20">L_DIFF</name></expr>;</return>
		</case><case pos:line="2404" pos:column="17">case <expr><name pos:line="2404" pos:column="22">IDM_LANG_PROPS</name></expr> :
            <return pos:line="2405" pos:column="13">return <expr><name pos:line="2405" pos:column="20">L_PROPS</name></expr>;</return>
		</case><case pos:line="2406" pos:column="17">case <expr><name pos:line="2406" pos:column="22">IDM_LANG_PS</name></expr>:
            <return pos:line="2407" pos:column="13">return <expr><name pos:line="2407" pos:column="20">L_PS</name></expr>;</return>
		</case><case pos:line="2408" pos:column="17">case <expr><name pos:line="2408" pos:column="22">IDM_LANG_RUBY</name></expr>:
            <return pos:line="2409" pos:column="13">return <expr><name pos:line="2409" pos:column="20">L_RUBY</name></expr>;</return>
		</case><case pos:line="2410" pos:column="17">case <expr><name pos:line="2410" pos:column="22">IDM_LANG_SMALLTALK</name></expr>:
            <return pos:line="2411" pos:column="13">return <expr><name pos:line="2411" pos:column="20">L_SMALLTALK</name></expr>;</return>
		</case><case pos:line="2412" pos:column="17">case <expr><name pos:line="2412" pos:column="22">IDM_LANG_VHDL</name></expr> :
            <return pos:line="2413" pos:column="13">return <expr><name pos:line="2413" pos:column="20">L_VHDL</name></expr>;</return>
        </case><case pos:line="2414" pos:column="9">case <expr><name pos:line="2414" pos:column="14">IDM_LANG_KIX</name></expr> :
            <return pos:line="2415" pos:column="13">return <expr><name pos:line="2415" pos:column="20">L_KIX</name></expr>;</return>
        </case><case pos:line="2416" pos:column="9">case <expr><name pos:line="2416" pos:column="14">IDM_LANG_CAML</name></expr> :
            <return pos:line="2417" pos:column="13">return <expr><name pos:line="2417" pos:column="20">L_CAML</name></expr>;</return>
        </case><case pos:line="2418" pos:column="9">case <expr><name pos:line="2418" pos:column="14">IDM_LANG_ADA</name></expr> :
            <return pos:line="2419" pos:column="13">return <expr><name pos:line="2419" pos:column="20">L_ADA</name></expr>;</return>
        </case><case pos:line="2420" pos:column="9">case <expr><name pos:line="2420" pos:column="14">IDM_LANG_VERILOG</name></expr> :
            <return pos:line="2421" pos:column="13">return <expr><name pos:line="2421" pos:column="20">L_VERILOG</name></expr>;</return>
		</case><case pos:line="2422" pos:column="17">case <expr><name pos:line="2422" pos:column="22">IDM_LANG_MATLAB</name></expr> :
            <return pos:line="2423" pos:column="13">return <expr><name pos:line="2423" pos:column="20">L_MATLAB</name></expr>;</return>
		</case><case pos:line="2424" pos:column="17">case <expr><name pos:line="2424" pos:column="22">IDM_LANG_HASKELL</name></expr> :
            <return pos:line="2425" pos:column="13">return <expr><name pos:line="2425" pos:column="20">L_HASKELL</name></expr>;</return>
        </case><case pos:line="2426" pos:column="9">case <expr><name pos:line="2426" pos:column="14">IDM_LANG_AU3</name></expr> :
            <return pos:line="2427" pos:column="13">return <expr><name pos:line="2427" pos:column="20">L_AU3</name></expr>;</return>
		</case><case pos:line="2428" pos:column="17">case <expr><name pos:line="2428" pos:column="22">IDM_LANG_INNO</name></expr> :
            <return pos:line="2429" pos:column="13">return <expr><name pos:line="2429" pos:column="20">L_INNO</name></expr>;</return>
		</case><case pos:line="2430" pos:column="17">case <expr><name pos:line="2430" pos:column="22">IDM_LANG_CMAKE</name></expr> :
            <return pos:line="2431" pos:column="13">return <expr><name pos:line="2431" pos:column="20">L_CMAKE</name></expr>;</return>
		</case><case pos:line="2432" pos:column="17">case <expr><name pos:line="2432" pos:column="22">IDM_LANG_YAML</name></expr> :
			<return pos:line="2433" pos:column="25">return <expr><name pos:line="2433" pos:column="32">L_YAML</name></expr>;</return>
        </case><case pos:line="2434" pos:column="9">case <expr><name pos:line="2434" pos:column="14">IDM_LANG_COBOL</name></expr> :
            <return pos:line="2435" pos:column="13">return <expr><name pos:line="2435" pos:column="20">L_COBOL</name></expr>;</return>
        </case><case pos:line="2436" pos:column="9">case <expr><name pos:line="2436" pos:column="14">IDM_LANG_D</name></expr> :
            <return pos:line="2437" pos:column="13">return <expr><name pos:line="2437" pos:column="20">L_D</name></expr>;</return>
        </case><case pos:line="2438" pos:column="9">case <expr><name pos:line="2438" pos:column="14">IDM_LANG_GUI4CLI</name></expr> :
            <return pos:line="2439" pos:column="13">return <expr><name pos:line="2439" pos:column="20">L_GUI4CLI</name></expr>;</return>
        </case><case pos:line="2440" pos:column="9">case <expr><name pos:line="2440" pos:column="14">IDM_LANG_POWERSHELL</name></expr> :
            <return pos:line="2441" pos:column="13">return <expr><name pos:line="2441" pos:column="20">L_POWERSHELL</name></expr>;</return>
        </case><case pos:line="2442" pos:column="9">case <expr><name pos:line="2442" pos:column="14">IDM_LANG_R</name></expr> :
            <return pos:line="2443" pos:column="13">return <expr><name pos:line="2443" pos:column="20">L_R</name></expr>;</return>

		</case><case pos:line="2445" pos:column="17">case <expr><name pos:line="2445" pos:column="22">IDM_LANG_USER</name></expr> :
            <return pos:line="2446" pos:column="13">return <expr><name pos:line="2446" pos:column="20">L_USER</name></expr>;</return>
		</case><default pos:line="2447" pos:column="17">default: <block pos:line="2447" pos:column="26">{
			<if pos:line="2448" pos:column="25">if <condition pos:line="2448" pos:column="28">(<expr><name pos:line="2448" pos:column="29">cmdID</name> <op:operator pos:line="2448" pos:column="35">&gt;=</op:operator> <name pos:line="2448" pos:column="38">IDM_LANG_USER</name> <op:operator pos:line="2448" pos:column="52">&amp;&amp;</op:operator> <name pos:line="2448" pos:column="55">cmdID</name> <op:operator pos:line="2448" pos:column="61">&lt;=</op:operator> <name pos:line="2448" pos:column="64">IDM_LANG_USER_LIMIT</name></expr>)</condition><then pos:line="2448" pos:column="84"> <block pos:line="2448" pos:column="85">{
				<return pos:line="2449" pos:column="33">return <expr><name pos:line="2449" pos:column="40">L_USER</name></expr>;</return>
			<expr_stmt/></block></then></if></block></default></block></switch>}</block></expr></expr_stmt></enum>
			<break pos:line="2451" pos:column="25">break;</break> }
	}
	<return pos:line="2453" pos:column="9">return <expr><name pos:line="2453" pos:column="16">L_EXTERNAL</name></expr>;</return>
}


void <macro><name pos:line="2457" pos:column="6">Notepad_plus</name></macro><expr_stmt><expr><name><op:operator pos:line="2457" pos:column="18">::</op:operator><name pos:line="2457" pos:column="20">setTitle</name></name><op:operator pos:line="2457" pos:column="28">(</op:operator><op:operator pos:line="2457" pos:column="29">)</op:operator>
<block pos:line="2458" pos:column="1">{
	<expr pos:line="2459" pos:column="9">const <name pos:line="2459" pos:column="15">NppGUI</name> <op:operator pos:line="2459" pos:column="22">&amp;</op:operator> <name pos:line="2459" pos:column="24">nppGUI</name> <op:operator pos:line="2459" pos:column="31">=</op:operator> <call><name><name pos:line="2459" pos:column="33">NppParameters</name><op:operator pos:line="2459" pos:column="46">::</op:operator><name pos:line="2459" pos:column="48">getInstance</name></name><argument_list pos:line="2459" pos:column="59">()</argument_list></call><op:operator pos:line="2459" pos:column="61">-&gt;</op:operator><call><name pos:line="2459" pos:column="63">getNppGUI</name><argument_list pos:line="2459" pos:column="72">()</argument_list></call></expr>;
	<comment type="line" pos:line="2460" pos:column="9">//Get the buffer</comment>
	<expr><name pos:line="2461" pos:column="9">Buffer</name> <op:operator pos:line="2461" pos:column="16">*</op:operator> <name pos:line="2461" pos:column="18">buf</name> <op:operator pos:line="2461" pos:column="22">=</op:operator> <call><name><name pos:line="2461" pos:column="24">_pEditView</name><op:operator pos:line="2461" pos:column="34">-&gt;</op:operator><name pos:line="2461" pos:column="36">getCurrentBuffer</name></name><argument_list pos:line="2461" pos:column="52">()</argument_list></call></expr>;

	<expr><name pos:line="2463" pos:column="9">generic_string</name> <name pos:line="2463" pos:column="24">result</name> <op:operator pos:line="2463" pos:column="31">=</op:operator> <call><name pos:line="2463" pos:column="33">TEXT</name><argument_list pos:line="2463" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="2463" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr>;
	<if pos:line="2464" pos:column="9">if <condition pos:line="2464" pos:column="12">(<expr><call><name><name pos:line="2464" pos:column="13">buf</name><op:operator pos:line="2464" pos:column="16">-&gt;</op:operator><name pos:line="2464" pos:column="18">isDirty</name></name><argument_list pos:line="2464" pos:column="25">()</argument_list></call></expr>)</condition><then pos:line="2464" pos:column="28">
	<block pos:line="2465" pos:column="9">{
		<expr_stmt><expr><name pos:line="2466" pos:column="17">result</name> <op:operator pos:line="2466" pos:column="24">+=</op:operator> <call><name pos:line="2466" pos:column="27">TEXT</name><argument_list pos:line="2466" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="2466" pos:column="32">"*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt/></block></then></if>}</block></expr></expr_stmt>

	<if pos:line="2469" pos:column="9">if <condition pos:line="2469" pos:column="12">(<expr><name><name pos:line="2469" pos:column="13">nppGUI</name><op:operator pos:line="2469" pos:column="19">.</op:operator><name pos:line="2469" pos:column="20">_shortTitlebar</name></name></expr>)</condition><then pos:line="2469" pos:column="35">
	<block pos:line="2470" pos:column="9">{
		<expr_stmt><expr><name pos:line="2471" pos:column="17">result</name> <op:operator pos:line="2471" pos:column="24">+=</op:operator> <call><name><name pos:line="2471" pos:column="27">buf</name><op:operator pos:line="2471" pos:column="30">-&gt;</op:operator><name pos:line="2471" pos:column="32">getFileName</name></name><argument_list pos:line="2471" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="2473" pos:column="9">else
	<block pos:line="2474" pos:column="9">{
		<expr_stmt><expr><name pos:line="2475" pos:column="17">result</name> <op:operator pos:line="2475" pos:column="24">+=</op:operator> <call><name><name pos:line="2475" pos:column="27">buf</name><op:operator pos:line="2475" pos:column="30">-&gt;</op:operator><name pos:line="2475" pos:column="32">getFullPathName</name></name><argument_list pos:line="2475" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><name pos:line="2477" pos:column="9">result</name> <op:operator pos:line="2477" pos:column="16">+=</op:operator> <call><name pos:line="2477" pos:column="19">TEXT</name><argument_list pos:line="2477" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="2477" pos:column="24">" - "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2478" pos:column="9">result</name> <op:operator pos:line="2478" pos:column="16">+=</op:operator> <call><name><name pos:line="2478" pos:column="19">_pPublicInterface</name><op:operator pos:line="2478" pos:column="36">-&gt;</op:operator><name pos:line="2478" pos:column="38">getClassName</name></name><argument_list pos:line="2478" pos:column="50">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="2480" pos:column="9">::</op:operator><name pos:line="2480" pos:column="11">SendMessage</name></name><argument_list pos:line="2480" pos:column="22">(<argument><expr><call><name><name pos:line="2480" pos:column="23">_pPublicInterface</name><op:operator pos:line="2480" pos:column="40">-&gt;</op:operator><name pos:line="2480" pos:column="42">getHSelf</name></name><argument_list pos:line="2480" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2480" pos:column="54">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2480" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2480" pos:column="69">(</op:operator><name pos:line="2480" pos:column="70">LPARAM</name><op:operator pos:line="2480" pos:column="76">)</op:operator><call><name><name pos:line="2480" pos:column="77">result</name><op:operator pos:line="2480" pos:column="83">.</op:operator><name pos:line="2480" pos:column="84">c_str</name></name><argument_list pos:line="2480" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}

void <macro><name pos:line="2483" pos:column="6">Notepad_plus</name></macro><expr_stmt><expr><name><op:operator pos:line="2483" pos:column="18">::</op:operator><name pos:line="2483" pos:column="20">activateNextDoc</name></name><op:operator pos:line="2483" pos:column="35">(</op:operator><name pos:line="2483" pos:column="36">bool</name> <name pos:line="2483" pos:column="41">direction</name><op:operator pos:line="2483" pos:column="50">)</op:operator>
<block pos:line="2484" pos:column="1">{
	<expr><name pos:line="2485" pos:column="9">int</name> <name pos:line="2485" pos:column="13">nbDoc</name> <op:operator pos:line="2485" pos:column="19">=</op:operator> <call><name><name pos:line="2485" pos:column="21">_pDocTab</name><op:operator pos:line="2485" pos:column="29">-&gt;</op:operator><name pos:line="2485" pos:column="31">nbItem</name></name><argument_list pos:line="2485" pos:column="37">()</argument_list></call></expr>;

    <expr><name pos:line="2487" pos:column="5">int</name> <name pos:line="2487" pos:column="9">curIndex</name> <op:operator pos:line="2487" pos:column="18">=</op:operator> <call><name><name pos:line="2487" pos:column="20">_pDocTab</name><op:operator pos:line="2487" pos:column="28">-&gt;</op:operator><name pos:line="2487" pos:column="30">getCurrentTabIndex</name></name><argument_list pos:line="2487" pos:column="48">()</argument_list></call></expr>;
    <expr><name pos:line="2488" pos:column="5">curIndex</name> <op:operator pos:line="2488" pos:column="14">+=</op:operator> <op:operator pos:line="2488" pos:column="17">(</op:operator><name pos:line="2488" pos:column="18">direction</name> <op:operator pos:line="2488" pos:column="28">==</op:operator> <name pos:line="2488" pos:column="31">dirUp</name><op:operator pos:line="2488" pos:column="36">)</op:operator><op:operator pos:line="2488" pos:column="37">?</op:operator><op:operator pos:line="2488" pos:column="38">-</op:operator><lit:literal type="number" pos:line="2488" pos:column="39">1</lit:literal><op:operator pos:line="2488" pos:column="40">:</op:operator><lit:literal type="number" pos:line="2488" pos:column="41">1</lit:literal></expr>;

	<if pos:line="2490" pos:column="9">if <condition pos:line="2490" pos:column="12">(<expr><name pos:line="2490" pos:column="13">curIndex</name> <op:operator pos:line="2490" pos:column="22">&gt;=</op:operator> <name pos:line="2490" pos:column="25">nbDoc</name></expr>)</condition><then pos:line="2490" pos:column="31">
	<block pos:line="2491" pos:column="9">{
		<if pos:line="2492" pos:column="17">if <condition pos:line="2492" pos:column="20">(<expr><call><name pos:line="2492" pos:column="21">viewVisible</name><argument_list pos:line="2492" pos:column="32">(<argument><expr><call><name pos:line="2492" pos:column="33">otherView</name><argument_list pos:line="2492" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2492" pos:column="46">
			<expr_stmt><expr><call><name pos:line="2493" pos:column="25">switchEditViewTo</name><argument_list pos:line="2493" pos:column="41">(<argument><expr><call><name pos:line="2493" pos:column="42">otherView</name><argument_list pos:line="2493" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="2494" pos:column="17">curIndex</name> <op:operator pos:line="2494" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="2494" pos:column="28">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt/></block></then></if>}</block></expr></expr_stmt>
	<else pos:line="2496" pos:column="9">else <if pos:line="2496" pos:column="14">if <condition pos:line="2496" pos:column="17">(<expr><name pos:line="2496" pos:column="18">curIndex</name> <op:operator pos:line="2496" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="2496" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="2496" pos:column="31">
	<block pos:line="2497" pos:column="9">{
		<if pos:line="2498" pos:column="17">if <condition pos:line="2498" pos:column="20">(<expr><call><name pos:line="2498" pos:column="21">viewVisible</name><argument_list pos:line="2498" pos:column="32">(<argument><expr><call><name pos:line="2498" pos:column="33">otherView</name><argument_list pos:line="2498" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2498" pos:column="46">
		<block pos:line="2499" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="2500" pos:column="25">switchEditViewTo</name><argument_list pos:line="2500" pos:column="41">(<argument><expr><call><name pos:line="2500" pos:column="42">otherView</name><argument_list pos:line="2500" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2501" pos:column="25">nbDoc</name> <op:operator pos:line="2501" pos:column="31">=</op:operator> <call><name><name pos:line="2501" pos:column="33">_pDocTab</name><op:operator pos:line="2501" pos:column="41">-&gt;</op:operator><name pos:line="2501" pos:column="43">nbItem</name></name><argument_list pos:line="2501" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2503" pos:column="17">curIndex</name> <op:operator pos:line="2503" pos:column="26">=</op:operator> <name pos:line="2503" pos:column="28">nbDoc</name> <op:operator pos:line="2503" pos:column="34">-</op:operator> <lit:literal type="number" pos:line="2503" pos:column="36">1</lit:literal></expr>;</expr_stmt>
	}</block></then></if></else>

	<decl_stmt><decl><type><name pos:line="2506" pos:column="9">BufferID</name></type> <name pos:line="2506" pos:column="18">id</name> <init pos:line="2506" pos:column="21">= <expr><call><name><name pos:line="2506" pos:column="23">_pDocTab</name><op:operator pos:line="2506" pos:column="31">-&gt;</op:operator><name pos:line="2506" pos:column="33">getBufferByIndex</name></name><argument_list pos:line="2506" pos:column="49">(<argument><expr><name pos:line="2506" pos:column="50">curIndex</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="2507" pos:column="9">activateBuffer</name><argument_list pos:line="2507" pos:column="23">(<argument><expr><name pos:line="2507" pos:column="24">id</name></expr></argument>, <argument><expr><call><name pos:line="2507" pos:column="28">currentView</name><argument_list pos:line="2507" pos:column="39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}

void <macro><name pos:line="2510" pos:column="6">Notepad_plus</name></macro><expr_stmt><expr><name><op:operator pos:line="2510" pos:column="18">::</op:operator><name pos:line="2510" pos:column="20">activateDoc</name></name><op:operator pos:line="2510" pos:column="31">(</op:operator><name pos:line="2510" pos:column="32">int</name> <name pos:line="2510" pos:column="36">pos</name><op:operator pos:line="2510" pos:column="39">)</op:operator>
<block pos:line="2511" pos:column="1">{
	<expr><name pos:line="2512" pos:column="9">int</name> <name pos:line="2512" pos:column="13">nbDoc</name> <op:operator pos:line="2512" pos:column="19">=</op:operator> <call><name><name pos:line="2512" pos:column="21">_pDocTab</name><op:operator pos:line="2512" pos:column="29">-&gt;</op:operator><name pos:line="2512" pos:column="31">nbItem</name></name><argument_list pos:line="2512" pos:column="37">()</argument_list></call></expr>;
	<if pos:line="2513" pos:column="9">if <condition pos:line="2513" pos:column="12">(<expr><name pos:line="2513" pos:column="13">pos</name> <op:operator pos:line="2513" pos:column="17">==</op:operator> <call><name><name pos:line="2513" pos:column="20">_pDocTab</name><op:operator pos:line="2513" pos:column="28">-&gt;</op:operator><name pos:line="2513" pos:column="30">getCurrentTabIndex</name></name><argument_list pos:line="2513" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="2513" pos:column="51">
	<block pos:line="2514" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2515" pos:column="17">Buffer</name> <type:modifier pos:line="2515" pos:column="24">*</type:modifier></type> <name pos:line="2515" pos:column="26">buf</name> <init pos:line="2515" pos:column="30">= <expr><call><name><name pos:line="2515" pos:column="32">_pEditView</name><op:operator pos:line="2515" pos:column="42">-&gt;</op:operator><name pos:line="2515" pos:column="44">getCurrentBuffer</name></name><argument_list pos:line="2515" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="2516" pos:column="17">buf</name><op:operator pos:line="2516" pos:column="20">-&gt;</op:operator><name pos:line="2516" pos:column="22">increaseRecentTag</name></name><argument_list pos:line="2516" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="2517" pos:column="17">return;</return>
	<expr_stmt/></block></then></if>}</block></expr></expr_stmt>

	<if pos:line="2520" pos:column="9">if <condition pos:line="2520" pos:column="12">(<expr><name pos:line="2520" pos:column="13">pos</name> <op:operator pos:line="2520" pos:column="17">&gt;=</op:operator> <lit:literal type="number" pos:line="2520" pos:column="20">0</lit:literal> <op:operator pos:line="2520" pos:column="22">&amp;&amp;</op:operator> <name pos:line="2520" pos:column="25">pos</name> <op:operator pos:line="2520" pos:column="29">&lt;</op:operator> <name pos:line="2520" pos:column="31">nbDoc</name></expr>)</condition><then pos:line="2520" pos:column="37">
	<block pos:line="2521" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2522" pos:column="17">BufferID</name></type> <name pos:line="2522" pos:column="26">id</name> <init pos:line="2522" pos:column="29">= <expr><call><name><name pos:line="2522" pos:column="31">_pDocTab</name><op:operator pos:line="2522" pos:column="39">-&gt;</op:operator><name pos:line="2522" pos:column="41">getBufferByIndex</name></name><argument_list pos:line="2522" pos:column="57">(<argument><expr><name pos:line="2522" pos:column="58">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2523" pos:column="17">activateBuffer</name><argument_list pos:line="2523" pos:column="31">(<argument><expr><name pos:line="2523" pos:column="32">id</name></expr></argument>, <argument><expr><call><name pos:line="2523" pos:column="36">currentView</name><argument_list pos:line="2523" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}


static <decl_stmt><decl><type><specifier pos:line="2528" pos:column="8">const</specifier> <name pos:line="2528" pos:column="14">char</name></type> <name><name pos:line="2528" pos:column="19">utflen</name><index pos:line="2528" pos:column="25">[]</index></name> <init pos:line="2528" pos:column="28">= <expr><block pos:line="2528" pos:column="30">{<expr><lit:literal type="number" pos:line="2528" pos:column="31">1</lit:literal></expr>,<expr><lit:literal type="number" pos:line="2528" pos:column="33">1</lit:literal></expr>,<expr><lit:literal type="number" pos:line="2528" pos:column="35">2</lit:literal></expr>,<expr><lit:literal type="number" pos:line="2528" pos:column="37">3</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="2530" pos:column="1">size_t</name></type> <name><name pos:line="2530" pos:column="8">Notepad_plus</name><op:operator pos:line="2530" pos:column="20">::</op:operator><name pos:line="2530" pos:column="22">getSelectedCharNumber</name></name><parameter_list pos:line="2530" pos:column="43">(<param><decl><type><name pos:line="2530" pos:column="44">UniMode</name></type> <name pos:line="2530" pos:column="52">u</name></decl></param>)</parameter_list>
<block pos:line="2531" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2532" pos:column="9">size_t</name></type> <name pos:line="2532" pos:column="16">result</name> <init pos:line="2532" pos:column="23">= <expr><lit:literal type="number" pos:line="2532" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2533" pos:column="9">int</name></type> <name pos:line="2533" pos:column="13">numSel</name> <init pos:line="2533" pos:column="20">= <expr><call><name><name pos:line="2533" pos:column="22">_pEditView</name><op:operator pos:line="2533" pos:column="32">-&gt;</op:operator><name pos:line="2533" pos:column="34">execute</name></name><argument_list pos:line="2533" pos:column="41">(<argument><expr><name pos:line="2533" pos:column="42">SCI_GETSELECTIONS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2534" pos:column="9">if <condition pos:line="2534" pos:column="12">(<expr><name pos:line="2534" pos:column="13">u</name> <op:operator pos:line="2534" pos:column="15">==</op:operator> <name pos:line="2534" pos:column="18">uniUTF8</name> <op:operator pos:line="2534" pos:column="26">||</op:operator> <name pos:line="2534" pos:column="29">u</name> <op:operator pos:line="2534" pos:column="31">==</op:operator> <name pos:line="2534" pos:column="34">uniCookie</name></expr>)</condition><then pos:line="2534" pos:column="44">
	<block pos:line="2535" pos:column="9">{
		<for pos:line="2536" pos:column="17">for (<init><decl><type><name pos:line="2536" pos:column="22">int</name></type> <name pos:line="2536" pos:column="26">i</name><init pos:line="2536" pos:column="27">=<expr><lit:literal type="number" pos:line="2536" pos:column="28">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2536" pos:column="31">i</name> <op:operator pos:line="2536" pos:column="33">&lt;</op:operator> <name pos:line="2536" pos:column="35">numSel</name></expr>;</condition> <incr><expr><name pos:line="2536" pos:column="43">i</name><op:operator pos:line="2536" pos:column="44">++</op:operator></expr></incr>)
		<block pos:line="2537" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2538" pos:column="25">size_t</name></type> <name pos:line="2538" pos:column="32">line1</name> <init pos:line="2538" pos:column="38">= <expr><call><name><name pos:line="2538" pos:column="40">_pEditView</name><op:operator pos:line="2538" pos:column="50">-&gt;</op:operator><name pos:line="2538" pos:column="52">execute</name></name><argument_list pos:line="2538" pos:column="59">(<argument><expr><name pos:line="2538" pos:column="60">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><call><name><name pos:line="2538" pos:column="82">_pEditView</name><op:operator pos:line="2538" pos:column="92">-&gt;</op:operator><name pos:line="2538" pos:column="94">execute</name></name><argument_list pos:line="2538" pos:column="101">(<argument><expr><name pos:line="2538" pos:column="102">SCI_GETSELECTIONNSTART</name></expr></argument>, <argument><expr><name pos:line="2538" pos:column="126">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2539" pos:column="25">size_t</name></type> <name pos:line="2539" pos:column="32">line2</name> <init pos:line="2539" pos:column="38">= <expr><call><name><name pos:line="2539" pos:column="40">_pEditView</name><op:operator pos:line="2539" pos:column="50">-&gt;</op:operator><name pos:line="2539" pos:column="52">execute</name></name><argument_list pos:line="2539" pos:column="59">(<argument><expr><name pos:line="2539" pos:column="60">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><call><name><name pos:line="2539" pos:column="82">_pEditView</name><op:operator pos:line="2539" pos:column="92">-&gt;</op:operator><name pos:line="2539" pos:column="94">execute</name></name><argument_list pos:line="2539" pos:column="101">(<argument><expr><name pos:line="2539" pos:column="102">SCI_GETSELECTIONNEND</name></expr></argument>, <argument><expr><name pos:line="2539" pos:column="124">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="2540" pos:column="25">for (<init><decl><type><name pos:line="2540" pos:column="30">size_t</name></type> <name pos:line="2540" pos:column="37">j</name> <init pos:line="2540" pos:column="39">= <expr><name pos:line="2540" pos:column="41">line1</name></expr></init></decl>;</init> <condition><expr><name pos:line="2540" pos:column="48">j</name> <op:operator pos:line="2540" pos:column="50">&lt;=</op:operator> <name pos:line="2540" pos:column="53">line2</name></expr>;</condition> <incr><expr><name pos:line="2540" pos:column="60">j</name><op:operator pos:line="2540" pos:column="61">++</op:operator></expr></incr>)
			<block pos:line="2541" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2542" pos:column="33">size_t</name></type> <name pos:line="2542" pos:column="40">stpos</name> <init pos:line="2542" pos:column="46">= <expr><call><name><name pos:line="2542" pos:column="48">_pEditView</name><op:operator pos:line="2542" pos:column="58">-&gt;</op:operator><name pos:line="2542" pos:column="60">execute</name></name><argument_list pos:line="2542" pos:column="67">(<argument><expr><name pos:line="2542" pos:column="68">SCI_GETLINESELSTARTPOSITION</name></expr></argument>, <argument><expr><name pos:line="2542" pos:column="97">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2543" pos:column="33">if <condition pos:line="2543" pos:column="36">(<expr><name pos:line="2543" pos:column="37">stpos</name> <op:operator pos:line="2543" pos:column="43">!=</op:operator> <name pos:line="2543" pos:column="46">INVALID_POSITION</name></expr>)</condition><then pos:line="2543" pos:column="63">
				<block pos:line="2544" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="2545" pos:column="41">size_t</name></type> <name pos:line="2545" pos:column="48">endpos</name> <init pos:line="2545" pos:column="55">= <expr><call><name><name pos:line="2545" pos:column="57">_pEditView</name><op:operator pos:line="2545" pos:column="67">-&gt;</op:operator><name pos:line="2545" pos:column="69">execute</name></name><argument_list pos:line="2545" pos:column="76">(<argument><expr><name pos:line="2545" pos:column="77">SCI_GETLINESELENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="2545" pos:column="104">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<for pos:line="2546" pos:column="41">for (<init><decl><type><name pos:line="2546" pos:column="46">size_t</name></type> <name pos:line="2546" pos:column="53">pos</name> <init pos:line="2546" pos:column="57">= <expr><name pos:line="2546" pos:column="59">stpos</name></expr></init></decl>;</init> <condition><expr><name pos:line="2546" pos:column="66">pos</name> <op:operator pos:line="2546" pos:column="70">&lt;</op:operator> <name pos:line="2546" pos:column="72">endpos</name></expr>;</condition> <incr><expr><name pos:line="2546" pos:column="80">pos</name><op:operator pos:line="2546" pos:column="83">++</op:operator></expr></incr>)
					<block pos:line="2547" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2548" pos:column="49">unsigned</name> <name pos:line="2548" pos:column="58">char</name></type> <name pos:line="2548" pos:column="63">c</name> <init pos:line="2548" pos:column="65">= <expr><lit:literal type="number" pos:line="2548" pos:column="67">0xf0</lit:literal> <op:operator pos:line="2548" pos:column="72">&amp;</op:operator> <op:operator pos:line="2548" pos:column="74">(</op:operator><name pos:line="2548" pos:column="75">unsigned</name> <name pos:line="2548" pos:column="84">char</name><op:operator pos:line="2548" pos:column="88">)</op:operator><call><name><name pos:line="2548" pos:column="89">_pEditView</name><op:operator pos:line="2548" pos:column="99">-&gt;</op:operator><name pos:line="2548" pos:column="101">execute</name></name><argument_list pos:line="2548" pos:column="108">(<argument><expr><name pos:line="2548" pos:column="109">SCI_GETCHARAT</name></expr></argument>, <argument><expr><name pos:line="2548" pos:column="124">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="2549" pos:column="49">if <condition pos:line="2549" pos:column="52">(<expr><name pos:line="2549" pos:column="53">c</name> <op:operator pos:line="2549" pos:column="55">&gt;=</op:operator> <lit:literal type="number" pos:line="2549" pos:column="58">0xc0</lit:literal></expr>)</condition><then pos:line="2549" pos:column="63">
							<expr_stmt><expr><name pos:line="2550" pos:column="57">pos</name> <op:operator pos:line="2550" pos:column="61">+=</op:operator> <name><name pos:line="2550" pos:column="64">utflen</name><index pos:line="2550" pos:column="70">[<expr><op:operator pos:line="2550" pos:column="71">(</op:operator><name pos:line="2550" pos:column="72">c</name> <op:operator pos:line="2550" pos:column="74">&amp;</op:operator> <lit:literal type="number" pos:line="2550" pos:column="76">0x30</lit:literal><op:operator pos:line="2550" pos:column="80">)</op:operator> <op:operator pos:line="2550" pos:column="82">&gt;&gt;</op:operator>  <lit:literal type="number" pos:line="2550" pos:column="86">4</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><name pos:line="2551" pos:column="49">result</name><op:operator pos:line="2551" pos:column="55">++</op:operator></expr>;</expr_stmt>
					}</block></for>
				}</block></then></if>
			}</block></for>
		}</block></for>
	}</block></then>
	<else pos:line="2557" pos:column="9">else
	<block pos:line="2558" pos:column="9">{
		<for pos:line="2559" pos:column="17">for (<init><decl><type><name pos:line="2559" pos:column="22">int</name></type> <name pos:line="2559" pos:column="26">i</name><init pos:line="2559" pos:column="27">=<expr><lit:literal type="number" pos:line="2559" pos:column="28">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2559" pos:column="31">i</name> <op:operator pos:line="2559" pos:column="33">&lt;</op:operator> <name pos:line="2559" pos:column="35">numSel</name></expr>;</condition> <incr><expr><name pos:line="2559" pos:column="43">i</name><op:operator pos:line="2559" pos:column="44">++</op:operator></expr></incr>)
		<block pos:line="2560" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2561" pos:column="25">size_t</name></type> <name pos:line="2561" pos:column="32">stpos</name> <init pos:line="2561" pos:column="38">= <expr><call><name><name pos:line="2561" pos:column="40">_pEditView</name><op:operator pos:line="2561" pos:column="50">-&gt;</op:operator><name pos:line="2561" pos:column="52">execute</name></name><argument_list pos:line="2561" pos:column="59">(<argument><expr><name pos:line="2561" pos:column="60">SCI_GETSELECTIONNSTART</name></expr></argument>, <argument><expr><name pos:line="2561" pos:column="84">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2562" pos:column="25">size_t</name></type> <name pos:line="2562" pos:column="32">endpos</name> <init pos:line="2562" pos:column="39">= <expr><call><name><name pos:line="2562" pos:column="41">_pEditView</name><op:operator pos:line="2562" pos:column="51">-&gt;</op:operator><name pos:line="2562" pos:column="53">execute</name></name><argument_list pos:line="2562" pos:column="60">(<argument><expr><name pos:line="2562" pos:column="61">SCI_GETSELECTIONNEND</name></expr></argument>, <argument><expr><name pos:line="2562" pos:column="83">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2563" pos:column="25">result</name> <op:operator pos:line="2563" pos:column="32">+=</op:operator> <op:operator pos:line="2563" pos:column="35">(</op:operator><name pos:line="2563" pos:column="36">endpos</name> <op:operator pos:line="2563" pos:column="43">-</op:operator> <name pos:line="2563" pos:column="45">stpos</name><op:operator pos:line="2563" pos:column="50">)</op:operator></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2564" pos:column="25">size_t</name></type> <name pos:line="2564" pos:column="32">line1</name> <init pos:line="2564" pos:column="38">= <expr><call><name><name pos:line="2564" pos:column="40">_pEditView</name><op:operator pos:line="2564" pos:column="50">-&gt;</op:operator><name pos:line="2564" pos:column="52">execute</name></name><argument_list pos:line="2564" pos:column="59">(<argument><expr><name pos:line="2564" pos:column="60">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="2564" pos:column="82">stpos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2565" pos:column="25">size_t</name></type> <name pos:line="2565" pos:column="32">line2</name> <init pos:line="2565" pos:column="38">= <expr><call><name><name pos:line="2565" pos:column="40">_pEditView</name><op:operator pos:line="2565" pos:column="50">-&gt;</op:operator><name pos:line="2565" pos:column="52">execute</name></name><argument_list pos:line="2565" pos:column="59">(<argument><expr><name pos:line="2565" pos:column="60">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="2565" pos:column="82">endpos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2566" pos:column="25">line2</name> <op:operator pos:line="2566" pos:column="31">-=</op:operator> <name pos:line="2566" pos:column="34">line1</name></expr>;</expr_stmt>
			<if pos:line="2567" pos:column="25">if <condition pos:line="2567" pos:column="28">(<expr><call><name><name pos:line="2567" pos:column="29">_pEditView</name><op:operator pos:line="2567" pos:column="39">-&gt;</op:operator><name pos:line="2567" pos:column="41">execute</name></name><argument_list pos:line="2567" pos:column="48">(<argument><expr><name pos:line="2567" pos:column="49">SCI_GETEOLMODE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2567" pos:column="65">==</op:operator> <name pos:line="2567" pos:column="68">SC_EOL_CRLF</name></expr>)</condition><then pos:line="2567" pos:column="80"> <expr_stmt><expr><name pos:line="2567" pos:column="81">line2</name> <op:operator pos:line="2567" pos:column="87">*=</op:operator> <lit:literal type="number" pos:line="2567" pos:column="90">2</lit:literal></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="2568" pos:column="25">result</name> <op:operator pos:line="2568" pos:column="32">-=</op:operator> <name pos:line="2568" pos:column="35">line2</name></expr>;</expr_stmt>
		}</block></for>
		<if pos:line="2570" pos:column="17">if <condition pos:line="2570" pos:column="20">(<expr><name pos:line="2570" pos:column="21">u</name> <op:operator pos:line="2570" pos:column="23">!=</op:operator> <name pos:line="2570" pos:column="26">uni8Bit</name> <op:operator pos:line="2570" pos:column="34">&amp;&amp;</op:operator> <name pos:line="2570" pos:column="37">u</name> <op:operator pos:line="2570" pos:column="39">!=</op:operator> <name pos:line="2570" pos:column="42">uni7Bit</name></expr>)</condition><then pos:line="2570" pos:column="50"> <expr_stmt><expr><name pos:line="2570" pos:column="51">result</name> <op:operator pos:line="2570" pos:column="58">*=</op:operator> <lit:literal type="number" pos:line="2570" pos:column="61">2</lit:literal></expr>;</expr_stmt></then></if>
	}</block></else></if>
	<return pos:line="2572" pos:column="9">return <expr><name pos:line="2572" pos:column="16">result</name></expr>;</return>
}</block></function>


<cpp:ifdef pos:line="2576" pos:column="1">#<cpp:directive pos:line="2576" pos:column="2">ifdef</cpp:directive> <name pos:line="2576" pos:column="8">_OPENMP</name></cpp:ifdef>
<cpp:include pos:line="2577" pos:column="1">#<cpp:directive pos:line="2577" pos:column="2">include</cpp:directive> <cpp:file pos:line="2577" pos:column="10">&lt;omp.h&gt;</cpp:file></cpp:include>
<cpp:endif pos:line="2578" pos:column="1">#<cpp:directive pos:line="2578" pos:column="2">endif</cpp:directive></cpp:endif>
<function><type><specifier pos:line="2579" pos:column="1">static</specifier> <specifier pos:line="2579" pos:column="8">inline</specifier> <name pos:line="2579" pos:column="15">size_t</name></type> <name pos:line="2579" pos:column="22">countUtf8Characters</name><parameter_list pos:line="2579" pos:column="41">(<param><decl><type><name pos:line="2579" pos:column="42">unsigned</name> <name pos:line="2579" pos:column="51">char</name> <type:modifier pos:line="2579" pos:column="56">*</type:modifier></type><name pos:line="2579" pos:column="57">buf</name></decl></param>, <param><decl><type><name pos:line="2579" pos:column="62">int</name></type> <name pos:line="2579" pos:column="66">pos</name></decl></param>, <param><decl><type><name pos:line="2579" pos:column="71">int</name></type> <name pos:line="2579" pos:column="75">endpos</name></decl></param>)</parameter_list>
<block pos:line="2580" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2581" pos:column="9">size_t</name></type> <name pos:line="2581" pos:column="16">result</name> <init pos:line="2581" pos:column="23">= <expr><lit:literal type="number" pos:line="2581" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="2582" pos:column="9">while<condition pos:line="2582" pos:column="14">(<expr><name pos:line="2582" pos:column="15">pos</name> <op:operator pos:line="2582" pos:column="19">&lt;</op:operator> <name pos:line="2582" pos:column="21">endpos</name></expr>)</condition>
	<block pos:line="2583" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2584" pos:column="17">unsigned</name> <name pos:line="2584" pos:column="26">char</name></type> <name pos:line="2584" pos:column="31">c</name> <init pos:line="2584" pos:column="33">= <expr><name><name pos:line="2584" pos:column="35">buf</name><index pos:line="2584" pos:column="38">[<expr><name pos:line="2584" pos:column="39">pos</name><op:operator pos:line="2584" pos:column="42">++</op:operator></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<if pos:line="2585" pos:column="17">if <condition pos:line="2585" pos:column="20">(<expr><op:operator pos:line="2585" pos:column="21">(</op:operator><name pos:line="2585" pos:column="22">c</name><op:operator pos:line="2585" pos:column="23">&amp;</op:operator><lit:literal type="number" pos:line="2585" pos:column="24">0xc0</lit:literal><op:operator pos:line="2585" pos:column="28">)</op:operator> <op:operator pos:line="2585" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="2585" pos:column="33">0x80</lit:literal> <comment type="line" pos:line="2585" pos:column="38">// do not count unexpected continuation bytes (this handles the case where an UTF-8 character is split in the middle)</comment>
			<op:operator pos:line="2586" pos:column="25">||</op:operator> <name pos:line="2586" pos:column="28">c</name> <op:operator pos:line="2586" pos:column="30">==</op:operator> <lit:literal type="char" pos:line="2586" pos:column="33">'\n'</lit:literal> <op:operator pos:line="2586" pos:column="38">||</op:operator> <name pos:line="2586" pos:column="41">c</name> <op:operator pos:line="2586" pos:column="43">==</op:operator> <lit:literal type="char" pos:line="2586" pos:column="46">'\r'</lit:literal></expr>)</condition><then pos:line="2586" pos:column="51"> <continue pos:line="2586" pos:column="52">continue;</continue></then></if> <comment type="line" pos:line="2586" pos:column="62">// do not count end of lines</comment>
		<if pos:line="2587" pos:column="17">if <condition pos:line="2587" pos:column="20">(<expr><name pos:line="2587" pos:column="21">c</name> <op:operator pos:line="2587" pos:column="23">&gt;=</op:operator> <lit:literal type="number" pos:line="2587" pos:column="26">0xc0</lit:literal></expr>)</condition><then pos:line="2587" pos:column="31"> <expr_stmt><expr><name pos:line="2587" pos:column="32">pos</name> <op:operator pos:line="2587" pos:column="36">+=</op:operator> <name><name pos:line="2587" pos:column="39">utflen</name><index pos:line="2587" pos:column="45">[<expr><op:operator pos:line="2587" pos:column="46">(</op:operator><name pos:line="2587" pos:column="47">c</name> <op:operator pos:line="2587" pos:column="49">&amp;</op:operator> <lit:literal type="number" pos:line="2587" pos:column="51">0x30</lit:literal><op:operator pos:line="2587" pos:column="55">)</op:operator> <op:operator pos:line="2587" pos:column="57">&gt;&gt;</op:operator>  <lit:literal type="number" pos:line="2587" pos:column="61">4</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="2588" pos:column="17">result</name><op:operator pos:line="2588" pos:column="23">++</op:operator></expr>;</expr_stmt>
	}</block></while>
	<return pos:line="2590" pos:column="9">return <expr><name pos:line="2590" pos:column="16">result</name></expr>;</return>
}</block></function>


<function><type><name pos:line="2594" pos:column="1">size_t</name></type> <name><name pos:line="2594" pos:column="8">Notepad_plus</name><op:operator pos:line="2594" pos:column="20">::</op:operator><name pos:line="2594" pos:column="22">getCurrentDocCharCount</name></name><parameter_list pos:line="2594" pos:column="44">(<param><decl><type><name pos:line="2594" pos:column="45">UniMode</name></type> <name pos:line="2594" pos:column="53">u</name></decl></param>)</parameter_list>
<block pos:line="2595" pos:column="1">{
	<if pos:line="2596" pos:column="9">if <condition pos:line="2596" pos:column="12">(<expr><name pos:line="2596" pos:column="13">u</name> <op:operator pos:line="2596" pos:column="15">!=</op:operator> <name pos:line="2596" pos:column="18">uniUTF8</name> <op:operator pos:line="2596" pos:column="26">&amp;&amp;</op:operator> <name pos:line="2596" pos:column="29">u</name> <op:operator pos:line="2596" pos:column="31">!=</op:operator> <name pos:line="2596" pos:column="34">uniCookie</name></expr>)</condition><then pos:line="2596" pos:column="44">
	<block pos:line="2597" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2598" pos:column="17">size_t</name></type> <name pos:line="2598" pos:column="24">numLines</name> <init pos:line="2598" pos:column="33">= <expr><call><name><name pos:line="2598" pos:column="35">_pEditView</name><op:operator pos:line="2598" pos:column="45">-&gt;</op:operator><name pos:line="2598" pos:column="47">execute</name></name><argument_list pos:line="2598" pos:column="54">(<argument><expr><name pos:line="2598" pos:column="55">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2599" pos:column="17">int</name></type> <name pos:line="2599" pos:column="21">result</name> <init pos:line="2599" pos:column="28">= <expr><call><name><name pos:line="2599" pos:column="30">_pEditView</name><op:operator pos:line="2599" pos:column="40">-&gt;</op:operator><name pos:line="2599" pos:column="42">execute</name></name><argument_list pos:line="2599" pos:column="49">(<argument><expr><name pos:line="2599" pos:column="50">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2600" pos:column="17">size_t</name></type> <name pos:line="2600" pos:column="24">lines</name> <init pos:line="2600" pos:column="30">= <expr><name pos:line="2600" pos:column="32">numLines</name><op:operator pos:line="2600" pos:column="40">==</op:operator><lit:literal type="number" pos:line="2600" pos:column="42">0</lit:literal><op:operator pos:line="2600" pos:column="43">?</op:operator><lit:literal type="number" pos:line="2600" pos:column="44">0</lit:literal><op:operator pos:line="2600" pos:column="45">:</op:operator><name pos:line="2600" pos:column="46">numLines</name><op:operator pos:line="2600" pos:column="54">-</op:operator><lit:literal type="number" pos:line="2600" pos:column="55">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="2601" pos:column="17">if <condition pos:line="2601" pos:column="20">(<expr><call><name><name pos:line="2601" pos:column="21">_pEditView</name><op:operator pos:line="2601" pos:column="31">-&gt;</op:operator><name pos:line="2601" pos:column="33">execute</name></name><argument_list pos:line="2601" pos:column="40">(<argument><expr><name pos:line="2601" pos:column="41">SCI_GETEOLMODE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2601" pos:column="57">==</op:operator> <name pos:line="2601" pos:column="60">SC_EOL_CRLF</name></expr>)</condition><then pos:line="2601" pos:column="72"> <expr_stmt><expr><name pos:line="2601" pos:column="73">lines</name> <op:operator pos:line="2601" pos:column="79">*=</op:operator> <lit:literal type="number" pos:line="2601" pos:column="82">2</lit:literal></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="2602" pos:column="17">result</name> <op:operator pos:line="2602" pos:column="24">-=</op:operator> <name pos:line="2602" pos:column="27">lines</name></expr>;</expr_stmt>
		<return pos:line="2603" pos:column="17">return <expr><op:operator pos:line="2603" pos:column="24">(</op:operator><op:operator pos:line="2603" pos:column="25">(</op:operator><name pos:line="2603" pos:column="26">int</name><op:operator pos:line="2603" pos:column="29">)</op:operator><name pos:line="2603" pos:column="30">result</name> <op:operator pos:line="2603" pos:column="37">&lt;</op:operator> <lit:literal type="number" pos:line="2603" pos:column="39">0</lit:literal><op:operator pos:line="2603" pos:column="40">)</op:operator><op:operator pos:line="2603" pos:column="41">?</op:operator><lit:literal type="number" pos:line="2603" pos:column="42">0</lit:literal><op:operator pos:line="2603" pos:column="43">:</op:operator><name pos:line="2603" pos:column="44">result</name></expr>;</return>
	}</block></then>
 	<else pos:line="2605" pos:column="9">else
 	<block pos:line="2606" pos:column="9">{
		<comment type="line" pos:line="2607" pos:column="17">// Note that counting is not well defined for invalid UTF-8 characters.</comment>
		<comment type="line" pos:line="2608" pos:column="17">// This method is O(filelength) regardless of the number of characters we count (due to SCI_GETCHARACTERPOINTER);</comment>
		<comment type="line" pos:line="2609" pos:column="17">// it would not be appropriate for counting characters in a small selection.</comment>
		<decl_stmt><decl><type><name pos:line="2610" pos:column="17">size_t</name></type> <name pos:line="2610" pos:column="24">result</name> <init pos:line="2610" pos:column="31">= <expr><lit:literal type="number" pos:line="2610" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="2612" pos:column="17">size_t</name></type> <name pos:line="2612" pos:column="24">endpos</name> <init pos:line="2612" pos:column="31">= <expr><call><name><name pos:line="2612" pos:column="33">_pEditView</name><op:operator pos:line="2612" pos:column="43">-&gt;</op:operator><name pos:line="2612" pos:column="45">execute</name></name><argument_list pos:line="2612" pos:column="52">(<argument><expr><name pos:line="2612" pos:column="53">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2613" pos:column="17">unsigned</name> <name pos:line="2613" pos:column="26">char</name><type:modifier pos:line="2613" pos:column="30">*</type:modifier></type> <name pos:line="2613" pos:column="32">buf</name> <init pos:line="2613" pos:column="36">= <expr><op:operator pos:line="2613" pos:column="38">(</op:operator><name pos:line="2613" pos:column="39">unsigned</name> <name pos:line="2613" pos:column="48">char</name><op:operator pos:line="2613" pos:column="52">*</op:operator><op:operator pos:line="2613" pos:column="53">)</op:operator><call><name><name pos:line="2613" pos:column="54">_pEditView</name><op:operator pos:line="2613" pos:column="64">-&gt;</op:operator><name pos:line="2613" pos:column="66">execute</name></name><argument_list pos:line="2613" pos:column="73">(<argument><expr><name pos:line="2613" pos:column="74">SCI_GETCHARACTERPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="2613" pos:column="100">// Scintilla doc sais the pointer can be invalidated by any other "execute"</comment>

<cpp:ifdef pos:line="2615" pos:column="1">#<cpp:directive pos:line="2615" pos:column="2">ifdef</cpp:directive> <name pos:line="2615" pos:column="8">_OPENMP</name></cpp:ifdef> <comment type="line" pos:line="2615" pos:column="16">// parallel counting of characters with OpenMP</comment>
		<if pos:line="2616" pos:column="17">if<condition pos:line="2616" pos:column="19">(<expr><name pos:line="2616" pos:column="20">endpos</name> <op:operator pos:line="2616" pos:column="27">&gt;</op:operator> <lit:literal type="number" pos:line="2616" pos:column="29">50000</lit:literal></expr>)</condition><then pos:line="2616" pos:column="35"> <comment type="line" pos:line="2616" pos:column="36">// starting threads takes time; for small files it is better to simply count in one thread</comment>
		<block pos:line="2617" pos:column="17">{
			<cpp:pragma pos:line="2618" pos:column="25">#<cpp:directive pos:line="2618" pos:column="26">pragma</cpp:directive> omp parallel reduction(+: result)</cpp:pragma>
			<block pos:line="2619" pos:column="25">{
				<comment type="line" pos:line="2620" pos:column="33">// split in chunks of same size (except last chunk if it's not evenly divisible)</comment>
				<decl_stmt><decl><type><name pos:line="2621" pos:column="33">unsigned</name> <name pos:line="2621" pos:column="42">int</name></type> <name pos:line="2621" pos:column="46">num_threads</name> <init pos:line="2621" pos:column="58">= <expr><call><name pos:line="2621" pos:column="60">omp_get_num_threads</name><argument_list pos:line="2621" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2622" pos:column="33">unsigned</name> <name pos:line="2622" pos:column="42">int</name></type> <name pos:line="2622" pos:column="46">thread_num</name> <init pos:line="2622" pos:column="57">= <expr><call><name pos:line="2622" pos:column="59">omp_get_thread_num</name><argument_list pos:line="2622" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2623" pos:column="33">size_t</name></type> <name pos:line="2623" pos:column="40">chunk_size</name> <init pos:line="2623" pos:column="51">= <expr><name pos:line="2623" pos:column="53">endpos</name><op:operator pos:line="2623" pos:column="59">/</op:operator><name pos:line="2623" pos:column="60">num_threads</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2624" pos:column="33">size_t</name></type> <name pos:line="2624" pos:column="40">pos</name> <init pos:line="2624" pos:column="44">= <expr><name pos:line="2624" pos:column="46">chunk_size</name><op:operator pos:line="2624" pos:column="56">*</op:operator><name pos:line="2624" pos:column="57">thread_num</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2625" pos:column="33">size_t</name></type> <name pos:line="2625" pos:column="40">endpos_local</name> <init pos:line="2625" pos:column="53">= <expr><op:operator pos:line="2625" pos:column="55">(</op:operator><name pos:line="2625" pos:column="56">thread_num</name> <op:operator pos:line="2625" pos:column="67">==</op:operator> <name pos:line="2625" pos:column="70">num_threads</name><op:operator pos:line="2625" pos:column="81">-</op:operator><lit:literal type="number" pos:line="2625" pos:column="82">1</lit:literal><op:operator pos:line="2625" pos:column="83">)</op:operator> <op:operator pos:line="2625" pos:column="85">?</op:operator> <name pos:line="2625" pos:column="87">endpos</name> <op:operator pos:line="2625" pos:column="94">:</op:operator> <name pos:line="2625" pos:column="96">pos</name><op:operator pos:line="2625" pos:column="99">+</op:operator><name pos:line="2625" pos:column="100">chunk_size</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="2626" pos:column="33">result</name> <op:operator pos:line="2626" pos:column="40">=</op:operator> <call><name pos:line="2626" pos:column="42">countUtf8Characters</name><argument_list pos:line="2626" pos:column="61">(<argument><expr><name pos:line="2626" pos:column="62">buf</name></expr></argument>, <argument><expr><name pos:line="2626" pos:column="67">pos</name></expr></argument>, <argument><expr><name pos:line="2626" pos:column="72">endpos_local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
		}</block></then>
		<else pos:line="2629" pos:column="17">else
<cpp:endif pos:line="2630" pos:column="1">#<cpp:directive pos:line="2630" pos:column="2">endif</cpp:directive></cpp:endif>
		<block pos:line="2631" pos:column="17">{
			<expr_stmt><expr><name pos:line="2632" pos:column="25">result</name> <op:operator pos:line="2632" pos:column="32">=</op:operator> <call><name pos:line="2632" pos:column="34">countUtf8Characters</name><argument_list pos:line="2632" pos:column="53">(<argument><expr><name pos:line="2632" pos:column="54">buf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2632" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2632" pos:column="62">endpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
 		<return pos:line="2634" pos:column="17">return <expr><name pos:line="2634" pos:column="24">result</name></expr>;</return>
 	}</block></else></if>
}</block></function>


<function><type><name pos:line="2639" pos:column="1">bool</name></type> <name><name pos:line="2639" pos:column="6">Notepad_plus</name><op:operator pos:line="2639" pos:column="18">::</op:operator><name pos:line="2639" pos:column="20">isFormatUnicode</name></name><parameter_list pos:line="2639" pos:column="35">(<param><decl><type><name pos:line="2639" pos:column="36">UniMode</name></type> <name pos:line="2639" pos:column="44">u</name></decl></param>)</parameter_list>
<block pos:line="2640" pos:column="1">{
	<return pos:line="2641" pos:column="9">return <expr><op:operator pos:line="2641" pos:column="16">(</op:operator><name pos:line="2641" pos:column="17">u</name> <op:operator pos:line="2641" pos:column="19">!=</op:operator> <name pos:line="2641" pos:column="22">uni8Bit</name> <op:operator pos:line="2641" pos:column="30">&amp;&amp;</op:operator> <name pos:line="2641" pos:column="33">u</name> <op:operator pos:line="2641" pos:column="35">!=</op:operator> <name pos:line="2641" pos:column="38">uni7Bit</name> <op:operator pos:line="2641" pos:column="46">&amp;&amp;</op:operator> <name pos:line="2641" pos:column="49">u</name> <op:operator pos:line="2641" pos:column="51">!=</op:operator> <name pos:line="2641" pos:column="54">uniUTF8</name> <op:operator pos:line="2641" pos:column="62">&amp;&amp;</op:operator> <name pos:line="2641" pos:column="65">u</name> <op:operator pos:line="2641" pos:column="67">!=</op:operator> <name pos:line="2641" pos:column="70">uniCookie</name><op:operator pos:line="2641" pos:column="79">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="2644" pos:column="1">int</name></type> <name><name pos:line="2644" pos:column="5">Notepad_plus</name><op:operator pos:line="2644" pos:column="17">::</op:operator><name pos:line="2644" pos:column="19">getBOMSize</name></name><parameter_list pos:line="2644" pos:column="29">(<param><decl><type><name pos:line="2644" pos:column="30">UniMode</name></type> <name pos:line="2644" pos:column="38">u</name></decl></param>)</parameter_list>
<block pos:line="2645" pos:column="1">{
	<switch pos:line="2646" pos:column="9">switch<condition pos:line="2646" pos:column="15">(<expr><name pos:line="2646" pos:column="16">u</name></expr>)</condition>
	<block pos:line="2647" pos:column="9">{
		<case pos:line="2648" pos:column="17">case <expr><name pos:line="2648" pos:column="22">uni16LE</name></expr>:
		</case><case pos:line="2649" pos:column="17">case <expr><name pos:line="2649" pos:column="22">uni16BE</name></expr>:
			<return pos:line="2650" pos:column="25">return <expr><lit:literal type="number" pos:line="2650" pos:column="32">2</lit:literal></expr>;</return>
		</case><case pos:line="2651" pos:column="17">case <expr><name pos:line="2651" pos:column="22">uniUTF8</name></expr>:
			<return pos:line="2652" pos:column="25">return <expr><lit:literal type="number" pos:line="2652" pos:column="32">3</lit:literal></expr>;</return>
		</case><default pos:line="2653" pos:column="17">default:
			<return pos:line="2654" pos:column="25">return <expr><lit:literal type="number" pos:line="2654" pos:column="32">0</lit:literal></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="2658" pos:column="1">int</name></type> <name><name pos:line="2658" pos:column="5">Notepad_plus</name><op:operator pos:line="2658" pos:column="17">::</op:operator><name pos:line="2658" pos:column="19">getSelectedAreas</name></name><parameter_list pos:line="2658" pos:column="35">()</parameter_list>
<block pos:line="2659" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2660" pos:column="9">int</name></type> <name pos:line="2660" pos:column="13">numSel</name> <init pos:line="2660" pos:column="20">= <expr><call><name><name pos:line="2660" pos:column="22">_pEditView</name><op:operator pos:line="2660" pos:column="32">-&gt;</op:operator><name pos:line="2660" pos:column="34">execute</name></name><argument_list pos:line="2660" pos:column="41">(<argument><expr><name pos:line="2660" pos:column="42">SCI_GETSELECTIONS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2661" pos:column="9">if <condition pos:line="2661" pos:column="12">(<expr><name pos:line="2661" pos:column="13">numSel</name> <op:operator pos:line="2661" pos:column="20">==</op:operator> <lit:literal type="number" pos:line="2661" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="2661" pos:column="25"> <comment type="line" pos:line="2661" pos:column="26">// either 0 or 1 selection</comment>
		<return pos:line="2662" pos:column="17">return <expr><op:operator pos:line="2662" pos:column="24">(</op:operator><call><name><name pos:line="2662" pos:column="25">_pEditView</name><op:operator pos:line="2662" pos:column="35">-&gt;</op:operator><name pos:line="2662" pos:column="37">execute</name></name><argument_list pos:line="2662" pos:column="44">(<argument><expr><name pos:line="2662" pos:column="45">SCI_GETSELECTIONNSTART</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2662" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="2662" pos:column="72">==</op:operator> <call><name><name pos:line="2662" pos:column="75">_pEditView</name><op:operator pos:line="2662" pos:column="85">-&gt;</op:operator><name pos:line="2662" pos:column="87">execute</name></name><argument_list pos:line="2662" pos:column="94">(<argument><expr><name pos:line="2662" pos:column="95">SCI_GETSELECTIONNEND</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2662" pos:column="117">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2662" pos:column="119">)</op:operator> <op:operator pos:line="2662" pos:column="121">?</op:operator> <lit:literal type="number" pos:line="2662" pos:column="123">0</lit:literal> <op:operator pos:line="2662" pos:column="125">:</op:operator> <lit:literal type="number" pos:line="2662" pos:column="127">1</lit:literal></expr>;</return></then></if>
	<return pos:line="2663" pos:column="9">return <expr><op:operator pos:line="2663" pos:column="16">(</op:operator><call><name><name pos:line="2663" pos:column="17">_pEditView</name><op:operator pos:line="2663" pos:column="27">-&gt;</op:operator><name pos:line="2663" pos:column="29">execute</name></name><argument_list pos:line="2663" pos:column="36">(<argument><expr><name pos:line="2663" pos:column="37">SCI_SELECTIONISRECTANGLE</name></expr></argument>)</argument_list></call><op:operator pos:line="2663" pos:column="62">)</op:operator> <op:operator pos:line="2663" pos:column="64">?</op:operator> <lit:literal type="number" pos:line="2663" pos:column="66">1</lit:literal> <op:operator pos:line="2663" pos:column="68">:</op:operator> <name pos:line="2663" pos:column="70">numSel</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2666" pos:column="1">size_t</name></type> <name><name pos:line="2666" pos:column="8">Notepad_plus</name><op:operator pos:line="2666" pos:column="20">::</op:operator><name pos:line="2666" pos:column="22">getSelectedBytes</name></name><parameter_list pos:line="2666" pos:column="38">()</parameter_list>
<block pos:line="2667" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2668" pos:column="9">int</name></type> <name pos:line="2668" pos:column="13">numSel</name> <init pos:line="2668" pos:column="20">= <expr><call><name><name pos:line="2668" pos:column="22">_pEditView</name><op:operator pos:line="2668" pos:column="32">-&gt;</op:operator><name pos:line="2668" pos:column="34">execute</name></name><argument_list pos:line="2668" pos:column="41">(<argument><expr><name pos:line="2668" pos:column="42">SCI_GETSELECTIONS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2669" pos:column="9">size_t</name></type> <name pos:line="2669" pos:column="16">result</name> <init pos:line="2669" pos:column="23">= <expr><lit:literal type="number" pos:line="2669" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="2670" pos:column="9">for (<init><decl><type><name pos:line="2670" pos:column="14">int</name></type> <name pos:line="2670" pos:column="18">i</name> <init pos:line="2670" pos:column="20">= <expr><lit:literal type="number" pos:line="2670" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2670" pos:column="25">i</name> <op:operator pos:line="2670" pos:column="27">&lt;</op:operator> <name pos:line="2670" pos:column="29">numSel</name></expr>;</condition> <incr><expr><name pos:line="2670" pos:column="37">i</name><op:operator pos:line="2670" pos:column="38">++</op:operator></expr></incr>)
		<expr_stmt><expr><name pos:line="2671" pos:column="17">result</name> <op:operator pos:line="2671" pos:column="24">+=</op:operator> <op:operator pos:line="2671" pos:column="27">(</op:operator><call><name><name pos:line="2671" pos:column="28">_pEditView</name><op:operator pos:line="2671" pos:column="38">-&gt;</op:operator><name pos:line="2671" pos:column="40">execute</name></name><argument_list pos:line="2671" pos:column="47">(<argument><expr><name pos:line="2671" pos:column="48">SCI_GETSELECTIONNEND</name></expr></argument>, <argument><expr><name pos:line="2671" pos:column="70">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="2671" pos:column="73">-</op:operator> <call><name><name pos:line="2671" pos:column="75">_pEditView</name><op:operator pos:line="2671" pos:column="85">-&gt;</op:operator><name pos:line="2671" pos:column="87">execute</name></name><argument_list pos:line="2671" pos:column="94">(<argument><expr><name pos:line="2671" pos:column="95">SCI_GETSELECTIONNSTART</name></expr></argument>, <argument><expr><name pos:line="2671" pos:column="119">i</name></expr></argument>)</argument_list></call><op:operator pos:line="2671" pos:column="121">)</op:operator></expr>;</expr_stmt></for>
	<return pos:line="2672" pos:column="9">return <expr><name pos:line="2672" pos:column="16">result</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2675" pos:column="1">int</name></type> <name><name pos:line="2675" pos:column="5">Notepad_plus</name><op:operator pos:line="2675" pos:column="17">::</op:operator><name pos:line="2675" pos:column="19">wordCount</name></name><parameter_list pos:line="2675" pos:column="28">()</parameter_list>
<block pos:line="2676" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2677" pos:column="5">FindOption</name></type> <name pos:line="2677" pos:column="16">env</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="2678" pos:column="5">env</name><op:operator pos:line="2678" pos:column="8">.</op:operator><name pos:line="2678" pos:column="9">_str2Search</name></name> <op:operator pos:line="2678" pos:column="21">=</op:operator> <call><name pos:line="2678" pos:column="23">TEXT</name><argument_list pos:line="2678" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="2678" pos:column="28">"[^ 	\\\\.,;:!?()+\\-\\*/=\\]\\[{}&amp;~\"'`|@$%&lt;&gt;\\^]+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="2679" pos:column="5">env</name><op:operator pos:line="2679" pos:column="8">.</op:operator><name pos:line="2679" pos:column="9">_searchType</name></name> <op:operator pos:line="2679" pos:column="21">=</op:operator> <name pos:line="2679" pos:column="23">FindRegex</name></expr>;</expr_stmt>
    <return pos:line="2680" pos:column="5">return <expr><call><name><name pos:line="2680" pos:column="12">_findReplaceDlg</name><op:operator pos:line="2680" pos:column="27">.</op:operator><name pos:line="2680" pos:column="28">processAll</name></name><argument_list pos:line="2680" pos:column="38">(<argument><expr><name pos:line="2680" pos:column="39">ProcessCountAll</name></expr></argument>, <argument><expr><op:operator pos:line="2680" pos:column="56">&amp;</op:operator><name pos:line="2680" pos:column="57">env</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2680" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>


<function><type><name pos:line="2684" pos:column="1">void</name></type> <name><name pos:line="2684" pos:column="6">Notepad_plus</name><op:operator pos:line="2684" pos:column="18">::</op:operator><name pos:line="2684" pos:column="20">updateStatusBar</name></name><parameter_list pos:line="2684" pos:column="35">()</parameter_list>
<block pos:line="2685" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2686" pos:column="5">TCHAR</name></type> <name><name pos:line="2686" pos:column="11">strLnCol</name><index pos:line="2686" pos:column="19">[<expr><lit:literal type="number" pos:line="2686" pos:column="20">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2687" pos:column="9">TCHAR</name></type> <name><name pos:line="2687" pos:column="15">strSel</name><index pos:line="2687" pos:column="21">[<expr><lit:literal type="number" pos:line="2687" pos:column="22">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2688" pos:column="9">int</name></type> <name pos:line="2688" pos:column="13">selByte</name> <init pos:line="2688" pos:column="21">= <expr><lit:literal type="number" pos:line="2688" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2689" pos:column="9">int</name></type> <name pos:line="2689" pos:column="13">selLine</name> <init pos:line="2689" pos:column="21">= <expr><lit:literal type="number" pos:line="2689" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="2691" pos:column="9">if <condition pos:line="2691" pos:column="12">(<expr><call><name><name pos:line="2691" pos:column="13">_pEditView</name><op:operator pos:line="2691" pos:column="23">-&gt;</op:operator><name pos:line="2691" pos:column="25">getSelectedCount</name></name><argument_list pos:line="2691" pos:column="41">(<argument><expr><name pos:line="2691" pos:column="42">selByte</name></expr></argument>, <argument><expr><name pos:line="2691" pos:column="51">selLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2691" pos:column="60">
		<expr_stmt><expr><call><name pos:line="2692" pos:column="17">wsprintf</name><argument_list pos:line="2692" pos:column="25">(<argument><expr><name pos:line="2692" pos:column="26">strSel</name></expr></argument>, <argument><expr><call><name pos:line="2692" pos:column="34">TEXT</name><argument_list pos:line="2692" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="2692" pos:column="39">"Sel : %d | %d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2692" pos:column="57">selByte</name></expr></argument>, <argument><expr><name pos:line="2692" pos:column="66">selLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2693" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="2694" pos:column="17">wsprintf</name><argument_list pos:line="2694" pos:column="25">(<argument><expr><name pos:line="2694" pos:column="26">strSel</name></expr></argument>, <argument><expr><call><name pos:line="2694" pos:column="34">TEXT</name><argument_list pos:line="2694" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="2694" pos:column="39">"Sel : %s"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2694" pos:column="52">TEXT</name><argument_list pos:line="2694" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2694" pos:column="57">"N/A"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

    <expr_stmt><expr><call><name pos:line="2696" pos:column="5">wsprintf</name><argument_list pos:line="2696" pos:column="13">(<argument><expr><name pos:line="2696" pos:column="14">strLnCol</name></expr></argument>, <argument><expr><call><name pos:line="2696" pos:column="24">TEXT</name><argument_list pos:line="2696" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="2696" pos:column="29">"Ln : %d    Col : %d    %s"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,\
        <argument><expr><op:operator pos:line="2697" pos:column="9">(</op:operator><call><name><name pos:line="2697" pos:column="10">_pEditView</name><op:operator pos:line="2697" pos:column="20">-&gt;</op:operator><name pos:line="2697" pos:column="22">getCurrentLineNumber</name></name><argument_list pos:line="2697" pos:column="42">()</argument_list></call> <op:operator pos:line="2697" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="2697" pos:column="47">1</lit:literal><op:operator pos:line="2697" pos:column="48">)</op:operator></expr></argument>, \
        <argument><expr><op:operator pos:line="2698" pos:column="9">(</op:operator><call><name><name pos:line="2698" pos:column="10">_pEditView</name><op:operator pos:line="2698" pos:column="20">-&gt;</op:operator><name pos:line="2698" pos:column="22">getCurrentColumnNumber</name></name><argument_list pos:line="2698" pos:column="44">()</argument_list></call> <op:operator pos:line="2698" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="2698" pos:column="49">1</lit:literal><op:operator pos:line="2698" pos:column="50">)</op:operator></expr></argument>,\
        <argument><expr><name pos:line="2699" pos:column="9">strSel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="2701" pos:column="5">_statusBar</name><op:operator pos:line="2701" pos:column="15">.</op:operator><name pos:line="2701" pos:column="16">setText</name></name><argument_list pos:line="2701" pos:column="23">(<argument><expr><name pos:line="2701" pos:column="24">strLnCol</name></expr></argument>, <argument><expr><name pos:line="2701" pos:column="34">STATUSBAR_CUR_POS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name pos:line="2703" pos:column="5">TCHAR</name></type> <name><name pos:line="2703" pos:column="11">strDocLen</name><index pos:line="2703" pos:column="20">[<expr><lit:literal type="number" pos:line="2703" pos:column="21">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="2704" pos:column="9">wsprintf</name><argument_list pos:line="2704" pos:column="17">(<argument><expr><name pos:line="2704" pos:column="18">strDocLen</name></expr></argument>, <argument><expr><call><name pos:line="2704" pos:column="29">TEXT</name><argument_list pos:line="2704" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2704" pos:column="34">"length : %d    lines : %d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2704" pos:column="64">_pEditView</name><op:operator pos:line="2704" pos:column="74">-&gt;</op:operator><name pos:line="2704" pos:column="76">getCurrentDocLen</name></name><argument_list pos:line="2704" pos:column="92">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2704" pos:column="96">_pEditView</name><op:operator pos:line="2704" pos:column="106">-&gt;</op:operator><name pos:line="2704" pos:column="108">execute</name></name><argument_list pos:line="2704" pos:column="115">(<argument><expr><name pos:line="2704" pos:column="116">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="2705" pos:column="5">_statusBar</name><op:operator pos:line="2705" pos:column="15">.</op:operator><name pos:line="2705" pos:column="16">setText</name></name><argument_list pos:line="2705" pos:column="23">(<argument><expr><name pos:line="2705" pos:column="24">strDocLen</name></expr></argument>, <argument><expr><name pos:line="2705" pos:column="35">STATUSBAR_DOC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="2706" pos:column="5">_statusBar</name><op:operator pos:line="2706" pos:column="15">.</op:operator><name pos:line="2706" pos:column="16">setText</name></name><argument_list pos:line="2706" pos:column="23">(<argument><expr><call><name><name pos:line="2706" pos:column="24">_pEditView</name><op:operator pos:line="2706" pos:column="34">-&gt;</op:operator><name pos:line="2706" pos:column="36">execute</name></name><argument_list pos:line="2706" pos:column="43">(<argument><expr><name pos:line="2706" pos:column="44">SCI_GETOVERTYPE</name></expr></argument>)</argument_list></call> <op:operator pos:line="2706" pos:column="61">?</op:operator> <call><name pos:line="2706" pos:column="63">TEXT</name><argument_list pos:line="2706" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="2706" pos:column="68">"OVR"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="2706" pos:column="75">:</op:operator> <call><name pos:line="2706" pos:column="77">TEXT</name><argument_list pos:line="2706" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="2706" pos:column="82">"INS"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2706" pos:column="90">STATUSBAR_TYPING_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2709" pos:column="1">void</name></type> <name><name pos:line="2709" pos:column="6">Notepad_plus</name><op:operator pos:line="2709" pos:column="18">::</op:operator><name pos:line="2709" pos:column="20">dropFiles</name></name><parameter_list pos:line="2709" pos:column="29">(<param><decl><type><name pos:line="2709" pos:column="30">HDROP</name></type> <name pos:line="2709" pos:column="36">hdrop</name></decl></param>)</parameter_list>
<block pos:line="2710" pos:column="1">{
	<if pos:line="2711" pos:column="9">if <condition pos:line="2711" pos:column="12">(<expr><name pos:line="2711" pos:column="13">hdrop</name></expr>)</condition><then pos:line="2711" pos:column="19">
	<block pos:line="2712" pos:column="9">{
		<comment type="line" pos:line="2713" pos:column="17">// Determinate in which view the file(s) is (are) dropped</comment>
		<decl_stmt><decl><type><name pos:line="2714" pos:column="17">POINT</name></type> <name pos:line="2714" pos:column="23">p</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2715" pos:column="17">::</op:operator><name pos:line="2715" pos:column="19">DragQueryPoint</name></name><argument_list pos:line="2715" pos:column="33">(<argument><expr><name pos:line="2715" pos:column="34">hdrop</name></expr></argument>, <argument><expr><op:operator pos:line="2715" pos:column="41">&amp;</op:operator><name pos:line="2715" pos:column="42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2716" pos:column="17">HWND</name></type> <name pos:line="2716" pos:column="22">hWin</name> <init pos:line="2716" pos:column="27">= <expr><call><name><op:operator pos:line="2716" pos:column="29">::</op:operator><name pos:line="2716" pos:column="31">RealChildWindowFromPoint</name></name><argument_list pos:line="2716" pos:column="55">(<argument><expr><call><name><name pos:line="2716" pos:column="56">_pPublicInterface</name><op:operator pos:line="2716" pos:column="73">-&gt;</op:operator><name pos:line="2716" pos:column="75">getHSelf</name></name><argument_list pos:line="2716" pos:column="83">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2716" pos:column="87">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2717" pos:column="17">if <condition pos:line="2717" pos:column="20">(<expr><op:operator pos:line="2717" pos:column="21">!</op:operator><name pos:line="2717" pos:column="22">hWin</name></expr>)</condition><then pos:line="2717" pos:column="27"> <return pos:line="2717" pos:column="28">return;</return></then></if>

		<if pos:line="2719" pos:column="17">if <condition pos:line="2719" pos:column="20">(<expr><op:operator pos:line="2719" pos:column="21">(</op:operator><call><name><name pos:line="2719" pos:column="22">_mainEditView</name><op:operator pos:line="2719" pos:column="35">.</op:operator><name pos:line="2719" pos:column="36">getHSelf</name></name><argument_list pos:line="2719" pos:column="44">()</argument_list></call> <op:operator pos:line="2719" pos:column="47">==</op:operator> <name pos:line="2719" pos:column="50">hWin</name><op:operator pos:line="2719" pos:column="54">)</op:operator> <op:operator pos:line="2719" pos:column="56">||</op:operator> <op:operator pos:line="2719" pos:column="59">(</op:operator><call><name><name pos:line="2719" pos:column="60">_mainDocTab</name><op:operator pos:line="2719" pos:column="71">.</op:operator><name pos:line="2719" pos:column="72">getHSelf</name></name><argument_list pos:line="2719" pos:column="80">()</argument_list></call> <op:operator pos:line="2719" pos:column="83">==</op:operator> <name pos:line="2719" pos:column="86">hWin</name><op:operator pos:line="2719" pos:column="90">)</op:operator></expr>)</condition><then pos:line="2719" pos:column="92">
			<expr_stmt><expr><call><name pos:line="2720" pos:column="25">switchEditViewTo</name><argument_list pos:line="2720" pos:column="41">(<argument><expr><name pos:line="2720" pos:column="42">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="2721" pos:column="17">else <if pos:line="2721" pos:column="22">if <condition pos:line="2721" pos:column="25">(<expr><op:operator pos:line="2721" pos:column="26">(</op:operator><call><name><name pos:line="2721" pos:column="27">_subEditView</name><op:operator pos:line="2721" pos:column="39">.</op:operator><name pos:line="2721" pos:column="40">getHSelf</name></name><argument_list pos:line="2721" pos:column="48">()</argument_list></call> <op:operator pos:line="2721" pos:column="51">==</op:operator> <name pos:line="2721" pos:column="54">hWin</name><op:operator pos:line="2721" pos:column="58">)</op:operator> <op:operator pos:line="2721" pos:column="60">||</op:operator> <op:operator pos:line="2721" pos:column="63">(</op:operator><call><name><name pos:line="2721" pos:column="64">_subDocTab</name><op:operator pos:line="2721" pos:column="74">.</op:operator><name pos:line="2721" pos:column="75">getHSelf</name></name><argument_list pos:line="2721" pos:column="83">()</argument_list></call> <op:operator pos:line="2721" pos:column="86">==</op:operator> <name pos:line="2721" pos:column="89">hWin</name><op:operator pos:line="2721" pos:column="93">)</op:operator></expr>)</condition><then pos:line="2721" pos:column="95">
			<expr_stmt><expr><call><name pos:line="2722" pos:column="25">switchEditViewTo</name><argument_list pos:line="2722" pos:column="41">(<argument><expr><name pos:line="2722" pos:column="42">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="2723" pos:column="17">else
		<block pos:line="2724" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2725" pos:column="25">::</op:operator><name pos:line="2725" pos:column="27">SendMessage</name></name><argument_list pos:line="2725" pos:column="38">(<argument><expr><name pos:line="2725" pos:column="39">hWin</name></expr></argument>, <argument><expr><name pos:line="2725" pos:column="45">WM_DROPFILES</name></expr></argument>, <argument><expr><op:operator pos:line="2725" pos:column="59">(</op:operator><name pos:line="2725" pos:column="60">WPARAM</name><op:operator pos:line="2725" pos:column="66">)</op:operator><name pos:line="2725" pos:column="67">hdrop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2725" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="2726" pos:column="25">return;</return>
		}</block></else></if></else></if>

		<decl_stmt><decl><type><name pos:line="2729" pos:column="17">int</name></type> <name pos:line="2729" pos:column="21">filesDropped</name> <init pos:line="2729" pos:column="34">= <expr><call><name><op:operator pos:line="2729" pos:column="36">::</op:operator><name pos:line="2729" pos:column="38">DragQueryFile</name></name><argument_list pos:line="2729" pos:column="51">(<argument><expr><name pos:line="2729" pos:column="52">hdrop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2729" pos:column="59">0xffffffff</lit:literal></expr></argument>, <argument><expr><name pos:line="2729" pos:column="71">NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2729" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2730" pos:column="17">BufferID</name></type> <name pos:line="2730" pos:column="26">lastOpened</name> <init pos:line="2730" pos:column="37">= <expr><name pos:line="2730" pos:column="39">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
		<for pos:line="2731" pos:column="17">for (<init><decl><type><name pos:line="2731" pos:column="22">int</name></type> <name pos:line="2731" pos:column="26">i</name> <init pos:line="2731" pos:column="28">= <expr><lit:literal type="number" pos:line="2731" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2731" pos:column="34">i</name> <op:operator pos:line="2731" pos:column="36">&lt;</op:operator> <name pos:line="2731" pos:column="38">filesDropped</name></expr> ;</condition> <incr><expr><op:operator pos:line="2731" pos:column="53">++</op:operator><name pos:line="2731" pos:column="55">i</name></expr></incr>)
		<block pos:line="2732" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2733" pos:column="25">TCHAR</name></type> <name><name pos:line="2733" pos:column="31">pathDropped</name><index pos:line="2733" pos:column="42">[<expr><name pos:line="2733" pos:column="43">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2734" pos:column="25">::</op:operator><name pos:line="2734" pos:column="27">DragQueryFile</name></name><argument_list pos:line="2734" pos:column="40">(<argument><expr><name pos:line="2734" pos:column="41">hdrop</name></expr></argument>, <argument><expr><name pos:line="2734" pos:column="48">i</name></expr></argument>, <argument><expr><name pos:line="2734" pos:column="51">pathDropped</name></expr></argument>, <argument><expr><name pos:line="2734" pos:column="64">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2735" pos:column="25">BufferID</name></type> <name pos:line="2735" pos:column="34">test</name> <init pos:line="2735" pos:column="39">= <expr><call><name pos:line="2735" pos:column="41">doOpen</name><argument_list pos:line="2735" pos:column="47">(<argument><expr><name pos:line="2735" pos:column="48">pathDropped</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2736" pos:column="25">if <condition pos:line="2736" pos:column="28">(<expr><name pos:line="2736" pos:column="29">test</name> <op:operator pos:line="2736" pos:column="34">!=</op:operator> <name pos:line="2736" pos:column="37">BUFFER_INVALID</name></expr>)</condition><then pos:line="2736" pos:column="52">
				<expr_stmt><expr><name pos:line="2737" pos:column="33">lastOpened</name> <op:operator pos:line="2737" pos:column="44">=</op:operator> <name pos:line="2737" pos:column="46">test</name></expr>;</expr_stmt></then></if>
            <comment type="line" pos:line="2738" pos:column="13">//setLangStatus(_pEditView-&gt;getCurrentDocType());</comment>
		}</block></for>
		<if pos:line="2740" pos:column="17">if <condition pos:line="2740" pos:column="20">(<expr><name pos:line="2740" pos:column="21">lastOpened</name> <op:operator pos:line="2740" pos:column="32">!=</op:operator> <name pos:line="2740" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="2740" pos:column="50"> <block pos:line="2740" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="2741" pos:column="25">switchToFile</name><argument_list pos:line="2741" pos:column="37">(<argument><expr><name pos:line="2741" pos:column="38">lastOpened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><op:operator pos:line="2743" pos:column="17">::</op:operator><name pos:line="2743" pos:column="19">DragFinish</name></name><argument_list pos:line="2743" pos:column="29">(<argument><expr><name pos:line="2743" pos:column="30">hdrop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="2744" pos:column="17">// Put Notepad_plus to forefront</comment>
		<comment type="line" pos:line="2745" pos:column="17">// May not work for Win2k, but OK for lower versions</comment>
		<comment type="line" pos:line="2746" pos:column="17">// Note: how to drop a file to an iconic window?</comment>
		<comment type="line" pos:line="2747" pos:column="17">// Actually, it is the Send To command that generates a drop.</comment>
		<if pos:line="2748" pos:column="17">if <condition pos:line="2748" pos:column="20">(<expr><call><name><op:operator pos:line="2748" pos:column="21">::</op:operator><name pos:line="2748" pos:column="23">IsIconic</name></name><argument_list pos:line="2748" pos:column="31">(<argument><expr><call><name><name pos:line="2748" pos:column="32">_pPublicInterface</name><op:operator pos:line="2748" pos:column="49">-&gt;</op:operator><name pos:line="2748" pos:column="51">getHSelf</name></name><argument_list pos:line="2748" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2748" pos:column="63">
		<block pos:line="2749" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2750" pos:column="25">::</op:operator><name pos:line="2750" pos:column="27">ShowWindow</name></name><argument_list pos:line="2750" pos:column="37">(<argument><expr><call><name><name pos:line="2750" pos:column="38">_pPublicInterface</name><op:operator pos:line="2750" pos:column="55">-&gt;</op:operator><name pos:line="2750" pos:column="57">getHSelf</name></name><argument_list pos:line="2750" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2750" pos:column="69">SW_RESTORE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><op:operator pos:line="2752" pos:column="17">::</op:operator><name pos:line="2752" pos:column="19">SetForegroundWindow</name></name><argument_list pos:line="2752" pos:column="38">(<argument><expr><call><name><name pos:line="2752" pos:column="39">_pPublicInterface</name><op:operator pos:line="2752" pos:column="56">-&gt;</op:operator><name pos:line="2752" pos:column="58">getHSelf</name></name><argument_list pos:line="2752" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2756" pos:column="1">void</name></type> <name><name pos:line="2756" pos:column="6">Notepad_plus</name><op:operator pos:line="2756" pos:column="18">::</op:operator><name pos:line="2756" pos:column="20">checkModifiedDocument</name></name><parameter_list pos:line="2756" pos:column="41">()</parameter_list>
<block pos:line="2757" pos:column="1">{
	<comment type="line" pos:line="2758" pos:column="9">//this will trigger buffer updates. If the status changes, Notepad++ will be informed and can do its magic</comment>
	<expr_stmt><expr><call><name><name pos:line="2759" pos:column="9">MainFileManager</name><op:operator pos:line="2759" pos:column="24">-&gt;</op:operator><name pos:line="2759" pos:column="26">checkFilesystemChanges</name></name><argument_list pos:line="2759" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2762" pos:column="1">void</name></type> <name><name pos:line="2762" pos:column="6">Notepad_plus</name><op:operator pos:line="2762" pos:column="18">::</op:operator><name pos:line="2762" pos:column="20">getMainClientRect</name></name><parameter_list pos:line="2762" pos:column="37">(<param><decl><type><name pos:line="2762" pos:column="38">RECT</name> <type:modifier pos:line="2762" pos:column="43">&amp;</type:modifier></type><name pos:line="2762" pos:column="44">rc</name></decl></param>)</parameter_list> <specifier pos:line="2762" pos:column="48">const</specifier>
<block pos:line="2763" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="2764" pos:column="5">_pPublicInterface</name><op:operator pos:line="2764" pos:column="22">-&gt;</op:operator><name pos:line="2764" pos:column="24">getClientRect</name></name><argument_list pos:line="2764" pos:column="37">(<argument><expr><name pos:line="2764" pos:column="38">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2765" pos:column="9">rc</name><op:operator pos:line="2765" pos:column="11">.</op:operator><name pos:line="2765" pos:column="12">top</name></name> <op:operator pos:line="2765" pos:column="16">+=</op:operator> <call><name><name pos:line="2765" pos:column="19">_rebarTop</name><op:operator pos:line="2765" pos:column="28">.</op:operator><name pos:line="2765" pos:column="29">getHeight</name></name><argument_list pos:line="2765" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2766" pos:column="9">rc</name><op:operator pos:line="2766" pos:column="11">.</op:operator><name pos:line="2766" pos:column="12">bottom</name></name> <op:operator pos:line="2766" pos:column="19">-=</op:operator> <name><name pos:line="2766" pos:column="22">rc</name><op:operator pos:line="2766" pos:column="24">.</op:operator><name pos:line="2766" pos:column="25">top</name></name> <op:operator pos:line="2766" pos:column="29">+</op:operator> <call><name><name pos:line="2766" pos:column="31">_rebarBottom</name><op:operator pos:line="2766" pos:column="43">.</op:operator><name pos:line="2766" pos:column="44">getHeight</name></name><argument_list pos:line="2766" pos:column="53">()</argument_list></call> <op:operator pos:line="2766" pos:column="56">+</op:operator> <call><name><name pos:line="2766" pos:column="58">_statusBar</name><op:operator pos:line="2766" pos:column="68">.</op:operator><name pos:line="2766" pos:column="69">getHeight</name></name><argument_list pos:line="2766" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2769" pos:column="1">void</name></type> <name><name pos:line="2769" pos:column="6">Notepad_plus</name><op:operator pos:line="2769" pos:column="18">::</op:operator><name pos:line="2769" pos:column="20">showView</name></name><parameter_list pos:line="2769" pos:column="28">(<param><decl><type><name pos:line="2769" pos:column="29">int</name></type> <name pos:line="2769" pos:column="33">whichOne</name></decl></param>)</parameter_list> <block pos:line="2769" pos:column="43">{
	<if pos:line="2770" pos:column="9">if <condition pos:line="2770" pos:column="12">(<expr><call><name pos:line="2770" pos:column="13">viewVisible</name><argument_list pos:line="2770" pos:column="24">(<argument><expr><name pos:line="2770" pos:column="25">whichOne</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2770" pos:column="35">	<comment type="line" pos:line="2770" pos:column="41">//no use making visible view visible</comment>
		<return pos:line="2771" pos:column="17">return;</return></then></if>

	<if pos:line="2773" pos:column="9">if <condition pos:line="2773" pos:column="12">(<expr><name pos:line="2773" pos:column="13">_mainWindowStatus</name> <op:operator pos:line="2773" pos:column="31">&amp;</op:operator> <name pos:line="2773" pos:column="33">WindowUserActive</name></expr>)</condition><then pos:line="2773" pos:column="50"> <block pos:line="2773" pos:column="51">{
		 <expr_stmt><expr><call><name><name pos:line="2774" pos:column="18">_pMainSplitter</name><op:operator pos:line="2774" pos:column="32">-&gt;</op:operator><name pos:line="2774" pos:column="34">setWin0</name></name><argument_list pos:line="2774" pos:column="41">(<argument><expr><op:operator pos:line="2774" pos:column="42">&amp;</op:operator><name pos:line="2774" pos:column="43">_subSplitter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		 <expr_stmt><expr><name pos:line="2775" pos:column="18">_pMainWindow</name> <op:operator pos:line="2775" pos:column="31">=</op:operator> <name pos:line="2775" pos:column="33">_pMainSplitter</name></expr>;</expr_stmt>
	}</block></then> <else pos:line="2776" pos:column="11">else <block pos:line="2776" pos:column="16">{
		<expr_stmt><expr><name pos:line="2777" pos:column="17">_pMainWindow</name> <op:operator pos:line="2777" pos:column="30">=</op:operator> <op:operator pos:line="2777" pos:column="32">&amp;</op:operator><name pos:line="2777" pos:column="33">_subSplitter</name></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="2780" pos:column="9">if <condition pos:line="2780" pos:column="12">(<expr><name pos:line="2780" pos:column="13">whichOne</name> <op:operator pos:line="2780" pos:column="22">==</op:operator> <name pos:line="2780" pos:column="25">MAIN_VIEW</name></expr>)</condition><then pos:line="2780" pos:column="35"> <block pos:line="2780" pos:column="36">{
		<expr_stmt><expr><call><name><name pos:line="2781" pos:column="17">_mainEditView</name><op:operator pos:line="2781" pos:column="30">.</op:operator><name pos:line="2781" pos:column="31">display</name></name><argument_list pos:line="2781" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="2781" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2782" pos:column="17">_mainDocTab</name><op:operator pos:line="2782" pos:column="28">.</op:operator><name pos:line="2782" pos:column="29">display</name></name><argument_list pos:line="2782" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="2782" pos:column="37">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="2783" pos:column="11">else <if pos:line="2783" pos:column="16">if <condition pos:line="2783" pos:column="19">(<expr><name pos:line="2783" pos:column="20">whichOne</name> <op:operator pos:line="2783" pos:column="29">==</op:operator> <name pos:line="2783" pos:column="32">SUB_VIEW</name></expr>)</condition><then pos:line="2783" pos:column="41"> <block pos:line="2783" pos:column="42">{
		<expr_stmt><expr><call><name><name pos:line="2784" pos:column="17">_subEditView</name><op:operator pos:line="2784" pos:column="29">.</op:operator><name pos:line="2784" pos:column="30">display</name></name><argument_list pos:line="2784" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="2784" pos:column="38">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2785" pos:column="17">_subDocTab</name><op:operator pos:line="2785" pos:column="27">.</op:operator><name pos:line="2785" pos:column="28">display</name></name><argument_list pos:line="2785" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="2785" pos:column="36">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>
	<expr_stmt><expr><call><name><name pos:line="2787" pos:column="9">_pMainWindow</name><op:operator pos:line="2787" pos:column="21">-&gt;</op:operator><name pos:line="2787" pos:column="23">display</name></name><argument_list pos:line="2787" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="2787" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="2789" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="2789" pos:column="27">|=</op:operator> <op:operator pos:line="2789" pos:column="30">(</op:operator><name pos:line="2789" pos:column="31">whichOne</name><op:operator pos:line="2789" pos:column="39">==</op:operator><name pos:line="2789" pos:column="41">MAIN_VIEW</name><op:operator pos:line="2789" pos:column="50">)</op:operator><op:operator pos:line="2789" pos:column="51">?</op:operator><name pos:line="2789" pos:column="52">WindowMainActive</name><op:operator pos:line="2789" pos:column="68">:</op:operator><name pos:line="2789" pos:column="69">WindowSubActive</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2791" pos:column="9">//Send sizing info to make windows fit</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="2792" pos:column="9">::</op:operator><name pos:line="2792" pos:column="11">SendMessage</name></name><argument_list pos:line="2792" pos:column="22">(<argument><expr><call><name><name pos:line="2792" pos:column="23">_pPublicInterface</name><op:operator pos:line="2792" pos:column="40">-&gt;</op:operator><name pos:line="2792" pos:column="42">getHSelf</name></name><argument_list pos:line="2792" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2792" pos:column="54">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2792" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2792" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2795" pos:column="1">bool</name></type> <name><name pos:line="2795" pos:column="6">Notepad_plus</name><op:operator pos:line="2795" pos:column="18">::</op:operator><name pos:line="2795" pos:column="20">viewVisible</name></name><parameter_list pos:line="2795" pos:column="31">(<param><decl><type><name pos:line="2795" pos:column="32">int</name></type> <name pos:line="2795" pos:column="36">whichOne</name></decl></param>)</parameter_list> <block pos:line="2795" pos:column="46">{
	<decl_stmt><decl><type><name pos:line="2796" pos:column="9">int</name></type> <name pos:line="2796" pos:column="13">viewToCheck</name> <init pos:line="2796" pos:column="25">= <expr><op:operator pos:line="2796" pos:column="27">(</op:operator><name pos:line="2796" pos:column="28">whichOne</name> <op:operator pos:line="2796" pos:column="37">==</op:operator> <name pos:line="2796" pos:column="40">SUB_VIEW</name><op:operator pos:line="2796" pos:column="48">?</op:operator><name pos:line="2796" pos:column="49">WindowSubActive</name><op:operator pos:line="2796" pos:column="64">:</op:operator><name pos:line="2796" pos:column="65">WindowMainActive</name><op:operator pos:line="2796" pos:column="81">)</op:operator></expr></init></decl>;</decl_stmt>
	<return pos:line="2797" pos:column="9">return <expr><op:operator pos:line="2797" pos:column="16">(</op:operator><name pos:line="2797" pos:column="17">_mainWindowStatus</name> <op:operator pos:line="2797" pos:column="35">&amp;</op:operator> <name pos:line="2797" pos:column="37">viewToCheck</name><op:operator pos:line="2797" pos:column="48">)</op:operator> <op:operator pos:line="2797" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="2797" pos:column="53">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2800" pos:column="1">void</name></type> <name><name pos:line="2800" pos:column="6">Notepad_plus</name><op:operator pos:line="2800" pos:column="18">::</op:operator><name pos:line="2800" pos:column="20">hideCurrentView</name></name><parameter_list pos:line="2800" pos:column="35">()</parameter_list>
<block pos:line="2801" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="2802" pos:column="9">hideView</name><argument_list pos:line="2802" pos:column="17">(<argument><expr><call><name pos:line="2802" pos:column="18">currentView</name><argument_list pos:line="2802" pos:column="29">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2805" pos:column="1">void</name></type> <name><name pos:line="2805" pos:column="6">Notepad_plus</name><op:operator pos:line="2805" pos:column="18">::</op:operator><name pos:line="2805" pos:column="20">hideView</name></name><parameter_list pos:line="2805" pos:column="28">(<param><decl><type><name pos:line="2805" pos:column="29">int</name></type> <name pos:line="2805" pos:column="33">whichOne</name></decl></param>)</parameter_list>
<block pos:line="2806" pos:column="1">{
	<if pos:line="2807" pos:column="9">if <condition pos:line="2807" pos:column="12">(<expr><op:operator pos:line="2807" pos:column="13">!</op:operator><op:operator pos:line="2807" pos:column="14">(</op:operator><call><name pos:line="2807" pos:column="15">bothActive</name><argument_list pos:line="2807" pos:column="25">()</argument_list></call><op:operator pos:line="2807" pos:column="27">)</op:operator></expr>)</condition><then pos:line="2807" pos:column="29">	<comment type="line" pos:line="2807" pos:column="33">//cannot close if not both views visible</comment>
		<return pos:line="2808" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="2810" pos:column="9">Window</name> <type:modifier pos:line="2810" pos:column="16">*</type:modifier></type> <name pos:line="2810" pos:column="18">windowToSet</name> <init pos:line="2810" pos:column="30">= <expr><op:operator pos:line="2810" pos:column="32">(</op:operator><name pos:line="2810" pos:column="33">whichOne</name> <op:operator pos:line="2810" pos:column="42">==</op:operator> <name pos:line="2810" pos:column="45">MAIN_VIEW</name><op:operator pos:line="2810" pos:column="54">)</op:operator><op:operator pos:line="2810" pos:column="55">?</op:operator><op:operator pos:line="2810" pos:column="56">&amp;</op:operator><name pos:line="2810" pos:column="57">_subDocTab</name><op:operator pos:line="2810" pos:column="67">:</op:operator><op:operator pos:line="2810" pos:column="68">&amp;</op:operator><name pos:line="2810" pos:column="69">_mainDocTab</name></expr></init></decl>;</decl_stmt>
	<if pos:line="2811" pos:column="9">if <condition pos:line="2811" pos:column="12">(<expr><name pos:line="2811" pos:column="13">_mainWindowStatus</name> <op:operator pos:line="2811" pos:column="31">&amp;</op:operator> <name pos:line="2811" pos:column="33">WindowUserActive</name></expr>)</condition><then pos:line="2811" pos:column="50">
	<block pos:line="2812" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2813" pos:column="17">_pMainSplitter</name><op:operator pos:line="2813" pos:column="31">-&gt;</op:operator><name pos:line="2813" pos:column="33">setWin0</name></name><argument_list pos:line="2813" pos:column="40">(<argument><expr><name pos:line="2813" pos:column="41">windowToSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="2815" pos:column="9">else <comment type="line" pos:line="2815" pos:column="14">// otherwise the main window is the spltter container that we just created</comment>
		<expr_stmt><expr><name pos:line="2816" pos:column="17">_pMainWindow</name> <op:operator pos:line="2816" pos:column="30">=</op:operator> <name pos:line="2816" pos:column="32">windowToSet</name></expr>;</expr_stmt></else></if>

	<expr_stmt><expr><call><name><name pos:line="2818" pos:column="9">_subSplitter</name><op:operator pos:line="2818" pos:column="21">.</op:operator><name pos:line="2818" pos:column="22">display</name></name><argument_list pos:line="2818" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="2818" pos:column="30">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2818" pos:column="41">//hide splitter</comment>
	<comment type="line" pos:line="2819" pos:column="9">//hide scintilla and doctab</comment>
	<if pos:line="2820" pos:column="9">if <condition pos:line="2820" pos:column="12">(<expr><name pos:line="2820" pos:column="13">whichOne</name> <op:operator pos:line="2820" pos:column="22">==</op:operator> <name pos:line="2820" pos:column="25">MAIN_VIEW</name></expr>)</condition><then pos:line="2820" pos:column="35"> <block pos:line="2820" pos:column="36">{
		<expr_stmt><expr><call><name><name pos:line="2821" pos:column="17">_mainEditView</name><op:operator pos:line="2821" pos:column="30">.</op:operator><name pos:line="2821" pos:column="31">display</name></name><argument_list pos:line="2821" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="2821" pos:column="39">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2822" pos:column="17">_mainDocTab</name><op:operator pos:line="2822" pos:column="28">.</op:operator><name pos:line="2822" pos:column="29">display</name></name><argument_list pos:line="2822" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="2822" pos:column="37">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="2823" pos:column="11">else <if pos:line="2823" pos:column="16">if <condition pos:line="2823" pos:column="19">(<expr><name pos:line="2823" pos:column="20">whichOne</name> <op:operator pos:line="2823" pos:column="29">==</op:operator> <name pos:line="2823" pos:column="32">SUB_VIEW</name></expr>)</condition><then pos:line="2823" pos:column="41"> <block pos:line="2823" pos:column="42">{
		<expr_stmt><expr><call><name><name pos:line="2824" pos:column="17">_subEditView</name><op:operator pos:line="2824" pos:column="29">.</op:operator><name pos:line="2824" pos:column="30">display</name></name><argument_list pos:line="2824" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="2824" pos:column="38">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2825" pos:column="17">_subDocTab</name><op:operator pos:line="2825" pos:column="27">.</op:operator><name pos:line="2825" pos:column="28">display</name></name><argument_list pos:line="2825" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="2825" pos:column="36">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>

	<comment type="line" pos:line="2828" pos:column="9">// resize the main window</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="2829" pos:column="9">::</op:operator><name pos:line="2829" pos:column="11">SendMessage</name></name><argument_list pos:line="2829" pos:column="22">(<argument><expr><call><name><name pos:line="2829" pos:column="23">_pPublicInterface</name><op:operator pos:line="2829" pos:column="40">-&gt;</op:operator><name pos:line="2829" pos:column="42">getHSelf</name></name><argument_list pos:line="2829" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2829" pos:column="54">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2829" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2829" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="2831" pos:column="9">switchEditViewTo</name><argument_list pos:line="2831" pos:column="25">(<argument><expr><call><name pos:line="2831" pos:column="26">otherFromView</name><argument_list pos:line="2831" pos:column="39">(<argument><expr><name pos:line="2831" pos:column="40">whichOne</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2832" pos:column="9">int</name></type> <name pos:line="2832" pos:column="13">viewToDisable</name> <init pos:line="2832" pos:column="27">= <expr><op:operator pos:line="2832" pos:column="29">(</op:operator><name pos:line="2832" pos:column="30">whichOne</name> <op:operator pos:line="2832" pos:column="39">==</op:operator> <name pos:line="2832" pos:column="42">SUB_VIEW</name><op:operator pos:line="2832" pos:column="50">?</op:operator><name pos:line="2832" pos:column="51">WindowSubActive</name><op:operator pos:line="2832" pos:column="66">:</op:operator><name pos:line="2832" pos:column="67">WindowMainActive</name><op:operator pos:line="2832" pos:column="83">)</op:operator></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2833" pos:column="9">_mainWindowStatus</name> <op:operator pos:line="2833" pos:column="27">&amp;=</op:operator> <op:operator pos:line="2833" pos:column="30">~</op:operator><name pos:line="2833" pos:column="31">viewToDisable</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2836" pos:column="1">bool</name></type> <name><name pos:line="2836" pos:column="6">Notepad_plus</name><op:operator pos:line="2836" pos:column="18">::</op:operator><name pos:line="2836" pos:column="20">loadStyles</name></name><parameter_list pos:line="2836" pos:column="30">()</parameter_list>
<block pos:line="2837" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2838" pos:column="9">NppParameters</name> <type:modifier pos:line="2838" pos:column="23">*</type:modifier></type><name pos:line="2838" pos:column="24">pNppParam</name> <init pos:line="2838" pos:column="34">= <expr><call><name><name pos:line="2838" pos:column="36">NppParameters</name><op:operator pos:line="2838" pos:column="49">::</op:operator><name pos:line="2838" pos:column="51">getInstance</name></name><argument_list pos:line="2838" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="2839" pos:column="9">return <expr><call><name><name pos:line="2839" pos:column="16">pNppParam</name><op:operator pos:line="2839" pos:column="25">-&gt;</op:operator><name pos:line="2839" pos:column="27">reloadStylers</name></name><argument_list pos:line="2839" pos:column="40">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="2842" pos:column="1">bool</name></type> <name><name pos:line="2842" pos:column="6">Notepad_plus</name><op:operator pos:line="2842" pos:column="18">::</op:operator><name pos:line="2842" pos:column="20">canHideView</name></name><parameter_list pos:line="2842" pos:column="31">(<param><decl><type><name pos:line="2842" pos:column="32">int</name></type> <name pos:line="2842" pos:column="36">whichOne</name></decl></param>)</parameter_list>
<block pos:line="2843" pos:column="1">{
	<if pos:line="2844" pos:column="9">if <condition pos:line="2844" pos:column="12">(<expr><op:operator pos:line="2844" pos:column="13">!</op:operator><call><name pos:line="2844" pos:column="14">viewVisible</name><argument_list pos:line="2844" pos:column="25">(<argument><expr><name pos:line="2844" pos:column="26">whichOne</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2844" pos:column="36">
		<return pos:line="2845" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2845" pos:column="24">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="2845" pos:column="33">//cannot hide hidden view</comment>
	<if pos:line="2846" pos:column="9">if <condition pos:line="2846" pos:column="12">(<expr><op:operator pos:line="2846" pos:column="13">!</op:operator><call><name pos:line="2846" pos:column="14">bothActive</name><argument_list pos:line="2846" pos:column="24">()</argument_list></call></expr>)</condition><then pos:line="2846" pos:column="27">
		<return pos:line="2847" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2847" pos:column="24">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="2847" pos:column="33">//cannot hide only window</comment>
	<decl_stmt><decl><type><name pos:line="2848" pos:column="9">DocTabView</name> <type:modifier pos:line="2848" pos:column="20">*</type:modifier></type> <name pos:line="2848" pos:column="22">tabToCheck</name> <init pos:line="2848" pos:column="33">= <expr><op:operator pos:line="2848" pos:column="35">(</op:operator><name pos:line="2848" pos:column="36">whichOne</name> <op:operator pos:line="2848" pos:column="45">==</op:operator> <name pos:line="2848" pos:column="48">MAIN_VIEW</name><op:operator pos:line="2848" pos:column="57">)</op:operator><op:operator pos:line="2848" pos:column="58">?</op:operator><op:operator pos:line="2848" pos:column="59">&amp;</op:operator><name pos:line="2848" pos:column="60">_mainDocTab</name><op:operator pos:line="2848" pos:column="71">:</op:operator><op:operator pos:line="2848" pos:column="72">&amp;</op:operator><name pos:line="2848" pos:column="73">_subDocTab</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2849" pos:column="9">Buffer</name> <type:modifier pos:line="2849" pos:column="16">*</type:modifier></type> <name pos:line="2849" pos:column="18">buf</name> <init pos:line="2849" pos:column="22">= <expr><call><name><name pos:line="2849" pos:column="24">MainFileManager</name><op:operator pos:line="2849" pos:column="39">-&gt;</op:operator><name pos:line="2849" pos:column="41">getBufferByID</name></name><argument_list pos:line="2849" pos:column="54">(<argument><expr><call><name><name pos:line="2849" pos:column="55">tabToCheck</name><op:operator pos:line="2849" pos:column="65">-&gt;</op:operator><name pos:line="2849" pos:column="67">getBufferByIndex</name></name><argument_list pos:line="2849" pos:column="83">(<argument><expr><lit:literal type="number" pos:line="2849" pos:column="84">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2850" pos:column="9">bool</name></type> <name pos:line="2850" pos:column="14">canHide</name> <init pos:line="2850" pos:column="22">= <expr><op:operator pos:line="2850" pos:column="24">(</op:operator><op:operator pos:line="2850" pos:column="25">(</op:operator><call><name><name pos:line="2850" pos:column="26">tabToCheck</name><op:operator pos:line="2850" pos:column="36">-&gt;</op:operator><name pos:line="2850" pos:column="38">nbItem</name></name><argument_list pos:line="2850" pos:column="44">()</argument_list></call> <op:operator pos:line="2850" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="2850" pos:column="50">1</lit:literal><op:operator pos:line="2850" pos:column="51">)</op:operator> <op:operator pos:line="2850" pos:column="53">&amp;&amp;</op:operator> <op:operator pos:line="2850" pos:column="56">!</op:operator><call><name><name pos:line="2850" pos:column="57">buf</name><op:operator pos:line="2850" pos:column="60">-&gt;</op:operator><name pos:line="2850" pos:column="62">isDirty</name></name><argument_list pos:line="2850" pos:column="69">()</argument_list></call> <op:operator pos:line="2850" pos:column="72">&amp;&amp;</op:operator> <call><name><name pos:line="2850" pos:column="75">buf</name><op:operator pos:line="2850" pos:column="78">-&gt;</op:operator><name pos:line="2850" pos:column="80">isUntitled</name></name><argument_list pos:line="2850" pos:column="90">()</argument_list></call><op:operator pos:line="2850" pos:column="92">)</op:operator></expr></init></decl>;</decl_stmt>
	<return pos:line="2851" pos:column="9">return <expr><name pos:line="2851" pos:column="16">canHide</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2854" pos:column="1">void</name></type> <name><name pos:line="2854" pos:column="6">Notepad_plus</name><op:operator pos:line="2854" pos:column="18">::</op:operator><name pos:line="2854" pos:column="20">loadBufferIntoView</name></name><parameter_list pos:line="2854" pos:column="38">(<param><decl><type><name pos:line="2854" pos:column="39">BufferID</name></type> <name pos:line="2854" pos:column="48">id</name></decl></param>, <param><decl><type><name pos:line="2854" pos:column="52">int</name></type> <name pos:line="2854" pos:column="56">whichOne</name></decl></param>, <param><decl><type><name pos:line="2854" pos:column="66">bool</name></type> <name pos:line="2854" pos:column="71">dontClose</name></decl></param>)</parameter_list> <block pos:line="2854" pos:column="82">{
	<decl_stmt><decl><type><name pos:line="2855" pos:column="9">DocTabView</name> <type:modifier pos:line="2855" pos:column="20">*</type:modifier></type> <name pos:line="2855" pos:column="22">tabToOpen</name> <init pos:line="2855" pos:column="32">= <expr><op:operator pos:line="2855" pos:column="34">(</op:operator><name pos:line="2855" pos:column="35">whichOne</name> <op:operator pos:line="2855" pos:column="44">==</op:operator> <name pos:line="2855" pos:column="47">MAIN_VIEW</name><op:operator pos:line="2855" pos:column="56">)</op:operator><op:operator pos:line="2855" pos:column="57">?</op:operator><op:operator pos:line="2855" pos:column="58">&amp;</op:operator><name pos:line="2855" pos:column="59">_mainDocTab</name><op:operator pos:line="2855" pos:column="70">:</op:operator><op:operator pos:line="2855" pos:column="71">&amp;</op:operator><name pos:line="2855" pos:column="72">_subDocTab</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2856" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="2856" pos:column="27">*</type:modifier></type> <name pos:line="2856" pos:column="29">viewToOpen</name> <init pos:line="2856" pos:column="40">= <expr><op:operator pos:line="2856" pos:column="42">(</op:operator><name pos:line="2856" pos:column="43">whichOne</name> <op:operator pos:line="2856" pos:column="52">==</op:operator> <name pos:line="2856" pos:column="55">MAIN_VIEW</name><op:operator pos:line="2856" pos:column="64">)</op:operator><op:operator pos:line="2856" pos:column="65">?</op:operator><op:operator pos:line="2856" pos:column="66">&amp;</op:operator><name pos:line="2856" pos:column="67">_mainEditView</name><op:operator pos:line="2856" pos:column="80">:</op:operator><op:operator pos:line="2856" pos:column="81">&amp;</op:operator><name pos:line="2856" pos:column="82">_subEditView</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2858" pos:column="9">//check if buffer exists</comment>
	<decl_stmt><decl><type><name pos:line="2859" pos:column="9">int</name></type> <name pos:line="2859" pos:column="13">index</name> <init pos:line="2859" pos:column="19">= <expr><call><name><name pos:line="2859" pos:column="21">tabToOpen</name><op:operator pos:line="2859" pos:column="30">-&gt;</op:operator><name pos:line="2859" pos:column="32">getIndexByBuffer</name></name><argument_list pos:line="2859" pos:column="48">(<argument><expr><name pos:line="2859" pos:column="49">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2860" pos:column="9">if <condition pos:line="2860" pos:column="12">(<expr><name pos:line="2860" pos:column="13">index</name> <op:operator pos:line="2860" pos:column="19">!=</op:operator> <op:operator pos:line="2860" pos:column="22">-</op:operator><lit:literal type="number" pos:line="2860" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="2860" pos:column="25">	<comment type="line" pos:line="2860" pos:column="33">//already open, done</comment>
		<return pos:line="2861" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="2863" pos:column="9">BufferID</name></type> <name pos:line="2863" pos:column="18">idToClose</name> <init pos:line="2863" pos:column="28">= <expr><name pos:line="2863" pos:column="30">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="2864" pos:column="9">//Check if the tab has a single clean buffer. Close it if so</comment>
	<if pos:line="2865" pos:column="9">if <condition pos:line="2865" pos:column="12">(<expr><op:operator pos:line="2865" pos:column="13">!</op:operator><name pos:line="2865" pos:column="14">dontClose</name> <op:operator pos:line="2865" pos:column="24">&amp;&amp;</op:operator> <call><name><name pos:line="2865" pos:column="27">tabToOpen</name><op:operator pos:line="2865" pos:column="36">-&gt;</op:operator><name pos:line="2865" pos:column="38">nbItem</name></name><argument_list pos:line="2865" pos:column="44">()</argument_list></call> <op:operator pos:line="2865" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="2865" pos:column="50">1</lit:literal></expr>)</condition><then pos:line="2865" pos:column="52"> <block pos:line="2865" pos:column="53">{
		<expr_stmt><expr><name pos:line="2866" pos:column="17">idToClose</name> <op:operator pos:line="2866" pos:column="27">=</op:operator> <call><name><name pos:line="2866" pos:column="29">tabToOpen</name><op:operator pos:line="2866" pos:column="38">-&gt;</op:operator><name pos:line="2866" pos:column="40">getBufferByIndex</name></name><argument_list pos:line="2866" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="2866" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2867" pos:column="17">Buffer</name> <type:modifier pos:line="2867" pos:column="24">*</type:modifier></type> <name pos:line="2867" pos:column="26">buf</name> <init pos:line="2867" pos:column="30">= <expr><call><name><name pos:line="2867" pos:column="32">MainFileManager</name><op:operator pos:line="2867" pos:column="47">-&gt;</op:operator><name pos:line="2867" pos:column="49">getBufferByID</name></name><argument_list pos:line="2867" pos:column="62">(<argument><expr><name pos:line="2867" pos:column="63">idToClose</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2868" pos:column="17">if <condition pos:line="2868" pos:column="20">(<expr><call><name><name pos:line="2868" pos:column="21">buf</name><op:operator pos:line="2868" pos:column="24">-&gt;</op:operator><name pos:line="2868" pos:column="26">isDirty</name></name><argument_list pos:line="2868" pos:column="33">()</argument_list></call> <op:operator pos:line="2868" pos:column="36">||</op:operator> <op:operator pos:line="2868" pos:column="39">!</op:operator><call><name><name pos:line="2868" pos:column="40">buf</name><op:operator pos:line="2868" pos:column="43">-&gt;</op:operator><name pos:line="2868" pos:column="45">isUntitled</name></name><argument_list pos:line="2868" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="2868" pos:column="58"> <block pos:line="2868" pos:column="59">{
			<expr_stmt><expr><name pos:line="2869" pos:column="25">idToClose</name> <op:operator pos:line="2869" pos:column="35">=</op:operator> <name pos:line="2869" pos:column="37">BUFFER_INVALID</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="2873" pos:column="9">MainFileManager</name><op:operator pos:line="2873" pos:column="24">-&gt;</op:operator><name pos:line="2873" pos:column="26">addBufferReference</name></name><argument_list pos:line="2873" pos:column="44">(<argument><expr><name pos:line="2873" pos:column="45">id</name></expr></argument>, <argument><expr><name pos:line="2873" pos:column="49">viewToOpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="2875" pos:column="9">if <condition pos:line="2875" pos:column="12">(<expr><name pos:line="2875" pos:column="13">idToClose</name> <op:operator pos:line="2875" pos:column="23">!=</op:operator> <name pos:line="2875" pos:column="26">BUFFER_INVALID</name></expr>)</condition><then pos:line="2875" pos:column="41"> <block pos:line="2875" pos:column="42">{	<comment type="line" pos:line="2875" pos:column="49">//close clean doc. Use special logic to prevent flicker of tab showing then hiding</comment>
		<expr_stmt><expr><call><name><name pos:line="2876" pos:column="17">tabToOpen</name><op:operator pos:line="2876" pos:column="26">-&gt;</op:operator><name pos:line="2876" pos:column="28">setBuffer</name></name><argument_list pos:line="2876" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="2876" pos:column="38">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2876" pos:column="41">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2876" pos:column="49">//index 0 since only one open</comment>
		<expr_stmt><expr><call><name pos:line="2877" pos:column="17">activateBuffer</name><argument_list pos:line="2877" pos:column="31">(<argument><expr><name pos:line="2877" pos:column="32">id</name></expr></argument>, <argument><expr><name pos:line="2877" pos:column="36">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2877" pos:column="49">//activate. DocTab already activated but not a problem</comment>
		<expr_stmt><expr><call><name><name pos:line="2878" pos:column="17">MainFileManager</name><op:operator pos:line="2878" pos:column="32">-&gt;</op:operator><name pos:line="2878" pos:column="34">closeBuffer</name></name><argument_list pos:line="2878" pos:column="45">(<argument><expr><name pos:line="2878" pos:column="46">idToClose</name></expr></argument>, <argument><expr><name pos:line="2878" pos:column="57">viewToOpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2878" pos:column="73">//delete the buffer</comment>
		<if pos:line="2879" pos:column="17">if <condition pos:line="2879" pos:column="20">(<expr><name pos:line="2879" pos:column="21">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="2879" pos:column="41">
			<expr_stmt><expr><call><name><name pos:line="2880" pos:column="25">_pFileSwitcherPanel</name><op:operator pos:line="2880" pos:column="44">-&gt;</op:operator><name pos:line="2880" pos:column="46">closeItem</name></name><argument_list pos:line="2880" pos:column="55">(<argument><expr><op:operator pos:line="2880" pos:column="56">(</op:operator><name pos:line="2880" pos:column="57">int</name><op:operator pos:line="2880" pos:column="60">)</op:operator><name pos:line="2880" pos:column="61">idToClose</name></expr></argument>, <argument><expr><name pos:line="2880" pos:column="72">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then> <else pos:line="2881" pos:column="11">else <block pos:line="2881" pos:column="16">{
		<expr_stmt><expr><call><name><name pos:line="2882" pos:column="17">tabToOpen</name><op:operator pos:line="2882" pos:column="26">-&gt;</op:operator><name pos:line="2882" pos:column="28">addBuffer</name></name><argument_list pos:line="2882" pos:column="37">(<argument><expr><name pos:line="2882" pos:column="38">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="2886" pos:column="1">bool</name></type> <name><name pos:line="2886" pos:column="6">Notepad_plus</name><op:operator pos:line="2886" pos:column="18">::</op:operator><name pos:line="2886" pos:column="20">removeBufferFromView</name></name><parameter_list pos:line="2886" pos:column="40">(<param><decl><type><name pos:line="2886" pos:column="41">BufferID</name></type> <name pos:line="2886" pos:column="50">id</name></decl></param>, <param><decl><type><name pos:line="2886" pos:column="54">int</name></type> <name pos:line="2886" pos:column="58">whichOne</name></decl></param>)</parameter_list>
<block pos:line="2887" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2888" pos:column="9">DocTabView</name> <type:modifier pos:line="2888" pos:column="20">*</type:modifier></type> <name pos:line="2888" pos:column="22">tabToClose</name> <init pos:line="2888" pos:column="33">= <expr><op:operator pos:line="2888" pos:column="35">(</op:operator><name pos:line="2888" pos:column="36">whichOne</name> <op:operator pos:line="2888" pos:column="45">==</op:operator> <name pos:line="2888" pos:column="48">MAIN_VIEW</name><op:operator pos:line="2888" pos:column="57">)</op:operator><op:operator pos:line="2888" pos:column="58">?</op:operator><op:operator pos:line="2888" pos:column="59">&amp;</op:operator><name pos:line="2888" pos:column="60">_mainDocTab</name><op:operator pos:line="2888" pos:column="71">:</op:operator><op:operator pos:line="2888" pos:column="72">&amp;</op:operator><name pos:line="2888" pos:column="73">_subDocTab</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2889" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="2889" pos:column="27">*</type:modifier></type> <name pos:line="2889" pos:column="29">viewToClose</name> <init pos:line="2889" pos:column="41">= <expr><op:operator pos:line="2889" pos:column="43">(</op:operator><name pos:line="2889" pos:column="44">whichOne</name> <op:operator pos:line="2889" pos:column="53">==</op:operator> <name pos:line="2889" pos:column="56">MAIN_VIEW</name><op:operator pos:line="2889" pos:column="65">)</op:operator><op:operator pos:line="2889" pos:column="66">?</op:operator><op:operator pos:line="2889" pos:column="67">&amp;</op:operator><name pos:line="2889" pos:column="68">_mainEditView</name><op:operator pos:line="2889" pos:column="81">:</op:operator><op:operator pos:line="2889" pos:column="82">&amp;</op:operator><name pos:line="2889" pos:column="83">_subEditView</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2891" pos:column="9">//check if buffer exists</comment>
	<decl_stmt><decl><type><name pos:line="2892" pos:column="9">int</name></type> <name pos:line="2892" pos:column="13">index</name> <init pos:line="2892" pos:column="19">= <expr><call><name><name pos:line="2892" pos:column="21">tabToClose</name><op:operator pos:line="2892" pos:column="31">-&gt;</op:operator><name pos:line="2892" pos:column="33">getIndexByBuffer</name></name><argument_list pos:line="2892" pos:column="49">(<argument><expr><name pos:line="2892" pos:column="50">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2893" pos:column="9">if <condition pos:line="2893" pos:column="12">(<expr><name pos:line="2893" pos:column="13">index</name> <op:operator pos:line="2893" pos:column="19">==</op:operator> <op:operator pos:line="2893" pos:column="22">-</op:operator><lit:literal type="number" pos:line="2893" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="2893" pos:column="25">	<comment type="line" pos:line="2893" pos:column="33">//doesn't exist, done</comment>
		<return pos:line="2894" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2894" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="2896" pos:column="9">Buffer</name> <type:modifier pos:line="2896" pos:column="16">*</type:modifier></type> <name pos:line="2896" pos:column="18">buf</name> <init pos:line="2896" pos:column="22">= <expr><call><name><name pos:line="2896" pos:column="24">MainFileManager</name><op:operator pos:line="2896" pos:column="39">-&gt;</op:operator><name pos:line="2896" pos:column="41">getBufferByID</name></name><argument_list pos:line="2896" pos:column="54">(<argument><expr><name pos:line="2896" pos:column="55">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2898" pos:column="9">//Cannot close doc if last and clean</comment>
	<if pos:line="2899" pos:column="9">if <condition pos:line="2899" pos:column="12">(<expr><call><name><name pos:line="2899" pos:column="13">tabToClose</name><op:operator pos:line="2899" pos:column="23">-&gt;</op:operator><name pos:line="2899" pos:column="25">nbItem</name></name><argument_list pos:line="2899" pos:column="31">()</argument_list></call> <op:operator pos:line="2899" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="2899" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="2899" pos:column="39">
	<block pos:line="2900" pos:column="9">{
		<if pos:line="2901" pos:column="17">if <condition pos:line="2901" pos:column="20">(<expr><op:operator pos:line="2901" pos:column="21">!</op:operator><call><name><name pos:line="2901" pos:column="22">buf</name><op:operator pos:line="2901" pos:column="25">-&gt;</op:operator><name pos:line="2901" pos:column="27">isDirty</name></name><argument_list pos:line="2901" pos:column="34">()</argument_list></call> <op:operator pos:line="2901" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="2901" pos:column="40">buf</name><op:operator pos:line="2901" pos:column="43">-&gt;</op:operator><name pos:line="2901" pos:column="45">isUntitled</name></name><argument_list pos:line="2901" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="2901" pos:column="58">
		<block pos:line="2902" pos:column="17">{
			<return pos:line="2903" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2903" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2907" pos:column="9">int</name></type> <name pos:line="2907" pos:column="13">active</name> <init pos:line="2907" pos:column="20">= <expr><call><name><name pos:line="2907" pos:column="22">tabToClose</name><op:operator pos:line="2907" pos:column="32">-&gt;</op:operator><name pos:line="2907" pos:column="34">getCurrentTabIndex</name></name><argument_list pos:line="2907" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2908" pos:column="9">if <condition pos:line="2908" pos:column="12">(<expr><name pos:line="2908" pos:column="13">active</name> <op:operator pos:line="2908" pos:column="20">==</op:operator> <name pos:line="2908" pos:column="23">index</name></expr>)</condition><then pos:line="2908" pos:column="29"> <comment type="line" pos:line="2908" pos:column="30">//need an alternative (close real doc, put empty one back)</comment>
	<block pos:line="2909" pos:column="9">{
		<if pos:line="2910" pos:column="17">if <condition pos:line="2910" pos:column="20">(<expr><call><name><name pos:line="2910" pos:column="21">tabToClose</name><op:operator pos:line="2910" pos:column="31">-&gt;</op:operator><name pos:line="2910" pos:column="33">nbItem</name></name><argument_list pos:line="2910" pos:column="39">()</argument_list></call> <op:operator pos:line="2910" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="2910" pos:column="45">1</lit:literal></expr>)</condition><then pos:line="2910" pos:column="47"> 	<comment type="line" pos:line="2910" pos:column="49">//need alternative doc, add new one. Use special logic to prevent flicker of adding new tab then closing other</comment>
		<block pos:line="2911" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2912" pos:column="25">BufferID</name></type> <name pos:line="2912" pos:column="34">newID</name> <init pos:line="2912" pos:column="40">= <expr><call><name><name pos:line="2912" pos:column="42">MainFileManager</name><op:operator pos:line="2912" pos:column="57">-&gt;</op:operator><name pos:line="2912" pos:column="59">newEmptyDocument</name></name><argument_list pos:line="2912" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2913" pos:column="25">MainFileManager</name><op:operator pos:line="2913" pos:column="40">-&gt;</op:operator><name pos:line="2913" pos:column="42">addBufferReference</name></name><argument_list pos:line="2913" pos:column="60">(<argument><expr><name pos:line="2913" pos:column="61">newID</name></expr></argument>, <argument><expr><name pos:line="2913" pos:column="68">viewToClose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2914" pos:column="25">tabToClose</name><op:operator pos:line="2914" pos:column="35">-&gt;</op:operator><name pos:line="2914" pos:column="37">setBuffer</name></name><argument_list pos:line="2914" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="2914" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2914" pos:column="50">newID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2914" pos:column="65">//can safely use id 0, last (only) tab open</comment>
			<expr_stmt><expr><call><name pos:line="2915" pos:column="25">activateBuffer</name><argument_list pos:line="2915" pos:column="39">(<argument><expr><name pos:line="2915" pos:column="40">newID</name></expr></argument>, <argument><expr><name pos:line="2915" pos:column="47">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2915" pos:column="65">//activate. DocTab already activated but not a problem</comment>
		}</block></then>
		<else pos:line="2917" pos:column="17">else
		<block pos:line="2918" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2919" pos:column="25">int</name></type> <name pos:line="2919" pos:column="29">toActivate</name> <init pos:line="2919" pos:column="40">= <expr><lit:literal type="number" pos:line="2919" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="2920" pos:column="25">//activate next doc, otherwise prev if not possible</comment>
			<if pos:line="2921" pos:column="25">if <condition pos:line="2921" pos:column="28">(<expr><name pos:line="2921" pos:column="29">active</name> <op:operator pos:line="2921" pos:column="36">==</op:operator> <call><name><name pos:line="2921" pos:column="39">tabToClose</name><op:operator pos:line="2921" pos:column="49">-&gt;</op:operator><name pos:line="2921" pos:column="51">nbItem</name></name><argument_list pos:line="2921" pos:column="57">()</argument_list></call> <op:operator pos:line="2921" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="2921" pos:column="62">1</lit:literal></expr>)</condition><then pos:line="2921" pos:column="64"> <comment type="line" pos:line="2921" pos:column="65">//prev</comment>
			<block pos:line="2922" pos:column="25">{
				<expr_stmt><expr><name pos:line="2923" pos:column="33">toActivate</name> <op:operator pos:line="2923" pos:column="44">=</op:operator> <name pos:line="2923" pos:column="46">active</name> <op:operator pos:line="2923" pos:column="53">-</op:operator> <lit:literal type="number" pos:line="2923" pos:column="55">1</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="2925" pos:column="25">else
			<block pos:line="2926" pos:column="25">{
				<expr_stmt><expr><name pos:line="2927" pos:column="33">toActivate</name> <op:operator pos:line="2927" pos:column="44">=</op:operator> <name pos:line="2927" pos:column="46">active</name></expr>;</expr_stmt>	<comment type="line" pos:line="2927" pos:column="57">//activate the 'active' index. Since we remove the tab first, the indices shift (on the right side)</comment>
			}</block></else></if>
			<expr_stmt><expr><call><name><name pos:line="2929" pos:column="25">tabToClose</name><op:operator pos:line="2929" pos:column="35">-&gt;</op:operator><name pos:line="2929" pos:column="37">deletItemAt</name></name><argument_list pos:line="2929" pos:column="48">(<argument><expr><op:operator pos:line="2929" pos:column="49">(</op:operator><name pos:line="2929" pos:column="50">size_t</name><op:operator pos:line="2929" pos:column="56">)</op:operator><name pos:line="2929" pos:column="57">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2929" pos:column="65">//delete first</comment>
			<expr_stmt><expr><call><name pos:line="2930" pos:column="25">activateBuffer</name><argument_list pos:line="2930" pos:column="39">(<argument><expr><call><name><name pos:line="2930" pos:column="40">tabToClose</name><op:operator pos:line="2930" pos:column="50">-&gt;</op:operator><name pos:line="2930" pos:column="52">getBufferByIndex</name></name><argument_list pos:line="2930" pos:column="68">(<argument><expr><name pos:line="2930" pos:column="69">toActivate</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2930" pos:column="82">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2930" pos:column="97">//then activate. The prevent jumpy tab behaviour</comment>
		}</block></else></if>
	}</block></then>
	<else pos:line="2933" pos:column="9">else 
	<block pos:line="2934" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2935" pos:column="17">tabToClose</name><op:operator pos:line="2935" pos:column="27">-&gt;</op:operator><name pos:line="2935" pos:column="29">deletItemAt</name></name><argument_list pos:line="2935" pos:column="40">(<argument><expr><op:operator pos:line="2935" pos:column="41">(</op:operator><name pos:line="2935" pos:column="42">size_t</name><op:operator pos:line="2935" pos:column="48">)</op:operator><name pos:line="2935" pos:column="49">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<expr_stmt><expr><call><name><name pos:line="2938" pos:column="9">MainFileManager</name><op:operator pos:line="2938" pos:column="24">-&gt;</op:operator><name pos:line="2938" pos:column="26">closeBuffer</name></name><argument_list pos:line="2938" pos:column="37">(<argument><expr><name pos:line="2938" pos:column="38">id</name></expr></argument>, <argument><expr><name pos:line="2938" pos:column="42">viewToClose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2939" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2939" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2942" pos:column="1">int</name></type> <name><name pos:line="2942" pos:column="5">Notepad_plus</name><op:operator pos:line="2942" pos:column="17">::</op:operator><name pos:line="2942" pos:column="19">switchEditViewTo</name></name><parameter_list pos:line="2942" pos:column="35">(<param><decl><type><name pos:line="2942" pos:column="36">int</name></type> <name pos:line="2942" pos:column="40">gid</name></decl></param>)</parameter_list>
<block pos:line="2943" pos:column="1">{
	<if pos:line="2944" pos:column="9">if <condition pos:line="2944" pos:column="12">(<expr><call><name pos:line="2944" pos:column="13">currentView</name><argument_list pos:line="2944" pos:column="24">()</argument_list></call> <op:operator pos:line="2944" pos:column="27">==</op:operator> <name pos:line="2944" pos:column="30">gid</name></expr>)</condition><then pos:line="2944" pos:column="34"> <block pos:line="2944" pos:column="35">{	<comment type="line" pos:line="2944" pos:column="41">//make sure focus is ok, then leave</comment>
		<expr_stmt><expr><call><name><name pos:line="2945" pos:column="17">_pEditView</name><op:operator pos:line="2945" pos:column="27">-&gt;</op:operator><name pos:line="2945" pos:column="29">getFocus</name></name><argument_list pos:line="2945" pos:column="37">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2945" pos:column="41">//set the focus</comment>
		<return pos:line="2946" pos:column="17">return <expr><name pos:line="2946" pos:column="24">gid</name></expr>;</return>
	}</block></then></if>
	<if pos:line="2948" pos:column="9">if <condition pos:line="2948" pos:column="12">(<expr><op:operator pos:line="2948" pos:column="13">!</op:operator><call><name pos:line="2948" pos:column="14">viewVisible</name><argument_list pos:line="2948" pos:column="25">(<argument><expr><name pos:line="2948" pos:column="26">gid</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2948" pos:column="31">
		<return pos:line="2949" pos:column="17">return <expr><call><name pos:line="2949" pos:column="24">currentView</name><argument_list pos:line="2949" pos:column="35">()</argument_list></call></expr>;</return></then></if>	<comment type="line" pos:line="2949" pos:column="41">//cannot activate invisible view</comment>

	<decl_stmt><decl><type><name pos:line="2951" pos:column="9">int</name></type> <name pos:line="2951" pos:column="13">oldView</name> <init pos:line="2951" pos:column="21">= <expr><call><name pos:line="2951" pos:column="23">currentView</name><argument_list pos:line="2951" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2952" pos:column="9">int</name></type> <name pos:line="2952" pos:column="13">newView</name> <init pos:line="2952" pos:column="21">= <expr><call><name pos:line="2952" pos:column="23">otherView</name><argument_list pos:line="2952" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="2954" pos:column="9">_activeView</name> <op:operator pos:line="2954" pos:column="21">=</op:operator> <name pos:line="2954" pos:column="23">newView</name></expr>;</expr_stmt>
	<comment type="line" pos:line="2955" pos:column="9">//Good old switcheroo</comment>
	<decl_stmt><decl><type><name pos:line="2956" pos:column="9">DocTabView</name> <type:modifier pos:line="2956" pos:column="20">*</type:modifier></type> <name pos:line="2956" pos:column="22">tempTab</name> <init pos:line="2956" pos:column="30">= <expr><name pos:line="2956" pos:column="32">_pDocTab</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2957" pos:column="9">_pDocTab</name> <op:operator pos:line="2957" pos:column="18">=</op:operator> <name pos:line="2957" pos:column="20">_pNonDocTab</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2958" pos:column="9">_pNonDocTab</name> <op:operator pos:line="2958" pos:column="21">=</op:operator> <name pos:line="2958" pos:column="23">tempTab</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2959" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="2959" pos:column="27">*</type:modifier></type> <name pos:line="2959" pos:column="29">tempView</name> <init pos:line="2959" pos:column="38">= <expr><name pos:line="2959" pos:column="40">_pEditView</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2960" pos:column="9">_pEditView</name> <op:operator pos:line="2960" pos:column="20">=</op:operator> <name pos:line="2960" pos:column="22">_pNonEditView</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2961" pos:column="9">_pNonEditView</name> <op:operator pos:line="2961" pos:column="23">=</op:operator> <name pos:line="2961" pos:column="25">tempView</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2963" pos:column="9">_pEditView</name><op:operator pos:line="2963" pos:column="19">-&gt;</op:operator><name pos:line="2963" pos:column="21">beSwitched</name></name><argument_list pos:line="2963" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="2964" pos:column="5">_pEditView</name><op:operator pos:line="2964" pos:column="15">-&gt;</op:operator><name pos:line="2964" pos:column="17">getFocus</name></name><argument_list pos:line="2964" pos:column="25">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2964" pos:column="33">//set the focus</comment>

	<if pos:line="2966" pos:column="9">if <condition pos:line="2966" pos:column="12">(<expr><name pos:line="2966" pos:column="13">_pDocMap</name></expr>)</condition><then pos:line="2966" pos:column="22">
	<block pos:line="2967" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2968" pos:column="17">_pDocMap</name><op:operator pos:line="2968" pos:column="25">-&gt;</op:operator><name pos:line="2968" pos:column="27">initWrapMap</name></name><argument_list pos:line="2968" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="2971" pos:column="9">notifyBufferActivated</name><argument_list pos:line="2971" pos:column="30">(<argument><expr><call><name><name pos:line="2971" pos:column="31">_pEditView</name><op:operator pos:line="2971" pos:column="41">-&gt;</op:operator><name pos:line="2971" pos:column="43">getCurrentBufferID</name></name><argument_list pos:line="2971" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2971" pos:column="65">currentView</name><argument_list pos:line="2971" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2972" pos:column="9">return <expr><name pos:line="2972" pos:column="16">oldView</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2975" pos:column="1">void</name></type> <name><name pos:line="2975" pos:column="6">Notepad_plus</name><op:operator pos:line="2975" pos:column="18">::</op:operator><name pos:line="2975" pos:column="20">dockUserDlg</name></name><parameter_list pos:line="2975" pos:column="31">()</parameter_list>
<block pos:line="2976" pos:column="1">{
    <if pos:line="2977" pos:column="5">if <condition pos:line="2977" pos:column="8">(<expr><op:operator pos:line="2977" pos:column="9">!</op:operator><name pos:line="2977" pos:column="10">_pMainSplitter</name></expr>)</condition><then pos:line="2977" pos:column="25">
    <block pos:line="2978" pos:column="5">{
        <expr_stmt><expr><name pos:line="2979" pos:column="9">_pMainSplitter</name> <op:operator pos:line="2979" pos:column="24">=</op:operator> <op:operator pos:line="2979" pos:column="26">new</op:operator> <name pos:line="2979" pos:column="30">SplitterContainer</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2980" pos:column="17">_pMainSplitter</name><op:operator pos:line="2980" pos:column="31">-&gt;</op:operator><name pos:line="2980" pos:column="33">init</name></name><argument_list pos:line="2980" pos:column="37">(<argument><expr><call><name><name pos:line="2980" pos:column="38">_pPublicInterface</name><op:operator pos:line="2980" pos:column="55">-&gt;</op:operator><name pos:line="2980" pos:column="57">getHinst</name></name><argument_list pos:line="2980" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2980" pos:column="69">_pPublicInterface</name><op:operator pos:line="2980" pos:column="86">-&gt;</op:operator><name pos:line="2980" pos:column="88">getHSelf</name></name><argument_list pos:line="2980" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="2982" pos:column="9">Window</name> <type:modifier pos:line="2982" pos:column="16">*</type:modifier></type><name pos:line="2982" pos:column="17">pWindow</name></decl>;</decl_stmt>
		<if pos:line="2983" pos:column="17">if <condition pos:line="2983" pos:column="20">(<expr><name pos:line="2983" pos:column="21">_mainWindowStatus</name> <op:operator pos:line="2983" pos:column="39">&amp;</op:operator> <op:operator pos:line="2983" pos:column="41">(</op:operator><name pos:line="2983" pos:column="42">WindowMainActive</name> <op:operator pos:line="2983" pos:column="59">|</op:operator> <name pos:line="2983" pos:column="61">WindowSubActive</name><op:operator pos:line="2983" pos:column="76">)</op:operator></expr>)</condition><then pos:line="2983" pos:column="78">
            <expr_stmt><expr><name pos:line="2984" pos:column="13">pWindow</name> <op:operator pos:line="2984" pos:column="21">=</op:operator> <op:operator pos:line="2984" pos:column="23">&amp;</op:operator><name pos:line="2984" pos:column="24">_subSplitter</name></expr>;</expr_stmt></then>
        <else pos:line="2985" pos:column="9">else
            <expr_stmt><expr><name pos:line="2986" pos:column="13">pWindow</name> <op:operator pos:line="2986" pos:column="21">=</op:operator> <name pos:line="2986" pos:column="23">_pDocTab</name></expr>;</expr_stmt></else></if>

        <expr_stmt><expr><call><name><name pos:line="2988" pos:column="9">_pMainSplitter</name><op:operator pos:line="2988" pos:column="23">-&gt;</op:operator><name pos:line="2988" pos:column="25">create</name></name><argument_list pos:line="2988" pos:column="31">(<argument><expr><name pos:line="2988" pos:column="32">pWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="2988" pos:column="41">ScintillaEditView</name><op:operator pos:line="2988" pos:column="58">::</op:operator><name pos:line="2988" pos:column="60">getUserDefineDlg</name></name><argument_list pos:line="2988" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2988" pos:column="80">8</lit:literal></expr></argument>, <argument><expr><name pos:line="2988" pos:column="83">RIGHT_FIX</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2988" pos:column="94">45</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if pos:line="2991" pos:column="5">if <condition pos:line="2991" pos:column="8">(<expr><call><name pos:line="2991" pos:column="9">bothActive</name><argument_list pos:line="2991" pos:column="19">()</argument_list></call></expr>)</condition><then pos:line="2991" pos:column="22">
        <expr_stmt><expr><call><name><name pos:line="2992" pos:column="9">_pMainSplitter</name><op:operator pos:line="2992" pos:column="23">-&gt;</op:operator><name pos:line="2992" pos:column="25">setWin0</name></name><argument_list pos:line="2992" pos:column="32">(<argument><expr><op:operator pos:line="2992" pos:column="33">&amp;</op:operator><name pos:line="2992" pos:column="34">_subSplitter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
    <else pos:line="2993" pos:column="5">else
        <expr_stmt><expr><call><name><name pos:line="2994" pos:column="9">_pMainSplitter</name><op:operator pos:line="2994" pos:column="23">-&gt;</op:operator><name pos:line="2994" pos:column="25">setWin0</name></name><argument_list pos:line="2994" pos:column="32">(<argument><expr><name pos:line="2994" pos:column="33">_pDocTab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

    <expr_stmt><expr><call><name><name pos:line="2996" pos:column="5">_pMainSplitter</name><op:operator pos:line="2996" pos:column="19">-&gt;</op:operator><name pos:line="2996" pos:column="21">display</name></name><argument_list pos:line="2996" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name pos:line="2998" pos:column="5">_mainWindowStatus</name> <op:operator pos:line="2998" pos:column="23">|=</op:operator> <name pos:line="2998" pos:column="26">WindowUserActive</name></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="2999" pos:column="5">_pMainWindow</name> <op:operator pos:line="2999" pos:column="18">=</op:operator> <name pos:line="2999" pos:column="20">_pMainSplitter</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="3001" pos:column="9">::</op:operator><name pos:line="3001" pos:column="11">SendMessage</name></name><argument_list pos:line="3001" pos:column="22">(<argument><expr><call><name><name pos:line="3001" pos:column="23">_pPublicInterface</name><op:operator pos:line="3001" pos:column="40">-&gt;</op:operator><name pos:line="3001" pos:column="42">getHSelf</name></name><argument_list pos:line="3001" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3001" pos:column="54">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3001" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3001" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3004" pos:column="1">void</name></type> <name><name pos:line="3004" pos:column="6">Notepad_plus</name><op:operator pos:line="3004" pos:column="18">::</op:operator><name pos:line="3004" pos:column="20">undockUserDlg</name></name><parameter_list pos:line="3004" pos:column="33">()</parameter_list>
<block pos:line="3005" pos:column="1">{
    <comment type="line" pos:line="3006" pos:column="5">// a cause de surchargement de "display"</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="3007" pos:column="5">::</op:operator><name pos:line="3007" pos:column="7">ShowWindow</name></name><argument_list pos:line="3007" pos:column="17">(<argument><expr><call><name><name pos:line="3007" pos:column="18">_pMainSplitter</name><op:operator pos:line="3007" pos:column="32">-&gt;</op:operator><name pos:line="3007" pos:column="34">getHSelf</name></name><argument_list pos:line="3007" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3007" pos:column="46">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if pos:line="3009" pos:column="5">if <condition pos:line="3009" pos:column="8">(<expr><call><name pos:line="3009" pos:column="9">bothActive</name><argument_list pos:line="3009" pos:column="19">()</argument_list></call></expr>)</condition><then pos:line="3009" pos:column="22">
        <expr_stmt><expr><name pos:line="3010" pos:column="9">_pMainWindow</name> <op:operator pos:line="3010" pos:column="22">=</op:operator> <op:operator pos:line="3010" pos:column="24">&amp;</op:operator><name pos:line="3010" pos:column="25">_subSplitter</name></expr>;</expr_stmt></then>
    <else pos:line="3011" pos:column="5">else
        <expr_stmt><expr><name pos:line="3012" pos:column="9">_pMainWindow</name> <op:operator pos:line="3012" pos:column="22">=</op:operator> <name pos:line="3012" pos:column="24">_pDocTab</name></expr>;</expr_stmt></else></if>

    <expr_stmt><expr><call><name><op:operator pos:line="3014" pos:column="5">::</op:operator><name pos:line="3014" pos:column="7">SendMessage</name></name><argument_list pos:line="3014" pos:column="18">(<argument><expr><call><name><name pos:line="3014" pos:column="19">_pPublicInterface</name><op:operator pos:line="3014" pos:column="36">-&gt;</op:operator><name pos:line="3014" pos:column="38">getHSelf</name></name><argument_list pos:line="3014" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3014" pos:column="50">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3014" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3014" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name pos:line="3016" pos:column="5">_mainWindowStatus</name> <op:operator pos:line="3016" pos:column="23">&amp;=</op:operator> <op:operator pos:line="3016" pos:column="26">~</op:operator><name pos:line="3016" pos:column="27">WindowUserActive</name></expr>;</expr_stmt>
    <expr_stmt><expr><op:operator pos:line="3017" pos:column="5">(</op:operator><call><name><name pos:line="3017" pos:column="6">ScintillaEditView</name><op:operator pos:line="3017" pos:column="23">::</op:operator><name pos:line="3017" pos:column="25">getUserDefineDlg</name></name><argument_list pos:line="3017" pos:column="41">()</argument_list></call><op:operator pos:line="3017" pos:column="43">)</op:operator><op:operator pos:line="3017" pos:column="44">-&gt;</op:operator><call><name pos:line="3017" pos:column="46">display</name><argument_list pos:line="3017" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3020" pos:column="1">void</name></type> <name><name pos:line="3020" pos:column="6">Notepad_plus</name><op:operator pos:line="3020" pos:column="18">::</op:operator><name pos:line="3020" pos:column="20">docOpenInNewInstance</name></name><parameter_list pos:line="3020" pos:column="40">(<param><decl><type><name pos:line="3020" pos:column="41">FileTransferMode</name></type> <name pos:line="3020" pos:column="58">mode</name></decl></param>, <param><decl><type><name pos:line="3020" pos:column="64">int</name></type> <name pos:line="3020" pos:column="68">x</name></decl></param>, <param><decl><type><name pos:line="3020" pos:column="71">int</name></type> <name pos:line="3020" pos:column="75">y</name></decl></param>)</parameter_list>
<block pos:line="3021" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3022" pos:column="9">BufferID</name></type> <name pos:line="3022" pos:column="18">bufferID</name> <init pos:line="3022" pos:column="27">= <expr><call><name><name pos:line="3022" pos:column="29">_pEditView</name><op:operator pos:line="3022" pos:column="39">-&gt;</op:operator><name pos:line="3022" pos:column="41">getCurrentBufferID</name></name><argument_list pos:line="3022" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3023" pos:column="9">Buffer</name> <type:modifier pos:line="3023" pos:column="16">*</type:modifier></type> <name pos:line="3023" pos:column="18">buf</name> <init pos:line="3023" pos:column="22">= <expr><call><name><name pos:line="3023" pos:column="24">MainFileManager</name><op:operator pos:line="3023" pos:column="39">-&gt;</op:operator><name pos:line="3023" pos:column="41">getBufferByID</name></name><argument_list pos:line="3023" pos:column="54">(<argument><expr><name pos:line="3023" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3024" pos:column="9">if <condition pos:line="3024" pos:column="12">(<expr><call><name><name pos:line="3024" pos:column="13">buf</name><op:operator pos:line="3024" pos:column="16">-&gt;</op:operator><name pos:line="3024" pos:column="18">isUntitled</name></name><argument_list pos:line="3024" pos:column="28">()</argument_list></call> <op:operator pos:line="3024" pos:column="31">||</op:operator> <call><name><name pos:line="3024" pos:column="34">buf</name><op:operator pos:line="3024" pos:column="37">-&gt;</op:operator><name pos:line="3024" pos:column="39">isDirty</name></name><argument_list pos:line="3024" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="3024" pos:column="49">
		<return pos:line="3025" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="3027" pos:column="9">TCHAR</name></type> <name><name pos:line="3027" pos:column="15">nppName</name><index pos:line="3027" pos:column="22">[<expr><name pos:line="3027" pos:column="23">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="3028" pos:column="9">::</op:operator><name pos:line="3028" pos:column="11">GetModuleFileName</name></name><argument_list pos:line="3028" pos:column="28">(<argument><expr><name pos:line="3028" pos:column="29">NULL</name></expr></argument>, <argument><expr><name pos:line="3028" pos:column="35">nppName</name></expr></argument>, <argument><expr><name pos:line="3028" pos:column="44">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="3029" pos:column="9">generic_string</name></type> <name pos:line="3029" pos:column="24">command</name> <init pos:line="3029" pos:column="32">= <expr><call><name pos:line="3029" pos:column="34">TEXT</name><argument_list pos:line="3029" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3029" pos:column="39">"\""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="3030" pos:column="9">command</name> <op:operator pos:line="3030" pos:column="17">+=</op:operator> <name pos:line="3030" pos:column="20">nppName</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3031" pos:column="9">command</name> <op:operator pos:line="3031" pos:column="17">+=</op:operator> <call><name pos:line="3031" pos:column="20">TEXT</name><argument_list pos:line="3031" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="3031" pos:column="25">"\""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="3033" pos:column="9">command</name> <op:operator pos:line="3033" pos:column="17">+=</op:operator> <call><name pos:line="3033" pos:column="20">TEXT</name><argument_list pos:line="3033" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="3033" pos:column="25">" \"$(FULL_CURRENT_PATH)\" -multiInst -nosession -x"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="3034" pos:column="9">TCHAR</name></type> <name><name pos:line="3034" pos:column="15">pX</name><index pos:line="3034" pos:column="17">[<expr><lit:literal type="number" pos:line="3034" pos:column="18">10</lit:literal></expr>]</index></name></decl><op:operator pos:line="3034" pos:column="21">,</op:operator> <decl><type ref="prev"/><name><name pos:line="3034" pos:column="23">pY</name><index pos:line="3034" pos:column="25">[<expr><lit:literal type="number" pos:line="3034" pos:column="26">10</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="3035" pos:column="9">generic_itoa</name><argument_list pos:line="3035" pos:column="21">(<argument><expr><name pos:line="3035" pos:column="22">x</name></expr></argument>, <argument><expr><name pos:line="3035" pos:column="25">pX</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3035" pos:column="29">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3036" pos:column="9">generic_itoa</name><argument_list pos:line="3036" pos:column="21">(<argument><expr><name pos:line="3036" pos:column="22">y</name></expr></argument>, <argument><expr><name pos:line="3036" pos:column="25">pY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3036" pos:column="29">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="3038" pos:column="9">command</name> <op:operator pos:line="3038" pos:column="17">+=</op:operator> <name pos:line="3038" pos:column="20">pX</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3039" pos:column="9">command</name> <op:operator pos:line="3039" pos:column="17">+=</op:operator> <call><name pos:line="3039" pos:column="20">TEXT</name><argument_list pos:line="3039" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="3039" pos:column="25">" -y"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3040" pos:column="9">command</name> <op:operator pos:line="3040" pos:column="17">+=</op:operator> <name pos:line="3040" pos:column="20">pY</name></expr>;</expr_stmt>

	<function_decl><type><name pos:line="3042" pos:column="9">Command</name></type> <name pos:line="3042" pos:column="17">cmd</name><parameter_list pos:line="3042" pos:column="20">(<param><decl><type><name pos:line="3042" pos:column="21">command</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name><name pos:line="3043" pos:column="9">cmd</name><op:operator pos:line="3043" pos:column="12">.</op:operator><name pos:line="3043" pos:column="13">run</name></name><argument_list pos:line="3043" pos:column="16">(<argument><expr><call><name><name pos:line="3043" pos:column="17">_pPublicInterface</name><op:operator pos:line="3043" pos:column="34">-&gt;</op:operator><name pos:line="3043" pos:column="36">getHSelf</name></name><argument_list pos:line="3043" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3044" pos:column="9">if <condition pos:line="3044" pos:column="12">(<expr><name pos:line="3044" pos:column="13">mode</name> <op:operator pos:line="3044" pos:column="18">==</op:operator> <name pos:line="3044" pos:column="21">TransferMove</name></expr>)</condition><then pos:line="3044" pos:column="34">
	<block pos:line="3045" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3046" pos:column="17">doClose</name><argument_list pos:line="3046" pos:column="24">(<argument><expr><name pos:line="3046" pos:column="25">bufferID</name></expr></argument>, <argument><expr><call><name pos:line="3046" pos:column="35">currentView</name><argument_list pos:line="3046" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="3047" pos:column="17">if <condition pos:line="3047" pos:column="20">(<expr><call><name pos:line="3047" pos:column="21">noOpenedDoc</name><argument_list pos:line="3047" pos:column="32">()</argument_list></call></expr>)</condition><then pos:line="3047" pos:column="35">
			<expr_stmt><expr><call><name><op:operator pos:line="3048" pos:column="25">::</op:operator><name pos:line="3048" pos:column="27">SendMessage</name></name><argument_list pos:line="3048" pos:column="38">(<argument><expr><call><name><name pos:line="3048" pos:column="39">_pPublicInterface</name><op:operator pos:line="3048" pos:column="56">-&gt;</op:operator><name pos:line="3048" pos:column="58">getHSelf</name></name><argument_list pos:line="3048" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3048" pos:column="70">WM_CLOSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3048" pos:column="80">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3048" pos:column="83">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="3052" pos:column="1">void</name></type> <name><name pos:line="3052" pos:column="6">Notepad_plus</name><op:operator pos:line="3052" pos:column="18">::</op:operator><name pos:line="3052" pos:column="20">docGotoAnotherEditView</name></name><parameter_list pos:line="3052" pos:column="42">(<param><decl><type><name pos:line="3052" pos:column="43">FileTransferMode</name></type> <name pos:line="3052" pos:column="60">mode</name></decl></param>)</parameter_list>
<block pos:line="3053" pos:column="1">{
	<comment type="line" pos:line="3054" pos:column="9">// Test if it's only doc to transfer on the hidden view</comment>
	<comment type="line" pos:line="3055" pos:column="9">// If so then do nothing</comment>
	<if pos:line="3056" pos:column="9">if <condition pos:line="3056" pos:column="12">(<expr><name pos:line="3056" pos:column="13">mode</name> <op:operator pos:line="3056" pos:column="18">==</op:operator> <name pos:line="3056" pos:column="21">TransferMove</name></expr>)</condition><then pos:line="3056" pos:column="34">
	<block pos:line="3057" pos:column="9">{
		<if pos:line="3058" pos:column="17">if <condition pos:line="3058" pos:column="20">(<expr><call><name><name pos:line="3058" pos:column="21">_pDocTab</name><op:operator pos:line="3058" pos:column="29">-&gt;</op:operator><name pos:line="3058" pos:column="31">nbItem</name></name><argument_list pos:line="3058" pos:column="37">()</argument_list></call> <op:operator pos:line="3058" pos:column="40">==</op:operator> <lit:literal type="number" pos:line="3058" pos:column="43">1</lit:literal></expr>)</condition><then pos:line="3058" pos:column="45">
		<block pos:line="3059" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3060" pos:column="25">ScintillaEditView</name> <type:modifier pos:line="3060" pos:column="43">*</type:modifier></type><name pos:line="3060" pos:column="44">pOtherView</name> <init pos:line="3060" pos:column="55">= <expr><name pos:line="3060" pos:column="57">NULL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="3061" pos:column="25">if <condition pos:line="3061" pos:column="28">(<expr><name pos:line="3061" pos:column="29">_pEditView</name> <op:operator pos:line="3061" pos:column="40">==</op:operator> <op:operator pos:line="3061" pos:column="43">&amp;</op:operator><name pos:line="3061" pos:column="44">_mainEditView</name></expr>)</condition><then pos:line="3061" pos:column="58">
			<block pos:line="3062" pos:column="25">{
				<expr_stmt><expr><name pos:line="3063" pos:column="33">pOtherView</name> <op:operator pos:line="3063" pos:column="44">=</op:operator> <op:operator pos:line="3063" pos:column="46">&amp;</op:operator><name pos:line="3063" pos:column="47">_subEditView</name></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="3065" pos:column="25">else <if pos:line="3065" pos:column="30">if <condition pos:line="3065" pos:column="33">(<expr><name pos:line="3065" pos:column="34">_pEditView</name> <op:operator pos:line="3065" pos:column="45">==</op:operator> <op:operator pos:line="3065" pos:column="48">&amp;</op:operator><name pos:line="3065" pos:column="49">_subEditView</name></expr>)</condition><then pos:line="3065" pos:column="62">
			<block pos:line="3066" pos:column="25">{
				<expr_stmt><expr><name pos:line="3067" pos:column="33">pOtherView</name> <op:operator pos:line="3067" pos:column="44">=</op:operator> <op:operator pos:line="3067" pos:column="46">&amp;</op:operator><name pos:line="3067" pos:column="47">_mainEditView</name></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="3069" pos:column="25">else
				<return pos:line="3070" pos:column="33">return;</return></else></if></else></if>

			<if pos:line="3072" pos:column="25">if <condition pos:line="3072" pos:column="28">(<expr><op:operator pos:line="3072" pos:column="29">!</op:operator><call><name><name pos:line="3072" pos:column="30">pOtherView</name><op:operator pos:line="3072" pos:column="40">-&gt;</op:operator><name pos:line="3072" pos:column="42">isVisible</name></name><argument_list pos:line="3072" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="3072" pos:column="54">
				<return pos:line="3073" pos:column="33">return;</return></then></if>
		}</block></then></if>
	}</block></then></if>

	<comment type="line" pos:line="3077" pos:column="9">//First put the doc in the other view if not present (if it is, activate it).</comment>
	<comment type="line" pos:line="3078" pos:column="9">//Then if needed close in the original tab</comment>
	<decl_stmt><decl><type><name pos:line="3079" pos:column="9">BufferID</name></type> <name pos:line="3079" pos:column="18">current</name> <init pos:line="3079" pos:column="26">= <expr><call><name><name pos:line="3079" pos:column="28">_pEditView</name><op:operator pos:line="3079" pos:column="38">-&gt;</op:operator><name pos:line="3079" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="3079" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3080" pos:column="9">int</name></type> <name pos:line="3080" pos:column="13">viewToGo</name> <init pos:line="3080" pos:column="22">= <expr><call><name pos:line="3080" pos:column="24">otherView</name><argument_list pos:line="3080" pos:column="33">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3081" pos:column="9">int</name></type> <name pos:line="3081" pos:column="13">indexFound</name> <init pos:line="3081" pos:column="24">= <expr><call><name><name pos:line="3081" pos:column="26">_pNonDocTab</name><op:operator pos:line="3081" pos:column="37">-&gt;</op:operator><name pos:line="3081" pos:column="39">getIndexByBuffer</name></name><argument_list pos:line="3081" pos:column="55">(<argument><expr><name pos:line="3081" pos:column="56">current</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3082" pos:column="9">if <condition pos:line="3082" pos:column="12">(<expr><name pos:line="3082" pos:column="13">indexFound</name> <op:operator pos:line="3082" pos:column="24">!=</op:operator> <op:operator pos:line="3082" pos:column="27">-</op:operator><lit:literal type="number" pos:line="3082" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="3082" pos:column="30">	<comment type="line" pos:line="3082" pos:column="33">//activate it</comment>
	<block pos:line="3083" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3084" pos:column="17">activateBuffer</name><argument_list pos:line="3084" pos:column="31">(<argument><expr><name pos:line="3084" pos:column="32">current</name></expr></argument>, <argument><expr><call><name pos:line="3084" pos:column="41">otherView</name><argument_list pos:line="3084" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3086" pos:column="9">else	<comment type="line" pos:line="3086" pos:column="17">//open the document, also copying the position</comment>
	<block pos:line="3087" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3088" pos:column="17">loadBufferIntoView</name><argument_list pos:line="3088" pos:column="35">(<argument><expr><name pos:line="3088" pos:column="36">current</name></expr></argument>, <argument><expr><name pos:line="3088" pos:column="45">viewToGo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="3089" pos:column="17">Buffer</name> <type:modifier pos:line="3089" pos:column="24">*</type:modifier></type> <name pos:line="3089" pos:column="26">buf</name> <init pos:line="3089" pos:column="30">= <expr><call><name><name pos:line="3089" pos:column="32">MainFileManager</name><op:operator pos:line="3089" pos:column="47">-&gt;</op:operator><name pos:line="3089" pos:column="49">getBufferByID</name></name><argument_list pos:line="3089" pos:column="62">(<argument><expr><name pos:line="3089" pos:column="63">current</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3090" pos:column="17">_pEditView</name><op:operator pos:line="3090" pos:column="27">-&gt;</op:operator><name pos:line="3090" pos:column="29">saveCurrentPos</name></name><argument_list pos:line="3090" pos:column="43">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3090" pos:column="49">//allow copying of position</comment>
		<expr_stmt><expr><call><name><name pos:line="3091" pos:column="17">buf</name><op:operator pos:line="3091" pos:column="20">-&gt;</op:operator><name pos:line="3091" pos:column="22">setPosition</name></name><argument_list pos:line="3091" pos:column="33">(<argument><expr><call><name><name pos:line="3091" pos:column="34">buf</name><op:operator pos:line="3091" pos:column="37">-&gt;</op:operator><name pos:line="3091" pos:column="39">getPosition</name></name><argument_list pos:line="3091" pos:column="50">(<argument><expr><name pos:line="3091" pos:column="51">_pEditView</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="3091" pos:column="64">_pNonEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3092" pos:column="17">_pNonEditView</name><op:operator pos:line="3092" pos:column="30">-&gt;</op:operator><name pos:line="3092" pos:column="32">restoreCurrentPos</name></name><argument_list pos:line="3092" pos:column="49">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3092" pos:column="57">//set position</comment>
		<expr_stmt><expr><call><name pos:line="3093" pos:column="17">activateBuffer</name><argument_list pos:line="3093" pos:column="31">(<argument><expr><name pos:line="3093" pos:column="32">current</name></expr></argument>, <argument><expr><name pos:line="3093" pos:column="41">viewToGo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<comment type="line" pos:line="3096" pos:column="9">//Open the view if it was hidden</comment>
	<decl_stmt><decl><type><name pos:line="3097" pos:column="9">int</name></type> <name pos:line="3097" pos:column="13">viewToOpen</name> <init pos:line="3097" pos:column="24">= <expr><op:operator pos:line="3097" pos:column="26">(</op:operator><name pos:line="3097" pos:column="27">viewToGo</name> <op:operator pos:line="3097" pos:column="36">==</op:operator> <name pos:line="3097" pos:column="39">SUB_VIEW</name><op:operator pos:line="3097" pos:column="47">?</op:operator><name pos:line="3097" pos:column="48">WindowSubActive</name><op:operator pos:line="3097" pos:column="63">:</op:operator><name pos:line="3097" pos:column="64">WindowMainActive</name><op:operator pos:line="3097" pos:column="80">)</op:operator></expr></init></decl>;</decl_stmt>
	<if pos:line="3098" pos:column="9">if <condition pos:line="3098" pos:column="12">(<expr><op:operator pos:line="3098" pos:column="13">!</op:operator><op:operator pos:line="3098" pos:column="14">(</op:operator><name pos:line="3098" pos:column="15">_mainWindowStatus</name> <op:operator pos:line="3098" pos:column="33">&amp;</op:operator> <name pos:line="3098" pos:column="35">viewToOpen</name><op:operator pos:line="3098" pos:column="45">)</op:operator></expr>)</condition><then pos:line="3098" pos:column="47">
	<block pos:line="3099" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3100" pos:column="17">showView</name><argument_list pos:line="3100" pos:column="25">(<argument><expr><name pos:line="3100" pos:column="26">viewToGo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="3103" pos:column="9">//Close the document if we transfered the document instead of cloning it</comment>
	<if pos:line="3104" pos:column="9">if <condition pos:line="3104" pos:column="12">(<expr><name pos:line="3104" pos:column="13">mode</name> <op:operator pos:line="3104" pos:column="18">==</op:operator> <name pos:line="3104" pos:column="21">TransferMove</name></expr>)</condition><then pos:line="3104" pos:column="34">
	<block pos:line="3105" pos:column="9">{
		<comment type="line" pos:line="3106" pos:column="17">//just close the activate document, since thats the one we moved (no search)</comment>
		<expr_stmt><expr><call><name pos:line="3107" pos:column="17">doClose</name><argument_list pos:line="3107" pos:column="24">(<argument><expr><call><name><name pos:line="3107" pos:column="25">_pEditView</name><op:operator pos:line="3107" pos:column="35">-&gt;</op:operator><name pos:line="3107" pos:column="37">getCurrentBufferID</name></name><argument_list pos:line="3107" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="3107" pos:column="59">currentView</name><argument_list pos:line="3107" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="block" pos:line="3108" pos:column="17">/*
		if (noOpenedDoc())
			::SendMessage(_pPublicInterface-&gt;getHSelf(), WM_CLOSE, 0, 0);
		*/</comment>
	}</block></then></if> <comment type="line" pos:line="3112" pos:column="11">// else it was cone, so leave it</comment>

	<comment type="line" pos:line="3114" pos:column="9">//Activate the other view since thats where the document went</comment>
	<expr_stmt><expr><call><name pos:line="3115" pos:column="9">switchEditViewTo</name><argument_list pos:line="3115" pos:column="25">(<argument><expr><name pos:line="3115" pos:column="26">viewToGo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3118" pos:column="1">bool</name></type> <name><name pos:line="3118" pos:column="6">Notepad_plus</name><op:operator pos:line="3118" pos:column="18">::</op:operator><name pos:line="3118" pos:column="20">activateBuffer</name></name><parameter_list pos:line="3118" pos:column="34">(<param><decl><type><name pos:line="3118" pos:column="35">BufferID</name></type> <name pos:line="3118" pos:column="44">id</name></decl></param>, <param><decl><type><name pos:line="3118" pos:column="48">int</name></type> <name pos:line="3118" pos:column="52">whichOne</name></decl></param>)</parameter_list>
<block pos:line="3119" pos:column="1">{
	<comment type="line" pos:line="3120" pos:column="9">//scnN.nmhdr.code = NPPN_DOCSWITCHINGOFF;		//superseeded by NPPN_BUFFERACTIVATED</comment>
	<decl_stmt><decl><type><name pos:line="3121" pos:column="9">Buffer</name> <type:modifier pos:line="3121" pos:column="16">*</type:modifier></type> <name pos:line="3121" pos:column="18">pBuf</name> <init pos:line="3121" pos:column="23">= <expr><call><name><name pos:line="3121" pos:column="25">MainFileManager</name><op:operator pos:line="3121" pos:column="40">-&gt;</op:operator><name pos:line="3121" pos:column="42">getBufferByID</name></name><argument_list pos:line="3121" pos:column="55">(<argument><expr><name pos:line="3121" pos:column="56">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3122" pos:column="9">bool</name></type> <name pos:line="3122" pos:column="14">reload</name> <init pos:line="3122" pos:column="21">= <expr><call><name><name pos:line="3122" pos:column="23">pBuf</name><op:operator pos:line="3122" pos:column="27">-&gt;</op:operator><name pos:line="3122" pos:column="29">getNeedReload</name></name><argument_list pos:line="3122" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3123" pos:column="9">if <condition pos:line="3123" pos:column="12">(<expr><name pos:line="3123" pos:column="13">reload</name></expr>)</condition><then pos:line="3123" pos:column="20">
	<block pos:line="3124" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="3125" pos:column="17">MainFileManager</name><op:operator pos:line="3125" pos:column="32">-&gt;</op:operator><name pos:line="3125" pos:column="34">reloadBuffer</name></name><argument_list pos:line="3125" pos:column="46">(<argument><expr><name pos:line="3125" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3126" pos:column="17">pBuf</name><op:operator pos:line="3126" pos:column="21">-&gt;</op:operator><name pos:line="3126" pos:column="23">setNeedReload</name></name><argument_list pos:line="3126" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="3126" pos:column="37">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="3128" pos:column="9">if <condition pos:line="3128" pos:column="12">(<expr><name pos:line="3128" pos:column="13">whichOne</name> <op:operator pos:line="3128" pos:column="22">==</op:operator> <name pos:line="3128" pos:column="25">MAIN_VIEW</name></expr>)</condition><then pos:line="3128" pos:column="35">
	<block pos:line="3129" pos:column="9">{
		<if pos:line="3130" pos:column="17">if <condition pos:line="3130" pos:column="20">(<expr><call><name><name pos:line="3130" pos:column="21">_mainDocTab</name><op:operator pos:line="3130" pos:column="32">.</op:operator><name pos:line="3130" pos:column="33">activateBuffer</name></name><argument_list pos:line="3130" pos:column="47">(<argument><expr><name pos:line="3130" pos:column="48">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3130" pos:column="52">	<comment type="line" pos:line="3130" pos:column="57">//only activate if possible</comment>
			<expr_stmt><expr><call><name><name pos:line="3131" pos:column="25">_mainEditView</name><op:operator pos:line="3131" pos:column="38">.</op:operator><name pos:line="3131" pos:column="39">activateBuffer</name></name><argument_list pos:line="3131" pos:column="53">(<argument><expr><name pos:line="3131" pos:column="54">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="3132" pos:column="17">else
			<return pos:line="3133" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3133" pos:column="32">false</lit:literal></expr>;</return></else></if>
	}</block></then>
	<else pos:line="3135" pos:column="9">else
	<block pos:line="3136" pos:column="9">{
		<if pos:line="3137" pos:column="17">if <condition pos:line="3137" pos:column="20">(<expr><call><name><name pos:line="3137" pos:column="21">_subDocTab</name><op:operator pos:line="3137" pos:column="31">.</op:operator><name pos:line="3137" pos:column="32">activateBuffer</name></name><argument_list pos:line="3137" pos:column="46">(<argument><expr><name pos:line="3137" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3137" pos:column="51">
			<expr_stmt><expr><call><name><name pos:line="3138" pos:column="25">_subEditView</name><op:operator pos:line="3138" pos:column="37">.</op:operator><name pos:line="3138" pos:column="38">activateBuffer</name></name><argument_list pos:line="3138" pos:column="52">(<argument><expr><name pos:line="3138" pos:column="53">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="3139" pos:column="17">else
			<return pos:line="3140" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3140" pos:column="32">false</lit:literal></expr>;</return></else></if>
	}</block></else></if>

	<if pos:line="3143" pos:column="9">if <condition pos:line="3143" pos:column="12">(<expr><name pos:line="3143" pos:column="13">reload</name></expr>)</condition><then pos:line="3143" pos:column="20">
	<block pos:line="3144" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3145" pos:column="17">performPostReload</name><argument_list pos:line="3145" pos:column="34">(<argument><expr><name pos:line="3145" pos:column="35">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="3148" pos:column="9">notifyBufferActivated</name><argument_list pos:line="3148" pos:column="30">(<argument><expr><name pos:line="3148" pos:column="31">id</name></expr></argument>, <argument><expr><name pos:line="3148" pos:column="35">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="3150" pos:column="9">//scnN.nmhdr.code = NPPN_DOCSWITCHINGIN;		//superseeded by NPPN_BUFFERACTIVATED</comment>
	<return pos:line="3151" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3151" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3154" pos:column="1">void</name></type> <name><name pos:line="3154" pos:column="6">Notepad_plus</name><op:operator pos:line="3154" pos:column="18">::</op:operator><name pos:line="3154" pos:column="20">performPostReload</name></name><parameter_list pos:line="3154" pos:column="37">(<param><decl><type><name pos:line="3154" pos:column="38">int</name></type> <name pos:line="3154" pos:column="42">whichOne</name></decl></param>)</parameter_list> <block pos:line="3154" pos:column="52">{
	<decl_stmt><decl><type><name pos:line="3155" pos:column="9">NppParameters</name> <type:modifier pos:line="3155" pos:column="23">*</type:modifier></type><name pos:line="3155" pos:column="24">pNppParam</name> <init pos:line="3155" pos:column="34">= <expr><call><name><name pos:line="3155" pos:column="36">NppParameters</name><op:operator pos:line="3155" pos:column="49">::</op:operator><name pos:line="3155" pos:column="51">getInstance</name></name><argument_list pos:line="3155" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="3156" pos:column="9">const</specifier> <name pos:line="3156" pos:column="15">NppGUI</name> <type:modifier pos:line="3156" pos:column="22">&amp;</type:modifier></type> <name pos:line="3156" pos:column="24">nppGUI</name> <init pos:line="3156" pos:column="31">= <expr><call><name><name pos:line="3156" pos:column="33">pNppParam</name><op:operator pos:line="3156" pos:column="42">-&gt;</op:operator><name pos:line="3156" pos:column="44">getNppGUI</name></name><argument_list pos:line="3156" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3157" pos:column="9">bool</name></type> <name pos:line="3157" pos:column="14">toEnd</name> <init pos:line="3157" pos:column="20">= <expr><op:operator pos:line="3157" pos:column="22">(</op:operator><name><name pos:line="3157" pos:column="23">nppGUI</name><op:operator pos:line="3157" pos:column="29">.</op:operator><name pos:line="3157" pos:column="30">_fileAutoDetection</name></name> <op:operator pos:line="3157" pos:column="49">==</op:operator> <name pos:line="3157" pos:column="52">cdAutoUpdateGo2end</name><op:operator pos:line="3157" pos:column="70">)</op:operator> <op:operator pos:line="3157" pos:column="72">||</op:operator> <op:operator pos:line="3157" pos:column="75">(</op:operator><name><name pos:line="3157" pos:column="76">nppGUI</name><op:operator pos:line="3157" pos:column="82">.</op:operator><name pos:line="3157" pos:column="83">_fileAutoDetection</name></name> <op:operator pos:line="3157" pos:column="102">==</op:operator> <name pos:line="3157" pos:column="105">cdGo2end</name><op:operator pos:line="3157" pos:column="113">)</op:operator></expr></init></decl>;</decl_stmt>
	<if pos:line="3158" pos:column="9">if <condition pos:line="3158" pos:column="12">(<expr><op:operator pos:line="3158" pos:column="13">!</op:operator><name pos:line="3158" pos:column="14">toEnd</name></expr>)</condition><then pos:line="3158" pos:column="20">
		<return pos:line="3159" pos:column="17">return;</return></then></if>
	<if pos:line="3160" pos:column="9">if <condition pos:line="3160" pos:column="12">(<expr><name pos:line="3160" pos:column="13">whichOne</name> <op:operator pos:line="3160" pos:column="22">==</op:operator> <name pos:line="3160" pos:column="25">MAIN_VIEW</name></expr>)</condition><then pos:line="3160" pos:column="35"> <block pos:line="3160" pos:column="36">{
		<expr_stmt><expr><call><name><name pos:line="3161" pos:column="17">_mainEditView</name><op:operator pos:line="3161" pos:column="30">.</op:operator><name pos:line="3161" pos:column="31">execute</name></name><argument_list pos:line="3161" pos:column="38">(<argument><expr><name pos:line="3161" pos:column="39">SCI_GOTOLINE</name></expr></argument>, <argument><expr><call><name><name pos:line="3161" pos:column="53">_mainEditView</name><op:operator pos:line="3161" pos:column="66">.</op:operator><name pos:line="3161" pos:column="67">execute</name></name><argument_list pos:line="3161" pos:column="74">(<argument><expr><name pos:line="3161" pos:column="75">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call> <op:operator pos:line="3161" pos:column="93">-</op:operator><lit:literal type="number" pos:line="3161" pos:column="94">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="3162" pos:column="11">else <block pos:line="3162" pos:column="16">{
		<expr_stmt><expr><call><name><name pos:line="3163" pos:column="17">_subEditView</name><op:operator pos:line="3163" pos:column="29">.</op:operator><name pos:line="3163" pos:column="30">execute</name></name><argument_list pos:line="3163" pos:column="37">(<argument><expr><name pos:line="3163" pos:column="38">SCI_GOTOLINE</name></expr></argument>, <argument><expr><call><name><name pos:line="3163" pos:column="52">_subEditView</name><op:operator pos:line="3163" pos:column="64">.</op:operator><name pos:line="3163" pos:column="65">execute</name></name><argument_list pos:line="3163" pos:column="72">(<argument><expr><name pos:line="3163" pos:column="73">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call> <op:operator pos:line="3163" pos:column="91">-</op:operator><lit:literal type="number" pos:line="3163" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="3167" pos:column="1">void</name></type> <name><name pos:line="3167" pos:column="6">Notepad_plus</name><op:operator pos:line="3167" pos:column="18">::</op:operator><name pos:line="3167" pos:column="20">bookmarkNext</name></name><parameter_list pos:line="3167" pos:column="32">(<param><decl><type><name pos:line="3167" pos:column="33">bool</name></type> <name pos:line="3167" pos:column="38">forwardScan</name></decl></param>)</parameter_list>
<block pos:line="3168" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3169" pos:column="9">int</name></type> <name pos:line="3169" pos:column="13">lineno</name> <init pos:line="3169" pos:column="20">= <expr><call><name><name pos:line="3169" pos:column="22">_pEditView</name><op:operator pos:line="3169" pos:column="32">-&gt;</op:operator><name pos:line="3169" pos:column="34">getCurrentLineNumber</name></name><argument_list pos:line="3169" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3170" pos:column="9">int</name></type> <name pos:line="3170" pos:column="13">sci_marker</name> <init pos:line="3170" pos:column="24">= <expr><name pos:line="3170" pos:column="26">SCI_MARKERNEXT</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3171" pos:column="9">int</name></type> <name pos:line="3171" pos:column="13">lineStart</name> <init pos:line="3171" pos:column="23">= <expr><name pos:line="3171" pos:column="25">lineno</name> <op:operator pos:line="3171" pos:column="32">+</op:operator> <lit:literal type="number" pos:line="3171" pos:column="34">1</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="3171" pos:column="41">//Scan starting from next line</comment>
	<decl_stmt><decl><type><name pos:line="3172" pos:column="9">int</name></type> <name pos:line="3172" pos:column="13">lineRetry</name> <init pos:line="3172" pos:column="23">= <expr><lit:literal type="number" pos:line="3172" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>				<comment type="line" pos:line="3172" pos:column="57">//If not found, try from the beginning</comment>
	<if pos:line="3173" pos:column="9">if <condition pos:line="3173" pos:column="12">(<expr><op:operator pos:line="3173" pos:column="13">!</op:operator><name pos:line="3173" pos:column="14">forwardScan</name></expr>)</condition><then pos:line="3173" pos:column="26">
    <block pos:line="3174" pos:column="5">{
		<expr_stmt><expr><name pos:line="3175" pos:column="17">lineStart</name> <op:operator pos:line="3175" pos:column="27">=</op:operator> <name pos:line="3175" pos:column="29">lineno</name> <op:operator pos:line="3175" pos:column="36">-</op:operator> <lit:literal type="number" pos:line="3175" pos:column="38">1</lit:literal></expr>;</expr_stmt>		<comment type="line" pos:line="3175" pos:column="49">//Scan starting from previous line</comment>
		<expr_stmt><expr><name pos:line="3176" pos:column="17">lineRetry</name> <op:operator pos:line="3176" pos:column="27">=</op:operator> <call><name pos:line="3176" pos:column="29">int</name><argument_list pos:line="3176" pos:column="32">(<argument><expr><call><name><name pos:line="3176" pos:column="33">_pEditView</name><op:operator pos:line="3176" pos:column="43">-&gt;</op:operator><name pos:line="3176" pos:column="45">execute</name></name><argument_list pos:line="3176" pos:column="52">(<argument><expr><name pos:line="3176" pos:column="53">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3176" pos:column="73">//If not found, try from the end</comment>
		<expr_stmt><expr><name pos:line="3177" pos:column="17">sci_marker</name> <op:operator pos:line="3177" pos:column="28">=</op:operator> <name pos:line="3177" pos:column="30">SCI_MARKERPREVIOUS</name></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="3179" pos:column="9">int</name></type> <name pos:line="3179" pos:column="13">nextLine</name> <init pos:line="3179" pos:column="22">= <expr><call><name pos:line="3179" pos:column="24">int</name><argument_list pos:line="3179" pos:column="27">(<argument><expr><call><name><name pos:line="3179" pos:column="28">_pEditView</name><op:operator pos:line="3179" pos:column="38">-&gt;</op:operator><name pos:line="3179" pos:column="40">execute</name></name><argument_list pos:line="3179" pos:column="47">(<argument><expr><name pos:line="3179" pos:column="48">sci_marker</name></expr></argument>, <argument><expr><name pos:line="3179" pos:column="60">lineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3179" pos:column="71">1</lit:literal> <op:operator pos:line="3179" pos:column="73">&lt;&lt;</op:operator> <name pos:line="3179" pos:column="76">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3180" pos:column="9">if <condition pos:line="3180" pos:column="12">(<expr><name pos:line="3180" pos:column="13">nextLine</name> <op:operator pos:line="3180" pos:column="22">&lt;</op:operator> <lit:literal type="number" pos:line="3180" pos:column="24">0</lit:literal></expr>)</condition><then pos:line="3180" pos:column="26">
		<expr_stmt><expr><name pos:line="3181" pos:column="17">nextLine</name> <op:operator pos:line="3181" pos:column="26">=</op:operator> <call><name pos:line="3181" pos:column="28">int</name><argument_list pos:line="3181" pos:column="31">(<argument><expr><call><name><name pos:line="3181" pos:column="32">_pEditView</name><op:operator pos:line="3181" pos:column="42">-&gt;</op:operator><name pos:line="3181" pos:column="44">execute</name></name><argument_list pos:line="3181" pos:column="51">(<argument><expr><name pos:line="3181" pos:column="52">sci_marker</name></expr></argument>, <argument><expr><name pos:line="3181" pos:column="64">lineRetry</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3181" pos:column="75">1</lit:literal> <op:operator pos:line="3181" pos:column="77">&lt;&lt;</op:operator> <name pos:line="3181" pos:column="80">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="3183" pos:column="9">if <condition pos:line="3183" pos:column="12">(<expr><name pos:line="3183" pos:column="13">nextLine</name> <op:operator pos:line="3183" pos:column="22">&lt;</op:operator> <lit:literal type="number" pos:line="3183" pos:column="24">0</lit:literal></expr>)</condition><then pos:line="3183" pos:column="26">
		<return pos:line="3184" pos:column="17">return;</return></then></if>

    <expr_stmt><expr><call><name><name pos:line="3186" pos:column="5">_pEditView</name><op:operator pos:line="3186" pos:column="15">-&gt;</op:operator><name pos:line="3186" pos:column="17">execute</name></name><argument_list pos:line="3186" pos:column="24">(<argument><expr><name pos:line="3186" pos:column="25">SCI_ENSUREVISIBLEENFORCEPOLICY</name></expr></argument>, <argument><expr><name pos:line="3186" pos:column="57">nextLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3187" pos:column="9">_pEditView</name><op:operator pos:line="3187" pos:column="19">-&gt;</op:operator><name pos:line="3187" pos:column="21">execute</name></name><argument_list pos:line="3187" pos:column="28">(<argument><expr><name pos:line="3187" pos:column="29">SCI_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="3187" pos:column="43">nextLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3190" pos:column="1">void</name></type> <name><name pos:line="3190" pos:column="6">Notepad_plus</name><op:operator pos:line="3190" pos:column="18">::</op:operator><name pos:line="3190" pos:column="20">staticCheckMenuAndTB</name></name><parameter_list pos:line="3190" pos:column="40">()</parameter_list> <specifier pos:line="3190" pos:column="43">const</specifier>
<block pos:line="3191" pos:column="1">{
	<comment type="line" pos:line="3192" pos:column="9">// Visibility of invisible characters</comment>
	<decl_stmt><decl><type><name pos:line="3193" pos:column="9">bool</name></type> <name pos:line="3193" pos:column="14">wsTabShow</name> <init pos:line="3193" pos:column="24">= <expr><call><name><name pos:line="3193" pos:column="26">_pEditView</name><op:operator pos:line="3193" pos:column="36">-&gt;</op:operator><name pos:line="3193" pos:column="38">isInvisibleCharsShown</name></name><argument_list pos:line="3193" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3194" pos:column="9">bool</name></type> <name pos:line="3194" pos:column="14">eolShow</name> <init pos:line="3194" pos:column="22">= <expr><call><name><name pos:line="3194" pos:column="24">_pEditView</name><op:operator pos:line="3194" pos:column="34">-&gt;</op:operator><name pos:line="3194" pos:column="36">isEolVisible</name></name><argument_list pos:line="3194" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3196" pos:column="9">bool</name></type> <name pos:line="3196" pos:column="14">onlyWS</name> <init pos:line="3196" pos:column="21">= <expr><lit:literal type="boolean" pos:line="3196" pos:column="23">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3197" pos:column="9">bool</name></type> <name pos:line="3197" pos:column="14">onlyEOL</name> <init pos:line="3197" pos:column="22">= <expr><lit:literal type="boolean" pos:line="3197" pos:column="24">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3198" pos:column="9">bool</name></type> <name pos:line="3198" pos:column="14">bothWSEOL</name> <init pos:line="3198" pos:column="24">= <expr><lit:literal type="boolean" pos:line="3198" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="3199" pos:column="9">if <condition pos:line="3199" pos:column="12">(<expr><name pos:line="3199" pos:column="13">wsTabShow</name></expr>)</condition><then pos:line="3199" pos:column="23">
	<block pos:line="3200" pos:column="9">{
		<if pos:line="3201" pos:column="17">if <condition pos:line="3201" pos:column="20">(<expr><name pos:line="3201" pos:column="21">eolShow</name></expr>)</condition><then pos:line="3201" pos:column="29">
		<block pos:line="3202" pos:column="17">{
			<expr_stmt><expr><name pos:line="3203" pos:column="25">bothWSEOL</name> <op:operator pos:line="3203" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="3203" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="3205" pos:column="17">else
		<block pos:line="3206" pos:column="17">{
			<expr_stmt><expr><name pos:line="3207" pos:column="25">onlyWS</name> <op:operator pos:line="3207" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="3207" pos:column="34">true</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then>
	<else pos:line="3210" pos:column="9">else <if pos:line="3210" pos:column="14">if <condition pos:line="3210" pos:column="17">(<expr><name pos:line="3210" pos:column="18">eolShow</name></expr>)</condition><then pos:line="3210" pos:column="26">
	<block pos:line="3211" pos:column="9">{
		<expr_stmt><expr><name pos:line="3212" pos:column="17">onlyEOL</name> <op:operator pos:line="3212" pos:column="25">=</op:operator> <lit:literal type="boolean" pos:line="3212" pos:column="27">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if></else></if>

	<expr_stmt><expr><call><name pos:line="3215" pos:column="9">checkMenuItem</name><argument_list pos:line="3215" pos:column="22">(<argument><expr><name pos:line="3215" pos:column="23">IDM_VIEW_TAB_SPACE</name></expr></argument>, <argument><expr><name pos:line="3215" pos:column="43">onlyWS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3216" pos:column="9">checkMenuItem</name><argument_list pos:line="3216" pos:column="22">(<argument><expr><name pos:line="3216" pos:column="23">IDM_VIEW_EOL</name></expr></argument>, <argument><expr><name pos:line="3216" pos:column="37">onlyEOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3217" pos:column="9">checkMenuItem</name><argument_list pos:line="3217" pos:column="22">(<argument><expr><name pos:line="3217" pos:column="23">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="3217" pos:column="48">bothWSEOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3218" pos:column="9">_toolBar</name><op:operator pos:line="3218" pos:column="17">.</op:operator><name pos:line="3218" pos:column="18">setCheck</name></name><argument_list pos:line="3218" pos:column="26">(<argument><expr><name pos:line="3218" pos:column="27">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="3218" pos:column="52">bothWSEOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="3220" pos:column="9">// Visibility of the indentation guide line</comment>
	<decl_stmt><decl><type><name pos:line="3221" pos:column="9">bool</name></type> <name pos:line="3221" pos:column="14">b</name> <init pos:line="3221" pos:column="16">= <expr><call><name><name pos:line="3221" pos:column="18">_pEditView</name><op:operator pos:line="3221" pos:column="28">-&gt;</op:operator><name pos:line="3221" pos:column="30">isShownIndentGuide</name></name><argument_list pos:line="3221" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="3222" pos:column="9">checkMenuItem</name><argument_list pos:line="3222" pos:column="22">(<argument><expr><name pos:line="3222" pos:column="23">IDM_VIEW_INDENT_GUIDE</name></expr></argument>, <argument><expr><name pos:line="3222" pos:column="46">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3223" pos:column="9">_toolBar</name><op:operator pos:line="3223" pos:column="17">.</op:operator><name pos:line="3223" pos:column="18">setCheck</name></name><argument_list pos:line="3223" pos:column="26">(<argument><expr><name pos:line="3223" pos:column="27">IDM_VIEW_INDENT_GUIDE</name></expr></argument>, <argument><expr><name pos:line="3223" pos:column="50">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<comment type="line" pos:line="3226" pos:column="9">// Wrap</comment>
	<expr_stmt><expr><name pos:line="3227" pos:column="9">b</name> <op:operator pos:line="3227" pos:column="11">=</op:operator> <call><name><name pos:line="3227" pos:column="13">_pEditView</name><op:operator pos:line="3227" pos:column="23">-&gt;</op:operator><name pos:line="3227" pos:column="25">isWrap</name></name><argument_list pos:line="3227" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3228" pos:column="9">checkMenuItem</name><argument_list pos:line="3228" pos:column="22">(<argument><expr><name pos:line="3228" pos:column="23">IDM_VIEW_WRAP</name></expr></argument>, <argument><expr><name pos:line="3228" pos:column="38">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3229" pos:column="9">_toolBar</name><op:operator pos:line="3229" pos:column="17">.</op:operator><name pos:line="3229" pos:column="18">setCheck</name></name><argument_list pos:line="3229" pos:column="26">(<argument><expr><name pos:line="3229" pos:column="27">IDM_VIEW_WRAP</name></expr></argument>, <argument><expr><name pos:line="3229" pos:column="42">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3230" pos:column="9">checkMenuItem</name><argument_list pos:line="3230" pos:column="22">(<argument><expr><name pos:line="3230" pos:column="23">IDM_VIEW_WRAP_SYMBOL</name></expr></argument>, <argument><expr><call><name><name pos:line="3230" pos:column="45">_pEditView</name><op:operator pos:line="3230" pos:column="55">-&gt;</op:operator><name pos:line="3230" pos:column="57">isWrapSymbolVisible</name></name><argument_list pos:line="3230" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3233" pos:column="1">void</name></type> <name><name pos:line="3233" pos:column="6">Notepad_plus</name><op:operator pos:line="3233" pos:column="18">::</op:operator><name pos:line="3233" pos:column="20">dynamicCheckMenuAndTB</name></name><parameter_list pos:line="3233" pos:column="41">()</parameter_list> <specifier pos:line="3233" pos:column="44">const</specifier>
<block pos:line="3234" pos:column="1">{
	<comment type="line" pos:line="3235" pos:column="9">//Format conversion</comment>
	<expr_stmt><expr><call><name pos:line="3236" pos:column="9">enableConvertMenuItems</name><argument_list pos:line="3236" pos:column="31">(<argument><expr><call><name><name pos:line="3236" pos:column="32">_pEditView</name><op:operator pos:line="3236" pos:column="42">-&gt;</op:operator><name pos:line="3236" pos:column="44">getCurrentBuffer</name></name><argument_list pos:line="3236" pos:column="60">()</argument_list></call><op:operator pos:line="3236" pos:column="62">-&gt;</op:operator><call><name pos:line="3236" pos:column="64">getFormat</name><argument_list pos:line="3236" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3237" pos:column="9">checkUnicodeMenuItems</name><argument_list pos:line="3237" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3240" pos:column="1">void</name></type> <name><name pos:line="3240" pos:column="6">Notepad_plus</name><op:operator pos:line="3240" pos:column="18">::</op:operator><name pos:line="3240" pos:column="20">enableConvertMenuItems</name></name><parameter_list pos:line="3240" pos:column="42">(<param><decl><type><name pos:line="3240" pos:column="43">formatType</name></type> <name pos:line="3240" pos:column="54">f</name></decl></param>)</parameter_list> <specifier pos:line="3240" pos:column="57">const</specifier>
<block pos:line="3241" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3242" pos:column="9">enableCommand</name><argument_list pos:line="3242" pos:column="22">(<argument><expr><name pos:line="3242" pos:column="23">IDM_FORMAT_TODOS</name></expr></argument>, <argument><expr><op:operator pos:line="3242" pos:column="41">(</op:operator><name pos:line="3242" pos:column="42">f</name> <op:operator pos:line="3242" pos:column="44">!=</op:operator> <name pos:line="3242" pos:column="47">WIN_FORMAT</name><op:operator pos:line="3242" pos:column="57">)</op:operator></expr></argument>, <argument><expr><name pos:line="3242" pos:column="60">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3243" pos:column="9">enableCommand</name><argument_list pos:line="3243" pos:column="22">(<argument><expr><name pos:line="3243" pos:column="23">IDM_FORMAT_TOUNIX</name></expr></argument>, <argument><expr><op:operator pos:line="3243" pos:column="42">(</op:operator><name pos:line="3243" pos:column="43">f</name> <op:operator pos:line="3243" pos:column="45">!=</op:operator> <name pos:line="3243" pos:column="48">UNIX_FORMAT</name><op:operator pos:line="3243" pos:column="59">)</op:operator></expr></argument>, <argument><expr><name pos:line="3243" pos:column="62">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3244" pos:column="9">enableCommand</name><argument_list pos:line="3244" pos:column="22">(<argument><expr><name pos:line="3244" pos:column="23">IDM_FORMAT_TOMAC</name></expr></argument>, <argument><expr><op:operator pos:line="3244" pos:column="41">(</op:operator><name pos:line="3244" pos:column="42">f</name> <op:operator pos:line="3244" pos:column="44">!=</op:operator> <name pos:line="3244" pos:column="47">MAC_FORMAT</name><op:operator pos:line="3244" pos:column="57">)</op:operator></expr></argument>, <argument><expr><name pos:line="3244" pos:column="60">MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3247" pos:column="1">void</name></type> <name><name pos:line="3247" pos:column="6">Notepad_plus</name><op:operator pos:line="3247" pos:column="18">::</op:operator><name pos:line="3247" pos:column="20">checkUnicodeMenuItems</name></name><parameter_list pos:line="3247" pos:column="41">()</parameter_list> <specifier pos:line="3247" pos:column="44">const</specifier>
<block pos:line="3248" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3249" pos:column="9">Buffer</name> <type:modifier pos:line="3249" pos:column="16">*</type:modifier></type><name pos:line="3249" pos:column="17">buf</name> <init pos:line="3249" pos:column="21">= <expr><call><name><name pos:line="3249" pos:column="23">_pEditView</name><op:operator pos:line="3249" pos:column="33">-&gt;</op:operator><name pos:line="3249" pos:column="35">getCurrentBuffer</name></name><argument_list pos:line="3249" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3250" pos:column="9">UniMode</name></type> <name pos:line="3250" pos:column="17">um</name> <init pos:line="3250" pos:column="20">= <expr><call><name><name pos:line="3250" pos:column="22">buf</name><op:operator pos:line="3250" pos:column="25">-&gt;</op:operator><name pos:line="3250" pos:column="27">getUnicodeMode</name></name><argument_list pos:line="3250" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3251" pos:column="9">int</name></type> <name pos:line="3251" pos:column="13">encoding</name> <init pos:line="3251" pos:column="22">= <expr><call><name><name pos:line="3251" pos:column="24">buf</name><op:operator pos:line="3251" pos:column="27">-&gt;</op:operator><name pos:line="3251" pos:column="29">getEncoding</name></name><argument_list pos:line="3251" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3253" pos:column="9">int</name></type> <name pos:line="3253" pos:column="13">id</name> <init pos:line="3253" pos:column="16">= <expr><op:operator pos:line="3253" pos:column="18">-</op:operator><lit:literal type="number" pos:line="3253" pos:column="19">1</lit:literal></expr></init></decl>;</decl_stmt>
	<switch pos:line="3254" pos:column="9">switch <condition pos:line="3254" pos:column="16">(<expr><name pos:line="3254" pos:column="17">um</name></expr>)</condition>
	<block pos:line="3255" pos:column="9">{
		<case pos:line="3256" pos:column="17">case <expr><name pos:line="3256" pos:column="22">uniUTF8</name></expr>   : <expr_stmt><expr><name pos:line="3256" pos:column="34">id</name> <op:operator pos:line="3256" pos:column="37">=</op:operator> <name pos:line="3256" pos:column="39">IDM_FORMAT_UTF_8</name></expr>;</expr_stmt> <break pos:line="3256" pos:column="57">break;</break>
		</case><case pos:line="3257" pos:column="17">case <expr><name pos:line="3257" pos:column="22">uni16BE</name></expr>   : <expr_stmt><expr><name pos:line="3257" pos:column="34">id</name> <op:operator pos:line="3257" pos:column="37">=</op:operator> <name pos:line="3257" pos:column="39">IDM_FORMAT_UCS_2BE</name></expr>;</expr_stmt> <break pos:line="3257" pos:column="59">break;</break>
		</case><case pos:line="3258" pos:column="17">case <expr><name pos:line="3258" pos:column="22">uni16LE</name></expr>   : <expr_stmt><expr><name pos:line="3258" pos:column="34">id</name> <op:operator pos:line="3258" pos:column="37">=</op:operator> <name pos:line="3258" pos:column="39">IDM_FORMAT_UCS_2LE</name></expr>;</expr_stmt> <break pos:line="3258" pos:column="59">break;</break>
		</case><case pos:line="3259" pos:column="17">case <expr><name pos:line="3259" pos:column="22">uniCookie</name></expr> : <expr_stmt><expr><name pos:line="3259" pos:column="34">id</name> <op:operator pos:line="3259" pos:column="37">=</op:operator> <name pos:line="3259" pos:column="39">IDM_FORMAT_AS_UTF_8</name></expr>;</expr_stmt> <break pos:line="3259" pos:column="60">break;</break>
		</case><case pos:line="3260" pos:column="17">case <expr><name pos:line="3260" pos:column="22">uni8Bit</name></expr>   : <expr_stmt><expr><name pos:line="3260" pos:column="34">id</name> <op:operator pos:line="3260" pos:column="37">=</op:operator> <name pos:line="3260" pos:column="39">IDM_FORMAT_ANSI</name></expr>;</expr_stmt> <break pos:line="3260" pos:column="56">break;</break>
	</case>}</block></switch>

	<if pos:line="3263" pos:column="9">if <condition pos:line="3263" pos:column="12">(<expr><name pos:line="3263" pos:column="13">encoding</name> <op:operator pos:line="3263" pos:column="22">==</op:operator> <op:operator pos:line="3263" pos:column="25">-</op:operator><lit:literal type="number" pos:line="3263" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="3263" pos:column="28">
	<block pos:line="3264" pos:column="9">{
		<comment type="line" pos:line="3265" pos:column="17">// Uncheck all in the sub encoding menu</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3266" pos:column="17">::</op:operator><name pos:line="3266" pos:column="19">CheckMenuRadioItem</name></name><argument_list pos:line="3266" pos:column="37">(<argument><expr><name pos:line="3266" pos:column="38">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3266" pos:column="55">IDM_FORMAT_ENCODE</name></expr></argument>, <argument><expr><name pos:line="3266" pos:column="74">IDM_FORMAT_ENCODE_END</name></expr></argument>, <argument><expr><name pos:line="3266" pos:column="97">IDM_FORMAT_ENCODE</name></expr></argument>, <argument><expr><name pos:line="3266" pos:column="116">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3267" pos:column="17">::</op:operator><name pos:line="3267" pos:column="19">CheckMenuItem</name></name><argument_list pos:line="3267" pos:column="32">(<argument><expr><name pos:line="3267" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3267" pos:column="50">IDM_FORMAT_ENCODE</name></expr></argument>, <argument><expr><name pos:line="3267" pos:column="69">MF_UNCHECKED</name> <op:operator pos:line="3267" pos:column="82">|</op:operator> <name pos:line="3267" pos:column="84">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="3269" pos:column="17">if <condition pos:line="3269" pos:column="20">(<expr><name pos:line="3269" pos:column="21">id</name> <op:operator pos:line="3269" pos:column="24">==</op:operator> <op:operator pos:line="3269" pos:column="27">-</op:operator><lit:literal type="number" pos:line="3269" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="3269" pos:column="30"> <comment type="line" pos:line="3269" pos:column="31">//um == uni16BE_NoBOM || um == uni16LE_NoBOM</comment>
		<block pos:line="3270" pos:column="17">{
			<comment type="line" pos:line="3271" pos:column="25">// Uncheck all in the main encoding menu</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="3272" pos:column="25">::</op:operator><name pos:line="3272" pos:column="27">CheckMenuRadioItem</name></name><argument_list pos:line="3272" pos:column="45">(<argument><expr><name pos:line="3272" pos:column="46">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3272" pos:column="63">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3272" pos:column="80">IDM_FORMAT_AS_UTF_8</name></expr></argument>, <argument><expr><name pos:line="3272" pos:column="101">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3272" pos:column="118">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="3273" pos:column="25">::</op:operator><name pos:line="3273" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="3273" pos:column="40">(<argument><expr><name pos:line="3273" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3273" pos:column="58">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3273" pos:column="75">MF_UNCHECKED</name> <op:operator pos:line="3273" pos:column="88">|</op:operator> <name pos:line="3273" pos:column="90">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="3275" pos:column="17">else
		<block pos:line="3276" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="3277" pos:column="25">::</op:operator><name pos:line="3277" pos:column="27">CheckMenuRadioItem</name></name><argument_list pos:line="3277" pos:column="45">(<argument><expr><name pos:line="3277" pos:column="46">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3277" pos:column="63">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3277" pos:column="80">IDM_FORMAT_AS_UTF_8</name></expr></argument>, <argument><expr><name pos:line="3277" pos:column="101">id</name></expr></argument>, <argument><expr><name pos:line="3277" pos:column="105">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then>
	<else pos:line="3280" pos:column="9">else
	<block pos:line="3281" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3282" pos:column="17">EncodingMapper</name> <type:modifier pos:line="3282" pos:column="32">*</type:modifier></type><name pos:line="3282" pos:column="33">em</name> <init pos:line="3282" pos:column="36">= <expr><call><name><name pos:line="3282" pos:column="38">EncodingMapper</name><op:operator pos:line="3282" pos:column="52">::</op:operator><name pos:line="3282" pos:column="54">getInstance</name></name><argument_list pos:line="3282" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3283" pos:column="17">int</name></type> <name pos:line="3283" pos:column="21">cmdID</name> <init pos:line="3283" pos:column="27">= <expr><call><name><name pos:line="3283" pos:column="29">em</name><op:operator pos:line="3283" pos:column="31">-&gt;</op:operator><name pos:line="3283" pos:column="33">getIndexFromEncoding</name></name><argument_list pos:line="3283" pos:column="53">(<argument><expr><name pos:line="3283" pos:column="54">encoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="3284" pos:column="17">if <condition pos:line="3284" pos:column="20">(<expr><name pos:line="3284" pos:column="21">cmdID</name> <op:operator pos:line="3284" pos:column="27">==</op:operator> <op:operator pos:line="3284" pos:column="30">-</op:operator><lit:literal type="number" pos:line="3284" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="3284" pos:column="33">
		<block pos:line="3285" pos:column="17">{
			<comment type="line" pos:line="3286" pos:column="25">//printStr(TEXT("Encoding problem. Encoding is not added in encoding_table?"));</comment>
			<return pos:line="3287" pos:column="25">return;</return>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="3289" pos:column="17">cmdID</name> <op:operator pos:line="3289" pos:column="23">+=</op:operator> <name pos:line="3289" pos:column="26">IDM_FORMAT_ENCODE</name></expr>;</expr_stmt>

		<comment type="line" pos:line="3291" pos:column="17">// Uncheck all in the main encoding menu</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3292" pos:column="17">::</op:operator><name pos:line="3292" pos:column="19">CheckMenuRadioItem</name></name><argument_list pos:line="3292" pos:column="37">(<argument><expr><name pos:line="3292" pos:column="38">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3292" pos:column="55">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3292" pos:column="72">IDM_FORMAT_AS_UTF_8</name></expr></argument>, <argument><expr><name pos:line="3292" pos:column="93">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3292" pos:column="110">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3293" pos:column="17">::</op:operator><name pos:line="3293" pos:column="19">CheckMenuItem</name></name><argument_list pos:line="3293" pos:column="32">(<argument><expr><name pos:line="3293" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3293" pos:column="50">IDM_FORMAT_ANSI</name></expr></argument>, <argument><expr><name pos:line="3293" pos:column="67">MF_UNCHECKED</name> <op:operator pos:line="3293" pos:column="80">|</op:operator> <name pos:line="3293" pos:column="82">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3295" pos:column="17">// Check the encoding item</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3296" pos:column="17">::</op:operator><name pos:line="3296" pos:column="19">CheckMenuRadioItem</name></name><argument_list pos:line="3296" pos:column="37">(<argument><expr><name pos:line="3296" pos:column="38">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3296" pos:column="55">IDM_FORMAT_ENCODE</name></expr></argument>, <argument><expr><name pos:line="3296" pos:column="74">IDM_FORMAT_ENCODE_END</name></expr></argument>, <argument><expr><name pos:line="3296" pos:column="97">cmdID</name></expr></argument>, <argument><expr><name pos:line="3296" pos:column="104">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="3300" pos:column="1">void</name></type> <name><name pos:line="3300" pos:column="6">Notepad_plus</name><op:operator pos:line="3300" pos:column="18">::</op:operator><name pos:line="3300" pos:column="20">showAutoComp</name></name><parameter_list pos:line="3300" pos:column="32">()</parameter_list>
<block pos:line="3301" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3302" pos:column="9">bool</name></type> <name pos:line="3302" pos:column="14">isFromPrimary</name> <init pos:line="3302" pos:column="28">= <expr><name pos:line="3302" pos:column="30">_pEditView</name> <op:operator pos:line="3302" pos:column="41">==</op:operator> <op:operator pos:line="3302" pos:column="44">&amp;</op:operator><name pos:line="3302" pos:column="45">_mainEditView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3303" pos:column="9">AutoCompletion</name> <type:modifier pos:line="3303" pos:column="24">*</type:modifier></type> <name pos:line="3303" pos:column="26">autoC</name> <init pos:line="3303" pos:column="32">= <expr><name pos:line="3303" pos:column="34">isFromPrimary</name><op:operator pos:line="3303" pos:column="47">?</op:operator><op:operator pos:line="3303" pos:column="48">&amp;</op:operator><name pos:line="3303" pos:column="49">_autoCompleteMain</name><op:operator pos:line="3303" pos:column="66">:</op:operator><op:operator pos:line="3303" pos:column="67">&amp;</op:operator><name pos:line="3303" pos:column="68">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="3304" pos:column="9">autoC</name><op:operator pos:line="3304" pos:column="14">-&gt;</op:operator><name pos:line="3304" pos:column="16">showAutoComplete</name></name><argument_list pos:line="3304" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3307" pos:column="1">void</name></type> <name><name pos:line="3307" pos:column="6">Notepad_plus</name><op:operator pos:line="3307" pos:column="18">::</op:operator><name pos:line="3307" pos:column="20">autoCompFromCurrentFile</name></name><parameter_list pos:line="3307" pos:column="43">(<param><decl><type><name pos:line="3307" pos:column="44">bool</name></type> <name pos:line="3307" pos:column="49">autoInsert</name></decl></param>)</parameter_list>
<block pos:line="3308" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3309" pos:column="9">bool</name></type> <name pos:line="3309" pos:column="14">isFromPrimary</name> <init pos:line="3309" pos:column="28">= <expr><name pos:line="3309" pos:column="30">_pEditView</name> <op:operator pos:line="3309" pos:column="41">==</op:operator> <op:operator pos:line="3309" pos:column="44">&amp;</op:operator><name pos:line="3309" pos:column="45">_mainEditView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3310" pos:column="9">AutoCompletion</name> <type:modifier pos:line="3310" pos:column="24">*</type:modifier></type> <name pos:line="3310" pos:column="26">autoC</name> <init pos:line="3310" pos:column="32">= <expr><name pos:line="3310" pos:column="34">isFromPrimary</name><op:operator pos:line="3310" pos:column="47">?</op:operator><op:operator pos:line="3310" pos:column="48">&amp;</op:operator><name pos:line="3310" pos:column="49">_autoCompleteMain</name><op:operator pos:line="3310" pos:column="66">:</op:operator><op:operator pos:line="3310" pos:column="67">&amp;</op:operator><name pos:line="3310" pos:column="68">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="3311" pos:column="9">autoC</name><op:operator pos:line="3311" pos:column="14">-&gt;</op:operator><name pos:line="3311" pos:column="16">showWordComplete</name></name><argument_list pos:line="3311" pos:column="32">(<argument><expr><name pos:line="3311" pos:column="33">autoInsert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3314" pos:column="1">void</name></type> <name><name pos:line="3314" pos:column="6">Notepad_plus</name><op:operator pos:line="3314" pos:column="18">::</op:operator><name pos:line="3314" pos:column="20">showFunctionComp</name></name><parameter_list pos:line="3314" pos:column="36">()</parameter_list>
<block pos:line="3315" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3316" pos:column="9">bool</name></type> <name pos:line="3316" pos:column="14">isFromPrimary</name> <init pos:line="3316" pos:column="28">= <expr><name pos:line="3316" pos:column="30">_pEditView</name> <op:operator pos:line="3316" pos:column="41">==</op:operator> <op:operator pos:line="3316" pos:column="44">&amp;</op:operator><name pos:line="3316" pos:column="45">_mainEditView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3317" pos:column="9">AutoCompletion</name> <type:modifier pos:line="3317" pos:column="24">*</type:modifier></type> <name pos:line="3317" pos:column="26">autoC</name> <init pos:line="3317" pos:column="32">= <expr><name pos:line="3317" pos:column="34">isFromPrimary</name><op:operator pos:line="3317" pos:column="47">?</op:operator><op:operator pos:line="3317" pos:column="48">&amp;</op:operator><name pos:line="3317" pos:column="49">_autoCompleteMain</name><op:operator pos:line="3317" pos:column="66">:</op:operator><op:operator pos:line="3317" pos:column="67">&amp;</op:operator><name pos:line="3317" pos:column="68">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="3318" pos:column="9">autoC</name><op:operator pos:line="3318" pos:column="14">-&gt;</op:operator><name pos:line="3318" pos:column="16">showFunctionComplete</name></name><argument_list pos:line="3318" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="3321" pos:column="1">static</specifier> <name pos:line="3321" pos:column="8">generic_string</name></type> <name pos:line="3321" pos:column="23">extractSymbol</name><parameter_list pos:line="3321" pos:column="36">(<param><decl><type><name pos:line="3321" pos:column="37">TCHAR</name></type> <name pos:line="3321" pos:column="43">firstChar</name></decl></param>, <param><decl><type><name pos:line="3321" pos:column="54">TCHAR</name></type> <name pos:line="3321" pos:column="60">secondChar</name></decl></param>, <param><decl><type><specifier pos:line="3321" pos:column="72">const</specifier> <name pos:line="3321" pos:column="78">TCHAR</name> <type:modifier pos:line="3321" pos:column="84">*</type:modifier></type><name pos:line="3321" pos:column="85">str2extract</name></decl></param>)</parameter_list>
<block pos:line="3322" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3323" pos:column="9">bool</name></type> <name pos:line="3323" pos:column="14">found</name> <init pos:line="3323" pos:column="20">= <expr><lit:literal type="boolean" pos:line="3323" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3324" pos:column="9">TCHAR</name></type> <name><name pos:line="3324" pos:column="15">extracted</name><index pos:line="3324" pos:column="24">[<expr><lit:literal type="number" pos:line="3324" pos:column="25">128</lit:literal></expr>]</index></name> <init pos:line="3324" pos:column="30">= <expr><call><name pos:line="3324" pos:column="32">TEXT</name><argument_list pos:line="3324" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="3324" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="3326" pos:column="9">for (<init><decl><type><name pos:line="3326" pos:column="14">int</name></type> <name pos:line="3326" pos:column="18">i</name> <init pos:line="3326" pos:column="20">= <expr><lit:literal type="number" pos:line="3326" pos:column="22">0</lit:literal></expr></init><op:operator pos:line="3326" pos:column="23">,</op:operator> <name pos:line="3326" pos:column="25">j</name> <init pos:line="3326" pos:column="27">= <expr><lit:literal type="number" pos:line="3326" pos:column="29">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3326" pos:column="33">i</name> <op:operator pos:line="3326" pos:column="35">&lt;</op:operator> <call><name pos:line="3326" pos:column="37">lstrlen</name><argument_list pos:line="3326" pos:column="44">(<argument><expr><name pos:line="3326" pos:column="45">str2extract</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="3326" pos:column="60">i</name><op:operator pos:line="3326" pos:column="61">++</op:operator></expr></incr>)
	<block pos:line="3327" pos:column="9">{
		<if pos:line="3328" pos:column="17">if <condition pos:line="3328" pos:column="20">(<expr><name pos:line="3328" pos:column="21">found</name></expr>)</condition><then pos:line="3328" pos:column="27">
		<block pos:line="3329" pos:column="17">{
			<if pos:line="3330" pos:column="25">if <condition pos:line="3330" pos:column="28">(<expr><op:operator pos:line="3330" pos:column="29">!</op:operator><name><name pos:line="3330" pos:column="30">str2extract</name><index pos:line="3330" pos:column="41">[<expr><name pos:line="3330" pos:column="42">i</name></expr>]</index></name> <op:operator pos:line="3330" pos:column="45">||</op:operator> <name><name pos:line="3330" pos:column="48">str2extract</name><index pos:line="3330" pos:column="59">[<expr><name pos:line="3330" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="3330" pos:column="63">==</op:operator> <lit:literal type="char" pos:line="3330" pos:column="66">' '</lit:literal></expr>)</condition><then pos:line="3330" pos:column="70">
			<block pos:line="3331" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3332" pos:column="33">extracted</name><index pos:line="3332" pos:column="42">[<expr><name pos:line="3332" pos:column="43">j</name></expr>]</index></name> <op:operator pos:line="3332" pos:column="46">=</op:operator> <lit:literal type="char" pos:line="3332" pos:column="48">'\0'</lit:literal></expr>;</expr_stmt>
				<return pos:line="3333" pos:column="33">return <expr><call><name pos:line="3333" pos:column="40">generic_string</name><argument_list pos:line="3333" pos:column="54">(<argument><expr><name pos:line="3333" pos:column="55">extracted</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<expr_stmt><expr><name><name pos:line="3335" pos:column="25">extracted</name><index pos:line="3335" pos:column="34">[<expr><name pos:line="3335" pos:column="35">j</name><op:operator pos:line="3335" pos:column="36">++</op:operator></expr>]</index></name> <op:operator pos:line="3335" pos:column="40">=</op:operator> <name><name pos:line="3335" pos:column="42">str2extract</name><index pos:line="3335" pos:column="53">[<expr><name pos:line="3335" pos:column="54">i</name></expr>]</index></name></expr>;</expr_stmt>

		}</block></then>
		<else pos:line="3338" pos:column="17">else
		<block pos:line="3339" pos:column="17">{
			<if pos:line="3340" pos:column="25">if <condition pos:line="3340" pos:column="28">(<expr><op:operator pos:line="3340" pos:column="29">!</op:operator><name><name pos:line="3340" pos:column="30">str2extract</name><index pos:line="3340" pos:column="41">[<expr><name pos:line="3340" pos:column="42">i</name></expr>]</index></name></expr>)</condition><then pos:line="3340" pos:column="45">
				<return pos:line="3341" pos:column="33">return <expr><call><name pos:line="3341" pos:column="40">TEXT</name><argument_list pos:line="3341" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="3341" pos:column="45">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

			<if pos:line="3343" pos:column="25">if <condition pos:line="3343" pos:column="28">(<expr><name><name pos:line="3343" pos:column="29">str2extract</name><index pos:line="3343" pos:column="40">[<expr><name pos:line="3343" pos:column="41">i</name></expr>]</index></name> <op:operator pos:line="3343" pos:column="44">==</op:operator> <name pos:line="3343" pos:column="47">firstChar</name> <op:operator pos:line="3343" pos:column="57">&amp;&amp;</op:operator> <name><name pos:line="3343" pos:column="60">str2extract</name><index pos:line="3343" pos:column="71">[<expr><name pos:line="3343" pos:column="72">i</name><op:operator pos:line="3343" pos:column="73">+</op:operator><lit:literal type="number" pos:line="3343" pos:column="74">1</lit:literal></expr>]</index></name> <op:operator pos:line="3343" pos:column="77">==</op:operator> <name pos:line="3343" pos:column="80">secondChar</name></expr>)</condition><then pos:line="3343" pos:column="91">
			<block pos:line="3344" pos:column="25">{
				<expr_stmt><expr><name pos:line="3345" pos:column="33">found</name> <op:operator pos:line="3345" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="3345" pos:column="41">true</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="3346" pos:column="33">++</op:operator><name pos:line="3346" pos:column="35">i</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></for>
	<return pos:line="3350" pos:column="9">return  <expr><call><name pos:line="3350" pos:column="17">generic_string</name><argument_list pos:line="3350" pos:column="31">(<argument><expr><name pos:line="3350" pos:column="32">extracted</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function><empty_stmt pos:line="3351" pos:column="2">;</empty_stmt>

<function><type><name pos:line="3353" pos:column="1">bool</name></type> <name><name pos:line="3353" pos:column="6">Notepad_plus</name><op:operator pos:line="3353" pos:column="18">::</op:operator><name pos:line="3353" pos:column="20">doBlockComment</name></name><parameter_list pos:line="3353" pos:column="34">(<param><decl><type><name pos:line="3353" pos:column="35">comment_mode</name></type> <name pos:line="3353" pos:column="48">currCommentMode</name></decl></param>)</parameter_list>
<block pos:line="3354" pos:column="1">{
	<comment type="line" pos:line="3355" pos:column="9">//--LS: BlockToStreamComment:</comment>
	<decl_stmt><decl><type><specifier pos:line="3356" pos:column="9">const</specifier> <name pos:line="3356" pos:column="15">TCHAR</name> <type:modifier pos:line="3356" pos:column="21">*</type:modifier></type><name pos:line="3356" pos:column="22">commentStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="3357" pos:column="9">const</specifier> <name pos:line="3357" pos:column="15">TCHAR</name> <type:modifier pos:line="3357" pos:column="21">*</type:modifier></type><name pos:line="3357" pos:column="22">commentEnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3358" pos:column="9">generic_string</name></type> <name pos:line="3358" pos:column="24">symbolStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3359" pos:column="9">generic_string</name></type> <name pos:line="3359" pos:column="24">symbolEnd</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="3361" pos:column="9">const</specifier> <name pos:line="3361" pos:column="15">TCHAR</name> <type:modifier pos:line="3361" pos:column="21">*</type:modifier></type><name pos:line="3361" pos:column="22">commentLineSybol</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3362" pos:column="9">generic_string</name></type> <name pos:line="3362" pos:column="24">symbol</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3364" pos:column="9">Buffer</name> <type:modifier pos:line="3364" pos:column="16">*</type:modifier></type> <name pos:line="3364" pos:column="18">buf</name> <init pos:line="3364" pos:column="22">= <expr><call><name><name pos:line="3364" pos:column="24">_pEditView</name><op:operator pos:line="3364" pos:column="34">-&gt;</op:operator><name pos:line="3364" pos:column="36">getCurrentBuffer</name></name><argument_list pos:line="3364" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="3365" pos:column="9">//--FLS: Avoid side-effects (e.g. cursor moves number of comment-characters) when file is read-only.</comment>
	<if pos:line="3366" pos:column="9">if <condition pos:line="3366" pos:column="12">(<expr><call><name><name pos:line="3366" pos:column="13">buf</name><op:operator pos:line="3366" pos:column="16">-&gt;</op:operator><name pos:line="3366" pos:column="18">isReadOnly</name></name><argument_list pos:line="3366" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="3366" pos:column="31"> 
		<return pos:line="3367" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3367" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="3368" pos:column="9">if <condition pos:line="3368" pos:column="12">(<expr><call><name><name pos:line="3368" pos:column="13">buf</name><op:operator pos:line="3368" pos:column="16">-&gt;</op:operator><name pos:line="3368" pos:column="18">getLangType</name></name><argument_list pos:line="3368" pos:column="29">()</argument_list></call> <op:operator pos:line="3368" pos:column="32">==</op:operator> <name pos:line="3368" pos:column="35">L_USER</name></expr>)</condition><then pos:line="3368" pos:column="42">
	<block pos:line="3369" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3370" pos:column="17">UserLangContainer</name> <type:modifier pos:line="3370" pos:column="35">*</type:modifier></type> <name pos:line="3370" pos:column="37">userLangContainer</name> <init pos:line="3370" pos:column="55">= <expr><call><name><name pos:line="3370" pos:column="57">NppParameters</name><op:operator pos:line="3370" pos:column="70">::</op:operator><name pos:line="3370" pos:column="72">getInstance</name></name><argument_list pos:line="3370" pos:column="83">()</argument_list></call><op:operator pos:line="3370" pos:column="85">-&gt;</op:operator><call><name pos:line="3370" pos:column="87">getULCFromName</name><argument_list pos:line="3370" pos:column="101">(<argument><expr><call><name><name pos:line="3370" pos:column="102">buf</name><op:operator pos:line="3370" pos:column="105">-&gt;</op:operator><name pos:line="3370" pos:column="107">getUserDefineLangName</name></name><argument_list pos:line="3370" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="3371" pos:column="17">if <condition pos:line="3371" pos:column="20">(<expr><op:operator pos:line="3371" pos:column="21">!</op:operator><name pos:line="3371" pos:column="22">userLangContainer</name></expr>)</condition><then pos:line="3371" pos:column="40">
			<return pos:line="3372" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3372" pos:column="32">false</lit:literal></expr>;</return></then></if>

		<expr_stmt><expr><name pos:line="3374" pos:column="17">symbol</name> <op:operator pos:line="3374" pos:column="24">=</op:operator> <call><name pos:line="3374" pos:column="26">extractSymbol</name><argument_list pos:line="3374" pos:column="39">(<argument><expr><lit:literal type="char" pos:line="3374" pos:column="40">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3374" pos:column="45">'0'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3374" pos:column="50">userLangContainer</name><op:operator pos:line="3374" pos:column="67">-&gt;</op:operator><name pos:line="3374" pos:column="69">_keywordLists</name><index pos:line="3374" pos:column="82">[<expr><name pos:line="3374" pos:column="83">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3375" pos:column="17">commentLineSybol</name> <op:operator pos:line="3375" pos:column="34">=</op:operator> <call><name><name pos:line="3375" pos:column="36">symbol</name><op:operator pos:line="3375" pos:column="42">.</op:operator><name pos:line="3375" pos:column="43">c_str</name></name><argument_list pos:line="3375" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="3376" pos:column="17">//--FLS: BlockToStreamComment: Needed to decide, if stream-comment can be called below!</comment>
		<expr_stmt><expr><name pos:line="3377" pos:column="17">symbolStart</name> <op:operator pos:line="3377" pos:column="29">=</op:operator> <call><name pos:line="3377" pos:column="31">extractSymbol</name><argument_list pos:line="3377" pos:column="44">(<argument><expr><lit:literal type="char" pos:line="3377" pos:column="45">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3377" pos:column="50">'1'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3377" pos:column="55">userLangContainer</name><op:operator pos:line="3377" pos:column="72">-&gt;</op:operator><name pos:line="3377" pos:column="74">_keywordLists</name><index pos:line="3377" pos:column="87">[<expr><name pos:line="3377" pos:column="88">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3378" pos:column="17">commentStart</name> <op:operator pos:line="3378" pos:column="30">=</op:operator> <call><name><name pos:line="3378" pos:column="32">symbolStart</name><op:operator pos:line="3378" pos:column="43">.</op:operator><name pos:line="3378" pos:column="44">c_str</name></name><argument_list pos:line="3378" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3379" pos:column="17">symbolEnd</name> <op:operator pos:line="3379" pos:column="27">=</op:operator> <call><name pos:line="3379" pos:column="29">extractSymbol</name><argument_list pos:line="3379" pos:column="42">(<argument><expr><lit:literal type="char" pos:line="3379" pos:column="43">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3379" pos:column="48">'2'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3379" pos:column="53">userLangContainer</name><op:operator pos:line="3379" pos:column="70">-&gt;</op:operator><name pos:line="3379" pos:column="72">_keywordLists</name><index pos:line="3379" pos:column="85">[<expr><name pos:line="3379" pos:column="86">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3380" pos:column="17">commentEnd</name> <op:operator pos:line="3380" pos:column="28">=</op:operator> <call><name><name pos:line="3380" pos:column="30">symbolEnd</name><op:operator pos:line="3380" pos:column="39">.</op:operator><name pos:line="3380" pos:column="40">c_str</name></name><argument_list pos:line="3380" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3382" pos:column="9">else
	<block pos:line="3383" pos:column="9">{
		<expr_stmt><expr><name pos:line="3384" pos:column="17">commentLineSybol</name> <op:operator pos:line="3384" pos:column="34">=</op:operator> <call><name><name pos:line="3384" pos:column="36">buf</name><op:operator pos:line="3384" pos:column="39">-&gt;</op:operator><name pos:line="3384" pos:column="41">getCommentLineSymbol</name></name><argument_list pos:line="3384" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="3385" pos:column="17">//--FLS: BlockToStreamComment: Needed to decide, if stream-comment can be called below!</comment>
		<expr_stmt><expr><name pos:line="3386" pos:column="17">commentStart</name> <op:operator pos:line="3386" pos:column="30">=</op:operator> <call><name><name pos:line="3386" pos:column="32">buf</name><op:operator pos:line="3386" pos:column="35">-&gt;</op:operator><name pos:line="3386" pos:column="37">getCommentStart</name></name><argument_list pos:line="3386" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3387" pos:column="17">commentEnd</name> <op:operator pos:line="3387" pos:column="28">=</op:operator> <call><name><name pos:line="3387" pos:column="30">buf</name><op:operator pos:line="3387" pos:column="33">-&gt;</op:operator><name pos:line="3387" pos:column="35">getCommentEnd</name></name><argument_list pos:line="3387" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="3390" pos:column="9">if <condition pos:line="3390" pos:column="12">(<expr><op:operator pos:line="3390" pos:column="13">(</op:operator><op:operator pos:line="3390" pos:column="14">!</op:operator><name pos:line="3390" pos:column="15">commentLineSybol</name><op:operator pos:line="3390" pos:column="31">)</op:operator> <op:operator pos:line="3390" pos:column="33">||</op:operator> <op:operator pos:line="3390" pos:column="36">(</op:operator><op:operator pos:line="3390" pos:column="37">!</op:operator><name><name pos:line="3390" pos:column="38">commentLineSybol</name><index pos:line="3390" pos:column="54">[<expr><lit:literal type="number" pos:line="3390" pos:column="55">0</lit:literal></expr>]</index></name><op:operator pos:line="3390" pos:column="57">)</op:operator> <op:operator pos:line="3390" pos:column="59">||</op:operator> <op:operator pos:line="3390" pos:column="62">(</op:operator><name pos:line="3390" pos:column="63">commentLineSybol</name> <op:operator pos:line="3390" pos:column="80">==</op:operator> <name pos:line="3390" pos:column="83">NULL</name><op:operator pos:line="3390" pos:column="87">)</op:operator></expr>)</condition><then pos:line="3390" pos:column="89"> 
	<block pos:line="3391" pos:column="9">{
	<comment type="line" pos:line="3392" pos:column="9">//--FLS: BlockToStreamComment: If there is no block-comment symbol, try the stream comment:</comment>
		<if pos:line="3393" pos:column="17">if <condition pos:line="3393" pos:column="20">(<expr><op:operator pos:line="3393" pos:column="21">!</op:operator><op:operator pos:line="3393" pos:column="22">(</op:operator><op:operator pos:line="3393" pos:column="23">!</op:operator><name pos:line="3393" pos:column="24">commentStart</name> <op:operator pos:line="3393" pos:column="37">||</op:operator> <op:operator pos:line="3393" pos:column="40">!</op:operator><name><name pos:line="3393" pos:column="41">commentStart</name><index pos:line="3393" pos:column="53">[<expr><lit:literal type="number" pos:line="3393" pos:column="54">0</lit:literal></expr>]</index></name> <op:operator pos:line="3393" pos:column="57">||</op:operator> <name pos:line="3393" pos:column="60">commentStart</name> <op:operator pos:line="3393" pos:column="73">==</op:operator> <name pos:line="3393" pos:column="76">NULL</name> <op:operator pos:line="3393" pos:column="81">||</op:operator> <op:operator pos:line="3393" pos:column="84">!</op:operator><name pos:line="3393" pos:column="85">commentEnd</name> <op:operator pos:line="3393" pos:column="96">||</op:operator> <op:operator pos:line="3393" pos:column="99">!</op:operator><name><name pos:line="3393" pos:column="100">commentEnd</name><index pos:line="3393" pos:column="110">[<expr><lit:literal type="number" pos:line="3393" pos:column="111">0</lit:literal></expr>]</index></name> <op:operator pos:line="3393" pos:column="114">||</op:operator> <name pos:line="3393" pos:column="117">commentEnd</name> <op:operator pos:line="3393" pos:column="128">==</op:operator> <name pos:line="3393" pos:column="131">NULL</name><op:operator pos:line="3393" pos:column="135">)</op:operator></expr>)</condition><then pos:line="3393" pos:column="137"> 
		<block pos:line="3394" pos:column="17">{
			<if pos:line="3395" pos:column="25">if <condition pos:line="3395" pos:column="28">(<expr><op:operator pos:line="3395" pos:column="29">(</op:operator><name pos:line="3395" pos:column="30">currCommentMode</name> <op:operator pos:line="3395" pos:column="46">==</op:operator> <name pos:line="3395" pos:column="49">cm_comment</name><op:operator pos:line="3395" pos:column="59">)</op:operator></expr>)</condition><then pos:line="3395" pos:column="61"> 
			<block pos:line="3396" pos:column="25">{
				<return pos:line="3397" pos:column="33">return <expr><call><name pos:line="3397" pos:column="40">doStreamComment</name><argument_list pos:line="3397" pos:column="55">()</argument_list></call></expr>;</return>
			}</block></then>
			<else pos:line="3399" pos:column="25">else <if pos:line="3399" pos:column="30">if <condition pos:line="3399" pos:column="33">(<expr><name pos:line="3399" pos:column="34">currCommentMode</name> <op:operator pos:line="3399" pos:column="50">==</op:operator> <name pos:line="3399" pos:column="53">cm_uncomment</name></expr>)</condition><then pos:line="3399" pos:column="66"> 
			<block pos:line="3400" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="3401" pos:column="33">undoStreamComment</name><argument_list pos:line="3401" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="3403" pos:column="25">else 
		<return pos:line="3404" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3404" pos:column="24">false</lit:literal></expr>;</return></else></if></else></if>
		}</block></then>
		<else pos:line="3406" pos:column="17">else
			<return pos:line="3407" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3407" pos:column="32">false</lit:literal></expr>;</return></else></if>
	}</block></then></if>

    <function_decl><type><name pos:line="3410" pos:column="5">generic_string</name></type> <name pos:line="3410" pos:column="20">comment</name><parameter_list pos:line="3410" pos:column="27">(<param><decl><type><name pos:line="3410" pos:column="28">commentLineSybol</name></type></decl></param>)</parameter_list>;</function_decl>
    <expr_stmt><expr><name pos:line="3411" pos:column="5">comment</name> <op:operator pos:line="3411" pos:column="13">+=</op:operator> <call><name pos:line="3411" pos:column="16">TEXT</name><argument_list pos:line="3411" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="3411" pos:column="21">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><specifier pos:line="3413" pos:column="9">const</specifier> <name pos:line="3413" pos:column="15">int</name></type> <name pos:line="3413" pos:column="19">linebufferSize</name> <init pos:line="3413" pos:column="34">= <expr><lit:literal type="number" pos:line="3413" pos:column="36">1024</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3414" pos:column="5">TCHAR</name></type> <name><name pos:line="3414" pos:column="11">linebuf</name><index pos:line="3414" pos:column="18">[<expr><name pos:line="3414" pos:column="19">linebufferSize</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3415" pos:column="5">size_t</name></type> <name pos:line="3415" pos:column="12">comment_length</name> <init pos:line="3415" pos:column="27">= <expr><call><name><name pos:line="3415" pos:column="29">comment</name><op:operator pos:line="3415" pos:column="36">.</op:operator><name pos:line="3415" pos:column="37">length</name></name><argument_list pos:line="3415" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3416" pos:column="5">size_t</name></type> <name pos:line="3416" pos:column="12">selectionStart</name> <init pos:line="3416" pos:column="27">= <expr><call><name><name pos:line="3416" pos:column="29">_pEditView</name><op:operator pos:line="3416" pos:column="39">-&gt;</op:operator><name pos:line="3416" pos:column="41">execute</name></name><argument_list pos:line="3416" pos:column="48">(<argument><expr><name pos:line="3416" pos:column="49">SCI_GETSELECTIONSTART</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3417" pos:column="5">size_t</name></type> <name pos:line="3417" pos:column="12">selectionEnd</name> <init pos:line="3417" pos:column="25">= <expr><call><name><name pos:line="3417" pos:column="27">_pEditView</name><op:operator pos:line="3417" pos:column="37">-&gt;</op:operator><name pos:line="3417" pos:column="39">execute</name></name><argument_list pos:line="3417" pos:column="46">(<argument><expr><name pos:line="3417" pos:column="47">SCI_GETSELECTIONEND</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3418" pos:column="5">size_t</name></type> <name pos:line="3418" pos:column="12">caretPosition</name> <init pos:line="3418" pos:column="26">= <expr><call><name><name pos:line="3418" pos:column="28">_pEditView</name><op:operator pos:line="3418" pos:column="38">-&gt;</op:operator><name pos:line="3418" pos:column="40">execute</name></name><argument_list pos:line="3418" pos:column="47">(<argument><expr><name pos:line="3418" pos:column="48">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:line="3419" pos:column="5">// checking if caret is located in _beginning_ of selected block</comment>
    <decl_stmt><decl><type><name pos:line="3420" pos:column="5">bool</name></type> <name pos:line="3420" pos:column="10">move_caret</name> <init pos:line="3420" pos:column="21">= <expr><name pos:line="3420" pos:column="23">caretPosition</name> <op:operator pos:line="3420" pos:column="37">&lt;</op:operator> <name pos:line="3420" pos:column="39">selectionEnd</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3421" pos:column="5">int</name></type> <name pos:line="3421" pos:column="9">selStartLine</name> <init pos:line="3421" pos:column="22">= <expr><call><name><name pos:line="3421" pos:column="24">_pEditView</name><op:operator pos:line="3421" pos:column="34">-&gt;</op:operator><name pos:line="3421" pos:column="36">execute</name></name><argument_list pos:line="3421" pos:column="43">(<argument><expr><name pos:line="3421" pos:column="44">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="3421" pos:column="66">selectionStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3422" pos:column="5">int</name></type> <name pos:line="3422" pos:column="9">selEndLine</name> <init pos:line="3422" pos:column="20">= <expr><call><name><name pos:line="3422" pos:column="22">_pEditView</name><op:operator pos:line="3422" pos:column="32">-&gt;</op:operator><name pos:line="3422" pos:column="34">execute</name></name><argument_list pos:line="3422" pos:column="41">(<argument><expr><name pos:line="3422" pos:column="42">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="3422" pos:column="64">selectionEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3423" pos:column="5">int</name></type> <name pos:line="3423" pos:column="9">lines</name> <init pos:line="3423" pos:column="15">= <expr><name pos:line="3423" pos:column="17">selEndLine</name> <op:operator pos:line="3423" pos:column="28">-</op:operator> <name pos:line="3423" pos:column="30">selStartLine</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3424" pos:column="5">size_t</name></type> <name pos:line="3424" pos:column="12">firstSelLineStart</name> <init pos:line="3424" pos:column="30">= <expr><call><name><name pos:line="3424" pos:column="32">_pEditView</name><op:operator pos:line="3424" pos:column="42">-&gt;</op:operator><name pos:line="3424" pos:column="44">execute</name></name><argument_list pos:line="3424" pos:column="51">(<argument><expr><name pos:line="3424" pos:column="52">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="3424" pos:column="74">selStartLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:line="3425" pos:column="5">// "caret return" is part of the last selected line</comment>
    <if pos:line="3426" pos:column="5">if <condition pos:line="3426" pos:column="8">(<expr><op:operator pos:line="3426" pos:column="9">(</op:operator><name pos:line="3426" pos:column="10">lines</name> <op:operator pos:line="3426" pos:column="16">&gt;</op:operator> <lit:literal type="number" pos:line="3426" pos:column="18">0</lit:literal><op:operator pos:line="3426" pos:column="19">)</op:operator> <op:operator pos:line="3426" pos:column="21">&amp;&amp;</op:operator> <op:operator pos:line="3426" pos:column="24">(</op:operator><name pos:line="3426" pos:column="25">selectionEnd</name> <op:operator pos:line="3426" pos:column="38">==</op:operator> <call><name><name pos:line="3426" pos:column="41">static_cast</name><argument_list pos:line="3426" pos:column="52">&lt;<argument><expr><name pos:line="3426" pos:column="53">size_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3426" pos:column="60">(<argument><expr><call><name><name pos:line="3426" pos:column="61">_pEditView</name><op:operator pos:line="3426" pos:column="71">-&gt;</op:operator><name pos:line="3426" pos:column="73">execute</name></name><argument_list pos:line="3426" pos:column="80">(<argument><expr><name pos:line="3426" pos:column="81">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="3426" pos:column="103">selEndLine</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3426" pos:column="115">)</op:operator></expr>)</condition><then pos:line="3426" pos:column="117">
		<expr_stmt><expr><name pos:line="3427" pos:column="17">selEndLine</name><op:operator pos:line="3427" pos:column="27">--</op:operator></expr>;</expr_stmt></then></if>
	<comment type="line" pos:line="3428" pos:column="9">//--FLS: count lines which were un-commented to decide if undoStreamComment() shall be called.</comment>
	<decl_stmt><decl><type><name pos:line="3429" pos:column="9">int</name></type> <name pos:line="3429" pos:column="13">nUncomments</name> <init pos:line="3429" pos:column="25">= <expr><lit:literal type="number" pos:line="3429" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="3430" pos:column="5">_pEditView</name><op:operator pos:line="3430" pos:column="15">-&gt;</op:operator><name pos:line="3430" pos:column="17">execute</name></name><argument_list pos:line="3430" pos:column="24">(<argument><expr><name pos:line="3430" pos:column="25">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:line="3432" pos:column="5">for (<init><decl><type><name pos:line="3432" pos:column="10">int</name></type> <name pos:line="3432" pos:column="14">i</name> <init pos:line="3432" pos:column="16">= <expr><name pos:line="3432" pos:column="18">selStartLine</name></expr></init></decl>;</init> <condition><expr><name pos:line="3432" pos:column="32">i</name> <op:operator pos:line="3432" pos:column="34">&lt;=</op:operator> <name pos:line="3432" pos:column="37">selEndLine</name></expr>;</condition> <incr><expr><name pos:line="3432" pos:column="49">i</name><op:operator pos:line="3432" pos:column="50">++</op:operator></expr></incr>)
	<block pos:line="3433" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3434" pos:column="17">int</name></type> <name pos:line="3434" pos:column="21">lineStart</name> <init pos:line="3434" pos:column="31">= <expr><call><name><name pos:line="3434" pos:column="33">_pEditView</name><op:operator pos:line="3434" pos:column="43">-&gt;</op:operator><name pos:line="3434" pos:column="45">execute</name></name><argument_list pos:line="3434" pos:column="52">(<argument><expr><name pos:line="3434" pos:column="53">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="3434" pos:column="75">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="3435" pos:column="9">int</name></type> <name pos:line="3435" pos:column="13">lineIndent</name> <init pos:line="3435" pos:column="24">= <expr><name pos:line="3435" pos:column="26">lineStart</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="3436" pos:column="9">int</name></type> <name pos:line="3436" pos:column="13">lineEnd</name> <init pos:line="3436" pos:column="21">= <expr><call><name><name pos:line="3436" pos:column="23">_pEditView</name><op:operator pos:line="3436" pos:column="33">-&gt;</op:operator><name pos:line="3436" pos:column="35">execute</name></name><argument_list pos:line="3436" pos:column="42">(<argument><expr><name pos:line="3436" pos:column="43">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="3436" pos:column="67">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="3437" pos:column="9">if <condition pos:line="3437" pos:column="12">(<expr><op:operator pos:line="3437" pos:column="13">(</op:operator><name pos:line="3437" pos:column="14">lineEnd</name> <op:operator pos:line="3437" pos:column="22">-</op:operator> <name pos:line="3437" pos:column="24">lineIndent</name><op:operator pos:line="3437" pos:column="34">)</op:operator> <op:operator pos:line="3437" pos:column="36">&gt;=</op:operator> <name pos:line="3437" pos:column="39">linebufferSize</name></expr>)</condition><then pos:line="3437" pos:column="54">        <comment type="line" pos:line="3437" pos:column="62">// Avoid buffer size problems</comment>
                <continue pos:line="3438" pos:column="17">continue;</continue></then></if>

        <expr_stmt><expr><name pos:line="3440" pos:column="9">lineIndent</name> <op:operator pos:line="3440" pos:column="20">=</op:operator> <call><name><name pos:line="3440" pos:column="22">_pEditView</name><op:operator pos:line="3440" pos:column="32">-&gt;</op:operator><name pos:line="3440" pos:column="34">execute</name></name><argument_list pos:line="3440" pos:column="41">(<argument><expr><name pos:line="3440" pos:column="42">SCI_GETLINEINDENTPOSITION</name></expr></argument>, <argument><expr><name pos:line="3440" pos:column="69">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3441" pos:column="17">_pEditView</name><op:operator pos:line="3441" pos:column="27">-&gt;</op:operator><name pos:line="3441" pos:column="29">getGenericText</name></name><argument_list pos:line="3441" pos:column="43">(<argument><expr><name pos:line="3441" pos:column="44">linebuf</name></expr></argument>, <argument><expr><name pos:line="3441" pos:column="53">linebufferSize</name></expr></argument>, <argument><expr><name pos:line="3441" pos:column="69">lineIndent</name></expr></argument>, <argument><expr><name pos:line="3441" pos:column="81">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="3443" pos:column="9">generic_string</name></type> <name pos:line="3443" pos:column="24">linebufStr</name> <init pos:line="3443" pos:column="35">= <expr><name pos:line="3443" pos:column="37">linebuf</name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="3445" pos:column="9">// empty lines are not commented</comment>
        <if pos:line="3446" pos:column="9">if <condition pos:line="3446" pos:column="12">(<expr><call><name pos:line="3446" pos:column="13">lstrlen</name><argument_list pos:line="3446" pos:column="20">(<argument><expr><name pos:line="3446" pos:column="21">linebuf</name></expr></argument>)</argument_list></call> <op:operator pos:line="3446" pos:column="30">&lt;</op:operator> <lit:literal type="number" pos:line="3446" pos:column="32">1</lit:literal></expr>)</condition><then pos:line="3446" pos:column="34">
			<continue pos:line="3447" pos:column="25">continue;</continue></then></if>
   		<if pos:line="3448" pos:column="17">if <condition pos:line="3448" pos:column="20">(<expr><name pos:line="3448" pos:column="21">currCommentMode</name> <op:operator pos:line="3448" pos:column="37">!=</op:operator> <name pos:line="3448" pos:column="40">cm_comment</name></expr>)</condition><then pos:line="3448" pos:column="51">
		<block pos:line="3449" pos:column="17">{
			<comment type="line" pos:line="3450" pos:column="25">//--FLS: In order to do get case insensitive comparison use strnicmp() instead case-sensitive comparison.</comment>
			<comment type="line" pos:line="3451" pos:column="25">//      Case insensitive comparison is needed e.g. for "REM" and "rem" in Batchfiles.</comment>
			<comment type="line" pos:line="3452" pos:column="25">//if (linebufStr.substr(0, comment_length - 1) == comment.substr(0, comment_length - 1))</comment>
			<if pos:line="3453" pos:column="25">if <condition pos:line="3453" pos:column="28">(<expr><call><name pos:line="3453" pos:column="29">generic_strnicmp</name><argument_list pos:line="3453" pos:column="45">(<argument><expr><call><name><name pos:line="3453" pos:column="46">linebufStr</name><op:operator pos:line="3453" pos:column="56">.</op:operator><name pos:line="3453" pos:column="57">c_str</name></name><argument_list pos:line="3453" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3453" pos:column="66">comment</name><op:operator pos:line="3453" pos:column="73">.</op:operator><name pos:line="3453" pos:column="74">c_str</name></name><argument_list pos:line="3453" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3453" pos:column="83">comment_length</name> <op:operator pos:line="3453" pos:column="98">-</op:operator><lit:literal type="number" pos:line="3453" pos:column="99">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3453" pos:column="102">==</op:operator> <lit:literal type="number" pos:line="3453" pos:column="105">0</lit:literal></expr>)</condition><then pos:line="3453" pos:column="107">
				<block pos:line="3454" pos:column="33">{
                <decl_stmt><decl><type><name pos:line="3455" pos:column="17">int</name></type> <name pos:line="3455" pos:column="21">len</name> <init pos:line="3455" pos:column="25">= <expr><op:operator pos:line="3455" pos:column="27">(</op:operator><call><name pos:line="3455" pos:column="28">generic_strnicmp</name><argument_list pos:line="3455" pos:column="44">(<argument><expr><call><name><name pos:line="3455" pos:column="45">linebufStr</name><op:operator pos:line="3455" pos:column="55">.</op:operator><name pos:line="3455" pos:column="56">substr</name></name><argument_list pos:line="3455" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="3455" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3455" pos:column="66">comment_length</name></expr></argument>)</argument_list></call><op:operator pos:line="3455" pos:column="81">.</op:operator><call><name pos:line="3455" pos:column="82">c_str</name><argument_list pos:line="3455" pos:column="87">()</argument_list></call></expr></argument>,<argument><expr><call><name><name pos:line="3455" pos:column="90">comment</name><op:operator pos:line="3455" pos:column="97">.</op:operator><name pos:line="3455" pos:column="98">c_str</name></name><argument_list pos:line="3455" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3455" pos:column="107">comment_length</name></expr></argument>)</argument_list></call> <op:operator pos:line="3455" pos:column="123">==</op:operator> <lit:literal type="number" pos:line="3455" pos:column="126">0</lit:literal><op:operator pos:line="3455" pos:column="127">)</op:operator><op:operator pos:line="3455" pos:column="128">?</op:operator><name pos:line="3455" pos:column="129">comment_length</name><op:operator pos:line="3455" pos:column="143">:</op:operator><name pos:line="3455" pos:column="144">comment_length</name> <op:operator pos:line="3455" pos:column="159">-</op:operator> <lit:literal type="number" pos:line="3455" pos:column="161">1</lit:literal></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="3457" pos:column="17">_pEditView</name><op:operator pos:line="3457" pos:column="27">-&gt;</op:operator><name pos:line="3457" pos:column="29">execute</name></name><argument_list pos:line="3457" pos:column="36">(<argument><expr><name pos:line="3457" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="3457" pos:column="49">lineIndent</name></expr></argument>, <argument><expr><name pos:line="3457" pos:column="61">lineIndent</name> <op:operator pos:line="3457" pos:column="72">+</op:operator> <name pos:line="3457" pos:column="74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="3458" pos:column="41">_pEditView</name><op:operator pos:line="3458" pos:column="51">-&gt;</op:operator><name pos:line="3458" pos:column="53">replaceSelWith</name></name><argument_list pos:line="3458" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="3458" pos:column="68">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<if pos:line="3460" pos:column="41">if <condition pos:line="3460" pos:column="44">(<expr><name pos:line="3460" pos:column="45">i</name> <op:operator pos:line="3460" pos:column="47">==</op:operator> <name pos:line="3460" pos:column="50">selStartLine</name></expr>)</condition><then pos:line="3460" pos:column="63"> <comment type="line" pos:line="3460" pos:column="64">// is this the first selected line?</comment>
					<expr_stmt><expr><name pos:line="3461" pos:column="41">selectionStart</name> <op:operator pos:line="3461" pos:column="56">-=</op:operator> <name pos:line="3461" pos:column="59">len</name></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3462" pos:column="33">selectionEnd</name> <op:operator pos:line="3462" pos:column="46">-=</op:operator> <name pos:line="3462" pos:column="49">len</name></expr>;</expr_stmt> <comment type="line" pos:line="3462" pos:column="54">// every iteration</comment>
				<expr_stmt><expr><name pos:line="3463" pos:column="33">nUncomments</name><op:operator pos:line="3463" pos:column="44">++</op:operator></expr>;</expr_stmt>
					<continue pos:line="3464" pos:column="41">continue;</continue>
				}</block></then></if>
			}</block></then></if>
		<if pos:line="3467" pos:column="17">if <condition pos:line="3467" pos:column="20">(<expr><op:operator pos:line="3467" pos:column="21">(</op:operator><name pos:line="3467" pos:column="22">currCommentMode</name> <op:operator pos:line="3467" pos:column="38">==</op:operator> <name pos:line="3467" pos:column="41">cm_toggle</name><op:operator pos:line="3467" pos:column="50">)</op:operator> <op:operator pos:line="3467" pos:column="52">||</op:operator> <op:operator pos:line="3467" pos:column="55">(</op:operator><name pos:line="3467" pos:column="56">currCommentMode</name> <op:operator pos:line="3467" pos:column="72">==</op:operator> <name pos:line="3467" pos:column="75">cm_comment</name><op:operator pos:line="3467" pos:column="85">)</op:operator></expr>)</condition><then pos:line="3467" pos:column="87">
		<block pos:line="3468" pos:column="17">{
			<if pos:line="3469" pos:column="25">if <condition pos:line="3469" pos:column="28">(<expr><name pos:line="3469" pos:column="29">i</name> <op:operator pos:line="3469" pos:column="31">==</op:operator> <name pos:line="3469" pos:column="34">selStartLine</name></expr>)</condition><then pos:line="3469" pos:column="47"> <comment type="line" pos:line="3469" pos:column="48">// is this the first selected line?</comment>
				<expr_stmt><expr><name pos:line="3470" pos:column="33">selectionStart</name> <op:operator pos:line="3470" pos:column="48">+=</op:operator> <name pos:line="3470" pos:column="51">comment_length</name></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="3471" pos:column="25">selectionEnd</name> <op:operator pos:line="3471" pos:column="38">+=</op:operator> <name pos:line="3471" pos:column="41">comment_length</name></expr>;</expr_stmt> <comment type="line" pos:line="3471" pos:column="57">// every iteration</comment>
			<expr_stmt><expr><call><name><name pos:line="3472" pos:column="25">_pEditView</name><op:operator pos:line="3472" pos:column="35">-&gt;</op:operator><name pos:line="3472" pos:column="37">insertGenericTextFrom</name></name><argument_list pos:line="3472" pos:column="58">(<argument><expr><name pos:line="3472" pos:column="59">lineIndent</name></expr></argument>, <argument><expr><call><name><name pos:line="3472" pos:column="71">comment</name><op:operator pos:line="3472" pos:column="78">.</op:operator><name pos:line="3472" pos:column="79">c_str</name></name><argument_list pos:line="3472" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
     }</block></for>
    <comment type="line" pos:line="3475" pos:column="5">// after uncommenting selection may promote itself to the lines</comment>
    <comment type="line" pos:line="3476" pos:column="5">// before the first initially selected line;</comment>
    <comment type="line" pos:line="3477" pos:column="5">// another problem - if only comment symbol was selected;</comment>
    <if pos:line="3478" pos:column="5">if <condition pos:line="3478" pos:column="8">(<expr><name pos:line="3478" pos:column="9">selectionStart</name> <op:operator pos:line="3478" pos:column="24">&lt;</op:operator> <name pos:line="3478" pos:column="26">firstSelLineStart</name></expr>)</condition><then pos:line="3478" pos:column="44">
	<block pos:line="3479" pos:column="9">{
        <if pos:line="3480" pos:column="9">if <condition pos:line="3480" pos:column="12">(<expr><name pos:line="3480" pos:column="13">selectionStart</name> <op:operator pos:line="3480" pos:column="28">&gt;=</op:operator> <name pos:line="3480" pos:column="31">selectionEnd</name> <op:operator pos:line="3480" pos:column="44">-</op:operator> <op:operator pos:line="3480" pos:column="46">(</op:operator><name pos:line="3480" pos:column="47">comment_length</name> <op:operator pos:line="3480" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="3480" pos:column="64">1</lit:literal><op:operator pos:line="3480" pos:column="65">)</op:operator></expr>)</condition><then pos:line="3480" pos:column="67">
			<expr_stmt><expr><name pos:line="3481" pos:column="25">selectionEnd</name> <op:operator pos:line="3481" pos:column="38">=</op:operator> <name pos:line="3481" pos:column="40">firstSelLineStart</name></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="3482" pos:column="9">selectionStart</name> <op:operator pos:line="3482" pos:column="24">=</op:operator> <name pos:line="3482" pos:column="26">firstSelLineStart</name></expr>;</expr_stmt>
    }</block></then></if>
    <if pos:line="3484" pos:column="5">if <condition pos:line="3484" pos:column="8">(<expr><name pos:line="3484" pos:column="9">move_caret</name></expr>)</condition><then pos:line="3484" pos:column="20">
	<block pos:line="3485" pos:column="9">{
        <comment type="line" pos:line="3486" pos:column="9">// moving caret to the beginning of selected block</comment>
        <expr_stmt><expr><call><name><name pos:line="3487" pos:column="9">_pEditView</name><op:operator pos:line="3487" pos:column="19">-&gt;</op:operator><name pos:line="3487" pos:column="21">execute</name></name><argument_list pos:line="3487" pos:column="28">(<argument><expr><name pos:line="3487" pos:column="29">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="3487" pos:column="42">selectionEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="3488" pos:column="9">_pEditView</name><op:operator pos:line="3488" pos:column="19">-&gt;</op:operator><name pos:line="3488" pos:column="21">execute</name></name><argument_list pos:line="3488" pos:column="28">(<argument><expr><name pos:line="3488" pos:column="29">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><name pos:line="3488" pos:column="48">selectionStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
	<else pos:line="3490" pos:column="9">else
	<block pos:line="3491" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="3492" pos:column="9">_pEditView</name><op:operator pos:line="3492" pos:column="19">-&gt;</op:operator><name pos:line="3492" pos:column="21">execute</name></name><argument_list pos:line="3492" pos:column="28">(<argument><expr><name pos:line="3492" pos:column="29">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="3492" pos:column="41">selectionStart</name></expr></argument>, <argument><expr><name pos:line="3492" pos:column="57">selectionEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
    <expr_stmt><expr><call><name><name pos:line="3494" pos:column="5">_pEditView</name><op:operator pos:line="3494" pos:column="15">-&gt;</op:operator><name pos:line="3494" pos:column="17">execute</name></name><argument_list pos:line="3494" pos:column="24">(<argument><expr><name pos:line="3494" pos:column="25">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<comment type="line" pos:line="3496" pos:column="9">//--FLS: undoStreamComment: If there were no block-comments to un-comment try uncommenting of stream-comment.</comment>
	<if pos:line="3497" pos:column="9">if <condition pos:line="3497" pos:column="12">(<expr><op:operator pos:line="3497" pos:column="13">(</op:operator><name pos:line="3497" pos:column="14">currCommentMode</name> <op:operator pos:line="3497" pos:column="30">==</op:operator> <name pos:line="3497" pos:column="33">cm_uncomment</name><op:operator pos:line="3497" pos:column="45">)</op:operator> <op:operator pos:line="3497" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="3497" pos:column="50">(</op:operator><name pos:line="3497" pos:column="51">nUncomments</name> <op:operator pos:line="3497" pos:column="63">==</op:operator> <lit:literal type="number" pos:line="3497" pos:column="66">0</lit:literal><op:operator pos:line="3497" pos:column="67">)</op:operator></expr>)</condition><then pos:line="3497" pos:column="69"> <block pos:line="3497" pos:column="70">{
		<return pos:line="3498" pos:column="17">return <expr><call><name pos:line="3498" pos:column="24">undoStreamComment</name><argument_list pos:line="3498" pos:column="41">()</argument_list></call></expr>;</return>
	}</block></then></if>
    <return pos:line="3500" pos:column="5">return <expr><lit:literal type="boolean" pos:line="3500" pos:column="12">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3503" pos:column="1">bool</name></type> <name><name pos:line="3503" pos:column="6">Notepad_plus</name><op:operator pos:line="3503" pos:column="18">::</op:operator><name pos:line="3503" pos:column="20">doStreamComment</name></name><parameter_list pos:line="3503" pos:column="35">()</parameter_list>
<block pos:line="3504" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3505" pos:column="9">const</specifier> <name pos:line="3505" pos:column="15">TCHAR</name> <type:modifier pos:line="3505" pos:column="21">*</type:modifier></type><name pos:line="3505" pos:column="22">commentStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="3506" pos:column="9">const</specifier> <name pos:line="3506" pos:column="15">TCHAR</name> <type:modifier pos:line="3506" pos:column="21">*</type:modifier></type><name pos:line="3506" pos:column="22">commentEnd</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3508" pos:column="9">generic_string</name></type> <name pos:line="3508" pos:column="24">symbolStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3509" pos:column="9">generic_string</name></type> <name pos:line="3509" pos:column="24">symbolEnd</name></decl>;</decl_stmt>

	<comment type="line" pos:line="3511" pos:column="9">//--FLS: BlockToStreamComment:</comment>
	<decl_stmt><decl><type><specifier pos:line="3512" pos:column="9">const</specifier> <name pos:line="3512" pos:column="15">TCHAR</name> <type:modifier pos:line="3512" pos:column="21">*</type:modifier></type><name pos:line="3512" pos:column="22">commentLineSybol</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3513" pos:column="9">generic_string</name></type> <name pos:line="3513" pos:column="24">symbol</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3515" pos:column="9">Buffer</name> <type:modifier pos:line="3515" pos:column="16">*</type:modifier></type> <name pos:line="3515" pos:column="18">buf</name> <init pos:line="3515" pos:column="22">= <expr><call><name><name pos:line="3515" pos:column="24">_pEditView</name><op:operator pos:line="3515" pos:column="34">-&gt;</op:operator><name pos:line="3515" pos:column="36">getCurrentBuffer</name></name><argument_list pos:line="3515" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="3516" pos:column="9">//--FLS: Avoid side-effects (e.g. cursor moves number of comment-characters) when file is read-only.</comment>
	<if pos:line="3517" pos:column="9">if <condition pos:line="3517" pos:column="12">(<expr><call><name><name pos:line="3517" pos:column="13">buf</name><op:operator pos:line="3517" pos:column="16">-&gt;</op:operator><name pos:line="3517" pos:column="18">isReadOnly</name></name><argument_list pos:line="3517" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="3517" pos:column="31"> 
		<return pos:line="3518" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3518" pos:column="24">false</lit:literal></expr>;</return></then></if>
		
	<if pos:line="3520" pos:column="9">if <condition pos:line="3520" pos:column="12">(<expr><call><name><name pos:line="3520" pos:column="13">buf</name><op:operator pos:line="3520" pos:column="16">-&gt;</op:operator><name pos:line="3520" pos:column="18">getLangType</name></name><argument_list pos:line="3520" pos:column="29">()</argument_list></call> <op:operator pos:line="3520" pos:column="32">==</op:operator> <name pos:line="3520" pos:column="35">L_USER</name></expr>)</condition><then pos:line="3520" pos:column="42">
	<block pos:line="3521" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3522" pos:column="17">UserLangContainer</name> <type:modifier pos:line="3522" pos:column="35">*</type:modifier></type> <name pos:line="3522" pos:column="37">userLangContainer</name> <init pos:line="3522" pos:column="55">= <expr><call><name><name pos:line="3522" pos:column="57">NppParameters</name><op:operator pos:line="3522" pos:column="70">::</op:operator><name pos:line="3522" pos:column="72">getInstance</name></name><argument_list pos:line="3522" pos:column="83">()</argument_list></call><op:operator pos:line="3522" pos:column="85">-&gt;</op:operator><call><name pos:line="3522" pos:column="87">getULCFromName</name><argument_list pos:line="3522" pos:column="101">(<argument><expr><call><name><name pos:line="3522" pos:column="102">buf</name><op:operator pos:line="3522" pos:column="105">-&gt;</op:operator><name pos:line="3522" pos:column="107">getUserDefineLangName</name></name><argument_list pos:line="3522" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="3524" pos:column="17">if <condition pos:line="3524" pos:column="20">(<expr><op:operator pos:line="3524" pos:column="21">!</op:operator><name pos:line="3524" pos:column="22">userLangContainer</name></expr>)</condition><then pos:line="3524" pos:column="40">
			<return pos:line="3525" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3525" pos:column="32">false</lit:literal></expr>;</return></then></if>

		<comment type="line" pos:line="3527" pos:column="17">//--FLS: BlockToStreamComment: Next two lines needed to decide, if block-comment can be called below!</comment>
		<expr_stmt><expr><name pos:line="3528" pos:column="17">symbol</name> <op:operator pos:line="3528" pos:column="24">=</op:operator> <call><name pos:line="3528" pos:column="26">extractSymbol</name><argument_list pos:line="3528" pos:column="39">(<argument><expr><lit:literal type="char" pos:line="3528" pos:column="40">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3528" pos:column="45">'0'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3528" pos:column="50">userLangContainer</name><op:operator pos:line="3528" pos:column="67">-&gt;</op:operator><name pos:line="3528" pos:column="69">_keywordLists</name><index pos:line="3528" pos:column="82">[<expr><name pos:line="3528" pos:column="83">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3529" pos:column="17">commentLineSybol</name> <op:operator pos:line="3529" pos:column="34">=</op:operator> <call><name><name pos:line="3529" pos:column="36">symbol</name><op:operator pos:line="3529" pos:column="42">.</op:operator><name pos:line="3529" pos:column="43">c_str</name></name><argument_list pos:line="3529" pos:column="48">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="3531" pos:column="17">symbolStart</name> <op:operator pos:line="3531" pos:column="29">=</op:operator> <call><name pos:line="3531" pos:column="31">extractSymbol</name><argument_list pos:line="3531" pos:column="44">(<argument><expr><lit:literal type="char" pos:line="3531" pos:column="45">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3531" pos:column="50">'1'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3531" pos:column="55">userLangContainer</name><op:operator pos:line="3531" pos:column="72">-&gt;</op:operator><name pos:line="3531" pos:column="74">_keywordLists</name><index pos:line="3531" pos:column="87">[<expr><name pos:line="3531" pos:column="88">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3532" pos:column="17">commentStart</name> <op:operator pos:line="3532" pos:column="30">=</op:operator> <call><name><name pos:line="3532" pos:column="32">symbolStart</name><op:operator pos:line="3532" pos:column="43">.</op:operator><name pos:line="3532" pos:column="44">c_str</name></name><argument_list pos:line="3532" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3533" pos:column="17">symbolEnd</name> <op:operator pos:line="3533" pos:column="27">=</op:operator> <call><name pos:line="3533" pos:column="29">extractSymbol</name><argument_list pos:line="3533" pos:column="42">(<argument><expr><lit:literal type="char" pos:line="3533" pos:column="43">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3533" pos:column="48">'2'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3533" pos:column="53">userLangContainer</name><op:operator pos:line="3533" pos:column="70">-&gt;</op:operator><name pos:line="3533" pos:column="72">_keywordLists</name><index pos:line="3533" pos:column="85">[<expr><name pos:line="3533" pos:column="86">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3534" pos:column="17">commentEnd</name> <op:operator pos:line="3534" pos:column="28">=</op:operator> <call><name><name pos:line="3534" pos:column="30">symbolEnd</name><op:operator pos:line="3534" pos:column="39">.</op:operator><name pos:line="3534" pos:column="40">c_str</name></name><argument_list pos:line="3534" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3536" pos:column="9">else
	<block pos:line="3537" pos:column="9">{
		<comment type="line" pos:line="3538" pos:column="17">//--FLS: BlockToStreamComment: Next line needed to decide, if block-comment can be called below!</comment>
		<expr_stmt><expr><name pos:line="3539" pos:column="17">commentLineSybol</name> <op:operator pos:line="3539" pos:column="34">=</op:operator> <call><name><name pos:line="3539" pos:column="36">buf</name><op:operator pos:line="3539" pos:column="39">-&gt;</op:operator><name pos:line="3539" pos:column="41">getCommentLineSymbol</name></name><argument_list pos:line="3539" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3540" pos:column="17">commentStart</name> <op:operator pos:line="3540" pos:column="30">=</op:operator> <call><name><name pos:line="3540" pos:column="32">buf</name><op:operator pos:line="3540" pos:column="35">-&gt;</op:operator><name pos:line="3540" pos:column="37">getCommentStart</name></name><argument_list pos:line="3540" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3541" pos:column="17">commentEnd</name> <op:operator pos:line="3541" pos:column="28">=</op:operator> <call><name><name pos:line="3541" pos:column="30">buf</name><op:operator pos:line="3541" pos:column="33">-&gt;</op:operator><name pos:line="3541" pos:column="35">getCommentEnd</name></name><argument_list pos:line="3541" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<comment type="line" pos:line="3544" pos:column="9">// if ((!commentStart) || (!commentStart[0]))</comment>
	<comment type="line" pos:line="3545" pos:column="9">// 		return false;</comment>
	<comment type="line" pos:line="3546" pos:column="9">// if ((!commentEnd) || (!commentEnd[0]))</comment>
	<comment type="line" pos:line="3547" pos:column="9">// 		return false;</comment>
	<comment type="line" pos:line="3548" pos:column="9">//--FLS: BlockToStreamComment: If there is no stream-comment symbol, try the block comment:</comment>
	<if pos:line="3549" pos:column="9">if <condition pos:line="3549" pos:column="12">(<expr><op:operator pos:line="3549" pos:column="13">(</op:operator><op:operator pos:line="3549" pos:column="14">!</op:operator><name pos:line="3549" pos:column="15">commentStart</name><op:operator pos:line="3549" pos:column="27">)</op:operator> <op:operator pos:line="3549" pos:column="29">||</op:operator> <op:operator pos:line="3549" pos:column="32">(</op:operator><op:operator pos:line="3549" pos:column="33">!</op:operator><name><name pos:line="3549" pos:column="34">commentStart</name><index pos:line="3549" pos:column="46">[<expr><lit:literal type="number" pos:line="3549" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="3549" pos:column="49">)</op:operator> <op:operator pos:line="3549" pos:column="51">||</op:operator> <op:operator pos:line="3549" pos:column="54">(</op:operator><name pos:line="3549" pos:column="55">commentStart</name> <op:operator pos:line="3549" pos:column="68">==</op:operator> <name pos:line="3549" pos:column="71">NULL</name><op:operator pos:line="3549" pos:column="75">)</op:operator> <op:operator pos:line="3549" pos:column="77">||</op:operator> <op:operator pos:line="3549" pos:column="80">(</op:operator><op:operator pos:line="3549" pos:column="81">!</op:operator><name pos:line="3549" pos:column="82">commentEnd</name><op:operator pos:line="3549" pos:column="92">)</op:operator> <op:operator pos:line="3549" pos:column="94">||</op:operator> <op:operator pos:line="3549" pos:column="97">(</op:operator><op:operator pos:line="3549" pos:column="98">!</op:operator><name><name pos:line="3549" pos:column="99">commentEnd</name><index pos:line="3549" pos:column="109">[<expr><lit:literal type="number" pos:line="3549" pos:column="110">0</lit:literal></expr>]</index></name><op:operator pos:line="3549" pos:column="112">)</op:operator> <op:operator pos:line="3549" pos:column="114">||</op:operator> <op:operator pos:line="3549" pos:column="117">(</op:operator><name pos:line="3549" pos:column="118">commentEnd</name> <op:operator pos:line="3549" pos:column="129">==</op:operator> <name pos:line="3549" pos:column="132">NULL</name><op:operator pos:line="3549" pos:column="136">)</op:operator></expr>)</condition><then pos:line="3549" pos:column="138"> <block pos:line="3549" pos:column="139">{
		<if pos:line="3550" pos:column="17">if <condition pos:line="3550" pos:column="20">(<expr><op:operator pos:line="3550" pos:column="21">!</op:operator><op:operator pos:line="3550" pos:column="22">(</op:operator><op:operator pos:line="3550" pos:column="23">!</op:operator><name pos:line="3550" pos:column="24">commentLineSybol</name> <op:operator pos:line="3550" pos:column="41">||</op:operator> <op:operator pos:line="3550" pos:column="44">!</op:operator><name><name pos:line="3550" pos:column="45">commentLineSybol</name><index pos:line="3550" pos:column="61">[<expr><lit:literal type="number" pos:line="3550" pos:column="62">0</lit:literal></expr>]</index></name> <op:operator pos:line="3550" pos:column="65">||</op:operator> <name pos:line="3550" pos:column="68">commentLineSybol</name> <op:operator pos:line="3550" pos:column="85">==</op:operator> <name pos:line="3550" pos:column="88">NULL</name><op:operator pos:line="3550" pos:column="92">)</op:operator></expr>)</condition><then pos:line="3550" pos:column="94"> 
			<return pos:line="3551" pos:column="25">return <expr><call><name pos:line="3551" pos:column="32">doBlockComment</name><argument_list pos:line="3551" pos:column="46">(<argument><expr><name pos:line="3551" pos:column="47">cm_comment</name></expr></argument>)</argument_list></call></expr>;</return></then>
		<else pos:line="3552" pos:column="17">else
		<return pos:line="3553" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3553" pos:column="24">false</lit:literal></expr>;</return></else></if>
	}</block></then></if>

	<function_decl><type><name pos:line="3556" pos:column="9">generic_string</name></type> <name pos:line="3556" pos:column="24">start_comment</name><parameter_list pos:line="3556" pos:column="37">(<param><decl><type><name pos:line="3556" pos:column="38">commentStart</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="3557" pos:column="9">generic_string</name></type> <name pos:line="3557" pos:column="24">end_comment</name><parameter_list pos:line="3557" pos:column="35">(<param><decl><type><name pos:line="3557" pos:column="36">commentEnd</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="3558" pos:column="9">generic_string</name></type> <name pos:line="3558" pos:column="24">white_space</name><argument_list pos:line="3558" pos:column="35">(<argument><expr><call><name pos:line="3558" pos:column="36">TEXT</name><argument_list pos:line="3558" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="3558" pos:column="41">" "</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="3560" pos:column="9">start_comment</name> <op:operator pos:line="3560" pos:column="23">+=</op:operator> <name pos:line="3560" pos:column="26">white_space</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3561" pos:column="9">white_space</name> <op:operator pos:line="3561" pos:column="21">+=</op:operator> <name pos:line="3561" pos:column="24">end_comment</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3562" pos:column="9">end_comment</name> <op:operator pos:line="3562" pos:column="21">=</op:operator> <name pos:line="3562" pos:column="23">white_space</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="3563" pos:column="9">size_t</name></type> <name pos:line="3563" pos:column="16">start_comment_length</name> <init pos:line="3563" pos:column="37">= <expr><call><name><name pos:line="3563" pos:column="39">start_comment</name><op:operator pos:line="3563" pos:column="52">.</op:operator><name pos:line="3563" pos:column="53">length</name></name><argument_list pos:line="3563" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3564" pos:column="9">size_t</name></type> <name pos:line="3564" pos:column="16">selectionStart</name> <init pos:line="3564" pos:column="31">= <expr><call><name><name pos:line="3564" pos:column="33">_pEditView</name><op:operator pos:line="3564" pos:column="43">-&gt;</op:operator><name pos:line="3564" pos:column="45">execute</name></name><argument_list pos:line="3564" pos:column="52">(<argument><expr><name pos:line="3564" pos:column="53">SCI_GETSELECTIONSTART</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3565" pos:column="9">size_t</name></type> <name pos:line="3565" pos:column="16">selectionEnd</name> <init pos:line="3565" pos:column="29">= <expr><call><name><name pos:line="3565" pos:column="31">_pEditView</name><op:operator pos:line="3565" pos:column="41">-&gt;</op:operator><name pos:line="3565" pos:column="43">execute</name></name><argument_list pos:line="3565" pos:column="50">(<argument><expr><name pos:line="3565" pos:column="51">SCI_GETSELECTIONEND</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3566" pos:column="9">size_t</name></type> <name pos:line="3566" pos:column="16">caretPosition</name> <init pos:line="3566" pos:column="30">= <expr><call><name><name pos:line="3566" pos:column="32">_pEditView</name><op:operator pos:line="3566" pos:column="42">-&gt;</op:operator><name pos:line="3566" pos:column="44">execute</name></name><argument_list pos:line="3566" pos:column="51">(<argument><expr><name pos:line="3566" pos:column="52">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="3567" pos:column="9">// checking if caret is located in _beginning_ of selected block</comment>
	<decl_stmt><decl><type><name pos:line="3568" pos:column="9">bool</name></type> <name pos:line="3568" pos:column="14">move_caret</name> <init pos:line="3568" pos:column="25">= <expr><name pos:line="3568" pos:column="27">caretPosition</name> <op:operator pos:line="3568" pos:column="41">&lt;</op:operator> <name pos:line="3568" pos:column="43">selectionEnd</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="3570" pos:column="9">// if there is no selection?</comment>
	<if pos:line="3571" pos:column="9">if <condition pos:line="3571" pos:column="12">(<expr><name pos:line="3571" pos:column="13">selectionEnd</name> <op:operator pos:line="3571" pos:column="26">-</op:operator> <name pos:line="3571" pos:column="28">selectionStart</name> <op:operator pos:line="3571" pos:column="43">&lt;=</op:operator> <lit:literal type="number" pos:line="3571" pos:column="46">0</lit:literal></expr>)</condition><then pos:line="3571" pos:column="48">
	<block pos:line="3572" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3573" pos:column="17">int</name></type> <name pos:line="3573" pos:column="21">selLine</name> <init pos:line="3573" pos:column="29">= <expr><call><name><name pos:line="3573" pos:column="31">_pEditView</name><op:operator pos:line="3573" pos:column="41">-&gt;</op:operator><name pos:line="3573" pos:column="43">execute</name></name><argument_list pos:line="3573" pos:column="50">(<argument><expr><name pos:line="3573" pos:column="51">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="3573" pos:column="73">selectionStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="3574" pos:column="17">selectionStart</name> <op:operator pos:line="3574" pos:column="32">=</op:operator> <call><name><name pos:line="3574" pos:column="34">_pEditView</name><op:operator pos:line="3574" pos:column="44">-&gt;</op:operator><name pos:line="3574" pos:column="46">execute</name></name><argument_list pos:line="3574" pos:column="53">(<argument><expr><name pos:line="3574" pos:column="54">SCI_GETLINEINDENTPOSITION</name></expr></argument>, <argument><expr><name pos:line="3574" pos:column="81">selLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3575" pos:column="17">selectionEnd</name> <op:operator pos:line="3575" pos:column="30">=</op:operator> <call><name><name pos:line="3575" pos:column="32">_pEditView</name><op:operator pos:line="3575" pos:column="42">-&gt;</op:operator><name pos:line="3575" pos:column="44">execute</name></name><argument_list pos:line="3575" pos:column="51">(<argument><expr><name pos:line="3575" pos:column="52">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="3575" pos:column="76">selLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="3577" pos:column="9">_pEditView</name><op:operator pos:line="3577" pos:column="19">-&gt;</op:operator><name pos:line="3577" pos:column="21">execute</name></name><argument_list pos:line="3577" pos:column="28">(<argument><expr><name pos:line="3577" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3578" pos:column="9">_pEditView</name><op:operator pos:line="3578" pos:column="19">-&gt;</op:operator><name pos:line="3578" pos:column="21">insertGenericTextFrom</name></name><argument_list pos:line="3578" pos:column="42">(<argument><expr><name pos:line="3578" pos:column="43">selectionStart</name></expr></argument>, <argument><expr><call><name><name pos:line="3578" pos:column="59">start_comment</name><op:operator pos:line="3578" pos:column="72">.</op:operator><name pos:line="3578" pos:column="73">c_str</name></name><argument_list pos:line="3578" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3579" pos:column="9">selectionEnd</name> <op:operator pos:line="3579" pos:column="22">+=</op:operator> <name pos:line="3579" pos:column="25">start_comment_length</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3580" pos:column="9">selectionStart</name> <op:operator pos:line="3580" pos:column="24">+=</op:operator> <name pos:line="3580" pos:column="27">start_comment_length</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3581" pos:column="9">_pEditView</name><op:operator pos:line="3581" pos:column="19">-&gt;</op:operator><name pos:line="3581" pos:column="21">insertGenericTextFrom</name></name><argument_list pos:line="3581" pos:column="42">(<argument><expr><name pos:line="3581" pos:column="43">selectionEnd</name></expr></argument>, <argument><expr><call><name><name pos:line="3581" pos:column="57">end_comment</name><op:operator pos:line="3581" pos:column="68">.</op:operator><name pos:line="3581" pos:column="69">c_str</name></name><argument_list pos:line="3581" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3582" pos:column="9">if <condition pos:line="3582" pos:column="12">(<expr><name pos:line="3582" pos:column="13">move_caret</name></expr>)</condition><then pos:line="3582" pos:column="24">
	<block pos:line="3583" pos:column="9">{
		<comment type="line" pos:line="3584" pos:column="17">// moving caret to the beginning of selected block</comment>
		<expr_stmt><expr><call><name><name pos:line="3585" pos:column="17">_pEditView</name><op:operator pos:line="3585" pos:column="27">-&gt;</op:operator><name pos:line="3585" pos:column="29">execute</name></name><argument_list pos:line="3585" pos:column="36">(<argument><expr><name pos:line="3585" pos:column="37">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="3585" pos:column="50">selectionEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3586" pos:column="17">_pEditView</name><op:operator pos:line="3586" pos:column="27">-&gt;</op:operator><name pos:line="3586" pos:column="29">execute</name></name><argument_list pos:line="3586" pos:column="36">(<argument><expr><name pos:line="3586" pos:column="37">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><name pos:line="3586" pos:column="56">selectionStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3588" pos:column="9">else
	<block pos:line="3589" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="3590" pos:column="17">_pEditView</name><op:operator pos:line="3590" pos:column="27">-&gt;</op:operator><name pos:line="3590" pos:column="29">execute</name></name><argument_list pos:line="3590" pos:column="36">(<argument><expr><name pos:line="3590" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="3590" pos:column="49">selectionStart</name></expr></argument>, <argument><expr><name pos:line="3590" pos:column="65">selectionEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="3592" pos:column="9">_pEditView</name><op:operator pos:line="3592" pos:column="19">-&gt;</op:operator><name pos:line="3592" pos:column="21">execute</name></name><argument_list pos:line="3592" pos:column="28">(<argument><expr><name pos:line="3592" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="3593" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3593" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3596" pos:column="1">bool</name></type> <name><name pos:line="3596" pos:column="6">Notepad_plus</name><op:operator pos:line="3596" pos:column="18">::</op:operator><name pos:line="3596" pos:column="20">saveScintillaParams</name></name><parameter_list pos:line="3596" pos:column="39">()</parameter_list>
<block pos:line="3597" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3598" pos:column="9">NppParameters</name> <type:modifier pos:line="3598" pos:column="23">*</type:modifier></type> <name pos:line="3598" pos:column="25">pNppParam</name> <init pos:line="3598" pos:column="35">= <expr><call><name><name pos:line="3598" pos:column="37">NppParameters</name><op:operator pos:line="3598" pos:column="50">::</op:operator><name pos:line="3598" pos:column="52">getInstance</name></name><argument_list pos:line="3598" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3599" pos:column="9">ScintillaViewParams</name> <type:modifier pos:line="3599" pos:column="29">&amp;</type:modifier></type> <name pos:line="3599" pos:column="31">svp</name> <init pos:line="3599" pos:column="35">= <expr><op:operator pos:line="3599" pos:column="37">(</op:operator><name pos:line="3599" pos:column="38">ScintillaViewParams</name> <op:operator pos:line="3599" pos:column="58">&amp;</op:operator><op:operator pos:line="3599" pos:column="59">)</op:operator><call><name><name pos:line="3599" pos:column="60">pNppParam</name><op:operator pos:line="3599" pos:column="69">-&gt;</op:operator><name pos:line="3599" pos:column="71">getSVP</name></name><argument_list pos:line="3599" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="3600" pos:column="9">svp</name><op:operator pos:line="3600" pos:column="12">.</op:operator><name pos:line="3600" pos:column="13">_zoom</name></name> <op:operator pos:line="3600" pos:column="19">=</op:operator> <call><name pos:line="3600" pos:column="21">int</name><argument_list pos:line="3600" pos:column="24">(<argument><expr><call><name><name pos:line="3600" pos:column="25">_mainEditView</name><op:operator pos:line="3600" pos:column="38">.</op:operator><name pos:line="3600" pos:column="39">execute</name></name><argument_list pos:line="3600" pos:column="46">(<argument><expr><name pos:line="3600" pos:column="47">SCI_GETZOOM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3601" pos:column="9">svp</name><op:operator pos:line="3601" pos:column="12">.</op:operator><name pos:line="3601" pos:column="13">_zoom2</name></name> <op:operator pos:line="3601" pos:column="20">=</op:operator> <call><name pos:line="3601" pos:column="22">int</name><argument_list pos:line="3601" pos:column="25">(<argument><expr><call><name><name pos:line="3601" pos:column="26">_subEditView</name><op:operator pos:line="3601" pos:column="38">.</op:operator><name pos:line="3601" pos:column="39">execute</name></name><argument_list pos:line="3601" pos:column="46">(<argument><expr><name pos:line="3601" pos:column="47">SCI_GETZOOM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="3602" pos:column="9">return <expr><op:operator pos:line="3602" pos:column="16">(</op:operator><call><name><name pos:line="3602" pos:column="17">NppParameters</name><op:operator pos:line="3602" pos:column="30">::</op:operator><name pos:line="3602" pos:column="32">getInstance</name></name><argument_list pos:line="3602" pos:column="43">()</argument_list></call><op:operator pos:line="3602" pos:column="45">)</op:operator><op:operator pos:line="3602" pos:column="46">-&gt;</op:operator><call><name pos:line="3602" pos:column="48">writeScintillaParams</name><argument_list pos:line="3602" pos:column="68">(<argument><expr><name pos:line="3602" pos:column="69">svp</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="3605" pos:column="1">bool</name></type> <name><name pos:line="3605" pos:column="6">Notepad_plus</name><op:operator pos:line="3605" pos:column="18">::</op:operator><name pos:line="3605" pos:column="20">addCurrentMacro</name></name><parameter_list pos:line="3605" pos:column="35">()</parameter_list>
<block pos:line="3606" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3607" pos:column="9">vector</name><argument_list pos:line="3607" pos:column="15">&lt;<argument><expr><name pos:line="3607" pos:column="16">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="3607" pos:column="31">&amp;</type:modifier></type> <name pos:line="3607" pos:column="33">theMacros</name> <init pos:line="3607" pos:column="43">= <expr><op:operator pos:line="3607" pos:column="45">(</op:operator><call><name><name pos:line="3607" pos:column="46">NppParameters</name><op:operator pos:line="3607" pos:column="59">::</op:operator><name pos:line="3607" pos:column="61">getInstance</name></name><argument_list pos:line="3607" pos:column="72">()</argument_list></call><op:operator pos:line="3607" pos:column="74">)</op:operator><op:operator pos:line="3607" pos:column="75">-&gt;</op:operator><call><name pos:line="3607" pos:column="77">getMacroList</name><argument_list pos:line="3607" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3609" pos:column="9">int</name></type> <name pos:line="3609" pos:column="13">nbMacro</name> <init pos:line="3609" pos:column="21">= <expr><call><name><name pos:line="3609" pos:column="23">theMacros</name><op:operator pos:line="3609" pos:column="32">.</op:operator><name pos:line="3609" pos:column="33">size</name></name><argument_list pos:line="3609" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3611" pos:column="9">int</name></type> <name pos:line="3611" pos:column="13">cmdID</name> <init pos:line="3611" pos:column="19">= <expr><name pos:line="3611" pos:column="21">ID_MACRO</name> <op:operator pos:line="3611" pos:column="30">+</op:operator> <name pos:line="3611" pos:column="32">nbMacro</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3612" pos:column="9">MacroShortcut</name></type> <name pos:line="3612" pos:column="23">ms</name><argument_list pos:line="3612" pos:column="25">(<argument><expr><call><name pos:line="3612" pos:column="26">Shortcut</name><argument_list pos:line="3612" pos:column="34">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3612" pos:column="38">_macro</name></expr></argument>, <argument><expr><name pos:line="3612" pos:column="46">cmdID</name></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="3613" pos:column="9">ms</name><op:operator pos:line="3613" pos:column="11">.</op:operator><name pos:line="3613" pos:column="12">init</name></name><argument_list pos:line="3613" pos:column="16">(<argument><expr><call><name><name pos:line="3613" pos:column="17">_pPublicInterface</name><op:operator pos:line="3613" pos:column="34">-&gt;</op:operator><name pos:line="3613" pos:column="36">getHinst</name></name><argument_list pos:line="3613" pos:column="44">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3613" pos:column="48">_pPublicInterface</name><op:operator pos:line="3613" pos:column="65">-&gt;</op:operator><name pos:line="3613" pos:column="67">getHSelf</name></name><argument_list pos:line="3613" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="3615" pos:column="9">if <condition pos:line="3615" pos:column="12">(<expr><call><name><name pos:line="3615" pos:column="13">ms</name><op:operator pos:line="3615" pos:column="15">.</op:operator><name pos:line="3615" pos:column="16">doDialog</name></name><argument_list pos:line="3615" pos:column="24">()</argument_list></call> <op:operator pos:line="3615" pos:column="27">!=</op:operator> <op:operator pos:line="3615" pos:column="30">-</op:operator><lit:literal type="number" pos:line="3615" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="3615" pos:column="33">
	<block pos:line="3616" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3617" pos:column="17">HMENU</name></type> <name pos:line="3617" pos:column="23">hMacroMenu</name> <init pos:line="3617" pos:column="34">= <expr><call><name><op:operator pos:line="3617" pos:column="36">::</op:operator><name pos:line="3617" pos:column="38">GetSubMenu</name></name><argument_list pos:line="3617" pos:column="48">(<argument><expr><name pos:line="3617" pos:column="49">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3617" pos:column="66">MENUINDEX_MACRO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3618" pos:column="17">int</name> <specifier pos:line="3618" pos:column="21">const</specifier></type> <name pos:line="3618" pos:column="27">posBase</name> <init pos:line="3618" pos:column="35">= <expr><lit:literal type="number" pos:line="3618" pos:column="37">6</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="3618" pos:column="41">//separator at index 5</comment>
		<if pos:line="3619" pos:column="17">if <condition pos:line="3619" pos:column="20">(<expr><name pos:line="3619" pos:column="21">nbMacro</name> <op:operator pos:line="3619" pos:column="29">==</op:operator> <lit:literal type="number" pos:line="3619" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="3619" pos:column="34">
		<block pos:line="3620" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="3621" pos:column="25">::</op:operator><name pos:line="3621" pos:column="27">InsertMenu</name></name><argument_list pos:line="3621" pos:column="37">(<argument><expr><name pos:line="3621" pos:column="38">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="3621" pos:column="50">posBase</name><op:operator pos:line="3621" pos:column="57">-</op:operator><lit:literal type="number" pos:line="3621" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3621" pos:column="61">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="3621" pos:column="76">(</op:operator><name pos:line="3621" pos:column="77">unsigned</name> <name pos:line="3621" pos:column="86">int</name><op:operator pos:line="3621" pos:column="89">)</op:operator><op:operator pos:line="3621" pos:column="90">-</op:operator><lit:literal type="number" pos:line="3621" pos:column="91">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3621" pos:column="94">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3621" pos:column="105">//no separator yet, add one</comment>

            <comment type="line" pos:line="3623" pos:column="13">// Insert the separator and modify/delete command</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="3624" pos:column="25">::</op:operator><name pos:line="3624" pos:column="27">InsertMenu</name></name><argument_list pos:line="3624" pos:column="37">(<argument><expr><name pos:line="3624" pos:column="38">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="3624" pos:column="50">posBase</name> <op:operator pos:line="3624" pos:column="58">+</op:operator> <name pos:line="3624" pos:column="60">nbMacro</name> <op:operator pos:line="3624" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="3624" pos:column="70">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3624" pos:column="73">MF_BYPOSITION</name></expr></argument>, <argument><expr><op:operator pos:line="3624" pos:column="88">(</op:operator><name pos:line="3624" pos:column="89">unsigned</name> <name pos:line="3624" pos:column="98">int</name><op:operator pos:line="3624" pos:column="101">)</op:operator><op:operator pos:line="3624" pos:column="102">-</op:operator><lit:literal type="number" pos:line="3624" pos:column="103">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3624" pos:column="106">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="3626" pos:column="25">NativeLangSpeaker</name> <type:modifier pos:line="3626" pos:column="43">*</type:modifier></type><name pos:line="3626" pos:column="44">pNativeLangSpeaker</name> <init pos:line="3626" pos:column="63">= <expr><op:operator pos:line="3626" pos:column="65">(</op:operator><call><name><name pos:line="3626" pos:column="66">NppParameters</name><op:operator pos:line="3626" pos:column="79">::</op:operator><name pos:line="3626" pos:column="81">getInstance</name></name><argument_list pos:line="3626" pos:column="92">()</argument_list></call><op:operator pos:line="3626" pos:column="94">)</op:operator><op:operator pos:line="3626" pos:column="95">-&gt;</op:operator><call><name pos:line="3626" pos:column="97">getNativeLangSpeaker</name><argument_list pos:line="3626" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3627" pos:column="25">generic_string</name></type> <name pos:line="3627" pos:column="40">nativeLangShortcutMapperMacro</name> <init pos:line="3627" pos:column="70">= <expr><call><name><name pos:line="3627" pos:column="72">pNativeLangSpeaker</name><op:operator pos:line="3627" pos:column="90">-&gt;</op:operator><name pos:line="3627" pos:column="92">getNativeLangMenuString</name></name><argument_list pos:line="3627" pos:column="115">(<argument><expr><name pos:line="3627" pos:column="116">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3628" pos:column="25">if <condition pos:line="3628" pos:column="28">(<expr><name pos:line="3628" pos:column="29">nativeLangShortcutMapperMacro</name> <op:operator pos:line="3628" pos:column="59">==</op:operator> <call><name pos:line="3628" pos:column="62">TEXT</name><argument_list pos:line="3628" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="3628" pos:column="67">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3628" pos:column="71">
				<expr_stmt><expr><name pos:line="3629" pos:column="33">nativeLangShortcutMapperMacro</name> <op:operator pos:line="3629" pos:column="63">=</op:operator> <call><name pos:line="3629" pos:column="65">TEXT</name><argument_list pos:line="3629" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="3629" pos:column="70">"Modify Shortcut/Delete Macro..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><op:operator pos:line="3631" pos:column="25">::</op:operator><name pos:line="3631" pos:column="27">InsertMenu</name></name><argument_list pos:line="3631" pos:column="37">(<argument><expr><name pos:line="3631" pos:column="38">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="3631" pos:column="50">posBase</name> <op:operator pos:line="3631" pos:column="58">+</op:operator> <name pos:line="3631" pos:column="60">nbMacro</name> <op:operator pos:line="3631" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="3631" pos:column="70">2</lit:literal></expr></argument>, <argument><expr><name pos:line="3631" pos:column="73">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="3631" pos:column="87">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name></expr></argument>, <argument><expr><call><name><name pos:line="3631" pos:column="122">nativeLangShortcutMapperMacro</name><op:operator pos:line="3631" pos:column="151">.</op:operator><name pos:line="3631" pos:column="152">c_str</name></name><argument_list pos:line="3631" pos:column="157">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
		<expr_stmt><expr><call><name><name pos:line="3633" pos:column="17">theMacros</name><op:operator pos:line="3633" pos:column="26">.</op:operator><name pos:line="3633" pos:column="27">push_back</name></name><argument_list pos:line="3633" pos:column="36">(<argument><expr><name pos:line="3633" pos:column="37">ms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3634" pos:column="17">::</op:operator><name pos:line="3634" pos:column="19">InsertMenu</name></name><argument_list pos:line="3634" pos:column="29">(<argument><expr><name pos:line="3634" pos:column="30">hMacroMenu</name></expr></argument>, <argument><expr><name pos:line="3634" pos:column="42">posBase</name> <op:operator pos:line="3634" pos:column="50">+</op:operator> <name pos:line="3634" pos:column="52">nbMacro</name></expr></argument>, <argument><expr><name pos:line="3634" pos:column="61">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="3634" pos:column="76">cmdID</name></expr></argument>, <argument><expr><call><name><name pos:line="3634" pos:column="83">ms</name><op:operator pos:line="3634" pos:column="85">.</op:operator><name pos:line="3634" pos:column="86">toMenuItemString</name></name><argument_list pos:line="3634" pos:column="102">()</argument_list></call><op:operator pos:line="3634" pos:column="104">.</op:operator><call><name pos:line="3634" pos:column="105">c_str</name><argument_list pos:line="3634" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3635" pos:column="17">_accelerator</name><op:operator pos:line="3635" pos:column="29">.</op:operator><name pos:line="3635" pos:column="30">updateShortcuts</name></name><argument_list pos:line="3635" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="3636" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3636" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="3638" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3638" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3641" pos:column="1">void</name></type> <name><name pos:line="3641" pos:column="6">Notepad_plus</name><op:operator pos:line="3641" pos:column="18">::</op:operator><name pos:line="3641" pos:column="20">changeToolBarIcons</name></name><parameter_list pos:line="3641" pos:column="38">()</parameter_list>
<block pos:line="3642" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3643" pos:column="5">_toolBar</name><op:operator pos:line="3643" pos:column="13">.</op:operator><name pos:line="3643" pos:column="14">changeIcons</name></name><argument_list pos:line="3643" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3646" pos:column="1">bool</name></type> <name><name pos:line="3646" pos:column="6">Notepad_plus</name><op:operator pos:line="3646" pos:column="18">::</op:operator><name pos:line="3646" pos:column="20">switchToFile</name></name><parameter_list pos:line="3646" pos:column="32">(<param><decl><type><name pos:line="3646" pos:column="33">BufferID</name></type> <name pos:line="3646" pos:column="42">id</name></decl></param>)</parameter_list>
<block pos:line="3647" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3648" pos:column="9">int</name></type> <name pos:line="3648" pos:column="13">i</name> <init pos:line="3648" pos:column="15">= <expr><lit:literal type="number" pos:line="3648" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3649" pos:column="9">int</name></type> <name pos:line="3649" pos:column="13">iView</name> <init pos:line="3649" pos:column="19">= <expr><call><name pos:line="3649" pos:column="21">currentView</name><argument_list pos:line="3649" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3650" pos:column="9">if <condition pos:line="3650" pos:column="12">(<expr><name pos:line="3650" pos:column="13">id</name> <op:operator pos:line="3650" pos:column="16">==</op:operator> <name pos:line="3650" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="3650" pos:column="34">
		<return pos:line="3651" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3651" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<if pos:line="3653" pos:column="9">if <condition pos:line="3653" pos:column="12">(<expr><op:operator pos:line="3653" pos:column="13">(</op:operator><name pos:line="3653" pos:column="14">i</name> <op:operator pos:line="3653" pos:column="16">=</op:operator> <call><name><name pos:line="3653" pos:column="18">_pDocTab</name><op:operator pos:line="3653" pos:column="26">-&gt;</op:operator><name pos:line="3653" pos:column="28">getIndexByBuffer</name></name><argument_list pos:line="3653" pos:column="44">(<argument><expr><name pos:line="3653" pos:column="45">id</name></expr></argument>)</argument_list></call><op:operator pos:line="3653" pos:column="48">)</op:operator> <op:operator pos:line="3653" pos:column="50">!=</op:operator> <op:operator pos:line="3653" pos:column="53">-</op:operator><lit:literal type="number" pos:line="3653" pos:column="54">1</lit:literal></expr>)</condition><then pos:line="3653" pos:column="56">
	<block pos:line="3654" pos:column="9">{
		<expr_stmt><expr><name pos:line="3655" pos:column="17">iView</name> <op:operator pos:line="3655" pos:column="23">=</op:operator> <call><name pos:line="3655" pos:column="25">currentView</name><argument_list pos:line="3655" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3657" pos:column="9">else <if pos:line="3657" pos:column="14">if <condition pos:line="3657" pos:column="17">(<expr><op:operator pos:line="3657" pos:column="18">(</op:operator><name pos:line="3657" pos:column="19">i</name> <op:operator pos:line="3657" pos:column="21">=</op:operator> <call><name><name pos:line="3657" pos:column="23">_pNonDocTab</name><op:operator pos:line="3657" pos:column="34">-&gt;</op:operator><name pos:line="3657" pos:column="36">getIndexByBuffer</name></name><argument_list pos:line="3657" pos:column="52">(<argument><expr><name pos:line="3657" pos:column="53">id</name></expr></argument>)</argument_list></call><op:operator pos:line="3657" pos:column="56">)</op:operator> <op:operator pos:line="3657" pos:column="58">!=</op:operator> <op:operator pos:line="3657" pos:column="61">-</op:operator><lit:literal type="number" pos:line="3657" pos:column="62">1</lit:literal></expr>)</condition><then pos:line="3657" pos:column="64">
	<block pos:line="3658" pos:column="9">{
		<expr_stmt><expr><name pos:line="3659" pos:column="17">iView</name> <op:operator pos:line="3659" pos:column="23">=</op:operator> <call><name pos:line="3659" pos:column="25">otherView</name><argument_list pos:line="3659" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>

	<if pos:line="3662" pos:column="9">if <condition pos:line="3662" pos:column="12">(<expr><name pos:line="3662" pos:column="13">i</name> <op:operator pos:line="3662" pos:column="15">!=</op:operator> <op:operator pos:line="3662" pos:column="18">-</op:operator><lit:literal type="number" pos:line="3662" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="3662" pos:column="21">
	<block pos:line="3663" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="3664" pos:column="17">switchEditViewTo</name><argument_list pos:line="3664" pos:column="33">(<argument><expr><name pos:line="3664" pos:column="34">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="3665" pos:column="17">activateBuffer</name><argument_list pos:line="3665" pos:column="31">(<argument><expr><name pos:line="3665" pos:column="32">id</name></expr></argument>, <argument><expr><call><name pos:line="3665" pos:column="36">currentView</name><argument_list pos:line="3665" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="3666" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3666" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="3668" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3668" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3671" pos:column="1">void</name></type> <name><name pos:line="3671" pos:column="6">Notepad_plus</name><op:operator pos:line="3671" pos:column="18">::</op:operator><name pos:line="3671" pos:column="20">getTaskListInfo</name></name><parameter_list pos:line="3671" pos:column="35">(<param><decl><type><name pos:line="3671" pos:column="36">TaskListInfo</name> <type:modifier pos:line="3671" pos:column="49">*</type:modifier></type><name pos:line="3671" pos:column="50">tli</name></decl></param>)</parameter_list>
<block pos:line="3672" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3673" pos:column="9">size_t</name></type> <name pos:line="3673" pos:column="16">currentNbDoc</name> <init pos:line="3673" pos:column="29">= <expr><call><name><name pos:line="3673" pos:column="31">_pDocTab</name><op:operator pos:line="3673" pos:column="39">-&gt;</op:operator><name pos:line="3673" pos:column="41">nbItem</name></name><argument_list pos:line="3673" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3674" pos:column="9">size_t</name></type> <name pos:line="3674" pos:column="16">nonCurrentNbDoc</name> <init pos:line="3674" pos:column="32">= <expr><call><name><name pos:line="3674" pos:column="34">_pNonDocTab</name><op:operator pos:line="3674" pos:column="45">-&gt;</op:operator><name pos:line="3674" pos:column="47">nbItem</name></name><argument_list pos:line="3674" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="3676" pos:column="9">tli</name><op:operator pos:line="3676" pos:column="12">-&gt;</op:operator><name pos:line="3676" pos:column="14">_currentIndex</name></name> <op:operator pos:line="3676" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="3676" pos:column="30">0</lit:literal></expr>;</expr_stmt>

	<if pos:line="3678" pos:column="9">if <condition pos:line="3678" pos:column="12">(<expr><op:operator pos:line="3678" pos:column="13">!</op:operator><call><name pos:line="3678" pos:column="14">viewVisible</name><argument_list pos:line="3678" pos:column="25">(<argument><expr><call><name pos:line="3678" pos:column="26">otherView</name><argument_list pos:line="3678" pos:column="35">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3678" pos:column="39">
		<expr_stmt><expr><name pos:line="3679" pos:column="17">nonCurrentNbDoc</name> <op:operator pos:line="3679" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="3679" pos:column="35">0</lit:literal></expr>;</expr_stmt></then></if>

	<for pos:line="3681" pos:column="9">for (<init><decl><type><name pos:line="3681" pos:column="14">size_t</name></type> <name pos:line="3681" pos:column="21">i</name> <init pos:line="3681" pos:column="23">= <expr><lit:literal type="number" pos:line="3681" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3681" pos:column="29">i</name> <op:operator pos:line="3681" pos:column="31">&lt;</op:operator> <name pos:line="3681" pos:column="33">currentNbDoc</name></expr> ;</condition> <incr><expr><name pos:line="3681" pos:column="48">i</name><op:operator pos:line="3681" pos:column="49">++</op:operator></expr></incr>)
	<block pos:line="3682" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3683" pos:column="17">BufferID</name></type> <name pos:line="3683" pos:column="26">bufID</name> <init pos:line="3683" pos:column="32">= <expr><call><name><name pos:line="3683" pos:column="34">_pDocTab</name><op:operator pos:line="3683" pos:column="42">-&gt;</op:operator><name pos:line="3683" pos:column="44">getBufferByIndex</name></name><argument_list pos:line="3683" pos:column="60">(<argument><expr><name pos:line="3683" pos:column="61">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3684" pos:column="17">Buffer</name> <type:modifier pos:line="3684" pos:column="24">*</type:modifier></type> <name pos:line="3684" pos:column="26">b</name> <init pos:line="3684" pos:column="28">= <expr><call><name><name pos:line="3684" pos:column="30">MainFileManager</name><op:operator pos:line="3684" pos:column="45">-&gt;</op:operator><name pos:line="3684" pos:column="47">getBufferByID</name></name><argument_list pos:line="3684" pos:column="60">(<argument><expr><name pos:line="3684" pos:column="61">bufID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3685" pos:column="17">int</name></type> <name pos:line="3685" pos:column="21">status</name> <init pos:line="3685" pos:column="28">= <expr><call><name><name pos:line="3685" pos:column="30">b</name><op:operator pos:line="3685" pos:column="31">-&gt;</op:operator><name pos:line="3685" pos:column="33">isReadOnly</name></name><argument_list pos:line="3685" pos:column="43">()</argument_list></call><op:operator pos:line="3685" pos:column="45">?</op:operator><name pos:line="3685" pos:column="46">tb_ro</name><op:operator pos:line="3685" pos:column="51">:</op:operator><op:operator pos:line="3685" pos:column="52">(</op:operator><call><name><name pos:line="3685" pos:column="53">b</name><op:operator pos:line="3685" pos:column="54">-&gt;</op:operator><name pos:line="3685" pos:column="56">isDirty</name></name><argument_list pos:line="3685" pos:column="63">()</argument_list></call><op:operator pos:line="3685" pos:column="65">?</op:operator><name pos:line="3685" pos:column="66">tb_unsaved</name><op:operator pos:line="3685" pos:column="76">:</op:operator><name pos:line="3685" pos:column="77">tb_saved</name><op:operator pos:line="3685" pos:column="85">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3686" pos:column="17">tli</name><op:operator pos:line="3686" pos:column="20">-&gt;</op:operator><name pos:line="3686" pos:column="22">_tlfsLst</name><op:operator pos:line="3686" pos:column="30">.</op:operator><name pos:line="3686" pos:column="31">push_back</name></name><argument_list pos:line="3686" pos:column="40">(<argument><expr><call><name pos:line="3686" pos:column="41">TaskLstFnStatus</name><argument_list pos:line="3686" pos:column="56">(<argument><expr><call><name pos:line="3686" pos:column="57">currentView</name><argument_list pos:line="3686" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3686" pos:column="72">i</name></expr></argument>, <argument><expr><call><name><name pos:line="3686" pos:column="75">b</name><op:operator pos:line="3686" pos:column="76">-&gt;</op:operator><name pos:line="3686" pos:column="78">getFullPathName</name></name><argument_list pos:line="3686" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3686" pos:column="97">status</name></expr></argument>, <argument><expr><op:operator pos:line="3686" pos:column="105">(</op:operator><name pos:line="3686" pos:column="106">void</name> <op:operator pos:line="3686" pos:column="111">*</op:operator><op:operator pos:line="3686" pos:column="112">)</op:operator><name pos:line="3686" pos:column="113">bufID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<for pos:line="3688" pos:column="9">for (<init><decl><type><name pos:line="3688" pos:column="14">size_t</name></type> <name pos:line="3688" pos:column="21">i</name> <init pos:line="3688" pos:column="23">= <expr><lit:literal type="number" pos:line="3688" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3688" pos:column="29">i</name> <op:operator pos:line="3688" pos:column="31">&lt;</op:operator> <name pos:line="3688" pos:column="33">nonCurrentNbDoc</name></expr> ;</condition> <incr><expr><name pos:line="3688" pos:column="51">i</name><op:operator pos:line="3688" pos:column="52">++</op:operator></expr></incr>)
	<block pos:line="3689" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3690" pos:column="17">BufferID</name></type> <name pos:line="3690" pos:column="26">bufID</name> <init pos:line="3690" pos:column="32">= <expr><call><name><name pos:line="3690" pos:column="34">_pNonDocTab</name><op:operator pos:line="3690" pos:column="45">-&gt;</op:operator><name pos:line="3690" pos:column="47">getBufferByIndex</name></name><argument_list pos:line="3690" pos:column="63">(<argument><expr><name pos:line="3690" pos:column="64">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3691" pos:column="17">Buffer</name> <type:modifier pos:line="3691" pos:column="24">*</type:modifier></type> <name pos:line="3691" pos:column="26">b</name> <init pos:line="3691" pos:column="28">= <expr><call><name><name pos:line="3691" pos:column="30">MainFileManager</name><op:operator pos:line="3691" pos:column="45">-&gt;</op:operator><name pos:line="3691" pos:column="47">getBufferByID</name></name><argument_list pos:line="3691" pos:column="60">(<argument><expr><name pos:line="3691" pos:column="61">bufID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3692" pos:column="17">int</name></type> <name pos:line="3692" pos:column="21">status</name> <init pos:line="3692" pos:column="28">= <expr><call><name><name pos:line="3692" pos:column="30">b</name><op:operator pos:line="3692" pos:column="31">-&gt;</op:operator><name pos:line="3692" pos:column="33">isReadOnly</name></name><argument_list pos:line="3692" pos:column="43">()</argument_list></call><op:operator pos:line="3692" pos:column="45">?</op:operator><name pos:line="3692" pos:column="46">tb_ro</name><op:operator pos:line="3692" pos:column="51">:</op:operator><op:operator pos:line="3692" pos:column="52">(</op:operator><call><name><name pos:line="3692" pos:column="53">b</name><op:operator pos:line="3692" pos:column="54">-&gt;</op:operator><name pos:line="3692" pos:column="56">isDirty</name></name><argument_list pos:line="3692" pos:column="63">()</argument_list></call><op:operator pos:line="3692" pos:column="65">?</op:operator><name pos:line="3692" pos:column="66">tb_unsaved</name><op:operator pos:line="3692" pos:column="76">:</op:operator><name pos:line="3692" pos:column="77">tb_saved</name><op:operator pos:line="3692" pos:column="85">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3693" pos:column="17">tli</name><op:operator pos:line="3693" pos:column="20">-&gt;</op:operator><name pos:line="3693" pos:column="22">_tlfsLst</name><op:operator pos:line="3693" pos:column="30">.</op:operator><name pos:line="3693" pos:column="31">push_back</name></name><argument_list pos:line="3693" pos:column="40">(<argument><expr><call><name pos:line="3693" pos:column="41">TaskLstFnStatus</name><argument_list pos:line="3693" pos:column="56">(<argument><expr><call><name pos:line="3693" pos:column="57">otherView</name><argument_list pos:line="3693" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3693" pos:column="70">i</name></expr></argument>, <argument><expr><call><name><name pos:line="3693" pos:column="73">b</name><op:operator pos:line="3693" pos:column="74">-&gt;</op:operator><name pos:line="3693" pos:column="76">getFullPathName</name></name><argument_list pos:line="3693" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3693" pos:column="95">status</name></expr></argument>, <argument><expr><op:operator pos:line="3693" pos:column="103">(</op:operator><name pos:line="3693" pos:column="104">void</name> <op:operator pos:line="3693" pos:column="109">*</op:operator><op:operator pos:line="3693" pos:column="110">)</op:operator><name pos:line="3693" pos:column="111">bufID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>


<function><type><name pos:line="3698" pos:column="1">bool</name></type> <name><name pos:line="3698" pos:column="6">Notepad_plus</name><op:operator pos:line="3698" pos:column="18">::</op:operator><name pos:line="3698" pos:column="20">goToPreviousIndicator</name></name><parameter_list pos:line="3698" pos:column="41">(<param><decl><type><name pos:line="3698" pos:column="42">int</name></type> <name pos:line="3698" pos:column="46">indicID2Search</name></decl></param>, <param><decl><type><name pos:line="3698" pos:column="62">bool</name></type> <name pos:line="3698" pos:column="67">isWrap</name></decl></param>)</parameter_list> <specifier pos:line="3698" pos:column="75">const</specifier>
<block pos:line="3699" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3700" pos:column="5">int</name></type> <name pos:line="3700" pos:column="9">position</name> <init pos:line="3700" pos:column="18">= <expr><call><name><name pos:line="3700" pos:column="20">_pEditView</name><op:operator pos:line="3700" pos:column="30">-&gt;</op:operator><name pos:line="3700" pos:column="32">execute</name></name><argument_list pos:line="3700" pos:column="39">(<argument><expr><name pos:line="3700" pos:column="40">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3701" pos:column="9">int</name></type> <name pos:line="3701" pos:column="13">docLen</name> <init pos:line="3701" pos:column="20">= <expr><call><name><name pos:line="3701" pos:column="22">_pEditView</name><op:operator pos:line="3701" pos:column="32">-&gt;</op:operator><name pos:line="3701" pos:column="34">getCurrentDocLen</name></name><argument_list pos:line="3701" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="3703" pos:column="5">BOOL</name></type> <name pos:line="3703" pos:column="10">isInIndicator</name> <init pos:line="3703" pos:column="24">= <expr><call><name><name pos:line="3703" pos:column="26">_pEditView</name><op:operator pos:line="3703" pos:column="36">-&gt;</op:operator><name pos:line="3703" pos:column="38">execute</name></name><argument_list pos:line="3703" pos:column="45">(<argument><expr><name pos:line="3703" pos:column="46">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3703" pos:column="68">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3703" pos:column="85">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3704" pos:column="5">int</name></type> <name pos:line="3704" pos:column="9">posStart</name> <init pos:line="3704" pos:column="18">= <expr><call><name><name pos:line="3704" pos:column="20">_pEditView</name><op:operator pos:line="3704" pos:column="30">-&gt;</op:operator><name pos:line="3704" pos:column="32">execute</name></name><argument_list pos:line="3704" pos:column="39">(<argument><expr><name pos:line="3704" pos:column="40">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3704" pos:column="60">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3704" pos:column="77">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3705" pos:column="5">int</name></type> <name pos:line="3705" pos:column="9">posEnd</name> <init pos:line="3705" pos:column="16">= <expr><call><name><name pos:line="3705" pos:column="18">_pEditView</name><op:operator pos:line="3705" pos:column="28">-&gt;</op:operator><name pos:line="3705" pos:column="30">execute</name></name><argument_list pos:line="3705" pos:column="37">(<argument><expr><name pos:line="3705" pos:column="38">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3705" pos:column="56">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3705" pos:column="73">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="3707" pos:column="9">// pre-condition</comment>
	<if pos:line="3708" pos:column="9">if <condition pos:line="3708" pos:column="12">(<expr><op:operator pos:line="3708" pos:column="13">(</op:operator><name pos:line="3708" pos:column="14">posStart</name> <op:operator pos:line="3708" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="3708" pos:column="26">0</lit:literal><op:operator pos:line="3708" pos:column="27">)</op:operator> <op:operator pos:line="3708" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="3708" pos:column="32">(</op:operator><name pos:line="3708" pos:column="33">posEnd</name> <op:operator pos:line="3708" pos:column="40">==</op:operator> <name pos:line="3708" pos:column="43">docLen</name> <op:operator pos:line="3708" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="3708" pos:column="52">1</lit:literal><op:operator pos:line="3708" pos:column="53">)</op:operator></expr>)</condition><then pos:line="3708" pos:column="55">
		<return pos:line="3709" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3709" pos:column="24">false</lit:literal></expr>;</return></then></if>

    <if pos:line="3711" pos:column="5">if <condition pos:line="3711" pos:column="8">(<expr><name pos:line="3711" pos:column="9">posStart</name> <op:operator pos:line="3711" pos:column="18">&lt;=</op:operator> <lit:literal type="number" pos:line="3711" pos:column="21">0</lit:literal></expr>)</condition><then pos:line="3711" pos:column="23">
	<block pos:line="3712" pos:column="9">{
		<if pos:line="3713" pos:column="17">if <condition pos:line="3713" pos:column="20">(<expr><op:operator pos:line="3713" pos:column="21">!</op:operator><name pos:line="3713" pos:column="22">isWrap</name></expr>)</condition><then pos:line="3713" pos:column="29">
			<return pos:line="3714" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3714" pos:column="32">false</lit:literal></expr>;</return></then></if>

		<expr_stmt><expr><name pos:line="3716" pos:column="17">isInIndicator</name> <op:operator pos:line="3716" pos:column="31">=</op:operator> <call><name><name pos:line="3716" pos:column="33">_pEditView</name><op:operator pos:line="3716" pos:column="43">-&gt;</op:operator><name pos:line="3716" pos:column="45">execute</name></name><argument_list pos:line="3716" pos:column="52">(<argument><expr><name pos:line="3716" pos:column="53">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3716" pos:column="75">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3716" pos:column="92">docLen</name> <op:operator pos:line="3716" pos:column="99">-</op:operator> <lit:literal type="number" pos:line="3716" pos:column="101">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3717" pos:column="17">posStart</name> <op:operator pos:line="3717" pos:column="26">=</op:operator> <call><name><name pos:line="3717" pos:column="28">_pEditView</name><op:operator pos:line="3717" pos:column="38">-&gt;</op:operator><name pos:line="3717" pos:column="40">execute</name></name><argument_list pos:line="3717" pos:column="47">(<argument><expr><name pos:line="3717" pos:column="48">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3717" pos:column="68">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3717" pos:column="85">docLen</name> <op:operator pos:line="3717" pos:column="92">-</op:operator> <lit:literal type="number" pos:line="3717" pos:column="94">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

    <if pos:line="3720" pos:column="5">if <condition pos:line="3720" pos:column="8">(<expr><name pos:line="3720" pos:column="9">isInIndicator</name></expr>)</condition><then pos:line="3720" pos:column="23"> <comment type="line" pos:line="3720" pos:column="24">// try to get out of indicator</comment>
    <block pos:line="3721" pos:column="5">{
        <expr_stmt><expr><name pos:line="3722" pos:column="9">posStart</name> <op:operator pos:line="3722" pos:column="18">=</op:operator> <call><name><name pos:line="3722" pos:column="20">_pEditView</name><op:operator pos:line="3722" pos:column="30">-&gt;</op:operator><name pos:line="3722" pos:column="32">execute</name></name><argument_list pos:line="3722" pos:column="39">(<argument><expr><name pos:line="3722" pos:column="40">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3722" pos:column="60">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3722" pos:column="76">posStart</name> <op:operator pos:line="3722" pos:column="85">-</op:operator> <lit:literal type="number" pos:line="3722" pos:column="87">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="3723" pos:column="9">if <condition pos:line="3723" pos:column="12">(<expr><name pos:line="3723" pos:column="13">posStart</name> <op:operator pos:line="3723" pos:column="22">&lt;=</op:operator> <lit:literal type="number" pos:line="3723" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="3723" pos:column="27">
		<block pos:line="3724" pos:column="17">{
			<if pos:line="3725" pos:column="25">if <condition pos:line="3725" pos:column="28">(<expr><op:operator pos:line="3725" pos:column="29">!</op:operator><name pos:line="3725" pos:column="30">isWrap</name></expr>)</condition><then pos:line="3725" pos:column="37">
				<return pos:line="3726" pos:column="33">return <expr><lit:literal type="boolean" pos:line="3726" pos:column="40">false</lit:literal></expr>;</return></then></if>
			<expr_stmt><expr><name pos:line="3727" pos:column="25">posStart</name> <op:operator pos:line="3727" pos:column="34">=</op:operator> <call><name><name pos:line="3727" pos:column="36">_pEditView</name><op:operator pos:line="3727" pos:column="46">-&gt;</op:operator><name pos:line="3727" pos:column="48">execute</name></name><argument_list pos:line="3727" pos:column="55">(<argument><expr><name pos:line="3727" pos:column="56">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3727" pos:column="76">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3727" pos:column="93">docLen</name> <op:operator pos:line="3727" pos:column="100">-</op:operator> <lit:literal type="number" pos:line="3727" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

    <decl_stmt><decl><type><name pos:line="3731" pos:column="5">int</name></type> <name pos:line="3731" pos:column="9">newPos</name> <init pos:line="3731" pos:column="16">= <expr><name pos:line="3731" pos:column="18">posStart</name> <op:operator pos:line="3731" pos:column="27">-</op:operator> <lit:literal type="number" pos:line="3731" pos:column="29">1</lit:literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name pos:line="3732" pos:column="5">posStart</name> <op:operator pos:line="3732" pos:column="14">=</op:operator> <call><name><name pos:line="3732" pos:column="16">_pEditView</name><op:operator pos:line="3732" pos:column="26">-&gt;</op:operator><name pos:line="3732" pos:column="28">execute</name></name><argument_list pos:line="3732" pos:column="35">(<argument><expr><name pos:line="3732" pos:column="36">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3732" pos:column="56">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3732" pos:column="72">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="3733" pos:column="5">posEnd</name> <op:operator pos:line="3733" pos:column="12">=</op:operator> <call><name><name pos:line="3733" pos:column="14">_pEditView</name><op:operator pos:line="3733" pos:column="24">-&gt;</op:operator><name pos:line="3733" pos:column="26">execute</name></name><argument_list pos:line="3733" pos:column="33">(<argument><expr><name pos:line="3733" pos:column="34">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3733" pos:column="52">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3733" pos:column="68">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="3735" pos:column="9">// found</comment>
	<if pos:line="3736" pos:column="9">if <condition pos:line="3736" pos:column="12">(<expr><call><name><name pos:line="3736" pos:column="13">_pEditView</name><op:operator pos:line="3736" pos:column="23">-&gt;</op:operator><name pos:line="3736" pos:column="25">execute</name></name><argument_list pos:line="3736" pos:column="32">(<argument><expr><name pos:line="3736" pos:column="33">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3736" pos:column="55">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3736" pos:column="71">posStart</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3736" pos:column="81">
	<block pos:line="3737" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3738" pos:column="17">NppGUI</name> <type:modifier pos:line="3738" pos:column="24">&amp;</type:modifier></type> <name pos:line="3738" pos:column="26">nppGUI</name> <init pos:line="3738" pos:column="33">= <expr><op:operator pos:line="3738" pos:column="35">(</op:operator><name pos:line="3738" pos:column="36">NppGUI</name> <op:operator pos:line="3738" pos:column="43">&amp;</op:operator><op:operator pos:line="3738" pos:column="44">)</op:operator><op:operator pos:line="3738" pos:column="45">(</op:operator><op:operator pos:line="3738" pos:column="46">(</op:operator><call><name><name pos:line="3738" pos:column="47">NppParameters</name><op:operator pos:line="3738" pos:column="60">::</op:operator><name pos:line="3738" pos:column="62">getInstance</name></name><argument_list pos:line="3738" pos:column="73">()</argument_list></call><op:operator pos:line="3738" pos:column="75">)</op:operator><op:operator pos:line="3738" pos:column="76">-&gt;</op:operator><call><name pos:line="3738" pos:column="78">getNppGUI</name><argument_list pos:line="3738" pos:column="87">()</argument_list></call><op:operator pos:line="3738" pos:column="89">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3739" pos:column="17">nppGUI</name><op:operator pos:line="3739" pos:column="23">.</op:operator><name pos:line="3739" pos:column="24">_disableSmartHiliteTmp</name></name> <op:operator pos:line="3739" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="3739" pos:column="49">true</lit:literal></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="3741" pos:column="9">int</name></type> <name pos:line="3741" pos:column="13">currentline</name> <init pos:line="3741" pos:column="25">= <expr><call><name><name pos:line="3741" pos:column="27">_pEditView</name><op:operator pos:line="3741" pos:column="37">-&gt;</op:operator><name pos:line="3741" pos:column="39">execute</name></name><argument_list pos:line="3741" pos:column="46">(<argument><expr><name pos:line="3741" pos:column="47">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="3741" pos:column="69">posEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <expr_stmt><expr><call><name><name pos:line="3742" pos:column="13">_pEditView</name><op:operator pos:line="3742" pos:column="23">-&gt;</op:operator><name pos:line="3742" pos:column="25">execute</name></name><argument_list pos:line="3742" pos:column="32">(<argument><expr><name pos:line="3742" pos:column="33">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="3742" pos:column="52">currentline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3742" pos:column="73">// make sure target line is unfolded</comment>

		<expr_stmt><expr><call><name><name pos:line="3744" pos:column="17">_pEditView</name><op:operator pos:line="3744" pos:column="27">-&gt;</op:operator><name pos:line="3744" pos:column="29">execute</name></name><argument_list pos:line="3744" pos:column="36">(<argument><expr><name pos:line="3744" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="3744" pos:column="49">posEnd</name></expr></argument>, <argument><expr><name pos:line="3744" pos:column="57">posStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3745" pos:column="17">_pEditView</name><op:operator pos:line="3745" pos:column="27">-&gt;</op:operator><name pos:line="3745" pos:column="29">execute</name></name><argument_list pos:line="3745" pos:column="36">(<argument><expr><name pos:line="3745" pos:column="37">SCI_SCROLLCARET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="3746" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3746" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="3748" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3748" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3751" pos:column="1">bool</name></type> <name><name pos:line="3751" pos:column="6">Notepad_plus</name><op:operator pos:line="3751" pos:column="18">::</op:operator><name pos:line="3751" pos:column="20">goToNextIndicator</name></name><parameter_list pos:line="3751" pos:column="37">(<param><decl><type><name pos:line="3751" pos:column="38">int</name></type> <name pos:line="3751" pos:column="42">indicID2Search</name></decl></param>, <param><decl><type><name pos:line="3751" pos:column="58">bool</name></type> <name pos:line="3751" pos:column="63">isWrap</name></decl></param>)</parameter_list> <specifier pos:line="3751" pos:column="71">const</specifier>
<block pos:line="3752" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3753" pos:column="5">int</name></type> <name pos:line="3753" pos:column="9">position</name> <init pos:line="3753" pos:column="18">= <expr><call><name><name pos:line="3753" pos:column="20">_pEditView</name><op:operator pos:line="3753" pos:column="30">-&gt;</op:operator><name pos:line="3753" pos:column="32">execute</name></name><argument_list pos:line="3753" pos:column="39">(<argument><expr><name pos:line="3753" pos:column="40">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3754" pos:column="9">int</name></type> <name pos:line="3754" pos:column="13">docLen</name> <init pos:line="3754" pos:column="20">= <expr><call><name><name pos:line="3754" pos:column="22">_pEditView</name><op:operator pos:line="3754" pos:column="32">-&gt;</op:operator><name pos:line="3754" pos:column="34">getCurrentDocLen</name></name><argument_list pos:line="3754" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="3756" pos:column="5">BOOL</name></type> <name pos:line="3756" pos:column="10">isInIndicator</name> <init pos:line="3756" pos:column="24">= <expr><call><name><name pos:line="3756" pos:column="26">_pEditView</name><op:operator pos:line="3756" pos:column="36">-&gt;</op:operator><name pos:line="3756" pos:column="38">execute</name></name><argument_list pos:line="3756" pos:column="45">(<argument><expr><name pos:line="3756" pos:column="46">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3756" pos:column="68">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3756" pos:column="85">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3757" pos:column="5">int</name></type> <name pos:line="3757" pos:column="9">posStart</name> <init pos:line="3757" pos:column="18">= <expr><call><name><name pos:line="3757" pos:column="20">_pEditView</name><op:operator pos:line="3757" pos:column="30">-&gt;</op:operator><name pos:line="3757" pos:column="32">execute</name></name><argument_list pos:line="3757" pos:column="39">(<argument><expr><name pos:line="3757" pos:column="40">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3757" pos:column="60">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3757" pos:column="77">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3758" pos:column="5">int</name></type> <name pos:line="3758" pos:column="9">posEnd</name> <init pos:line="3758" pos:column="16">= <expr><call><name><name pos:line="3758" pos:column="18">_pEditView</name><op:operator pos:line="3758" pos:column="28">-&gt;</op:operator><name pos:line="3758" pos:column="30">execute</name></name><argument_list pos:line="3758" pos:column="37">(<argument><expr><name pos:line="3758" pos:column="38">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3758" pos:column="56">indicID2Search</name></expr></argument>,  <argument><expr><name pos:line="3758" pos:column="73">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="3760" pos:column="9">// pre-condition</comment>
	<if pos:line="3761" pos:column="9">if <condition pos:line="3761" pos:column="12">(<expr><op:operator pos:line="3761" pos:column="13">(</op:operator><name pos:line="3761" pos:column="14">posStart</name> <op:operator pos:line="3761" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="3761" pos:column="26">0</lit:literal><op:operator pos:line="3761" pos:column="27">)</op:operator> <op:operator pos:line="3761" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="3761" pos:column="32">(</op:operator><name pos:line="3761" pos:column="33">posEnd</name> <op:operator pos:line="3761" pos:column="40">==</op:operator> <name pos:line="3761" pos:column="43">docLen</name> <op:operator pos:line="3761" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="3761" pos:column="52">1</lit:literal><op:operator pos:line="3761" pos:column="53">)</op:operator></expr>)</condition><then pos:line="3761" pos:column="55">
		<return pos:line="3762" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3762" pos:column="24">false</lit:literal></expr>;</return></then></if>

    <if pos:line="3764" pos:column="5">if <condition pos:line="3764" pos:column="8">(<expr><name pos:line="3764" pos:column="9">posEnd</name> <op:operator pos:line="3764" pos:column="16">&gt;=</op:operator> <name pos:line="3764" pos:column="19">docLen</name></expr>)</condition><then pos:line="3764" pos:column="26">
	<block pos:line="3765" pos:column="9">{
		<if pos:line="3766" pos:column="17">if <condition pos:line="3766" pos:column="20">(<expr><op:operator pos:line="3766" pos:column="21">!</op:operator><name pos:line="3766" pos:column="22">isWrap</name></expr>)</condition><then pos:line="3766" pos:column="29">
			<return pos:line="3767" pos:column="25">return <expr><lit:literal type="boolean" pos:line="3767" pos:column="32">false</lit:literal></expr>;</return></then></if>

		<expr_stmt><expr><name pos:line="3769" pos:column="17">isInIndicator</name> <op:operator pos:line="3769" pos:column="31">=</op:operator> <call><name><name pos:line="3769" pos:column="33">_pEditView</name><op:operator pos:line="3769" pos:column="43">-&gt;</op:operator><name pos:line="3769" pos:column="45">execute</name></name><argument_list pos:line="3769" pos:column="52">(<argument><expr><name pos:line="3769" pos:column="53">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3769" pos:column="75">indicID2Search</name></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="3769" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3770" pos:column="17">posEnd</name> <op:operator pos:line="3770" pos:column="24">=</op:operator> <call><name><name pos:line="3770" pos:column="26">_pEditView</name><op:operator pos:line="3770" pos:column="36">-&gt;</op:operator><name pos:line="3770" pos:column="38">execute</name></name><argument_list pos:line="3770" pos:column="45">(<argument><expr><name pos:line="3770" pos:column="46">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3770" pos:column="64">indicID2Search</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3770" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

    <if pos:line="3773" pos:column="5">if <condition pos:line="3773" pos:column="8">(<expr><name pos:line="3773" pos:column="9">isInIndicator</name></expr>)</condition><then pos:line="3773" pos:column="23"> <comment type="line" pos:line="3773" pos:column="24">// try to get out of indicator</comment>
    <block pos:line="3774" pos:column="5">{
        <expr_stmt><expr><name pos:line="3775" pos:column="9">posEnd</name> <op:operator pos:line="3775" pos:column="16">=</op:operator> <call><name><name pos:line="3775" pos:column="18">_pEditView</name><op:operator pos:line="3775" pos:column="28">-&gt;</op:operator><name pos:line="3775" pos:column="30">execute</name></name><argument_list pos:line="3775" pos:column="37">(<argument><expr><name pos:line="3775" pos:column="38">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3775" pos:column="56">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3775" pos:column="72">posEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if pos:line="3777" pos:column="9">if <condition pos:line="3777" pos:column="12">(<expr><name pos:line="3777" pos:column="13">posEnd</name> <op:operator pos:line="3777" pos:column="20">&gt;=</op:operator> <name pos:line="3777" pos:column="23">docLen</name></expr>)</condition><then pos:line="3777" pos:column="30">
		<block pos:line="3778" pos:column="17">{
			<if pos:line="3779" pos:column="25">if <condition pos:line="3779" pos:column="28">(<expr><op:operator pos:line="3779" pos:column="29">!</op:operator><name pos:line="3779" pos:column="30">isWrap</name></expr>)</condition><then pos:line="3779" pos:column="37">
				<return pos:line="3780" pos:column="33">return <expr><lit:literal type="boolean" pos:line="3780" pos:column="40">false</lit:literal></expr>;</return></then></if>
			<expr_stmt><expr><name pos:line="3781" pos:column="25">posEnd</name> <op:operator pos:line="3781" pos:column="32">=</op:operator> <call><name><name pos:line="3781" pos:column="34">_pEditView</name><op:operator pos:line="3781" pos:column="44">-&gt;</op:operator><name pos:line="3781" pos:column="46">execute</name></name><argument_list pos:line="3781" pos:column="53">(<argument><expr><name pos:line="3781" pos:column="54">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3781" pos:column="72">indicID2Search</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3781" pos:column="88">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
    }</block></then></if>
    <decl_stmt><decl><type><name pos:line="3784" pos:column="5">int</name></type> <name pos:line="3784" pos:column="9">newPos</name> <init pos:line="3784" pos:column="16">= <expr><name pos:line="3784" pos:column="18">posEnd</name> <op:operator pos:line="3784" pos:column="25">+</op:operator> <lit:literal type="number" pos:line="3784" pos:column="27">1</lit:literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name pos:line="3785" pos:column="5">posStart</name> <op:operator pos:line="3785" pos:column="14">=</op:operator> <call><name><name pos:line="3785" pos:column="16">_pEditView</name><op:operator pos:line="3785" pos:column="26">-&gt;</op:operator><name pos:line="3785" pos:column="28">execute</name></name><argument_list pos:line="3785" pos:column="35">(<argument><expr><name pos:line="3785" pos:column="36">SCI_INDICATORSTART</name></expr></argument>, <argument><expr><name pos:line="3785" pos:column="56">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3785" pos:column="72">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="3786" pos:column="5">posEnd</name> <op:operator pos:line="3786" pos:column="12">=</op:operator> <call><name><name pos:line="3786" pos:column="14">_pEditView</name><op:operator pos:line="3786" pos:column="24">-&gt;</op:operator><name pos:line="3786" pos:column="26">execute</name></name><argument_list pos:line="3786" pos:column="33">(<argument><expr><name pos:line="3786" pos:column="34">SCI_INDICATOREND</name></expr></argument>, <argument><expr><name pos:line="3786" pos:column="52">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3786" pos:column="68">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="3788" pos:column="9">// found</comment>
	<if pos:line="3789" pos:column="9">if <condition pos:line="3789" pos:column="12">(<expr><call><name><name pos:line="3789" pos:column="13">_pEditView</name><op:operator pos:line="3789" pos:column="23">-&gt;</op:operator><name pos:line="3789" pos:column="25">execute</name></name><argument_list pos:line="3789" pos:column="32">(<argument><expr><name pos:line="3789" pos:column="33">SCI_INDICATORVALUEAT</name></expr></argument>, <argument><expr><name pos:line="3789" pos:column="55">indicID2Search</name></expr></argument>, <argument><expr><name pos:line="3789" pos:column="71">posStart</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3789" pos:column="81">
	<block pos:line="3790" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3791" pos:column="17">NppGUI</name> <type:modifier pos:line="3791" pos:column="24">&amp;</type:modifier></type> <name pos:line="3791" pos:column="26">nppGUI</name> <init pos:line="3791" pos:column="33">= <expr><op:operator pos:line="3791" pos:column="35">(</op:operator><name pos:line="3791" pos:column="36">NppGUI</name> <op:operator pos:line="3791" pos:column="43">&amp;</op:operator><op:operator pos:line="3791" pos:column="44">)</op:operator><op:operator pos:line="3791" pos:column="45">(</op:operator><op:operator pos:line="3791" pos:column="46">(</op:operator><call><name><name pos:line="3791" pos:column="47">NppParameters</name><op:operator pos:line="3791" pos:column="60">::</op:operator><name pos:line="3791" pos:column="62">getInstance</name></name><argument_list pos:line="3791" pos:column="73">()</argument_list></call><op:operator pos:line="3791" pos:column="75">)</op:operator><op:operator pos:line="3791" pos:column="76">-&gt;</op:operator><call><name pos:line="3791" pos:column="78">getNppGUI</name><argument_list pos:line="3791" pos:column="87">()</argument_list></call><op:operator pos:line="3791" pos:column="89">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3792" pos:column="17">nppGUI</name><op:operator pos:line="3792" pos:column="23">.</op:operator><name pos:line="3792" pos:column="24">_disableSmartHiliteTmp</name></name> <op:operator pos:line="3792" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="3792" pos:column="49">true</lit:literal></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="3794" pos:column="9">int</name></type> <name pos:line="3794" pos:column="13">currentline</name> <init pos:line="3794" pos:column="25">= <expr><call><name><name pos:line="3794" pos:column="27">_pEditView</name><op:operator pos:line="3794" pos:column="37">-&gt;</op:operator><name pos:line="3794" pos:column="39">execute</name></name><argument_list pos:line="3794" pos:column="46">(<argument><expr><name pos:line="3794" pos:column="47">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="3794" pos:column="69">posEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <expr_stmt><expr><call><name><name pos:line="3795" pos:column="13">_pEditView</name><op:operator pos:line="3795" pos:column="23">-&gt;</op:operator><name pos:line="3795" pos:column="25">execute</name></name><argument_list pos:line="3795" pos:column="32">(<argument><expr><name pos:line="3795" pos:column="33">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="3795" pos:column="52">currentline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3795" pos:column="73">// make sure target line is unfolded</comment>

		<expr_stmt><expr><call><name><name pos:line="3797" pos:column="17">_pEditView</name><op:operator pos:line="3797" pos:column="27">-&gt;</op:operator><name pos:line="3797" pos:column="29">execute</name></name><argument_list pos:line="3797" pos:column="36">(<argument><expr><name pos:line="3797" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="3797" pos:column="49">posStart</name></expr></argument>, <argument><expr><name pos:line="3797" pos:column="59">posEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3798" pos:column="17">_pEditView</name><op:operator pos:line="3798" pos:column="27">-&gt;</op:operator><name pos:line="3798" pos:column="29">execute</name></name><argument_list pos:line="3798" pos:column="36">(<argument><expr><name pos:line="3798" pos:column="37">SCI_SCROLLCARET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="3799" pos:column="17">return <expr><lit:literal type="boolean" pos:line="3799" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="3801" pos:column="9">return <expr><lit:literal type="boolean" pos:line="3801" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="3804" pos:column="1">void</name></type> <name><name pos:line="3804" pos:column="6">Notepad_plus</name><op:operator pos:line="3804" pos:column="18">::</op:operator><name pos:line="3804" pos:column="20">fullScreenToggle</name></name><parameter_list pos:line="3804" pos:column="36">()</parameter_list>
<block pos:line="3805" pos:column="1">{
	<if pos:line="3806" pos:column="9">if <condition pos:line="3806" pos:column="12">(<expr><op:operator pos:line="3806" pos:column="13">!</op:operator><name><name pos:line="3806" pos:column="14">_beforeSpecialView</name><op:operator pos:line="3806" pos:column="32">.</op:operator><name pos:line="3806" pos:column="33">isFullScreen</name></name></expr>)</condition><then pos:line="3806" pos:column="46">	<comment type="line" pos:line="3806" pos:column="49">//toggle fullscreen on</comment>
	<block pos:line="3807" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="3808" pos:column="17">_beforeSpecialView</name><op:operator pos:line="3808" pos:column="35">.</op:operator><name pos:line="3808" pos:column="36">_winPlace</name><op:operator pos:line="3808" pos:column="45">.</op:operator><name pos:line="3808" pos:column="46">length</name></name> <op:operator pos:line="3808" pos:column="53">=</op:operator> <sizeof pos:line="3808" pos:column="55">sizeof<argument_list pos:line="3808" pos:column="61">(<argument><expr><name><name pos:line="3808" pos:column="62">_beforeSpecialView</name><op:operator pos:line="3808" pos:column="80">.</op:operator><name pos:line="3808" pos:column="81">_winPlace</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3809" pos:column="17">::</op:operator><name pos:line="3809" pos:column="19">GetWindowPlacement</name></name><argument_list pos:line="3809" pos:column="37">(<argument><expr><call><name><name pos:line="3809" pos:column="38">_pPublicInterface</name><op:operator pos:line="3809" pos:column="55">-&gt;</op:operator><name pos:line="3809" pos:column="57">getHSelf</name></name><argument_list pos:line="3809" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3809" pos:column="69">&amp;</op:operator><name><name pos:line="3809" pos:column="70">_beforeSpecialView</name><op:operator pos:line="3809" pos:column="88">.</op:operator><name pos:line="3809" pos:column="89">_winPlace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="3811" pos:column="17">RECT</name></type> <name pos:line="3811" pos:column="22">fullscreenArea</name></decl>;</decl_stmt>		<comment type="line" pos:line="3811" pos:column="49">//RECT used to calculate window fullscreen size</comment>
		<comment type="line" pos:line="3812" pos:column="17">//Preset view area, in case something fails, primary monitor values</comment>
		<expr_stmt><expr><name><name pos:line="3813" pos:column="17">fullscreenArea</name><op:operator pos:line="3813" pos:column="31">.</op:operator><name pos:line="3813" pos:column="32">top</name></name> <op:operator pos:line="3813" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="3813" pos:column="38">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3814" pos:column="17">fullscreenArea</name><op:operator pos:line="3814" pos:column="31">.</op:operator><name pos:line="3814" pos:column="32">left</name></name> <op:operator pos:line="3814" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="3814" pos:column="39">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3815" pos:column="17">fullscreenArea</name><op:operator pos:line="3815" pos:column="31">.</op:operator><name pos:line="3815" pos:column="32">right</name></name> <op:operator pos:line="3815" pos:column="38">=</op:operator> <call><name pos:line="3815" pos:column="40">GetSystemMetrics</name><argument_list pos:line="3815" pos:column="56">(<argument><expr><name pos:line="3815" pos:column="57">SM_CXSCREEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3816" pos:column="17">fullscreenArea</name><op:operator pos:line="3816" pos:column="31">.</op:operator><name pos:line="3816" pos:column="32">bottom</name></name> <op:operator pos:line="3816" pos:column="39">=</op:operator> <call><name pos:line="3816" pos:column="41">GetSystemMetrics</name><argument_list pos:line="3816" pos:column="57">(<argument><expr><name pos:line="3816" pos:column="58">SM_CYSCREEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3818" pos:column="17">//if (_winVersion != WV_NT)</comment>
		<block pos:line="3819" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3820" pos:column="25">HMONITOR</name></type> <name pos:line="3820" pos:column="34">currentMonitor</name></decl>;</decl_stmt>	<comment type="line" pos:line="3820" pos:column="57">//Handle to monitor where fullscreen should go</comment>
			<decl_stmt><decl><type><name pos:line="3821" pos:column="25">MONITORINFO</name></type> <name pos:line="3821" pos:column="37">mi</name></decl>;</decl_stmt>				<comment type="line" pos:line="3821" pos:column="65">//Info of that monitor</comment>
			<comment type="line" pos:line="3822" pos:column="25">//Caution, this will not work on windows 95, so probably add some checking of some sorts like Unicode checks, IF 95 were to be supported</comment>
			<expr_stmt><expr><name pos:line="3823" pos:column="25">currentMonitor</name> <op:operator pos:line="3823" pos:column="40">=</op:operator> <call><name><op:operator pos:line="3823" pos:column="42">::</op:operator><name pos:line="3823" pos:column="44">MonitorFromWindow</name></name><argument_list pos:line="3823" pos:column="61">(<argument><expr><call><name><name pos:line="3823" pos:column="62">_pPublicInterface</name><op:operator pos:line="3823" pos:column="79">-&gt;</op:operator><name pos:line="3823" pos:column="81">getHSelf</name></name><argument_list pos:line="3823" pos:column="89">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3823" pos:column="93">MONITOR_DEFAULTTONEAREST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3823" pos:column="121">//should always be valid monitor handle</comment>
			<expr_stmt><expr><name><name pos:line="3824" pos:column="25">mi</name><op:operator pos:line="3824" pos:column="27">.</op:operator><name pos:line="3824" pos:column="28">cbSize</name></name> <op:operator pos:line="3824" pos:column="35">=</op:operator> <sizeof pos:line="3824" pos:column="37">sizeof<argument_list pos:line="3824" pos:column="43">(<argument><expr><name pos:line="3824" pos:column="44">MONITORINFO</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
			<if pos:line="3825" pos:column="25">if <condition pos:line="3825" pos:column="28">(<expr><call><name><op:operator pos:line="3825" pos:column="29">::</op:operator><name pos:line="3825" pos:column="31">GetMonitorInfo</name></name><argument_list pos:line="3825" pos:column="45">(<argument><expr><name pos:line="3825" pos:column="46">currentMonitor</name></expr></argument>, <argument><expr><op:operator pos:line="3825" pos:column="62">&amp;</op:operator><name pos:line="3825" pos:column="63">mi</name></expr></argument>)</argument_list></call> <op:operator pos:line="3825" pos:column="67">!=</op:operator> <name pos:line="3825" pos:column="70">FALSE</name></expr>)</condition><then pos:line="3825" pos:column="76">
			<block pos:line="3826" pos:column="25">{
				<expr_stmt><expr><name pos:line="3827" pos:column="33">fullscreenArea</name> <op:operator pos:line="3827" pos:column="48">=</op:operator> <name><name pos:line="3827" pos:column="50">mi</name><op:operator pos:line="3827" pos:column="52">.</op:operator><name pos:line="3827" pos:column="53">rcMonitor</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3828" pos:column="33">fullscreenArea</name><op:operator pos:line="3828" pos:column="47">.</op:operator><name pos:line="3828" pos:column="48">right</name></name> <op:operator pos:line="3828" pos:column="54">-=</op:operator> <name><name pos:line="3828" pos:column="57">fullscreenArea</name><op:operator pos:line="3828" pos:column="71">.</op:operator><name pos:line="3828" pos:column="72">left</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3829" pos:column="33">fullscreenArea</name><op:operator pos:line="3829" pos:column="47">.</op:operator><name pos:line="3829" pos:column="48">bottom</name></name> <op:operator pos:line="3829" pos:column="55">-=</op:operator> <name><name pos:line="3829" pos:column="58">fullscreenArea</name><op:operator pos:line="3829" pos:column="72">.</op:operator><name pos:line="3829" pos:column="73">top</name></name></expr>;</expr_stmt>
			}</block></then></if>
		}</block>

		<comment type="line" pos:line="3833" pos:column="17">//Setup GUI</comment>
        <decl_stmt><decl><type><name pos:line="3834" pos:column="9">int</name></type> <name pos:line="3834" pos:column="13">bs</name> <init pos:line="3834" pos:column="16">= <expr><name pos:line="3834" pos:column="18">buttonStatus_fullscreen</name></expr></init></decl>;</decl_stmt>
		<if pos:line="3835" pos:column="17">if <condition pos:line="3835" pos:column="20">(<expr><name><name pos:line="3835" pos:column="21">_beforeSpecialView</name><op:operator pos:line="3835" pos:column="39">.</op:operator><name pos:line="3835" pos:column="40">isPostIt</name></name></expr>)</condition><then pos:line="3835" pos:column="49">
        <block pos:line="3836" pos:column="9">{
            <expr_stmt><expr><name pos:line="3837" pos:column="13">bs</name> <op:operator pos:line="3837" pos:column="16">|=</op:operator> <name pos:line="3837" pos:column="19">buttonStatus_postit</name></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="3839" pos:column="9">else
		<block pos:line="3840" pos:column="17">{
			<comment type="line" pos:line="3841" pos:column="25">//only change the GUI if not already done by postit</comment>
			<expr_stmt><expr><name><name pos:line="3842" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3842" pos:column="43">.</op:operator><name pos:line="3842" pos:column="44">isMenuShown</name></name> <op:operator pos:line="3842" pos:column="56">=</op:operator> <call><name><op:operator pos:line="3842" pos:column="58">::</op:operator><name pos:line="3842" pos:column="60">SendMessage</name></name><argument_list pos:line="3842" pos:column="71">(<argument><expr><call><name><name pos:line="3842" pos:column="72">_pPublicInterface</name><op:operator pos:line="3842" pos:column="89">-&gt;</op:operator><name pos:line="3842" pos:column="91">getHSelf</name></name><argument_list pos:line="3842" pos:column="99">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3842" pos:column="103">NPPM_ISMENUHIDDEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3842" pos:column="122">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3842" pos:column="125">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3842" pos:column="128">!=</op:operator> <name pos:line="3842" pos:column="131">TRUE</name></expr>;</expr_stmt>
			<if pos:line="3843" pos:column="25">if <condition pos:line="3843" pos:column="28">(<expr><name><name pos:line="3843" pos:column="29">_beforeSpecialView</name><op:operator pos:line="3843" pos:column="47">.</op:operator><name pos:line="3843" pos:column="48">isMenuShown</name></name></expr>)</condition><then pos:line="3843" pos:column="60">
				<expr_stmt><expr><call><name><op:operator pos:line="3844" pos:column="33">::</op:operator><name pos:line="3844" pos:column="35">SendMessage</name></name><argument_list pos:line="3844" pos:column="46">(<argument><expr><call><name><name pos:line="3844" pos:column="47">_pPublicInterface</name><op:operator pos:line="3844" pos:column="64">-&gt;</op:operator><name pos:line="3844" pos:column="66">getHSelf</name></name><argument_list pos:line="3844" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3844" pos:column="78">NPPM_HIDEMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3844" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3844" pos:column="96">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<comment type="line" pos:line="3846" pos:column="25">//Hide rebar</comment>
			<expr_stmt><expr><call><name><name pos:line="3847" pos:column="25">_rebarTop</name><op:operator pos:line="3847" pos:column="34">.</op:operator><name pos:line="3847" pos:column="35">display</name></name><argument_list pos:line="3847" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="3847" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3848" pos:column="25">_rebarBottom</name><op:operator pos:line="3848" pos:column="37">.</op:operator><name pos:line="3848" pos:column="38">display</name></name><argument_list pos:line="3848" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="3848" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="3850" pos:column="9">_restoreButton</name><op:operator pos:line="3850" pos:column="23">.</op:operator><name pos:line="3850" pos:column="24">setButtonStatus</name></name><argument_list pos:line="3850" pos:column="39">(<argument><expr><name pos:line="3850" pos:column="40">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3852" pos:column="17">//Hide window so windows can properly update it</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3853" pos:column="17">::</op:operator><name pos:line="3853" pos:column="19">ShowWindow</name></name><argument_list pos:line="3853" pos:column="29">(<argument><expr><call><name><name pos:line="3853" pos:column="30">_pPublicInterface</name><op:operator pos:line="3853" pos:column="47">-&gt;</op:operator><name pos:line="3853" pos:column="49">getHSelf</name></name><argument_list pos:line="3853" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3853" pos:column="61">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3855" pos:column="17">//Set popup style for fullscreen window and store the old style</comment>
		<if pos:line="3856" pos:column="17">if <condition pos:line="3856" pos:column="20">(<expr><op:operator pos:line="3856" pos:column="21">!</op:operator><name><name pos:line="3856" pos:column="22">_beforeSpecialView</name><op:operator pos:line="3856" pos:column="40">.</op:operator><name pos:line="3856" pos:column="41">isPostIt</name></name></expr>)</condition><then pos:line="3856" pos:column="50">
		<block pos:line="3857" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="3858" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3858" pos:column="43">.</op:operator><name pos:line="3858" pos:column="44">preStyle</name></name> <op:operator pos:line="3858" pos:column="53">=</op:operator> <call><name><op:operator pos:line="3858" pos:column="55">::</op:operator><name pos:line="3858" pos:column="57">SetWindowLongPtr</name></name><argument_list pos:line="3858" pos:column="73">(<argument><expr><call><name><name pos:line="3858" pos:column="74">_pPublicInterface</name><op:operator pos:line="3858" pos:column="91">-&gt;</op:operator><name pos:line="3858" pos:column="93">getHSelf</name></name><argument_list pos:line="3858" pos:column="101">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3858" pos:column="105">GWL_STYLE</name></expr></argument>, <argument><expr><name pos:line="3858" pos:column="116">WS_POPUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3859" pos:column="25">if <condition pos:line="3859" pos:column="28">(<expr><op:operator pos:line="3859" pos:column="29">!</op:operator><name><name pos:line="3859" pos:column="30">_beforeSpecialView</name><op:operator pos:line="3859" pos:column="48">.</op:operator><name pos:line="3859" pos:column="49">preStyle</name></name></expr>)</condition><then pos:line="3859" pos:column="58"> <block pos:line="3859" pos:column="59">{	<comment type="line" pos:line="3859" pos:column="65">//something went wrong, use default settings</comment>
				<expr_stmt><expr><name><name pos:line="3860" pos:column="33">_beforeSpecialView</name><op:operator pos:line="3860" pos:column="51">.</op:operator><name pos:line="3860" pos:column="52">preStyle</name></name> <op:operator pos:line="3860" pos:column="61">=</op:operator> <name pos:line="3860" pos:column="63">WS_OVERLAPPEDWINDOW</name> <op:operator pos:line="3860" pos:column="83">|</op:operator> <name pos:line="3860" pos:column="85">WS_CLIPCHILDREN</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>

		<comment type="line" pos:line="3864" pos:column="17">//Set fullscreen window, highest non-top z-order, show the window and redraw it (refreshing the windowmanager cache aswell)</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3865" pos:column="17">::</op:operator><name pos:line="3865" pos:column="19">ShowWindow</name></name><argument_list pos:line="3865" pos:column="29">(<argument><expr><call><name><name pos:line="3865" pos:column="30">_pPublicInterface</name><op:operator pos:line="3865" pos:column="47">-&gt;</op:operator><name pos:line="3865" pos:column="49">getHSelf</name></name><argument_list pos:line="3865" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3865" pos:column="61">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3866" pos:column="17">::</op:operator><name pos:line="3866" pos:column="19">SetWindowPos</name></name><argument_list pos:line="3866" pos:column="31">(<argument><expr><call><name><name pos:line="3866" pos:column="32">_pPublicInterface</name><op:operator pos:line="3866" pos:column="49">-&gt;</op:operator><name pos:line="3866" pos:column="51">getHSelf</name></name><argument_list pos:line="3866" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3866" pos:column="63">HWND_TOP</name></expr></argument>, <argument><expr><name><name pos:line="3866" pos:column="73">fullscreenArea</name><op:operator pos:line="3866" pos:column="87">.</op:operator><name pos:line="3866" pos:column="88">left</name></name></expr></argument>, <argument><expr><name><name pos:line="3866" pos:column="94">fullscreenArea</name><op:operator pos:line="3866" pos:column="108">.</op:operator><name pos:line="3866" pos:column="109">top</name></name></expr></argument>, <argument><expr><name><name pos:line="3866" pos:column="114">fullscreenArea</name><op:operator pos:line="3866" pos:column="128">.</op:operator><name pos:line="3866" pos:column="129">right</name></name></expr></argument>, <argument><expr><name><name pos:line="3866" pos:column="136">fullscreenArea</name><op:operator pos:line="3866" pos:column="150">.</op:operator><name pos:line="3866" pos:column="151">bottom</name></name></expr></argument>, <argument><expr><name pos:line="3866" pos:column="159">SWP_NOZORDER</name><op:operator pos:line="3866" pos:column="171">|</op:operator><name pos:line="3866" pos:column="172">SWP_DRAWFRAME</name><op:operator pos:line="3866" pos:column="185">|</op:operator><name pos:line="3866" pos:column="186">SWP_FRAMECHANGED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="3867" pos:column="17">::</op:operator><name pos:line="3867" pos:column="19">SetForegroundWindow</name></name><argument_list pos:line="3867" pos:column="38">(<argument><expr><call><name><name pos:line="3867" pos:column="39">_pPublicInterface</name><op:operator pos:line="3867" pos:column="56">-&gt;</op:operator><name pos:line="3867" pos:column="58">getHSelf</name></name><argument_list pos:line="3867" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:line="3869" pos:column="9">// show restore button</comment>
        <expr_stmt><expr><call><name><name pos:line="3870" pos:column="9">_restoreButton</name><op:operator pos:line="3870" pos:column="23">.</op:operator><name pos:line="3870" pos:column="24">doDialog</name></name><argument_list pos:line="3870" pos:column="32">(<argument><expr><call><name><name pos:line="3870" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="3870" pos:column="51">.</op:operator><name pos:line="3870" pos:column="52">isRTL</name></name><argument_list pos:line="3870" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="3872" pos:column="9">RECT</name></type> <name pos:line="3872" pos:column="14">rect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="3873" pos:column="9">GetWindowRect</name><argument_list pos:line="3873" pos:column="22">(<argument><expr><call><name><name pos:line="3873" pos:column="23">_restoreButton</name><op:operator pos:line="3873" pos:column="37">.</op:operator><name pos:line="3873" pos:column="38">getHSelf</name></name><argument_list pos:line="3873" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3873" pos:column="50">&amp;</op:operator><name pos:line="3873" pos:column="51">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name pos:line="3874" pos:column="13">int</name></type> <name pos:line="3874" pos:column="17">w</name> <init pos:line="3874" pos:column="19">= <expr><name><name pos:line="3874" pos:column="21">rect</name><op:operator pos:line="3874" pos:column="25">.</op:operator><name pos:line="3874" pos:column="26">right</name></name> <op:operator pos:line="3874" pos:column="32">-</op:operator> <name><name pos:line="3874" pos:column="34">rect</name><op:operator pos:line="3874" pos:column="38">.</op:operator><name pos:line="3874" pos:column="39">left</name></name></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name pos:line="3875" pos:column="13">int</name></type> <name pos:line="3875" pos:column="17">h</name> <init pos:line="3875" pos:column="19">= <expr><name><name pos:line="3875" pos:column="21">rect</name><op:operator pos:line="3875" pos:column="25">.</op:operator><name pos:line="3875" pos:column="26">bottom</name></name> <op:operator pos:line="3875" pos:column="33">-</op:operator> <name><name pos:line="3875" pos:column="35">rect</name><op:operator pos:line="3875" pos:column="39">.</op:operator><name pos:line="3875" pos:column="40">top</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="3877" pos:column="9">RECT</name></type> <name pos:line="3877" pos:column="14">nppRect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="3878" pos:column="9">GetWindowRect</name><argument_list pos:line="3878" pos:column="22">(<argument><expr><call><name><name pos:line="3878" pos:column="23">_pPublicInterface</name><op:operator pos:line="3878" pos:column="40">-&gt;</op:operator><name pos:line="3878" pos:column="42">getHSelf</name></name><argument_list pos:line="3878" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3878" pos:column="54">&amp;</op:operator><name pos:line="3878" pos:column="55">nppRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="3879" pos:column="9">int</name></type> <name pos:line="3879" pos:column="13">x</name> <init pos:line="3879" pos:column="15">= <expr><name><name pos:line="3879" pos:column="17">nppRect</name><op:operator pos:line="3879" pos:column="24">.</op:operator><name pos:line="3879" pos:column="25">right</name></name> <op:operator pos:line="3879" pos:column="31">-</op:operator> <name pos:line="3879" pos:column="33">w</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="3880" pos:column="9">int</name></type> <name pos:line="3880" pos:column="13">y</name> <init pos:line="3880" pos:column="15">= <expr><name><name pos:line="3880" pos:column="17">nppRect</name><op:operator pos:line="3880" pos:column="24">.</op:operator><name pos:line="3880" pos:column="25">top</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="3881" pos:column="9">::</op:operator><name pos:line="3881" pos:column="11">MoveWindow</name></name><argument_list pos:line="3881" pos:column="21">(<argument><expr><call><name><name pos:line="3881" pos:column="22">_restoreButton</name><op:operator pos:line="3881" pos:column="36">.</op:operator><name pos:line="3881" pos:column="37">getHSelf</name></name><argument_list pos:line="3881" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3881" pos:column="49">x</name></expr></argument>, <argument><expr><name pos:line="3881" pos:column="52">y</name></expr></argument>, <argument><expr><name pos:line="3881" pos:column="55">w</name></expr></argument>, <argument><expr><name pos:line="3881" pos:column="58">h</name></expr></argument>, <argument><expr><name pos:line="3881" pos:column="61">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="3883" pos:column="9">_pEditView</name><op:operator pos:line="3883" pos:column="19">-&gt;</op:operator><name pos:line="3883" pos:column="21">getFocus</name></name><argument_list pos:line="3883" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="3885" pos:column="9">else	<comment type="line" pos:line="3885" pos:column="17">//toggle fullscreen off</comment>
	<block pos:line="3886" pos:column="9">{
		<comment type="line" pos:line="3887" pos:column="17">//Hide window for updating, restore style and menu then restore position and Z-Order</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="3888" pos:column="17">::</op:operator><name pos:line="3888" pos:column="19">ShowWindow</name></name><argument_list pos:line="3888" pos:column="29">(<argument><expr><call><name><name pos:line="3888" pos:column="30">_pPublicInterface</name><op:operator pos:line="3888" pos:column="47">-&gt;</op:operator><name pos:line="3888" pos:column="49">getHSelf</name></name><argument_list pos:line="3888" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3888" pos:column="61">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="3890" pos:column="9">_restoreButton</name><op:operator pos:line="3890" pos:column="23">.</op:operator><name pos:line="3890" pos:column="24">setButtonStatus</name></name><argument_list pos:line="3890" pos:column="39">(<argument><expr><name pos:line="3890" pos:column="40">buttonStatus_fullscreen</name> <op:operator pos:line="3890" pos:column="64">^</op:operator> <call><name><name pos:line="3890" pos:column="66">_restoreButton</name><op:operator pos:line="3890" pos:column="80">.</op:operator><name pos:line="3890" pos:column="81">getButtonStatus</name></name><argument_list pos:line="3890" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="3891" pos:column="9">_restoreButton</name><op:operator pos:line="3891" pos:column="23">.</op:operator><name pos:line="3891" pos:column="24">display</name></name><argument_list pos:line="3891" pos:column="31">(<argument><expr><lit:literal type="boolean" pos:line="3891" pos:column="32">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3893" pos:column="17">//Setup GUI</comment>
		<if pos:line="3894" pos:column="17">if <condition pos:line="3894" pos:column="20">(<expr><op:operator pos:line="3894" pos:column="21">!</op:operator><name><name pos:line="3894" pos:column="22">_beforeSpecialView</name><op:operator pos:line="3894" pos:column="40">.</op:operator><name pos:line="3894" pos:column="41">isPostIt</name></name></expr>)</condition><then pos:line="3894" pos:column="50">
		<block pos:line="3895" pos:column="17">{
			<comment type="line" pos:line="3896" pos:column="25">//only change the GUI if postit isnt active</comment>
			<if pos:line="3897" pos:column="25">if <condition pos:line="3897" pos:column="28">(<expr><name><name pos:line="3897" pos:column="29">_beforeSpecialView</name><op:operator pos:line="3897" pos:column="47">.</op:operator><name pos:line="3897" pos:column="48">isMenuShown</name></name></expr>)</condition><then pos:line="3897" pos:column="60">
				<expr_stmt><expr><call><name><op:operator pos:line="3898" pos:column="33">::</op:operator><name pos:line="3898" pos:column="35">SendMessage</name></name><argument_list pos:line="3898" pos:column="46">(<argument><expr><call><name><name pos:line="3898" pos:column="47">_pPublicInterface</name><op:operator pos:line="3898" pos:column="64">-&gt;</op:operator><name pos:line="3898" pos:column="66">getHSelf</name></name><argument_list pos:line="3898" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3898" pos:column="78">NPPM_HIDEMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3898" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3898" pos:column="96">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<comment type="line" pos:line="3900" pos:column="25">//Show rebar</comment>
			<expr_stmt><expr><call><name><name pos:line="3901" pos:column="25">_rebarTop</name><op:operator pos:line="3901" pos:column="34">.</op:operator><name pos:line="3901" pos:column="35">display</name></name><argument_list pos:line="3901" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="3901" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3902" pos:column="25">_rebarBottom</name><op:operator pos:line="3902" pos:column="37">.</op:operator><name pos:line="3902" pos:column="38">display</name></name><argument_list pos:line="3902" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="3902" pos:column="46">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="3905" pos:column="17">//Set old style if not fullscreen</comment>
		<if pos:line="3906" pos:column="17">if <condition pos:line="3906" pos:column="20">(<expr><op:operator pos:line="3906" pos:column="21">!</op:operator><name><name pos:line="3906" pos:column="22">_beforeSpecialView</name><op:operator pos:line="3906" pos:column="40">.</op:operator><name pos:line="3906" pos:column="41">isPostIt</name></name></expr>)</condition><then pos:line="3906" pos:column="50">
		<block pos:line="3907" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="3908" pos:column="25">::</op:operator><name pos:line="3908" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="3908" pos:column="43">( <argument><expr><call><name><name pos:line="3908" pos:column="45">_pPublicInterface</name><op:operator pos:line="3908" pos:column="62">-&gt;</op:operator><name pos:line="3908" pos:column="64">getHSelf</name></name><argument_list pos:line="3908" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3908" pos:column="76">GWL_STYLE</name></expr></argument>, <argument><expr><name><name pos:line="3908" pos:column="87">_beforeSpecialView</name><op:operator pos:line="3908" pos:column="105">.</op:operator><name pos:line="3908" pos:column="106">preStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="3909" pos:column="25">//Redraw the window and refresh windowmanager cache, dont do anything else, sizing is done later on</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="3910" pos:column="25">::</op:operator><name pos:line="3910" pos:column="27">SetWindowPos</name></name><argument_list pos:line="3910" pos:column="39">(<argument><expr><call><name><name pos:line="3910" pos:column="40">_pPublicInterface</name><op:operator pos:line="3910" pos:column="57">-&gt;</op:operator><name pos:line="3910" pos:column="59">getHSelf</name></name><argument_list pos:line="3910" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3910" pos:column="71">HWND_TOP</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3910" pos:column="80">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3910" pos:column="82">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3910" pos:column="84">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3910" pos:column="86">0</lit:literal></expr></argument>,<argument><expr><name pos:line="3910" pos:column="88">SWP_NOMOVE</name><op:operator pos:line="3910" pos:column="98">|</op:operator><name pos:line="3910" pos:column="99">SWP_NOSIZE</name><op:operator pos:line="3910" pos:column="109">|</op:operator><name pos:line="3910" pos:column="110">SWP_NOZORDER</name><op:operator pos:line="3910" pos:column="122">|</op:operator><name pos:line="3910" pos:column="123">SWP_DRAWFRAME</name><op:operator pos:line="3910" pos:column="136">|</op:operator><name pos:line="3910" pos:column="137">SWP_FRAMECHANGED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="3911" pos:column="25">::</op:operator><name pos:line="3911" pos:column="27">ShowWindow</name></name><argument_list pos:line="3911" pos:column="37">(<argument><expr><call><name><name pos:line="3911" pos:column="38">_pPublicInterface</name><op:operator pos:line="3911" pos:column="55">-&gt;</op:operator><name pos:line="3911" pos:column="57">getHSelf</name></name><argument_list pos:line="3911" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3911" pos:column="69">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="3914" pos:column="17">if <condition pos:line="3914" pos:column="20">(<expr><name><name pos:line="3914" pos:column="21">_beforeSpecialView</name><op:operator pos:line="3914" pos:column="39">.</op:operator><name pos:line="3914" pos:column="40">_winPlace</name><op:operator pos:line="3914" pos:column="49">.</op:operator><name pos:line="3914" pos:column="50">length</name></name></expr>)</condition><then pos:line="3914" pos:column="57">
		<block pos:line="3915" pos:column="17">{
			<if pos:line="3916" pos:column="25">if <condition pos:line="3916" pos:column="28">(<expr><name><name pos:line="3916" pos:column="29">_beforeSpecialView</name><op:operator pos:line="3916" pos:column="47">.</op:operator><name pos:line="3916" pos:column="48">_winPlace</name><op:operator pos:line="3916" pos:column="57">.</op:operator><name pos:line="3916" pos:column="58">showCmd</name></name> <op:operator pos:line="3916" pos:column="66">==</op:operator> <name pos:line="3916" pos:column="69">SW_SHOWMAXIMIZED</name></expr>)</condition><then pos:line="3916" pos:column="86">
			<block pos:line="3917" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="3918" pos:column="33">::</op:operator><name pos:line="3918" pos:column="35">ShowWindow</name></name><argument_list pos:line="3918" pos:column="45">(<argument><expr><call><name><name pos:line="3918" pos:column="46">_pPublicInterface</name><op:operator pos:line="3918" pos:column="63">-&gt;</op:operator><name pos:line="3918" pos:column="65">getHSelf</name></name><argument_list pos:line="3918" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3918" pos:column="77">SW_SHOWMAXIMIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="3920" pos:column="25">else
			<block pos:line="3921" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="3922" pos:column="33">::</op:operator><name pos:line="3922" pos:column="35">SetWindowPlacement</name></name><argument_list pos:line="3922" pos:column="53">(<argument><expr><call><name><name pos:line="3922" pos:column="54">_pPublicInterface</name><op:operator pos:line="3922" pos:column="71">-&gt;</op:operator><name pos:line="3922" pos:column="73">getHSelf</name></name><argument_list pos:line="3922" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3922" pos:column="85">&amp;</op:operator><name><name pos:line="3922" pos:column="86">_beforeSpecialView</name><op:operator pos:line="3922" pos:column="104">.</op:operator><name pos:line="3922" pos:column="105">_winPlace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then>
		<else pos:line="3925" pos:column="17">else	<comment type="line" pos:line="3925" pos:column="25">//fallback</comment>
		<block pos:line="3926" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="3927" pos:column="25">::</op:operator><name pos:line="3927" pos:column="27">ShowWindow</name></name><argument_list pos:line="3927" pos:column="37">(<argument><expr><call><name><name pos:line="3927" pos:column="38">_pPublicInterface</name><op:operator pos:line="3927" pos:column="55">-&gt;</op:operator><name pos:line="3927" pos:column="57">getHSelf</name></name><argument_list pos:line="3927" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3927" pos:column="69">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
	<comment type="line" pos:line="3930" pos:column="9">//::SetForegroundWindow(_pPublicInterface-&gt;getHSelf());</comment>
	<expr_stmt><expr><name><name pos:line="3931" pos:column="9">_beforeSpecialView</name><op:operator pos:line="3931" pos:column="27">.</op:operator><name pos:line="3931" pos:column="28">isFullScreen</name></name> <op:operator pos:line="3931" pos:column="41">=</op:operator> <op:operator pos:line="3931" pos:column="43">!</op:operator><name><name pos:line="3931" pos:column="44">_beforeSpecialView</name><op:operator pos:line="3931" pos:column="62">.</op:operator><name pos:line="3931" pos:column="63">isFullScreen</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="3932" pos:column="9">::</op:operator><name pos:line="3932" pos:column="11">SendMessage</name></name><argument_list pos:line="3932" pos:column="22">(<argument><expr><call><name><name pos:line="3932" pos:column="23">_pPublicInterface</name><op:operator pos:line="3932" pos:column="40">-&gt;</op:operator><name pos:line="3932" pos:column="42">getHSelf</name></name><argument_list pos:line="3932" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3932" pos:column="54">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3932" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3932" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if pos:line="3933" pos:column="5">if <condition pos:line="3933" pos:column="8">(<expr><name><name pos:line="3933" pos:column="9">_beforeSpecialView</name><op:operator pos:line="3933" pos:column="27">.</op:operator><name pos:line="3933" pos:column="28">isPostIt</name></name></expr>)</condition><then pos:line="3933" pos:column="37">
    <block pos:line="3934" pos:column="5">{
        <comment type="line" pos:line="3935" pos:column="9">// show restore button on the right position</comment>
        <decl_stmt><decl><type><name pos:line="3936" pos:column="9">RECT</name></type> <name pos:line="3936" pos:column="14">rect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="3937" pos:column="9">GetWindowRect</name><argument_list pos:line="3937" pos:column="22">(<argument><expr><call><name><name pos:line="3937" pos:column="23">_restoreButton</name><op:operator pos:line="3937" pos:column="37">.</op:operator><name pos:line="3937" pos:column="38">getHSelf</name></name><argument_list pos:line="3937" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3937" pos:column="50">&amp;</op:operator><name pos:line="3937" pos:column="51">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="3938" pos:column="9">int</name></type> <name pos:line="3938" pos:column="13">w</name> <init pos:line="3938" pos:column="15">= <expr><name><name pos:line="3938" pos:column="17">rect</name><op:operator pos:line="3938" pos:column="21">.</op:operator><name pos:line="3938" pos:column="22">right</name></name> <op:operator pos:line="3938" pos:column="28">-</op:operator> <name><name pos:line="3938" pos:column="30">rect</name><op:operator pos:line="3938" pos:column="34">.</op:operator><name pos:line="3938" pos:column="35">left</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="3939" pos:column="9">int</name></type> <name pos:line="3939" pos:column="13">h</name> <init pos:line="3939" pos:column="15">= <expr><name><name pos:line="3939" pos:column="17">rect</name><op:operator pos:line="3939" pos:column="21">.</op:operator><name pos:line="3939" pos:column="22">bottom</name></name> <op:operator pos:line="3939" pos:column="29">-</op:operator> <name><name pos:line="3939" pos:column="31">rect</name><op:operator pos:line="3939" pos:column="35">.</op:operator><name pos:line="3939" pos:column="36">top</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="3941" pos:column="9">RECT</name></type> <name pos:line="3941" pos:column="14">nppRect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="3942" pos:column="9">GetWindowRect</name><argument_list pos:line="3942" pos:column="22">(<argument><expr><call><name><name pos:line="3942" pos:column="23">_pPublicInterface</name><op:operator pos:line="3942" pos:column="40">-&gt;</op:operator><name pos:line="3942" pos:column="42">getHSelf</name></name><argument_list pos:line="3942" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3942" pos:column="54">&amp;</op:operator><name pos:line="3942" pos:column="55">nppRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="3943" pos:column="9">int</name></type> <name pos:line="3943" pos:column="13">x</name> <init pos:line="3943" pos:column="15">= <expr><name><name pos:line="3943" pos:column="17">nppRect</name><op:operator pos:line="3943" pos:column="24">.</op:operator><name pos:line="3943" pos:column="25">right</name></name> <op:operator pos:line="3943" pos:column="31">-</op:operator> <name pos:line="3943" pos:column="33">w</name> <op:operator pos:line="3943" pos:column="35">-</op:operator> <name pos:line="3943" pos:column="37">w</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="3944" pos:column="9">int</name></type> <name pos:line="3944" pos:column="13">y</name> <init pos:line="3944" pos:column="15">= <expr><name><name pos:line="3944" pos:column="17">nppRect</name><op:operator pos:line="3944" pos:column="24">.</op:operator><name pos:line="3944" pos:column="25">top</name></name> <op:operator pos:line="3944" pos:column="29">+</op:operator> <lit:literal type="number" pos:line="3944" pos:column="31">1</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="3945" pos:column="9">::</op:operator><name pos:line="3945" pos:column="11">MoveWindow</name></name><argument_list pos:line="3945" pos:column="21">(<argument><expr><call><name><name pos:line="3945" pos:column="22">_restoreButton</name><op:operator pos:line="3945" pos:column="36">.</op:operator><name pos:line="3945" pos:column="37">getHSelf</name></name><argument_list pos:line="3945" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3945" pos:column="49">x</name></expr></argument>, <argument><expr><name pos:line="3945" pos:column="52">y</name></expr></argument>, <argument><expr><name pos:line="3945" pos:column="55">w</name></expr></argument>, <argument><expr><name pos:line="3945" pos:column="58">h</name></expr></argument>, <argument><expr><name pos:line="3945" pos:column="61">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
}</block></function>

<function><type><name pos:line="3949" pos:column="1">void</name></type> <name><name pos:line="3949" pos:column="6">Notepad_plus</name><op:operator pos:line="3949" pos:column="18">::</op:operator><name pos:line="3949" pos:column="20">postItToggle</name></name><parameter_list pos:line="3949" pos:column="32">()</parameter_list>
<block pos:line="3950" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3951" pos:column="9">NppParameters</name> <type:modifier pos:line="3951" pos:column="23">*</type:modifier></type> <name pos:line="3951" pos:column="25">pNppParam</name> <init pos:line="3951" pos:column="35">= <expr><call><name><name pos:line="3951" pos:column="37">NppParameters</name><op:operator pos:line="3951" pos:column="50">::</op:operator><name pos:line="3951" pos:column="52">getInstance</name></name><argument_list pos:line="3951" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3952" pos:column="9">if <condition pos:line="3952" pos:column="12">(<expr><op:operator pos:line="3952" pos:column="13">!</op:operator><name><name pos:line="3952" pos:column="14">_beforeSpecialView</name><op:operator pos:line="3952" pos:column="32">.</op:operator><name pos:line="3952" pos:column="33">isPostIt</name></name></expr>)</condition><then pos:line="3952" pos:column="42">	<comment type="line" pos:line="3952" pos:column="49">// PostIt disabled, enable it</comment>
	<block pos:line="3953" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3954" pos:column="17">NppGUI</name> <type:modifier pos:line="3954" pos:column="24">&amp;</type:modifier></type> <name pos:line="3954" pos:column="26">nppGUI</name> <init pos:line="3954" pos:column="33">= <expr><op:operator pos:line="3954" pos:column="35">(</op:operator><name pos:line="3954" pos:column="36">NppGUI</name> <op:operator pos:line="3954" pos:column="43">&amp;</op:operator><op:operator pos:line="3954" pos:column="44">)</op:operator><call><name><name pos:line="3954" pos:column="45">pNppParam</name><op:operator pos:line="3954" pos:column="54">-&gt;</op:operator><name pos:line="3954" pos:column="56">getNppGUI</name></name><argument_list pos:line="3954" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="3955" pos:column="17">// get current status before switch to postIt</comment>
		<comment type="line" pos:line="3956" pos:column="17">//check these always</comment>
		<block pos:line="3957" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="3958" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3958" pos:column="43">.</op:operator><name pos:line="3958" pos:column="44">isAlwaysOnTop</name></name> <op:operator pos:line="3958" pos:column="58">=</op:operator> <call><name><op:operator pos:line="3958" pos:column="60">::</op:operator><name pos:line="3958" pos:column="62">GetMenuState</name></name><argument_list pos:line="3958" pos:column="74">(<argument><expr><name pos:line="3958" pos:column="75">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="3958" pos:column="92">IDM_VIEW_ALWAYSONTOP</name></expr></argument>, <argument><expr><name pos:line="3958" pos:column="114">MF_BYCOMMAND</name></expr></argument>)</argument_list></call> <op:operator pos:line="3958" pos:column="128">==</op:operator> <name pos:line="3958" pos:column="131">MF_CHECKED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="3959" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3959" pos:column="43">.</op:operator><name pos:line="3959" pos:column="44">isTabbarShown</name></name> <op:operator pos:line="3959" pos:column="58">=</op:operator> <call><name><op:operator pos:line="3959" pos:column="60">::</op:operator><name pos:line="3959" pos:column="62">SendMessage</name></name><argument_list pos:line="3959" pos:column="73">(<argument><expr><call><name><name pos:line="3959" pos:column="74">_pPublicInterface</name><op:operator pos:line="3959" pos:column="91">-&gt;</op:operator><name pos:line="3959" pos:column="93">getHSelf</name></name><argument_list pos:line="3959" pos:column="101">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3959" pos:column="105">NPPM_ISTABBARHIDDEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3959" pos:column="126">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3959" pos:column="129">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3959" pos:column="132">!=</op:operator> <name pos:line="3959" pos:column="135">TRUE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="3960" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3960" pos:column="43">.</op:operator><name pos:line="3960" pos:column="44">isStatusbarShown</name></name> <op:operator pos:line="3960" pos:column="61">=</op:operator> <name><name pos:line="3960" pos:column="63">nppGUI</name><op:operator pos:line="3960" pos:column="69">.</op:operator><name pos:line="3960" pos:column="70">_statusBarShow</name></name></expr>;</expr_stmt>
			<if pos:line="3961" pos:column="25">if <condition pos:line="3961" pos:column="28">(<expr><name><name pos:line="3961" pos:column="29">nppGUI</name><op:operator pos:line="3961" pos:column="35">.</op:operator><name pos:line="3961" pos:column="36">_statusBarShow</name></name></expr>)</condition><then pos:line="3961" pos:column="51">
				<expr_stmt><expr><call><name><op:operator pos:line="3962" pos:column="33">::</op:operator><name pos:line="3962" pos:column="35">SendMessage</name></name><argument_list pos:line="3962" pos:column="46">(<argument><expr><call><name><name pos:line="3962" pos:column="47">_pPublicInterface</name><op:operator pos:line="3962" pos:column="64">-&gt;</op:operator><name pos:line="3962" pos:column="66">getHSelf</name></name><argument_list pos:line="3962" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3962" pos:column="78">NPPM_HIDESTATUSBAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3962" pos:column="98">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3962" pos:column="101">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="3963" pos:column="25">if <condition pos:line="3963" pos:column="28">(<expr><name><name pos:line="3963" pos:column="29">_beforeSpecialView</name><op:operator pos:line="3963" pos:column="47">.</op:operator><name pos:line="3963" pos:column="48">isTabbarShown</name></name></expr>)</condition><then pos:line="3963" pos:column="62">
				<expr_stmt><expr><call><name><op:operator pos:line="3964" pos:column="33">::</op:operator><name pos:line="3964" pos:column="35">SendMessage</name></name><argument_list pos:line="3964" pos:column="46">(<argument><expr><call><name><name pos:line="3964" pos:column="47">_pPublicInterface</name><op:operator pos:line="3964" pos:column="64">-&gt;</op:operator><name pos:line="3964" pos:column="66">getHSelf</name></name><argument_list pos:line="3964" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3964" pos:column="78">NPPM_HIDETABBAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3964" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3964" pos:column="98">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="3965" pos:column="25">if <condition pos:line="3965" pos:column="28">(<expr><op:operator pos:line="3965" pos:column="29">!</op:operator><name><name pos:line="3965" pos:column="30">_beforeSpecialView</name><op:operator pos:line="3965" pos:column="48">.</op:operator><name pos:line="3965" pos:column="49">isAlwaysOnTop</name></name></expr>)</condition><then pos:line="3965" pos:column="63">
				<expr_stmt><expr><call><name><op:operator pos:line="3966" pos:column="33">::</op:operator><name pos:line="3966" pos:column="35">SendMessage</name></name><argument_list pos:line="3966" pos:column="46">(<argument><expr><call><name><name pos:line="3966" pos:column="47">_pPublicInterface</name><op:operator pos:line="3966" pos:column="64">-&gt;</op:operator><name pos:line="3966" pos:column="66">getHSelf</name></name><argument_list pos:line="3966" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3966" pos:column="78">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="3966" pos:column="90">IDM_VIEW_ALWAYSONTOP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3966" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<comment type="line" pos:line="3968" pos:column="17">//Only check these if not fullscreen</comment>
        <decl_stmt><decl><type><name pos:line="3969" pos:column="9">int</name></type> <name pos:line="3969" pos:column="13">bs</name> <init pos:line="3969" pos:column="16">= <expr><name pos:line="3969" pos:column="18">buttonStatus_postit</name></expr></init></decl>;</decl_stmt>
		<if pos:line="3970" pos:column="17">if <condition pos:line="3970" pos:column="20">(<expr><name><name pos:line="3970" pos:column="21">_beforeSpecialView</name><op:operator pos:line="3970" pos:column="39">.</op:operator><name pos:line="3970" pos:column="40">isFullScreen</name></name></expr>)</condition><then pos:line="3970" pos:column="53">
        <block pos:line="3971" pos:column="9">{
            <expr_stmt><expr><name pos:line="3972" pos:column="13">bs</name> <op:operator pos:line="3972" pos:column="16">|=</op:operator> <name pos:line="3972" pos:column="19">buttonStatus_fullscreen</name></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="3974" pos:column="9">else
		<block pos:line="3975" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="3976" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3976" pos:column="43">.</op:operator><name pos:line="3976" pos:column="44">isMenuShown</name></name> <op:operator pos:line="3976" pos:column="56">=</op:operator> <call><name><op:operator pos:line="3976" pos:column="58">::</op:operator><name pos:line="3976" pos:column="60">SendMessage</name></name><argument_list pos:line="3976" pos:column="71">(<argument><expr><call><name><name pos:line="3976" pos:column="72">_pPublicInterface</name><op:operator pos:line="3976" pos:column="89">-&gt;</op:operator><name pos:line="3976" pos:column="91">getHSelf</name></name><argument_list pos:line="3976" pos:column="99">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3976" pos:column="103">NPPM_ISMENUHIDDEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3976" pos:column="122">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3976" pos:column="125">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3976" pos:column="128">!=</op:operator> <name pos:line="3976" pos:column="131">TRUE</name></expr>;</expr_stmt>
			<if pos:line="3977" pos:column="25">if <condition pos:line="3977" pos:column="28">(<expr><name><name pos:line="3977" pos:column="29">_beforeSpecialView</name><op:operator pos:line="3977" pos:column="47">.</op:operator><name pos:line="3977" pos:column="48">isMenuShown</name></name></expr>)</condition><then pos:line="3977" pos:column="60">
				<expr_stmt><expr><call><name><op:operator pos:line="3978" pos:column="33">::</op:operator><name pos:line="3978" pos:column="35">SendMessage</name></name><argument_list pos:line="3978" pos:column="46">(<argument><expr><call><name><name pos:line="3978" pos:column="47">_pPublicInterface</name><op:operator pos:line="3978" pos:column="64">-&gt;</op:operator><name pos:line="3978" pos:column="66">getHSelf</name></name><argument_list pos:line="3978" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3978" pos:column="78">NPPM_HIDEMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3978" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3978" pos:column="96">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<comment type="line" pos:line="3980" pos:column="25">//Hide rebar</comment>
			<expr_stmt><expr><call><name><name pos:line="3981" pos:column="25">_rebarTop</name><op:operator pos:line="3981" pos:column="34">.</op:operator><name pos:line="3981" pos:column="35">display</name></name><argument_list pos:line="3981" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="3981" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3982" pos:column="25">_rebarBottom</name><op:operator pos:line="3982" pos:column="37">.</op:operator><name pos:line="3982" pos:column="38">display</name></name><argument_list pos:line="3982" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="3982" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="3984" pos:column="9">_restoreButton</name><op:operator pos:line="3984" pos:column="23">.</op:operator><name pos:line="3984" pos:column="24">setButtonStatus</name></name><argument_list pos:line="3984" pos:column="39">(<argument><expr><name pos:line="3984" pos:column="40">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3986" pos:column="17">// PostIt!</comment>

		<comment type="line" pos:line="3988" pos:column="17">//Set popup style for fullscreen window and store the old style</comment>
		<if pos:line="3989" pos:column="17">if <condition pos:line="3989" pos:column="20">(<expr><op:operator pos:line="3989" pos:column="21">!</op:operator><name><name pos:line="3989" pos:column="22">_beforeSpecialView</name><op:operator pos:line="3989" pos:column="40">.</op:operator><name pos:line="3989" pos:column="41">isFullScreen</name></name></expr>)</condition><then pos:line="3989" pos:column="54">
		<block pos:line="3990" pos:column="17">{
			<comment type="line" pos:line="3991" pos:column="25">//Hide window so windows can properly update it</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="3992" pos:column="25">::</op:operator><name pos:line="3992" pos:column="27">ShowWindow</name></name><argument_list pos:line="3992" pos:column="37">(<argument><expr><call><name><name pos:line="3992" pos:column="38">_pPublicInterface</name><op:operator pos:line="3992" pos:column="55">-&gt;</op:operator><name pos:line="3992" pos:column="57">getHSelf</name></name><argument_list pos:line="3992" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3992" pos:column="69">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="3993" pos:column="25">_beforeSpecialView</name><op:operator pos:line="3993" pos:column="43">.</op:operator><name pos:line="3993" pos:column="44">preStyle</name></name> <op:operator pos:line="3993" pos:column="53">=</op:operator> <call><name><op:operator pos:line="3993" pos:column="55">::</op:operator><name pos:line="3993" pos:column="57">SetWindowLongPtr</name></name><argument_list pos:line="3993" pos:column="73">( <argument><expr><call><name><name pos:line="3993" pos:column="75">_pPublicInterface</name><op:operator pos:line="3993" pos:column="92">-&gt;</op:operator><name pos:line="3993" pos:column="94">getHSelf</name></name><argument_list pos:line="3993" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3993" pos:column="106">GWL_STYLE</name></expr></argument>, <argument><expr><name pos:line="3993" pos:column="117">WS_POPUP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3994" pos:column="25">if <condition pos:line="3994" pos:column="28">(<expr><op:operator pos:line="3994" pos:column="29">!</op:operator><name><name pos:line="3994" pos:column="30">_beforeSpecialView</name><op:operator pos:line="3994" pos:column="48">.</op:operator><name pos:line="3994" pos:column="49">preStyle</name></name></expr>)</condition><then pos:line="3994" pos:column="58"> <block pos:line="3994" pos:column="59">{	<comment type="line" pos:line="3994" pos:column="65">//something went wrong, use default settings</comment>
				<expr_stmt><expr><name><name pos:line="3995" pos:column="33">_beforeSpecialView</name><op:operator pos:line="3995" pos:column="51">.</op:operator><name pos:line="3995" pos:column="52">preStyle</name></name> <op:operator pos:line="3995" pos:column="61">=</op:operator> <name pos:line="3995" pos:column="63">WS_OVERLAPPEDWINDOW</name> <op:operator pos:line="3995" pos:column="83">|</op:operator> <name pos:line="3995" pos:column="85">WS_CLIPCHILDREN</name></expr>;</expr_stmt>
			}</block></then></if>
			<comment type="line" pos:line="3997" pos:column="25">//Redraw the window and refresh windowmanager cache, dont do anything else, sizing is done later on</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="3998" pos:column="25">::</op:operator><name pos:line="3998" pos:column="27">SetWindowPos</name></name><argument_list pos:line="3998" pos:column="39">(<argument><expr><call><name><name pos:line="3998" pos:column="40">_pPublicInterface</name><op:operator pos:line="3998" pos:column="57">-&gt;</op:operator><name pos:line="3998" pos:column="59">getHSelf</name></name><argument_list pos:line="3998" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3998" pos:column="71">HWND_TOPMOST</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3998" pos:column="84">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3998" pos:column="86">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3998" pos:column="88">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="3998" pos:column="90">0</lit:literal></expr></argument>,<argument><expr><name pos:line="3998" pos:column="92">SWP_NOMOVE</name><op:operator pos:line="3998" pos:column="102">|</op:operator><name pos:line="3998" pos:column="103">SWP_NOSIZE</name><op:operator pos:line="3998" pos:column="113">|</op:operator><name pos:line="3998" pos:column="114">SWP_NOZORDER</name><op:operator pos:line="3998" pos:column="126">|</op:operator><name pos:line="3998" pos:column="127">SWP_DRAWFRAME</name><op:operator pos:line="3998" pos:column="140">|</op:operator><name pos:line="3998" pos:column="141">SWP_FRAMECHANGED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="3999" pos:column="25">::</op:operator><name pos:line="3999" pos:column="27">ShowWindow</name></name><argument_list pos:line="3999" pos:column="37">(<argument><expr><call><name><name pos:line="3999" pos:column="38">_pPublicInterface</name><op:operator pos:line="3999" pos:column="55">-&gt;</op:operator><name pos:line="3999" pos:column="57">getHSelf</name></name><argument_list pos:line="3999" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3999" pos:column="69">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

        <comment type="line" pos:line="4002" pos:column="9">// show restore button</comment>
        <expr_stmt><expr><call><name><name pos:line="4003" pos:column="9">_restoreButton</name><op:operator pos:line="4003" pos:column="23">.</op:operator><name pos:line="4003" pos:column="24">doDialog</name></name><argument_list pos:line="4003" pos:column="32">(<argument><expr><call><name><name pos:line="4003" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="4003" pos:column="51">.</op:operator><name pos:line="4003" pos:column="52">isRTL</name></name><argument_list pos:line="4003" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="4005" pos:column="9">RECT</name></type> <name pos:line="4005" pos:column="14">rect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="4006" pos:column="9">GetWindowRect</name><argument_list pos:line="4006" pos:column="22">(<argument><expr><call><name><name pos:line="4006" pos:column="23">_restoreButton</name><op:operator pos:line="4006" pos:column="37">.</op:operator><name pos:line="4006" pos:column="38">getHSelf</name></name><argument_list pos:line="4006" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4006" pos:column="50">&amp;</op:operator><name pos:line="4006" pos:column="51">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name pos:line="4007" pos:column="13">int</name></type> <name pos:line="4007" pos:column="17">w</name> <init pos:line="4007" pos:column="19">= <expr><name><name pos:line="4007" pos:column="21">rect</name><op:operator pos:line="4007" pos:column="25">.</op:operator><name pos:line="4007" pos:column="26">right</name></name> <op:operator pos:line="4007" pos:column="32">-</op:operator> <name><name pos:line="4007" pos:column="34">rect</name><op:operator pos:line="4007" pos:column="38">.</op:operator><name pos:line="4007" pos:column="39">left</name></name></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name pos:line="4008" pos:column="13">int</name></type> <name pos:line="4008" pos:column="17">h</name> <init pos:line="4008" pos:column="19">= <expr><name><name pos:line="4008" pos:column="21">rect</name><op:operator pos:line="4008" pos:column="25">.</op:operator><name pos:line="4008" pos:column="26">bottom</name></name> <op:operator pos:line="4008" pos:column="33">-</op:operator> <name><name pos:line="4008" pos:column="35">rect</name><op:operator pos:line="4008" pos:column="39">.</op:operator><name pos:line="4008" pos:column="40">top</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="4010" pos:column="9">RECT</name></type> <name pos:line="4010" pos:column="14">nppRect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="4011" pos:column="9">GetWindowRect</name><argument_list pos:line="4011" pos:column="22">(<argument><expr><call><name><name pos:line="4011" pos:column="23">_pPublicInterface</name><op:operator pos:line="4011" pos:column="40">-&gt;</op:operator><name pos:line="4011" pos:column="42">getHSelf</name></name><argument_list pos:line="4011" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4011" pos:column="54">&amp;</op:operator><name pos:line="4011" pos:column="55">nppRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="4012" pos:column="9">int</name></type> <name pos:line="4012" pos:column="13">x</name> <init pos:line="4012" pos:column="15">= <expr><name><name pos:line="4012" pos:column="17">nppRect</name><op:operator pos:line="4012" pos:column="24">.</op:operator><name pos:line="4012" pos:column="25">right</name></name> <op:operator pos:line="4012" pos:column="31">-</op:operator> <name pos:line="4012" pos:column="33">w</name> <op:operator pos:line="4012" pos:column="35">-</op:operator> <name pos:line="4012" pos:column="37">w</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="4013" pos:column="9">int</name></type> <name pos:line="4013" pos:column="13">y</name> <init pos:line="4013" pos:column="15">= <expr><name><name pos:line="4013" pos:column="17">nppRect</name><op:operator pos:line="4013" pos:column="24">.</op:operator><name pos:line="4013" pos:column="25">top</name></name> <op:operator pos:line="4013" pos:column="29">+</op:operator> <lit:literal type="number" pos:line="4013" pos:column="31">1</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="4014" pos:column="9">::</op:operator><name pos:line="4014" pos:column="11">MoveWindow</name></name><argument_list pos:line="4014" pos:column="21">(<argument><expr><call><name><name pos:line="4014" pos:column="22">_restoreButton</name><op:operator pos:line="4014" pos:column="36">.</op:operator><name pos:line="4014" pos:column="37">getHSelf</name></name><argument_list pos:line="4014" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4014" pos:column="49">x</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="52">y</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="55">w</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="58">h</name></expr></argument>, <argument><expr><name pos:line="4014" pos:column="61">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="4016" pos:column="9">_pEditView</name><op:operator pos:line="4016" pos:column="19">-&gt;</op:operator><name pos:line="4016" pos:column="21">getFocus</name></name><argument_list pos:line="4016" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="4018" pos:column="9">else	<comment type="line" pos:line="4018" pos:column="17">//PostIt enabled, disable it</comment>
	<block pos:line="4019" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="4020" pos:column="9">_restoreButton</name><op:operator pos:line="4020" pos:column="23">.</op:operator><name pos:line="4020" pos:column="24">setButtonStatus</name></name><argument_list pos:line="4020" pos:column="39">(<argument><expr><name pos:line="4020" pos:column="40">buttonStatus_postit</name> <op:operator pos:line="4020" pos:column="60">^</op:operator> <call><name><name pos:line="4020" pos:column="62">_restoreButton</name><op:operator pos:line="4020" pos:column="76">.</op:operator><name pos:line="4020" pos:column="77">getButtonStatus</name></name><argument_list pos:line="4020" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="4021" pos:column="9">_restoreButton</name><op:operator pos:line="4021" pos:column="23">.</op:operator><name pos:line="4021" pos:column="24">display</name></name><argument_list pos:line="4021" pos:column="31">(<argument><expr><lit:literal type="boolean" pos:line="4021" pos:column="32">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="4023" pos:column="17">//Setup GUI</comment>
		<if pos:line="4024" pos:column="17">if <condition pos:line="4024" pos:column="20">(<expr><op:operator pos:line="4024" pos:column="21">!</op:operator><name><name pos:line="4024" pos:column="22">_beforeSpecialView</name><op:operator pos:line="4024" pos:column="40">.</op:operator><name pos:line="4024" pos:column="41">isFullScreen</name></name></expr>)</condition><then pos:line="4024" pos:column="54">
		<block pos:line="4025" pos:column="17">{
			<comment type="line" pos:line="4026" pos:column="25">//only change the these parts of GUI if not already done by fullscreen</comment>
			<if pos:line="4027" pos:column="25">if <condition pos:line="4027" pos:column="28">(<expr><name><name pos:line="4027" pos:column="29">_beforeSpecialView</name><op:operator pos:line="4027" pos:column="47">.</op:operator><name pos:line="4027" pos:column="48">isMenuShown</name></name></expr>)</condition><then pos:line="4027" pos:column="60">
				<expr_stmt><expr><call><name><op:operator pos:line="4028" pos:column="33">::</op:operator><name pos:line="4028" pos:column="35">SendMessage</name></name><argument_list pos:line="4028" pos:column="46">(<argument><expr><call><name><name pos:line="4028" pos:column="47">_pPublicInterface</name><op:operator pos:line="4028" pos:column="64">-&gt;</op:operator><name pos:line="4028" pos:column="66">getHSelf</name></name><argument_list pos:line="4028" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4028" pos:column="78">NPPM_HIDEMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4028" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><name pos:line="4028" pos:column="96">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<comment type="line" pos:line="4030" pos:column="25">//Show rebar</comment>
			<expr_stmt><expr><call><name><name pos:line="4031" pos:column="25">_rebarTop</name><op:operator pos:line="4031" pos:column="34">.</op:operator><name pos:line="4031" pos:column="35">display</name></name><argument_list pos:line="4031" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="4031" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4032" pos:column="25">_rebarBottom</name><op:operator pos:line="4032" pos:column="37">.</op:operator><name pos:line="4032" pos:column="38">display</name></name><argument_list pos:line="4032" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="4032" pos:column="46">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="4034" pos:column="17">//Do this GUI config always</comment>
		<if pos:line="4035" pos:column="17">if <condition pos:line="4035" pos:column="20">(<expr><name><name pos:line="4035" pos:column="21">_beforeSpecialView</name><op:operator pos:line="4035" pos:column="39">.</op:operator><name pos:line="4035" pos:column="40">isStatusbarShown</name></name></expr>)</condition><then pos:line="4035" pos:column="57">
			<expr_stmt><expr><call><name><op:operator pos:line="4036" pos:column="25">::</op:operator><name pos:line="4036" pos:column="27">SendMessage</name></name><argument_list pos:line="4036" pos:column="38">(<argument><expr><call><name><name pos:line="4036" pos:column="39">_pPublicInterface</name><op:operator pos:line="4036" pos:column="56">-&gt;</op:operator><name pos:line="4036" pos:column="58">getHSelf</name></name><argument_list pos:line="4036" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4036" pos:column="70">NPPM_HIDESTATUSBAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4036" pos:column="90">0</lit:literal></expr></argument>, <argument><expr><name pos:line="4036" pos:column="93">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="4037" pos:column="17">if <condition pos:line="4037" pos:column="20">(<expr><name><name pos:line="4037" pos:column="21">_beforeSpecialView</name><op:operator pos:line="4037" pos:column="39">.</op:operator><name pos:line="4037" pos:column="40">isTabbarShown</name></name></expr>)</condition><then pos:line="4037" pos:column="54">
			<expr_stmt><expr><call><name><op:operator pos:line="4038" pos:column="25">::</op:operator><name pos:line="4038" pos:column="27">SendMessage</name></name><argument_list pos:line="4038" pos:column="38">(<argument><expr><call><name><name pos:line="4038" pos:column="39">_pPublicInterface</name><op:operator pos:line="4038" pos:column="56">-&gt;</op:operator><name pos:line="4038" pos:column="58">getHSelf</name></name><argument_list pos:line="4038" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4038" pos:column="70">NPPM_HIDETABBAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4038" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><name pos:line="4038" pos:column="90">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="4039" pos:column="17">if <condition pos:line="4039" pos:column="20">(<expr><op:operator pos:line="4039" pos:column="21">!</op:operator><name><name pos:line="4039" pos:column="22">_beforeSpecialView</name><op:operator pos:line="4039" pos:column="40">.</op:operator><name pos:line="4039" pos:column="41">isAlwaysOnTop</name></name></expr>)</condition><then pos:line="4039" pos:column="55">
			<expr_stmt><expr><call><name><op:operator pos:line="4040" pos:column="25">::</op:operator><name pos:line="4040" pos:column="27">SendMessage</name></name><argument_list pos:line="4040" pos:column="38">(<argument><expr><call><name><name pos:line="4040" pos:column="39">_pPublicInterface</name><op:operator pos:line="4040" pos:column="56">-&gt;</op:operator><name pos:line="4040" pos:column="58">getHSelf</name></name><argument_list pos:line="4040" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4040" pos:column="70">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="4040" pos:column="82">IDM_VIEW_ALWAYSONTOP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4040" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<comment type="line" pos:line="4042" pos:column="17">//restore window style if not fullscreen</comment>
		<if pos:line="4043" pos:column="17">if <condition pos:line="4043" pos:column="20">(<expr><op:operator pos:line="4043" pos:column="21">!</op:operator><name><name pos:line="4043" pos:column="22">_beforeSpecialView</name><op:operator pos:line="4043" pos:column="40">.</op:operator><name pos:line="4043" pos:column="41">isFullScreen</name></name></expr>)</condition><then pos:line="4043" pos:column="54">
		<block pos:line="4044" pos:column="17">{
			<comment type="line" pos:line="4045" pos:column="25">//dwStyle |= (WS_CAPTION | WS_SIZEBOX);</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="4046" pos:column="25">::</op:operator><name pos:line="4046" pos:column="27">ShowWindow</name></name><argument_list pos:line="4046" pos:column="37">(<argument><expr><call><name><name pos:line="4046" pos:column="38">_pPublicInterface</name><op:operator pos:line="4046" pos:column="55">-&gt;</op:operator><name pos:line="4046" pos:column="57">getHSelf</name></name><argument_list pos:line="4046" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4046" pos:column="69">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="4047" pos:column="25">::</op:operator><name pos:line="4047" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="4047" pos:column="43">(<argument><expr><call><name><name pos:line="4047" pos:column="44">_pPublicInterface</name><op:operator pos:line="4047" pos:column="61">-&gt;</op:operator><name pos:line="4047" pos:column="63">getHSelf</name></name><argument_list pos:line="4047" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4047" pos:column="75">GWL_STYLE</name></expr></argument>, <argument><expr><name><name pos:line="4047" pos:column="86">_beforeSpecialView</name><op:operator pos:line="4047" pos:column="104">.</op:operator><name pos:line="4047" pos:column="105">preStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="4049" pos:column="25">//Redraw the window and refresh windowmanager cache, dont do anything else, sizing is done later on</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="4050" pos:column="25">::</op:operator><name pos:line="4050" pos:column="27">SetWindowPos</name></name><argument_list pos:line="4050" pos:column="39">(<argument><expr><call><name><name pos:line="4050" pos:column="40">_pPublicInterface</name><op:operator pos:line="4050" pos:column="57">-&gt;</op:operator><name pos:line="4050" pos:column="59">getHSelf</name></name><argument_list pos:line="4050" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4050" pos:column="71">HWND_NOTOPMOST</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="4050" pos:column="86">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="4050" pos:column="88">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="4050" pos:column="90">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="4050" pos:column="92">0</lit:literal></expr></argument>,<argument><expr><name pos:line="4050" pos:column="94">SWP_NOMOVE</name><op:operator pos:line="4050" pos:column="104">|</op:operator><name pos:line="4050" pos:column="105">SWP_NOSIZE</name><op:operator pos:line="4050" pos:column="115">|</op:operator><name pos:line="4050" pos:column="116">SWP_NOZORDER</name><op:operator pos:line="4050" pos:column="128">|</op:operator><name pos:line="4050" pos:column="129">SWP_DRAWFRAME</name><op:operator pos:line="4050" pos:column="142">|</op:operator><name pos:line="4050" pos:column="143">SWP_FRAMECHANGED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="4051" pos:column="25">::</op:operator><name pos:line="4051" pos:column="27">ShowWindow</name></name><argument_list pos:line="4051" pos:column="37">(<argument><expr><call><name><name pos:line="4051" pos:column="38">_pPublicInterface</name><op:operator pos:line="4051" pos:column="55">-&gt;</op:operator><name pos:line="4051" pos:column="57">getHSelf</name></name><argument_list pos:line="4051" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4051" pos:column="69">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>

	<expr_stmt><expr><name><name pos:line="4055" pos:column="9">_beforeSpecialView</name><op:operator pos:line="4055" pos:column="27">.</op:operator><name pos:line="4055" pos:column="28">isPostIt</name></name> <op:operator pos:line="4055" pos:column="37">=</op:operator> <op:operator pos:line="4055" pos:column="39">!</op:operator><name><name pos:line="4055" pos:column="40">_beforeSpecialView</name><op:operator pos:line="4055" pos:column="58">.</op:operator><name pos:line="4055" pos:column="59">isPostIt</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="4056" pos:column="9">::</op:operator><name pos:line="4056" pos:column="11">SendMessage</name></name><argument_list pos:line="4056" pos:column="22">(<argument><expr><call><name><name pos:line="4056" pos:column="23">_pPublicInterface</name><op:operator pos:line="4056" pos:column="40">-&gt;</op:operator><name pos:line="4056" pos:column="42">getHSelf</name></name><argument_list pos:line="4056" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4056" pos:column="54">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4056" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4056" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4059" pos:column="1">void</name></type> <name><name pos:line="4059" pos:column="6">Notepad_plus</name><op:operator pos:line="4059" pos:column="18">::</op:operator><name pos:line="4059" pos:column="20">doSynScorll</name></name><parameter_list pos:line="4059" pos:column="31">(<param><decl><type><name pos:line="4059" pos:column="32">HWND</name></type> <name pos:line="4059" pos:column="37">whichView</name></decl></param>)</parameter_list>
<block pos:line="4060" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4061" pos:column="9">int</name></type> <name pos:line="4061" pos:column="13">column</name> <init pos:line="4061" pos:column="20">= <expr><lit:literal type="number" pos:line="4061" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4062" pos:column="9">int</name></type> <name pos:line="4062" pos:column="13">line</name> <init pos:line="4062" pos:column="18">= <expr><lit:literal type="number" pos:line="4062" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4063" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="4063" pos:column="27">*</type:modifier></type><name pos:line="4063" pos:column="28">pView</name></decl>;</decl_stmt>

	<comment type="line" pos:line="4065" pos:column="9">// var for Line</comment>
	<decl_stmt><decl><type><name pos:line="4066" pos:column="9">int</name></type> <name pos:line="4066" pos:column="13">mainCurrentLine</name></decl><op:operator pos:line="4066" pos:column="28">,</op:operator> <decl><type ref="prev"/><name pos:line="4066" pos:column="30">subCurrentLine</name></decl>;</decl_stmt>

	<comment type="line" pos:line="4068" pos:column="9">// var for Column</comment>
	<decl_stmt><decl><type><name pos:line="4069" pos:column="9">int</name></type> <name pos:line="4069" pos:column="13">mxoffset</name></decl><op:operator pos:line="4069" pos:column="21">,</op:operator> <decl><type ref="prev"/><name pos:line="4069" pos:column="23">sxoffset</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4070" pos:column="9">int</name></type> <name pos:line="4070" pos:column="13">pixel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4071" pos:column="9">int</name></type> <name pos:line="4071" pos:column="13">mainColumn</name></decl><op:operator pos:line="4071" pos:column="23">,</op:operator> <decl><type ref="prev"/><name pos:line="4071" pos:column="25">subColumn</name></decl>;</decl_stmt>

    <if pos:line="4073" pos:column="5">if <condition pos:line="4073" pos:column="8">(<expr><name pos:line="4073" pos:column="9">whichView</name> <op:operator pos:line="4073" pos:column="19">==</op:operator> <call><name><name pos:line="4073" pos:column="22">_mainEditView</name><op:operator pos:line="4073" pos:column="35">.</op:operator><name pos:line="4073" pos:column="36">getHSelf</name></name><argument_list pos:line="4073" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="4073" pos:column="47">
	<block pos:line="4074" pos:column="9">{
		<if pos:line="4075" pos:column="17">if <condition pos:line="4075" pos:column="20">(<expr><name><name pos:line="4075" pos:column="21">_syncInfo</name><op:operator pos:line="4075" pos:column="30">.</op:operator><name pos:line="4075" pos:column="31">_isSynScollV</name></name></expr>)</condition><then pos:line="4075" pos:column="44">
		<block pos:line="4076" pos:column="17">{
			<comment type="line" pos:line="4077" pos:column="25">// Compute for Line</comment>
			<expr_stmt><expr><name pos:line="4078" pos:column="25">mainCurrentLine</name> <op:operator pos:line="4078" pos:column="41">=</op:operator> <call><name><name pos:line="4078" pos:column="43">_mainEditView</name><op:operator pos:line="4078" pos:column="56">.</op:operator><name pos:line="4078" pos:column="57">execute</name></name><argument_list pos:line="4078" pos:column="64">(<argument><expr><name pos:line="4078" pos:column="65">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4079" pos:column="25">subCurrentLine</name> <op:operator pos:line="4079" pos:column="40">=</op:operator> <call><name><name pos:line="4079" pos:column="42">_subEditView</name><op:operator pos:line="4079" pos:column="54">.</op:operator><name pos:line="4079" pos:column="55">execute</name></name><argument_list pos:line="4079" pos:column="62">(<argument><expr><name pos:line="4079" pos:column="63">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4080" pos:column="25">line</name> <op:operator pos:line="4080" pos:column="30">=</op:operator> <name pos:line="4080" pos:column="32">mainCurrentLine</name> <op:operator pos:line="4080" pos:column="48">-</op:operator> <name><name pos:line="4080" pos:column="50">_syncInfo</name><op:operator pos:line="4080" pos:column="59">.</op:operator><name pos:line="4080" pos:column="60">_line</name></name> <op:operator pos:line="4080" pos:column="66">-</op:operator> <name pos:line="4080" pos:column="68">subCurrentLine</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="4082" pos:column="17">if <condition pos:line="4082" pos:column="20">(<expr><name><name pos:line="4082" pos:column="21">_syncInfo</name><op:operator pos:line="4082" pos:column="30">.</op:operator><name pos:line="4082" pos:column="31">_isSynScollH</name></name></expr>)</condition><then pos:line="4082" pos:column="44">
		<block pos:line="4083" pos:column="17">{
			<comment type="line" pos:line="4084" pos:column="25">// Compute for Column</comment>
			<expr_stmt><expr><name pos:line="4085" pos:column="25">mxoffset</name> <op:operator pos:line="4085" pos:column="34">=</op:operator> <call><name><name pos:line="4085" pos:column="36">_mainEditView</name><op:operator pos:line="4085" pos:column="49">.</op:operator><name pos:line="4085" pos:column="50">execute</name></name><argument_list pos:line="4085" pos:column="57">(<argument><expr><name pos:line="4085" pos:column="58">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4086" pos:column="25">pixel</name> <op:operator pos:line="4086" pos:column="31">=</op:operator> <call><name pos:line="4086" pos:column="33">int</name><argument_list pos:line="4086" pos:column="36">(<argument><expr><call><name><name pos:line="4086" pos:column="37">_mainEditView</name><op:operator pos:line="4086" pos:column="50">.</op:operator><name pos:line="4086" pos:column="51">execute</name></name><argument_list pos:line="4086" pos:column="58">(<argument><expr><name pos:line="4086" pos:column="59">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="4086" pos:column="74">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="4086" pos:column="89">(</op:operator><name pos:line="4086" pos:column="90">LPARAM</name><op:operator pos:line="4086" pos:column="96">)</op:operator><lit:literal type="string" pos:line="4086" pos:column="97">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4087" pos:column="25">mainColumn</name> <op:operator pos:line="4087" pos:column="36">=</op:operator> <name pos:line="4087" pos:column="38">mxoffset</name><op:operator pos:line="4087" pos:column="46">/</op:operator><name pos:line="4087" pos:column="47">pixel</name></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4089" pos:column="25">sxoffset</name> <op:operator pos:line="4089" pos:column="34">=</op:operator> <call><name><name pos:line="4089" pos:column="36">_subEditView</name><op:operator pos:line="4089" pos:column="48">.</op:operator><name pos:line="4089" pos:column="49">execute</name></name><argument_list pos:line="4089" pos:column="56">(<argument><expr><name pos:line="4089" pos:column="57">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4090" pos:column="25">pixel</name> <op:operator pos:line="4090" pos:column="31">=</op:operator> <call><name pos:line="4090" pos:column="33">int</name><argument_list pos:line="4090" pos:column="36">(<argument><expr><call><name><name pos:line="4090" pos:column="37">_subEditView</name><op:operator pos:line="4090" pos:column="49">.</op:operator><name pos:line="4090" pos:column="50">execute</name></name><argument_list pos:line="4090" pos:column="57">(<argument><expr><name pos:line="4090" pos:column="58">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="4090" pos:column="73">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="4090" pos:column="88">(</op:operator><name pos:line="4090" pos:column="89">LPARAM</name><op:operator pos:line="4090" pos:column="95">)</op:operator><lit:literal type="string" pos:line="4090" pos:column="96">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4091" pos:column="25">subColumn</name> <op:operator pos:line="4091" pos:column="35">=</op:operator> <name pos:line="4091" pos:column="37">sxoffset</name><op:operator pos:line="4091" pos:column="45">/</op:operator><name pos:line="4091" pos:column="46">pixel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4092" pos:column="25">column</name> <op:operator pos:line="4092" pos:column="32">=</op:operator> <name pos:line="4092" pos:column="34">mainColumn</name> <op:operator pos:line="4092" pos:column="45">-</op:operator> <name><name pos:line="4092" pos:column="47">_syncInfo</name><op:operator pos:line="4092" pos:column="56">.</op:operator><name pos:line="4092" pos:column="57">_column</name></name> <op:operator pos:line="4092" pos:column="65">-</op:operator> <name pos:line="4092" pos:column="67">subColumn</name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="4094" pos:column="17">pView</name> <op:operator pos:line="4094" pos:column="23">=</op:operator> <op:operator pos:line="4094" pos:column="25">&amp;</op:operator><name pos:line="4094" pos:column="26">_subEditView</name></expr>;</expr_stmt>
    }</block></then>
    <else pos:line="4096" pos:column="5">else <if pos:line="4096" pos:column="10">if <condition pos:line="4096" pos:column="13">(<expr><name pos:line="4096" pos:column="14">whichView</name> <op:operator pos:line="4096" pos:column="24">==</op:operator> <call><name><name pos:line="4096" pos:column="27">_subEditView</name><op:operator pos:line="4096" pos:column="39">.</op:operator><name pos:line="4096" pos:column="40">getHSelf</name></name><argument_list pos:line="4096" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="4096" pos:column="51">
    <block pos:line="4097" pos:column="5">{
		<if pos:line="4098" pos:column="17">if <condition pos:line="4098" pos:column="20">(<expr><name><name pos:line="4098" pos:column="21">_syncInfo</name><op:operator pos:line="4098" pos:column="30">.</op:operator><name pos:line="4098" pos:column="31">_isSynScollV</name></name></expr>)</condition><then pos:line="4098" pos:column="44">
		<block pos:line="4099" pos:column="17">{
			<comment type="line" pos:line="4100" pos:column="25">// Compute for Line</comment>
			<expr_stmt><expr><name pos:line="4101" pos:column="25">mainCurrentLine</name> <op:operator pos:line="4101" pos:column="41">=</op:operator> <call><name><name pos:line="4101" pos:column="43">_mainEditView</name><op:operator pos:line="4101" pos:column="56">.</op:operator><name pos:line="4101" pos:column="57">execute</name></name><argument_list pos:line="4101" pos:column="64">(<argument><expr><name pos:line="4101" pos:column="65">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4102" pos:column="25">subCurrentLine</name> <op:operator pos:line="4102" pos:column="40">=</op:operator> <call><name><name pos:line="4102" pos:column="42">_subEditView</name><op:operator pos:line="4102" pos:column="54">.</op:operator><name pos:line="4102" pos:column="55">execute</name></name><argument_list pos:line="4102" pos:column="62">(<argument><expr><name pos:line="4102" pos:column="63">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4103" pos:column="25">line</name> <op:operator pos:line="4103" pos:column="30">=</op:operator> <name pos:line="4103" pos:column="32">subCurrentLine</name> <op:operator pos:line="4103" pos:column="47">+</op:operator> <name><name pos:line="4103" pos:column="49">_syncInfo</name><op:operator pos:line="4103" pos:column="58">.</op:operator><name pos:line="4103" pos:column="59">_line</name></name> <op:operator pos:line="4103" pos:column="65">-</op:operator> <name pos:line="4103" pos:column="67">mainCurrentLine</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="4105" pos:column="17">if <condition pos:line="4105" pos:column="20">(<expr><name><name pos:line="4105" pos:column="21">_syncInfo</name><op:operator pos:line="4105" pos:column="30">.</op:operator><name pos:line="4105" pos:column="31">_isSynScollH</name></name></expr>)</condition><then pos:line="4105" pos:column="44">
		<block pos:line="4106" pos:column="17">{
			<comment type="line" pos:line="4107" pos:column="25">// Compute for Column</comment>
			<expr_stmt><expr><name pos:line="4108" pos:column="25">mxoffset</name> <op:operator pos:line="4108" pos:column="34">=</op:operator> <call><name><name pos:line="4108" pos:column="36">_mainEditView</name><op:operator pos:line="4108" pos:column="49">.</op:operator><name pos:line="4108" pos:column="50">execute</name></name><argument_list pos:line="4108" pos:column="57">(<argument><expr><name pos:line="4108" pos:column="58">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4109" pos:column="25">pixel</name> <op:operator pos:line="4109" pos:column="31">=</op:operator> <call><name pos:line="4109" pos:column="33">int</name><argument_list pos:line="4109" pos:column="36">(<argument><expr><call><name><name pos:line="4109" pos:column="37">_mainEditView</name><op:operator pos:line="4109" pos:column="50">.</op:operator><name pos:line="4109" pos:column="51">execute</name></name><argument_list pos:line="4109" pos:column="58">(<argument><expr><name pos:line="4109" pos:column="59">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="4109" pos:column="74">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="4109" pos:column="89">(</op:operator><name pos:line="4109" pos:column="90">LPARAM</name><op:operator pos:line="4109" pos:column="96">)</op:operator><lit:literal type="string" pos:line="4109" pos:column="97">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4110" pos:column="25">mainColumn</name> <op:operator pos:line="4110" pos:column="36">=</op:operator> <name pos:line="4110" pos:column="38">mxoffset</name><op:operator pos:line="4110" pos:column="46">/</op:operator><name pos:line="4110" pos:column="47">pixel</name></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4112" pos:column="25">sxoffset</name> <op:operator pos:line="4112" pos:column="34">=</op:operator> <call><name><name pos:line="4112" pos:column="36">_subEditView</name><op:operator pos:line="4112" pos:column="48">.</op:operator><name pos:line="4112" pos:column="49">execute</name></name><argument_list pos:line="4112" pos:column="56">(<argument><expr><name pos:line="4112" pos:column="57">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4113" pos:column="25">pixel</name> <op:operator pos:line="4113" pos:column="31">=</op:operator> <call><name pos:line="4113" pos:column="33">int</name><argument_list pos:line="4113" pos:column="36">(<argument><expr><call><name><name pos:line="4113" pos:column="37">_subEditView</name><op:operator pos:line="4113" pos:column="49">.</op:operator><name pos:line="4113" pos:column="50">execute</name></name><argument_list pos:line="4113" pos:column="57">(<argument><expr><name pos:line="4113" pos:column="58">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="4113" pos:column="73">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="4113" pos:column="88">(</op:operator><name pos:line="4113" pos:column="89">LPARAM</name><op:operator pos:line="4113" pos:column="95">)</op:operator><lit:literal type="string" pos:line="4113" pos:column="96">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4114" pos:column="25">subColumn</name> <op:operator pos:line="4114" pos:column="35">=</op:operator> <name pos:line="4114" pos:column="37">sxoffset</name><op:operator pos:line="4114" pos:column="45">/</op:operator><name pos:line="4114" pos:column="46">pixel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4115" pos:column="25">column</name> <op:operator pos:line="4115" pos:column="32">=</op:operator> <name pos:line="4115" pos:column="34">subColumn</name> <op:operator pos:line="4115" pos:column="44">+</op:operator> <name><name pos:line="4115" pos:column="46">_syncInfo</name><op:operator pos:line="4115" pos:column="55">.</op:operator><name pos:line="4115" pos:column="56">_column</name></name> <op:operator pos:line="4115" pos:column="64">-</op:operator> <name pos:line="4115" pos:column="66">mainColumn</name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="4117" pos:column="17">pView</name> <op:operator pos:line="4117" pos:column="23">=</op:operator> <op:operator pos:line="4117" pos:column="25">&amp;</op:operator><name pos:line="4117" pos:column="26">_mainEditView</name></expr>;</expr_stmt>
    }</block></then>
    <else pos:line="4119" pos:column="5">else
        <return pos:line="4120" pos:column="9">return;</return></else></if></else></if>

	<expr_stmt><expr><call><name><name pos:line="4122" pos:column="9">pView</name><op:operator pos:line="4122" pos:column="14">-&gt;</op:operator><name pos:line="4122" pos:column="16">scroll</name></name><argument_list pos:line="4122" pos:column="22">(<argument><expr><name pos:line="4122" pos:column="23">column</name></expr></argument>, <argument><expr><name pos:line="4122" pos:column="31">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4125" pos:column="1">bool</name></type> <name><name pos:line="4125" pos:column="6">Notepad_plus</name><op:operator pos:line="4125" pos:column="18">::</op:operator><name pos:line="4125" pos:column="20">getIntegralDockingData</name></name><parameter_list pos:line="4125" pos:column="42">(<param><decl><type><name pos:line="4125" pos:column="43">tTbData</name> <type:modifier pos:line="4125" pos:column="51">&amp;</type:modifier></type> <name pos:line="4125" pos:column="53">dockData</name></decl></param>, <param><decl><type><name pos:line="4125" pos:column="63">int</name> <type:modifier pos:line="4125" pos:column="67">&amp;</type:modifier></type> <name pos:line="4125" pos:column="69">iCont</name></decl></param>, <param><decl><type><name pos:line="4125" pos:column="76">bool</name> <type:modifier pos:line="4125" pos:column="81">&amp;</type:modifier></type> <name pos:line="4125" pos:column="83">isVisible</name></decl></param>)</parameter_list>
<block pos:line="4126" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4127" pos:column="9">DockingManagerData</name> <type:modifier pos:line="4127" pos:column="28">&amp;</type:modifier></type> <name pos:line="4127" pos:column="30">dockingData</name> <init pos:line="4127" pos:column="42">= <expr><op:operator pos:line="4127" pos:column="44">(</op:operator><name pos:line="4127" pos:column="45">DockingManagerData</name> <op:operator pos:line="4127" pos:column="64">&amp;</op:operator><op:operator pos:line="4127" pos:column="65">)</op:operator><op:operator pos:line="4127" pos:column="66">(</op:operator><call><name><name pos:line="4127" pos:column="67">NppParameters</name><op:operator pos:line="4127" pos:column="80">::</op:operator><name pos:line="4127" pos:column="82">getInstance</name></name><argument_list pos:line="4127" pos:column="93">()</argument_list></call><op:operator pos:line="4127" pos:column="95">)</op:operator><op:operator pos:line="4127" pos:column="96">-&gt;</op:operator><call><name pos:line="4127" pos:column="98">getNppGUI</name><argument_list pos:line="4127" pos:column="107">()</argument_list></call><op:operator pos:line="4127" pos:column="109">.</op:operator><name pos:line="4127" pos:column="110">_dockingData</name></expr></init></decl>;</decl_stmt>

	<for pos:line="4129" pos:column="9">for (<init><decl><type><name pos:line="4129" pos:column="14">size_t</name></type> <name pos:line="4129" pos:column="21">i</name> <init pos:line="4129" pos:column="23">= <expr><lit:literal type="number" pos:line="4129" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4129" pos:column="29">i</name> <op:operator pos:line="4129" pos:column="31">&lt;</op:operator> <call><name><name pos:line="4129" pos:column="33">dockingData</name><op:operator pos:line="4129" pos:column="44">.</op:operator><name pos:line="4129" pos:column="45">_pluginDockInfo</name><op:operator pos:line="4129" pos:column="60">.</op:operator><name pos:line="4129" pos:column="61">size</name></name><argument_list pos:line="4129" pos:column="65">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4129" pos:column="70">i</name><op:operator pos:line="4129" pos:column="71">++</op:operator></expr></incr>)
	<block pos:line="4130" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="4131" pos:column="17">const</specifier> <name pos:line="4131" pos:column="23">PluginDlgDockingInfo</name> <type:modifier pos:line="4131" pos:column="44">&amp;</type:modifier></type> <name pos:line="4131" pos:column="46">pddi</name> <init pos:line="4131" pos:column="51">= <expr><name><name pos:line="4131" pos:column="53">dockingData</name><op:operator pos:line="4131" pos:column="64">.</op:operator><name pos:line="4131" pos:column="65">_pluginDockInfo</name><index pos:line="4131" pos:column="80">[<expr><name pos:line="4131" pos:column="81">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if pos:line="4133" pos:column="17">if <condition pos:line="4133" pos:column="20">(<expr><op:operator pos:line="4133" pos:column="21">!</op:operator><call><name pos:line="4133" pos:column="22">generic_stricmp</name><argument_list pos:line="4133" pos:column="37">(<argument><expr><call><name><name pos:line="4133" pos:column="38">pddi</name><op:operator pos:line="4133" pos:column="42">.</op:operator><name pos:line="4133" pos:column="43">_name</name><op:operator pos:line="4133" pos:column="48">.</op:operator><name pos:line="4133" pos:column="49">c_str</name></name><argument_list pos:line="4133" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4133" pos:column="58">dockData</name><op:operator pos:line="4133" pos:column="66">.</op:operator><name pos:line="4133" pos:column="67">pszModuleName</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="4133" pos:column="82">&amp;&amp;</op:operator> <op:operator pos:line="4133" pos:column="85">(</op:operator><name><name pos:line="4133" pos:column="86">pddi</name><op:operator pos:line="4133" pos:column="90">.</op:operator><name pos:line="4133" pos:column="91">_internalID</name></name> <op:operator pos:line="4133" pos:column="103">==</op:operator> <name><name pos:line="4133" pos:column="106">dockData</name><op:operator pos:line="4133" pos:column="114">.</op:operator><name pos:line="4133" pos:column="115">dlgID</name></name><op:operator pos:line="4133" pos:column="120">)</op:operator></expr>)</condition><then pos:line="4133" pos:column="122">
		<block pos:line="4134" pos:column="17">{
			<expr_stmt><expr><name pos:line="4135" pos:column="25">iCont</name>				<op:operator pos:line="4135" pos:column="57">=</op:operator> <name><name pos:line="4135" pos:column="59">pddi</name><op:operator pos:line="4135" pos:column="63">.</op:operator><name pos:line="4135" pos:column="64">_currContainer</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4136" pos:column="25">isVisible</name>			<op:operator pos:line="4136" pos:column="57">=</op:operator> <name><name pos:line="4136" pos:column="59">pddi</name><op:operator pos:line="4136" pos:column="63">.</op:operator><name pos:line="4136" pos:column="64">_isVisible</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4137" pos:column="25">dockData</name><op:operator pos:line="4137" pos:column="33">.</op:operator><name pos:line="4137" pos:column="34">iPrevCont</name></name>	<op:operator pos:line="4137" pos:column="49">=</op:operator> <name><name pos:line="4137" pos:column="51">pddi</name><op:operator pos:line="4137" pos:column="55">.</op:operator><name pos:line="4137" pos:column="56">_prevContainer</name></name></expr>;</expr_stmt>

			<if pos:line="4139" pos:column="25">if <condition pos:line="4139" pos:column="28">(<expr><name><name pos:line="4139" pos:column="29">dockData</name><op:operator pos:line="4139" pos:column="37">.</op:operator><name pos:line="4139" pos:column="38">iPrevCont</name></name> <op:operator pos:line="4139" pos:column="48">!=</op:operator> <op:operator pos:line="4139" pos:column="51">-</op:operator><lit:literal type="number" pos:line="4139" pos:column="52">1</lit:literal></expr>)</condition><then pos:line="4139" pos:column="54">
			<block pos:line="4140" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="4141" pos:column="33">int</name></type> <name pos:line="4141" pos:column="37">cont</name> <init pos:line="4141" pos:column="42">= <expr><op:operator pos:line="4141" pos:column="44">(</op:operator><name><name pos:line="4141" pos:column="45">pddi</name><op:operator pos:line="4141" pos:column="49">.</op:operator><name pos:line="4141" pos:column="50">_currContainer</name></name> <op:operator pos:line="4141" pos:column="65">&lt;</op:operator> <name pos:line="4141" pos:column="67">DOCKCONT_MAX</name> <op:operator pos:line="4141" pos:column="80">?</op:operator> <name><name pos:line="4141" pos:column="82">pddi</name><op:operator pos:line="4141" pos:column="86">.</op:operator><name pos:line="4141" pos:column="87">_prevContainer</name></name> <op:operator pos:line="4141" pos:column="102">:</op:operator> <name><name pos:line="4141" pos:column="104">pddi</name><op:operator pos:line="4141" pos:column="108">.</op:operator><name pos:line="4141" pos:column="109">_currContainer</name></name><op:operator pos:line="4141" pos:column="123">)</op:operator></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="4142" pos:column="33">RECT</name></type> <name pos:line="4142" pos:column="38">rc</name></decl>;</decl_stmt>
				<if pos:line="4143" pos:column="33">if <condition pos:line="4143" pos:column="36">(<expr><call><name><name pos:line="4143" pos:column="37">dockingData</name><op:operator pos:line="4143" pos:column="48">.</op:operator><name pos:line="4143" pos:column="49">getFloatingRCFrom</name></name><argument_list pos:line="4143" pos:column="66">(<argument><expr><name pos:line="4143" pos:column="67">cont</name></expr></argument>, <argument><expr><name pos:line="4143" pos:column="73">rc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4143" pos:column="77">
					<expr_stmt><expr><name><name pos:line="4144" pos:column="41">dockData</name><op:operator pos:line="4144" pos:column="49">.</op:operator><name pos:line="4144" pos:column="50">rcFloat</name></name> <op:operator pos:line="4144" pos:column="58">=</op:operator> <name pos:line="4144" pos:column="60">rc</name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<return pos:line="4146" pos:column="25">return <expr><lit:literal type="boolean" pos:line="4146" pos:column="32">true</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="4149" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4149" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="4153" pos:column="1">void</name></type> <name><name pos:line="4153" pos:column="6">Notepad_plus</name><op:operator pos:line="4153" pos:column="18">::</op:operator><name pos:line="4153" pos:column="20">getCurrentOpenedFiles</name></name><parameter_list pos:line="4153" pos:column="41">(<param><decl><type><name pos:line="4153" pos:column="42">Session</name> <type:modifier pos:line="4153" pos:column="50">&amp;</type:modifier></type> <name pos:line="4153" pos:column="52">session</name></decl></param>)</parameter_list>
<block pos:line="4154" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="4155" pos:column="9">_mainEditView</name><op:operator pos:line="4155" pos:column="22">.</op:operator><name pos:line="4155" pos:column="23">saveCurrentPos</name></name><argument_list pos:line="4155" pos:column="37">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4155" pos:column="41">//save position so itll be correct in the session</comment>
	<expr_stmt><expr><call><name><name pos:line="4156" pos:column="9">_subEditView</name><op:operator pos:line="4156" pos:column="21">.</op:operator><name pos:line="4156" pos:column="22">saveCurrentPos</name></name><argument_list pos:line="4156" pos:column="36">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4156" pos:column="41">//both views</comment>
	<expr_stmt><expr><name><name pos:line="4157" pos:column="9">session</name><op:operator pos:line="4157" pos:column="16">.</op:operator><name pos:line="4157" pos:column="17">_activeView</name></name> <op:operator pos:line="4157" pos:column="29">=</op:operator> <call><name pos:line="4157" pos:column="31">currentView</name><argument_list pos:line="4157" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4158" pos:column="9">session</name><op:operator pos:line="4158" pos:column="16">.</op:operator><name pos:line="4158" pos:column="17">_activeMainIndex</name></name> <op:operator pos:line="4158" pos:column="34">=</op:operator> <call><name><name pos:line="4158" pos:column="36">_mainDocTab</name><op:operator pos:line="4158" pos:column="47">.</op:operator><name pos:line="4158" pos:column="48">getCurrentTabIndex</name></name><argument_list pos:line="4158" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4159" pos:column="9">session</name><op:operator pos:line="4159" pos:column="16">.</op:operator><name pos:line="4159" pos:column="17">_activeSubIndex</name></name> <op:operator pos:line="4159" pos:column="33">=</op:operator> <call><name><name pos:line="4159" pos:column="35">_subDocTab</name><op:operator pos:line="4159" pos:column="45">.</op:operator><name pos:line="4159" pos:column="46">getCurrentTabIndex</name></name><argument_list pos:line="4159" pos:column="64">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="4161" pos:column="9">//Use _invisibleEditView to temporarily open documents to retrieve markers</comment>
	<comment type="line" pos:line="4162" pos:column="9">//Buffer * mainBuf = _mainEditView.getCurrentBuffer();</comment>
	<comment type="line" pos:line="4163" pos:column="9">//Buffer * subBuf = _subEditView.getCurrentBuffer();</comment>
	<decl_stmt><decl><type><name pos:line="4164" pos:column="9">Document</name></type> <name pos:line="4164" pos:column="18">oldDoc</name> <init pos:line="4164" pos:column="25">= <expr><call><name><name pos:line="4164" pos:column="27">_invisibleEditView</name><op:operator pos:line="4164" pos:column="45">.</op:operator><name pos:line="4164" pos:column="46">execute</name></name><argument_list pos:line="4164" pos:column="53">(<argument><expr><name pos:line="4164" pos:column="54">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="4165" pos:column="9">for (<init><decl><type><name pos:line="4165" pos:column="14">int</name></type> <name pos:line="4165" pos:column="18">i</name> <init pos:line="4165" pos:column="20">= <expr><lit:literal type="number" pos:line="4165" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4165" pos:column="26">i</name> <op:operator pos:line="4165" pos:column="28">&lt;</op:operator> <call><name><name pos:line="4165" pos:column="30">_mainDocTab</name><op:operator pos:line="4165" pos:column="41">.</op:operator><name pos:line="4165" pos:column="42">nbItem</name></name><argument_list pos:line="4165" pos:column="48">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4165" pos:column="53">i</name><op:operator pos:line="4165" pos:column="54">++</op:operator></expr></incr>)
	<block pos:line="4166" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4167" pos:column="17">BufferID</name></type> <name pos:line="4167" pos:column="26">bufID</name> <init pos:line="4167" pos:column="32">= <expr><call><name><name pos:line="4167" pos:column="34">_mainDocTab</name><op:operator pos:line="4167" pos:column="45">.</op:operator><name pos:line="4167" pos:column="46">getBufferByIndex</name></name><argument_list pos:line="4167" pos:column="62">(<argument><expr><name pos:line="4167" pos:column="63">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4168" pos:column="17">Buffer</name> <type:modifier pos:line="4168" pos:column="24">*</type:modifier></type> <name pos:line="4168" pos:column="26">buf</name> <init pos:line="4168" pos:column="30">= <expr><call><name><name pos:line="4168" pos:column="32">MainFileManager</name><op:operator pos:line="4168" pos:column="47">-&gt;</op:operator><name pos:line="4168" pos:column="49">getBufferByID</name></name><argument_list pos:line="4168" pos:column="62">(<argument><expr><name pos:line="4168" pos:column="63">bufID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="4170" pos:column="17">if <condition pos:line="4170" pos:column="20">(<expr><op:operator pos:line="4170" pos:column="21">!</op:operator><call><name><name pos:line="4170" pos:column="22">buf</name><op:operator pos:line="4170" pos:column="25">-&gt;</op:operator><name pos:line="4170" pos:column="27">isUntitled</name></name><argument_list pos:line="4170" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="4170" pos:column="40">
		<block pos:line="4171" pos:column="17">{
			<comment type="line" pos:line="4172" pos:column="25">// if the file doesn't exist, it could be redirected</comment>
			<comment type="line" pos:line="4173" pos:column="25">// So we turn Wow64 off</comment>
			<decl_stmt><decl><type><name pos:line="4174" pos:column="25">bool</name></type> <name pos:line="4174" pos:column="30">isWow64Off</name> <init pos:line="4174" pos:column="41">= <expr><lit:literal type="boolean" pos:line="4174" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4175" pos:column="25">NppParameters</name> <type:modifier pos:line="4175" pos:column="39">*</type:modifier></type><name pos:line="4175" pos:column="40">pNppParam</name> <init pos:line="4175" pos:column="50">= <expr><call><name><name pos:line="4175" pos:column="52">NppParameters</name><op:operator pos:line="4175" pos:column="65">::</op:operator><name pos:line="4175" pos:column="67">getInstance</name></name><argument_list pos:line="4175" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4176" pos:column="25">if <condition pos:line="4176" pos:column="28">(<expr><op:operator pos:line="4176" pos:column="29">!</op:operator><call><name pos:line="4176" pos:column="30">PathFileExists</name><argument_list pos:line="4176" pos:column="44">(<argument><expr><call><name><name pos:line="4176" pos:column="45">buf</name><op:operator pos:line="4176" pos:column="48">-&gt;</op:operator><name pos:line="4176" pos:column="50">getFullPathName</name></name><argument_list pos:line="4176" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4176" pos:column="69">
			<block pos:line="4177" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="4178" pos:column="33">pNppParam</name><op:operator pos:line="4178" pos:column="42">-&gt;</op:operator><name pos:line="4178" pos:column="44">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="4178" pos:column="77">(<argument><expr><name pos:line="4178" pos:column="78">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="4179" pos:column="33">isWow64Off</name> <op:operator pos:line="4179" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="4179" pos:column="46">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<if pos:line="4182" pos:column="25">if <condition pos:line="4182" pos:column="28">(<expr><call><name pos:line="4182" pos:column="29">PathFileExists</name><argument_list pos:line="4182" pos:column="43">(<argument><expr><call><name><name pos:line="4182" pos:column="44">buf</name><op:operator pos:line="4182" pos:column="47">-&gt;</op:operator><name pos:line="4182" pos:column="49">getFullPathName</name></name><argument_list pos:line="4182" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4182" pos:column="68">
			<block pos:line="4183" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="4184" pos:column="33">generic_string</name></type>	<name pos:line="4184" pos:column="49">languageName</name> <init pos:line="4184" pos:column="62">= <expr><call><name pos:line="4184" pos:column="64">getLangFromMenu</name><argument_list pos:line="4184" pos:column="79">(<argument><expr><name pos:line="4184" pos:column="80">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="4185" pos:column="33">const</specifier> <name pos:line="4185" pos:column="39">TCHAR</name> <type:modifier pos:line="4185" pos:column="45">*</type:modifier></type><name pos:line="4185" pos:column="46">langName</name>	<init pos:line="4185" pos:column="57">= <expr><call><name><name pos:line="4185" pos:column="59">languageName</name><op:operator pos:line="4185" pos:column="71">.</op:operator><name pos:line="4185" pos:column="72">c_str</name></name><argument_list pos:line="4185" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="4187" pos:column="33">sessionFileInfo</name></type> <name pos:line="4187" pos:column="49">sfi</name><argument_list pos:line="4187" pos:column="52">(<argument><expr><call><name><name pos:line="4187" pos:column="53">buf</name><op:operator pos:line="4187" pos:column="56">-&gt;</op:operator><name pos:line="4187" pos:column="58">getFullPathName</name></name><argument_list pos:line="4187" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4187" pos:column="77">langName</name></expr></argument>, <argument><expr><call><name><name pos:line="4187" pos:column="87">buf</name><op:operator pos:line="4187" pos:column="90">-&gt;</op:operator><name pos:line="4187" pos:column="92">getEncoding</name></name><argument_list pos:line="4187" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4187" pos:column="107">buf</name><op:operator pos:line="4187" pos:column="110">-&gt;</op:operator><name pos:line="4187" pos:column="112">getPosition</name></name><argument_list pos:line="4187" pos:column="123">(<argument><expr><op:operator pos:line="4187" pos:column="124">&amp;</op:operator><name pos:line="4187" pos:column="125">_mainEditView</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

				<comment type="line" pos:line="4189" pos:column="33">//_mainEditView.activateBuffer(buf-&gt;getID());</comment>
				<expr_stmt><expr><call><name><name pos:line="4190" pos:column="33">_invisibleEditView</name><op:operator pos:line="4190" pos:column="51">.</op:operator><name pos:line="4190" pos:column="52">execute</name></name><argument_list pos:line="4190" pos:column="59">(<argument><expr><name pos:line="4190" pos:column="60">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4190" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4190" pos:column="82">buf</name><op:operator pos:line="4190" pos:column="85">-&gt;</op:operator><name pos:line="4190" pos:column="87">getDocument</name></name><argument_list pos:line="4190" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="4191" pos:column="33">int</name></type> <name pos:line="4191" pos:column="37">maxLine</name> <init pos:line="4191" pos:column="45">= <expr><call><name><name pos:line="4191" pos:column="47">_invisibleEditView</name><op:operator pos:line="4191" pos:column="65">.</op:operator><name pos:line="4191" pos:column="66">execute</name></name><argument_list pos:line="4191" pos:column="73">(<argument><expr><name pos:line="4191" pos:column="74">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<for pos:line="4193" pos:column="33">for (<init><decl><type><name pos:line="4193" pos:column="38">int</name></type> <name pos:line="4193" pos:column="42">j</name> <init pos:line="4193" pos:column="44">= <expr><lit:literal type="number" pos:line="4193" pos:column="46">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4193" pos:column="50">j</name> <op:operator pos:line="4193" pos:column="52">&lt;</op:operator> <name pos:line="4193" pos:column="54">maxLine</name></expr> ;</condition> <incr><expr><name pos:line="4193" pos:column="64">j</name><op:operator pos:line="4193" pos:column="65">++</op:operator></expr></incr>)
				<block pos:line="4194" pos:column="33">{
					<if pos:line="4195" pos:column="41">if <condition pos:line="4195" pos:column="44">(<expr><op:operator pos:line="4195" pos:column="45">(</op:operator><call><name><name pos:line="4195" pos:column="46">_invisibleEditView</name><op:operator pos:line="4195" pos:column="64">.</op:operator><name pos:line="4195" pos:column="65">execute</name></name><argument_list pos:line="4195" pos:column="72">(<argument><expr><name pos:line="4195" pos:column="73">SCI_MARKERGET</name></expr></argument>, <argument><expr><name pos:line="4195" pos:column="88">j</name></expr></argument>)</argument_list></call><op:operator pos:line="4195" pos:column="90">&amp;</op:operator><op:operator pos:line="4195" pos:column="91">(</op:operator><lit:literal type="number" pos:line="4195" pos:column="92">1</lit:literal> <op:operator pos:line="4195" pos:column="94">&lt;&lt;</op:operator> <name pos:line="4195" pos:column="97">MARK_BOOKMARK</name><op:operator pos:line="4195" pos:column="110">)</op:operator><op:operator pos:line="4195" pos:column="111">)</op:operator> <op:operator pos:line="4195" pos:column="113">!=</op:operator> <lit:literal type="number" pos:line="4195" pos:column="116">0</lit:literal></expr>)</condition><then pos:line="4195" pos:column="118">
					<block pos:line="4196" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="4197" pos:column="49">sfi</name><op:operator pos:line="4197" pos:column="52">.</op:operator><name pos:line="4197" pos:column="53">marks</name><op:operator pos:line="4197" pos:column="58">.</op:operator><name pos:line="4197" pos:column="59">push_back</name></name><argument_list pos:line="4197" pos:column="68">(<argument><expr><name pos:line="4197" pos:column="69">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<expr_stmt><expr><call><name><name pos:line="4200" pos:column="33">session</name><op:operator pos:line="4200" pos:column="40">.</op:operator><name pos:line="4200" pos:column="41">_mainViewFiles</name><op:operator pos:line="4200" pos:column="55">.</op:operator><name pos:line="4200" pos:column="56">push_back</name></name><argument_list pos:line="4200" pos:column="65">(<argument><expr><name pos:line="4200" pos:column="66">sfi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="4203" pos:column="25">// We enable Wow64 system, if it was disabled</comment>
			<if pos:line="4204" pos:column="25">if <condition pos:line="4204" pos:column="28">(<expr><name pos:line="4204" pos:column="29">isWow64Off</name></expr>)</condition><then pos:line="4204" pos:column="40">
			<block pos:line="4205" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="4206" pos:column="33">pNppParam</name><op:operator pos:line="4206" pos:column="42">-&gt;</op:operator><name pos:line="4206" pos:column="44">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="4206" pos:column="77">(<argument><expr><name pos:line="4206" pos:column="78">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="4207" pos:column="33">isWow64Off</name> <op:operator pos:line="4207" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="4207" pos:column="46">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></for>

	<for pos:line="4212" pos:column="9">for (<init><decl><type><name pos:line="4212" pos:column="14">int</name></type> <name pos:line="4212" pos:column="18">i</name> <init pos:line="4212" pos:column="20">= <expr><lit:literal type="number" pos:line="4212" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4212" pos:column="26">i</name> <op:operator pos:line="4212" pos:column="28">&lt;</op:operator> <call><name><name pos:line="4212" pos:column="30">_subDocTab</name><op:operator pos:line="4212" pos:column="40">.</op:operator><name pos:line="4212" pos:column="41">nbItem</name></name><argument_list pos:line="4212" pos:column="47">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4212" pos:column="52">i</name><op:operator pos:line="4212" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="4213" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4214" pos:column="17">BufferID</name></type> <name pos:line="4214" pos:column="26">bufID</name> <init pos:line="4214" pos:column="32">= <expr><call><name><name pos:line="4214" pos:column="34">_subDocTab</name><op:operator pos:line="4214" pos:column="44">.</op:operator><name pos:line="4214" pos:column="45">getBufferByIndex</name></name><argument_list pos:line="4214" pos:column="61">(<argument><expr><name pos:line="4214" pos:column="62">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4215" pos:column="17">Buffer</name> <type:modifier pos:line="4215" pos:column="24">*</type:modifier></type> <name pos:line="4215" pos:column="26">buf</name> <init pos:line="4215" pos:column="30">= <expr><call><name><name pos:line="4215" pos:column="32">MainFileManager</name><op:operator pos:line="4215" pos:column="47">-&gt;</op:operator><name pos:line="4215" pos:column="49">getBufferByID</name></name><argument_list pos:line="4215" pos:column="62">(<argument><expr><name pos:line="4215" pos:column="63">bufID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4216" pos:column="17">if <condition pos:line="4216" pos:column="20">(<expr><op:operator pos:line="4216" pos:column="21">!</op:operator><call><name><name pos:line="4216" pos:column="22">buf</name><op:operator pos:line="4216" pos:column="25">-&gt;</op:operator><name pos:line="4216" pos:column="27">isUntitled</name></name><argument_list pos:line="4216" pos:column="37">()</argument_list></call> <op:operator pos:line="4216" pos:column="40">&amp;&amp;</op:operator> <call><name pos:line="4216" pos:column="43">PathFileExists</name><argument_list pos:line="4216" pos:column="57">(<argument><expr><call><name><name pos:line="4216" pos:column="58">buf</name><op:operator pos:line="4216" pos:column="61">-&gt;</op:operator><name pos:line="4216" pos:column="63">getFullPathName</name></name><argument_list pos:line="4216" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4216" pos:column="82">
		<block pos:line="4217" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4218" pos:column="25">generic_string</name></type>	<name pos:line="4218" pos:column="41">languageName</name>	<init pos:line="4218" pos:column="57">= <expr><call><name pos:line="4218" pos:column="59">getLangFromMenu</name><argument_list pos:line="4218" pos:column="74">( <argument><expr><name pos:line="4218" pos:column="76">buf</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="4219" pos:column="25">const</specifier> <name pos:line="4219" pos:column="31">TCHAR</name> <type:modifier pos:line="4219" pos:column="37">*</type:modifier></type><name pos:line="4219" pos:column="38">langName</name>	<init pos:line="4219" pos:column="49">= <expr><call><name><name pos:line="4219" pos:column="51">languageName</name><op:operator pos:line="4219" pos:column="63">.</op:operator><name pos:line="4219" pos:column="64">c_str</name></name><argument_list pos:line="4219" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="4221" pos:column="25">sessionFileInfo</name></type> <name pos:line="4221" pos:column="41">sfi</name><argument_list pos:line="4221" pos:column="44">(<argument><expr><call><name><name pos:line="4221" pos:column="45">buf</name><op:operator pos:line="4221" pos:column="48">-&gt;</op:operator><name pos:line="4221" pos:column="50">getFullPathName</name></name><argument_list pos:line="4221" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4221" pos:column="69">langName</name></expr></argument>, <argument><expr><call><name><name pos:line="4221" pos:column="79">buf</name><op:operator pos:line="4221" pos:column="82">-&gt;</op:operator><name pos:line="4221" pos:column="84">getEncoding</name></name><argument_list pos:line="4221" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4221" pos:column="99">buf</name><op:operator pos:line="4221" pos:column="102">-&gt;</op:operator><name pos:line="4221" pos:column="104">getPosition</name></name><argument_list pos:line="4221" pos:column="115">(<argument><expr><op:operator pos:line="4221" pos:column="116">&amp;</op:operator><name pos:line="4221" pos:column="117">_subEditView</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="4223" pos:column="25">_invisibleEditView</name><op:operator pos:line="4223" pos:column="43">.</op:operator><name pos:line="4223" pos:column="44">execute</name></name><argument_list pos:line="4223" pos:column="51">(<argument><expr><name pos:line="4223" pos:column="52">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4223" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4223" pos:column="74">buf</name><op:operator pos:line="4223" pos:column="77">-&gt;</op:operator><name pos:line="4223" pos:column="79">getDocument</name></name><argument_list pos:line="4223" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="4224" pos:column="25">int</name></type> <name pos:line="4224" pos:column="29">maxLine</name> <init pos:line="4224" pos:column="37">= <expr><call><name><name pos:line="4224" pos:column="39">_invisibleEditView</name><op:operator pos:line="4224" pos:column="57">.</op:operator><name pos:line="4224" pos:column="58">execute</name></name><argument_list pos:line="4224" pos:column="65">(<argument><expr><name pos:line="4224" pos:column="66">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="4225" pos:column="25">for (<init><decl><type><name pos:line="4225" pos:column="30">int</name></type> <name pos:line="4225" pos:column="34">j</name> <init pos:line="4225" pos:column="36">= <expr><lit:literal type="number" pos:line="4225" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4225" pos:column="42">j</name> <op:operator pos:line="4225" pos:column="44">&lt;</op:operator> <name pos:line="4225" pos:column="46">maxLine</name></expr> ;</condition> <incr><expr><name pos:line="4225" pos:column="56">j</name><op:operator pos:line="4225" pos:column="57">++</op:operator></expr></incr>)
			<block pos:line="4226" pos:column="25">{
				<if pos:line="4227" pos:column="33">if <condition pos:line="4227" pos:column="36">(<expr><op:operator pos:line="4227" pos:column="37">(</op:operator><call><name><name pos:line="4227" pos:column="38">_invisibleEditView</name><op:operator pos:line="4227" pos:column="56">.</op:operator><name pos:line="4227" pos:column="57">execute</name></name><argument_list pos:line="4227" pos:column="64">(<argument><expr><name pos:line="4227" pos:column="65">SCI_MARKERGET</name></expr></argument>, <argument><expr><name pos:line="4227" pos:column="80">j</name></expr></argument>)</argument_list></call><op:operator pos:line="4227" pos:column="82">&amp;</op:operator><op:operator pos:line="4227" pos:column="83">(</op:operator><lit:literal type="number" pos:line="4227" pos:column="84">1</lit:literal> <op:operator pos:line="4227" pos:column="86">&lt;&lt;</op:operator> <name pos:line="4227" pos:column="89">MARK_BOOKMARK</name><op:operator pos:line="4227" pos:column="102">)</op:operator><op:operator pos:line="4227" pos:column="103">)</op:operator> <op:operator pos:line="4227" pos:column="105">!=</op:operator> <lit:literal type="number" pos:line="4227" pos:column="108">0</lit:literal></expr>)</condition><then pos:line="4227" pos:column="110">
				<block pos:line="4228" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="4229" pos:column="41">sfi</name><op:operator pos:line="4229" pos:column="44">.</op:operator><name pos:line="4229" pos:column="45">marks</name><op:operator pos:line="4229" pos:column="50">.</op:operator><name pos:line="4229" pos:column="51">push_back</name></name><argument_list pos:line="4229" pos:column="60">(<argument><expr><name pos:line="4229" pos:column="61">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="4232" pos:column="25">session</name><op:operator pos:line="4232" pos:column="32">.</op:operator><name pos:line="4232" pos:column="33">_subViewFiles</name><op:operator pos:line="4232" pos:column="46">.</op:operator><name pos:line="4232" pos:column="47">push_back</name></name><argument_list pos:line="4232" pos:column="56">(<argument><expr><name pos:line="4232" pos:column="57">sfi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="4235" pos:column="9">_invisibleEditView</name><op:operator pos:line="4235" pos:column="27">.</op:operator><name pos:line="4235" pos:column="28">execute</name></name><argument_list pos:line="4235" pos:column="35">(<argument><expr><name pos:line="4235" pos:column="36">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4235" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="4235" pos:column="58">oldDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4238" pos:column="1">bool</name></type> <name><name pos:line="4238" pos:column="6">Notepad_plus</name><op:operator pos:line="4238" pos:column="18">::</op:operator><name pos:line="4238" pos:column="20">str2Cliboard</name></name><parameter_list pos:line="4238" pos:column="32">(<param><decl><type><specifier pos:line="4238" pos:column="33">const</specifier> <name pos:line="4238" pos:column="39">TCHAR</name> <type:modifier pos:line="4238" pos:column="45">*</type:modifier></type><name pos:line="4238" pos:column="46">str2cpy</name></decl></param>)</parameter_list>
<block pos:line="4239" pos:column="1">{
	<if pos:line="4240" pos:column="9">if <condition pos:line="4240" pos:column="12">(<expr><op:operator pos:line="4240" pos:column="13">!</op:operator><name pos:line="4240" pos:column="14">str2cpy</name></expr>)</condition><then pos:line="4240" pos:column="22">
		<return pos:line="4241" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4241" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4243" pos:column="9">int</name></type> <name pos:line="4243" pos:column="13">len2Allocate</name> <init pos:line="4243" pos:column="26">= <expr><call><name pos:line="4243" pos:column="28">lstrlen</name><argument_list pos:line="4243" pos:column="35">(<argument><expr><name pos:line="4243" pos:column="36">str2cpy</name></expr></argument>)</argument_list></call> <op:operator pos:line="4243" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="4243" pos:column="47">1</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="4244" pos:column="9">len2Allocate</name> <op:operator pos:line="4244" pos:column="22">*=</op:operator> <sizeof pos:line="4244" pos:column="25">sizeof<argument_list pos:line="4244" pos:column="31">(<argument><expr><name pos:line="4244" pos:column="32">TCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="4245" pos:column="9">unsigned</name> <name pos:line="4245" pos:column="18">int</name></type> <name pos:line="4245" pos:column="22">cilpboardFormat</name> <init pos:line="4245" pos:column="38">= <expr><name pos:line="4245" pos:column="40">CF_TEXT</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="4247" pos:column="1">#<cpp:directive pos:line="4247" pos:column="2">ifdef</cpp:directive> <name pos:line="4247" pos:column="8">UNICODE</name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="4248" pos:column="9">cilpboardFormat</name> <op:operator pos:line="4248" pos:column="25">=</op:operator> <name pos:line="4248" pos:column="27">CF_UNICODETEXT</name></expr>;</expr_stmt>
<cpp:endif pos:line="4249" pos:column="1">#<cpp:directive pos:line="4249" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="4251" pos:column="9">HGLOBAL</name></type> <name pos:line="4251" pos:column="17">hglbCopy</name> <init pos:line="4251" pos:column="26">= <expr><call><name><op:operator pos:line="4251" pos:column="28">::</op:operator><name pos:line="4251" pos:column="30">GlobalAlloc</name></name><argument_list pos:line="4251" pos:column="41">(<argument><expr><name pos:line="4251" pos:column="42">GMEM_MOVEABLE</name></expr></argument>, <argument><expr><name pos:line="4251" pos:column="57">len2Allocate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4252" pos:column="9">if <condition pos:line="4252" pos:column="12">(<expr><name pos:line="4252" pos:column="13">hglbCopy</name> <op:operator pos:line="4252" pos:column="22">==</op:operator> <name pos:line="4252" pos:column="25">NULL</name></expr>)</condition><then pos:line="4252" pos:column="30">
	<block pos:line="4253" pos:column="9">{
		<return pos:line="4254" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4254" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>

	<if pos:line="4257" pos:column="9">if <condition pos:line="4257" pos:column="12">(<expr><op:operator pos:line="4257" pos:column="13">!</op:operator><call><name><op:operator pos:line="4257" pos:column="14">::</op:operator><name pos:line="4257" pos:column="16">OpenClipboard</name></name><argument_list pos:line="4257" pos:column="29">(<argument><expr><call><name><name pos:line="4257" pos:column="30">_pPublicInterface</name><op:operator pos:line="4257" pos:column="47">-&gt;</op:operator><name pos:line="4257" pos:column="49">getHSelf</name></name><argument_list pos:line="4257" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4257" pos:column="61">
		<return pos:line="4258" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4258" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="4260" pos:column="9">::</op:operator><name pos:line="4260" pos:column="11">EmptyClipboard</name></name><argument_list pos:line="4260" pos:column="25">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="4262" pos:column="9">// Lock the handle and copy the text to the buffer.</comment>
	<decl_stmt><decl><type><name pos:line="4263" pos:column="9">TCHAR</name> <type:modifier pos:line="4263" pos:column="15">*</type:modifier></type><name pos:line="4263" pos:column="16">pStr</name> <init pos:line="4263" pos:column="21">= <expr><op:operator pos:line="4263" pos:column="23">(</op:operator><name pos:line="4263" pos:column="24">TCHAR</name> <op:operator pos:line="4263" pos:column="30">*</op:operator><op:operator pos:line="4263" pos:column="31">)</op:operator><call><name><op:operator pos:line="4263" pos:column="32">::</op:operator><name pos:line="4263" pos:column="34">GlobalLock</name></name><argument_list pos:line="4263" pos:column="44">(<argument><expr><name pos:line="4263" pos:column="45">hglbCopy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="4264" pos:column="9">lstrcpy</name><argument_list pos:line="4264" pos:column="16">(<argument><expr><name pos:line="4264" pos:column="17">pStr</name></expr></argument>, <argument><expr><name pos:line="4264" pos:column="23">str2cpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="4265" pos:column="9">::</op:operator><name pos:line="4265" pos:column="11">GlobalUnlock</name></name><argument_list pos:line="4265" pos:column="23">(<argument><expr><name pos:line="4265" pos:column="24">hglbCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="4267" pos:column="9">// Place the handle on the clipboard.</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="4268" pos:column="9">::</op:operator><name pos:line="4268" pos:column="11">SetClipboardData</name></name><argument_list pos:line="4268" pos:column="27">(<argument><expr><name pos:line="4268" pos:column="28">cilpboardFormat</name></expr></argument>, <argument><expr><name pos:line="4268" pos:column="45">hglbCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="4269" pos:column="9">::</op:operator><name pos:line="4269" pos:column="11">CloseClipboard</name></name><argument_list pos:line="4269" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4270" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4270" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<comment type="line" pos:line="4273" pos:column="1">//ONLY CALL IN CASE OF EMERGENCY: EXCEPTION</comment>
<comment type="line" pos:line="4274" pos:column="1">//This function is destructive</comment>
<function><type><name pos:line="4275" pos:column="1">bool</name></type> <name><name pos:line="4275" pos:column="6">Notepad_plus</name><op:operator pos:line="4275" pos:column="18">::</op:operator><name pos:line="4275" pos:column="20">emergency</name></name><parameter_list pos:line="4275" pos:column="29">(<param><decl><type><name pos:line="4275" pos:column="30">generic_string</name></type> <name pos:line="4275" pos:column="45">emergencySavedDir</name></decl></param>)</parameter_list>
<block pos:line="4276" pos:column="1">{
    <expr_stmt><expr><call><name><op:operator pos:line="4277" pos:column="5">::</op:operator><name pos:line="4277" pos:column="7">CreateDirectory</name></name><argument_list pos:line="4277" pos:column="22">(<argument><expr><call><name><name pos:line="4277" pos:column="23">emergencySavedDir</name><op:operator pos:line="4277" pos:column="40">.</op:operator><name pos:line="4277" pos:column="41">c_str</name></name><argument_list pos:line="4277" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4277" pos:column="50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4278" pos:column="9">return <expr><call><name pos:line="4278" pos:column="16">dumpFiles</name><argument_list pos:line="4278" pos:column="25">(<argument><expr><call><name><name pos:line="4278" pos:column="26">emergencySavedDir</name><op:operator pos:line="4278" pos:column="43">.</op:operator><name pos:line="4278" pos:column="44">c_str</name></name><argument_list pos:line="4278" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4278" pos:column="53">TEXT</name><argument_list pos:line="4278" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="4278" pos:column="58">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="4281" pos:column="1">bool</name></type> <name><name pos:line="4281" pos:column="6">Notepad_plus</name><op:operator pos:line="4281" pos:column="18">::</op:operator><name pos:line="4281" pos:column="20">dumpFiles</name></name><parameter_list pos:line="4281" pos:column="29">(<param><decl><type><specifier pos:line="4281" pos:column="30">const</specifier> <name pos:line="4281" pos:column="36">TCHAR</name> <type:modifier pos:line="4281" pos:column="42">*</type:modifier></type> <name pos:line="4281" pos:column="44">outdir</name></decl></param>, <param><decl><type><specifier pos:line="4281" pos:column="52">const</specifier> <name pos:line="4281" pos:column="58">TCHAR</name> <type:modifier pos:line="4281" pos:column="64">*</type:modifier></type> <name pos:line="4281" pos:column="66">fileprefix</name></decl></param>)</parameter_list> <block pos:line="4281" pos:column="78">{
	<comment type="line" pos:line="4282" pos:column="9">//start dumping unsaved files to recovery directory</comment>
	<decl_stmt><decl><type><name pos:line="4283" pos:column="9">bool</name></type> <name pos:line="4283" pos:column="14">somethingsaved</name> <init pos:line="4283" pos:column="29">= <expr><lit:literal type="boolean" pos:line="4283" pos:column="31">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4284" pos:column="9">bool</name></type> <name pos:line="4284" pos:column="14">somedirty</name> <init pos:line="4284" pos:column="24">= <expr><lit:literal type="boolean" pos:line="4284" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4285" pos:column="9">TCHAR</name></type> <name><name pos:line="4285" pos:column="15">savePath</name><index pos:line="4285" pos:column="23">[<expr><name pos:line="4285" pos:column="24">MAX_PATH</name></expr>]</index></name> <init pos:line="4285" pos:column="34">= <expr><block pos:line="4285" pos:column="36">{<expr><lit:literal type="number" pos:line="4285" pos:column="37">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="4287" pos:column="9">//rescue primary</comment>
	<for pos:line="4288" pos:column="9">for(<init><decl><type><name pos:line="4288" pos:column="13">int</name></type> <name pos:line="4288" pos:column="17">i</name> <init pos:line="4288" pos:column="19">= <expr><lit:literal type="number" pos:line="4288" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4288" pos:column="24">i</name> <op:operator pos:line="4288" pos:column="26">&lt;</op:operator> <call><name><name pos:line="4288" pos:column="28">MainFileManager</name><op:operator pos:line="4288" pos:column="43">-&gt;</op:operator><name pos:line="4288" pos:column="45">getNrBuffers</name></name><argument_list pos:line="4288" pos:column="57">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4288" pos:column="61">i</name><op:operator pos:line="4288" pos:column="62">++</op:operator></expr></incr>) <block pos:line="4288" pos:column="66">{
		<decl_stmt><decl><type><name pos:line="4289" pos:column="17">Buffer</name> <type:modifier pos:line="4289" pos:column="24">*</type:modifier></type> <name pos:line="4289" pos:column="26">docbuf</name> <init pos:line="4289" pos:column="33">= <expr><call><name><name pos:line="4289" pos:column="35">MainFileManager</name><op:operator pos:line="4289" pos:column="50">-&gt;</op:operator><name pos:line="4289" pos:column="52">getBufferByIndex</name></name><argument_list pos:line="4289" pos:column="68">(<argument><expr><name pos:line="4289" pos:column="69">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4290" pos:column="17">if <condition pos:line="4290" pos:column="20">(<expr><op:operator pos:line="4290" pos:column="21">!</op:operator><call><name><name pos:line="4290" pos:column="22">docbuf</name><op:operator pos:line="4290" pos:column="28">-&gt;</op:operator><name pos:line="4290" pos:column="30">isDirty</name></name><argument_list pos:line="4290" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="4290" pos:column="40">	<comment type="line" pos:line="4290" pos:column="41">//skip saved documents</comment>
			<continue pos:line="4291" pos:column="25">continue;</continue></then>
		<else pos:line="4292" pos:column="17">else
			<expr_stmt><expr><name pos:line="4293" pos:column="25">somedirty</name> <op:operator pos:line="4293" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="4293" pos:column="37">true</lit:literal></expr>;</expr_stmt></else></if>

		<decl_stmt><decl><type><specifier pos:line="4295" pos:column="17">const</specifier> <name pos:line="4295" pos:column="23">TCHAR</name> <type:modifier pos:line="4295" pos:column="29">*</type:modifier></type> <name pos:line="4295" pos:column="31">unitext</name> <init pos:line="4295" pos:column="39">= <expr><op:operator pos:line="4295" pos:column="41">(</op:operator><call><name><name pos:line="4295" pos:column="42">docbuf</name><op:operator pos:line="4295" pos:column="48">-&gt;</op:operator><name pos:line="4295" pos:column="50">getUnicodeMode</name></name><argument_list pos:line="4295" pos:column="64">()</argument_list></call> <op:operator pos:line="4295" pos:column="67">!=</op:operator> <name pos:line="4295" pos:column="70">uni8Bit</name><op:operator pos:line="4295" pos:column="77">)</op:operator><op:operator pos:line="4295" pos:column="78">?</op:operator><call><name pos:line="4295" pos:column="79">TEXT</name><argument_list pos:line="4295" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4295" pos:column="84">"_utf8"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4295" pos:column="92">:</op:operator><call><name pos:line="4295" pos:column="93">TEXT</name><argument_list pos:line="4295" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="4295" pos:column="98">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="4296" pos:column="17">wsprintf</name><argument_list pos:line="4296" pos:column="25">(<argument><expr><name pos:line="4296" pos:column="26">savePath</name></expr></argument>, <argument><expr><call><name pos:line="4296" pos:column="36">TEXT</name><argument_list pos:line="4296" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="4296" pos:column="41">"%s\\%s%03d%s.dump"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4296" pos:column="63">outdir</name></expr></argument>, <argument><expr><name pos:line="4296" pos:column="71">fileprefix</name></expr></argument>, <argument><expr><name pos:line="4296" pos:column="83">i</name></expr></argument>, <argument><expr><name pos:line="4296" pos:column="86">unitext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4298" pos:column="17">bool</name></type> <name pos:line="4298" pos:column="22">res</name> <init pos:line="4298" pos:column="26">= <expr><call><name><name pos:line="4298" pos:column="28">MainFileManager</name><op:operator pos:line="4298" pos:column="43">-&gt;</op:operator><name pos:line="4298" pos:column="45">saveBuffer</name></name><argument_list pos:line="4298" pos:column="55">(<argument><expr><call><name><name pos:line="4298" pos:column="56">docbuf</name><op:operator pos:line="4298" pos:column="62">-&gt;</op:operator><name pos:line="4298" pos:column="64">getID</name></name><argument_list pos:line="4298" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4298" pos:column="73">savePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name pos:line="4300" pos:column="17">somethingsaved</name> <op:operator pos:line="4300" pos:column="32">|=</op:operator> <name pos:line="4300" pos:column="35">res</name></expr>;</expr_stmt>
	}</block></for>

	<return pos:line="4303" pos:column="9">return <expr><name pos:line="4303" pos:column="16">somethingsaved</name> <op:operator pos:line="4303" pos:column="31">||</op:operator> <op:operator pos:line="4303" pos:column="34">!</op:operator><name pos:line="4303" pos:column="35">somedirty</name></expr>;</return>
}</block></function>

<function><type><name pos:line="4306" pos:column="1">void</name></type> <name><name pos:line="4306" pos:column="6">Notepad_plus</name><op:operator pos:line="4306" pos:column="18">::</op:operator><name pos:line="4306" pos:column="20">drawTabbarColoursFromStylerArray</name></name><parameter_list pos:line="4306" pos:column="52">()</parameter_list>
<block pos:line="4307" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4308" pos:column="9">Style</name> <type:modifier pos:line="4308" pos:column="15">*</type:modifier></type><name pos:line="4308" pos:column="16">stActText</name> <init pos:line="4308" pos:column="26">= <expr><call><name pos:line="4308" pos:column="28">getStyleFromName</name><argument_list pos:line="4308" pos:column="44">(<argument><expr><name pos:line="4308" pos:column="45">TABBAR_ACTIVETEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4309" pos:column="9">if <condition pos:line="4309" pos:column="12">(<expr><name pos:line="4309" pos:column="13">stActText</name> <op:operator pos:line="4309" pos:column="23">&amp;&amp;</op:operator> <name><name pos:line="4309" pos:column="26">stActText</name><op:operator pos:line="4309" pos:column="35">-&gt;</op:operator><name pos:line="4309" pos:column="37">_fgColor</name></name> <op:operator pos:line="4309" pos:column="46">!=</op:operator> <op:operator pos:line="4309" pos:column="49">-</op:operator><lit:literal type="number" pos:line="4309" pos:column="50">1</lit:literal></expr>)</condition><then pos:line="4309" pos:column="52">
		<expr_stmt><expr><call><name><name pos:line="4310" pos:column="17">TabBarPlus</name><op:operator pos:line="4310" pos:column="27">::</op:operator><name pos:line="4310" pos:column="29">setColour</name></name><argument_list pos:line="4310" pos:column="38">(<argument><expr><name><name pos:line="4310" pos:column="39">stActText</name><op:operator pos:line="4310" pos:column="48">-&gt;</op:operator><name pos:line="4310" pos:column="50">_fgColor</name></name></expr></argument>, <argument><expr><name><name pos:line="4310" pos:column="60">TabBarPlus</name><op:operator pos:line="4310" pos:column="70">::</op:operator><name pos:line="4310" pos:column="72">activeText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="4312" pos:column="9">Style</name> <type:modifier pos:line="4312" pos:column="15">*</type:modifier></type><name pos:line="4312" pos:column="16">stActfocusTop</name> <init pos:line="4312" pos:column="30">= <expr><call><name pos:line="4312" pos:column="32">getStyleFromName</name><argument_list pos:line="4312" pos:column="48">(<argument><expr><name pos:line="4312" pos:column="49">TABBAR_ACTIVEFOCUSEDINDCATOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4313" pos:column="9">if <condition pos:line="4313" pos:column="12">(<expr><name pos:line="4313" pos:column="13">stActfocusTop</name> <op:operator pos:line="4313" pos:column="27">&amp;&amp;</op:operator> <name><name pos:line="4313" pos:column="30">stActfocusTop</name><op:operator pos:line="4313" pos:column="43">-&gt;</op:operator><name pos:line="4313" pos:column="45">_fgColor</name></name> <op:operator pos:line="4313" pos:column="54">!=</op:operator> <op:operator pos:line="4313" pos:column="57">-</op:operator><lit:literal type="number" pos:line="4313" pos:column="58">1</lit:literal></expr>)</condition><then pos:line="4313" pos:column="60">
		<expr_stmt><expr><call><name><name pos:line="4314" pos:column="17">TabBarPlus</name><op:operator pos:line="4314" pos:column="27">::</op:operator><name pos:line="4314" pos:column="29">setColour</name></name><argument_list pos:line="4314" pos:column="38">(<argument><expr><name><name pos:line="4314" pos:column="39">stActfocusTop</name><op:operator pos:line="4314" pos:column="52">-&gt;</op:operator><name pos:line="4314" pos:column="54">_fgColor</name></name></expr></argument>, <argument><expr><name><name pos:line="4314" pos:column="64">TabBarPlus</name><op:operator pos:line="4314" pos:column="74">::</op:operator><name pos:line="4314" pos:column="76">activeFocusedTop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="4316" pos:column="9">Style</name> <type:modifier pos:line="4316" pos:column="15">*</type:modifier></type><name pos:line="4316" pos:column="16">stActunfocusTop</name> <init pos:line="4316" pos:column="32">= <expr><call><name pos:line="4316" pos:column="34">getStyleFromName</name><argument_list pos:line="4316" pos:column="50">(<argument><expr><name pos:line="4316" pos:column="51">TABBAR_ACTIVEUNFOCUSEDINDCATOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4317" pos:column="9">if <condition pos:line="4317" pos:column="12">(<expr><name pos:line="4317" pos:column="13">stActunfocusTop</name> <op:operator pos:line="4317" pos:column="29">&amp;&amp;</op:operator> <name><name pos:line="4317" pos:column="32">stActunfocusTop</name><op:operator pos:line="4317" pos:column="47">-&gt;</op:operator><name pos:line="4317" pos:column="49">_fgColor</name></name> <op:operator pos:line="4317" pos:column="58">!=</op:operator> <op:operator pos:line="4317" pos:column="61">-</op:operator><lit:literal type="number" pos:line="4317" pos:column="62">1</lit:literal></expr>)</condition><then pos:line="4317" pos:column="64">
		<expr_stmt><expr><call><name><name pos:line="4318" pos:column="17">TabBarPlus</name><op:operator pos:line="4318" pos:column="27">::</op:operator><name pos:line="4318" pos:column="29">setColour</name></name><argument_list pos:line="4318" pos:column="38">(<argument><expr><name><name pos:line="4318" pos:column="39">stActunfocusTop</name><op:operator pos:line="4318" pos:column="54">-&gt;</op:operator><name pos:line="4318" pos:column="56">_fgColor</name></name></expr></argument>, <argument><expr><name><name pos:line="4318" pos:column="66">TabBarPlus</name><op:operator pos:line="4318" pos:column="76">::</op:operator><name pos:line="4318" pos:column="78">activeUnfocusedTop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="4320" pos:column="9">Style</name> <type:modifier pos:line="4320" pos:column="15">*</type:modifier></type><name pos:line="4320" pos:column="16">stInact</name> <init pos:line="4320" pos:column="24">= <expr><call><name pos:line="4320" pos:column="26">getStyleFromName</name><argument_list pos:line="4320" pos:column="42">(<argument><expr><name pos:line="4320" pos:column="43">TABBAR_INACTIVETEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4321" pos:column="9">if <condition pos:line="4321" pos:column="12">(<expr><name pos:line="4321" pos:column="13">stInact</name> <op:operator pos:line="4321" pos:column="21">&amp;&amp;</op:operator> <name><name pos:line="4321" pos:column="24">stInact</name><op:operator pos:line="4321" pos:column="31">-&gt;</op:operator><name pos:line="4321" pos:column="33">_fgColor</name></name> <op:operator pos:line="4321" pos:column="42">!=</op:operator> <op:operator pos:line="4321" pos:column="45">-</op:operator><lit:literal type="number" pos:line="4321" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="4321" pos:column="48">
		<expr_stmt><expr><call><name><name pos:line="4322" pos:column="17">TabBarPlus</name><op:operator pos:line="4322" pos:column="27">::</op:operator><name pos:line="4322" pos:column="29">setColour</name></name><argument_list pos:line="4322" pos:column="38">(<argument><expr><name><name pos:line="4322" pos:column="39">stInact</name><op:operator pos:line="4322" pos:column="46">-&gt;</op:operator><name pos:line="4322" pos:column="48">_fgColor</name></name></expr></argument>, <argument><expr><name><name pos:line="4322" pos:column="58">TabBarPlus</name><op:operator pos:line="4322" pos:column="68">::</op:operator><name pos:line="4322" pos:column="70">inactiveText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="4323" pos:column="9">if <condition pos:line="4323" pos:column="12">(<expr><name pos:line="4323" pos:column="13">stInact</name> <op:operator pos:line="4323" pos:column="21">&amp;&amp;</op:operator> <name><name pos:line="4323" pos:column="24">stInact</name><op:operator pos:line="4323" pos:column="31">-&gt;</op:operator><name pos:line="4323" pos:column="33">_bgColor</name></name> <op:operator pos:line="4323" pos:column="42">!=</op:operator> <op:operator pos:line="4323" pos:column="45">-</op:operator><lit:literal type="number" pos:line="4323" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="4323" pos:column="48">
		<expr_stmt><expr><call><name><name pos:line="4324" pos:column="17">TabBarPlus</name><op:operator pos:line="4324" pos:column="27">::</op:operator><name pos:line="4324" pos:column="29">setColour</name></name><argument_list pos:line="4324" pos:column="38">(<argument><expr><name><name pos:line="4324" pos:column="39">stInact</name><op:operator pos:line="4324" pos:column="46">-&gt;</op:operator><name pos:line="4324" pos:column="48">_bgColor</name></name></expr></argument>, <argument><expr><name><name pos:line="4324" pos:column="58">TabBarPlus</name><op:operator pos:line="4324" pos:column="68">::</op:operator><name pos:line="4324" pos:column="70">inactiveBg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="4327" pos:column="1">void</name></type> <name><name pos:line="4327" pos:column="6">Notepad_plus</name><op:operator pos:line="4327" pos:column="18">::</op:operator><name pos:line="4327" pos:column="20">notifyBufferChanged</name></name><parameter_list pos:line="4327" pos:column="39">(<param><decl><type><name pos:line="4327" pos:column="40">Buffer</name> <type:modifier pos:line="4327" pos:column="47">*</type:modifier></type> <name pos:line="4327" pos:column="49">buffer</name></decl></param>, <param><decl><type><name pos:line="4327" pos:column="57">int</name></type> <name pos:line="4327" pos:column="61">mask</name></decl></param>)</parameter_list>
<block pos:line="4328" pos:column="1">{
	<comment type="line" pos:line="4329" pos:column="9">// To avoid to crash while MS-DOS style is set as default language,</comment>
	<comment type="line" pos:line="4330" pos:column="9">// Checking the validity of current instance is necessary.</comment>
	<if pos:line="4331" pos:column="9">if <condition pos:line="4331" pos:column="12">(<expr><op:operator pos:line="4331" pos:column="13">!</op:operator><name pos:line="4331" pos:column="14">this</name></expr>)</condition><then pos:line="4331" pos:column="19"> <return pos:line="4331" pos:column="20">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4333" pos:column="9">NppParameters</name> <type:modifier pos:line="4333" pos:column="23">*</type:modifier></type><name pos:line="4333" pos:column="24">pNppParam</name> <init pos:line="4333" pos:column="34">= <expr><call><name><name pos:line="4333" pos:column="36">NppParameters</name><op:operator pos:line="4333" pos:column="49">::</op:operator><name pos:line="4333" pos:column="51">getInstance</name></name><argument_list pos:line="4333" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4334" pos:column="9">const</specifier> <name pos:line="4334" pos:column="15">NppGUI</name> <type:modifier pos:line="4334" pos:column="22">&amp;</type:modifier></type> <name pos:line="4334" pos:column="24">nppGUI</name> <init pos:line="4334" pos:column="31">= <expr><call><name><name pos:line="4334" pos:column="33">pNppParam</name><op:operator pos:line="4334" pos:column="42">-&gt;</op:operator><name pos:line="4334" pos:column="44">getNppGUI</name></name><argument_list pos:line="4334" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="4336" pos:column="9">_mainEditView</name><op:operator pos:line="4336" pos:column="22">.</op:operator><name pos:line="4336" pos:column="23">bufferUpdated</name></name><argument_list pos:line="4336" pos:column="36">(<argument><expr><name pos:line="4336" pos:column="37">buffer</name></expr></argument>, <argument><expr><name pos:line="4336" pos:column="45">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4337" pos:column="9">_subEditView</name><op:operator pos:line="4337" pos:column="21">.</op:operator><name pos:line="4337" pos:column="22">bufferUpdated</name></name><argument_list pos:line="4337" pos:column="35">(<argument><expr><name pos:line="4337" pos:column="36">buffer</name></expr></argument>, <argument><expr><name pos:line="4337" pos:column="44">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4338" pos:column="9">_mainDocTab</name><op:operator pos:line="4338" pos:column="20">.</op:operator><name pos:line="4338" pos:column="21">bufferUpdated</name></name><argument_list pos:line="4338" pos:column="34">(<argument><expr><name pos:line="4338" pos:column="35">buffer</name></expr></argument>, <argument><expr><name pos:line="4338" pos:column="43">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4339" pos:column="9">_subDocTab</name><op:operator pos:line="4339" pos:column="19">.</op:operator><name pos:line="4339" pos:column="20">bufferUpdated</name></name><argument_list pos:line="4339" pos:column="33">(<argument><expr><name pos:line="4339" pos:column="34">buffer</name></expr></argument>, <argument><expr><name pos:line="4339" pos:column="42">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="4341" pos:column="9">bool</name></type> <name pos:line="4341" pos:column="14">mainActive</name> <init pos:line="4341" pos:column="25">= <expr><op:operator pos:line="4341" pos:column="27">(</op:operator><call><name><name pos:line="4341" pos:column="28">_mainEditView</name><op:operator pos:line="4341" pos:column="41">.</op:operator><name pos:line="4341" pos:column="42">getCurrentBuffer</name></name><argument_list pos:line="4341" pos:column="58">()</argument_list></call> <op:operator pos:line="4341" pos:column="61">==</op:operator> <name pos:line="4341" pos:column="64">buffer</name><op:operator pos:line="4341" pos:column="70">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4342" pos:column="9">bool</name></type> <name pos:line="4342" pos:column="14">subActive</name> <init pos:line="4342" pos:column="24">= <expr><op:operator pos:line="4342" pos:column="26">(</op:operator><call><name><name pos:line="4342" pos:column="27">_subEditView</name><op:operator pos:line="4342" pos:column="39">.</op:operator><name pos:line="4342" pos:column="40">getCurrentBuffer</name></name><argument_list pos:line="4342" pos:column="56">()</argument_list></call> <op:operator pos:line="4342" pos:column="59">==</op:operator> <name pos:line="4342" pos:column="62">buffer</name><op:operator pos:line="4342" pos:column="68">)</op:operator></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="4344" pos:column="9">//Only event that applies to non-active Buffers</comment>
	<if pos:line="4345" pos:column="9">if <condition pos:line="4345" pos:column="12">(<expr><name pos:line="4345" pos:column="13">mask</name> <op:operator pos:line="4345" pos:column="18">&amp;</op:operator> <name pos:line="4345" pos:column="20">BufferChangeStatus</name></expr>)</condition><then pos:line="4345" pos:column="39">
	<block pos:line="4346" pos:column="9">{	<comment type="line" pos:line="4346" pos:column="17">//reload etc</comment>
		<decl_stmt><decl><type><name pos:line="4347" pos:column="17">bool</name></type> <name pos:line="4347" pos:column="22">didDialog</name> <init pos:line="4347" pos:column="32">= <expr><lit:literal type="boolean" pos:line="4347" pos:column="34">false</lit:literal></expr></init></decl>;</decl_stmt>
		<switch pos:line="4348" pos:column="17">switch<condition pos:line="4348" pos:column="23">(<expr><call><name><name pos:line="4348" pos:column="24">buffer</name><op:operator pos:line="4348" pos:column="30">-&gt;</op:operator><name pos:line="4348" pos:column="32">getStatus</name></name><argument_list pos:line="4348" pos:column="41">()</argument_list></call></expr>)</condition>
		<block pos:line="4349" pos:column="17">{
			<case pos:line="4350" pos:column="25">case <expr><name pos:line="4350" pos:column="30">DOC_UNNAMED</name></expr>: 	<comment type="line" pos:line="4350" pos:column="49">//nothing todo</comment>
			<block pos:line="4351" pos:column="25">{
				<break pos:line="4352" pos:column="33">break;</break>
			}</block>
			</case><case pos:line="4354" pos:column="25">case <expr><name pos:line="4354" pos:column="30">DOC_REGULAR</name></expr>: 	<comment type="line" pos:line="4354" pos:column="49">//nothing todo</comment>
			<block pos:line="4355" pos:column="25">{
				<break pos:line="4356" pos:column="33">break;</break>
			}</block>
			</case><case pos:line="4358" pos:column="25">case <expr><name pos:line="4358" pos:column="30">DOC_MODIFIED</name></expr>:	<comment type="line" pos:line="4358" pos:column="49">//ask for reloading</comment>
			<block pos:line="4359" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="4360" pos:column="33">bool</name></type> <name pos:line="4360" pos:column="38">autoUpdate</name> <init pos:line="4360" pos:column="49">= <expr><op:operator pos:line="4360" pos:column="51">(</op:operator><name><name pos:line="4360" pos:column="52">nppGUI</name><op:operator pos:line="4360" pos:column="58">.</op:operator><name pos:line="4360" pos:column="59">_fileAutoDetection</name></name> <op:operator pos:line="4360" pos:column="78">==</op:operator> <name pos:line="4360" pos:column="81">cdAutoUpdate</name><op:operator pos:line="4360" pos:column="93">)</op:operator> <op:operator pos:line="4360" pos:column="95">||</op:operator> <op:operator pos:line="4360" pos:column="98">(</op:operator><name><name pos:line="4360" pos:column="99">nppGUI</name><op:operator pos:line="4360" pos:column="105">.</op:operator><name pos:line="4360" pos:column="106">_fileAutoDetection</name></name> <op:operator pos:line="4360" pos:column="125">==</op:operator> <name pos:line="4360" pos:column="128">cdAutoUpdateGo2end</name><op:operator pos:line="4360" pos:column="146">)</op:operator></expr></init></decl>;</decl_stmt>
				<if pos:line="4361" pos:column="33">if <condition pos:line="4361" pos:column="36">(<expr><op:operator pos:line="4361" pos:column="37">!</op:operator><name pos:line="4361" pos:column="38">autoUpdate</name> <op:operator pos:line="4361" pos:column="49">||</op:operator> <call><name><name pos:line="4361" pos:column="52">buffer</name><op:operator pos:line="4361" pos:column="58">-&gt;</op:operator><name pos:line="4361" pos:column="60">isDirty</name></name><argument_list pos:line="4361" pos:column="67">()</argument_list></call></expr>)</condition><then pos:line="4361" pos:column="70">
				<block pos:line="4362" pos:column="33">{
                    <comment type="line" pos:line="4363" pos:column="21">// if file updating is not silently, we switch to the file to update.</comment>
                    <decl_stmt><decl><type><name pos:line="4364" pos:column="21">int</name></type> <name pos:line="4364" pos:column="25">index</name> <init pos:line="4364" pos:column="31">= <expr><call><name><name pos:line="4364" pos:column="33">_pDocTab</name><op:operator pos:line="4364" pos:column="41">-&gt;</op:operator><name pos:line="4364" pos:column="43">getIndexByBuffer</name></name><argument_list pos:line="4364" pos:column="59">(<argument><expr><call><name><name pos:line="4364" pos:column="60">buffer</name><op:operator pos:line="4364" pos:column="66">-&gt;</op:operator><name pos:line="4364" pos:column="68">getID</name></name><argument_list pos:line="4364" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				    <decl_stmt><decl><type><name pos:line="4365" pos:column="37">int</name></type> <name pos:line="4365" pos:column="41">iView</name> <init pos:line="4365" pos:column="47">= <expr><call><name pos:line="4365" pos:column="49">currentView</name><argument_list pos:line="4365" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
				    <if pos:line="4366" pos:column="37">if <condition pos:line="4366" pos:column="40">(<expr><name pos:line="4366" pos:column="41">index</name> <op:operator pos:line="4366" pos:column="47">==</op:operator> <op:operator pos:line="4366" pos:column="50">-</op:operator><lit:literal type="number" pos:line="4366" pos:column="51">1</lit:literal></expr>)</condition><then pos:line="4366" pos:column="53">
					    <expr_stmt><expr><name pos:line="4367" pos:column="45">iView</name> <op:operator pos:line="4367" pos:column="51">=</op:operator> <call><name pos:line="4367" pos:column="53">otherView</name><argument_list pos:line="4367" pos:column="62">()</argument_list></call></expr>;</expr_stmt></then></if>
				    <expr_stmt><expr><call><name pos:line="4368" pos:column="37">activateBuffer</name><argument_list pos:line="4368" pos:column="51">(<argument><expr><call><name><name pos:line="4368" pos:column="52">buffer</name><op:operator pos:line="4368" pos:column="58">-&gt;</op:operator><name pos:line="4368" pos:column="60">getID</name></name><argument_list pos:line="4368" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4368" pos:column="69">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4368" pos:column="81">//activate the buffer in the first view possible</comment>

                    <comment type="line" pos:line="4370" pos:column="21">// Then we ask user to update</comment>
					<expr_stmt><expr><name pos:line="4371" pos:column="41">didDialog</name> <op:operator pos:line="4371" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="4371" pos:column="53">true</lit:literal></expr>;</expr_stmt>
					<if pos:line="4372" pos:column="41">if <condition pos:line="4372" pos:column="44">(<expr><call><name pos:line="4372" pos:column="45">doReloadOrNot</name><argument_list pos:line="4372" pos:column="58">(<argument><expr><call><name><name pos:line="4372" pos:column="59">buffer</name><op:operator pos:line="4372" pos:column="65">-&gt;</op:operator><name pos:line="4372" pos:column="67">getFullPathName</name></name><argument_list pos:line="4372" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4372" pos:column="86">buffer</name><op:operator pos:line="4372" pos:column="92">-&gt;</op:operator><name pos:line="4372" pos:column="94">isDirty</name></name><argument_list pos:line="4372" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4372" pos:column="105">!=</op:operator> <name pos:line="4372" pos:column="108">IDYES</name></expr>)</condition><then pos:line="4372" pos:column="114">
						<break pos:line="4373" pos:column="49">break;</break></then></if>	<comment type="line" pos:line="4373" pos:column="57">//abort</comment>
				}</block></then></if>

				<expr_stmt><expr><call><name pos:line="4376" pos:column="33">doReload</name><argument_list pos:line="4376" pos:column="41">(<argument><expr><call><name><name pos:line="4376" pos:column="42">buffer</name><op:operator pos:line="4376" pos:column="48">-&gt;</op:operator><name pos:line="4376" pos:column="50">getID</name></name><argument_list pos:line="4376" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4376" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="4377" pos:column="33">if <condition pos:line="4377" pos:column="36">(<expr><name pos:line="4377" pos:column="37">mainActive</name> <op:operator pos:line="4377" pos:column="48">||</op:operator> <name pos:line="4377" pos:column="51">subActive</name></expr>)</condition><then pos:line="4377" pos:column="61">
				<block pos:line="4378" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="4379" pos:column="41">performPostReload</name><argument_list pos:line="4379" pos:column="58">(<argument><expr><name pos:line="4379" pos:column="59">mainActive</name><op:operator pos:line="4379" pos:column="69">?</op:operator><name pos:line="4379" pos:column="70">MAIN_VIEW</name><op:operator pos:line="4379" pos:column="79">:</op:operator><name pos:line="4379" pos:column="80">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<break pos:line="4381" pos:column="33">break;</break>
			}</block>
			</case><case pos:line="4383" pos:column="25">case <expr><name pos:line="4383" pos:column="30">DOC_DELETED</name></expr>: 	<comment type="line" pos:line="4383" pos:column="49">//ask for keep</comment>
			<block pos:line="4384" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="4385" pos:column="33">int</name></type> <name pos:line="4385" pos:column="37">index</name> <init pos:line="4385" pos:column="43">= <expr><call><name><name pos:line="4385" pos:column="45">_pDocTab</name><op:operator pos:line="4385" pos:column="53">-&gt;</op:operator><name pos:line="4385" pos:column="55">getIndexByBuffer</name></name><argument_list pos:line="4385" pos:column="71">(<argument><expr><call><name><name pos:line="4385" pos:column="72">buffer</name><op:operator pos:line="4385" pos:column="78">-&gt;</op:operator><name pos:line="4385" pos:column="80">getID</name></name><argument_list pos:line="4385" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="4386" pos:column="33">int</name></type> <name pos:line="4386" pos:column="37">iView</name> <init pos:line="4386" pos:column="43">= <expr><call><name pos:line="4386" pos:column="45">currentView</name><argument_list pos:line="4386" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="4387" pos:column="33">if <condition pos:line="4387" pos:column="36">(<expr><name pos:line="4387" pos:column="37">index</name> <op:operator pos:line="4387" pos:column="43">==</op:operator> <op:operator pos:line="4387" pos:column="46">-</op:operator><lit:literal type="number" pos:line="4387" pos:column="47">1</lit:literal></expr>)</condition><then pos:line="4387" pos:column="49">
					<expr_stmt><expr><name pos:line="4388" pos:column="41">iView</name> <op:operator pos:line="4388" pos:column="47">=</op:operator> <call><name pos:line="4388" pos:column="49">otherView</name><argument_list pos:line="4388" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>

				<expr_stmt><expr><call><name pos:line="4390" pos:column="33">activateBuffer</name><argument_list pos:line="4390" pos:column="47">(<argument><expr><call><name><name pos:line="4390" pos:column="48">buffer</name><op:operator pos:line="4390" pos:column="54">-&gt;</op:operator><name pos:line="4390" pos:column="56">getID</name></name><argument_list pos:line="4390" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4390" pos:column="65">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4390" pos:column="73">//activate the buffer in the first view possible</comment>
				<expr_stmt><expr><name pos:line="4391" pos:column="33">didDialog</name> <op:operator pos:line="4391" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="4391" pos:column="45">true</lit:literal></expr>;</expr_stmt>
				<if pos:line="4392" pos:column="33">if <condition pos:line="4392" pos:column="36">(<expr><call><name pos:line="4392" pos:column="37">doCloseOrNot</name><argument_list pos:line="4392" pos:column="49">(<argument><expr><call><name><name pos:line="4392" pos:column="50">buffer</name><op:operator pos:line="4392" pos:column="56">-&gt;</op:operator><name pos:line="4392" pos:column="58">getFullPathName</name></name><argument_list pos:line="4392" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4392" pos:column="77">==</op:operator> <name pos:line="4392" pos:column="80">IDNO</name></expr>)</condition><then pos:line="4392" pos:column="85">
				<block pos:line="4393" pos:column="33">{
					<comment type="line" pos:line="4394" pos:column="41">//close in both views, doing current view last since that has to remain opened</comment>
					<expr_stmt><expr><call><name pos:line="4395" pos:column="41">doClose</name><argument_list pos:line="4395" pos:column="48">(<argument><expr><call><name><name pos:line="4395" pos:column="49">buffer</name><op:operator pos:line="4395" pos:column="55">-&gt;</op:operator><name pos:line="4395" pos:column="57">getID</name></name><argument_list pos:line="4395" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4395" pos:column="66">otherView</name><argument_list pos:line="4395" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="4396" pos:column="41">doClose</name><argument_list pos:line="4396" pos:column="48">(<argument><expr><call><name><name pos:line="4396" pos:column="49">buffer</name><op:operator pos:line="4396" pos:column="55">-&gt;</op:operator><name pos:line="4396" pos:column="57">getID</name></name><argument_list pos:line="4396" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4396" pos:column="66">currentView</name><argument_list pos:line="4396" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<break pos:line="4398" pos:column="33">break;</break>
			}</block>
		</case>}</block></switch>

		<if pos:line="4402" pos:column="17">if <condition pos:line="4402" pos:column="20">(<expr><name pos:line="4402" pos:column="21">didDialog</name></expr>)</condition><then pos:line="4402" pos:column="31">
		<block pos:line="4403" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4404" pos:column="25">int</name></type> <name pos:line="4404" pos:column="29">curPos</name> <init pos:line="4404" pos:column="36">= <expr><call><name><name pos:line="4404" pos:column="38">_pEditView</name><op:operator pos:line="4404" pos:column="48">-&gt;</op:operator><name pos:line="4404" pos:column="50">execute</name></name><argument_list pos:line="4404" pos:column="57">(<argument><expr><name pos:line="4404" pos:column="58">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="4405" pos:column="25">::</op:operator><name pos:line="4405" pos:column="27">PostMessage</name></name><argument_list pos:line="4405" pos:column="38">(<argument><expr><call><name><name pos:line="4405" pos:column="39">_pEditView</name><op:operator pos:line="4405" pos:column="49">-&gt;</op:operator><name pos:line="4405" pos:column="51">getHSelf</name></name><argument_list pos:line="4405" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4405" pos:column="63">WM_LBUTTONUP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4405" pos:column="77">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4405" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="4406" pos:column="25">::</op:operator><name pos:line="4406" pos:column="27">PostMessage</name></name><argument_list pos:line="4406" pos:column="38">(<argument><expr><call><name><name pos:line="4406" pos:column="39">_pEditView</name><op:operator pos:line="4406" pos:column="49">-&gt;</op:operator><name pos:line="4406" pos:column="51">getHSelf</name></name><argument_list pos:line="4406" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4406" pos:column="63">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="4406" pos:column="75">curPos</name></expr></argument>, <argument><expr><name pos:line="4406" pos:column="83">curPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="4407" pos:column="25">if <condition pos:line="4407" pos:column="28">(<expr><call><name><op:operator pos:line="4407" pos:column="29">::</op:operator><name pos:line="4407" pos:column="31">IsIconic</name></name><argument_list pos:line="4407" pos:column="39">(<argument><expr><call><name><name pos:line="4407" pos:column="40">_pPublicInterface</name><op:operator pos:line="4407" pos:column="57">-&gt;</op:operator><name pos:line="4407" pos:column="59">getHSelf</name></name><argument_list pos:line="4407" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4407" pos:column="71">
				<expr_stmt><expr><call><name><op:operator pos:line="4408" pos:column="33">::</op:operator><name pos:line="4408" pos:column="35">ShowWindow</name></name><argument_list pos:line="4408" pos:column="45">(<argument><expr><call><name><name pos:line="4408" pos:column="46">_pPublicInterface</name><op:operator pos:line="4408" pos:column="63">-&gt;</op:operator><name pos:line="4408" pos:column="65">getHSelf</name></name><argument_list pos:line="4408" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4408" pos:column="77">SW_RESTORE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></then></if>

    <if pos:line="4412" pos:column="5">if <condition pos:line="4412" pos:column="8">(<expr><name pos:line="4412" pos:column="9">mask</name> <op:operator pos:line="4412" pos:column="14">&amp;</op:operator> <op:operator pos:line="4412" pos:column="16">(</op:operator><name pos:line="4412" pos:column="17">BufferChangeReadonly</name><op:operator pos:line="4412" pos:column="37">)</op:operator></expr>)</condition><then pos:line="4412" pos:column="39">
	<block pos:line="4413" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4414" pos:column="17">checkDocState</name><argument_list pos:line="4414" pos:column="30">()</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4416" pos:column="17">bool</name></type> <name pos:line="4416" pos:column="22">isSysReadOnly</name> <init pos:line="4416" pos:column="36">= <expr><call><name><name pos:line="4416" pos:column="38">buffer</name><op:operator pos:line="4416" pos:column="44">-&gt;</op:operator><name pos:line="4416" pos:column="46">getFileReadOnly</name></name><argument_list pos:line="4416" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4417" pos:column="17">bool</name></type> <name pos:line="4417" pos:column="22">isUserReadOnly</name> <init pos:line="4417" pos:column="37">= <expr><call><name><name pos:line="4417" pos:column="39">buffer</name><op:operator pos:line="4417" pos:column="45">-&gt;</op:operator><name pos:line="4417" pos:column="47">getUserReadOnly</name></name><argument_list pos:line="4417" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4418" pos:column="17">bool</name></type> <name pos:line="4418" pos:column="22">isDirty</name> <init pos:line="4418" pos:column="30">= <expr><call><name><name pos:line="4418" pos:column="32">buffer</name><op:operator pos:line="4418" pos:column="38">-&gt;</op:operator><name pos:line="4418" pos:column="40">isDirty</name></name><argument_list pos:line="4418" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="4420" pos:column="17">// To notify plugins ro status is changed</comment>
		<decl_stmt><decl><type><name pos:line="4421" pos:column="17">SCNotification</name></type> <name pos:line="4421" pos:column="32">scnN</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="4422" pos:column="17">scnN</name><op:operator pos:line="4422" pos:column="21">.</op:operator><name pos:line="4422" pos:column="22">nmhdr</name><op:operator pos:line="4422" pos:column="27">.</op:operator><name pos:line="4422" pos:column="28">hwndFrom</name></name> <op:operator pos:line="4422" pos:column="37">=</op:operator> <op:operator pos:line="4422" pos:column="39">(</op:operator><name pos:line="4422" pos:column="40">void</name> <op:operator pos:line="4422" pos:column="45">*</op:operator><op:operator pos:line="4422" pos:column="46">)</op:operator><call><name><name pos:line="4422" pos:column="47">buffer</name><op:operator pos:line="4422" pos:column="53">-&gt;</op:operator><name pos:line="4422" pos:column="55">getID</name></name><argument_list pos:line="4422" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4423" pos:column="17">scnN</name><op:operator pos:line="4423" pos:column="21">.</op:operator><name pos:line="4423" pos:column="22">nmhdr</name><op:operator pos:line="4423" pos:column="27">.</op:operator><name pos:line="4423" pos:column="28">idFrom</name></name> <op:operator pos:line="4423" pos:column="35">=</op:operator> <call pos:line="4423" pos:column="37">(<name pos:line="4423" pos:column="38">uptr_t</name>)  <argument_list pos:line="4423" pos:column="47">(<argument><expr><op:operator pos:line="4423" pos:column="48">(</op:operator><name pos:line="4423" pos:column="49">isSysReadOnly</name> <op:operator pos:line="4423" pos:column="63">||</op:operator> <name pos:line="4423" pos:column="66">isUserReadOnly</name><op:operator pos:line="4423" pos:column="80">?</op:operator> <name pos:line="4423" pos:column="82">DOCSTAUS_READONLY</name> <op:operator pos:line="4423" pos:column="100">:</op:operator> <lit:literal type="number" pos:line="4423" pos:column="102">0</lit:literal><op:operator pos:line="4423" pos:column="103">)</op:operator> <op:operator pos:line="4423" pos:column="105">|</op:operator> <op:operator pos:line="4423" pos:column="107">(</op:operator><name pos:line="4423" pos:column="108">isDirty</name> <op:operator pos:line="4423" pos:column="116">?</op:operator> <name pos:line="4423" pos:column="118">DOCSTAUS_BUFFERDIRTY</name> <op:operator pos:line="4423" pos:column="139">:</op:operator> <lit:literal type="number" pos:line="4423" pos:column="141">0</lit:literal><op:operator pos:line="4423" pos:column="142">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4424" pos:column="17">scnN</name><op:operator pos:line="4424" pos:column="21">.</op:operator><name pos:line="4424" pos:column="22">nmhdr</name><op:operator pos:line="4424" pos:column="27">.</op:operator><name pos:line="4424" pos:column="28">code</name></name> <op:operator pos:line="4424" pos:column="33">=</op:operator> <name pos:line="4424" pos:column="35">NPPN_READONLYCHANGED</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4425" pos:column="17">_pluginsManager</name><op:operator pos:line="4425" pos:column="32">.</op:operator><name pos:line="4425" pos:column="33">notify</name></name><argument_list pos:line="4425" pos:column="39">(<argument><expr><op:operator pos:line="4425" pos:column="40">&amp;</op:operator><name pos:line="4425" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then></if>

	<if pos:line="4429" pos:column="9">if <condition pos:line="4429" pos:column="12">(<expr><name pos:line="4429" pos:column="13">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="4429" pos:column="33">
		<expr_stmt><expr><call><name><name pos:line="4430" pos:column="17">_pFileSwitcherPanel</name><op:operator pos:line="4430" pos:column="36">-&gt;</op:operator><name pos:line="4430" pos:column="38">setItemIconStatus</name></name><argument_list pos:line="4430" pos:column="55">(<argument><expr><op:operator pos:line="4430" pos:column="56">(</op:operator><name pos:line="4430" pos:column="57">int</name><op:operator pos:line="4430" pos:column="60">)</op:operator><name pos:line="4430" pos:column="61">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="4432" pos:column="9">if <condition pos:line="4432" pos:column="12">(<expr><op:operator pos:line="4432" pos:column="13">!</op:operator><name pos:line="4432" pos:column="14">mainActive</name> <op:operator pos:line="4432" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="4432" pos:column="28">!</op:operator><name pos:line="4432" pos:column="29">subActive</name></expr>)</condition><then pos:line="4432" pos:column="39">
	<block pos:line="4433" pos:column="9">{
		<return pos:line="4434" pos:column="17">return;</return>
	}</block></then></if>

	<if pos:line="4437" pos:column="9">if <condition pos:line="4437" pos:column="12">(<expr><name pos:line="4437" pos:column="13">mask</name> <op:operator pos:line="4437" pos:column="18">&amp;</op:operator> <op:operator pos:line="4437" pos:column="20">(</op:operator><name pos:line="4437" pos:column="21">BufferChangeLanguage</name><op:operator pos:line="4437" pos:column="41">)</op:operator></expr>)</condition><then pos:line="4437" pos:column="43">
	<block pos:line="4438" pos:column="9">{
		<if pos:line="4439" pos:column="17">if <condition pos:line="4439" pos:column="20">(<expr><name pos:line="4439" pos:column="21">mainActive</name></expr>)</condition><then pos:line="4439" pos:column="32">
			<expr_stmt><expr><call><name><name pos:line="4440" pos:column="25">_autoCompleteMain</name><op:operator pos:line="4440" pos:column="42">.</op:operator><name pos:line="4440" pos:column="43">setLanguage</name></name><argument_list pos:line="4440" pos:column="54">(<argument><expr><call><name><name pos:line="4440" pos:column="55">buffer</name><op:operator pos:line="4440" pos:column="61">-&gt;</op:operator><name pos:line="4440" pos:column="63">getLangType</name></name><argument_list pos:line="4440" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="4441" pos:column="17">if <condition pos:line="4441" pos:column="20">(<expr><name pos:line="4441" pos:column="21">subActive</name></expr>)</condition><then pos:line="4441" pos:column="31">
			<expr_stmt><expr><call><name><name pos:line="4442" pos:column="25">_autoCompleteSub</name><op:operator pos:line="4442" pos:column="41">.</op:operator><name pos:line="4442" pos:column="42">setLanguage</name></name><argument_list pos:line="4442" pos:column="53">(<argument><expr><call><name><name pos:line="4442" pos:column="54">buffer</name><op:operator pos:line="4442" pos:column="60">-&gt;</op:operator><name pos:line="4442" pos:column="62">getLangType</name></name><argument_list pos:line="4442" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<if pos:line="4445" pos:column="9">if <condition pos:line="4445" pos:column="12">(<expr><op:operator pos:line="4445" pos:column="13">(</op:operator><call><name pos:line="4445" pos:column="14">currentView</name><argument_list pos:line="4445" pos:column="25">()</argument_list></call> <op:operator pos:line="4445" pos:column="28">==</op:operator> <name pos:line="4445" pos:column="31">MAIN_VIEW</name><op:operator pos:line="4445" pos:column="40">)</op:operator> <op:operator pos:line="4445" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="4445" pos:column="45">!</op:operator><name pos:line="4445" pos:column="46">mainActive</name></expr>)</condition><then pos:line="4445" pos:column="57">
		<return pos:line="4446" pos:column="17">return;</return></then></if>

	<if pos:line="4448" pos:column="9">if <condition pos:line="4448" pos:column="12">(<expr><op:operator pos:line="4448" pos:column="13">(</op:operator><call><name pos:line="4448" pos:column="14">currentView</name><argument_list pos:line="4448" pos:column="25">()</argument_list></call> <op:operator pos:line="4448" pos:column="28">==</op:operator> <name pos:line="4448" pos:column="31">SUB_VIEW</name><op:operator pos:line="4448" pos:column="39">)</op:operator> <op:operator pos:line="4448" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="4448" pos:column="44">!</op:operator><name pos:line="4448" pos:column="45">subActive</name></expr>)</condition><then pos:line="4448" pos:column="55">
		<return pos:line="4449" pos:column="17">return;</return></then></if>

	<if pos:line="4451" pos:column="9">if <condition pos:line="4451" pos:column="12">(<expr><name pos:line="4451" pos:column="13">mask</name> <op:operator pos:line="4451" pos:column="18">&amp;</op:operator> <op:operator pos:line="4451" pos:column="20">(</op:operator><name pos:line="4451" pos:column="21">BufferChangeDirty</name><op:operator pos:line="4451" pos:column="38">|</op:operator><name pos:line="4451" pos:column="39">BufferChangeFilename</name><op:operator pos:line="4451" pos:column="59">)</op:operator></expr>)</condition><then pos:line="4451" pos:column="61">
	<block pos:line="4452" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4453" pos:column="17">checkDocState</name><argument_list pos:line="4453" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4454" pos:column="17">setTitle</name><argument_list pos:line="4454" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="4455" pos:column="17">generic_string</name></type> <name pos:line="4455" pos:column="32">dir</name><argument_list pos:line="4455" pos:column="35">(<argument><expr><call><name><name pos:line="4455" pos:column="36">buffer</name><op:operator pos:line="4455" pos:column="42">-&gt;</op:operator><name pos:line="4455" pos:column="44">getFullPathName</name></name><argument_list pos:line="4455" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="4456" pos:column="17">PathRemoveFileSpec</name><argument_list pos:line="4456" pos:column="35">(<argument><expr><name pos:line="4456" pos:column="36">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4457" pos:column="17">setWorkingDir</name><argument_list pos:line="4457" pos:column="30">(<argument><expr><call><name><name pos:line="4457" pos:column="31">dir</name><op:operator pos:line="4457" pos:column="34">.</op:operator><name pos:line="4457" pos:column="35">c_str</name></name><argument_list pos:line="4457" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4460" pos:column="9">if <condition pos:line="4460" pos:column="12">(<expr><name pos:line="4460" pos:column="13">mask</name> <op:operator pos:line="4460" pos:column="18">&amp;</op:operator> <op:operator pos:line="4460" pos:column="20">(</op:operator><name pos:line="4460" pos:column="21">BufferChangeLanguage</name><op:operator pos:line="4460" pos:column="41">)</op:operator></expr>)</condition><then pos:line="4460" pos:column="43">
	<block pos:line="4461" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4462" pos:column="17">checkLangsMenu</name><argument_list pos:line="4462" pos:column="31">(<argument><expr><op:operator pos:line="4462" pos:column="32">-</op:operator><lit:literal type="number" pos:line="4462" pos:column="33">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4462" pos:column="41">//let N++ do search for the item</comment>
		<expr_stmt><expr><call><name pos:line="4463" pos:column="17">setLangStatus</name><argument_list pos:line="4463" pos:column="30">(<argument><expr><call><name><name pos:line="4463" pos:column="31">buffer</name><op:operator pos:line="4463" pos:column="37">-&gt;</op:operator><name pos:line="4463" pos:column="39">getLangType</name></name><argument_list pos:line="4463" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="4464" pos:column="17">if <condition pos:line="4464" pos:column="20">(<expr><call><name><name pos:line="4464" pos:column="21">_mainEditView</name><op:operator pos:line="4464" pos:column="34">.</op:operator><name pos:line="4464" pos:column="35">getCurrentBuffer</name></name><argument_list pos:line="4464" pos:column="51">()</argument_list></call> <op:operator pos:line="4464" pos:column="54">==</op:operator> <name pos:line="4464" pos:column="57">buffer</name></expr>)</condition><then pos:line="4464" pos:column="64">
			<expr_stmt><expr><call><name><name pos:line="4465" pos:column="25">_autoCompleteMain</name><op:operator pos:line="4465" pos:column="42">.</op:operator><name pos:line="4465" pos:column="43">setLanguage</name></name><argument_list pos:line="4465" pos:column="54">(<argument><expr><call><name><name pos:line="4465" pos:column="55">buffer</name><op:operator pos:line="4465" pos:column="61">-&gt;</op:operator><name pos:line="4465" pos:column="63">getLangType</name></name><argument_list pos:line="4465" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="4466" pos:column="17">else <if pos:line="4466" pos:column="22">if <condition pos:line="4466" pos:column="25">(<expr><call><name><name pos:line="4466" pos:column="26">_subEditView</name><op:operator pos:line="4466" pos:column="38">.</op:operator><name pos:line="4466" pos:column="39">getCurrentBuffer</name></name><argument_list pos:line="4466" pos:column="55">()</argument_list></call> <op:operator pos:line="4466" pos:column="58">==</op:operator> <name pos:line="4466" pos:column="61">buffer</name></expr>)</condition><then pos:line="4466" pos:column="68">
			<expr_stmt><expr><call><name><name pos:line="4467" pos:column="25">_autoCompleteSub</name><op:operator pos:line="4467" pos:column="41">.</op:operator><name pos:line="4467" pos:column="42">setLanguage</name></name><argument_list pos:line="4467" pos:column="53">(<argument><expr><call><name><name pos:line="4467" pos:column="54">buffer</name><op:operator pos:line="4467" pos:column="60">-&gt;</op:operator><name pos:line="4467" pos:column="62">getLangType</name></name><argument_list pos:line="4467" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>

		<decl_stmt><decl><type><name pos:line="4469" pos:column="17">SCNotification</name></type> <name pos:line="4469" pos:column="32">scnN</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="4470" pos:column="17">scnN</name><op:operator pos:line="4470" pos:column="21">.</op:operator><name pos:line="4470" pos:column="22">nmhdr</name><op:operator pos:line="4470" pos:column="27">.</op:operator><name pos:line="4470" pos:column="28">code</name></name> <op:operator pos:line="4470" pos:column="33">=</op:operator> <name pos:line="4470" pos:column="35">NPPN_LANGCHANGED</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4471" pos:column="17">scnN</name><op:operator pos:line="4471" pos:column="21">.</op:operator><name pos:line="4471" pos:column="22">nmhdr</name><op:operator pos:line="4471" pos:column="27">.</op:operator><name pos:line="4471" pos:column="28">hwndFrom</name></name> <op:operator pos:line="4471" pos:column="37">=</op:operator> <call><name><name pos:line="4471" pos:column="39">_pPublicInterface</name><op:operator pos:line="4471" pos:column="56">-&gt;</op:operator><name pos:line="4471" pos:column="58">getHSelf</name></name><argument_list pos:line="4471" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4472" pos:column="17">scnN</name><op:operator pos:line="4472" pos:column="21">.</op:operator><name pos:line="4472" pos:column="22">nmhdr</name><op:operator pos:line="4472" pos:column="27">.</op:operator><name pos:line="4472" pos:column="28">idFrom</name></name> <op:operator pos:line="4472" pos:column="35">=</op:operator> <op:operator pos:line="4472" pos:column="37">(</op:operator><name pos:line="4472" pos:column="38">uptr_t</name><op:operator pos:line="4472" pos:column="44">)</op:operator><call><name><name pos:line="4472" pos:column="45">_pEditView</name><op:operator pos:line="4472" pos:column="55">-&gt;</op:operator><name pos:line="4472" pos:column="57">getCurrentBufferID</name></name><argument_list pos:line="4472" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4473" pos:column="17">_pluginsManager</name><op:operator pos:line="4473" pos:column="32">.</op:operator><name pos:line="4473" pos:column="33">notify</name></name><argument_list pos:line="4473" pos:column="39">(<argument><expr><op:operator pos:line="4473" pos:column="40">&amp;</op:operator><name pos:line="4473" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4476" pos:column="9">if <condition pos:line="4476" pos:column="12">(<expr><name pos:line="4476" pos:column="13">mask</name> <op:operator pos:line="4476" pos:column="18">&amp;</op:operator> <op:operator pos:line="4476" pos:column="20">(</op:operator><name pos:line="4476" pos:column="21">BufferChangeFormat</name><op:operator pos:line="4476" pos:column="39">|</op:operator><name pos:line="4476" pos:column="40">BufferChangeLanguage</name><op:operator pos:line="4476" pos:column="60">|</op:operator><name pos:line="4476" pos:column="61">BufferChangeUnicode</name><op:operator pos:line="4476" pos:column="80">)</op:operator></expr>)</condition><then pos:line="4476" pos:column="82">
	<block pos:line="4477" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4478" pos:column="17">updateStatusBar</name><argument_list pos:line="4478" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4479" pos:column="17">checkUnicodeMenuItems</name><argument_list pos:line="4479" pos:column="38">(<comment type="block" pos:line="4479" pos:column="39">/*buffer-&gt;getUnicodeMode()*/</comment>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4480" pos:column="17">setUniModeText</name><argument_list pos:line="4480" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4481" pos:column="17">setDisplayFormat</name><argument_list pos:line="4481" pos:column="33">(<argument><expr><call><name><name pos:line="4481" pos:column="34">buffer</name><op:operator pos:line="4481" pos:column="40">-&gt;</op:operator><name pos:line="4481" pos:column="42">getFormat</name></name><argument_list pos:line="4481" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4482" pos:column="17">enableConvertMenuItems</name><argument_list pos:line="4482" pos:column="39">(<argument><expr><call><name><name pos:line="4482" pos:column="40">buffer</name><op:operator pos:line="4482" pos:column="46">-&gt;</op:operator><name pos:line="4482" pos:column="48">getFormat</name></name><argument_list pos:line="4482" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4486" pos:column="1">void</name></type> <name><name pos:line="4486" pos:column="6">Notepad_plus</name><op:operator pos:line="4486" pos:column="18">::</op:operator><name pos:line="4486" pos:column="20">notifyBufferActivated</name></name><parameter_list pos:line="4486" pos:column="41">(<param><decl><type><name pos:line="4486" pos:column="42">BufferID</name></type> <name pos:line="4486" pos:column="51">bufid</name></decl></param>, <param><decl><type><name pos:line="4486" pos:column="58">int</name></type> <name pos:line="4486" pos:column="62">view</name></decl></param>)</parameter_list>
<block pos:line="4487" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4488" pos:column="9">Buffer</name> <type:modifier pos:line="4488" pos:column="16">*</type:modifier></type> <name pos:line="4488" pos:column="18">buf</name> <init pos:line="4488" pos:column="22">= <expr><call><name><name pos:line="4488" pos:column="24">MainFileManager</name><op:operator pos:line="4488" pos:column="39">-&gt;</op:operator><name pos:line="4488" pos:column="41">getBufferByID</name></name><argument_list pos:line="4488" pos:column="54">(<argument><expr><name pos:line="4488" pos:column="55">bufid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4489" pos:column="9">buf</name><op:operator pos:line="4489" pos:column="12">-&gt;</op:operator><name pos:line="4489" pos:column="14">increaseRecentTag</name></name><argument_list pos:line="4489" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="4491" pos:column="9">if <condition pos:line="4491" pos:column="12">(<expr><name pos:line="4491" pos:column="13">view</name> <op:operator pos:line="4491" pos:column="18">==</op:operator> <name pos:line="4491" pos:column="21">MAIN_VIEW</name></expr>)</condition><then pos:line="4491" pos:column="31">
	<block pos:line="4492" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4493" pos:column="17">_autoCompleteMain</name><op:operator pos:line="4493" pos:column="34">.</op:operator><name pos:line="4493" pos:column="35">setLanguage</name></name><argument_list pos:line="4493" pos:column="46">(<argument><expr><call><name><name pos:line="4493" pos:column="47">buf</name><op:operator pos:line="4493" pos:column="50">-&gt;</op:operator><name pos:line="4493" pos:column="52">getLangType</name></name><argument_list pos:line="4493" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="4495" pos:column="9">else <if pos:line="4495" pos:column="14">if <condition pos:line="4495" pos:column="17">(<expr><name pos:line="4495" pos:column="18">view</name> <op:operator pos:line="4495" pos:column="23">==</op:operator> <name pos:line="4495" pos:column="26">SUB_VIEW</name></expr>)</condition><then pos:line="4495" pos:column="35">
	<block pos:line="4496" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4497" pos:column="17">_autoCompleteSub</name><op:operator pos:line="4497" pos:column="33">.</op:operator><name pos:line="4497" pos:column="34">setLanguage</name></name><argument_list pos:line="4497" pos:column="45">(<argument><expr><call><name><name pos:line="4497" pos:column="46">buf</name><op:operator pos:line="4497" pos:column="49">-&gt;</op:operator><name pos:line="4497" pos:column="51">getLangType</name></name><argument_list pos:line="4497" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>

	<if pos:line="4500" pos:column="9">if <condition pos:line="4500" pos:column="12">(<expr><name pos:line="4500" pos:column="13">view</name> <op:operator pos:line="4500" pos:column="18">!=</op:operator> <call><name pos:line="4500" pos:column="21">currentView</name><argument_list pos:line="4500" pos:column="32">()</argument_list></call></expr>)</condition><then pos:line="4500" pos:column="35">
		<return pos:line="4501" pos:column="17">return;</return></then></if>	<comment type="line" pos:line="4501" pos:column="25">//dont care if another view did something</comment>


	<expr_stmt><expr><call><name pos:line="4504" pos:column="9">checkDocState</name><argument_list pos:line="4504" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4505" pos:column="9">dynamicCheckMenuAndTB</name><argument_list pos:line="4505" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4506" pos:column="9">setLangStatus</name><argument_list pos:line="4506" pos:column="22">(<argument><expr><call><name><name pos:line="4506" pos:column="23">buf</name><op:operator pos:line="4506" pos:column="26">-&gt;</op:operator><name pos:line="4506" pos:column="28">getLangType</name></name><argument_list pos:line="4506" pos:column="39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4507" pos:column="9">updateStatusBar</name><argument_list pos:line="4507" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4508" pos:column="9">checkUnicodeMenuItems</name><argument_list pos:line="4508" pos:column="30">(<comment type="block" pos:line="4508" pos:column="31">/*buf-&gt;getUnicodeMode()*/</comment>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4509" pos:column="9">setUniModeText</name><argument_list pos:line="4509" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4510" pos:column="9">setDisplayFormat</name><argument_list pos:line="4510" pos:column="25">(<argument><expr><call><name><name pos:line="4510" pos:column="26">buf</name><op:operator pos:line="4510" pos:column="29">-&gt;</op:operator><name pos:line="4510" pos:column="31">getFormat</name></name><argument_list pos:line="4510" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4511" pos:column="9">enableConvertMenuItems</name><argument_list pos:line="4511" pos:column="31">(<argument><expr><call><name><name pos:line="4511" pos:column="32">buf</name><op:operator pos:line="4511" pos:column="35">-&gt;</op:operator><name pos:line="4511" pos:column="37">getFormat</name></name><argument_list pos:line="4511" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="4512" pos:column="9">generic_string</name></type> <name pos:line="4512" pos:column="24">dir</name><argument_list pos:line="4512" pos:column="27">(<argument><expr><call><name><name pos:line="4512" pos:column="28">buf</name><op:operator pos:line="4512" pos:column="31">-&gt;</op:operator><name pos:line="4512" pos:column="33">getFullPathName</name></name><argument_list pos:line="4512" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="4513" pos:column="9">PathRemoveFileSpec</name><argument_list pos:line="4513" pos:column="27">(<argument><expr><name pos:line="4513" pos:column="28">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4514" pos:column="9">setWorkingDir</name><argument_list pos:line="4514" pos:column="22">(<argument><expr><call><name><name pos:line="4514" pos:column="23">dir</name><op:operator pos:line="4514" pos:column="26">.</op:operator><name pos:line="4514" pos:column="27">c_str</name></name><argument_list pos:line="4514" pos:column="32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4515" pos:column="9">setTitle</name><argument_list pos:line="4515" pos:column="17">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4516" pos:column="9">//Make sure the colors of the tab controls match</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="4517" pos:column="9">::</op:operator><name pos:line="4517" pos:column="11">InvalidateRect</name></name><argument_list pos:line="4517" pos:column="25">(<argument><expr><call><name><name pos:line="4517" pos:column="26">_mainDocTab</name><op:operator pos:line="4517" pos:column="37">.</op:operator><name pos:line="4517" pos:column="38">getHSelf</name></name><argument_list pos:line="4517" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4517" pos:column="50">NULL</name></expr></argument>, <argument><expr><name pos:line="4517" pos:column="56">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="4518" pos:column="9">::</op:operator><name pos:line="4518" pos:column="11">InvalidateRect</name></name><argument_list pos:line="4518" pos:column="25">(<argument><expr><call><name><name pos:line="4518" pos:column="26">_subDocTab</name><op:operator pos:line="4518" pos:column="36">.</op:operator><name pos:line="4518" pos:column="37">getHSelf</name></name><argument_list pos:line="4518" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4518" pos:column="49">NULL</name></expr></argument>, <argument><expr><name pos:line="4518" pos:column="55">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="4520" pos:column="9">SCNotification</name></type> <name pos:line="4520" pos:column="24">scnN</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4521" pos:column="9">scnN</name><op:operator pos:line="4521" pos:column="13">.</op:operator><name pos:line="4521" pos:column="14">nmhdr</name><op:operator pos:line="4521" pos:column="19">.</op:operator><name pos:line="4521" pos:column="20">code</name></name> <op:operator pos:line="4521" pos:column="25">=</op:operator> <name pos:line="4521" pos:column="27">NPPN_BUFFERACTIVATED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4522" pos:column="9">scnN</name><op:operator pos:line="4522" pos:column="13">.</op:operator><name pos:line="4522" pos:column="14">nmhdr</name><op:operator pos:line="4522" pos:column="19">.</op:operator><name pos:line="4522" pos:column="20">hwndFrom</name></name> <op:operator pos:line="4522" pos:column="29">=</op:operator> <call><name><name pos:line="4522" pos:column="31">_pPublicInterface</name><op:operator pos:line="4522" pos:column="48">-&gt;</op:operator><name pos:line="4522" pos:column="50">getHSelf</name></name><argument_list pos:line="4522" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4523" pos:column="9">scnN</name><op:operator pos:line="4523" pos:column="13">.</op:operator><name pos:line="4523" pos:column="14">nmhdr</name><op:operator pos:line="4523" pos:column="19">.</op:operator><name pos:line="4523" pos:column="20">idFrom</name></name> <op:operator pos:line="4523" pos:column="27">=</op:operator> <op:operator pos:line="4523" pos:column="29">(</op:operator><name pos:line="4523" pos:column="30">uptr_t</name><op:operator pos:line="4523" pos:column="36">)</op:operator><name pos:line="4523" pos:column="37">bufid</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4524" pos:column="9">_pluginsManager</name><op:operator pos:line="4524" pos:column="24">.</op:operator><name pos:line="4524" pos:column="25">notify</name></name><argument_list pos:line="4524" pos:column="31">(<argument><expr><op:operator pos:line="4524" pos:column="32">&amp;</op:operator><name pos:line="4524" pos:column="33">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="4526" pos:column="9">if <condition pos:line="4526" pos:column="12">(<expr><name pos:line="4526" pos:column="13">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="4526" pos:column="33">
	<block pos:line="4527" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4528" pos:column="17">_pFileSwitcherPanel</name><op:operator pos:line="4528" pos:column="36">-&gt;</op:operator><name pos:line="4528" pos:column="38">activateItem</name></name><argument_list pos:line="4528" pos:column="50">(<argument><expr><op:operator pos:line="4528" pos:column="51">(</op:operator><name pos:line="4528" pos:column="52">int</name><op:operator pos:line="4528" pos:column="55">)</op:operator><name pos:line="4528" pos:column="56">bufid</name></expr></argument>, <argument><expr><call><name pos:line="4528" pos:column="63">currentView</name><argument_list pos:line="4528" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4531" pos:column="9">if <condition pos:line="4531" pos:column="12">(<expr><name pos:line="4531" pos:column="13">_pDocMap</name></expr>)</condition><then pos:line="4531" pos:column="22">
	<block pos:line="4532" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4533" pos:column="17">_pDocMap</name><op:operator pos:line="4533" pos:column="25">-&gt;</op:operator><name pos:line="4533" pos:column="27">reloadMap</name></name><argument_list pos:line="4533" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4534" pos:column="17">_pDocMap</name><op:operator pos:line="4534" pos:column="25">-&gt;</op:operator><name pos:line="4534" pos:column="27">setSyntaxLiliting</name></name><argument_list pos:line="4534" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4537" pos:column="9">if <condition pos:line="4537" pos:column="12">(<expr><name pos:line="4537" pos:column="13">_pFuncList</name></expr>)</condition><then pos:line="4537" pos:column="24">
	<block pos:line="4538" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4539" pos:column="17">_pFuncList</name><op:operator pos:line="4539" pos:column="27">-&gt;</op:operator><name pos:line="4539" pos:column="29">reload</name></name><argument_list pos:line="4539" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="4542" pos:column="9">_linkTriggered</name> <op:operator pos:line="4542" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="4542" pos:column="26">true</lit:literal></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4545" pos:column="1">void</name></type> <name><name pos:line="4545" pos:column="6">Notepad_plus</name><op:operator pos:line="4545" pos:column="18">::</op:operator><name pos:line="4545" pos:column="20">loadCommandlineParams</name></name><parameter_list pos:line="4545" pos:column="41">(<param><decl><type><specifier pos:line="4545" pos:column="42">const</specifier> <name pos:line="4545" pos:column="48">TCHAR</name> <type:modifier pos:line="4545" pos:column="54">*</type:modifier></type> <name pos:line="4545" pos:column="56">commandLine</name></decl></param>, <param><decl><type><name pos:line="4545" pos:column="69">CmdLineParams</name> <type:modifier pos:line="4545" pos:column="83">*</type:modifier></type> <name pos:line="4545" pos:column="85">pCmdParams</name></decl></param>)</parameter_list> <block pos:line="4545" pos:column="97">{
	<if pos:line="4546" pos:column="9">if <condition pos:line="4546" pos:column="12">(<expr><op:operator pos:line="4546" pos:column="13">!</op:operator><name pos:line="4546" pos:column="14">commandLine</name> <op:operator pos:line="4546" pos:column="26">||</op:operator> <op:operator pos:line="4546" pos:column="29">!</op:operator> <name pos:line="4546" pos:column="31">pCmdParams</name></expr>)</condition><then pos:line="4546" pos:column="42">
		<return pos:line="4547" pos:column="17">return;</return></then></if>

	<function_decl><type><name pos:line="4549" pos:column="9">FileNameStringSplitter</name></type> <name pos:line="4549" pos:column="32">fnss</name><parameter_list pos:line="4549" pos:column="36">(<param><decl><type><name pos:line="4549" pos:column="37">commandLine</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><specifier pos:line="4550" pos:column="9">const</specifier> <name pos:line="4550" pos:column="15">TCHAR</name> <type:modifier pos:line="4550" pos:column="21">*</type:modifier></type><name pos:line="4550" pos:column="22">pFn</name> <init pos:line="4550" pos:column="26">= <expr><name pos:line="4550" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>

 	<decl_stmt><decl><type><name pos:line="4552" pos:column="9">LangType</name></type> <name pos:line="4552" pos:column="18">lt</name> <init pos:line="4552" pos:column="21">= <expr><name><name pos:line="4552" pos:column="23">pCmdParams</name><op:operator pos:line="4552" pos:column="33">-&gt;</op:operator><name pos:line="4552" pos:column="35">_langType</name></name></expr></init></decl>;</decl_stmt><comment type="line" pos:line="4552" pos:column="45">//LangType(pCopyData-&gt;dwData &amp; LASTBYTEMASK);</comment>
	<decl_stmt><decl><type><name pos:line="4553" pos:column="9">int</name></type> <name pos:line="4553" pos:column="13">ln</name> <init pos:line="4553" pos:column="16">=  <expr><name><name pos:line="4553" pos:column="19">pCmdParams</name><op:operator pos:line="4553" pos:column="29">-&gt;</op:operator><name pos:line="4553" pos:column="31">_line2go</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="4554" pos:column="5">int</name></type> <name pos:line="4554" pos:column="9">cn</name> <init pos:line="4554" pos:column="12">= <expr><name><name pos:line="4554" pos:column="14">pCmdParams</name><op:operator pos:line="4554" pos:column="24">-&gt;</op:operator><name pos:line="4554" pos:column="26">_column2go</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="4556" pos:column="9">bool</name></type> <name pos:line="4556" pos:column="14">readOnly</name> <init pos:line="4556" pos:column="23">= <expr><name><name pos:line="4556" pos:column="25">pCmdParams</name><op:operator pos:line="4556" pos:column="35">-&gt;</op:operator><name pos:line="4556" pos:column="37">_isReadOnly</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="4558" pos:column="9">BufferID</name></type> <name pos:line="4558" pos:column="18">lastOpened</name> <init pos:line="4558" pos:column="29">= <expr><name pos:line="4558" pos:column="31">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
	<for pos:line="4559" pos:column="9">for (<init><decl><type><name pos:line="4559" pos:column="14">int</name></type> <name pos:line="4559" pos:column="18">i</name> <init pos:line="4559" pos:column="20">= <expr><lit:literal type="number" pos:line="4559" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4559" pos:column="26">i</name> <op:operator pos:line="4559" pos:column="28">&lt;</op:operator> <call><name><name pos:line="4559" pos:column="30">fnss</name><op:operator pos:line="4559" pos:column="34">.</op:operator><name pos:line="4559" pos:column="35">size</name></name><argument_list pos:line="4559" pos:column="39">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4559" pos:column="44">i</name><op:operator pos:line="4559" pos:column="45">++</op:operator></expr></incr>)
	<block pos:line="4560" pos:column="9">{
		<expr_stmt><expr><name pos:line="4561" pos:column="17">pFn</name> <op:operator pos:line="4561" pos:column="21">=</op:operator> <call><name><name pos:line="4561" pos:column="23">fnss</name><op:operator pos:line="4561" pos:column="27">.</op:operator><name pos:line="4561" pos:column="28">getFileName</name></name><argument_list pos:line="4561" pos:column="39">(<argument><expr><name pos:line="4561" pos:column="40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="4562" pos:column="17">BufferID</name></type> <name pos:line="4562" pos:column="26">bufID</name> <init pos:line="4562" pos:column="32">= <expr><call><name pos:line="4562" pos:column="34">doOpen</name><argument_list pos:line="4562" pos:column="40">(<argument><expr><name pos:line="4562" pos:column="41">pFn</name></expr></argument>, <argument><expr><name pos:line="4562" pos:column="46">readOnly</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4563" pos:column="17">if <condition pos:line="4563" pos:column="20">(<expr><name pos:line="4563" pos:column="21">bufID</name> <op:operator pos:line="4563" pos:column="27">==</op:operator> <name pos:line="4563" pos:column="30">BUFFER_INVALID</name></expr>)</condition><then pos:line="4563" pos:column="45">	<comment type="line" pos:line="4563" pos:column="49">//cannot open file</comment>
			<continue pos:line="4564" pos:column="25">continue;</continue></then></if>

		<expr_stmt><expr><name pos:line="4566" pos:column="17">lastOpened</name> <op:operator pos:line="4566" pos:column="28">=</op:operator> <name pos:line="4566" pos:column="30">bufID</name></expr>;</expr_stmt>

		<if pos:line="4568" pos:column="17">if <condition pos:line="4568" pos:column="20">(<expr><name pos:line="4568" pos:column="21">lt</name> <op:operator pos:line="4568" pos:column="24">!=</op:operator> <name pos:line="4568" pos:column="27">L_EXTERNAL</name> <op:operator pos:line="4568" pos:column="38">&amp;&amp;</op:operator> <name pos:line="4568" pos:column="41">lt</name> <op:operator pos:line="4568" pos:column="44">&lt;</op:operator> <call><name><name pos:line="4568" pos:column="46">NppParameters</name><op:operator pos:line="4568" pos:column="59">::</op:operator><name pos:line="4568" pos:column="61">getInstance</name></name><argument_list pos:line="4568" pos:column="72">()</argument_list></call><op:operator pos:line="4568" pos:column="74">-&gt;</op:operator><name pos:line="4568" pos:column="76">L_END</name></expr>)</condition><then pos:line="4568" pos:column="82">
		<block pos:line="4569" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4570" pos:column="25">Buffer</name> <type:modifier pos:line="4570" pos:column="32">*</type:modifier></type> <name pos:line="4570" pos:column="34">pBuf</name> <init pos:line="4570" pos:column="39">= <expr><call><name><name pos:line="4570" pos:column="41">MainFileManager</name><op:operator pos:line="4570" pos:column="56">-&gt;</op:operator><name pos:line="4570" pos:column="58">getBufferByID</name></name><argument_list pos:line="4570" pos:column="71">(<argument><expr><name pos:line="4570" pos:column="72">bufID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4571" pos:column="25">pBuf</name><op:operator pos:line="4571" pos:column="29">-&gt;</op:operator><name pos:line="4571" pos:column="31">setLangType</name></name><argument_list pos:line="4571" pos:column="42">(<argument><expr><name pos:line="4571" pos:column="43">lt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="4574" pos:column="17">if <condition pos:line="4574" pos:column="20">(<expr><name pos:line="4574" pos:column="21">ln</name> <op:operator pos:line="4574" pos:column="24">!=</op:operator> <op:operator pos:line="4574" pos:column="27">-</op:operator><lit:literal type="number" pos:line="4574" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="4574" pos:column="30">
		<block pos:line="4575" pos:column="17">{	<comment type="line" pos:line="4575" pos:column="25">//we have to move the cursor manually</comment>
			<decl_stmt><decl><type><name pos:line="4576" pos:column="25">int</name></type> <name pos:line="4576" pos:column="29">iView</name> <init pos:line="4576" pos:column="35">= <expr><call><name pos:line="4576" pos:column="37">currentView</name><argument_list pos:line="4576" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="4576" pos:column="57">//store view since fileswitch can cause it to change</comment>
			<expr_stmt><expr><call><name pos:line="4577" pos:column="25">switchToFile</name><argument_list pos:line="4577" pos:column="37">(<argument><expr><name pos:line="4577" pos:column="38">bufID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4577" pos:column="49">//switch to the file. No deferred loading, but this way we can easily move the cursor to the right position</comment>

            <if pos:line="4579" pos:column="13">if <condition pos:line="4579" pos:column="16">(<expr><name pos:line="4579" pos:column="17">cn</name> <op:operator pos:line="4579" pos:column="20">==</op:operator> <op:operator pos:line="4579" pos:column="23">-</op:operator><lit:literal type="number" pos:line="4579" pos:column="24">1</lit:literal></expr>)</condition><then pos:line="4579" pos:column="26">
			<expr_stmt><expr><call><name><name pos:line="4580" pos:column="25">_pEditView</name><op:operator pos:line="4580" pos:column="35">-&gt;</op:operator><name pos:line="4580" pos:column="37">execute</name></name><argument_list pos:line="4580" pos:column="44">(<argument><expr><name pos:line="4580" pos:column="45">SCI_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="4580" pos:column="59">ln</name><op:operator pos:line="4580" pos:column="61">-</op:operator><lit:literal type="number" pos:line="4580" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
            <else pos:line="4581" pos:column="13">else
            <block pos:line="4582" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="4583" pos:column="17">int</name></type> <name pos:line="4583" pos:column="21">pos</name> <init pos:line="4583" pos:column="25">= <expr><call><name><name pos:line="4583" pos:column="27">_pEditView</name><op:operator pos:line="4583" pos:column="37">-&gt;</op:operator><name pos:line="4583" pos:column="39">execute</name></name><argument_list pos:line="4583" pos:column="46">(<argument><expr><name pos:line="4583" pos:column="47">SCI_FINDCOLUMN</name></expr></argument>, <argument><expr><name pos:line="4583" pos:column="63">ln</name><op:operator pos:line="4583" pos:column="65">-</op:operator><lit:literal type="number" pos:line="4583" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="4583" pos:column="69">cn</name><op:operator pos:line="4583" pos:column="71">-</op:operator><lit:literal type="number" pos:line="4583" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="4584" pos:column="17">_pEditView</name><op:operator pos:line="4584" pos:column="27">-&gt;</op:operator><name pos:line="4584" pos:column="29">execute</name></name><argument_list pos:line="4584" pos:column="36">(<argument><expr><name pos:line="4584" pos:column="37">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="4584" pos:column="50">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
			<expr_stmt><expr><call><name pos:line="4586" pos:column="25">switchEditViewTo</name><argument_list pos:line="4586" pos:column="41">(<argument><expr><name pos:line="4586" pos:column="42">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4586" pos:column="57">//restore view</comment>
		}</block></then></if>
	}</block></for>
	<if pos:line="4589" pos:column="9">if <condition pos:line="4589" pos:column="12">(<expr><name pos:line="4589" pos:column="13">lastOpened</name> <op:operator pos:line="4589" pos:column="24">!=</op:operator> <name pos:line="4589" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="4589" pos:column="42">
    <block pos:line="4590" pos:column="5">{
		<expr_stmt><expr><call><name pos:line="4591" pos:column="17">switchToFile</name><argument_list pos:line="4591" pos:column="29">(<argument><expr><name pos:line="4591" pos:column="30">lastOpened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>


<function><type><name pos:line="4596" pos:column="1">void</name></type> <name><name pos:line="4596" pos:column="6">Notepad_plus</name><op:operator pos:line="4596" pos:column="18">::</op:operator><name pos:line="4596" pos:column="20">setFindReplaceFolderFilter</name></name><parameter_list pos:line="4596" pos:column="46">(<param><decl><type><specifier pos:line="4596" pos:column="47">const</specifier> <name pos:line="4596" pos:column="53">TCHAR</name> <type:modifier pos:line="4596" pos:column="59">*</type:modifier></type><name pos:line="4596" pos:column="60">dir</name></decl></param>, <param><decl><type><specifier pos:line="4596" pos:column="65">const</specifier> <name pos:line="4596" pos:column="71">TCHAR</name> <type:modifier pos:line="4596" pos:column="77">*</type:modifier></type><name pos:line="4596" pos:column="78">filter</name></decl></param>)</parameter_list>
<block pos:line="4597" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4598" pos:column="9">generic_string</name></type> <name pos:line="4598" pos:column="24">fltr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4599" pos:column="9">NppParameters</name> <type:modifier pos:line="4599" pos:column="23">*</type:modifier></type><name pos:line="4599" pos:column="24">pNppParam</name> <init pos:line="4599" pos:column="34">= <expr><call><name><name pos:line="4599" pos:column="36">NppParameters</name><op:operator pos:line="4599" pos:column="49">::</op:operator><name pos:line="4599" pos:column="51">getInstance</name></name><argument_list pos:line="4599" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4600" pos:column="9">FindHistory</name> <type:modifier pos:line="4600" pos:column="21">&amp;</type:modifier></type> <name pos:line="4600" pos:column="23">findHistory</name> <init pos:line="4600" pos:column="35">= <expr><call><name><name pos:line="4600" pos:column="37">pNppParam</name><op:operator pos:line="4600" pos:column="46">-&gt;</op:operator><name pos:line="4600" pos:column="48">getFindHistory</name></name><argument_list pos:line="4600" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="4602" pos:column="9">// get current directory in case it's not provided.</comment>
	<if pos:line="4603" pos:column="9">if <condition pos:line="4603" pos:column="12">(<expr><op:operator pos:line="4603" pos:column="13">!</op:operator><name pos:line="4603" pos:column="14">dir</name> <op:operator pos:line="4603" pos:column="18">&amp;&amp;</op:operator> <name><name pos:line="4603" pos:column="21">findHistory</name><op:operator pos:line="4603" pos:column="32">.</op:operator><name pos:line="4603" pos:column="33">_isFolderFollowDoc</name></name></expr>)</condition><then pos:line="4603" pos:column="52">
	<block pos:line="4604" pos:column="9">{
		<expr_stmt><expr><name pos:line="4605" pos:column="17">dir</name> <op:operator pos:line="4605" pos:column="21">=</op:operator> <call><name><name pos:line="4605" pos:column="23">pNppParam</name><op:operator pos:line="4605" pos:column="32">-&gt;</op:operator><name pos:line="4605" pos:column="34">getWorkingDir</name></name><argument_list pos:line="4605" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="4608" pos:column="9">// get current language file extensions in case it's not provided.</comment>
	<if pos:line="4609" pos:column="9">if <condition pos:line="4609" pos:column="12">(<expr><op:operator pos:line="4609" pos:column="13">!</op:operator><name pos:line="4609" pos:column="14">filter</name> <op:operator pos:line="4609" pos:column="21">&amp;&amp;</op:operator> <name><name pos:line="4609" pos:column="24">findHistory</name><op:operator pos:line="4609" pos:column="35">.</op:operator><name pos:line="4609" pos:column="36">_isFilterFollowDoc</name></name></expr>)</condition><then pos:line="4609" pos:column="55">
	<block pos:line="4610" pos:column="9">{
		<comment type="line" pos:line="4611" pos:column="17">// Get current language file extensions</comment>
		<decl_stmt><decl><type><specifier pos:line="4612" pos:column="17">const</specifier> <name pos:line="4612" pos:column="23">TCHAR</name> <type:modifier pos:line="4612" pos:column="29">*</type:modifier></type><name pos:line="4612" pos:column="30">ext</name> <init pos:line="4612" pos:column="34">= <expr><name pos:line="4612" pos:column="36">NULL</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4613" pos:column="17">LangType</name></type> <name pos:line="4613" pos:column="26">lt</name> <init pos:line="4613" pos:column="29">= <expr><call><name><name pos:line="4613" pos:column="31">_pEditView</name><op:operator pos:line="4613" pos:column="41">-&gt;</op:operator><name pos:line="4613" pos:column="43">getCurrentBuffer</name></name><argument_list pos:line="4613" pos:column="59">()</argument_list></call><op:operator pos:line="4613" pos:column="61">-&gt;</op:operator><call><name pos:line="4613" pos:column="63">getLangType</name><argument_list pos:line="4613" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="4615" pos:column="17">if <condition pos:line="4615" pos:column="20">(<expr><name pos:line="4615" pos:column="21">lt</name> <op:operator pos:line="4615" pos:column="24">==</op:operator> <name pos:line="4615" pos:column="27">L_USER</name></expr>)</condition><then pos:line="4615" pos:column="34">
		<block pos:line="4616" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4617" pos:column="25">Buffer</name> <type:modifier pos:line="4617" pos:column="32">*</type:modifier></type> <name pos:line="4617" pos:column="34">buf</name> <init pos:line="4617" pos:column="38">= <expr><call><name><name pos:line="4617" pos:column="40">_pEditView</name><op:operator pos:line="4617" pos:column="50">-&gt;</op:operator><name pos:line="4617" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="4617" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4618" pos:column="25">UserLangContainer</name> <type:modifier pos:line="4618" pos:column="43">*</type:modifier></type> <name pos:line="4618" pos:column="45">userLangContainer</name> <init pos:line="4618" pos:column="63">= <expr><call><name><name pos:line="4618" pos:column="65">pNppParam</name><op:operator pos:line="4618" pos:column="74">-&gt;</op:operator><name pos:line="4618" pos:column="76">getULCFromName</name></name><argument_list pos:line="4618" pos:column="90">(<argument><expr><call><name><name pos:line="4618" pos:column="91">buf</name><op:operator pos:line="4618" pos:column="94">-&gt;</op:operator><name pos:line="4618" pos:column="96">getUserDefineLangName</name></name><argument_list pos:line="4618" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4619" pos:column="25">if <condition pos:line="4619" pos:column="28">(<expr><name pos:line="4619" pos:column="29">userLangContainer</name></expr>)</condition><then pos:line="4619" pos:column="47">
				<expr_stmt><expr><name pos:line="4620" pos:column="33">ext</name> <op:operator pos:line="4620" pos:column="37">=</op:operator> <call><name><name pos:line="4620" pos:column="39">userLangContainer</name><op:operator pos:line="4620" pos:column="56">-&gt;</op:operator><name pos:line="4620" pos:column="58">getExtention</name></name><argument_list pos:line="4620" pos:column="70">()</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then>
		<else pos:line="4622" pos:column="17">else
		<block pos:line="4623" pos:column="17">{
			<expr_stmt><expr><name pos:line="4624" pos:column="25">ext</name> <op:operator pos:line="4624" pos:column="29">=</op:operator> <call><name><name pos:line="4624" pos:column="31">NppParameters</name><op:operator pos:line="4624" pos:column="44">::</op:operator><name pos:line="4624" pos:column="46">getInstance</name></name><argument_list pos:line="4624" pos:column="57">()</argument_list></call><op:operator pos:line="4624" pos:column="59">-&gt;</op:operator><call><name pos:line="4624" pos:column="61">getLangExtFromLangType</name><argument_list pos:line="4624" pos:column="83">(<argument><expr><name pos:line="4624" pos:column="84">lt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>

		<if pos:line="4627" pos:column="17">if <condition pos:line="4627" pos:column="20">(<expr><name pos:line="4627" pos:column="21">ext</name> <op:operator pos:line="4627" pos:column="25">&amp;&amp;</op:operator> <name><name pos:line="4627" pos:column="28">ext</name><index pos:line="4627" pos:column="31">[<expr><lit:literal type="number" pos:line="4627" pos:column="32">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="4627" pos:column="35">
		<block pos:line="4628" pos:column="17">{
			<expr_stmt><expr><name pos:line="4629" pos:column="25">fltr</name> <op:operator pos:line="4629" pos:column="30">=</op:operator> <call><name pos:line="4629" pos:column="32">TEXT</name><argument_list pos:line="4629" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4629" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name><name pos:line="4630" pos:column="25">vector</name><argument_list pos:line="4630" pos:column="31">&lt;<argument><expr><name pos:line="4630" pos:column="32">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="4630" pos:column="48">vStr</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="4631" pos:column="25">cutString</name><argument_list pos:line="4631" pos:column="34">(<argument><expr><name pos:line="4631" pos:column="35">ext</name></expr></argument>, <argument><expr><name pos:line="4631" pos:column="40">vStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="4632" pos:column="25">for (<init><decl><type><name pos:line="4632" pos:column="30">size_t</name></type> <name pos:line="4632" pos:column="37">i</name> <init pos:line="4632" pos:column="39">= <expr><lit:literal type="number" pos:line="4632" pos:column="41">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4632" pos:column="44">i</name> <op:operator pos:line="4632" pos:column="46">&lt;</op:operator> <call><name><name pos:line="4632" pos:column="48">vStr</name><op:operator pos:line="4632" pos:column="52">.</op:operator><name pos:line="4632" pos:column="53">size</name></name><argument_list pos:line="4632" pos:column="57">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4632" pos:column="61">i</name><op:operator pos:line="4632" pos:column="62">++</op:operator></expr></incr>)
			<block pos:line="4633" pos:column="25">{
				<expr_stmt><expr><name pos:line="4634" pos:column="33">fltr</name> <op:operator pos:line="4634" pos:column="38">+=</op:operator> <call><name pos:line="4634" pos:column="41">TEXT</name><argument_list pos:line="4634" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="4634" pos:column="46">"*."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="4635" pos:column="33">fltr</name> <op:operator pos:line="4635" pos:column="38">+=</op:operator> <name><name pos:line="4635" pos:column="41">vStr</name><index pos:line="4635" pos:column="45">[<expr><name pos:line="4635" pos:column="46">i</name></expr>]</index></name> <op:operator pos:line="4635" pos:column="49">+</op:operator> <call><name pos:line="4635" pos:column="51">TEXT</name><argument_list pos:line="4635" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="4635" pos:column="56">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></then>
		<else pos:line="4638" pos:column="17">else
		<block pos:line="4639" pos:column="17">{
			<expr_stmt><expr><name pos:line="4640" pos:column="25">fltr</name> <op:operator pos:line="4640" pos:column="30">=</op:operator> <call><name pos:line="4640" pos:column="32">TEXT</name><argument_list pos:line="4640" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4640" pos:column="37">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="4642" pos:column="17">filter</name> <op:operator pos:line="4642" pos:column="24">=</op:operator> <call><name><name pos:line="4642" pos:column="26">fltr</name><op:operator pos:line="4642" pos:column="30">.</op:operator><name pos:line="4642" pos:column="31">c_str</name></name><argument_list pos:line="4642" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4644" pos:column="9">_findReplaceDlg</name><op:operator pos:line="4644" pos:column="24">.</op:operator><name pos:line="4644" pos:column="25">setFindInFilesDirFilter</name></name><argument_list pos:line="4644" pos:column="48">(<argument><expr><name pos:line="4644" pos:column="49">dir</name></expr></argument>, <argument><expr><name pos:line="4644" pos:column="54">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name><name pos:line="4647" pos:column="1">vector</name><argument_list pos:line="4647" pos:column="7">&lt;<argument><expr><name pos:line="4647" pos:column="8">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name><name pos:line="4647" pos:column="24">Notepad_plus</name><op:operator pos:line="4647" pos:column="36">::</op:operator><name pos:line="4647" pos:column="38">addNppComponents</name></name><parameter_list pos:line="4647" pos:column="54">(<param><decl><type><specifier pos:line="4647" pos:column="55">const</specifier> <name pos:line="4647" pos:column="61">TCHAR</name> <type:modifier pos:line="4647" pos:column="67">*</type:modifier></type><name pos:line="4647" pos:column="68">destDir</name></decl></param>, <param><decl><type><specifier pos:line="4647" pos:column="77">const</specifier> <name pos:line="4647" pos:column="83">TCHAR</name> <type:modifier pos:line="4647" pos:column="89">*</type:modifier></type><name pos:line="4647" pos:column="90">extFilterName</name></decl></param>, <param><decl><type><specifier pos:line="4647" pos:column="105">const</specifier> <name pos:line="4647" pos:column="111">TCHAR</name> <type:modifier pos:line="4647" pos:column="117">*</type:modifier></type><name pos:line="4647" pos:column="118">extFilter</name></decl></param>)</parameter_list>
<block pos:line="4648" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4649" pos:column="9">FileDialog</name></type> <name pos:line="4649" pos:column="20">fDlg</name><argument_list pos:line="4649" pos:column="24">(<argument><expr><call><name><name pos:line="4649" pos:column="25">_pPublicInterface</name><op:operator pos:line="4649" pos:column="42">-&gt;</op:operator><name pos:line="4649" pos:column="44">getHSelf</name></name><argument_list pos:line="4649" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4649" pos:column="56">_pPublicInterface</name><op:operator pos:line="4649" pos:column="73">-&gt;</op:operator><name pos:line="4649" pos:column="75">getHinst</name></name><argument_list pos:line="4649" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="4650" pos:column="5">fDlg</name><op:operator pos:line="4650" pos:column="9">.</op:operator><name pos:line="4650" pos:column="10">setExtFilter</name></name><argument_list pos:line="4650" pos:column="22">(<argument><expr><name pos:line="4650" pos:column="23">extFilterName</name></expr></argument>, <argument><expr><name pos:line="4650" pos:column="38">extFilter</name></expr></argument>, <argument><expr><name pos:line="4650" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="4652" pos:column="5">vector</name><argument_list pos:line="4652" pos:column="11">&lt;<argument><expr><name pos:line="4652" pos:column="12">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="4652" pos:column="28">copiedFiles</name></decl>;</decl_stmt>

    <if pos:line="4654" pos:column="5">if <condition pos:line="4654" pos:column="8">(<decl><type><name pos:line="4654" pos:column="9">stringVector</name> <type:modifier pos:line="4654" pos:column="22">*</type:modifier></type><name pos:line="4654" pos:column="23">pfns</name> <init pos:line="4654" pos:column="28">= <expr><call><name><name pos:line="4654" pos:column="30">fDlg</name><op:operator pos:line="4654" pos:column="34">.</op:operator><name pos:line="4654" pos:column="35">doOpenMultiFilesDlg</name></name><argument_list pos:line="4654" pos:column="54">()</argument_list></call></expr></init></decl>)</condition><then pos:line="4654" pos:column="57">
    <block pos:line="4655" pos:column="5">{
        <comment type="line" pos:line="4656" pos:column="9">// Get plugins dir</comment>
		<decl_stmt><decl><type><name pos:line="4657" pos:column="17">generic_string</name></type> <name pos:line="4657" pos:column="32">destDirName</name> <init pos:line="4657" pos:column="44">= <expr><op:operator pos:line="4657" pos:column="46">(</op:operator><call><name><name pos:line="4657" pos:column="47">NppParameters</name><op:operator pos:line="4657" pos:column="60">::</op:operator><name pos:line="4657" pos:column="62">getInstance</name></name><argument_list pos:line="4657" pos:column="73">()</argument_list></call><op:operator pos:line="4657" pos:column="75">)</op:operator><op:operator pos:line="4657" pos:column="76">-&gt;</op:operator><call><name pos:line="4657" pos:column="78">getNppPath</name><argument_list pos:line="4657" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="4658" pos:column="9">PathAppend</name><argument_list pos:line="4658" pos:column="19">(<argument><expr><name pos:line="4658" pos:column="20">destDirName</name></expr></argument>, <argument><expr><name pos:line="4658" pos:column="33">destDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if pos:line="4660" pos:column="9">if <condition pos:line="4660" pos:column="12">(<expr><op:operator pos:line="4660" pos:column="13">!</op:operator><call><name><op:operator pos:line="4660" pos:column="14">::</op:operator><name pos:line="4660" pos:column="16">PathFileExists</name></name><argument_list pos:line="4660" pos:column="30">(<argument><expr><call><name><name pos:line="4660" pos:column="31">destDirName</name><op:operator pos:line="4660" pos:column="42">.</op:operator><name pos:line="4660" pos:column="43">c_str</name></name><argument_list pos:line="4660" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4660" pos:column="52">
        <block pos:line="4661" pos:column="9">{
            <expr_stmt><expr><call><name><op:operator pos:line="4662" pos:column="13">::</op:operator><name pos:line="4662" pos:column="15">CreateDirectory</name></name><argument_list pos:line="4662" pos:column="30">(<argument><expr><call><name><name pos:line="4662" pos:column="31">destDirName</name><op:operator pos:line="4662" pos:column="42">.</op:operator><name pos:line="4662" pos:column="43">c_str</name></name><argument_list pos:line="4662" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4662" pos:column="52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <expr_stmt><expr><name pos:line="4665" pos:column="9">destDirName</name> <op:operator pos:line="4665" pos:column="21">+=</op:operator> <call><name pos:line="4665" pos:column="24">TEXT</name><argument_list pos:line="4665" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="4665" pos:column="29">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="4667" pos:column="9">size_t</name></type> <name pos:line="4667" pos:column="16">sz</name> <init pos:line="4667" pos:column="19">= <expr><call><name><name pos:line="4667" pos:column="21">pfns</name><op:operator pos:line="4667" pos:column="25">-&gt;</op:operator><name pos:line="4667" pos:column="27">size</name></name><argument_list pos:line="4667" pos:column="31">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for pos:line="4668" pos:column="9">for (<init><decl><type><name pos:line="4668" pos:column="14">size_t</name></type> <name pos:line="4668" pos:column="21">i</name> <init pos:line="4668" pos:column="23">= <expr><lit:literal type="number" pos:line="4668" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4668" pos:column="29">i</name> <op:operator pos:line="4668" pos:column="31">&lt;</op:operator> <name pos:line="4668" pos:column="33">sz</name></expr> ;</condition> <incr><expr><name pos:line="4668" pos:column="38">i</name><op:operator pos:line="4668" pos:column="39">++</op:operator></expr></incr>)
        <block pos:line="4669" pos:column="9">{
            <if pos:line="4670" pos:column="13">if <condition pos:line="4670" pos:column="16">(<expr><call><name><op:operator pos:line="4670" pos:column="17">::</op:operator><name pos:line="4670" pos:column="19">PathFileExists</name></name><argument_list pos:line="4670" pos:column="33">(<argument><expr><call><name><name pos:line="4670" pos:column="34">pfns</name><op:operator pos:line="4670" pos:column="38">-&gt;</op:operator><name pos:line="4670" pos:column="40">at</name></name><argument_list pos:line="4670" pos:column="42">(<argument><expr><name pos:line="4670" pos:column="43">i</name></expr></argument>)</argument_list></call><op:operator pos:line="4670" pos:column="45">.</op:operator><call><name pos:line="4670" pos:column="46">c_str</name><argument_list pos:line="4670" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4670" pos:column="55">
            <block pos:line="4671" pos:column="13">{
                <comment type="line" pos:line="4672" pos:column="17">// copy to plugins directory</comment>
                <decl_stmt><decl><type><name pos:line="4673" pos:column="17">generic_string</name></type> <name pos:line="4673" pos:column="32">destName</name> <init pos:line="4673" pos:column="41">= <expr><name pos:line="4673" pos:column="43">destDirName</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="4674" pos:column="17">destName</name> <op:operator pos:line="4674" pos:column="26">+=</op:operator> <call><name><op:operator pos:line="4674" pos:column="29">::</op:operator><name pos:line="4674" pos:column="31">PathFindFileName</name></name><argument_list pos:line="4674" pos:column="47">(<argument><expr><call><name><name pos:line="4674" pos:column="48">pfns</name><op:operator pos:line="4674" pos:column="52">-&gt;</op:operator><name pos:line="4674" pos:column="54">at</name></name><argument_list pos:line="4674" pos:column="56">(<argument><expr><name pos:line="4674" pos:column="57">i</name></expr></argument>)</argument_list></call><op:operator pos:line="4674" pos:column="59">.</op:operator><call><name pos:line="4674" pos:column="60">c_str</name><argument_list pos:line="4674" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="4675" pos:column="17">//printStr(destName.c_str());</comment>
                <if pos:line="4676" pos:column="17">if <condition pos:line="4676" pos:column="20">(<expr><call><name><op:operator pos:line="4676" pos:column="21">::</op:operator><name pos:line="4676" pos:column="23">CopyFile</name></name><argument_list pos:line="4676" pos:column="31">(<argument><expr><call><name><name pos:line="4676" pos:column="32">pfns</name><op:operator pos:line="4676" pos:column="36">-&gt;</op:operator><name pos:line="4676" pos:column="38">at</name></name><argument_list pos:line="4676" pos:column="40">(<argument><expr><name pos:line="4676" pos:column="41">i</name></expr></argument>)</argument_list></call><op:operator pos:line="4676" pos:column="43">.</op:operator><call><name pos:line="4676" pos:column="44">c_str</name><argument_list pos:line="4676" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4676" pos:column="53">destName</name><op:operator pos:line="4676" pos:column="61">.</op:operator><name pos:line="4676" pos:column="62">c_str</name></name><argument_list pos:line="4676" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4676" pos:column="71">FALSE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4676" pos:column="78">
                    <expr_stmt><expr><call><name><name pos:line="4677" pos:column="21">copiedFiles</name><op:operator pos:line="4677" pos:column="32">.</op:operator><name pos:line="4677" pos:column="33">push_back</name></name><argument_list pos:line="4677" pos:column="42">(<argument><expr><call><name><name pos:line="4677" pos:column="43">destName</name><op:operator pos:line="4677" pos:column="51">.</op:operator><name pos:line="4677" pos:column="52">c_str</name></name><argument_list pos:line="4677" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></then></if>
        }</block></for>
    }</block></then></if>
    <return pos:line="4681" pos:column="5">return <expr><name pos:line="4681" pos:column="12">copiedFiles</name></expr>;</return>
}</block></function>

<function><type><name pos:line="4684" pos:column="1">void</name></type> <name><name pos:line="4684" pos:column="6">Notepad_plus</name><op:operator pos:line="4684" pos:column="18">::</op:operator><name pos:line="4684" pos:column="20">setWorkingDir</name></name><parameter_list pos:line="4684" pos:column="33">(<param><decl><type><specifier pos:line="4684" pos:column="34">const</specifier> <name pos:line="4684" pos:column="40">TCHAR</name> <type:modifier pos:line="4684" pos:column="46">*</type:modifier></type><name pos:line="4684" pos:column="47">dir</name></decl></param>)</parameter_list>
<block pos:line="4685" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4686" pos:column="9">NppParameters</name> <type:modifier pos:line="4686" pos:column="23">*</type:modifier></type> <name pos:line="4686" pos:column="25">params</name> <init pos:line="4686" pos:column="32">= <expr><call><name><name pos:line="4686" pos:column="34">NppParameters</name><op:operator pos:line="4686" pos:column="47">::</op:operator><name pos:line="4686" pos:column="49">getInstance</name></name><argument_list pos:line="4686" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4687" pos:column="9">if <condition pos:line="4687" pos:column="12">(<expr><call><name><name pos:line="4687" pos:column="13">params</name><op:operator pos:line="4687" pos:column="19">-&gt;</op:operator><name pos:line="4687" pos:column="21">getNppGUI</name></name><argument_list pos:line="4687" pos:column="30">()</argument_list></call><op:operator pos:line="4687" pos:column="32">.</op:operator><name pos:line="4687" pos:column="33">_openSaveDir</name> <op:operator pos:line="4687" pos:column="46">==</op:operator> <name pos:line="4687" pos:column="49">dir_last</name></expr>)</condition><then pos:line="4687" pos:column="58">
		<return pos:line="4688" pos:column="17">return;</return></then></if>
	<if pos:line="4689" pos:column="9">if <condition pos:line="4689" pos:column="12">(<expr><call><name><name pos:line="4689" pos:column="13">params</name><op:operator pos:line="4689" pos:column="19">-&gt;</op:operator><name pos:line="4689" pos:column="21">getNppGUI</name></name><argument_list pos:line="4689" pos:column="30">()</argument_list></call><op:operator pos:line="4689" pos:column="32">.</op:operator><name pos:line="4689" pos:column="33">_openSaveDir</name> <op:operator pos:line="4689" pos:column="46">==</op:operator> <name pos:line="4689" pos:column="49">dir_userDef</name></expr>)</condition><then pos:line="4689" pos:column="61">
	<block pos:line="4690" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4691" pos:column="17">params</name><op:operator pos:line="4691" pos:column="23">-&gt;</op:operator><name pos:line="4691" pos:column="25">setWorkingDir</name></name><argument_list pos:line="4691" pos:column="38">(<argument><expr><name pos:line="4691" pos:column="39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="4693" pos:column="9">else <if pos:line="4693" pos:column="14">if <condition pos:line="4693" pos:column="17">(<expr><name pos:line="4693" pos:column="18">dir</name> <op:operator pos:line="4693" pos:column="22">&amp;&amp;</op:operator> <call><name pos:line="4693" pos:column="25">PathIsDirectory</name><argument_list pos:line="4693" pos:column="40">(<argument><expr><name pos:line="4693" pos:column="41">dir</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4693" pos:column="46">
	<block pos:line="4694" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4695" pos:column="17">params</name><op:operator pos:line="4695" pos:column="23">-&gt;</op:operator><name pos:line="4695" pos:column="25">setWorkingDir</name></name><argument_list pos:line="4695" pos:column="38">(<argument><expr><name pos:line="4695" pos:column="39">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>
}</block></function>

<function><type><name pos:line="4699" pos:column="1">int</name></type> <name><name pos:line="4699" pos:column="5">Notepad_plus</name><op:operator pos:line="4699" pos:column="17">::</op:operator><name pos:line="4699" pos:column="19">getLangFromMenuName</name></name><parameter_list pos:line="4699" pos:column="38">(<param><decl><type><specifier pos:line="4699" pos:column="39">const</specifier> <name pos:line="4699" pos:column="45">TCHAR</name> <type:modifier pos:line="4699" pos:column="51">*</type:modifier></type> <name pos:line="4699" pos:column="53">langName</name></decl></param>)</parameter_list>
<block pos:line="4700" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4701" pos:column="9">int</name></type>	<name pos:line="4701" pos:column="17">id</name>	<init pos:line="4701" pos:column="25">= <expr><lit:literal type="number" pos:line="4701" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4702" pos:column="9">const</specifier> <name pos:line="4702" pos:column="15">int</name></type> <name pos:line="4702" pos:column="19">menuSize</name> <init pos:line="4702" pos:column="28">= <expr><lit:literal type="number" pos:line="4702" pos:column="30">64</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4703" pos:column="9">TCHAR</name></type> <name><name pos:line="4703" pos:column="15">menuLangName</name><index pos:line="4703" pos:column="27">[<expr><name pos:line="4703" pos:column="28">menuSize</name></expr>]</index></name></decl>;</decl_stmt>

	<for pos:line="4705" pos:column="9">for ( <init><decl><type><name pos:line="4705" pos:column="15">int</name></type> <name pos:line="4705" pos:column="19">i</name> <init pos:line="4705" pos:column="21">= <expr><name pos:line="4705" pos:column="23">IDM_LANG_C</name></expr></init></decl>;</init> <condition><expr><name pos:line="4705" pos:column="35">i</name> <op:operator pos:line="4705" pos:column="37">&lt;=</op:operator> <name pos:line="4705" pos:column="40">IDM_LANG_USER</name></expr>;</condition> <incr><expr><name pos:line="4705" pos:column="55">i</name><op:operator pos:line="4705" pos:column="56">++</op:operator></expr></incr> )
		<if pos:line="4706" pos:column="17">if <condition pos:line="4706" pos:column="20">( <expr><call><name><op:operator pos:line="4706" pos:column="22">::</op:operator><name pos:line="4706" pos:column="24">GetMenuString</name></name><argument_list pos:line="4706" pos:column="37">( <argument><expr><name pos:line="4706" pos:column="39">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4706" pos:column="56">i</name></expr></argument>, <argument><expr><name pos:line="4706" pos:column="59">menuLangName</name></expr></argument>, <argument><expr><name pos:line="4706" pos:column="73">menuSize</name></expr></argument>, <argument><expr><name pos:line="4706" pos:column="83">MF_BYCOMMAND</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="4706" pos:column="99">
			<if pos:line="4707" pos:column="25">if <condition pos:line="4707" pos:column="28">( <expr><op:operator pos:line="4707" pos:column="30">!</op:operator><call><name pos:line="4707" pos:column="31">lstrcmp</name><argument_list pos:line="4707" pos:column="38">( <argument><expr><name pos:line="4707" pos:column="40">langName</name></expr></argument>, <argument><expr><name pos:line="4707" pos:column="50">menuLangName</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="4707" pos:column="66">
			<block pos:line="4708" pos:column="25">{
				<expr_stmt><expr><name pos:line="4709" pos:column="33">id</name>	<op:operator pos:line="4709" pos:column="41">=</op:operator> <name pos:line="4709" pos:column="43">i</name></expr>;</expr_stmt>
				<break pos:line="4710" pos:column="33">break;</break>
			}</block></then></if></then></if></for>

	<if pos:line="4713" pos:column="9">if <condition pos:line="4713" pos:column="12">( <expr><name pos:line="4713" pos:column="14">id</name> <op:operator pos:line="4713" pos:column="17">==</op:operator> <lit:literal type="number" pos:line="4713" pos:column="20">0</lit:literal></expr> )</condition><then pos:line="4713" pos:column="23">
	<block pos:line="4714" pos:column="9">{
		<for pos:line="4715" pos:column="17">for ( <init><decl><type><name pos:line="4715" pos:column="23">int</name></type> <name pos:line="4715" pos:column="27">i</name> <init pos:line="4715" pos:column="29">= <expr><name pos:line="4715" pos:column="31">IDM_LANG_USER</name> <op:operator pos:line="4715" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="4715" pos:column="47">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4715" pos:column="50">i</name> <op:operator pos:line="4715" pos:column="52">&lt;=</op:operator> <name pos:line="4715" pos:column="55">IDM_LANG_USER_LIMIT</name></expr>;</condition> <incr><expr><name pos:line="4715" pos:column="76">i</name><op:operator pos:line="4715" pos:column="77">++</op:operator></expr></incr> )
			<if pos:line="4716" pos:column="25">if <condition pos:line="4716" pos:column="28">( <expr><call><name><op:operator pos:line="4716" pos:column="30">::</op:operator><name pos:line="4716" pos:column="32">GetMenuString</name></name><argument_list pos:line="4716" pos:column="45">( <argument><expr><name pos:line="4716" pos:column="47">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4716" pos:column="64">i</name></expr></argument>, <argument><expr><name pos:line="4716" pos:column="67">menuLangName</name></expr></argument>, <argument><expr><name pos:line="4716" pos:column="81">menuSize</name></expr></argument>, <argument><expr><name pos:line="4716" pos:column="91">MF_BYCOMMAND</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="4716" pos:column="107">
				<if pos:line="4717" pos:column="33">if <condition pos:line="4717" pos:column="36">( <expr><op:operator pos:line="4717" pos:column="38">!</op:operator><call><name pos:line="4717" pos:column="39">lstrcmp</name><argument_list pos:line="4717" pos:column="46">( <argument><expr><name pos:line="4717" pos:column="48">langName</name></expr></argument>, <argument><expr><name pos:line="4717" pos:column="58">menuLangName</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="4717" pos:column="74">
				<block pos:line="4718" pos:column="33">{
					<expr_stmt><expr><name pos:line="4719" pos:column="41">id</name>	<op:operator pos:line="4719" pos:column="49">=</op:operator> <name pos:line="4719" pos:column="51">i</name></expr>;</expr_stmt>
					<break pos:line="4720" pos:column="41">break;</break>
				}</block></then></if></then></if></for>
	}</block></then></if>

	<return pos:line="4724" pos:column="9">return <expr><name pos:line="4724" pos:column="16">id</name></expr>;</return>
}</block></function>

<function><type><name pos:line="4727" pos:column="1">generic_string</name></type> <name><name pos:line="4727" pos:column="16">Notepad_plus</name><op:operator pos:line="4727" pos:column="28">::</op:operator><name pos:line="4727" pos:column="30">getLangFromMenu</name></name><parameter_list pos:line="4727" pos:column="45">(<param><decl><type><specifier pos:line="4727" pos:column="46">const</specifier> <name pos:line="4727" pos:column="52">Buffer</name> <type:modifier pos:line="4727" pos:column="59">*</type:modifier></type> <name pos:line="4727" pos:column="61">buf</name></decl></param>)</parameter_list>
<block pos:line="4728" pos:column="1">{

	<decl_stmt><decl><type><name pos:line="4730" pos:column="9">int</name></type>	<name pos:line="4730" pos:column="17">id</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4731" pos:column="9">generic_string</name></type> <name pos:line="4731" pos:column="24">userLangName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4732" pos:column="9">const</specifier> <name pos:line="4732" pos:column="15">int</name></type> <name pos:line="4732" pos:column="19">nbChar</name> <init pos:line="4732" pos:column="26">= <expr><lit:literal type="number" pos:line="4732" pos:column="28">32</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4733" pos:column="9">TCHAR</name></type> <name><name pos:line="4733" pos:column="15">menuLangName</name><index pos:line="4733" pos:column="27">[<expr><name pos:line="4733" pos:column="28">nbChar</name></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="4735" pos:column="9">id</name> <op:operator pos:line="4735" pos:column="12">=</op:operator> <op:operator pos:line="4735" pos:column="14">(</op:operator><call><name><name pos:line="4735" pos:column="15">NppParameters</name><op:operator pos:line="4735" pos:column="28">::</op:operator><name pos:line="4735" pos:column="30">getInstance</name></name><argument_list pos:line="4735" pos:column="41">()</argument_list></call><op:operator pos:line="4735" pos:column="43">)</op:operator><op:operator pos:line="4735" pos:column="44">-&gt;</op:operator><call><name pos:line="4735" pos:column="46">langTypeToCommandID</name><argument_list pos:line="4735" pos:column="65">( <argument><expr><call><name><name pos:line="4735" pos:column="67">buf</name><op:operator pos:line="4735" pos:column="70">-&gt;</op:operator><name pos:line="4735" pos:column="72">getLangType</name></name><argument_list pos:line="4735" pos:column="83">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4736" pos:column="9">if <condition pos:line="4736" pos:column="12">( <expr><op:operator pos:line="4736" pos:column="14">(</op:operator> <name pos:line="4736" pos:column="16">id</name> <op:operator pos:line="4736" pos:column="19">!=</op:operator> <name pos:line="4736" pos:column="22">IDM_LANG_USER</name> <op:operator pos:line="4736" pos:column="36">)</op:operator> <op:operator pos:line="4736" pos:column="38">||</op:operator> <op:operator pos:line="4736" pos:column="41">!</op:operator><op:operator pos:line="4736" pos:column="42">(</op:operator> <call><name><name pos:line="4736" pos:column="44">buf</name><op:operator pos:line="4736" pos:column="47">-&gt;</op:operator><name pos:line="4736" pos:column="49">isUserDefineLangExt</name></name><argument_list pos:line="4736" pos:column="68">()</argument_list></call> <op:operator pos:line="4736" pos:column="71">)</op:operator></expr> )</condition><then pos:line="4736" pos:column="74">
	<block pos:line="4737" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="4738" pos:column="17">::</op:operator><name pos:line="4738" pos:column="19">GetMenuString</name></name><argument_list pos:line="4738" pos:column="32">(<argument><expr><name pos:line="4738" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4738" pos:column="50">id</name></expr></argument>, <argument><expr><name pos:line="4738" pos:column="54">menuLangName</name></expr></argument>, <argument><expr><name pos:line="4738" pos:column="68">nbChar</name><op:operator pos:line="4738" pos:column="74">-</op:operator><lit:literal type="number" pos:line="4738" pos:column="75">1</lit:literal></expr></argument>, <argument><expr><name pos:line="4738" pos:column="78">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4739" pos:column="17">userLangName</name> <op:operator pos:line="4739" pos:column="30">=</op:operator> <name pos:line="4739" pos:column="32">menuLangName</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="4741" pos:column="9">else
	<block pos:line="4742" pos:column="9">{
		<expr_stmt><expr><name pos:line="4743" pos:column="17">userLangName</name> <op:operator pos:line="4743" pos:column="30">=</op:operator> <call><name><name pos:line="4743" pos:column="32">buf</name><op:operator pos:line="4743" pos:column="35">-&gt;</op:operator><name pos:line="4743" pos:column="37">getUserDefineLangName</name></name><argument_list pos:line="4743" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<return pos:line="4745" pos:column="9">return	<expr><name pos:line="4745" pos:column="17">userLangName</name></expr>;</return>
}</block></function>

<function><type><name pos:line="4748" pos:column="1">Style</name> <type:modifier pos:line="4748" pos:column="7">*</type:modifier></type> <name><name pos:line="4748" pos:column="9">Notepad_plus</name><op:operator pos:line="4748" pos:column="21">::</op:operator><name pos:line="4748" pos:column="23">getStyleFromName</name></name><parameter_list pos:line="4748" pos:column="39">(<param><decl><type><specifier pos:line="4748" pos:column="40">const</specifier> <name pos:line="4748" pos:column="46">TCHAR</name> <type:modifier pos:line="4748" pos:column="52">*</type:modifier></type><name pos:line="4748" pos:column="53">styleName</name></decl></param>)</parameter_list>
<block pos:line="4749" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4750" pos:column="9">StyleArray</name> <type:modifier pos:line="4750" pos:column="20">&amp;</type:modifier></type> <name pos:line="4750" pos:column="22">stylers</name> <init pos:line="4750" pos:column="30">= <expr><op:operator pos:line="4750" pos:column="32">(</op:operator><call><name><name pos:line="4750" pos:column="33">NppParameters</name><op:operator pos:line="4750" pos:column="46">::</op:operator><name pos:line="4750" pos:column="48">getInstance</name></name><argument_list pos:line="4750" pos:column="59">()</argument_list></call><op:operator pos:line="4750" pos:column="61">)</op:operator><op:operator pos:line="4750" pos:column="62">-&gt;</op:operator><call><name pos:line="4750" pos:column="64">getMiscStylerArray</name><argument_list pos:line="4750" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="4752" pos:column="9">int</name></type> <name pos:line="4752" pos:column="13">i</name> <init pos:line="4752" pos:column="15">= <expr><call><name><name pos:line="4752" pos:column="17">stylers</name><op:operator pos:line="4752" pos:column="24">.</op:operator><name pos:line="4752" pos:column="25">getStylerIndexByName</name></name><argument_list pos:line="4752" pos:column="45">(<argument><expr><name pos:line="4752" pos:column="46">styleName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4753" pos:column="9">Style</name> <type:modifier pos:line="4753" pos:column="15">*</type:modifier></type> <name pos:line="4753" pos:column="17">st</name> <init pos:line="4753" pos:column="20">= <expr><name pos:line="4753" pos:column="22">NULL</name></expr></init></decl>;</decl_stmt>
	<if pos:line="4754" pos:column="9">if <condition pos:line="4754" pos:column="12">(<expr><name pos:line="4754" pos:column="13">i</name> <op:operator pos:line="4754" pos:column="15">!=</op:operator> <op:operator pos:line="4754" pos:column="18">-</op:operator><lit:literal type="number" pos:line="4754" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="4754" pos:column="21">
	<block pos:line="4755" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4756" pos:column="17">Style</name> <type:modifier pos:line="4756" pos:column="23">&amp;</type:modifier></type> <name pos:line="4756" pos:column="25">style</name> <init pos:line="4756" pos:column="31">= <expr><call><name><name pos:line="4756" pos:column="33">stylers</name><op:operator pos:line="4756" pos:column="40">.</op:operator><name pos:line="4756" pos:column="41">getStyler</name></name><argument_list pos:line="4756" pos:column="50">(<argument><expr><name pos:line="4756" pos:column="51">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="4757" pos:column="17">st</name> <op:operator pos:line="4757" pos:column="20">=</op:operator> <op:operator pos:line="4757" pos:column="22">&amp;</op:operator><name pos:line="4757" pos:column="23">style</name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="4759" pos:column="9">return <expr><name pos:line="4759" pos:column="16">st</name></expr>;</return>
}</block></function>

<function><type><name pos:line="4762" pos:column="1">bool</name></type> <name><name pos:line="4762" pos:column="6">Notepad_plus</name><op:operator pos:line="4762" pos:column="18">::</op:operator><name pos:line="4762" pos:column="20">noOpenedDoc</name></name><parameter_list pos:line="4762" pos:column="31">()</parameter_list> <specifier pos:line="4762" pos:column="34">const</specifier>
<block pos:line="4763" pos:column="1">{
	<if pos:line="4764" pos:column="9">if <condition pos:line="4764" pos:column="12">(<expr><call><name><name pos:line="4764" pos:column="13">_mainDocTab</name><op:operator pos:line="4764" pos:column="24">.</op:operator><name pos:line="4764" pos:column="25">isVisible</name></name><argument_list pos:line="4764" pos:column="34">()</argument_list></call> <op:operator pos:line="4764" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="4764" pos:column="40">_subDocTab</name><op:operator pos:line="4764" pos:column="50">.</op:operator><name pos:line="4764" pos:column="51">isVisible</name></name><argument_list pos:line="4764" pos:column="60">()</argument_list></call></expr>)</condition><then pos:line="4764" pos:column="63">
		<return pos:line="4765" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4765" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="4766" pos:column="9">if <condition pos:line="4766" pos:column="12">(<expr><call><name><name pos:line="4766" pos:column="13">_pDocTab</name><op:operator pos:line="4766" pos:column="21">-&gt;</op:operator><name pos:line="4766" pos:column="23">nbItem</name></name><argument_list pos:line="4766" pos:column="29">()</argument_list></call> <op:operator pos:line="4766" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="4766" pos:column="35">1</lit:literal></expr>)</condition><then pos:line="4766" pos:column="37">
	<block pos:line="4767" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4768" pos:column="17">BufferID</name></type> <name pos:line="4768" pos:column="26">buffer</name> <init pos:line="4768" pos:column="33">= <expr><call><name><name pos:line="4768" pos:column="35">_pDocTab</name><op:operator pos:line="4768" pos:column="43">-&gt;</op:operator><name pos:line="4768" pos:column="45">getBufferByIndex</name></name><argument_list pos:line="4768" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="4768" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4769" pos:column="17">Buffer</name> <type:modifier pos:line="4769" pos:column="24">*</type:modifier></type> <name pos:line="4769" pos:column="26">buf</name> <init pos:line="4769" pos:column="30">= <expr><call><name><name pos:line="4769" pos:column="32">MainFileManager</name><op:operator pos:line="4769" pos:column="47">-&gt;</op:operator><name pos:line="4769" pos:column="49">getBufferByID</name></name><argument_list pos:line="4769" pos:column="62">(<argument><expr><name pos:line="4769" pos:column="63">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4770" pos:column="17">if <condition pos:line="4770" pos:column="20">(<expr><op:operator pos:line="4770" pos:column="21">!</op:operator><call><name><name pos:line="4770" pos:column="22">buf</name><op:operator pos:line="4770" pos:column="25">-&gt;</op:operator><name pos:line="4770" pos:column="27">isDirty</name></name><argument_list pos:line="4770" pos:column="34">()</argument_list></call> <op:operator pos:line="4770" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="4770" pos:column="40">buf</name><op:operator pos:line="4770" pos:column="43">-&gt;</op:operator><name pos:line="4770" pos:column="45">isUntitled</name></name><argument_list pos:line="4770" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="4770" pos:column="58">
			<return pos:line="4771" pos:column="25">return <expr><lit:literal type="boolean" pos:line="4771" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></then></if>
	<return pos:line="4773" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4773" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="4776" pos:column="1">bool</name></type> <name><name pos:line="4776" pos:column="6">Notepad_plus</name><op:operator pos:line="4776" pos:column="18">::</op:operator><name pos:line="4776" pos:column="20">reloadLang</name></name><parameter_list pos:line="4776" pos:column="30">()</parameter_list>
<block pos:line="4777" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4778" pos:column="9">NppParameters</name> <type:modifier pos:line="4778" pos:column="23">*</type:modifier></type><name pos:line="4778" pos:column="24">pNppParam</name> <init pos:line="4778" pos:column="34">= <expr><call><name><name pos:line="4778" pos:column="36">NppParameters</name><op:operator pos:line="4778" pos:column="49">::</op:operator><name pos:line="4778" pos:column="51">getInstance</name></name><argument_list pos:line="4778" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="4780" pos:column="9">if <condition pos:line="4780" pos:column="12">(<expr><op:operator pos:line="4780" pos:column="13">!</op:operator><call><name><name pos:line="4780" pos:column="14">pNppParam</name><op:operator pos:line="4780" pos:column="23">-&gt;</op:operator><name pos:line="4780" pos:column="25">reloadLang</name></name><argument_list pos:line="4780" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="4780" pos:column="38">
	<block pos:line="4781" pos:column="9">{
		<return pos:line="4782" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4782" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="4785" pos:column="9">TiXmlDocumentA</name> <type:modifier pos:line="4785" pos:column="24">*</type:modifier></type><name pos:line="4785" pos:column="25">nativeLangDocRootA</name> <init pos:line="4785" pos:column="44">= <expr><call><name><name pos:line="4785" pos:column="46">pNppParam</name><op:operator pos:line="4785" pos:column="55">-&gt;</op:operator><name pos:line="4785" pos:column="57">getNativeLangA</name></name><argument_list pos:line="4785" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4786" pos:column="9">if <condition pos:line="4786" pos:column="12">(<expr><op:operator pos:line="4786" pos:column="13">!</op:operator><name pos:line="4786" pos:column="14">nativeLangDocRootA</name></expr>)</condition><then pos:line="4786" pos:column="33">
	<block pos:line="4787" pos:column="9">{
		<return pos:line="4788" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4788" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>

    <expr_stmt><expr><call><name><name pos:line="4791" pos:column="5">_nativeLangSpeaker</name><op:operator pos:line="4791" pos:column="23">.</op:operator><name pos:line="4791" pos:column="24">init</name></name><argument_list pos:line="4791" pos:column="28">(<argument><expr><name pos:line="4791" pos:column="29">nativeLangDocRootA</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4791" pos:column="49">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="4793" pos:column="5">pNppParam</name><op:operator pos:line="4793" pos:column="14">-&gt;</op:operator><name pos:line="4793" pos:column="16">reloadContextMenuFromXmlTree</name></name><argument_list pos:line="4793" pos:column="44">(<argument><expr><name pos:line="4793" pos:column="45">_mainMenuHandle</name></expr></argument>, <argument><expr><call><name><name pos:line="4793" pos:column="62">_pluginsManager</name><op:operator pos:line="4793" pos:column="77">.</op:operator><name pos:line="4793" pos:column="78">getMenuHandle</name></name><argument_list pos:line="4793" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="4795" pos:column="9">generic_string</name></type> <name pos:line="4795" pos:column="24">pluginsTrans</name></decl><op:operator pos:line="4795" pos:column="36">,</op:operator> <decl><type ref="prev"/><name pos:line="4795" pos:column="38">windowTrans</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4796" pos:column="9">_nativeLangSpeaker</name><op:operator pos:line="4796" pos:column="27">.</op:operator><name pos:line="4796" pos:column="28">changeMenuLang</name></name><argument_list pos:line="4796" pos:column="42">(<argument><expr><name pos:line="4796" pos:column="43">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4796" pos:column="60">pluginsTrans</name></expr></argument>, <argument><expr><name pos:line="4796" pos:column="74">windowTrans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="4797" pos:column="5">::</op:operator><name pos:line="4797" pos:column="7">DrawMenuBar</name></name><argument_list pos:line="4797" pos:column="18">(<argument><expr><call><name><name pos:line="4797" pos:column="19">_pPublicInterface</name><op:operator pos:line="4797" pos:column="36">-&gt;</op:operator><name pos:line="4797" pos:column="38">getHSelf</name></name><argument_list pos:line="4797" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="4799" pos:column="9">int</name></type> <name pos:line="4799" pos:column="13">indexWindow</name> <init pos:line="4799" pos:column="25">= <expr><call><name><op:operator pos:line="4799" pos:column="27">::</op:operator><name pos:line="4799" pos:column="29">GetMenuItemCount</name></name><argument_list pos:line="4799" pos:column="45">(<argument><expr><name pos:line="4799" pos:column="46">_mainMenuHandle</name></expr></argument>)</argument_list></call> <op:operator pos:line="4799" pos:column="63">-</op:operator> <lit:literal type="number" pos:line="4799" pos:column="65">3</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="4801" pos:column="9">if <condition pos:line="4801" pos:column="12">(<expr><call><name><name pos:line="4801" pos:column="13">_pluginsManager</name><op:operator pos:line="4801" pos:column="28">.</op:operator><name pos:line="4801" pos:column="29">hasPlugins</name></name><argument_list pos:line="4801" pos:column="39">()</argument_list></call> <op:operator pos:line="4801" pos:column="42">&amp;&amp;</op:operator> <name pos:line="4801" pos:column="45">pluginsTrans</name> <op:operator pos:line="4801" pos:column="58">!=</op:operator> <call><name pos:line="4801" pos:column="61">TEXT</name><argument_list pos:line="4801" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="4801" pos:column="66">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4801" pos:column="70">
	<block pos:line="4802" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="4803" pos:column="17">::</op:operator><name pos:line="4803" pos:column="19">ModifyMenu</name></name><argument_list pos:line="4803" pos:column="29">(<argument><expr><name pos:line="4803" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4803" pos:column="47">indexWindow</name> <op:operator pos:line="4803" pos:column="59">-</op:operator> <lit:literal type="number" pos:line="4803" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="4803" pos:column="64">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4803" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4803" pos:column="82">pluginsTrans</name><op:operator pos:line="4803" pos:column="94">.</op:operator><name pos:line="4803" pos:column="95">c_str</name></name><argument_list pos:line="4803" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4806" pos:column="9">if <condition pos:line="4806" pos:column="12">(<expr><name pos:line="4806" pos:column="13">windowTrans</name> <op:operator pos:line="4806" pos:column="25">!=</op:operator> <call><name pos:line="4806" pos:column="28">TEXT</name><argument_list pos:line="4806" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="4806" pos:column="33">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4806" pos:column="37">
	<block pos:line="4807" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="4808" pos:column="17">::</op:operator><name pos:line="4808" pos:column="19">ModifyMenu</name></name><argument_list pos:line="4808" pos:column="29">(<argument><expr><name pos:line="4808" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4808" pos:column="47">indexWindow</name></expr></argument>, <argument><expr><name pos:line="4808" pos:column="60">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4808" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4808" pos:column="78">windowTrans</name><op:operator pos:line="4808" pos:column="89">.</op:operator><name pos:line="4808" pos:column="90">c_str</name></name><argument_list pos:line="4808" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4809" pos:column="17">windowTrans</name> <op:operator pos:line="4809" pos:column="29">+=</op:operator> <call><name pos:line="4809" pos:column="32">TEXT</name><argument_list pos:line="4809" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4809" pos:column="37">"..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="4810" pos:column="17">::</op:operator><name pos:line="4810" pos:column="19">ModifyMenu</name></name><argument_list pos:line="4810" pos:column="29">(<argument><expr><name pos:line="4810" pos:column="30">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="4810" pos:column="47">IDM_WINDOW_WINDOWS</name></expr></argument>, <argument><expr><name pos:line="4810" pos:column="67">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="4810" pos:column="81">IDM_WINDOW_WINDOWS</name></expr></argument>, <argument><expr><call><name><name pos:line="4810" pos:column="101">windowTrans</name><op:operator pos:line="4810" pos:column="112">.</op:operator><name pos:line="4810" pos:column="113">c_str</name></name><argument_list pos:line="4810" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="4812" pos:column="9">// Update scintilla context menu strings</comment>
	<decl_stmt><decl><type><name><name pos:line="4813" pos:column="9">vector</name><argument_list pos:line="4813" pos:column="15">&lt;<argument><expr><name pos:line="4813" pos:column="16">MenuItemUnit</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="4813" pos:column="30">&amp;</type:modifier></type> <name pos:line="4813" pos:column="32">tmp</name> <init pos:line="4813" pos:column="36">= <expr><call><name><name pos:line="4813" pos:column="38">pNppParam</name><op:operator pos:line="4813" pos:column="47">-&gt;</op:operator><name pos:line="4813" pos:column="49">getContextMenuItems</name></name><argument_list pos:line="4813" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4814" pos:column="9">size_t</name></type> <name pos:line="4814" pos:column="16">len</name> <init pos:line="4814" pos:column="20">= <expr><call><name><name pos:line="4814" pos:column="22">tmp</name><op:operator pos:line="4814" pos:column="25">.</op:operator><name pos:line="4814" pos:column="26">size</name></name><argument_list pos:line="4814" pos:column="30">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4815" pos:column="9">TCHAR</name></type> <name><name pos:line="4815" pos:column="15">menuName</name><index pos:line="4815" pos:column="23">[<expr><lit:literal type="number" pos:line="4815" pos:column="24">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<for pos:line="4816" pos:column="9">for (<init><decl><type><name pos:line="4816" pos:column="14">size_t</name></type> <name pos:line="4816" pos:column="21">i</name> <init pos:line="4816" pos:column="23">= <expr><lit:literal type="number" pos:line="4816" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4816" pos:column="29">i</name> <op:operator pos:line="4816" pos:column="31">&lt;</op:operator> <name pos:line="4816" pos:column="33">len</name></expr> ;</condition> <incr><expr><name pos:line="4816" pos:column="39">i</name><op:operator pos:line="4816" pos:column="40">++</op:operator></expr></incr>)
	<block pos:line="4817" pos:column="9">{
		<if pos:line="4818" pos:column="17">if <condition pos:line="4818" pos:column="20">(<expr><name><name pos:line="4818" pos:column="21">tmp</name><index pos:line="4818" pos:column="24">[<expr><name pos:line="4818" pos:column="25">i</name></expr>]</index></name><op:operator pos:line="4818" pos:column="27">.</op:operator><name pos:line="4818" pos:column="28">_itemName</name> <op:operator pos:line="4818" pos:column="38">==</op:operator> <call><name pos:line="4818" pos:column="41">TEXT</name><argument_list pos:line="4818" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="4818" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4818" pos:column="50">
		<block pos:line="4819" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="4820" pos:column="25">::</op:operator><name pos:line="4820" pos:column="27">GetMenuString</name></name><argument_list pos:line="4820" pos:column="40">(<argument><expr><name pos:line="4820" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name><name pos:line="4820" pos:column="58">tmp</name><index pos:line="4820" pos:column="61">[<expr><name pos:line="4820" pos:column="62">i</name></expr>]</index></name><op:operator pos:line="4820" pos:column="64">.</op:operator><name pos:line="4820" pos:column="65">_cmdID</name></expr></argument>, <argument><expr><name pos:line="4820" pos:column="73">menuName</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4820" pos:column="83">64</lit:literal></expr></argument>, <argument><expr><name pos:line="4820" pos:column="87">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4821" pos:column="25">tmp</name><index pos:line="4821" pos:column="28">[<expr><name pos:line="4821" pos:column="29">i</name></expr>]</index></name><op:operator pos:line="4821" pos:column="31">.</op:operator><name pos:line="4821" pos:column="32">_itemName</name> <op:operator pos:line="4821" pos:column="42">=</op:operator> <call><name pos:line="4821" pos:column="44">purgeMenuItemString</name><argument_list pos:line="4821" pos:column="63">(<argument><expr><name pos:line="4821" pos:column="64">menuName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<decl_stmt><decl><type><name><name pos:line="4825" pos:column="9">vector</name><argument_list pos:line="4825" pos:column="15">&lt;<argument><expr><name pos:line="4825" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="4825" pos:column="33">&amp;</type:modifier></type> <name pos:line="4825" pos:column="35">shortcuts</name> <init pos:line="4825" pos:column="45">= <expr><call><name><name pos:line="4825" pos:column="47">pNppParam</name><op:operator pos:line="4825" pos:column="56">-&gt;</op:operator><name pos:line="4825" pos:column="58">getUserShortcuts</name></name><argument_list pos:line="4825" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="4826" pos:column="9">len</name> <op:operator pos:line="4826" pos:column="13">=</op:operator> <call><name><name pos:line="4826" pos:column="15">shortcuts</name><op:operator pos:line="4826" pos:column="24">.</op:operator><name pos:line="4826" pos:column="25">size</name></name><argument_list pos:line="4826" pos:column="29">()</argument_list></call></expr>;</expr_stmt>

	<for pos:line="4828" pos:column="9">for(<init><decl><type><name pos:line="4828" pos:column="13">size_t</name></type> <name pos:line="4828" pos:column="20">i</name> <init pos:line="4828" pos:column="22">= <expr><lit:literal type="number" pos:line="4828" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4828" pos:column="27">i</name> <op:operator pos:line="4828" pos:column="29">&lt;</op:operator> <name pos:line="4828" pos:column="31">len</name></expr>;</condition> <incr><expr><name pos:line="4828" pos:column="36">i</name><op:operator pos:line="4828" pos:column="37">++</op:operator></expr></incr>)
	<block pos:line="4829" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4830" pos:column="17">CommandShortcut</name> <type:modifier pos:line="4830" pos:column="33">&amp;</type:modifier></type> <name pos:line="4830" pos:column="35">csc</name> <init pos:line="4830" pos:column="39">= <expr><name><name pos:line="4830" pos:column="41">shortcuts</name><index pos:line="4830" pos:column="50">[<expr><name pos:line="4830" pos:column="51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="4831" pos:column="17">::</op:operator><name pos:line="4831" pos:column="19">GetMenuString</name></name><argument_list pos:line="4831" pos:column="32">(<argument><expr><name pos:line="4831" pos:column="33">_mainMenuHandle</name></expr></argument>, <argument><expr><call><name><name pos:line="4831" pos:column="50">csc</name><op:operator pos:line="4831" pos:column="53">.</op:operator><name pos:line="4831" pos:column="54">getID</name></name><argument_list pos:line="4831" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4831" pos:column="63">menuName</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4831" pos:column="73">64</lit:literal></expr></argument>, <argument><expr><name pos:line="4831" pos:column="77">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4832" pos:column="17">csc</name><op:operator pos:line="4832" pos:column="20">.</op:operator><name pos:line="4832" pos:column="21">setName</name></name><argument_list pos:line="4832" pos:column="28">(<argument><expr><call><name pos:line="4832" pos:column="29">purgeMenuItemString</name><argument_list pos:line="4832" pos:column="48">(<argument><expr><name pos:line="4832" pos:column="49">menuName</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4832" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4832" pos:column="64">.</op:operator><call><name pos:line="4832" pos:column="65">c_str</name><argument_list pos:line="4832" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="4834" pos:column="9">_accelerator</name><op:operator pos:line="4834" pos:column="21">.</op:operator><name pos:line="4834" pos:column="22">updateFullMenu</name></name><argument_list pos:line="4834" pos:column="36">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="4836" pos:column="9">_scintaccelerator</name><op:operator pos:line="4836" pos:column="26">.</op:operator><name pos:line="4836" pos:column="27">updateKeys</name></name><argument_list pos:line="4836" pos:column="37">()</argument_list></call></expr>;</expr_stmt>


	<if pos:line="4839" pos:column="9">if <condition pos:line="4839" pos:column="12">(<expr><call><name><name pos:line="4839" pos:column="13">_tabPopupMenu</name><op:operator pos:line="4839" pos:column="26">.</op:operator><name pos:line="4839" pos:column="27">isCreated</name></name><argument_list pos:line="4839" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="4839" pos:column="39">
	<block pos:line="4840" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4841" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4841" pos:column="35">.</op:operator><name pos:line="4841" pos:column="36">changeLangTabContextMenu</name></name><argument_list pos:line="4841" pos:column="60">(<argument><expr><call><name><name pos:line="4841" pos:column="61">_tabPopupMenu</name><op:operator pos:line="4841" pos:column="74">.</op:operator><name pos:line="4841" pos:column="75">getMenuHandle</name></name><argument_list pos:line="4841" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4843" pos:column="9">if <condition pos:line="4843" pos:column="12">(<expr><call><name><name pos:line="4843" pos:column="13">_tabPopupDropMenu</name><op:operator pos:line="4843" pos:column="30">.</op:operator><name pos:line="4843" pos:column="31">isCreated</name></name><argument_list pos:line="4843" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="4843" pos:column="43">
	<block pos:line="4844" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4845" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4845" pos:column="35">.</op:operator><name pos:line="4845" pos:column="36">changeLangTabDrapContextMenu</name></name><argument_list pos:line="4845" pos:column="64">(<argument><expr><call><name><name pos:line="4845" pos:column="65">_tabPopupDropMenu</name><op:operator pos:line="4845" pos:column="82">.</op:operator><name pos:line="4845" pos:column="83">getMenuHandle</name></name><argument_list pos:line="4845" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4848" pos:column="9">if <condition pos:line="4848" pos:column="12">(<expr><call><name><name pos:line="4848" pos:column="13">_preference</name><op:operator pos:line="4848" pos:column="24">.</op:operator><name pos:line="4848" pos:column="25">isCreated</name></name><argument_list pos:line="4848" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="4848" pos:column="37">
	<block pos:line="4849" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4850" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4850" pos:column="35">.</op:operator><name pos:line="4850" pos:column="36">changePrefereceDlgLang</name></name><argument_list pos:line="4850" pos:column="58">(<argument><expr><name pos:line="4850" pos:column="59">_preference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4853" pos:column="9">if <condition pos:line="4853" pos:column="12">(<expr><call><name><name pos:line="4853" pos:column="13">_configStyleDlg</name><op:operator pos:line="4853" pos:column="28">.</op:operator><name pos:line="4853" pos:column="29">isCreated</name></name><argument_list pos:line="4853" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="4853" pos:column="41">
	<block pos:line="4854" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="4855" pos:column="9">_nativeLangSpeaker</name><op:operator pos:line="4855" pos:column="27">.</op:operator><name pos:line="4855" pos:column="28">changeConfigLang</name></name><argument_list pos:line="4855" pos:column="44">(<argument><expr><call><name><name pos:line="4855" pos:column="45">_configStyleDlg</name><op:operator pos:line="4855" pos:column="60">.</op:operator><name pos:line="4855" pos:column="61">getHSelf</name></name><argument_list pos:line="4855" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4858" pos:column="9">if <condition pos:line="4858" pos:column="12">(<expr><call><name><name pos:line="4858" pos:column="13">_findReplaceDlg</name><op:operator pos:line="4858" pos:column="28">.</op:operator><name pos:line="4858" pos:column="29">isCreated</name></name><argument_list pos:line="4858" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="4858" pos:column="41">
	<block pos:line="4859" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4860" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4860" pos:column="35">.</op:operator><name pos:line="4860" pos:column="36">changeFindReplaceDlgLang</name></name><argument_list pos:line="4860" pos:column="60">(<argument><expr><name pos:line="4860" pos:column="61">_findReplaceDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4863" pos:column="9">if <condition pos:line="4863" pos:column="12">(<expr><call><name><name pos:line="4863" pos:column="13">_goToLineDlg</name><op:operator pos:line="4863" pos:column="25">.</op:operator><name pos:line="4863" pos:column="26">isCreated</name></name><argument_list pos:line="4863" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="4863" pos:column="38">
	<block pos:line="4864" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4865" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4865" pos:column="35">.</op:operator><name pos:line="4865" pos:column="36">changeDlgLang</name></name><argument_list pos:line="4865" pos:column="49">(<argument><expr><call><name><name pos:line="4865" pos:column="50">_goToLineDlg</name><op:operator pos:line="4865" pos:column="62">.</op:operator><name pos:line="4865" pos:column="63">getHSelf</name></name><argument_list pos:line="4865" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="4865" pos:column="75">"GoToLine"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4868" pos:column="9">if <condition pos:line="4868" pos:column="12">(<expr><call><name><name pos:line="4868" pos:column="13">_runDlg</name><op:operator pos:line="4868" pos:column="20">.</op:operator><name pos:line="4868" pos:column="21">isCreated</name></name><argument_list pos:line="4868" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="4868" pos:column="33">
	<block pos:line="4869" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4870" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4870" pos:column="35">.</op:operator><name pos:line="4870" pos:column="36">changeDlgLang</name></name><argument_list pos:line="4870" pos:column="49">(<argument><expr><call><name><name pos:line="4870" pos:column="50">_runDlg</name><op:operator pos:line="4870" pos:column="57">.</op:operator><name pos:line="4870" pos:column="58">getHSelf</name></name><argument_list pos:line="4870" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="4870" pos:column="70">"Run"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4873" pos:column="9">if <condition pos:line="4873" pos:column="12">(<expr><call><name><name pos:line="4873" pos:column="13">_runMacroDlg</name><op:operator pos:line="4873" pos:column="25">.</op:operator><name pos:line="4873" pos:column="26">isCreated</name></name><argument_list pos:line="4873" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="4873" pos:column="38">
	<block pos:line="4874" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4875" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4875" pos:column="35">.</op:operator><name pos:line="4875" pos:column="36">changeDlgLang</name></name><argument_list pos:line="4875" pos:column="49">(<argument><expr><call><name><name pos:line="4875" pos:column="50">_runMacroDlg</name><op:operator pos:line="4875" pos:column="62">.</op:operator><name pos:line="4875" pos:column="63">getHSelf</name></name><argument_list pos:line="4875" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="4875" pos:column="75">"MultiMacro"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4878" pos:column="9">if <condition pos:line="4878" pos:column="12">(<expr><call><name><name pos:line="4878" pos:column="13">_findCharsInRangeDlg</name><op:operator pos:line="4878" pos:column="33">.</op:operator><name pos:line="4878" pos:column="34">isCreated</name></name><argument_list pos:line="4878" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="4878" pos:column="46">
	<block pos:line="4879" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4880" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4880" pos:column="35">.</op:operator><name pos:line="4880" pos:column="36">changeDlgLang</name></name><argument_list pos:line="4880" pos:column="49">(<argument><expr><call><name><name pos:line="4880" pos:column="50">_findCharsInRangeDlg</name><op:operator pos:line="4880" pos:column="70">.</op:operator><name pos:line="4880" pos:column="71">getHSelf</name></name><argument_list pos:line="4880" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="4880" pos:column="83">"FindCharsInRange"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4883" pos:column="9">if <condition pos:line="4883" pos:column="12">(<expr><call><name><name pos:line="4883" pos:column="13">_colEditorDlg</name><op:operator pos:line="4883" pos:column="26">.</op:operator><name pos:line="4883" pos:column="27">isCreated</name></name><argument_list pos:line="4883" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="4883" pos:column="39">
	<block pos:line="4884" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="4885" pos:column="9">_nativeLangSpeaker</name><op:operator pos:line="4885" pos:column="27">.</op:operator><name pos:line="4885" pos:column="28">changeDlgLang</name></name><argument_list pos:line="4885" pos:column="41">(<argument><expr><call><name><name pos:line="4885" pos:column="42">_colEditorDlg</name><op:operator pos:line="4885" pos:column="55">.</op:operator><name pos:line="4885" pos:column="56">getHSelf</name></name><argument_list pos:line="4885" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="4885" pos:column="68">"ColumnEditor"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="4888" pos:column="9">UserDefineDialog</name> <type:modifier pos:line="4888" pos:column="26">*</type:modifier></type><name pos:line="4888" pos:column="27">udd</name> <init pos:line="4888" pos:column="31">= <expr><call><name><name pos:line="4888" pos:column="33">_pEditView</name><op:operator pos:line="4888" pos:column="43">-&gt;</op:operator><name pos:line="4888" pos:column="45">getUserDefineDlg</name></name><argument_list pos:line="4888" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4889" pos:column="9">if <condition pos:line="4889" pos:column="12">(<expr><call><name><name pos:line="4889" pos:column="13">udd</name><op:operator pos:line="4889" pos:column="16">-&gt;</op:operator><name pos:line="4889" pos:column="18">isCreated</name></name><argument_list pos:line="4889" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="4889" pos:column="30">
	<block pos:line="4890" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="4891" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="4891" pos:column="35">.</op:operator><name pos:line="4891" pos:column="36">changeUserDefineLang</name></name><argument_list pos:line="4891" pos:column="56">(<argument><expr><name pos:line="4891" pos:column="57">udd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="4894" pos:column="9">_lastRecentFileList</name><op:operator pos:line="4894" pos:column="28">.</op:operator><name pos:line="4894" pos:column="29">setLangEncoding</name></name><argument_list pos:line="4894" pos:column="44">(<argument><expr><call><name><name pos:line="4894" pos:column="45">_nativeLangSpeaker</name><op:operator pos:line="4894" pos:column="63">.</op:operator><name pos:line="4894" pos:column="64">getLangEncoding</name></name><argument_list pos:line="4894" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4895" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4895" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="4898" pos:column="1">void</name></type> <name><name pos:line="4898" pos:column="6">Notepad_plus</name><op:operator pos:line="4898" pos:column="18">::</op:operator><name pos:line="4898" pos:column="20">launchClipboardHistoryPanel</name></name><parameter_list pos:line="4898" pos:column="47">()</parameter_list>
<block pos:line="4899" pos:column="1">{
	<if pos:line="4900" pos:column="9">if <condition pos:line="4900" pos:column="12">(<expr><op:operator pos:line="4900" pos:column="13">!</op:operator><name pos:line="4900" pos:column="14">_pClipboardHistoryPanel</name></expr>)</condition><then pos:line="4900" pos:column="38">
	<block pos:line="4901" pos:column="9">{
		<expr_stmt><expr><name pos:line="4902" pos:column="17">_pClipboardHistoryPanel</name> <op:operator pos:line="4902" pos:column="41">=</op:operator> <op:operator pos:line="4902" pos:column="43">new</op:operator> <call><name pos:line="4902" pos:column="47">ClipboardHistoryPanel</name><argument_list pos:line="4902" pos:column="68">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="4904" pos:column="17">_pClipboardHistoryPanel</name><op:operator pos:line="4904" pos:column="40">-&gt;</op:operator><name pos:line="4904" pos:column="42">init</name></name><argument_list pos:line="4904" pos:column="46">(<argument><expr><call><name><name pos:line="4904" pos:column="47">_pPublicInterface</name><op:operator pos:line="4904" pos:column="64">-&gt;</op:operator><name pos:line="4904" pos:column="66">getHinst</name></name><argument_list pos:line="4904" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4904" pos:column="78">_pPublicInterface</name><op:operator pos:line="4904" pos:column="95">-&gt;</op:operator><name pos:line="4904" pos:column="97">getHSelf</name></name><argument_list pos:line="4904" pos:column="105">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4904" pos:column="109">&amp;</op:operator><name pos:line="4904" pos:column="110">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4906" pos:column="17">tTbData</name></type>	<name pos:line="4906" pos:column="25">data</name> <init pos:line="4906" pos:column="30">= <expr><block pos:line="4906" pos:column="32">{<expr><lit:literal type="number" pos:line="4906" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4907" pos:column="17">_pClipboardHistoryPanel</name><op:operator pos:line="4907" pos:column="40">-&gt;</op:operator><name pos:line="4907" pos:column="42">create</name></name><argument_list pos:line="4907" pos:column="48">(<argument><expr><op:operator pos:line="4907" pos:column="49">&amp;</op:operator><name pos:line="4907" pos:column="50">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="4909" pos:column="17">::</op:operator><name pos:line="4909" pos:column="19">SendMessage</name></name><argument_list pos:line="4909" pos:column="30">(<argument><expr><call><name><name pos:line="4909" pos:column="31">_pPublicInterface</name><op:operator pos:line="4909" pos:column="48">-&gt;</op:operator><name pos:line="4909" pos:column="50">getHSelf</name></name><argument_list pos:line="4909" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4909" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="4909" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="4909" pos:column="105">(</op:operator><name pos:line="4909" pos:column="106">WPARAM</name><op:operator pos:line="4909" pos:column="112">)</op:operator><call><name><name pos:line="4909" pos:column="113">_pClipboardHistoryPanel</name><op:operator pos:line="4909" pos:column="136">-&gt;</op:operator><name pos:line="4909" pos:column="138">getHSelf</name></name><argument_list pos:line="4909" pos:column="146">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="4910" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="4911" pos:column="17">data</name><op:operator pos:line="4911" pos:column="21">.</op:operator><name pos:line="4911" pos:column="22">uMask</name></name> <op:operator pos:line="4911" pos:column="28">=</op:operator> <name pos:line="4911" pos:column="30">DWS_DF_CONT_RIGHT</name> <op:operator pos:line="4911" pos:column="48">|</op:operator> <name pos:line="4911" pos:column="50">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="4912" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="4913" pos:column="17">data</name><op:operator pos:line="4913" pos:column="21">.</op:operator><name pos:line="4913" pos:column="22">pszModuleName</name></name> <op:operator pos:line="4913" pos:column="36">=</op:operator> <name pos:line="4913" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="4915" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="4916" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="4917" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="4918" pos:column="17">data</name><op:operator pos:line="4918" pos:column="21">.</op:operator><name pos:line="4918" pos:column="22">dlgID</name></name> <op:operator pos:line="4918" pos:column="28">=</op:operator> <name pos:line="4918" pos:column="30">IDM_EDIT_CLIPBOARDHISTORY_PANEL</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="4919" pos:column="17">::</op:operator><name pos:line="4919" pos:column="19">SendMessage</name></name><argument_list pos:line="4919" pos:column="30">(<argument><expr><call><name><name pos:line="4919" pos:column="31">_pPublicInterface</name><op:operator pos:line="4919" pos:column="48">-&gt;</op:operator><name pos:line="4919" pos:column="50">getHSelf</name></name><argument_list pos:line="4919" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4919" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4919" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="4919" pos:column="86">(</op:operator><name pos:line="4919" pos:column="87">LPARAM</name><op:operator pos:line="4919" pos:column="93">)</op:operator><op:operator pos:line="4919" pos:column="94">&amp;</op:operator><name pos:line="4919" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4921" pos:column="9">_pClipboardHistoryPanel</name><op:operator pos:line="4921" pos:column="32">-&gt;</op:operator><name pos:line="4921" pos:column="34">display</name></name><argument_list pos:line="4921" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4924" pos:column="1">void</name></type> <name><name pos:line="4924" pos:column="6">Notepad_plus</name><op:operator pos:line="4924" pos:column="18">::</op:operator><name pos:line="4924" pos:column="20">launchFileSwitcherPanel</name></name><parameter_list pos:line="4924" pos:column="43">()</parameter_list>
<block pos:line="4925" pos:column="1">{
	<if pos:line="4926" pos:column="9">if <condition pos:line="4926" pos:column="12">(<expr><op:operator pos:line="4926" pos:column="13">!</op:operator><name pos:line="4926" pos:column="14">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="4926" pos:column="34">
	<block pos:line="4927" pos:column="9">{
		<expr_stmt><expr><name pos:line="4928" pos:column="17">_pFileSwitcherPanel</name> <op:operator pos:line="4928" pos:column="37">=</op:operator> <op:operator pos:line="4928" pos:column="39">new</op:operator> <name pos:line="4928" pos:column="43">VerticalFileSwitcher</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="4929" pos:column="17">HIMAGELIST</name></type> <name pos:line="4929" pos:column="28">hImgLst</name> <init pos:line="4929" pos:column="36">= <expr><call><name><name pos:line="4929" pos:column="38">_docTabIconList</name><op:operator pos:line="4929" pos:column="53">.</op:operator><name pos:line="4929" pos:column="54">getHandle</name></name><argument_list pos:line="4929" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4930" pos:column="17">_pFileSwitcherPanel</name><op:operator pos:line="4930" pos:column="36">-&gt;</op:operator><name pos:line="4930" pos:column="38">init</name></name><argument_list pos:line="4930" pos:column="42">(<argument><expr><call><name><name pos:line="4930" pos:column="43">_pPublicInterface</name><op:operator pos:line="4930" pos:column="60">-&gt;</op:operator><name pos:line="4930" pos:column="62">getHinst</name></name><argument_list pos:line="4930" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4930" pos:column="74">_pPublicInterface</name><op:operator pos:line="4930" pos:column="91">-&gt;</op:operator><name pos:line="4930" pos:column="93">getHSelf</name></name><argument_list pos:line="4930" pos:column="101">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4930" pos:column="105">hImgLst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4932" pos:column="17">tTbData</name></type>	<name pos:line="4932" pos:column="25">data</name> <init pos:line="4932" pos:column="30">= <expr><block pos:line="4932" pos:column="32">{<expr><lit:literal type="number" pos:line="4932" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4933" pos:column="17">_pFileSwitcherPanel</name><op:operator pos:line="4933" pos:column="36">-&gt;</op:operator><name pos:line="4933" pos:column="38">create</name></name><argument_list pos:line="4933" pos:column="44">(<argument><expr><op:operator pos:line="4933" pos:column="45">&amp;</op:operator><name pos:line="4933" pos:column="46">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="4935" pos:column="17">::</op:operator><name pos:line="4935" pos:column="19">SendMessage</name></name><argument_list pos:line="4935" pos:column="30">(<argument><expr><call><name><name pos:line="4935" pos:column="31">_pPublicInterface</name><op:operator pos:line="4935" pos:column="48">-&gt;</op:operator><name pos:line="4935" pos:column="50">getHSelf</name></name><argument_list pos:line="4935" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4935" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="4935" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="4935" pos:column="105">(</op:operator><name pos:line="4935" pos:column="106">WPARAM</name><op:operator pos:line="4935" pos:column="112">)</op:operator><call><name><name pos:line="4935" pos:column="113">_pFileSwitcherPanel</name><op:operator pos:line="4935" pos:column="132">-&gt;</op:operator><name pos:line="4935" pos:column="134">getHSelf</name></name><argument_list pos:line="4935" pos:column="142">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="4936" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="4937" pos:column="17">data</name><op:operator pos:line="4937" pos:column="21">.</op:operator><name pos:line="4937" pos:column="22">uMask</name></name> <op:operator pos:line="4937" pos:column="28">=</op:operator> <name pos:line="4937" pos:column="30">DWS_DF_CONT_LEFT</name> <op:operator pos:line="4937" pos:column="47">|</op:operator> <name pos:line="4937" pos:column="49">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="4938" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="4939" pos:column="17">data</name><op:operator pos:line="4939" pos:column="21">.</op:operator><name pos:line="4939" pos:column="22">pszModuleName</name></name> <op:operator pos:line="4939" pos:column="36">=</op:operator> <name pos:line="4939" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="4941" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="4942" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="4943" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="4944" pos:column="17">data</name><op:operator pos:line="4944" pos:column="21">.</op:operator><name pos:line="4944" pos:column="22">dlgID</name></name> <op:operator pos:line="4944" pos:column="28">=</op:operator> <name pos:line="4944" pos:column="30">IDM_VIEW_FILESWITCHER_PANEL</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="4945" pos:column="17">::</op:operator><name pos:line="4945" pos:column="19">SendMessage</name></name><argument_list pos:line="4945" pos:column="30">(<argument><expr><call><name><name pos:line="4945" pos:column="31">_pPublicInterface</name><op:operator pos:line="4945" pos:column="48">-&gt;</op:operator><name pos:line="4945" pos:column="50">getHSelf</name></name><argument_list pos:line="4945" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4945" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4945" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="4945" pos:column="86">(</op:operator><name pos:line="4945" pos:column="87">LPARAM</name><op:operator pos:line="4945" pos:column="93">)</op:operator><op:operator pos:line="4945" pos:column="94">&amp;</op:operator><name pos:line="4945" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4947" pos:column="9">_pFileSwitcherPanel</name><op:operator pos:line="4947" pos:column="28">-&gt;</op:operator><name pos:line="4947" pos:column="30">display</name></name><argument_list pos:line="4947" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4950" pos:column="1">void</name></type> <name><name pos:line="4950" pos:column="6">Notepad_plus</name><op:operator pos:line="4950" pos:column="18">::</op:operator><name pos:line="4950" pos:column="20">launchAnsiCharPanel</name></name><parameter_list pos:line="4950" pos:column="39">()</parameter_list>
<block pos:line="4951" pos:column="1">{
	<if pos:line="4952" pos:column="9">if <condition pos:line="4952" pos:column="12">(<expr><op:operator pos:line="4952" pos:column="13">!</op:operator><name pos:line="4952" pos:column="14">_pAnsiCharPanel</name></expr>)</condition><then pos:line="4952" pos:column="30">
	<block pos:line="4953" pos:column="9">{
		<expr_stmt><expr><name pos:line="4954" pos:column="17">_pAnsiCharPanel</name> <op:operator pos:line="4954" pos:column="33">=</op:operator> <op:operator pos:line="4954" pos:column="35">new</op:operator> <call><name pos:line="4954" pos:column="39">AnsiCharPanel</name><argument_list pos:line="4954" pos:column="52">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="4956" pos:column="17">_pAnsiCharPanel</name><op:operator pos:line="4956" pos:column="32">-&gt;</op:operator><name pos:line="4956" pos:column="34">init</name></name><argument_list pos:line="4956" pos:column="38">(<argument><expr><call><name><name pos:line="4956" pos:column="39">_pPublicInterface</name><op:operator pos:line="4956" pos:column="56">-&gt;</op:operator><name pos:line="4956" pos:column="58">getHinst</name></name><argument_list pos:line="4956" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4956" pos:column="70">_pPublicInterface</name><op:operator pos:line="4956" pos:column="87">-&gt;</op:operator><name pos:line="4956" pos:column="89">getHSelf</name></name><argument_list pos:line="4956" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4956" pos:column="101">&amp;</op:operator><name pos:line="4956" pos:column="102">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4958" pos:column="17">tTbData</name></type>	<name pos:line="4958" pos:column="25">data</name> <init pos:line="4958" pos:column="30">= <expr><block pos:line="4958" pos:column="32">{<expr><lit:literal type="number" pos:line="4958" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4959" pos:column="17">_pAnsiCharPanel</name><op:operator pos:line="4959" pos:column="32">-&gt;</op:operator><name pos:line="4959" pos:column="34">create</name></name><argument_list pos:line="4959" pos:column="40">(<argument><expr><op:operator pos:line="4959" pos:column="41">&amp;</op:operator><name pos:line="4959" pos:column="42">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="4961" pos:column="17">::</op:operator><name pos:line="4961" pos:column="19">SendMessage</name></name><argument_list pos:line="4961" pos:column="30">(<argument><expr><call><name><name pos:line="4961" pos:column="31">_pPublicInterface</name><op:operator pos:line="4961" pos:column="48">-&gt;</op:operator><name pos:line="4961" pos:column="50">getHSelf</name></name><argument_list pos:line="4961" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4961" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="4961" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="4961" pos:column="105">(</op:operator><name pos:line="4961" pos:column="106">WPARAM</name><op:operator pos:line="4961" pos:column="112">)</op:operator><call><name><name pos:line="4961" pos:column="113">_pAnsiCharPanel</name><op:operator pos:line="4961" pos:column="128">-&gt;</op:operator><name pos:line="4961" pos:column="130">getHSelf</name></name><argument_list pos:line="4961" pos:column="138">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="4962" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="4963" pos:column="17">data</name><op:operator pos:line="4963" pos:column="21">.</op:operator><name pos:line="4963" pos:column="22">uMask</name></name> <op:operator pos:line="4963" pos:column="28">=</op:operator> <name pos:line="4963" pos:column="30">DWS_DF_CONT_RIGHT</name> <op:operator pos:line="4963" pos:column="48">|</op:operator> <name pos:line="4963" pos:column="50">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="4964" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="4965" pos:column="17">data</name><op:operator pos:line="4965" pos:column="21">.</op:operator><name pos:line="4965" pos:column="22">pszModuleName</name></name> <op:operator pos:line="4965" pos:column="36">=</op:operator> <name pos:line="4965" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="4967" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="4968" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="4969" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="4970" pos:column="17">data</name><op:operator pos:line="4970" pos:column="21">.</op:operator><name pos:line="4970" pos:column="22">dlgID</name></name> <op:operator pos:line="4970" pos:column="28">=</op:operator> <name pos:line="4970" pos:column="30">IDM_EDIT_CHAR_PANEL</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="4971" pos:column="17">::</op:operator><name pos:line="4971" pos:column="19">SendMessage</name></name><argument_list pos:line="4971" pos:column="30">(<argument><expr><call><name><name pos:line="4971" pos:column="31">_pPublicInterface</name><op:operator pos:line="4971" pos:column="48">-&gt;</op:operator><name pos:line="4971" pos:column="50">getHSelf</name></name><argument_list pos:line="4971" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4971" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4971" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="4971" pos:column="86">(</op:operator><name pos:line="4971" pos:column="87">LPARAM</name><op:operator pos:line="4971" pos:column="93">)</op:operator><op:operator pos:line="4971" pos:column="94">&amp;</op:operator><name pos:line="4971" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4973" pos:column="9">_pAnsiCharPanel</name><op:operator pos:line="4973" pos:column="24">-&gt;</op:operator><name pos:line="4973" pos:column="26">display</name></name><argument_list pos:line="4973" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4976" pos:column="1">void</name></type> <name><name pos:line="4976" pos:column="6">Notepad_plus</name><op:operator pos:line="4976" pos:column="18">::</op:operator><name pos:line="4976" pos:column="20">launchProjectPanel</name></name><parameter_list pos:line="4976" pos:column="38">(<param><decl><type><name pos:line="4976" pos:column="39">int</name></type> <name pos:line="4976" pos:column="43">cmdID</name></decl></param>, <param><decl><type><name pos:line="4976" pos:column="50">ProjectPanel</name> <type:modifier pos:line="4976" pos:column="63">*</type:modifier><type:modifier pos:line="4976" pos:column="64">*</type:modifier></type> <name pos:line="4976" pos:column="66">pProjPanel</name></decl></param>, <param><decl><type><name pos:line="4976" pos:column="78">int</name></type> <name pos:line="4976" pos:column="82">panelID</name></decl></param>)</parameter_list>
<block pos:line="4977" pos:column="1">{
	<if pos:line="4978" pos:column="9">if <condition pos:line="4978" pos:column="12">(<expr><op:operator pos:line="4978" pos:column="13">!</op:operator><op:operator pos:line="4978" pos:column="14">(</op:operator><op:operator pos:line="4978" pos:column="15">*</op:operator><name pos:line="4978" pos:column="16">pProjPanel</name><op:operator pos:line="4978" pos:column="26">)</op:operator></expr>)</condition><then pos:line="4978" pos:column="28">
	<block pos:line="4979" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4980" pos:column="17">NppParameters</name> <type:modifier pos:line="4980" pos:column="31">*</type:modifier></type><name pos:line="4980" pos:column="32">pNppParam</name> <init pos:line="4980" pos:column="42">= <expr><call><name><name pos:line="4980" pos:column="44">NppParameters</name><op:operator pos:line="4980" pos:column="57">::</op:operator><name pos:line="4980" pos:column="59">getInstance</name></name><argument_list pos:line="4980" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><op:operator pos:line="4982" pos:column="17">(</op:operator><op:operator pos:line="4982" pos:column="18">*</op:operator><name pos:line="4982" pos:column="19">pProjPanel</name><op:operator pos:line="4982" pos:column="29">)</op:operator> <op:operator pos:line="4982" pos:column="31">=</op:operator> <op:operator pos:line="4982" pos:column="33">new</op:operator> <name pos:line="4982" pos:column="37">ProjectPanel</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4983" pos:column="17">(<type:modifier pos:line="4983" pos:column="18">*</type:modifier><name pos:line="4983" pos:column="19">pProjPanel</name>)<op:operator pos:line="4983" pos:column="30">-&gt;</op:operator><name pos:line="4983" pos:column="32">init</name></name><argument_list pos:line="4983" pos:column="36">(<argument><expr><call><name><name pos:line="4983" pos:column="37">_pPublicInterface</name><op:operator pos:line="4983" pos:column="54">-&gt;</op:operator><name pos:line="4983" pos:column="56">getHinst</name></name><argument_list pos:line="4983" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4983" pos:column="68">_pPublicInterface</name><op:operator pos:line="4983" pos:column="85">-&gt;</op:operator><name pos:line="4983" pos:column="87">getHSelf</name></name><argument_list pos:line="4983" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4984" pos:column="17">(<type:modifier pos:line="4984" pos:column="18">*</type:modifier><name pos:line="4984" pos:column="19">pProjPanel</name>)<op:operator pos:line="4984" pos:column="30">-&gt;</op:operator><name pos:line="4984" pos:column="32">setWorkSpaceFilePath</name></name><argument_list pos:line="4984" pos:column="52">(<argument><expr><call><name><name pos:line="4984" pos:column="53">pNppParam</name><op:operator pos:line="4984" pos:column="62">-&gt;</op:operator><name pos:line="4984" pos:column="64">getworkSpaceFilePath</name></name><argument_list pos:line="4984" pos:column="84">(<argument><expr><name pos:line="4984" pos:column="85">panelID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="4986" pos:column="17">tTbData</name></type>	<name pos:line="4986" pos:column="25">data</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="4987" pos:column="17">memset</name><argument_list pos:line="4987" pos:column="23">(<argument><expr><op:operator pos:line="4987" pos:column="24">&amp;</op:operator><name pos:line="4987" pos:column="25">data</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4987" pos:column="31">0</lit:literal></expr></argument>, <argument><expr><sizeof pos:line="4987" pos:column="34">sizeof<argument_list pos:line="4987" pos:column="40">(<argument><expr><name pos:line="4987" pos:column="41">data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4988" pos:column="17">(<type:modifier pos:line="4988" pos:column="18">*</type:modifier><name pos:line="4988" pos:column="19">pProjPanel</name>)<op:operator pos:line="4988" pos:column="30">-&gt;</op:operator><name pos:line="4988" pos:column="32">create</name></name><argument_list pos:line="4988" pos:column="38">(<argument><expr><op:operator pos:line="4988" pos:column="39">&amp;</op:operator><name pos:line="4988" pos:column="40">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4989" pos:column="17">data</name><op:operator pos:line="4989" pos:column="21">.</op:operator><name pos:line="4989" pos:column="22">pszName</name></name> <op:operator pos:line="4989" pos:column="30">=</op:operator> <call><name pos:line="4989" pos:column="32">TEXT</name><argument_list pos:line="4989" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4989" pos:column="37">"ST"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="4991" pos:column="17">::</op:operator><name pos:line="4991" pos:column="19">SendMessage</name></name><argument_list pos:line="4991" pos:column="30">(<argument><expr><call><name><name pos:line="4991" pos:column="31">_pPublicInterface</name><op:operator pos:line="4991" pos:column="48">-&gt;</op:operator><name pos:line="4991" pos:column="50">getHSelf</name></name><argument_list pos:line="4991" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4991" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="4991" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><call pos:line="4991" pos:column="105">(<name pos:line="4991" pos:column="106">WPARAM</name>)<argument_list pos:line="4991" pos:column="113">(<argument><expr><op:operator pos:line="4991" pos:column="114">*</op:operator><name pos:line="4991" pos:column="115">pProjPanel</name></expr></argument>)</argument_list></call><op:operator pos:line="4991" pos:column="126">-&gt;</op:operator><call><name pos:line="4991" pos:column="128">getHSelf</name><argument_list pos:line="4991" pos:column="136">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="4992" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="4993" pos:column="17">data</name><op:operator pos:line="4993" pos:column="21">.</op:operator><name pos:line="4993" pos:column="22">uMask</name></name> <op:operator pos:line="4993" pos:column="28">=</op:operator> <name pos:line="4993" pos:column="30">DWS_DF_CONT_LEFT</name> <op:operator pos:line="4993" pos:column="47">|</op:operator> <name pos:line="4993" pos:column="49">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="4994" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="4995" pos:column="17">data</name><op:operator pos:line="4995" pos:column="21">.</op:operator><name pos:line="4995" pos:column="22">pszModuleName</name></name> <op:operator pos:line="4995" pos:column="36">=</op:operator> <name pos:line="4995" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="4997" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="4998" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="4999" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="5000" pos:column="17">data</name><op:operator pos:line="5000" pos:column="21">.</op:operator><name pos:line="5000" pos:column="22">dlgID</name></name> <op:operator pos:line="5000" pos:column="28">=</op:operator> <name pos:line="5000" pos:column="30">cmdID</name></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="5002" pos:column="17">NativeLangSpeaker</name> <type:modifier pos:line="5002" pos:column="35">*</type:modifier></type><name pos:line="5002" pos:column="36">pNativeSpeaker</name> <init pos:line="5002" pos:column="51">= <expr><op:operator pos:line="5002" pos:column="53">(</op:operator><call><name><name pos:line="5002" pos:column="54">NppParameters</name><op:operator pos:line="5002" pos:column="67">::</op:operator><name pos:line="5002" pos:column="69">getInstance</name></name><argument_list pos:line="5002" pos:column="80">()</argument_list></call><op:operator pos:line="5002" pos:column="82">)</op:operator><op:operator pos:line="5002" pos:column="83">-&gt;</op:operator><call><name pos:line="5002" pos:column="85">getNativeLangSpeaker</name><argument_list pos:line="5002" pos:column="105">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5003" pos:column="17">generic_string</name></type> <name pos:line="5003" pos:column="32">title_temp</name> <init pos:line="5003" pos:column="43">= <expr><call><name><name pos:line="5003" pos:column="45">pNativeSpeaker</name><op:operator pos:line="5003" pos:column="59">-&gt;</op:operator><name pos:line="5003" pos:column="61">getProjectPanelLangStr</name></name><argument_list pos:line="5003" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="5003" pos:column="84">"PanelTitle"</lit:literal></expr></argument>, <argument><expr><name pos:line="5003" pos:column="98">PM_PROJECTPANELTITLE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="5005" pos:column="17">static</specifier> <name pos:line="5005" pos:column="24">TCHAR</name></type> <name><name pos:line="5005" pos:column="30">title</name><index pos:line="5005" pos:column="35">[<expr><lit:literal type="number" pos:line="5005" pos:column="36">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<if pos:line="5006" pos:column="17">if <condition pos:line="5006" pos:column="20">(<expr><call><name><name pos:line="5006" pos:column="21">title_temp</name><op:operator pos:line="5006" pos:column="31">.</op:operator><name pos:line="5006" pos:column="32">length</name></name><argument_list pos:line="5006" pos:column="38">()</argument_list></call> <op:operator pos:line="5006" pos:column="41">&lt;</op:operator> <lit:literal type="number" pos:line="5006" pos:column="43">32</lit:literal></expr>)</condition><then pos:line="5006" pos:column="46">
		<block pos:line="5007" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="5008" pos:column="25">lstrcpy</name><argument_list pos:line="5008" pos:column="32">(<argument><expr><name pos:line="5008" pos:column="33">title</name></expr></argument>, <argument><expr><call><name><name pos:line="5008" pos:column="40">title_temp</name><op:operator pos:line="5008" pos:column="50">.</op:operator><name pos:line="5008" pos:column="51">c_str</name></name><argument_list pos:line="5008" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="5009" pos:column="25">data</name><op:operator pos:line="5009" pos:column="29">.</op:operator><name pos:line="5009" pos:column="30">pszName</name></name> <op:operator pos:line="5009" pos:column="38">=</op:operator> <name pos:line="5009" pos:column="40">title</name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><op:operator pos:line="5011" pos:column="17">::</op:operator><name pos:line="5011" pos:column="19">SendMessage</name></name><argument_list pos:line="5011" pos:column="30">(<argument><expr><call><name><name pos:line="5011" pos:column="31">_pPublicInterface</name><op:operator pos:line="5011" pos:column="48">-&gt;</op:operator><name pos:line="5011" pos:column="50">getHSelf</name></name><argument_list pos:line="5011" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5011" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5011" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5011" pos:column="86">(</op:operator><name pos:line="5011" pos:column="87">LPARAM</name><op:operator pos:line="5011" pos:column="93">)</op:operator><op:operator pos:line="5011" pos:column="94">&amp;</op:operator><name pos:line="5011" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="5013" pos:column="9">(<type:modifier pos:line="5013" pos:column="10">*</type:modifier><name pos:line="5013" pos:column="11">pProjPanel</name>)<op:operator pos:line="5013" pos:column="22">-&gt;</op:operator><name pos:line="5013" pos:column="24">display</name></name><argument_list pos:line="5013" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5016" pos:column="1">void</name></type> <name><name pos:line="5016" pos:column="6">Notepad_plus</name><op:operator pos:line="5016" pos:column="18">::</op:operator><name pos:line="5016" pos:column="20">launchDocMap</name></name><parameter_list pos:line="5016" pos:column="32">()</parameter_list>
<block pos:line="5017" pos:column="1">{
	<if pos:line="5018" pos:column="9">if <condition pos:line="5018" pos:column="12">(<expr><op:operator pos:line="5018" pos:column="13">!</op:operator><op:operator pos:line="5018" pos:column="14">(</op:operator><call><name><name pos:line="5018" pos:column="15">NppParameters</name><op:operator pos:line="5018" pos:column="28">::</op:operator><name pos:line="5018" pos:column="30">getInstance</name></name><argument_list pos:line="5018" pos:column="41">()</argument_list></call><op:operator pos:line="5018" pos:column="43">)</op:operator><op:operator pos:line="5018" pos:column="44">-&gt;</op:operator><call><name pos:line="5018" pos:column="46">isTransparentAvailable</name><argument_list pos:line="5018" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="5018" pos:column="71">
	<block pos:line="5019" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="5020" pos:column="17">::</op:operator><name pos:line="5020" pos:column="19">MessageBox</name></name><argument_list pos:line="5020" pos:column="29">(<argument><expr><name pos:line="5020" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="5020" pos:column="36">TEXT</name><argument_list pos:line="5020" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="5020" pos:column="41">"It seems you still use a prehistoric system, This feature works only on a modern system, sorry."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5020" pos:column="141">TEXT</name><argument_list pos:line="5020" pos:column="145">(<argument><expr><lit:literal type="string" pos:line="5020" pos:column="146">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5020" pos:column="151">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="5021" pos:column="17">return;</return>
	}</block></then></if>

	<if pos:line="5024" pos:column="9">if <condition pos:line="5024" pos:column="12">(<expr><op:operator pos:line="5024" pos:column="13">!</op:operator><name pos:line="5024" pos:column="14">_pDocMap</name></expr>)</condition><then pos:line="5024" pos:column="23">
	<block pos:line="5025" pos:column="9">{
		<expr_stmt><expr><name pos:line="5026" pos:column="17">_pDocMap</name> <op:operator pos:line="5026" pos:column="26">=</op:operator> <op:operator pos:line="5026" pos:column="28">new</op:operator> <call><name pos:line="5026" pos:column="32">DocumentMap</name><argument_list pos:line="5026" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5027" pos:column="17">_pDocMap</name><op:operator pos:line="5027" pos:column="25">-&gt;</op:operator><name pos:line="5027" pos:column="27">init</name></name><argument_list pos:line="5027" pos:column="31">(<argument><expr><call><name><name pos:line="5027" pos:column="32">_pPublicInterface</name><op:operator pos:line="5027" pos:column="49">-&gt;</op:operator><name pos:line="5027" pos:column="51">getHinst</name></name><argument_list pos:line="5027" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5027" pos:column="63">_pPublicInterface</name><op:operator pos:line="5027" pos:column="80">-&gt;</op:operator><name pos:line="5027" pos:column="82">getHSelf</name></name><argument_list pos:line="5027" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5027" pos:column="94">&amp;</op:operator><name pos:line="5027" pos:column="95">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="5029" pos:column="17">tTbData</name></type>	<name pos:line="5029" pos:column="25">data</name> <init pos:line="5029" pos:column="30">= <expr><block pos:line="5029" pos:column="32">{<expr><lit:literal type="number" pos:line="5029" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="5030" pos:column="17">_pDocMap</name><op:operator pos:line="5030" pos:column="25">-&gt;</op:operator><name pos:line="5030" pos:column="27">create</name></name><argument_list pos:line="5030" pos:column="33">(<argument><expr><op:operator pos:line="5030" pos:column="34">&amp;</op:operator><name pos:line="5030" pos:column="35">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="5032" pos:column="17">::</op:operator><name pos:line="5032" pos:column="19">SendMessage</name></name><argument_list pos:line="5032" pos:column="30">(<argument><expr><call><name><name pos:line="5032" pos:column="31">_pPublicInterface</name><op:operator pos:line="5032" pos:column="48">-&gt;</op:operator><name pos:line="5032" pos:column="50">getHSelf</name></name><argument_list pos:line="5032" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5032" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="5032" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="5032" pos:column="105">(</op:operator><name pos:line="5032" pos:column="106">WPARAM</name><op:operator pos:line="5032" pos:column="112">)</op:operator><call><name><name pos:line="5032" pos:column="113">_pDocMap</name><op:operator pos:line="5032" pos:column="121">-&gt;</op:operator><name pos:line="5032" pos:column="123">getHSelf</name></name><argument_list pos:line="5032" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="5033" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="5034" pos:column="17">data</name><op:operator pos:line="5034" pos:column="21">.</op:operator><name pos:line="5034" pos:column="22">uMask</name></name> <op:operator pos:line="5034" pos:column="28">=</op:operator> <name pos:line="5034" pos:column="30">DWS_DF_CONT_RIGHT</name> <op:operator pos:line="5034" pos:column="48">|</op:operator> <name pos:line="5034" pos:column="50">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="5035" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="5036" pos:column="17">data</name><op:operator pos:line="5036" pos:column="21">.</op:operator><name pos:line="5036" pos:column="22">pszModuleName</name></name> <op:operator pos:line="5036" pos:column="36">=</op:operator> <name pos:line="5036" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="5038" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="5039" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="5040" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="5041" pos:column="17">data</name><op:operator pos:line="5041" pos:column="21">.</op:operator><name pos:line="5041" pos:column="22">dlgID</name></name> <op:operator pos:line="5041" pos:column="28">=</op:operator> <name pos:line="5041" pos:column="30">IDM_VIEW_DOC_MAP</name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="5043" pos:column="17">::</op:operator><name pos:line="5043" pos:column="19">SendMessage</name></name><argument_list pos:line="5043" pos:column="30">(<argument><expr><call><name><name pos:line="5043" pos:column="31">_pPublicInterface</name><op:operator pos:line="5043" pos:column="48">-&gt;</op:operator><name pos:line="5043" pos:column="50">getHSelf</name></name><argument_list pos:line="5043" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5043" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5043" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5043" pos:column="86">(</op:operator><name pos:line="5043" pos:column="87">LPARAM</name><op:operator pos:line="5043" pos:column="93">)</op:operator><op:operator pos:line="5043" pos:column="94">&amp;</op:operator><name pos:line="5043" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="5046" pos:column="9">_pDocMap</name><op:operator pos:line="5046" pos:column="17">-&gt;</op:operator><name pos:line="5046" pos:column="19">initWrapMap</name></name><argument_list pos:line="5046" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="5047" pos:column="9">_pDocMap</name><op:operator pos:line="5047" pos:column="17">-&gt;</op:operator><name pos:line="5047" pos:column="19">wrapMap</name></name><argument_list pos:line="5047" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="5048" pos:column="9">_pDocMap</name><op:operator pos:line="5048" pos:column="17">-&gt;</op:operator><name pos:line="5048" pos:column="19">display</name></name><argument_list pos:line="5048" pos:column="26">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="5050" pos:column="9">_pEditView</name><op:operator pos:line="5050" pos:column="19">-&gt;</op:operator><name pos:line="5050" pos:column="21">getFocus</name></name><argument_list pos:line="5050" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5053" pos:column="1">void</name></type> <name><name pos:line="5053" pos:column="6">Notepad_plus</name><op:operator pos:line="5053" pos:column="18">::</op:operator><name pos:line="5053" pos:column="20">launchFunctionList</name></name><parameter_list pos:line="5053" pos:column="38">()</parameter_list>
<block pos:line="5054" pos:column="1">{
	<if pos:line="5055" pos:column="9">if <condition pos:line="5055" pos:column="12">(<expr><op:operator pos:line="5055" pos:column="13">!</op:operator><name pos:line="5055" pos:column="14">_pFuncList</name></expr>)</condition><then pos:line="5055" pos:column="25">
	<block pos:line="5056" pos:column="9">{
		<expr_stmt><expr><name pos:line="5057" pos:column="17">_pFuncList</name> <op:operator pos:line="5057" pos:column="28">=</op:operator> <op:operator pos:line="5057" pos:column="30">new</op:operator> <call><name pos:line="5057" pos:column="34">FunctionListPanel</name><argument_list pos:line="5057" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5058" pos:column="17">_pFuncList</name><op:operator pos:line="5058" pos:column="27">-&gt;</op:operator><name pos:line="5058" pos:column="29">init</name></name><argument_list pos:line="5058" pos:column="33">(<argument><expr><call><name><name pos:line="5058" pos:column="34">_pPublicInterface</name><op:operator pos:line="5058" pos:column="51">-&gt;</op:operator><name pos:line="5058" pos:column="53">getHinst</name></name><argument_list pos:line="5058" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5058" pos:column="65">_pPublicInterface</name><op:operator pos:line="5058" pos:column="82">-&gt;</op:operator><name pos:line="5058" pos:column="84">getHSelf</name></name><argument_list pos:line="5058" pos:column="92">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5058" pos:column="96">&amp;</op:operator><name pos:line="5058" pos:column="97">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="5060" pos:column="17">tTbData</name></type>	<name pos:line="5060" pos:column="25">data</name> <init pos:line="5060" pos:column="30">= <expr><block pos:line="5060" pos:column="32">{<expr><lit:literal type="number" pos:line="5060" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="5061" pos:column="17">_pFuncList</name><op:operator pos:line="5061" pos:column="27">-&gt;</op:operator><name pos:line="5061" pos:column="29">create</name></name><argument_list pos:line="5061" pos:column="35">(<argument><expr><op:operator pos:line="5061" pos:column="36">&amp;</op:operator><name pos:line="5061" pos:column="37">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="5063" pos:column="17">::</op:operator><name pos:line="5063" pos:column="19">SendMessage</name></name><argument_list pos:line="5063" pos:column="30">(<argument><expr><call><name><name pos:line="5063" pos:column="31">_pPublicInterface</name><op:operator pos:line="5063" pos:column="48">-&gt;</op:operator><name pos:line="5063" pos:column="50">getHSelf</name></name><argument_list pos:line="5063" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5063" pos:column="62">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="5063" pos:column="83">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="5063" pos:column="105">(</op:operator><name pos:line="5063" pos:column="106">WPARAM</name><op:operator pos:line="5063" pos:column="112">)</op:operator><call><name><name pos:line="5063" pos:column="113">_pFuncList</name><op:operator pos:line="5063" pos:column="123">-&gt;</op:operator><name pos:line="5063" pos:column="125">getHSelf</name></name><argument_list pos:line="5063" pos:column="133">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="5064" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="5065" pos:column="17">data</name><op:operator pos:line="5065" pos:column="21">.</op:operator><name pos:line="5065" pos:column="22">uMask</name></name> <op:operator pos:line="5065" pos:column="28">=</op:operator> <name pos:line="5065" pos:column="30">DWS_DF_CONT_RIGHT</name> <op:operator pos:line="5065" pos:column="48">|</op:operator> <name pos:line="5065" pos:column="50">DWS_ICONTAB</name></expr>;</expr_stmt>
		<comment type="line" pos:line="5066" pos:column="17">//data.hIconTab = (HICON)::LoadImage(_pPublicInterface-&gt;getHinst(), MAKEINTRESOURCE(IDI_FIND_RESULT_ICON), IMAGE_ICON, 0, 0, LR_LOADMAP3DCOLORS | LR_LOADTRANSPARENT);</comment>
		<expr_stmt><expr><name><name pos:line="5067" pos:column="17">data</name><op:operator pos:line="5067" pos:column="21">.</op:operator><name pos:line="5067" pos:column="22">pszModuleName</name></name> <op:operator pos:line="5067" pos:column="36">=</op:operator> <name pos:line="5067" pos:column="38">NPP_INTERNAL_FUCTION_STR</name></expr>;</expr_stmt>

		<comment type="line" pos:line="5069" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="5070" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<comment type="line" pos:line="5071" pos:column="17">// In the case of Notepad++ internal function, it'll be the command ID which triggers this dialog</comment>
		<expr_stmt><expr><name><name pos:line="5072" pos:column="17">data</name><op:operator pos:line="5072" pos:column="21">.</op:operator><name pos:line="5072" pos:column="22">dlgID</name></name> <op:operator pos:line="5072" pos:column="28">=</op:operator> <name pos:line="5072" pos:column="30">IDM_VIEW_FUNC_LIST</name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="5074" pos:column="17">::</op:operator><name pos:line="5074" pos:column="19">SendMessage</name></name><argument_list pos:line="5074" pos:column="30">(<argument><expr><call><name><name pos:line="5074" pos:column="31">_pPublicInterface</name><op:operator pos:line="5074" pos:column="48">-&gt;</op:operator><name pos:line="5074" pos:column="50">getHSelf</name></name><argument_list pos:line="5074" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5074" pos:column="62">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5074" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5074" pos:column="86">(</op:operator><name pos:line="5074" pos:column="87">LPARAM</name><op:operator pos:line="5074" pos:column="93">)</op:operator><op:operator pos:line="5074" pos:column="94">&amp;</op:operator><name pos:line="5074" pos:column="95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="5077" pos:column="9">//_pDocMap-&gt;initWrapMap();</comment>
	<comment type="line" pos:line="5078" pos:column="9">//_pDocMap-&gt;wrapMap();</comment>
	<expr_stmt><expr><call><name><name pos:line="5079" pos:column="9">_pFuncList</name><op:operator pos:line="5079" pos:column="19">-&gt;</op:operator><name pos:line="5079" pos:column="21">display</name></name><argument_list pos:line="5079" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="5081" pos:column="9">_pEditView</name><op:operator pos:line="5081" pos:column="19">-&gt;</op:operator><name pos:line="5081" pos:column="21">getFocus</name></name><argument_list pos:line="5081" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<struct pos:line="5084" pos:column="1">struct <name pos:line="5084" pos:column="8">TextPlayerParams</name> <block pos:line="5084" pos:column="25">{<public type="default" pos:line="5084" pos:column="26">
	<decl_stmt><decl><type><name pos:line="5085" pos:column="9">HWND</name></type> <name pos:line="5085" pos:column="14">_nppHandle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5086" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="5086" pos:column="27">*</type:modifier></type><name pos:line="5086" pos:column="28">_pCurrentView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5087" pos:column="9">const</specifier> <name pos:line="5087" pos:column="15">char</name> <type:modifier pos:line="5087" pos:column="20">*</type:modifier></type><name pos:line="5087" pos:column="21">_text2display</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5088" pos:column="9">const</specifier> <name pos:line="5088" pos:column="15">char</name> <type:modifier pos:line="5088" pos:column="20">*</type:modifier></type><name pos:line="5088" pos:column="21">_quoter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5089" pos:column="9">bool</name></type> <name pos:line="5089" pos:column="14">_shouldBeTrolling</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="5092" pos:column="1">struct <name pos:line="5092" pos:column="8">TextTrollerParams</name> <block pos:line="5092" pos:column="26">{<public type="default" pos:line="5092" pos:column="27">
	<decl_stmt><decl><type><name pos:line="5093" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="5093" pos:column="27">*</type:modifier></type><name pos:line="5093" pos:column="28">_pCurrentView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5094" pos:column="9">const</specifier> <name pos:line="5094" pos:column="15">char</name> <type:modifier pos:line="5094" pos:column="20">*</type:modifier></type><name pos:line="5094" pos:column="21">_text2display</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5095" pos:column="9">BufferID</name></type> <name pos:line="5095" pos:column="18">_targetBufID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5096" pos:column="9">HANDLE</name></type> <name pos:line="5096" pos:column="16">_mutex</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="5099" pos:column="1">struct <name pos:line="5099" pos:column="8">Quote</name><block pos:line="5099" pos:column="13">{<public type="default" pos:line="5099" pos:column="14">
	<decl_stmt><decl><type><specifier pos:line="5100" pos:column="9">const</specifier> <name pos:line="5100" pos:column="15">char</name> <type:modifier pos:line="5100" pos:column="20">*</type:modifier></type><name pos:line="5100" pos:column="21">_quoter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5101" pos:column="9">const</specifier> <name pos:line="5101" pos:column="15">char</name> <type:modifier pos:line="5101" pos:column="20">*</type:modifier></type><name pos:line="5101" pos:column="21">_quote</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<decl_stmt><decl><type><specifier pos:line="5104" pos:column="1">const</specifier> <name pos:line="5104" pos:column="7">int</name></type> <name pos:line="5104" pos:column="11">nbQuote</name> <init pos:line="5104" pos:column="19">= <expr><lit:literal type="number" pos:line="5104" pos:column="21">100</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="5105" pos:column="1">Quote</name></type> <name><name pos:line="5105" pos:column="7">quotes</name><index pos:line="5105" pos:column="13">[<expr><name pos:line="5105" pos:column="14">nbQuote</name></expr>]</index></name> <init pos:line="5105" pos:column="23">= <expr><block pos:line="5105" pos:column="25">{
<expr><block pos:line="5106" pos:column="1">{<expr><lit:literal type="string" pos:line="5106" pos:column="2">"Notepad++"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5106" pos:column="15">"RTFM is the true path of every developer.\nBut it would happen only if there's no way out."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5107" pos:column="1">{<expr><lit:literal type="string" pos:line="5107" pos:column="2">"Martin Golding"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5107" pos:column="20">"Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5108" pos:column="1">{<expr><lit:literal type="string" pos:line="5108" pos:column="2">"L. Peter Deutsch"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5108" pos:column="22">"To iterate is human, to recurse divine."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5109" pos:column="1">{<expr><lit:literal type="string" pos:line="5109" pos:column="2">"Seymour Cray"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5109" pos:column="18">"The trouble with programmers is that you can never tell what a programmer is doing until it's too late."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5110" pos:column="1">{<expr><lit:literal type="string" pos:line="5110" pos:column="2">"Brian Kernighan"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5110" pos:column="21">"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5111" pos:column="1">{<expr><lit:literal type="string" pos:line="5111" pos:column="2">"Alan Kay"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5111" pos:column="14">"Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5112" pos:column="1">{<expr><lit:literal type="string" pos:line="5112" pos:column="2">"Bill Gates"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5112" pos:column="16">"Measuring programming progress by lines of code is like measuring aircraft building progress by weight."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5113" pos:column="1">{<expr><lit:literal type="string" pos:line="5113" pos:column="2">"Christopher Thompson"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5113" pos:column="26">"Sometimes it pays to stay in bed on Monday, rather than spending the rest of the week debugging Monday's code."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5114" pos:column="1">{<expr><lit:literal type="string" pos:line="5114" pos:column="2">"Vidiu Platon"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5114" pos:column="18">"I don't care if it works on your machine! We are not shipping your machine!"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5115" pos:column="1">{<expr><lit:literal type="string" pos:line="5115" pos:column="2">"Edward V Berard"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5115" pos:column="21">"Walking on water and developing software from a specification are easy if both are frozen."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5116" pos:column="1">{<expr><lit:literal type="string" pos:line="5116" pos:column="2">"pixadel"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5116" pos:column="13">"Fine, Java MIGHT be a good example of what a programming language should be like. But Java applications are good examples of what applications SHOULDN'T be like."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5117" pos:column="1">{<expr><lit:literal type="string" pos:line="5117" pos:column="2">"Oktal"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5117" pos:column="11">"I think Microsoft named .Net so it wouldn't show up in a Unix directory listing."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5118" pos:column="1">{<expr><lit:literal type="string" pos:line="5118" pos:column="2">"Bjarne Stroustrup"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5118" pos:column="23">"In C++ it's harder to shoot yourself in the foot, but when you do, you blow off your whole leg."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5119" pos:column="1">{<expr><lit:literal type="string" pos:line="5119" pos:column="2">"Mosher's Law of Software Engineering"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5119" pos:column="42">"Don't worry if it doesn't work right. If everything did, you'd be out of a job."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5120" pos:column="1">{<expr><lit:literal type="string" pos:line="5120" pos:column="2">"Bob Gray"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5120" pos:column="14">"Writing in C or C++ is like running a chain saw with all the safety guards removed."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5121" pos:column="1">{<expr><lit:literal type="string" pos:line="5121" pos:column="2">"Roberto Waltman"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5121" pos:column="21">"In the one and only true way. The object-oriented version of \"Spaghetti code\" is, of course, \"Lasagna code\". (Too many layers)"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5122" pos:column="1">{<expr><lit:literal type="string" pos:line="5122" pos:column="2">"Gavin Russell Baker"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5122" pos:column="25">"C++ : Where friends have access to your private members."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5123" pos:column="1">{<expr><lit:literal type="string" pos:line="5123" pos:column="2">"Alanna"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5123" pos:column="12">"Saying that Java is nice because it works on all OSes is like saying that anal sex is nice because it works on all genders."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5124" pos:column="1">{<expr><lit:literal type="string" pos:line="5124" pos:column="2">"Linus Torvalds"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5124" pos:column="20">"Software is like sex: It's better when it's free."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5125" pos:column="1">{<expr><lit:literal type="string" pos:line="5125" pos:column="2">"Cult of vi"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5125" pos:column="16">"Emacs is a great operating system, lacking only a decent editor."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5126" pos:column="1">{<expr><lit:literal type="string" pos:line="5126" pos:column="2">"Church of Emacs"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5126" pos:column="21">"vi has two modes  \"beep repeatedly\" and \"break everything\"."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5127" pos:column="1">{<expr><lit:literal type="string" pos:line="5127" pos:column="2">"Steve Jobs"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5127" pos:column="16">"Picasso had a saying: \"Good artists copy, great artists steal.\".\nWe have always been shameless about stealing great ideas."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5128" pos:column="1">{<expr><lit:literal type="string" pos:line="5128" pos:column="2">"brotips #1001"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5128" pos:column="19">"Do everything for greatness, not money. Money follows greatness."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5129" pos:column="1">{<expr><lit:literal type="string" pos:line="5129" pos:column="2">"brotips #1212"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5129" pos:column="19">"Cheating is like eating fast food: you do it, you enjoy it, and then you feel like shit."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5130" pos:column="1">{<expr><lit:literal type="string" pos:line="5130" pos:column="2">"Robin Williams"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5130" pos:column="20">"God gave men both a penis and a brain, but unfortunately not enough blood supply to run both at the same time."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5131" pos:column="1">{<expr><lit:literal type="string" pos:line="5131" pos:column="2">"Darth Vader"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5131" pos:column="17">"You don't get to 500 million star systems without making a few enemies."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5132" pos:column="1">{<expr><lit:literal type="string" pos:line="5132" pos:column="2">"Doug Linder"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5132" pos:column="17">"A good programmer is someone who always looks both ways before crossing a one-way street."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5133" pos:column="1">{<expr><lit:literal type="string" pos:line="5133" pos:column="2">"Jean-Claude van Damme"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5133" pos:column="27">"A cookie has no soul, it's just a cookie. But before it was milk and eggs.\nAnd in eggs there's the potential for life."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5134" pos:column="1">{<expr><lit:literal type="string" pos:line="5134" pos:column="2">"Don Ho"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5134" pos:column="12">"Je mange donc je chie."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5135" pos:column="1">{<expr><lit:literal type="string" pos:line="5135" pos:column="2">"Anonymous #1"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5135" pos:column="18">"Does your ass ever get jealous of all the shit that comes out of your month?"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5136" pos:column="1">{<expr><lit:literal type="string" pos:line="5136" pos:column="2">"Anonymous #2"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5136" pos:column="18">"Before sex, you help each other get naked, after sex you only dress yourself.\nMoral of the story: in life no one helps you once you're fucked."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5137" pos:column="1">{<expr><lit:literal type="string" pos:line="5137" pos:column="2">"Anonymous #3"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5137" pos:column="18">"I'm not totally useless. I can be used as a bad example."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5138" pos:column="1">{<expr><lit:literal type="string" pos:line="5138" pos:column="2">"Anonymous #4"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5138" pos:column="18">"Life is too short to remove USB safely."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5139" pos:column="1">{<expr><lit:literal type="string" pos:line="5139" pos:column="2">"Anonymous #5"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5139" pos:column="18">"\"SEX\" is not the answer.\nSex is the question, \"YES\" is the answer."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5140" pos:column="1">{<expr><lit:literal type="string" pos:line="5140" pos:column="2">"Anonymous #6"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5140" pos:column="18">"Going to Mc Donald's for a salad is like going to a whore for a hug."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5141" pos:column="1">{<expr><lit:literal type="string" pos:line="5141" pos:column="2">"Anonymous #7"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5141" pos:column="18">"I need a six month holiday, TWICE A YEAR!"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5142" pos:column="1">{<expr><lit:literal type="string" pos:line="5142" pos:column="2">"Anonymous #8"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5142" pos:column="18">"A world without woman would be a pain in the ass!!!"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5143" pos:column="1">{<expr><lit:literal type="string" pos:line="5143" pos:column="2">"Anonymous #9"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5143" pos:column="18">"I just read a list of \"the 100 things to do before you die\". I'm pretty surprised \"yell for help\" wasn't one of them..."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5144" pos:column="1">{<expr><lit:literal type="string" pos:line="5144" pos:column="2">"Anonymous #10"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5144" pos:column="19">"Roses are red,\nViolets are red,\nTulips are red,\nBushes are red,\nTrees are red,\nHOLY SHIT MY\nGARDEN'S ON FIRE!!"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5145" pos:column="1">{<expr><lit:literal type="string" pos:line="5145" pos:column="2">"Anonymous #11"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5145" pos:column="19">"We stopped checking for monsters under our bed, when we realized they were inside us."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5146" pos:column="1">{<expr><lit:literal type="string" pos:line="5146" pos:column="2">"Anonymous #12"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5146" pos:column="19">"I would rather check my facebook than face my checkbook."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5147" pos:column="1">{<expr><lit:literal type="string" pos:line="5147" pos:column="2">"Anonymous #13"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5147" pos:column="19">"Whoever says Paper beats Rock is an idiot. Next time I see someone say that I will throw a rock at them while they hold up a sheet of paper."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5148" pos:column="1">{<expr><lit:literal type="string" pos:line="5148" pos:column="2">"Anonymous #14"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5148" pos:column="19">"A better world is where chickens can cross the road without having their motives questioned."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5149" pos:column="1">{<expr><lit:literal type="string" pos:line="5149" pos:column="2">"Anonymous #15"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5149" pos:column="19">"Life is like a penis, simple, soft, straight, relaxed and hanging freely.\nThen women make it hard."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5150" pos:column="1">{<expr><lit:literal type="string" pos:line="5150" pos:column="2">"Anonymous #16"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5150" pos:column="19">"What you do after sex?\n  A. Smoke a cigarette\n  B. Kiss your partener\n  C. Clear browser history\n"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5151" pos:column="1">{<expr><lit:literal type="string" pos:line="5151" pos:column="2">"Anonymous #17"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5151" pos:column="19">"All you need is love,\nall you want is sex,\nall you have is porn.\n"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5152" pos:column="1">{<expr><lit:literal type="string" pos:line="5152" pos:column="2">"Anonymous #18"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5152" pos:column="19">"Never get into fights with ugly people, they have nothing to lose."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5153" pos:column="1">{<expr><lit:literal type="string" pos:line="5153" pos:column="2">"Anonymous #19"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5153" pos:column="19">"F_CK: All I need is U."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5154" pos:column="1">{<expr><lit:literal type="string" pos:line="5154" pos:column="2">"Anonymous #20"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5154" pos:column="19">"Never make eye contact when eating a banana."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5155" pos:column="1">{<expr><lit:literal type="string" pos:line="5155" pos:column="2">"Anonymous #21"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5155" pos:column="19">"I love my sixpack so much, I protect it with a layer of fat."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5156" pos:column="1">{<expr><lit:literal type="string" pos:line="5156" pos:column="2">"Anonymous #22"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5156" pos:column="19">"\"It's impossible.\" said pride.\n\"It's risky.\" said experience.\n\"It's pointless.\" said reason.\n\"Give it a try.\" whispered the heart.\n...\n\"What the hell was that?!?!?!?!?!.\" shouted the anus two minutes later."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5157" pos:column="1">{<expr><lit:literal type="string" pos:line="5157" pos:column="2">"Anonymous #23"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5157" pos:column="19">"Everybody talks about leaving a better planet for the children.\nWhy nobody tries to leave better children to the planet?"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5158" pos:column="1">{<expr><lit:literal type="string" pos:line="5158" pos:column="2">"Anonymous #24"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5158" pos:column="19">"I'm not saying I hate her.\nI just hope she gets fingered by wolverine"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5159" pos:column="1">{<expr><lit:literal type="string" pos:line="5159" pos:column="2">"Anonymous #25"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5159" pos:column="19">"In a way, I feel sorry for the kids of this generation.\nThey'll have parents who know how to check browser history."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5160" pos:column="1">{<expr><lit:literal type="string" pos:line="5160" pos:column="2">"Anonymous #26"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5160" pos:column="19">"I would nerver bungee jump...\nI came into this world because of a broken rubber, and I'm not going out cause of one..."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5161" pos:column="1">{<expr><lit:literal type="string" pos:line="5161" pos:column="2">"Anonymous #27"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5161" pos:column="19">"I'm no gynecologist, but I know a cunt when I see one."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5162" pos:column="1">{<expr><lit:literal type="string" pos:line="5162" pos:column="2">"Anonymous #28"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5162" pos:column="19">"Why 6 afraid of 7?\nBecause 7 8 9 (seven ate nine) while 6 and 9 were flirting."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5163" pos:column="1">{<expr><lit:literal type="string" pos:line="5163" pos:column="2">"Anonymous #29"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5163" pos:column="19">"The reason women will never be the ones to propose is\nbecause as soon as she gets on her knees,\nhe will start unzipping."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5164" pos:column="1">{<expr><lit:literal type="string" pos:line="5164" pos:column="2">"Anonymous #30"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5164" pos:column="19">"Why do Java deveolpers wear glasses?\nBecause they don't C#."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5165" pos:column="1">{<expr><lit:literal type="string" pos:line="5165" pos:column="2">"Anonymous #31"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5165" pos:column="19">"Non alcoholic beer is like licking your sister.\nIt tastes right but it is wrong."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5166" pos:column="1">{<expr><lit:literal type="string" pos:line="5166" pos:column="2">"Anonymous #32"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5166" pos:column="19">"Two bytes meet. The first byte asks, \"You look terrible. Are you OK?\"\nThe second byte replies, \"No, just feeling a bit off.\""</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5167" pos:column="1">{<expr><lit:literal type="string" pos:line="5167" pos:column="2">"Anonymous #33"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5167" pos:column="19">"Programmer - an organism that turns coffee into software."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5168" pos:column="1">{<expr><lit:literal type="string" pos:line="5168" pos:column="2">"Anonymous #34"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5168" pos:column="19">"It's not a bug - it's an undocumented feature."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5169" pos:column="1">{<expr><lit:literal type="string" pos:line="5169" pos:column="2">"Anonymous #35"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5169" pos:column="19">"Should array index start at 0 or 1?\nMy compromised solution is 0.5"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5170" pos:column="1">{<expr><lit:literal type="string" pos:line="5170" pos:column="2">"Anonymous #36"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5170" pos:column="19">"Every single time when I'm about to hug someone extremely sexy, I hit the miror."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5171" pos:column="1">{<expr><lit:literal type="string" pos:line="5171" pos:column="2">"Anonymous #37"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5171" pos:column="19">"My software never has bugs. It just develops random features."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5172" pos:column="1">{<expr><lit:literal type="string" pos:line="5172" pos:column="2">"Anonymous #38"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5172" pos:column="19">"LISP = Lots of Irritating Silly Parentheses."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5173" pos:column="1">{<expr><lit:literal type="string" pos:line="5173" pos:column="2">"Anonymous #39"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5173" pos:column="19">"Perl, the only language that looks the same before and after RSA encryption."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5174" pos:column="1">{<expr><lit:literal type="string" pos:line="5174" pos:column="2">"Anonymous #40"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5174" pos:column="19">"People ask me why, as an atheist, I still say: OH MY GOD.\nIt makes perfect sense: We say \"Oh my God\" when something is UNBELIEVABLE."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5175" pos:column="1">{<expr><lit:literal type="string" pos:line="5175" pos:column="2">"Anonymous #41"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5175" pos:column="19">"1. Dig a hole.\n2. Name it love.\n3. Watch people falling in love.\n"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5176" pos:column="1">{<expr><lit:literal type="string" pos:line="5176" pos:column="2">"Anonymous #42"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5176" pos:column="19">"Don't think of yourself as an ugly person.\nThink of yourself as a beautiful monkey."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5177" pos:column="1">{<expr><lit:literal type="string" pos:line="5177" pos:column="2">"Anonymous #43"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5177" pos:column="19">"Afraid to die alone?\nBecome a bus driver."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5178" pos:column="1">{<expr><lit:literal type="string" pos:line="5178" pos:column="2">"Anonymous #44"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5178" pos:column="19">"The first 5 days after the weekend are always the hardest."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5179" pos:column="1">{<expr><lit:literal type="string" pos:line="5179" pos:column="2">"Anonymous #45"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5179" pos:column="19">"Rhinos are just fat unicorns."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5180" pos:column="1">{<expr><lit:literal type="string" pos:line="5180" pos:column="2">"Anonymous #46"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5180" pos:column="19">"Pornography harms\nmy wrist."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5181" pos:column="1">{<expr><lit:literal type="string" pos:line="5181" pos:column="2">"Anonymous #47"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5181" pos:column="19">"Kids are like fart.\nYou can only stand yours."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5182" pos:column="1">{<expr><lit:literal type="string" pos:line="5182" pos:column="2">"Anonymous #48"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5182" pos:column="19">"If you were born in Israel, youd probably be Jewish.\nIf you were born in Saudi Arabia, youd probably be Muslim.\nIf you were born in India, youd probably be Hindu.\nBut because you were born in North America, youre Christian.\nYour faith is not inspired by some divine, constant truth.\nIts simply geography."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5183" pos:column="1">{<expr><lit:literal type="string" pos:line="5183" pos:column="2">"Anonymous #49"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5183" pos:column="19">"There are 2 types of people in this world:\nPeople who say they pee in the shower, and the dirty fucking liars."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5184" pos:column="1">{<expr><lit:literal type="string" pos:line="5184" pos:column="2">"Anonymous #50"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5184" pos:column="19">"London 2012 Olympic Games - A bunch of countries coming across the ocean to put their flags in britain and try to get a bunch of gold... it's like history but opposite."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5185" pos:column="1">{<expr><lit:literal type="string" pos:line="5185" pos:column="2">"Anonymous #51"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5185" pos:column="19">"I don't need a stable relationship,\nI just need a stable Internet connection."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5186" pos:column="1">{<expr><lit:literal type="string" pos:line="5186" pos:column="2">"Anonymous #52"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5186" pos:column="19">"What's the difference between religion and bullshit?\nThe bull."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5187" pos:column="1">{<expr><lit:literal type="string" pos:line="5187" pos:column="2">"Anonymous #53"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5187" pos:column="19">"Today, as I was waiting for my girlfriend in the street, I saw a woman who looked a lot like her. I ran towards her, my arms in the air ready to give her a hug, only to realise it wasn't her. I then had to pass the woman, my arms in the air, still running. FML"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5188" pos:column="1">{<expr><lit:literal type="string" pos:line="5188" pos:column="2">"Anonymous #54"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5188" pos:column="19">"Today, I finally got my hands on the new iPhone 5, after I pulled it out of a patient's rectum. FML"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5189" pos:column="1">{<expr><lit:literal type="string" pos:line="5189" pos:column="2">"Anonymous #55"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5189" pos:column="19">"Violent video games won't change our behaviour.\nIf people were influenced by video games, then the majority of Facebook users would be farmers right now."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5190" pos:column="1">{<expr><lit:literal type="string" pos:line="5190" pos:column="2">"Anonymous #56"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5190" pos:column="19">"Religion is like circumcision.\nIf you wait until someone is 21 to tell them about it they probably won't be interested."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5191" pos:column="1">{<expr><lit:literal type="string" pos:line="5191" pos:column="2">"Anonymous #57"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5191" pos:column="19">"No, no, no, I'm not insulting you.\nI'm describing you."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5192" pos:column="1">{<expr><lit:literal type="string" pos:line="5192" pos:column="2">"Anonymous #58"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5192" pos:column="19">"I bought a dog once. Named him \"Stay\".\n\"Come here, Stay.\"\nHe's insane now."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5193" pos:column="1">{<expr><lit:literal type="string" pos:line="5193" pos:column="2">"Anonymous #59"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5193" pos:column="19">"Steve Jobs\n1955-2011\nDied from PC (Pancreatic Cancer)."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5194" pos:column="1">{<expr><lit:literal type="string" pos:line="5194" pos:column="2">"Anonymous #60"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5194" pos:column="19">"Yesterday I named my Wifi network \"hack me if you can\"\nToday when I woke up it was changed to \"challenge accepted\"."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5195" pos:column="1">{<expr><lit:literal type="string" pos:line="5195" pos:column="2">"Anonymous #61"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5195" pos:column="19">"Your mother is so fat,\nthe recursive function computing her mass causes a stack overflow."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5196" pos:column="1">{<expr><lit:literal type="string" pos:line="5196" pos:column="2">"Anonymous #62"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5196" pos:column="19">"Oral sex makes my day, but anal sex makes my hole weak."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5197" pos:column="1">{<expr><lit:literal type="string" pos:line="5197" pos:column="2">"Anonymous #63"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5197" pos:column="19">"I'm not saying I am Batman, I am just saying no one has ever seen me and Batman in the same room togather."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5198" pos:column="1">{<expr><lit:literal type="string" pos:line="5198" pos:column="2">"Anonymous #64"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5198" pos:column="19">"I took a taxi today.\nThe driver told me \"I love my job, I own this car, I've got my own business, I'm my own boss, NO ONE tells me what to do!\"\nI said \"TURN LEFT HERE\".\n"</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5199" pos:column="1">{<expr><lit:literal type="string" pos:line="5199" pos:column="2">"Apple fan boy"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5199" pos:column="19">"I'll buy a second iPhone 5 and buy a lot of iOS applications so that Apple will be able to buy Samsung (this shitty company) to shut it down and all the Apple haters will be forced to have an iPhone. Muhahaha..."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5200" pos:column="1">{<expr><lit:literal type="string" pos:line="5200" pos:column="2">"Motherf*cker"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5200" pos:column="18">"Thousands of my potential children died on your mother's face last night."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5201" pos:column="1">{<expr><lit:literal type="string" pos:line="5201" pos:column="2">"Hustle Man"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5201" pos:column="16">"Politicians are like sperm.\nOne in a million turn out to be an actual human being."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5202" pos:column="1">{<expr><lit:literal type="string" pos:line="5202" pos:column="2">"Confucius"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5202" pos:column="15">"It's good to meet girl in park.\nBut better to park meat in girl."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5203" pos:column="1">{<expr><lit:literal type="string" pos:line="5203" pos:column="2">"Mark Twain"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5203" pos:column="16">"Censorship is telling a man he can't have a steak just because a baby can't chew it."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5204" pos:column="1">{<expr><lit:literal type="string" pos:line="5204" pos:column="2">"Friedrich Nietzsche"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5204" pos:column="25">"There is not enough love and goodness in the world to permit giving any of it away to imaginary beings."</lit:literal></expr>}</block></expr>,
<expr><block pos:line="5205" pos:column="1">{<expr><lit:literal type="string" pos:line="5205" pos:column="2">"Chewbacca"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="5205" pos:column="15">"Uuuuuuuuuur Ahhhhrrrrrr\nUhrrrr Ahhhhrrrrrr\nAaaarhg..."</lit:literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier pos:line="5210" pos:column="1">const</specifier> <name pos:line="5210" pos:column="7">int</name></type> <name pos:line="5210" pos:column="11">nbWtf</name> <init pos:line="5210" pos:column="17">= <expr><lit:literal type="number" pos:line="5210" pos:column="19">6</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="5211" pos:column="1">char</name> <type:modifier pos:line="5211" pos:column="6">*</type:modifier></type><name><name pos:line="5211" pos:column="7">wtf</name><index pos:line="5211" pos:column="10">[<expr><name pos:line="5211" pos:column="11">nbWtf</name></expr>]</index></name> <init pos:line="5211" pos:column="18">= <expr><block pos:line="5211" pos:column="20">{
<expr><lit:literal type="string" pos:line="5212" pos:column="1">"WTF?!"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="5213" pos:column="1">"lol"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="5214" pos:column="1">"FAP FAP FAP"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="5215" pos:column="1">"ROFL"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="5216" pos:column="1">"OMFG"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="5217" pos:column="1">"Husband is not an ATM machine!!!"</lit:literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="5220" pos:column="1">const</specifier> <name pos:line="5220" pos:column="7">int</name></type> <name pos:line="5220" pos:column="11">nbIntervalTime</name> <init pos:line="5220" pos:column="26">= <expr><lit:literal type="number" pos:line="5220" pos:column="28">5</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="5221" pos:column="1">int</name></type> <name><name pos:line="5221" pos:column="5">intervalTimeArray</name><index pos:line="5221" pos:column="22">[<expr><name pos:line="5221" pos:column="23">nbIntervalTime</name></expr>]</index></name> <init pos:line="5221" pos:column="39">= <expr><block pos:line="5221" pos:column="41">{<expr><lit:literal type="number" pos:line="5221" pos:column="42">30</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5221" pos:column="45">30</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5221" pos:column="48">30</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5221" pos:column="51">30</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5221" pos:column="54">200</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5222" pos:column="1">const</specifier> <name pos:line="5222" pos:column="7">int</name></type> <name pos:line="5222" pos:column="11">nbPauseTime</name> <init pos:line="5222" pos:column="23">= <expr><lit:literal type="number" pos:line="5222" pos:column="25">3</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="5223" pos:column="1">int</name></type> <name><name pos:line="5223" pos:column="5">pauseTimeArray</name><index pos:line="5223" pos:column="19">[<expr><name pos:line="5223" pos:column="20">nbPauseTime</name></expr>]</index></name> <init pos:line="5223" pos:column="33">= <expr><block pos:line="5223" pos:column="35">{<expr><lit:literal type="number" pos:line="5223" pos:column="36">200</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5223" pos:column="40">400</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5223" pos:column="44">600</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="5225" pos:column="1">const</specifier> <name pos:line="5225" pos:column="7">int</name></type> <name pos:line="5225" pos:column="11">act_doNothing</name> <init pos:line="5225" pos:column="25">= <expr><lit:literal type="number" pos:line="5225" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5226" pos:column="1">const</specifier> <name pos:line="5226" pos:column="7">int</name></type> <name pos:line="5226" pos:column="11">act_trolling</name> <init pos:line="5226" pos:column="24">= <expr><lit:literal type="number" pos:line="5226" pos:column="26">1</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5227" pos:column="1">const</specifier> <name pos:line="5227" pos:column="7">int</name></type> <name pos:line="5227" pos:column="11">nbAct</name> <init pos:line="5227" pos:column="17">= <expr><lit:literal type="number" pos:line="5227" pos:column="19">30</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="5228" pos:column="1">int</name></type> <name><name pos:line="5228" pos:column="5">actionArray</name><index pos:line="5228" pos:column="16">[<expr><name pos:line="5228" pos:column="17">nbAct</name></expr>]</index></name> <init pos:line="5228" pos:column="24">= <expr><block pos:line="5228" pos:column="26">{<expr><lit:literal type="number" pos:line="5228" pos:column="27">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="29">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="31">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="33">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="35">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="37">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="39">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="41">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="43">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="45">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="47">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="49">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="51">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="53">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="55">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="57">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="59">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="61">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="63">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="65">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="67">1</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="69">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="71">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="73">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="75">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="77">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="79">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="81">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="83">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="5228" pos:column="85">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5229" pos:column="1">const</specifier> <name pos:line="5229" pos:column="7">int</name></type> <name pos:line="5229" pos:column="11">maxRange</name> <init pos:line="5229" pos:column="20">= <expr><lit:literal type="number" pos:line="5229" pos:column="22">200</lit:literal></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="5231" pos:column="1">int</name></type> <name><name pos:line="5231" pos:column="5">Notepad_plus</name><op:operator pos:line="5231" pos:column="17">::</op:operator><name pos:line="5231" pos:column="19">getRandomAction</name></name><parameter_list pos:line="5231" pos:column="34">(<param><decl><type><name pos:line="5231" pos:column="35">int</name></type> <name pos:line="5231" pos:column="39">ranNum</name></decl></param>)</parameter_list>
<block pos:line="5232" pos:column="1">{
	<return pos:line="5233" pos:column="9">return <expr><name><name pos:line="5233" pos:column="16">actionArray</name><index pos:line="5233" pos:column="27">[<expr><name pos:line="5233" pos:column="28">ranNum</name> <op:operator pos:line="5233" pos:column="35">%</op:operator> <name pos:line="5233" pos:column="37">nbAct</name></expr>]</index></name></expr>;</return>
}</block></function>

<function><type><name pos:line="5236" pos:column="1">bool</name></type> <name pos:line="5236" pos:column="6">isInList</name><parameter_list pos:line="5236" pos:column="14">(<param><decl><type><name pos:line="5236" pos:column="15">int</name></type> <name pos:line="5236" pos:column="19">elem</name></decl></param>, <param><decl><type><name><name pos:line="5236" pos:column="25">vector</name><argument_list pos:line="5236" pos:column="31">&lt;<argument><expr><name pos:line="5236" pos:column="32">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="5236" pos:column="37">elemList</name></decl></param>)</parameter_list>
<block pos:line="5237" pos:column="1">{
	<for pos:line="5238" pos:column="9">for (<init><decl><type><name pos:line="5238" pos:column="14">size_t</name></type> <name pos:line="5238" pos:column="21">i</name> <init pos:line="5238" pos:column="23">= <expr><lit:literal type="number" pos:line="5238" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5238" pos:column="28">i</name> <op:operator pos:line="5238" pos:column="30">&lt;</op:operator> <call><name><name pos:line="5238" pos:column="32">elemList</name><op:operator pos:line="5238" pos:column="40">.</op:operator><name pos:line="5238" pos:column="41">size</name></name><argument_list pos:line="5238" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5238" pos:column="49">i</name><op:operator pos:line="5238" pos:column="50">++</op:operator></expr></incr>)
	<block pos:line="5239" pos:column="9">{
		<if pos:line="5240" pos:column="17">if <condition pos:line="5240" pos:column="20">(<expr><name pos:line="5240" pos:column="21">elem</name> <op:operator pos:line="5240" pos:column="26">==</op:operator> <name><name pos:line="5240" pos:column="29">elemList</name><index pos:line="5240" pos:column="37">[<expr><name pos:line="5240" pos:column="38">i</name></expr>]</index></name></expr>)</condition><then pos:line="5240" pos:column="41">
			<return pos:line="5241" pos:column="25">return <expr><lit:literal type="boolean" pos:line="5241" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="5243" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5243" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5246" pos:column="1">DWORD</name> <name pos:line="5246" pos:column="7">WINAPI</name></type> <name><name pos:line="5246" pos:column="14">Notepad_plus</name><op:operator pos:line="5246" pos:column="26">::</op:operator><name pos:line="5246" pos:column="28">threadTextPlayer</name></name><parameter_list pos:line="5246" pos:column="44">(<param><decl><type><name pos:line="5246" pos:column="45">void</name> <type:modifier pos:line="5246" pos:column="50">*</type:modifier></type><name pos:line="5246" pos:column="51">params</name></decl></param>)</parameter_list>
<block pos:line="5247" pos:column="1">{
	<comment type="line" pos:line="5248" pos:column="9">// random seed generation needs only one time. </comment>
	<expr_stmt><expr><call><name pos:line="5249" pos:column="9">srand</name><argument_list pos:line="5249" pos:column="14">(<argument><expr><op:operator pos:line="5249" pos:column="15">(</op:operator><name pos:line="5249" pos:column="16">unsigned</name> <name pos:line="5249" pos:column="25">int</name><op:operator pos:line="5249" pos:column="28">)</op:operator><call><name pos:line="5249" pos:column="29">time</name><argument_list pos:line="5249" pos:column="33">(<argument><expr><name pos:line="5249" pos:column="34">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="5251" pos:column="9">HWND</name></type> <name pos:line="5251" pos:column="14">hNpp</name> <init pos:line="5251" pos:column="19">= <expr><op:operator pos:line="5251" pos:column="21">(</op:operator><op:operator pos:line="5251" pos:column="22">(</op:operator><name pos:line="5251" pos:column="23">TextPlayerParams</name> <op:operator pos:line="5251" pos:column="40">*</op:operator><op:operator pos:line="5251" pos:column="41">)</op:operator><name pos:line="5251" pos:column="42">params</name><op:operator pos:line="5251" pos:column="48">)</op:operator><op:operator pos:line="5251" pos:column="49">-&gt;</op:operator><name pos:line="5251" pos:column="51">_nppHandle</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5252" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="5252" pos:column="27">*</type:modifier></type><name pos:line="5252" pos:column="28">pCurrentView</name> <init pos:line="5252" pos:column="41">= <expr><op:operator pos:line="5252" pos:column="43">(</op:operator><op:operator pos:line="5252" pos:column="44">(</op:operator><name pos:line="5252" pos:column="45">TextPlayerParams</name> <op:operator pos:line="5252" pos:column="62">*</op:operator><op:operator pos:line="5252" pos:column="63">)</op:operator><name pos:line="5252" pos:column="64">params</name><op:operator pos:line="5252" pos:column="70">)</op:operator><op:operator pos:line="5252" pos:column="71">-&gt;</op:operator><name pos:line="5252" pos:column="73">_pCurrentView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5253" pos:column="9">const</specifier> <name pos:line="5253" pos:column="15">char</name> <type:modifier pos:line="5253" pos:column="20">*</type:modifier></type><name pos:line="5253" pos:column="21">text2display</name> <init pos:line="5253" pos:column="34">= <expr><op:operator pos:line="5253" pos:column="36">(</op:operator><op:operator pos:line="5253" pos:column="37">(</op:operator><name pos:line="5253" pos:column="38">TextPlayerParams</name> <op:operator pos:line="5253" pos:column="55">*</op:operator><op:operator pos:line="5253" pos:column="56">)</op:operator><name pos:line="5253" pos:column="57">params</name><op:operator pos:line="5253" pos:column="63">)</op:operator><op:operator pos:line="5253" pos:column="64">-&gt;</op:operator><name pos:line="5253" pos:column="66">_text2display</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5254" pos:column="9">bool</name></type> <name pos:line="5254" pos:column="14">shouldBeTrolling</name> <init pos:line="5254" pos:column="31">= <expr><op:operator pos:line="5254" pos:column="33">(</op:operator><op:operator pos:line="5254" pos:column="34">(</op:operator><name pos:line="5254" pos:column="35">TextPlayerParams</name> <op:operator pos:line="5254" pos:column="52">*</op:operator><op:operator pos:line="5254" pos:column="53">)</op:operator><name pos:line="5254" pos:column="54">params</name><op:operator pos:line="5254" pos:column="60">)</op:operator><op:operator pos:line="5254" pos:column="61">-&gt;</op:operator><name pos:line="5254" pos:column="63">_shouldBeTrolling</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="5256" pos:column="9">// Open a new document</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="5257" pos:column="5">::</op:operator><name pos:line="5257" pos:column="7">SendMessage</name></name><argument_list pos:line="5257" pos:column="18">(<argument><expr><name pos:line="5257" pos:column="19">hNpp</name></expr></argument>, <argument><expr><name pos:line="5257" pos:column="25">NPPM_MENUCOMMAND</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5257" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5257" pos:column="46">IDM_FILE_NEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><specifier pos:line="5259" pos:column="9">static</specifier> <name pos:line="5259" pos:column="16">TextTrollerParams</name></type> <name pos:line="5259" pos:column="34">trollerParams</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="5260" pos:column="9">trollerParams</name><op:operator pos:line="5260" pos:column="22">.</op:operator><name pos:line="5260" pos:column="23">_pCurrentView</name></name> <op:operator pos:line="5260" pos:column="37">=</op:operator> <name pos:line="5260" pos:column="39">pCurrentView</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5261" pos:column="9">BufferID</name></type> <name pos:line="5261" pos:column="18">targetBufID</name> <init pos:line="5261" pos:column="30">= <expr><call><name><name pos:line="5261" pos:column="32">pCurrentView</name><op:operator pos:line="5261" pos:column="44">-&gt;</op:operator><name pos:line="5261" pos:column="46">getCurrentBufferID</name></name><argument_list pos:line="5261" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="5262" pos:column="9">trollerParams</name><op:operator pos:line="5262" pos:column="22">.</op:operator><name pos:line="5262" pos:column="23">_targetBufID</name></name> <op:operator pos:line="5262" pos:column="36">=</op:operator> <name pos:line="5262" pos:column="38">targetBufID</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5263" pos:column="9">HANDLE</name></type> <name pos:line="5263" pos:column="16">mutex</name> <init pos:line="5263" pos:column="22">= <expr><call><name><op:operator pos:line="5263" pos:column="24">::</op:operator><name pos:line="5263" pos:column="26">CreateMutex</name></name><argument_list pos:line="5263" pos:column="37">(<argument><expr><name pos:line="5263" pos:column="38">NULL</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5263" pos:column="44">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="5263" pos:column="51">TEXT</name><argument_list pos:line="5263" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="5263" pos:column="56">"nppTextWriter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="5264" pos:column="9">trollerParams</name><op:operator pos:line="5264" pos:column="22">.</op:operator><name pos:line="5264" pos:column="23">_mutex</name></name> <op:operator pos:line="5264" pos:column="30">=</op:operator> <name pos:line="5264" pos:column="32">mutex</name></expr>;</expr_stmt>
	
    <comment type="line" pos:line="5266" pos:column="5">// Get the current scintilla</comment>
    <decl_stmt><decl><type><name pos:line="5267" pos:column="5">HWND</name></type> <name pos:line="5267" pos:column="10">curScintilla</name> <init pos:line="5267" pos:column="23">= <expr><call><name><name pos:line="5267" pos:column="25">pCurrentView</name><op:operator pos:line="5267" pos:column="37">-&gt;</op:operator><name pos:line="5267" pos:column="39">getHSelf</name></name><argument_list pos:line="5267" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5268" pos:column="9">const</specifier> <name pos:line="5268" pos:column="15">int</name></type> <name pos:line="5268" pos:column="19">nbMaxTrolling</name> <init pos:line="5268" pos:column="33">= <expr><lit:literal type="number" pos:line="5268" pos:column="35">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5269" pos:column="9">int</name></type> <name pos:line="5269" pos:column="13">nbTrolling</name> <init pos:line="5269" pos:column="24">= <expr><lit:literal type="number" pos:line="5269" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5270" pos:column="9">vector</name><argument_list pos:line="5270" pos:column="15">&lt;<argument><expr><name pos:line="5270" pos:column="16">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="5270" pos:column="21">generatedRans</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5271" pos:column="9">char</name></type> <name pos:line="5271" pos:column="14">previousChar</name> <init pos:line="5271" pos:column="27">= <expr><lit:literal type="char" pos:line="5271" pos:column="29">'\0'</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="5272" pos:column="9">for (<init><decl><type><name pos:line="5272" pos:column="14">size_t</name></type> <name pos:line="5272" pos:column="21">i</name> <init pos:line="5272" pos:column="23">= <expr><lit:literal type="number" pos:line="5272" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5272" pos:column="29">i</name> <op:operator pos:line="5272" pos:column="31">&lt;</op:operator> <call><name pos:line="5272" pos:column="33">strlen</name><argument_list pos:line="5272" pos:column="39">(<argument><expr><name pos:line="5272" pos:column="40">text2display</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="5272" pos:column="56">i</name><op:operator pos:line="5272" pos:column="57">++</op:operator></expr></incr>)
    <block pos:line="5273" pos:column="5">{
		<decl_stmt><decl><type><name pos:line="5274" pos:column="17">int</name></type> <name pos:line="5274" pos:column="21">ranNum</name> <init pos:line="5274" pos:column="28">= <expr><call><name pos:line="5274" pos:column="30">getRandomNumber</name><argument_list pos:line="5274" pos:column="45">(<argument><expr><name pos:line="5274" pos:column="46">maxRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="5276" pos:column="17">int</name></type> <name pos:line="5276" pos:column="21">action</name> <init pos:line="5276" pos:column="28">= <expr><name pos:line="5276" pos:column="30">act_doNothing</name></expr></init></decl>;</decl_stmt>

		<if pos:line="5278" pos:column="17">if <condition pos:line="5278" pos:column="20">(<expr><name pos:line="5278" pos:column="21">shouldBeTrolling</name> <op:operator pos:line="5278" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="5278" pos:column="41">(</op:operator><name pos:line="5278" pos:column="42">i</name> <op:operator pos:line="5278" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="5278" pos:column="46">20</lit:literal> <op:operator pos:line="5278" pos:column="49">&amp;&amp;</op:operator> <name pos:line="5278" pos:column="52">previousChar</name> <op:operator pos:line="5278" pos:column="65">==</op:operator> <lit:literal type="char" pos:line="5278" pos:column="68">' '</lit:literal><op:operator pos:line="5278" pos:column="71">)</op:operator> <op:operator pos:line="5278" pos:column="73">&amp;&amp;</op:operator> <name pos:line="5278" pos:column="76">nbTrolling</name> <op:operator pos:line="5278" pos:column="87">&lt;</op:operator> <name pos:line="5278" pos:column="89">nbMaxTrolling</name></expr>)</condition><then pos:line="5278" pos:column="103">
		<block pos:line="5279" pos:column="17">{
			<expr_stmt><expr><name pos:line="5280" pos:column="25">action</name> <op:operator pos:line="5280" pos:column="32">=</op:operator> <call><name pos:line="5280" pos:column="34">getRandomAction</name><argument_list pos:line="5280" pos:column="49">(<argument><expr><name pos:line="5280" pos:column="50">ranNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="5281" pos:column="25">//char toto[64];</comment>
			<comment type="line" pos:line="5282" pos:column="25">//sprintf(toto, "i == %d    action : %d    current char == %c", i, action, text2display[i]);</comment>
			<comment type="line" pos:line="5283" pos:column="25">//writeLog(TEXT("c:\\tmp\\log.txt"), toto);</comment>
		}</block></then></if>

		<if pos:line="5286" pos:column="17">if <condition pos:line="5286" pos:column="20">(<expr><name pos:line="5286" pos:column="21">action</name> <op:operator pos:line="5286" pos:column="28">==</op:operator> <name pos:line="5286" pos:column="31">act_trolling</name></expr>)</condition><then pos:line="5286" pos:column="44">
		<block pos:line="5287" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5288" pos:column="25">int</name></type> <name pos:line="5288" pos:column="29">wtfIndex</name> <init pos:line="5288" pos:column="38">= <expr><call><name pos:line="5288" pos:column="40">getRandomNumber</name><argument_list pos:line="5288" pos:column="55">()</argument_list></call> <op:operator pos:line="5288" pos:column="58">%</op:operator> <name pos:line="5288" pos:column="60">nbWtf</name></expr></init></decl>;</decl_stmt>
			<if pos:line="5289" pos:column="25">if <condition pos:line="5289" pos:column="28">(<expr><op:operator pos:line="5289" pos:column="29">!</op:operator><call><name pos:line="5289" pos:column="30">isInList</name><argument_list pos:line="5289" pos:column="38">(<argument><expr><name pos:line="5289" pos:column="39">wtfIndex</name></expr></argument>, <argument><expr><name pos:line="5289" pos:column="49">generatedRans</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5289" pos:column="64">
			<block pos:line="5290" pos:column="25">{
				<comment type="line" pos:line="5291" pos:column="33">//writeLog(TEXT("c:\\tmp\\log.txt"), "trolling begin");</comment>
				<expr_stmt><expr><call><name><name pos:line="5292" pos:column="33">generatedRans</name><op:operator pos:line="5292" pos:column="46">.</op:operator><name pos:line="5292" pos:column="47">push_back</name></name><argument_list pos:line="5292" pos:column="56">(<argument><expr><name pos:line="5292" pos:column="57">wtfIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="5293" pos:column="33">nbTrolling</name><op:operator pos:line="5293" pos:column="43">++</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="5294" pos:column="33">trollerParams</name><op:operator pos:line="5294" pos:column="46">.</op:operator><name pos:line="5294" pos:column="47">_text2display</name></name> <op:operator pos:line="5294" pos:column="61">=</op:operator> <name><name pos:line="5294" pos:column="63">wtf</name><index pos:line="5294" pos:column="66">[<expr><name pos:line="5294" pos:column="67">wtfIndex</name></expr>]</index></name></expr>;</expr_stmt>

				<expr_stmt><expr><call><name pos:line="5296" pos:column="33">ReleaseMutex</name><argument_list pos:line="5296" pos:column="45">(<argument><expr><name pos:line="5296" pos:column="46">mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="5298" pos:column="33">HANDLE</name></type> <name pos:line="5298" pos:column="40">hThread</name> <init pos:line="5298" pos:column="48">= <expr><call><name><op:operator pos:line="5298" pos:column="50">::</op:operator><name pos:line="5298" pos:column="52">CreateThread</name></name><argument_list pos:line="5298" pos:column="64">(<argument><expr><name pos:line="5298" pos:column="65">NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5298" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5298" pos:column="74">threadTextTroller</name></expr></argument>, <argument><expr><op:operator pos:line="5298" pos:column="93">&amp;</op:operator><name pos:line="5298" pos:column="94">trollerParams</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5298" pos:column="109">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5298" pos:column="112">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="5300" pos:column="33">::</op:operator><name pos:line="5300" pos:column="35">Sleep</name></name><argument_list pos:line="5300" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="5300" pos:column="41">1000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="5301" pos:column="33">WaitForSingleObject</name><argument_list pos:line="5301" pos:column="52">(<argument><expr><name pos:line="5301" pos:column="53">mutex</name></expr></argument>, <argument><expr><name pos:line="5301" pos:column="60">INFINITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><op:operator pos:line="5303" pos:column="33">::</op:operator><name pos:line="5303" pos:column="35">CloseHandle</name></name><argument_list pos:line="5303" pos:column="46">(<argument><expr><name pos:line="5303" pos:column="47">hThread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="5304" pos:column="33">//writeLog(TEXT("c:\\tmp\\log.txt"), "trolling end");</comment>
			}</block></then></if>	
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="5308" pos:column="17">char</name></type> <name><name pos:line="5308" pos:column="22">charToShow</name><index pos:line="5308" pos:column="32">[<expr><lit:literal type="number" pos:line="5308" pos:column="33">2</lit:literal></expr>]</index></name> <init pos:line="5308" pos:column="36">= <expr><block pos:line="5308" pos:column="38">{<expr><name><name pos:line="5308" pos:column="39">text2display</name><index pos:line="5308" pos:column="51">[<expr><name pos:line="5308" pos:column="52">i</name></expr>]</index></name></expr>, <expr><lit:literal type="char" pos:line="5308" pos:column="56">'\0'</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

		<if pos:line="5310" pos:column="17">if <condition pos:line="5310" pos:column="20">(<expr><name><name pos:line="5310" pos:column="21">text2display</name><index pos:line="5310" pos:column="33">[<expr><name pos:line="5310" pos:column="34">i</name></expr>]</index></name> <op:operator pos:line="5310" pos:column="37">==</op:operator> <lit:literal type="char" pos:line="5310" pos:column="40">' '</lit:literal> <op:operator pos:line="5310" pos:column="44">||</op:operator> <name><name pos:line="5310" pos:column="47">text2display</name><index pos:line="5310" pos:column="59">[<expr><name pos:line="5310" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="5310" pos:column="63">==</op:operator> <lit:literal type="char" pos:line="5310" pos:column="66">'.'</lit:literal></expr>)</condition><then pos:line="5310" pos:column="70">
			<expr_stmt><expr><call><name pos:line="5311" pos:column="25">Sleep</name><argument_list pos:line="5311" pos:column="30">(<argument><expr><name pos:line="5311" pos:column="31">ranNum</name> <op:operator pos:line="5311" pos:column="38">+</op:operator> <name><name pos:line="5311" pos:column="40">pauseTimeArray</name><index pos:line="5311" pos:column="54">[<expr><name pos:line="5311" pos:column="55">ranNum</name><op:operator pos:line="5311" pos:column="61">%</op:operator><name pos:line="5311" pos:column="62">nbPauseTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="5312" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="5313" pos:column="25">Sleep</name><argument_list pos:line="5313" pos:column="30">(<argument><expr><name pos:line="5313" pos:column="31">ranNum</name> <op:operator pos:line="5313" pos:column="38">+</op:operator> <name><name pos:line="5313" pos:column="40">intervalTimeArray</name><index pos:line="5313" pos:column="57">[<expr><name pos:line="5313" pos:column="58">ranNum</name><op:operator pos:line="5313" pos:column="64">%</op:operator><name pos:line="5313" pos:column="65">nbIntervalTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

		<decl_stmt><decl><type><name pos:line="5315" pos:column="17">BufferID</name></type> <name pos:line="5315" pos:column="26">currentBufID</name> <init pos:line="5315" pos:column="39">= <expr><call><name><name pos:line="5315" pos:column="41">pCurrentView</name><op:operator pos:line="5315" pos:column="53">-&gt;</op:operator><name pos:line="5315" pos:column="55">getCurrentBufferID</name></name><argument_list pos:line="5315" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5316" pos:column="17">if <condition pos:line="5316" pos:column="20">(<expr><name pos:line="5316" pos:column="21">currentBufID</name> <op:operator pos:line="5316" pos:column="34">!=</op:operator> <name pos:line="5316" pos:column="37">targetBufID</name></expr>)</condition><then pos:line="5316" pos:column="49">
			<return pos:line="5317" pos:column="25">return <expr><name pos:line="5317" pos:column="32">TRUE</name></expr>;</return></then></if>

        <expr_stmt><expr><call><name><op:operator pos:line="5319" pos:column="9">::</op:operator><name pos:line="5319" pos:column="11">SendMessage</name></name><argument_list pos:line="5319" pos:column="22">(<argument><expr><name pos:line="5319" pos:column="23">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5319" pos:column="37">SCI_APPENDTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5319" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5319" pos:column="56">(</op:operator><name pos:line="5319" pos:column="57">LPARAM</name><op:operator pos:line="5319" pos:column="63">)</op:operator><name pos:line="5319" pos:column="64">charToShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5320" pos:column="17">::</op:operator><name pos:line="5320" pos:column="19">SendMessage</name></name><argument_list pos:line="5320" pos:column="30">(<argument><expr><name pos:line="5320" pos:column="31">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5320" pos:column="45">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5320" pos:column="58">::</op:operator><name pos:line="5320" pos:column="60">SendMessage</name></name><argument_list pos:line="5320" pos:column="71">(<argument><expr><name pos:line="5320" pos:column="72">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5320" pos:column="86">SCI_GETLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5320" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5320" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5320" pos:column="108">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="5322" pos:column="17">previousChar</name> <op:operator pos:line="5322" pos:column="30">=</op:operator> <name><name pos:line="5322" pos:column="32">text2display</name><index pos:line="5322" pos:column="44">[<expr><name pos:line="5322" pos:column="45">i</name></expr>]</index></name></expr>;</expr_stmt>
		<comment type="line" pos:line="5323" pos:column="17">//char ch[64];</comment>
		<comment type="line" pos:line="5324" pos:column="17">//sprintf(ch, "writting char == %c", text2display[i]);</comment>
		<comment type="line" pos:line="5325" pos:column="17">//writeLog(TEXT("c:\\tmp\\log.txt"), ch);</comment>
    }</block></for>
	<comment type="line" pos:line="5327" pos:column="9">//writeLog(TEXT("c:\\tmp\\log.txt"), "\n\n\n\n");</comment>
	<decl_stmt><decl><type><specifier pos:line="5328" pos:column="9">const</specifier> <name pos:line="5328" pos:column="15">char</name> <type:modifier pos:line="5328" pos:column="20">*</type:modifier></type> <name pos:line="5328" pos:column="22">quoter</name> <init pos:line="5328" pos:column="29">= <expr><op:operator pos:line="5328" pos:column="31">(</op:operator><op:operator pos:line="5328" pos:column="32">(</op:operator><name pos:line="5328" pos:column="33">TextPlayerParams</name> <op:operator pos:line="5328" pos:column="50">*</op:operator><op:operator pos:line="5328" pos:column="51">)</op:operator><name pos:line="5328" pos:column="52">params</name><op:operator pos:line="5328" pos:column="58">)</op:operator><op:operator pos:line="5328" pos:column="59">-&gt;</op:operator><name pos:line="5328" pos:column="61">_quoter</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5329" pos:column="9">string</name></type> <name pos:line="5329" pos:column="16">quoter_str</name> <init pos:line="5329" pos:column="27">= <expr><name pos:line="5329" pos:column="29">quoter</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5330" pos:column="9">int</name></type> <name pos:line="5330" pos:column="13">pos</name> <init pos:line="5330" pos:column="17">= <expr><call><name><name pos:line="5330" pos:column="19">quoter_str</name><op:operator pos:line="5330" pos:column="29">.</op:operator><name pos:line="5330" pos:column="30">find</name></name><argument_list pos:line="5330" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="5330" pos:column="35">"Anonymous"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="5331" pos:column="9">if <condition pos:line="5331" pos:column="12">(<expr><name pos:line="5331" pos:column="13">pos</name> <op:operator pos:line="5331" pos:column="17">==</op:operator> <name><name pos:line="5331" pos:column="20">string</name><op:operator pos:line="5331" pos:column="26">::</op:operator><name pos:line="5331" pos:column="28">npos</name></name></expr>)</condition><then pos:line="5331" pos:column="33">
	<block pos:line="5332" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="5333" pos:column="17">::</op:operator><name pos:line="5333" pos:column="19">SendMessage</name></name><argument_list pos:line="5333" pos:column="30">(<argument><expr><name pos:line="5333" pos:column="31">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5333" pos:column="45">SCI_APPENDTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5333" pos:column="61">3</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5333" pos:column="64">(</op:operator><name pos:line="5333" pos:column="65">LPARAM</name><op:operator pos:line="5333" pos:column="71">)</op:operator><lit:literal type="string" pos:line="5333" pos:column="72">"\n- "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5334" pos:column="17">::</op:operator><name pos:line="5334" pos:column="19">SendMessage</name></name><argument_list pos:line="5334" pos:column="30">(<argument><expr><name pos:line="5334" pos:column="31">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5334" pos:column="45">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5334" pos:column="58">::</op:operator><name pos:line="5334" pos:column="60">SendMessage</name></name><argument_list pos:line="5334" pos:column="71">(<argument><expr><name pos:line="5334" pos:column="72">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5334" pos:column="86">SCI_GETLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5334" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5334" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5334" pos:column="108">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="5336" pos:column="17">// Display quoter</comment>
		<for pos:line="5337" pos:column="17">for (<init><decl><type><name pos:line="5337" pos:column="22">size_t</name></type> <name pos:line="5337" pos:column="29">i</name> <init pos:line="5337" pos:column="31">= <expr><lit:literal type="number" pos:line="5337" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5337" pos:column="37">i</name> <op:operator pos:line="5337" pos:column="39">&lt;</op:operator> <call><name pos:line="5337" pos:column="41">strlen</name><argument_list pos:line="5337" pos:column="47">(<argument><expr><name pos:line="5337" pos:column="48">quoter</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="5337" pos:column="58">i</name><op:operator pos:line="5337" pos:column="59">++</op:operator></expr></incr>)
		<block pos:line="5338" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5339" pos:column="25">int</name></type> <name pos:line="5339" pos:column="29">ranNum</name> <init pos:line="5339" pos:column="36">= <expr><call><name pos:line="5339" pos:column="38">getRandomNumber</name><argument_list pos:line="5339" pos:column="53">(<argument><expr><name pos:line="5339" pos:column="54">maxRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="5341" pos:column="25">char</name></type> <name><name pos:line="5341" pos:column="30">charToShow</name><index pos:line="5341" pos:column="40">[<expr><lit:literal type="number" pos:line="5341" pos:column="41">2</lit:literal></expr>]</index></name> <init pos:line="5341" pos:column="44">= <expr><block pos:line="5341" pos:column="46">{<expr><name><name pos:line="5341" pos:column="47">quoter</name><index pos:line="5341" pos:column="53">[<expr><name pos:line="5341" pos:column="54">i</name></expr>]</index></name></expr>, <expr><lit:literal type="char" pos:line="5341" pos:column="58">'\0'</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name pos:line="5343" pos:column="25">Sleep</name><argument_list pos:line="5343" pos:column="30">(<argument><expr><name pos:line="5343" pos:column="31">ranNum</name> <op:operator pos:line="5343" pos:column="38">+</op:operator> <name><name pos:line="5343" pos:column="40">intervalTimeArray</name><index pos:line="5343" pos:column="57">[<expr><name pos:line="5343" pos:column="58">ranNum</name><op:operator pos:line="5343" pos:column="64">%</op:operator><name pos:line="5343" pos:column="65">nbIntervalTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="5345" pos:column="25">BufferID</name></type> <name pos:line="5345" pos:column="34">currentBufID</name> <init pos:line="5345" pos:column="47">= <expr><call><name><name pos:line="5345" pos:column="49">pCurrentView</name><op:operator pos:line="5345" pos:column="61">-&gt;</op:operator><name pos:line="5345" pos:column="63">getCurrentBufferID</name></name><argument_list pos:line="5345" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5346" pos:column="25">if <condition pos:line="5346" pos:column="28">(<expr><name pos:line="5346" pos:column="29">currentBufID</name> <op:operator pos:line="5346" pos:column="42">!=</op:operator> <name pos:line="5346" pos:column="45">targetBufID</name></expr>)</condition><then pos:line="5346" pos:column="57">
				<return pos:line="5347" pos:column="33">return <expr><name pos:line="5347" pos:column="40">TRUE</name></expr>;</return></then></if>

			<expr_stmt><expr><call><name><op:operator pos:line="5349" pos:column="25">::</op:operator><name pos:line="5349" pos:column="27">SendMessage</name></name><argument_list pos:line="5349" pos:column="38">(<argument><expr><name pos:line="5349" pos:column="39">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5349" pos:column="53">SCI_APPENDTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5349" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5349" pos:column="72">(</op:operator><name pos:line="5349" pos:column="73">LPARAM</name><op:operator pos:line="5349" pos:column="79">)</op:operator><name pos:line="5349" pos:column="80">charToShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="5350" pos:column="25">::</op:operator><name pos:line="5350" pos:column="27">SendMessage</name></name><argument_list pos:line="5350" pos:column="38">(<argument><expr><name pos:line="5350" pos:column="39">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5350" pos:column="53">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5350" pos:column="66">::</op:operator><name pos:line="5350" pos:column="68">SendMessage</name></name><argument_list pos:line="5350" pos:column="79">(<argument><expr><name pos:line="5350" pos:column="80">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5350" pos:column="94">SCI_GETLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5350" pos:column="109">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5350" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5350" pos:column="116">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		}</block></for>
	}</block></then></if>

    <return pos:line="5355" pos:column="5">return <expr><name pos:line="5355" pos:column="12">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5358" pos:column="1">DWORD</name> <name pos:line="5358" pos:column="7">WINAPI</name></type> <name><name pos:line="5358" pos:column="14">Notepad_plus</name><op:operator pos:line="5358" pos:column="26">::</op:operator><name pos:line="5358" pos:column="28">threadTextTroller</name></name><parameter_list pos:line="5358" pos:column="45">(<param><decl><type><name pos:line="5358" pos:column="46">void</name> <type:modifier pos:line="5358" pos:column="51">*</type:modifier></type><name pos:line="5358" pos:column="52">params</name></decl></param>)</parameter_list>
<block pos:line="5359" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5360" pos:column="9">WaitForSingleObject</name><argument_list pos:line="5360" pos:column="28">(<argument><expr><op:operator pos:line="5360" pos:column="29">(</op:operator><op:operator pos:line="5360" pos:column="30">(</op:operator><name pos:line="5360" pos:column="31">TextTrollerParams</name> <op:operator pos:line="5360" pos:column="49">*</op:operator><op:operator pos:line="5360" pos:column="50">)</op:operator><name pos:line="5360" pos:column="51">params</name><op:operator pos:line="5360" pos:column="57">)</op:operator><op:operator pos:line="5360" pos:column="58">-&gt;</op:operator><name pos:line="5360" pos:column="60">_mutex</name></expr></argument>, <argument><expr><name pos:line="5360" pos:column="68">INFINITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="5362" pos:column="9">// random seed generation needs only one time. </comment>
	<expr_stmt><expr><call><name pos:line="5363" pos:column="9">srand</name><argument_list pos:line="5363" pos:column="14">(<argument><expr><op:operator pos:line="5363" pos:column="15">(</op:operator><name pos:line="5363" pos:column="16">unsigned</name> <name pos:line="5363" pos:column="25">int</name><op:operator pos:line="5363" pos:column="28">)</op:operator><call><name pos:line="5363" pos:column="29">time</name><argument_list pos:line="5363" pos:column="33">(<argument><expr><name pos:line="5363" pos:column="34">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="5365" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="5365" pos:column="27">*</type:modifier></type><name pos:line="5365" pos:column="28">pCurrentView</name> <init pos:line="5365" pos:column="41">= <expr><op:operator pos:line="5365" pos:column="43">(</op:operator><op:operator pos:line="5365" pos:column="44">(</op:operator><name pos:line="5365" pos:column="45">TextTrollerParams</name> <op:operator pos:line="5365" pos:column="63">*</op:operator><op:operator pos:line="5365" pos:column="64">)</op:operator><name pos:line="5365" pos:column="65">params</name><op:operator pos:line="5365" pos:column="71">)</op:operator><op:operator pos:line="5365" pos:column="72">-&gt;</op:operator><name pos:line="5365" pos:column="74">_pCurrentView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5366" pos:column="9">const</specifier> <name pos:line="5366" pos:column="15">char</name> <type:modifier pos:line="5366" pos:column="20">*</type:modifier></type><name pos:line="5366" pos:column="21">text2display</name> <init pos:line="5366" pos:column="34">= <expr><op:operator pos:line="5366" pos:column="36">(</op:operator><op:operator pos:line="5366" pos:column="37">(</op:operator><name pos:line="5366" pos:column="38">TextTrollerParams</name> <op:operator pos:line="5366" pos:column="56">*</op:operator><op:operator pos:line="5366" pos:column="57">)</op:operator><name pos:line="5366" pos:column="58">params</name><op:operator pos:line="5366" pos:column="64">)</op:operator><op:operator pos:line="5366" pos:column="65">-&gt;</op:operator><name pos:line="5366" pos:column="67">_text2display</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5367" pos:column="9">HWND</name></type> <name pos:line="5367" pos:column="14">curScintilla</name> <init pos:line="5367" pos:column="27">= <expr><call><name><name pos:line="5367" pos:column="29">pCurrentView</name><op:operator pos:line="5367" pos:column="41">-&gt;</op:operator><name pos:line="5367" pos:column="43">getHSelf</name></name><argument_list pos:line="5367" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5368" pos:column="9">BufferID</name></type> <name pos:line="5368" pos:column="18">targetBufID</name> <init pos:line="5368" pos:column="30">= <expr><op:operator pos:line="5368" pos:column="32">(</op:operator><op:operator pos:line="5368" pos:column="33">(</op:operator><name pos:line="5368" pos:column="34">TextTrollerParams</name> <op:operator pos:line="5368" pos:column="52">*</op:operator><op:operator pos:line="5368" pos:column="53">)</op:operator><name pos:line="5368" pos:column="54">params</name><op:operator pos:line="5368" pos:column="60">)</op:operator><op:operator pos:line="5368" pos:column="61">-&gt;</op:operator><name pos:line="5368" pos:column="63">_targetBufID</name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="5369" pos:column="9">//HANDLE mutex = ((TextTrollerParams *)params)-&gt;_mutex;</comment>

	<for pos:line="5371" pos:column="9">for (<init><decl><type><name pos:line="5371" pos:column="14">size_t</name></type> <name pos:line="5371" pos:column="21">i</name> <init pos:line="5371" pos:column="23">= <expr><lit:literal type="number" pos:line="5371" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5371" pos:column="29">i</name> <op:operator pos:line="5371" pos:column="31">&lt;</op:operator> <call><name pos:line="5371" pos:column="33">strlen</name><argument_list pos:line="5371" pos:column="39">(<argument><expr><name pos:line="5371" pos:column="40">text2display</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="5371" pos:column="56">i</name><op:operator pos:line="5371" pos:column="57">++</op:operator></expr></incr>)
    <block pos:line="5372" pos:column="5">{
		<decl_stmt><decl><type><name pos:line="5373" pos:column="17">char</name></type> <name><name pos:line="5373" pos:column="22">charToShow</name><index pos:line="5373" pos:column="32">[<expr><lit:literal type="number" pos:line="5373" pos:column="33">2</lit:literal></expr>]</index></name> <init pos:line="5373" pos:column="36">= <expr><block pos:line="5373" pos:column="38">{<expr><name><name pos:line="5373" pos:column="39">text2display</name><index pos:line="5373" pos:column="51">[<expr><name pos:line="5373" pos:column="52">i</name></expr>]</index></name></expr>, <expr><lit:literal type="char" pos:line="5373" pos:column="56">'\0'</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="5374" pos:column="9">int</name></type> <name pos:line="5374" pos:column="13">ranNum</name> <init pos:line="5374" pos:column="20">= <expr><call><name pos:line="5374" pos:column="22">getRandomNumber</name><argument_list pos:line="5374" pos:column="37">(<argument><expr><name pos:line="5374" pos:column="38">maxRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5375" pos:column="17">if <condition pos:line="5375" pos:column="20">(<expr><name><name pos:line="5375" pos:column="21">text2display</name><index pos:line="5375" pos:column="33">[<expr><name pos:line="5375" pos:column="34">i</name></expr>]</index></name> <op:operator pos:line="5375" pos:column="37">==</op:operator> <lit:literal type="char" pos:line="5375" pos:column="40">' '</lit:literal> <op:operator pos:line="5375" pos:column="44">||</op:operator> <name><name pos:line="5375" pos:column="47">text2display</name><index pos:line="5375" pos:column="59">[<expr><name pos:line="5375" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="5375" pos:column="63">==</op:operator> <lit:literal type="char" pos:line="5375" pos:column="66">'.'</lit:literal></expr>)</condition><then pos:line="5375" pos:column="70">
			<expr_stmt><expr><call><name pos:line="5376" pos:column="25">Sleep</name><argument_list pos:line="5376" pos:column="30">(<argument><expr><name pos:line="5376" pos:column="31">ranNum</name> <op:operator pos:line="5376" pos:column="38">+</op:operator> <name><name pos:line="5376" pos:column="40">pauseTimeArray</name><index pos:line="5376" pos:column="54">[<expr><name pos:line="5376" pos:column="55">ranNum</name><op:operator pos:line="5376" pos:column="61">%</op:operator><name pos:line="5376" pos:column="62">nbPauseTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="5377" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="5378" pos:column="25">Sleep</name><argument_list pos:line="5378" pos:column="30">(<argument><expr><name pos:line="5378" pos:column="31">ranNum</name> <op:operator pos:line="5378" pos:column="38">+</op:operator> <name><name pos:line="5378" pos:column="40">intervalTimeArray</name><index pos:line="5378" pos:column="57">[<expr><name pos:line="5378" pos:column="58">ranNum</name><op:operator pos:line="5378" pos:column="64">%</op:operator><name pos:line="5378" pos:column="65">nbIntervalTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

		<decl_stmt><decl><type><name pos:line="5380" pos:column="17">BufferID</name></type> <name pos:line="5380" pos:column="26">currentBufID</name> <init pos:line="5380" pos:column="39">= <expr><call><name><name pos:line="5380" pos:column="41">pCurrentView</name><op:operator pos:line="5380" pos:column="53">-&gt;</op:operator><name pos:line="5380" pos:column="55">getCurrentBufferID</name></name><argument_list pos:line="5380" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5381" pos:column="17">if <condition pos:line="5381" pos:column="20">(<expr><name pos:line="5381" pos:column="21">currentBufID</name> <op:operator pos:line="5381" pos:column="34">!=</op:operator> <name pos:line="5381" pos:column="37">targetBufID</name></expr>)</condition><then pos:line="5381" pos:column="49">
		<block pos:line="5382" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="5383" pos:column="25">ReleaseMutex</name><argument_list pos:line="5383" pos:column="37">(<argument><expr><op:operator pos:line="5383" pos:column="38">(</op:operator><op:operator pos:line="5383" pos:column="39">(</op:operator><name pos:line="5383" pos:column="40">TextTrollerParams</name> <op:operator pos:line="5383" pos:column="58">*</op:operator><op:operator pos:line="5383" pos:column="59">)</op:operator><name pos:line="5383" pos:column="60">params</name><op:operator pos:line="5383" pos:column="66">)</op:operator><op:operator pos:line="5383" pos:column="67">-&gt;</op:operator><name pos:line="5383" pos:column="69">_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="5384" pos:column="25">return <expr><name pos:line="5384" pos:column="32">TRUE</name></expr>;</return>
		}</block></then></if>
        <expr_stmt><expr><call><name><op:operator pos:line="5386" pos:column="9">::</op:operator><name pos:line="5386" pos:column="11">SendMessage</name></name><argument_list pos:line="5386" pos:column="22">(<argument><expr><name pos:line="5386" pos:column="23">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5386" pos:column="37">SCI_APPENDTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5386" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5386" pos:column="56">(</op:operator><name pos:line="5386" pos:column="57">LPARAM</name><op:operator pos:line="5386" pos:column="63">)</op:operator><name pos:line="5386" pos:column="64">charToShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5387" pos:column="17">::</op:operator><name pos:line="5387" pos:column="19">SendMessage</name></name><argument_list pos:line="5387" pos:column="30">(<argument><expr><name pos:line="5387" pos:column="31">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5387" pos:column="45">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5387" pos:column="58">::</op:operator><name pos:line="5387" pos:column="60">SendMessage</name></name><argument_list pos:line="5387" pos:column="71">(<argument><expr><name pos:line="5387" pos:column="72">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5387" pos:column="86">SCI_GETLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5387" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5387" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5387" pos:column="108">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
	<comment type="line" pos:line="5389" pos:column="9">//writeLog(TEXT("c:\\tmp\\log.txt"), text2display);</comment>
	<decl_stmt><decl><type><name pos:line="5390" pos:column="9">int</name></type> <name pos:line="5390" pos:column="13">n</name> <init pos:line="5390" pos:column="15">= <expr><call><name pos:line="5390" pos:column="17">getRandomNumber</name><argument_list pos:line="5390" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5391" pos:column="9">int</name></type> <name pos:line="5391" pos:column="13">delMethod</name> <init pos:line="5391" pos:column="23">= <expr><name pos:line="5391" pos:column="25">n</name><op:operator pos:line="5391" pos:column="26">%</op:operator><lit:literal type="number" pos:line="5391" pos:column="27">4</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="5392" pos:column="9">if <condition pos:line="5392" pos:column="12">(<expr><name pos:line="5392" pos:column="13">delMethod</name> <op:operator pos:line="5392" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="5392" pos:column="26">0</lit:literal></expr>)</condition><then pos:line="5392" pos:column="28">
	<block pos:line="5393" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5394" pos:column="17">size_t</name></type> <name pos:line="5394" pos:column="24">len</name> <init pos:line="5394" pos:column="28">= <expr><call><name pos:line="5394" pos:column="30">strlen</name><argument_list pos:line="5394" pos:column="36">(<argument><expr><name pos:line="5394" pos:column="37">text2display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="5395" pos:column="17">for (<init><decl><type><name pos:line="5395" pos:column="22">size_t</name></type> <name pos:line="5395" pos:column="29">j</name> <init pos:line="5395" pos:column="31">= <expr><lit:literal type="number" pos:line="5395" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5395" pos:column="36">j</name> <op:operator pos:line="5395" pos:column="38">&lt;</op:operator> <name pos:line="5395" pos:column="40">len</name></expr>;</condition> <incr><expr><name pos:line="5395" pos:column="45">j</name><op:operator pos:line="5395" pos:column="46">++</op:operator></expr></incr>)
		<block pos:line="5396" pos:column="17">{
			<if pos:line="5397" pos:column="25">if <condition pos:line="5397" pos:column="28">(<expr><op:operator pos:line="5397" pos:column="29">!</op:operator><call><name pos:line="5397" pos:column="30">deleteBack</name><argument_list pos:line="5397" pos:column="40">(<argument><expr><name pos:line="5397" pos:column="41">pCurrentView</name></expr></argument>, <argument><expr><name pos:line="5397" pos:column="55">targetBufID</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5397" pos:column="68">
				<break pos:line="5398" pos:column="33">break;</break></then></if>
		}</block></for>	
	}</block></then>
	<else pos:line="5401" pos:column="9">else <if pos:line="5401" pos:column="14">if <condition pos:line="5401" pos:column="17">(<expr><name pos:line="5401" pos:column="18">delMethod</name> <op:operator pos:line="5401" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="5401" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="5401" pos:column="33">
	<block pos:line="5402" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5403" pos:column="17">size_t</name></type> <name pos:line="5403" pos:column="24">len</name> <init pos:line="5403" pos:column="28">= <expr><call><name pos:line="5403" pos:column="30">strlen</name><argument_list pos:line="5403" pos:column="36">(<argument><expr><name pos:line="5403" pos:column="37">text2display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5404" pos:column="17">::</op:operator><name pos:line="5404" pos:column="19">SendMessage</name></name><argument_list pos:line="5404" pos:column="30">(<argument><expr><name pos:line="5404" pos:column="31">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5404" pos:column="45">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5404" pos:column="58">::</op:operator><name pos:line="5404" pos:column="60">SendMessage</name></name><argument_list pos:line="5404" pos:column="71">(<argument><expr><name pos:line="5404" pos:column="72">curScintilla</name></expr></argument>, <argument><expr><name pos:line="5404" pos:column="86">SCI_GETLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5404" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5404" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5404" pos:column="107">-</op:operator> <name pos:line="5404" pos:column="109">len</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5404" pos:column="114">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="5405" pos:column="17">for (<init><decl><type><name pos:line="5405" pos:column="22">size_t</name></type> <name pos:line="5405" pos:column="29">j</name> <init pos:line="5405" pos:column="31">= <expr><lit:literal type="number" pos:line="5405" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5405" pos:column="36">j</name> <op:operator pos:line="5405" pos:column="38">&lt;</op:operator> <name pos:line="5405" pos:column="40">len</name></expr>;</condition> <incr><expr><name pos:line="5405" pos:column="45">j</name><op:operator pos:line="5405" pos:column="46">++</op:operator></expr></incr>)
		<block pos:line="5406" pos:column="17">{
			<if pos:line="5407" pos:column="25">if <condition pos:line="5407" pos:column="28">(<expr><op:operator pos:line="5407" pos:column="29">!</op:operator><call><name pos:line="5407" pos:column="30">deleteForward</name><argument_list pos:line="5407" pos:column="43">(<argument><expr><name pos:line="5407" pos:column="44">pCurrentView</name></expr></argument>, <argument><expr><name pos:line="5407" pos:column="58">targetBufID</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5407" pos:column="71">
				<break pos:line="5408" pos:column="33">break;</break></then></if>
		}</block></for>
	}</block></then>
	<else pos:line="5411" pos:column="9">else <if pos:line="5411" pos:column="14">if <condition pos:line="5411" pos:column="17">(<expr><name pos:line="5411" pos:column="18">delMethod</name> <op:operator pos:line="5411" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="5411" pos:column="31">2</lit:literal></expr>)</condition><then pos:line="5411" pos:column="33">
	<block pos:line="5412" pos:column="9">{
		<for pos:line="5413" pos:column="17">for (<init><decl><type><name pos:line="5413" pos:column="22">size_t</name></type> <name pos:line="5413" pos:column="29">j</name> <init pos:line="5413" pos:column="31">= <expr><lit:literal type="number" pos:line="5413" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5413" pos:column="36">j</name> <op:operator pos:line="5413" pos:column="38">&lt;</op:operator> <call><name pos:line="5413" pos:column="40">strlen</name><argument_list pos:line="5413" pos:column="46">(<argument><expr><name pos:line="5413" pos:column="47">text2display</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5413" pos:column="62">j</name><op:operator pos:line="5413" pos:column="63">++</op:operator></expr></incr>)
		<block pos:line="5414" pos:column="17">{
			<if pos:line="5415" pos:column="25">if <condition pos:line="5415" pos:column="28">(<expr><op:operator pos:line="5415" pos:column="29">!</op:operator><call><name pos:line="5415" pos:column="30">selectBack</name><argument_list pos:line="5415" pos:column="40">(<argument><expr><name pos:line="5415" pos:column="41">pCurrentView</name></expr></argument>, <argument><expr><name pos:line="5415" pos:column="55">targetBufID</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5415" pos:column="68">
				<break pos:line="5416" pos:column="33">break;</break></then></if>
		}</block></for>
		<decl_stmt><decl><type><name pos:line="5418" pos:column="17">int</name></type> <name pos:line="5418" pos:column="21">ranNum</name> <init pos:line="5418" pos:column="28">= <expr><call><name pos:line="5418" pos:column="30">getRandomNumber</name><argument_list pos:line="5418" pos:column="45">(<argument><expr><name pos:line="5418" pos:column="46">maxRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5419" pos:column="17">::</op:operator><name pos:line="5419" pos:column="19">Sleep</name></name><argument_list pos:line="5419" pos:column="24">(<argument><expr><name pos:line="5419" pos:column="25">ranNum</name> <op:operator pos:line="5419" pos:column="32">+</op:operator> <name><name pos:line="5419" pos:column="34">pauseTimeArray</name><index pos:line="5419" pos:column="48">[<expr><name pos:line="5419" pos:column="49">ranNum</name><op:operator pos:line="5419" pos:column="55">%</op:operator><name pos:line="5419" pos:column="56">nbPauseTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5420" pos:column="17">::</op:operator><name pos:line="5420" pos:column="19">SendMessage</name></name><argument_list pos:line="5420" pos:column="30">(<argument><expr><call><name><name pos:line="5420" pos:column="31">pCurrentView</name><op:operator pos:line="5420" pos:column="43">-&gt;</op:operator><name pos:line="5420" pos:column="45">getHSelf</name></name><argument_list pos:line="5420" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5420" pos:column="57">SCI_DELETEBACK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5420" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5420" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="5422" pos:column="9">else
	<block pos:line="5423" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5424" pos:column="17">int</name></type> <name pos:line="5424" pos:column="21">currentPos</name> <init pos:line="5424" pos:column="32">= <expr><call><name><op:operator pos:line="5424" pos:column="34">::</op:operator><name pos:line="5424" pos:column="36">SendMessage</name></name><argument_list pos:line="5424" pos:column="47">(<argument><expr><call><name><name pos:line="5424" pos:column="48">pCurrentView</name><op:operator pos:line="5424" pos:column="60">-&gt;</op:operator><name pos:line="5424" pos:column="62">getHSelf</name></name><argument_list pos:line="5424" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5424" pos:column="74">SCI_GETSELECTIONSTART</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5424" pos:column="97">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5424" pos:column="100">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5425" pos:column="17">::</op:operator><name pos:line="5425" pos:column="19">SendMessage</name></name><argument_list pos:line="5425" pos:column="30">(<argument><expr><call><name><name pos:line="5425" pos:column="31">pCurrentView</name><op:operator pos:line="5425" pos:column="43">-&gt;</op:operator><name pos:line="5425" pos:column="45">getHSelf</name></name><argument_list pos:line="5425" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5425" pos:column="57">SCI_SETSELECTION</name></expr></argument>, <argument><expr><name pos:line="5425" pos:column="75">currentPos</name></expr></argument>, <argument><expr><name pos:line="5425" pos:column="87">currentPos</name> <op:operator pos:line="5425" pos:column="98">-</op:operator> <call><name pos:line="5425" pos:column="100">strlen</name><argument_list pos:line="5425" pos:column="106">(<argument><expr><name pos:line="5425" pos:column="107">text2display</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="5426" pos:column="17">BufferID</name></type> <name pos:line="5426" pos:column="26">currentBufID</name> <init pos:line="5426" pos:column="39">= <expr><call><name><name pos:line="5426" pos:column="41">pCurrentView</name><op:operator pos:line="5426" pos:column="53">-&gt;</op:operator><name pos:line="5426" pos:column="55">getCurrentBufferID</name></name><argument_list pos:line="5426" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5427" pos:column="17">if <condition pos:line="5427" pos:column="20">(<expr><name pos:line="5427" pos:column="21">currentBufID</name> <op:operator pos:line="5427" pos:column="34">!=</op:operator> <name pos:line="5427" pos:column="37">targetBufID</name></expr>)</condition><then pos:line="5427" pos:column="49">
			<return pos:line="5428" pos:column="25">return <expr><name pos:line="5428" pos:column="32">TRUE</name></expr>;</return></then></if>
		<decl_stmt><decl><type><name pos:line="5429" pos:column="17">int</name></type> <name pos:line="5429" pos:column="21">ranNum</name> <init pos:line="5429" pos:column="28">= <expr><call><name pos:line="5429" pos:column="30">getRandomNumber</name><argument_list pos:line="5429" pos:column="45">(<argument><expr><name pos:line="5429" pos:column="46">maxRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5430" pos:column="17">::</op:operator><name pos:line="5430" pos:column="19">Sleep</name></name><argument_list pos:line="5430" pos:column="24">(<argument><expr><name pos:line="5430" pos:column="25">ranNum</name> <op:operator pos:line="5430" pos:column="32">+</op:operator> <name><name pos:line="5430" pos:column="34">pauseTimeArray</name><index pos:line="5430" pos:column="48">[<expr><name pos:line="5430" pos:column="49">ranNum</name><op:operator pos:line="5430" pos:column="55">%</op:operator><name pos:line="5430" pos:column="56">nbPauseTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="5431" pos:column="17">::</op:operator><name pos:line="5431" pos:column="19">SendMessage</name></name><argument_list pos:line="5431" pos:column="30">(<argument><expr><call><name><name pos:line="5431" pos:column="31">pCurrentView</name><op:operator pos:line="5431" pos:column="43">-&gt;</op:operator><name pos:line="5431" pos:column="45">getHSelf</name></name><argument_list pos:line="5431" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5431" pos:column="57">SCI_DELETEBACK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5431" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5431" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if></else></if></else></if>
	
	<expr_stmt><expr><call><name pos:line="5434" pos:column="9">ReleaseMutex</name><argument_list pos:line="5434" pos:column="21">(<argument><expr><op:operator pos:line="5434" pos:column="22">(</op:operator><op:operator pos:line="5434" pos:column="23">(</op:operator><name pos:line="5434" pos:column="24">TextTrollerParams</name> <op:operator pos:line="5434" pos:column="42">*</op:operator><op:operator pos:line="5434" pos:column="43">)</op:operator><name pos:line="5434" pos:column="44">params</name><op:operator pos:line="5434" pos:column="50">)</op:operator><op:operator pos:line="5434" pos:column="51">-&gt;</op:operator><name pos:line="5434" pos:column="53">_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="5435" pos:column="9">return <expr><name pos:line="5435" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5438" pos:column="1">bool</name></type> <name><name pos:line="5438" pos:column="6">Notepad_plus</name><op:operator pos:line="5438" pos:column="18">::</op:operator><name pos:line="5438" pos:column="20">deleteBack</name></name><parameter_list pos:line="5438" pos:column="30">(<param><decl><type><name pos:line="5438" pos:column="31">ScintillaEditView</name> <type:modifier pos:line="5438" pos:column="49">*</type:modifier></type><name pos:line="5438" pos:column="50">pCurrentView</name></decl></param>, <param><decl><type><name pos:line="5438" pos:column="64">BufferID</name></type> <name pos:line="5438" pos:column="73">targetBufID</name></decl></param>)</parameter_list>
<block pos:line="5439" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5440" pos:column="9">int</name></type> <name pos:line="5440" pos:column="13">ranNum</name> <init pos:line="5440" pos:column="20">= <expr><call><name pos:line="5440" pos:column="22">getRandomNumber</name><argument_list pos:line="5440" pos:column="37">(<argument><expr><name pos:line="5440" pos:column="38">maxRange</name> <op:operator pos:line="5440" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="5440" pos:column="49">100</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5441" pos:column="9">BufferID</name></type> <name pos:line="5441" pos:column="18">currentBufID</name> <init pos:line="5441" pos:column="31">= <expr><call><name><name pos:line="5441" pos:column="33">pCurrentView</name><op:operator pos:line="5441" pos:column="45">-&gt;</op:operator><name pos:line="5441" pos:column="47">getCurrentBufferID</name></name><argument_list pos:line="5441" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="5442" pos:column="9">Sleep</name><argument_list pos:line="5442" pos:column="14">(<argument><expr><name pos:line="5442" pos:column="15">ranNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="5443" pos:column="9">if <condition pos:line="5443" pos:column="12">(<expr><name pos:line="5443" pos:column="13">currentBufID</name> <op:operator pos:line="5443" pos:column="26">!=</op:operator> <name pos:line="5443" pos:column="29">targetBufID</name></expr>)</condition><then pos:line="5443" pos:column="41">
		<return pos:line="5444" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5444" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="5445" pos:column="9">::</op:operator><name pos:line="5445" pos:column="11">SendMessage</name></name><argument_list pos:line="5445" pos:column="22">(<argument><expr><call><name><name pos:line="5445" pos:column="23">pCurrentView</name><op:operator pos:line="5445" pos:column="35">-&gt;</op:operator><name pos:line="5445" pos:column="37">getHSelf</name></name><argument_list pos:line="5445" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5445" pos:column="49">SCI_DELETEBACK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5445" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5445" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="5446" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5446" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5449" pos:column="1">bool</name></type> <name><name pos:line="5449" pos:column="6">Notepad_plus</name><op:operator pos:line="5449" pos:column="18">::</op:operator><name pos:line="5449" pos:column="20">deleteForward</name></name><parameter_list pos:line="5449" pos:column="33">(<param><decl><type><name pos:line="5449" pos:column="34">ScintillaEditView</name> <type:modifier pos:line="5449" pos:column="52">*</type:modifier></type><name pos:line="5449" pos:column="53">pCurrentView</name></decl></param>, <param><decl><type><name pos:line="5449" pos:column="67">BufferID</name></type> <name pos:line="5449" pos:column="76">targetBufID</name></decl></param>)</parameter_list>
<block pos:line="5450" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5451" pos:column="9">int</name></type> <name pos:line="5451" pos:column="13">ranNum</name> <init pos:line="5451" pos:column="20">= <expr><call><name pos:line="5451" pos:column="22">getRandomNumber</name><argument_list pos:line="5451" pos:column="37">(<argument><expr><name pos:line="5451" pos:column="38">maxRange</name> <op:operator pos:line="5451" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="5451" pos:column="49">100</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5452" pos:column="9">BufferID</name></type> <name pos:line="5452" pos:column="18">currentBufID</name> <init pos:line="5452" pos:column="31">= <expr><call><name><name pos:line="5452" pos:column="33">pCurrentView</name><op:operator pos:line="5452" pos:column="45">-&gt;</op:operator><name pos:line="5452" pos:column="47">getCurrentBufferID</name></name><argument_list pos:line="5452" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="5453" pos:column="9">Sleep</name><argument_list pos:line="5453" pos:column="14">(<argument><expr><name pos:line="5453" pos:column="15">ranNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="5454" pos:column="9">if <condition pos:line="5454" pos:column="12">(<expr><name pos:line="5454" pos:column="13">currentBufID</name> <op:operator pos:line="5454" pos:column="26">!=</op:operator> <name pos:line="5454" pos:column="29">targetBufID</name></expr>)</condition><then pos:line="5454" pos:column="41">
		<return pos:line="5455" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5455" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="5456" pos:column="9">::</op:operator><name pos:line="5456" pos:column="11">SendMessage</name></name><argument_list pos:line="5456" pos:column="22">(<argument><expr><call><name><name pos:line="5456" pos:column="23">pCurrentView</name><op:operator pos:line="5456" pos:column="35">-&gt;</op:operator><name pos:line="5456" pos:column="37">getHSelf</name></name><argument_list pos:line="5456" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5456" pos:column="49">SCI_GOTOPOS</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="5456" pos:column="62">::</op:operator><name pos:line="5456" pos:column="64">SendMessage</name></name><argument_list pos:line="5456" pos:column="75">(<argument><expr><call><name><name pos:line="5456" pos:column="76">pCurrentView</name><op:operator pos:line="5456" pos:column="88">-&gt;</op:operator><name pos:line="5456" pos:column="90">getHSelf</name></name><argument_list pos:line="5456" pos:column="98">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5456" pos:column="102">SCI_GETCURRENTPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5456" pos:column="121">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5456" pos:column="124">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5456" pos:column="127">+</op:operator> <lit:literal type="number" pos:line="5456" pos:column="129">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5456" pos:column="132">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="5457" pos:column="9">::</op:operator><name pos:line="5457" pos:column="11">SendMessage</name></name><argument_list pos:line="5457" pos:column="22">(<argument><expr><call><name><name pos:line="5457" pos:column="23">pCurrentView</name><op:operator pos:line="5457" pos:column="35">-&gt;</op:operator><name pos:line="5457" pos:column="37">getHSelf</name></name><argument_list pos:line="5457" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5457" pos:column="49">SCI_DELETEBACK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5457" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5457" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="5458" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5458" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5461" pos:column="1">bool</name></type> <name><name pos:line="5461" pos:column="6">Notepad_plus</name><op:operator pos:line="5461" pos:column="18">::</op:operator><name pos:line="5461" pos:column="20">selectBack</name></name><parameter_list pos:line="5461" pos:column="30">(<param><decl><type><name pos:line="5461" pos:column="31">ScintillaEditView</name> <type:modifier pos:line="5461" pos:column="49">*</type:modifier></type><name pos:line="5461" pos:column="50">pCurrentView</name></decl></param>, <param><decl><type><name pos:line="5461" pos:column="64">BufferID</name></type> <name pos:line="5461" pos:column="73">targetBufID</name></decl></param>)</parameter_list>
<block pos:line="5462" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5463" pos:column="9">int</name></type> <name pos:line="5463" pos:column="13">ranNum</name> <init pos:line="5463" pos:column="20">= <expr><call><name pos:line="5463" pos:column="22">getRandomNumber</name><argument_list pos:line="5463" pos:column="37">(<argument><expr><name pos:line="5463" pos:column="38">maxRange</name> <op:operator pos:line="5463" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="5463" pos:column="49">100</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5464" pos:column="9">BufferID</name></type> <name pos:line="5464" pos:column="18">currentBufID</name> <init pos:line="5464" pos:column="31">= <expr><call><name><name pos:line="5464" pos:column="33">pCurrentView</name><op:operator pos:line="5464" pos:column="45">-&gt;</op:operator><name pos:line="5464" pos:column="47">getCurrentBufferID</name></name><argument_list pos:line="5464" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5465" pos:column="9">int</name></type> <name pos:line="5465" pos:column="13">currentPos</name> <init pos:line="5465" pos:column="24">= <expr><call><name><op:operator pos:line="5465" pos:column="26">::</op:operator><name pos:line="5465" pos:column="28">SendMessage</name></name><argument_list pos:line="5465" pos:column="39">(<argument><expr><call><name><name pos:line="5465" pos:column="40">pCurrentView</name><op:operator pos:line="5465" pos:column="52">-&gt;</op:operator><name pos:line="5465" pos:column="54">getHSelf</name></name><argument_list pos:line="5465" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5465" pos:column="66">SCI_GETSELECTIONSTART</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5465" pos:column="89">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5465" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5466" pos:column="9">int</name></type> <name pos:line="5466" pos:column="13">currentAnchor</name> <init pos:line="5466" pos:column="27">= <expr><call><name><op:operator pos:line="5466" pos:column="29">::</op:operator><name pos:line="5466" pos:column="31">SendMessage</name></name><argument_list pos:line="5466" pos:column="42">(<argument><expr><call><name><name pos:line="5466" pos:column="43">pCurrentView</name><op:operator pos:line="5466" pos:column="55">-&gt;</op:operator><name pos:line="5466" pos:column="57">getHSelf</name></name><argument_list pos:line="5466" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5466" pos:column="69">SCI_GETSELECTIONEND</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5466" pos:column="90">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5466" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="5467" pos:column="9">Sleep</name><argument_list pos:line="5467" pos:column="14">(<argument><expr><name pos:line="5467" pos:column="15">ranNum</name> <op:operator pos:line="5467" pos:column="22">+</op:operator> <name><name pos:line="5467" pos:column="24">intervalTimeArray</name><index pos:line="5467" pos:column="41">[<expr><name pos:line="5467" pos:column="42">ranNum</name><op:operator pos:line="5467" pos:column="48">%</op:operator><name pos:line="5467" pos:column="49">nbIntervalTime</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="5468" pos:column="9">if <condition pos:line="5468" pos:column="12">(<expr><name pos:line="5468" pos:column="13">currentBufID</name> <op:operator pos:line="5468" pos:column="26">!=</op:operator> <name pos:line="5468" pos:column="29">targetBufID</name></expr>)</condition><then pos:line="5468" pos:column="41">
		<return pos:line="5469" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5469" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<expr_stmt><expr><call><name><op:operator pos:line="5471" pos:column="9">::</op:operator><name pos:line="5471" pos:column="11">SendMessage</name></name><argument_list pos:line="5471" pos:column="22">(<argument><expr><call><name><name pos:line="5471" pos:column="23">pCurrentView</name><op:operator pos:line="5471" pos:column="35">-&gt;</op:operator><name pos:line="5471" pos:column="37">getHSelf</name></name><argument_list pos:line="5471" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5471" pos:column="49">SCI_SETSELECTION</name></expr></argument>, <argument><expr><name pos:line="5471" pos:column="67">currentAnchor</name></expr></argument>, <argument><expr><op:operator pos:line="5471" pos:column="82">--</op:operator><name pos:line="5471" pos:column="84">currentPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="5472" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5472" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5475" pos:column="1">int</name></type> <name><name pos:line="5475" pos:column="5">Notepad_plus</name><op:operator pos:line="5475" pos:column="17">::</op:operator><name pos:line="5475" pos:column="19">getQuoteIndexFrom</name></name><parameter_list pos:line="5475" pos:column="36">(<param><decl><type><specifier pos:line="5475" pos:column="37">const</specifier> <name pos:line="5475" pos:column="43">char</name> <type:modifier pos:line="5475" pos:column="48">*</type:modifier></type><name pos:line="5475" pos:column="49">quoter</name></decl></param>)</parameter_list> <specifier pos:line="5475" pos:column="57">const</specifier>
<block pos:line="5476" pos:column="1">{
	<if pos:line="5477" pos:column="9">if <condition pos:line="5477" pos:column="12">(<expr><op:operator pos:line="5477" pos:column="13">!</op:operator><name pos:line="5477" pos:column="14">quoter</name></expr>)</condition><then pos:line="5477" pos:column="21">
		<return pos:line="5478" pos:column="17">return <expr><op:operator pos:line="5478" pos:column="24">-</op:operator><lit:literal type="number" pos:line="5478" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<if pos:line="5479" pos:column="9">if <condition pos:line="5479" pos:column="12">(<expr><call><name pos:line="5479" pos:column="13">stricmp</name><argument_list pos:line="5479" pos:column="20">(<argument><expr><name pos:line="5479" pos:column="21">quoter</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="5479" pos:column="29">"Get them all!!!"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5479" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="5479" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="5479" pos:column="53">
	<block pos:line="5480" pos:column="9">{
		<return pos:line="5481" pos:column="17">return <expr><op:operator pos:line="5481" pos:column="24">-</op:operator><lit:literal type="number" pos:line="5481" pos:column="25">2</lit:literal></expr>;</return>
	}</block></then></if>
	
	<if pos:line="5484" pos:column="9">if <condition pos:line="5484" pos:column="12">(<expr><call><name pos:line="5484" pos:column="13">stricmp</name><argument_list pos:line="5484" pos:column="20">(<argument><expr><name pos:line="5484" pos:column="21">quoter</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="5484" pos:column="29">"random"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5484" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="5484" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="5484" pos:column="44">
	<block pos:line="5485" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="5486" pos:column="17">srand</name><argument_list pos:line="5486" pos:column="22">(<argument><expr><op:operator pos:line="5486" pos:column="23">(</op:operator><name pos:line="5486" pos:column="24">unsigned</name> <name pos:line="5486" pos:column="33">int</name><op:operator pos:line="5486" pos:column="36">)</op:operator><call><name pos:line="5486" pos:column="37">time</name><argument_list pos:line="5486" pos:column="41">(<argument><expr><name pos:line="5486" pos:column="42">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="5487" pos:column="17">return <expr><call><name pos:line="5487" pos:column="24">getRandomNumber</name><argument_list pos:line="5487" pos:column="39">(<argument><expr><name pos:line="5487" pos:column="40">nbQuote</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then></if>

	<for pos:line="5490" pos:column="9">for (<init><decl><type><name pos:line="5490" pos:column="14">int</name></type> <name pos:line="5490" pos:column="18">i</name> <init pos:line="5490" pos:column="20">= <expr><lit:literal type="number" pos:line="5490" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5490" pos:column="25">i</name> <op:operator pos:line="5490" pos:column="27">&lt;</op:operator> <name pos:line="5490" pos:column="29">nbQuote</name></expr>;</condition> <incr><expr><name pos:line="5490" pos:column="38">i</name><op:operator pos:line="5490" pos:column="39">++</op:operator></expr></incr>)
	<block pos:line="5491" pos:column="9">{
		<if pos:line="5492" pos:column="17">if <condition pos:line="5492" pos:column="20">(<expr><call><name pos:line="5492" pos:column="21">stricmp</name><argument_list pos:line="5492" pos:column="28">(<argument><expr><name><name pos:line="5492" pos:column="29">quotes</name><index pos:line="5492" pos:column="35">[<expr><name pos:line="5492" pos:column="36">i</name></expr>]</index></name><op:operator pos:line="5492" pos:column="38">.</op:operator><name pos:line="5492" pos:column="39">_quoter</name></expr></argument>, <argument><expr><name pos:line="5492" pos:column="48">quoter</name></expr></argument>)</argument_list></call> <op:operator pos:line="5492" pos:column="56">==</op:operator> <lit:literal type="number" pos:line="5492" pos:column="59">0</lit:literal></expr>)</condition><then pos:line="5492" pos:column="61">
			<return pos:line="5493" pos:column="25">return <expr><name pos:line="5493" pos:column="32">i</name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="5495" pos:column="9">return <expr><op:operator pos:line="5495" pos:column="16">-</op:operator><lit:literal type="number" pos:line="5495" pos:column="17">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5498" pos:column="1">void</name></type> <name><name pos:line="5498" pos:column="6">Notepad_plus</name><op:operator pos:line="5498" pos:column="18">::</op:operator><name pos:line="5498" pos:column="20">showAllQuotes</name></name><parameter_list pos:line="5498" pos:column="33">()</parameter_list> <specifier pos:line="5498" pos:column="36">const</specifier>
<block pos:line="5499" pos:column="1">{
	<comment type="block" pos:line="5500" pos:column="9">/*
	HANDLE mutex = ::CreateMutex(NULL, false, TEXT("nppTextWriter"));
	for (int i = 0; i &lt; nbQuote; i++)
	{
		static bool firstTime = true;
		if (firstTime)
		{
			firstTime = false;
		}
		else
		{
			WaitForSingleObject(mutex, INFINITE);
		
		}
		ReleaseMutex(mutex);
		Sleep(1000);
		showQuoteFromIndex(i);
		WaitForSingleObject(mutex, INFINITE);
	}
	*/</comment>
}</block></function>

<function><type><name pos:line="5522" pos:column="1">void</name></type> <name><name pos:line="5522" pos:column="6">Notepad_plus</name><op:operator pos:line="5522" pos:column="18">::</op:operator><name pos:line="5522" pos:column="20">showQuoteFromIndex</name></name><parameter_list pos:line="5522" pos:column="38">(<param><decl><type><name pos:line="5522" pos:column="39">int</name></type> <name pos:line="5522" pos:column="43">index</name></decl></param>)</parameter_list> <specifier pos:line="5522" pos:column="50">const</specifier>
<block pos:line="5523" pos:column="1">{
	<if pos:line="5524" pos:column="9">if <condition pos:line="5524" pos:column="12">(<expr><name><name pos:line="5524" pos:column="13">index</name> <argument_list pos:line="5524" pos:column="19">&lt; <argument><expr><lit:literal type="number" pos:line="5524" pos:column="21">0</lit:literal> <op:operator pos:line="5524" pos:column="23">||</op:operator> <name pos:line="5524" pos:column="26">index</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="5524" pos:column="33">=</op:operator> <name pos:line="5524" pos:column="35">nbQuote</name></expr>)</condition><then pos:line="5524" pos:column="43"> <return pos:line="5524" pos:column="44">return;</return></then></if>

    <comment type="line" pos:line="5526" pos:column="5">//TextPlayerParams *params = new TextPlayerParams();</comment>
	<decl_stmt><decl><type><specifier pos:line="5527" pos:column="9">static</specifier> <name pos:line="5527" pos:column="16">TextPlayerParams</name></type> <name pos:line="5527" pos:column="33">params</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="5528" pos:column="9">params</name><op:operator pos:line="5528" pos:column="15">.</op:operator><name pos:line="5528" pos:column="16">_nppHandle</name></name> <op:operator pos:line="5528" pos:column="27">=</op:operator> <call><name><name pos:line="5528" pos:column="29">Notepad_plus</name><op:operator pos:line="5528" pos:column="41">::</op:operator><name pos:line="5528" pos:column="43">_pPublicInterface</name><op:operator pos:line="5528" pos:column="60">-&gt;</op:operator><name pos:line="5528" pos:column="62">getHSelf</name></name><argument_list pos:line="5528" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="5529" pos:column="9">params</name><op:operator pos:line="5529" pos:column="15">.</op:operator><name pos:line="5529" pos:column="16">_text2display</name></name> <op:operator pos:line="5529" pos:column="30">=</op:operator> <name><name pos:line="5529" pos:column="32">quotes</name><index pos:line="5529" pos:column="38">[<expr><name pos:line="5529" pos:column="39">index</name></expr>]</index></name><op:operator pos:line="5529" pos:column="45">.</op:operator><name pos:line="5529" pos:column="46">_quote</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="5530" pos:column="9">params</name><op:operator pos:line="5530" pos:column="15">.</op:operator><name pos:line="5530" pos:column="16">_quoter</name></name> <op:operator pos:line="5530" pos:column="24">=</op:operator> <name><name pos:line="5530" pos:column="26">quotes</name><index pos:line="5530" pos:column="32">[<expr><name pos:line="5530" pos:column="33">index</name></expr>]</index></name><op:operator pos:line="5530" pos:column="39">.</op:operator><name pos:line="5530" pos:column="40">_quoter</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="5531" pos:column="9">params</name><op:operator pos:line="5531" pos:column="15">.</op:operator><name pos:line="5531" pos:column="16">_pCurrentView</name></name> <op:operator pos:line="5531" pos:column="30">=</op:operator> <name pos:line="5531" pos:column="32">_pEditView</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="5532" pos:column="9">params</name><op:operator pos:line="5532" pos:column="15">.</op:operator><name pos:line="5532" pos:column="16">_shouldBeTrolling</name></name> <op:operator pos:line="5532" pos:column="34">=</op:operator> <name pos:line="5532" pos:column="36">index</name> <op:operator pos:line="5532" pos:column="42">&lt;</op:operator> <lit:literal type="number" pos:line="5532" pos:column="44">20</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5533" pos:column="9">HANDLE</name></type> <name pos:line="5533" pos:column="16">hThread</name> <init pos:line="5533" pos:column="24">= <expr><call><name><op:operator pos:line="5533" pos:column="26">::</op:operator><name pos:line="5533" pos:column="28">CreateThread</name></name><argument_list pos:line="5533" pos:column="40">(<argument><expr><name pos:line="5533" pos:column="41">NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5533" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5533" pos:column="50">threadTextPlayer</name></expr></argument>, <argument><expr><op:operator pos:line="5533" pos:column="68">&amp;</op:operator><name pos:line="5533" pos:column="69">params</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5533" pos:column="77">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5533" pos:column="80">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="5534" pos:column="5">::</op:operator><name pos:line="5534" pos:column="7">CloseHandle</name></name><argument_list pos:line="5534" pos:column="18">(<argument><expr><name pos:line="5534" pos:column="19">hThread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<cpp:pragma pos:line="5538" pos:column="1">#<cpp:directive pos:line="5538" pos:column="2">pragma</cpp:directive> warning( disable : 4127 )</cpp:pragma>
<comment type="line" pos:line="5539" pos:column="1">//--FLS: undoStreamComment: New function to undo stream comment around or within selection end-points.</comment>
<function><type><name pos:line="5540" pos:column="1">bool</name></type> <name><name pos:line="5540" pos:column="6">Notepad_plus</name><op:operator pos:line="5540" pos:column="18">::</op:operator><name pos:line="5540" pos:column="20">undoStreamComment</name></name><parameter_list pos:line="5540" pos:column="37">()</parameter_list>
<block pos:line="5541" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5542" pos:column="9">const</specifier> <name pos:line="5542" pos:column="15">TCHAR</name> <type:modifier pos:line="5542" pos:column="21">*</type:modifier></type><name pos:line="5542" pos:column="22">commentStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5543" pos:column="9">const</specifier> <name pos:line="5543" pos:column="15">TCHAR</name> <type:modifier pos:line="5543" pos:column="21">*</type:modifier></type><name pos:line="5543" pos:column="22">commentEnd</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="5545" pos:column="9">generic_string</name></type> <name pos:line="5545" pos:column="24">symbolStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5546" pos:column="9">generic_string</name></type> <name pos:line="5546" pos:column="24">symbolEnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5547" pos:column="9">const</specifier> <name pos:line="5547" pos:column="15">int</name></type> <name pos:line="5547" pos:column="19">charbufLen</name> <init pos:line="5547" pos:column="30">= <expr><lit:literal type="number" pos:line="5547" pos:column="32">10</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="5548" pos:column="5">TCHAR</name></type> <name><name pos:line="5548" pos:column="11">charbuf</name><index pos:line="5548" pos:column="18">[<expr><name pos:line="5548" pos:column="19">charbufLen</name></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="5550" pos:column="9">bool</name></type> <name pos:line="5550" pos:column="14">retVal</name> <init pos:line="5550" pos:column="21">= <expr><lit:literal type="boolean" pos:line="5550" pos:column="23">false</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="5552" pos:column="9">Buffer</name> <type:modifier pos:line="5552" pos:column="16">*</type:modifier></type> <name pos:line="5552" pos:column="18">buf</name> <init pos:line="5552" pos:column="22">= <expr><call><name><name pos:line="5552" pos:column="24">_pEditView</name><op:operator pos:line="5552" pos:column="34">-&gt;</op:operator><name pos:line="5552" pos:column="36">getCurrentBuffer</name></name><argument_list pos:line="5552" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="5553" pos:column="9">//--LS: Avoid side-effects (e.g. cursor moves number of comment-characters) when file is read-only.</comment>
	<if pos:line="5554" pos:column="9">if <condition pos:line="5554" pos:column="12">(<expr><call><name><name pos:line="5554" pos:column="13">buf</name><op:operator pos:line="5554" pos:column="16">-&gt;</op:operator><name pos:line="5554" pos:column="18">isReadOnly</name></name><argument_list pos:line="5554" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="5554" pos:column="31"> 
		<return pos:line="5555" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5555" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="5556" pos:column="9">if <condition pos:line="5556" pos:column="12">(<expr><call><name><name pos:line="5556" pos:column="13">buf</name><op:operator pos:line="5556" pos:column="16">-&gt;</op:operator><name pos:line="5556" pos:column="18">getLangType</name></name><argument_list pos:line="5556" pos:column="29">()</argument_list></call> <op:operator pos:line="5556" pos:column="32">==</op:operator> <name pos:line="5556" pos:column="35">L_USER</name></expr>)</condition><then pos:line="5556" pos:column="42">
	<block pos:line="5557" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5558" pos:column="17">UserLangContainer</name> <type:modifier pos:line="5558" pos:column="35">*</type:modifier></type> <name pos:line="5558" pos:column="37">userLangContainer</name> <init pos:line="5558" pos:column="55">= <expr><call><name><name pos:line="5558" pos:column="57">NppParameters</name><op:operator pos:line="5558" pos:column="70">::</op:operator><name pos:line="5558" pos:column="72">getInstance</name></name><argument_list pos:line="5558" pos:column="83">()</argument_list></call><op:operator pos:line="5558" pos:column="85">-&gt;</op:operator><call><name pos:line="5558" pos:column="87">getULCFromName</name><argument_list pos:line="5558" pos:column="101">(<argument><expr><call><name><name pos:line="5558" pos:column="102">buf</name><op:operator pos:line="5558" pos:column="105">-&gt;</op:operator><name pos:line="5558" pos:column="107">getUserDefineLangName</name></name><argument_list pos:line="5558" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5559" pos:column="17">if <condition pos:line="5559" pos:column="20">(<expr><op:operator pos:line="5559" pos:column="21">!</op:operator><name pos:line="5559" pos:column="22">userLangContainer</name></expr>)</condition><then pos:line="5559" pos:column="40">
			<return pos:line="5560" pos:column="25">return <expr><lit:literal type="boolean" pos:line="5560" pos:column="32">false</lit:literal></expr>;</return></then></if>

		<expr_stmt><expr><name pos:line="5562" pos:column="17">symbolStart</name> <op:operator pos:line="5562" pos:column="29">=</op:operator> <call><name pos:line="5562" pos:column="31">extractSymbol</name><argument_list pos:line="5562" pos:column="44">(<argument><expr><lit:literal type="char" pos:line="5562" pos:column="45">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="5562" pos:column="50">'1'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5562" pos:column="55">userLangContainer</name><op:operator pos:line="5562" pos:column="72">-&gt;</op:operator><name pos:line="5562" pos:column="74">_keywordLists</name><index pos:line="5562" pos:column="87">[<expr><name pos:line="5562" pos:column="88">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5563" pos:column="17">commentStart</name> <op:operator pos:line="5563" pos:column="30">=</op:operator> <call><name><name pos:line="5563" pos:column="32">symbolStart</name><op:operator pos:line="5563" pos:column="43">.</op:operator><name pos:line="5563" pos:column="44">c_str</name></name><argument_list pos:line="5563" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5564" pos:column="17">symbolEnd</name> <op:operator pos:line="5564" pos:column="27">=</op:operator> <call><name pos:line="5564" pos:column="29">extractSymbol</name><argument_list pos:line="5564" pos:column="42">(<argument><expr><lit:literal type="char" pos:line="5564" pos:column="43">'0'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="5564" pos:column="48">'2'</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5564" pos:column="53">userLangContainer</name><op:operator pos:line="5564" pos:column="70">-&gt;</op:operator><name pos:line="5564" pos:column="72">_keywordLists</name><index pos:line="5564" pos:column="85">[<expr><name pos:line="5564" pos:column="86">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5565" pos:column="17">commentEnd</name> <op:operator pos:line="5565" pos:column="28">=</op:operator> <call><name><name pos:line="5565" pos:column="30">symbolEnd</name><op:operator pos:line="5565" pos:column="39">.</op:operator><name pos:line="5565" pos:column="40">c_str</name></name><argument_list pos:line="5565" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="5567" pos:column="9">else
	<block pos:line="5568" pos:column="9">{
		<expr_stmt><expr><name pos:line="5569" pos:column="17">commentStart</name> <op:operator pos:line="5569" pos:column="30">=</op:operator> <call><name><name pos:line="5569" pos:column="32">buf</name><op:operator pos:line="5569" pos:column="35">-&gt;</op:operator><name pos:line="5569" pos:column="37">getCommentStart</name></name><argument_list pos:line="5569" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5570" pos:column="17">commentEnd</name> <op:operator pos:line="5570" pos:column="28">=</op:operator> <call><name><name pos:line="5570" pos:column="30">buf</name><op:operator pos:line="5570" pos:column="33">-&gt;</op:operator><name pos:line="5570" pos:column="35">getCommentEnd</name></name><argument_list pos:line="5570" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="5573" pos:column="9">if <condition pos:line="5573" pos:column="12">(<expr><op:operator pos:line="5573" pos:column="13">(</op:operator><op:operator pos:line="5573" pos:column="14">!</op:operator><name pos:line="5573" pos:column="15">commentStart</name><op:operator pos:line="5573" pos:column="27">)</op:operator> <op:operator pos:line="5573" pos:column="29">||</op:operator> <op:operator pos:line="5573" pos:column="32">(</op:operator><op:operator pos:line="5573" pos:column="33">!</op:operator><name><name pos:line="5573" pos:column="34">commentStart</name><index pos:line="5573" pos:column="46">[<expr><lit:literal type="number" pos:line="5573" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="5573" pos:column="49">)</op:operator></expr>)</condition><then pos:line="5573" pos:column="51">
		<return pos:line="5574" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5574" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="5575" pos:column="9">if <condition pos:line="5575" pos:column="12">(<expr><op:operator pos:line="5575" pos:column="13">(</op:operator><op:operator pos:line="5575" pos:column="14">!</op:operator><name pos:line="5575" pos:column="15">commentEnd</name><op:operator pos:line="5575" pos:column="25">)</op:operator> <op:operator pos:line="5575" pos:column="27">||</op:operator> <op:operator pos:line="5575" pos:column="30">(</op:operator><op:operator pos:line="5575" pos:column="31">!</op:operator><name><name pos:line="5575" pos:column="32">commentEnd</name><index pos:line="5575" pos:column="42">[<expr><lit:literal type="number" pos:line="5575" pos:column="43">0</lit:literal></expr>]</index></name><op:operator pos:line="5575" pos:column="45">)</op:operator></expr>)</condition><then pos:line="5575" pos:column="47">
		<return pos:line="5576" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5576" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<function_decl><type><name pos:line="5578" pos:column="9">generic_string</name></type> <name pos:line="5578" pos:column="24">start_comment</name><parameter_list pos:line="5578" pos:column="37">(<param><decl><type><name pos:line="5578" pos:column="38">commentStart</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="5579" pos:column="9">generic_string</name></type> <name pos:line="5579" pos:column="24">end_comment</name><parameter_list pos:line="5579" pos:column="35">(<param><decl><type><name pos:line="5579" pos:column="36">commentEnd</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="5580" pos:column="9">generic_string</name></type> <name pos:line="5580" pos:column="24">white_space</name><argument_list pos:line="5580" pos:column="35">(<argument><expr><call><name pos:line="5580" pos:column="36">TEXT</name><argument_list pos:line="5580" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="5580" pos:column="41">" "</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5581" pos:column="9">int</name></type> <name pos:line="5581" pos:column="13">start_comment_length</name> <init pos:line="5581" pos:column="34">= <expr><call><name><name pos:line="5581" pos:column="36">start_comment</name><op:operator pos:line="5581" pos:column="49">.</op:operator><name pos:line="5581" pos:column="50">length</name></name><argument_list pos:line="5581" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5582" pos:column="9">int</name></type> <name pos:line="5582" pos:column="13">end_comment_length</name> <init pos:line="5582" pos:column="32">= <expr><call><name><name pos:line="5582" pos:column="34">end_comment</name><op:operator pos:line="5582" pos:column="45">.</op:operator><name pos:line="5582" pos:column="46">length</name></name><argument_list pos:line="5582" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5583" pos:column="9">int</name></type> <name pos:line="5583" pos:column="13">startCommentLength</name></decl><op:operator pos:line="5583" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="5583" pos:column="33">endCommentLength</name></decl>;</decl_stmt>

	<do pos:line="5585" pos:column="9">do <block pos:line="5585" pos:column="12">{ <comment type="line" pos:line="5585" pos:column="14">// do as long as stream-comments are within selection</comment>

		<decl_stmt><decl><type><name pos:line="5587" pos:column="17">int</name></type> <name pos:line="5587" pos:column="21">selectionStart</name> <init pos:line="5587" pos:column="36">= <expr><call><name><name pos:line="5587" pos:column="38">_pEditView</name><op:operator pos:line="5587" pos:column="48">-&gt;</op:operator><name pos:line="5587" pos:column="50">execute</name></name><argument_list pos:line="5587" pos:column="57">(<argument><expr><name pos:line="5587" pos:column="58">SCI_GETSELECTIONSTART</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5588" pos:column="17">int</name></type> <name pos:line="5588" pos:column="21">selectionEnd</name> <init pos:line="5588" pos:column="34">= <expr><call><name><name pos:line="5588" pos:column="36">_pEditView</name><op:operator pos:line="5588" pos:column="46">-&gt;</op:operator><name pos:line="5588" pos:column="48">execute</name></name><argument_list pos:line="5588" pos:column="55">(<argument><expr><name pos:line="5588" pos:column="56">SCI_GETSELECTIONEND</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5589" pos:column="17">int</name></type> <name pos:line="5589" pos:column="21">caretPosition</name> <init pos:line="5589" pos:column="35">= <expr><call><name><name pos:line="5589" pos:column="37">_pEditView</name><op:operator pos:line="5589" pos:column="47">-&gt;</op:operator><name pos:line="5589" pos:column="49">execute</name></name><argument_list pos:line="5589" pos:column="56">(<argument><expr><name pos:line="5589" pos:column="57">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5590" pos:column="17">int</name></type> <name pos:line="5590" pos:column="21">docLength</name> <init pos:line="5590" pos:column="31">= <expr><op:operator pos:line="5590" pos:column="33">(</op:operator><call><name><name pos:line="5590" pos:column="34">_pEditView</name><op:operator pos:line="5590" pos:column="44">-&gt;</op:operator><name pos:line="5590" pos:column="46">execute</name></name><argument_list pos:line="5590" pos:column="53">(<argument><expr><name pos:line="5590" pos:column="54">SCI_GETLENGTH</name></expr></argument>)</argument_list></call><op:operator pos:line="5590" pos:column="68">)</op:operator></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="5592" pos:column="17">// checking if caret is located in _beginning_ of selected block</comment>
		<decl_stmt><decl><type><name pos:line="5593" pos:column="17">bool</name></type> <name pos:line="5593" pos:column="22">move_caret</name> <init pos:line="5593" pos:column="33">= <expr><name pos:line="5593" pos:column="35">caretPosition</name> <op:operator pos:line="5593" pos:column="49">&lt;</op:operator> <name pos:line="5593" pos:column="51">selectionEnd</name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="5595" pos:column="17">//-- Note: The caretPosition is either at selectionEnd or at selectionStart!! selectionStart is always before (smaller) than selectionEnd!!</comment>

		<comment type="line" pos:line="5597" pos:column="17">//-- First, search all start_comment and end_comment before and after the selectionStart and selectionEnd position.</comment>
		<decl_stmt><decl><type><specifier pos:line="5598" pos:column="17">const</specifier> <name pos:line="5598" pos:column="23">int</name></type> <name pos:line="5598" pos:column="27">iSelStart</name><init pos:line="5598" pos:column="36">=<expr><lit:literal type="number" pos:line="5598" pos:column="37">0</lit:literal></expr></init><op:operator pos:line="5598" pos:column="38">,</op:operator> <name pos:line="5598" pos:column="40">iSelEnd</name><init pos:line="5598" pos:column="47">=<expr><lit:literal type="number" pos:line="5598" pos:column="48">1</lit:literal></expr></init></decl>;</decl_stmt>
		<cpp:define pos:line="5599" pos:column="17">#<cpp:directive pos:line="5599" pos:column="18">define</cpp:directive> <cpp:macro><name pos:line="5599" pos:column="25">N_CMNT</name></cpp:macro> <cpp:value pos:line="5599" pos:column="32">2</cpp:value></cpp:define>
		<decl_stmt><decl><type><name pos:line="5600" pos:column="17">int</name></type> <name><name pos:line="5600" pos:column="21">posStartCommentBefore</name><index pos:line="5600" pos:column="42">[<expr><name pos:line="5600" pos:column="43">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5600" pos:column="50">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5600" pos:column="52">posEndCommentBefore</name><index pos:line="5600" pos:column="71">[<expr><name pos:line="5600" pos:column="72">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5600" pos:column="79">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5600" pos:column="81">posStartCommentAfter</name><index pos:line="5600" pos:column="101">[<expr><name pos:line="5600" pos:column="102">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5600" pos:column="109">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5600" pos:column="111">posEndCommentAfter</name><index pos:line="5600" pos:column="129">[<expr><name pos:line="5600" pos:column="130">N_CMNT</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5601" pos:column="17">bool</name></type> <name><name pos:line="5601" pos:column="22">blnStartCommentBefore</name><index pos:line="5601" pos:column="43">[<expr><name pos:line="5601" pos:column="44">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5601" pos:column="51">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5601" pos:column="53">blnEndCommentBefore</name><index pos:line="5601" pos:column="72">[<expr><name pos:line="5601" pos:column="73">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5601" pos:column="80">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5601" pos:column="82">blnStartCommentAfter</name><index pos:line="5601" pos:column="102">[<expr><name pos:line="5601" pos:column="103">N_CMNT</name></expr>]</index></name></decl><op:operator pos:line="5601" pos:column="110">,</op:operator> <decl><type ref="prev"/><name><name pos:line="5601" pos:column="112">blnEndCommentAfter</name><index pos:line="5601" pos:column="130">[<expr><name pos:line="5601" pos:column="131">N_CMNT</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5602" pos:column="17">int</name></type> <name pos:line="5602" pos:column="21">posStartComment</name></decl><op:operator pos:line="5602" pos:column="36">,</op:operator> <decl><type ref="prev"/><name pos:line="5602" pos:column="38">posEndComment</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5603" pos:column="17">int</name></type> <name pos:line="5603" pos:column="21">selectionStartMove</name></decl><op:operator pos:line="5603" pos:column="39">,</op:operator> <decl><type ref="prev"/><name pos:line="5603" pos:column="41">selectionEndMove</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5604" pos:column="17">int</name></type> <name pos:line="5604" pos:column="21">flags</name></decl>;</decl_stmt>

		<comment type="line" pos:line="5606" pos:column="17">//-- Directly use Scintilla-Functions </comment>
		<comment type="line" pos:line="5607" pos:column="17">//   rather than _findReplaceDlg.processFindNext()which does not return the find-position and is not quiet!</comment>
		<expr_stmt><expr><name pos:line="5608" pos:column="17">flags</name> <op:operator pos:line="5608" pos:column="23">=</op:operator> <name pos:line="5608" pos:column="25">SCFIND_WORDSTART</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5609" pos:column="17">_pEditView</name><op:operator pos:line="5609" pos:column="27">-&gt;</op:operator><name pos:line="5609" pos:column="29">execute</name></name><argument_list pos:line="5609" pos:column="36">(<argument><expr><name pos:line="5609" pos:column="37">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="5609" pos:column="57">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="5610" pos:column="17">//-- Find all start- and end-comments before and after the selectionStart position.</comment>
		<comment type="line" pos:line="5611" pos:column="17">//-- When searching upwards the start-position for searching must be moved one after the current position</comment>
		<comment type="line" pos:line="5612" pos:column="17">//   to find a search-string just starting before the current position!</comment>
		<comment type="line" pos:line="5613" pos:column="17">//-- Direction DIR_UP ---</comment>
		<expr_stmt><expr><name><name pos:line="5614" pos:column="17">posStartCommentBefore</name><index pos:line="5614" pos:column="38">[<expr><name pos:line="5614" pos:column="39">iSelStart</name></expr>]</index></name> <op:operator pos:line="5614" pos:column="50">=</op:operator> <call><name><name pos:line="5614" pos:column="52">_pEditView</name><op:operator pos:line="5614" pos:column="62">-&gt;</op:operator><name pos:line="5614" pos:column="64">searchInTarget</name></name><argument_list pos:line="5614" pos:column="78">(<argument><expr><call><name><name pos:line="5614" pos:column="79">start_comment</name><op:operator pos:line="5614" pos:column="92">.</op:operator><name pos:line="5614" pos:column="93">c_str</name></name><argument_list pos:line="5614" pos:column="98">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5614" pos:column="102">start_comment_length</name></expr></argument>, <argument><expr><name pos:line="5614" pos:column="124">selectionStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5614" pos:column="140">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="5615" pos:column="17">(</op:operator><name><name pos:line="5615" pos:column="18">posStartCommentBefore</name><index pos:line="5615" pos:column="39">[<expr><name pos:line="5615" pos:column="40">iSelStart</name></expr>]</index></name> <op:operator pos:line="5615" pos:column="51">==</op:operator> <op:operator pos:line="5615" pos:column="54">-</op:operator><lit:literal type="number" pos:line="5615" pos:column="55">1</lit:literal> <op:operator pos:line="5615" pos:column="57">?</op:operator> <name><name pos:line="5615" pos:column="59">blnStartCommentBefore</name><index pos:line="5615" pos:column="80">[<expr><name pos:line="5615" pos:column="81">iSelStart</name></expr>]</index></name> <op:operator pos:line="5615" pos:column="92">=</op:operator> <lit:literal type="boolean" pos:line="5615" pos:column="94">false</lit:literal> <op:operator pos:line="5615" pos:column="100">:</op:operator> <name><name pos:line="5615" pos:column="102">blnStartCommentBefore</name><index pos:line="5615" pos:column="123">[<expr><name pos:line="5615" pos:column="124">iSelStart</name></expr>]</index></name> <op:operator pos:line="5615" pos:column="135">=</op:operator> <lit:literal type="boolean" pos:line="5615" pos:column="137">true</lit:literal><op:operator pos:line="5615" pos:column="141">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="5616" pos:column="17">posEndCommentBefore</name><index pos:line="5616" pos:column="36">[<expr><name pos:line="5616" pos:column="37">iSelStart</name></expr>]</index></name> <op:operator pos:line="5616" pos:column="48">=</op:operator> <call><name><name pos:line="5616" pos:column="50">_pEditView</name><op:operator pos:line="5616" pos:column="60">-&gt;</op:operator><name pos:line="5616" pos:column="62">searchInTarget</name></name><argument_list pos:line="5616" pos:column="76">(<argument><expr><call><name><name pos:line="5616" pos:column="77">end_comment</name><op:operator pos:line="5616" pos:column="88">.</op:operator><name pos:line="5616" pos:column="89">c_str</name></name><argument_list pos:line="5616" pos:column="94">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5616" pos:column="98">end_comment_length</name></expr></argument>, <argument><expr><name pos:line="5616" pos:column="118">selectionStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5616" pos:column="134">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="5617" pos:column="17">(</op:operator><name><name pos:line="5617" pos:column="18">posEndCommentBefore</name><index pos:line="5617" pos:column="37">[<expr><name pos:line="5617" pos:column="38">iSelStart</name></expr>]</index></name> <op:operator pos:line="5617" pos:column="49">==</op:operator> <op:operator pos:line="5617" pos:column="52">-</op:operator><lit:literal type="number" pos:line="5617" pos:column="53">1</lit:literal> <op:operator pos:line="5617" pos:column="55">?</op:operator> <name><name pos:line="5617" pos:column="57">blnEndCommentBefore</name><index pos:line="5617" pos:column="76">[<expr><name pos:line="5617" pos:column="77">iSelStart</name></expr>]</index></name> <op:operator pos:line="5617" pos:column="88">=</op:operator> <lit:literal type="boolean" pos:line="5617" pos:column="90">false</lit:literal> <op:operator pos:line="5617" pos:column="96">:</op:operator> <name><name pos:line="5617" pos:column="98">blnEndCommentBefore</name><index pos:line="5617" pos:column="117">[<expr><name pos:line="5617" pos:column="118">iSelStart</name></expr>]</index></name> <op:operator pos:line="5617" pos:column="129">=</op:operator> <lit:literal type="boolean" pos:line="5617" pos:column="131">true</lit:literal><op:operator pos:line="5617" pos:column="135">)</op:operator></expr>;</expr_stmt>
		<comment type="line" pos:line="5618" pos:column="17">//-- Direction DIR_DOWN ---</comment>
		<expr_stmt><expr><name><name pos:line="5619" pos:column="17">posStartCommentAfter</name><index pos:line="5619" pos:column="37">[<expr><name pos:line="5619" pos:column="38">iSelStart</name></expr>]</index></name> <op:operator pos:line="5619" pos:column="49">=</op:operator> <call><name><name pos:line="5619" pos:column="51">_pEditView</name><op:operator pos:line="5619" pos:column="61">-&gt;</op:operator><name pos:line="5619" pos:column="63">searchInTarget</name></name><argument_list pos:line="5619" pos:column="77">(<argument><expr><call><name><name pos:line="5619" pos:column="78">start_comment</name><op:operator pos:line="5619" pos:column="91">.</op:operator><name pos:line="5619" pos:column="92">c_str</name></name><argument_list pos:line="5619" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5619" pos:column="101">start_comment_length</name></expr></argument>, <argument><expr><name pos:line="5619" pos:column="123">selectionStart</name></expr></argument>, <argument><expr><name pos:line="5619" pos:column="139">docLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="5620" pos:column="17">(</op:operator><name><name pos:line="5620" pos:column="18">posStartCommentAfter</name><index pos:line="5620" pos:column="38">[<expr><name pos:line="5620" pos:column="39">iSelStart</name></expr>]</index></name> <op:operator pos:line="5620" pos:column="50">==</op:operator> <op:operator pos:line="5620" pos:column="53">-</op:operator><lit:literal type="number" pos:line="5620" pos:column="54">1</lit:literal> <op:operator pos:line="5620" pos:column="56">?</op:operator> <name><name pos:line="5620" pos:column="58">blnStartCommentAfter</name><index pos:line="5620" pos:column="78">[<expr><name pos:line="5620" pos:column="79">iSelStart</name></expr>]</index></name> <op:operator pos:line="5620" pos:column="90">=</op:operator> <lit:literal type="boolean" pos:line="5620" pos:column="92">false</lit:literal> <op:operator pos:line="5620" pos:column="98">:</op:operator> <name><name pos:line="5620" pos:column="100">blnStartCommentAfter</name><index pos:line="5620" pos:column="120">[<expr><name pos:line="5620" pos:column="121">iSelStart</name></expr>]</index></name> <op:operator pos:line="5620" pos:column="132">=</op:operator> <lit:literal type="boolean" pos:line="5620" pos:column="134">true</lit:literal><op:operator pos:line="5620" pos:column="138">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="5621" pos:column="17">posEndCommentAfter</name><index pos:line="5621" pos:column="35">[<expr><name pos:line="5621" pos:column="36">iSelStart</name></expr>]</index></name> <op:operator pos:line="5621" pos:column="47">=</op:operator> <call><name><name pos:line="5621" pos:column="49">_pEditView</name><op:operator pos:line="5621" pos:column="59">-&gt;</op:operator><name pos:line="5621" pos:column="61">searchInTarget</name></name><argument_list pos:line="5621" pos:column="75">(<argument><expr><call><name><name pos:line="5621" pos:column="76">end_comment</name><op:operator pos:line="5621" pos:column="87">.</op:operator><name pos:line="5621" pos:column="88">c_str</name></name><argument_list pos:line="5621" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5621" pos:column="97">end_comment_length</name></expr></argument>, <argument><expr><name pos:line="5621" pos:column="117">selectionStart</name></expr></argument>, <argument><expr><name pos:line="5621" pos:column="133">docLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="5622" pos:column="17">(</op:operator><name><name pos:line="5622" pos:column="18">posEndCommentAfter</name><index pos:line="5622" pos:column="36">[<expr><name pos:line="5622" pos:column="37">iSelStart</name></expr>]</index></name> <op:operator pos:line="5622" pos:column="48">==</op:operator> <op:operator pos:line="5622" pos:column="51">-</op:operator><lit:literal type="number" pos:line="5622" pos:column="52">1</lit:literal> <op:operator pos:line="5622" pos:column="54">?</op:operator> <name><name pos:line="5622" pos:column="56">blnEndCommentAfter</name><index pos:line="5622" pos:column="74">[<expr><name pos:line="5622" pos:column="75">iSelStart</name></expr>]</index></name> <op:operator pos:line="5622" pos:column="86">=</op:operator> <lit:literal type="boolean" pos:line="5622" pos:column="88">false</lit:literal> <op:operator pos:line="5622" pos:column="94">:</op:operator> <name><name pos:line="5622" pos:column="96">blnEndCommentAfter</name><index pos:line="5622" pos:column="114">[<expr><name pos:line="5622" pos:column="115">iSelStart</name></expr>]</index></name> <op:operator pos:line="5622" pos:column="126">=</op:operator> <lit:literal type="boolean" pos:line="5622" pos:column="128">true</lit:literal><op:operator pos:line="5622" pos:column="132">)</op:operator></expr>;</expr_stmt>

		<comment type="line" pos:line="5624" pos:column="17">//-- Check, if selectionStart or selectionEnd is within a stream comment -----</comment>
		<comment type="line" pos:line="5625" pos:column="17">//   or if the selection includes a complete stream-comment!! ----------------</comment>
		<decl_stmt><decl><type><name pos:line="5626" pos:column="17">bool</name></type> <name pos:line="5626" pos:column="22">blnCommentFound</name> <init pos:line="5626" pos:column="38">= <expr><lit:literal type="boolean" pos:line="5626" pos:column="40">false</lit:literal></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="5627" pos:column="17">//-- First, check if there is a stream-comment around the selectionStart position:</comment>
		<if pos:line="5628" pos:column="17">if <condition pos:line="5628" pos:column="20">(<expr><op:operator pos:line="5628" pos:column="21">(</op:operator><name><name pos:line="5628" pos:column="22">blnStartCommentBefore</name><index pos:line="5628" pos:column="43">[<expr><name pos:line="5628" pos:column="44">iSelStart</name></expr>]</index></name> <op:operator pos:line="5628" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="5628" pos:column="58">blnEndCommentAfter</name><index pos:line="5628" pos:column="76">[<expr><name pos:line="5628" pos:column="77">iSelStart</name></expr>]</index></name><op:operator pos:line="5628" pos:column="87">)</op:operator> 
			<op:operator pos:line="5629" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="5629" pos:column="28">(</op:operator><op:operator pos:line="5629" pos:column="29">!</op:operator><name><name pos:line="5629" pos:column="30">blnEndCommentBefore</name><index pos:line="5629" pos:column="49">[<expr><name pos:line="5629" pos:column="50">iSelStart</name></expr>]</index></name> <op:operator pos:line="5629" pos:column="61">||</op:operator> <op:operator pos:line="5629" pos:column="64">(</op:operator><name><name pos:line="5629" pos:column="65">posStartCommentBefore</name><index pos:line="5629" pos:column="86">[<expr><name pos:line="5629" pos:column="87">iSelStart</name></expr>]</index></name> <op:operator pos:line="5629" pos:column="98">&gt;=</op:operator> <name><name pos:line="5629" pos:column="101">posEndCommentBefore</name><index pos:line="5629" pos:column="120">[<expr><name pos:line="5629" pos:column="121">iSelStart</name></expr>]</index></name><op:operator pos:line="5629" pos:column="131">)</op:operator><op:operator pos:line="5629" pos:column="132">)</op:operator> 
			<op:operator pos:line="5630" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="5630" pos:column="28">(</op:operator><op:operator pos:line="5630" pos:column="29">!</op:operator><name><name pos:line="5630" pos:column="30">blnStartCommentAfter</name><index pos:line="5630" pos:column="50">[<expr><name pos:line="5630" pos:column="51">iSelStart</name></expr>]</index></name> <op:operator pos:line="5630" pos:column="62">||</op:operator> <op:operator pos:line="5630" pos:column="65">(</op:operator><name><name pos:line="5630" pos:column="66">posEndCommentAfter</name><index pos:line="5630" pos:column="84">[<expr><name pos:line="5630" pos:column="85">iSelStart</name></expr>]</index></name> <op:operator pos:line="5630" pos:column="96">&lt;=</op:operator> <name><name pos:line="5630" pos:column="99">posStartCommentAfter</name><index pos:line="5630" pos:column="119">[<expr><name pos:line="5630" pos:column="120">iSelStart</name></expr>]</index></name><op:operator pos:line="5630" pos:column="130">)</op:operator><op:operator pos:line="5630" pos:column="131">)</op:operator></expr>)</condition><then pos:line="5630" pos:column="133"> <block pos:line="5630" pos:column="134">{
				<expr_stmt><expr><name pos:line="5631" pos:column="33">blnCommentFound</name> <op:operator pos:line="5631" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="5631" pos:column="51">true</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="5632" pos:column="33">posStartComment</name> <op:operator pos:line="5632" pos:column="49">=</op:operator> <name><name pos:line="5632" pos:column="51">posStartCommentBefore</name><index pos:line="5632" pos:column="72">[<expr><name pos:line="5632" pos:column="73">iSelStart</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="5633" pos:column="33">posEndComment</name>   <op:operator pos:line="5633" pos:column="49">=</op:operator> <name><name pos:line="5633" pos:column="51">posEndCommentAfter</name><index pos:line="5633" pos:column="69">[<expr><name pos:line="5633" pos:column="70">iSelStart</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></then>
		<comment type="line" pos:line="5635" pos:column="17">//-- Second, check if there is a stream-comment around the selectionEnd position:</comment>
		<else pos:line="5636" pos:column="17">else <block pos:line="5636" pos:column="22">{
			<comment type="line" pos:line="5637" pos:column="25">//-- Find all start- and end-comments before and after the selectionEnd position.</comment>
			<comment type="line" pos:line="5638" pos:column="25">//-- Direction DIR_UP ---</comment>
			<expr_stmt><expr><name><name pos:line="5639" pos:column="25">posStartCommentBefore</name><index pos:line="5639" pos:column="46">[<expr><name pos:line="5639" pos:column="47">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5639" pos:column="56">=</op:operator> <call><name><name pos:line="5639" pos:column="58">_pEditView</name><op:operator pos:line="5639" pos:column="68">-&gt;</op:operator><name pos:line="5639" pos:column="70">searchInTarget</name></name><argument_list pos:line="5639" pos:column="84">(<argument><expr><call><name><name pos:line="5639" pos:column="85">start_comment</name><op:operator pos:line="5639" pos:column="98">.</op:operator><name pos:line="5639" pos:column="99">c_str</name></name><argument_list pos:line="5639" pos:column="104">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5639" pos:column="108">start_comment_length</name></expr></argument>, <argument><expr><name pos:line="5639" pos:column="130">selectionEnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5639" pos:column="144">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="5640" pos:column="25">(</op:operator><name><name pos:line="5640" pos:column="26">posStartCommentBefore</name><index pos:line="5640" pos:column="47">[<expr><name pos:line="5640" pos:column="48">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5640" pos:column="57">==</op:operator> <op:operator pos:line="5640" pos:column="60">-</op:operator><lit:literal type="number" pos:line="5640" pos:column="61">1</lit:literal> <op:operator pos:line="5640" pos:column="63">?</op:operator> <name><name pos:line="5640" pos:column="65">blnStartCommentBefore</name><index pos:line="5640" pos:column="86">[<expr><name pos:line="5640" pos:column="87">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5640" pos:column="96">=</op:operator> <lit:literal type="boolean" pos:line="5640" pos:column="98">false</lit:literal> <op:operator pos:line="5640" pos:column="104">:</op:operator> <name><name pos:line="5640" pos:column="106">blnStartCommentBefore</name><index pos:line="5640" pos:column="127">[<expr><name pos:line="5640" pos:column="128">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5640" pos:column="137">=</op:operator> <lit:literal type="boolean" pos:line="5640" pos:column="139">true</lit:literal><op:operator pos:line="5640" pos:column="143">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="5641" pos:column="25">posEndCommentBefore</name><index pos:line="5641" pos:column="44">[<expr><name pos:line="5641" pos:column="45">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5641" pos:column="54">=</op:operator> <call><name><name pos:line="5641" pos:column="56">_pEditView</name><op:operator pos:line="5641" pos:column="66">-&gt;</op:operator><name pos:line="5641" pos:column="68">searchInTarget</name></name><argument_list pos:line="5641" pos:column="82">(<argument><expr><call><name><name pos:line="5641" pos:column="83">end_comment</name><op:operator pos:line="5641" pos:column="94">.</op:operator><name pos:line="5641" pos:column="95">c_str</name></name><argument_list pos:line="5641" pos:column="100">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5641" pos:column="104">end_comment_length</name></expr></argument>, <argument><expr><name pos:line="5641" pos:column="124">selectionEnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5641" pos:column="138">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="5642" pos:column="25">(</op:operator><name><name pos:line="5642" pos:column="26">posEndCommentBefore</name><index pos:line="5642" pos:column="45">[<expr><name pos:line="5642" pos:column="46">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5642" pos:column="55">==</op:operator> <op:operator pos:line="5642" pos:column="58">-</op:operator><lit:literal type="number" pos:line="5642" pos:column="59">1</lit:literal> <op:operator pos:line="5642" pos:column="61">?</op:operator> <name><name pos:line="5642" pos:column="63">blnEndCommentBefore</name><index pos:line="5642" pos:column="82">[<expr><name pos:line="5642" pos:column="83">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5642" pos:column="92">=</op:operator> <lit:literal type="boolean" pos:line="5642" pos:column="94">false</lit:literal> <op:operator pos:line="5642" pos:column="100">:</op:operator> <name><name pos:line="5642" pos:column="102">blnEndCommentBefore</name><index pos:line="5642" pos:column="121">[<expr><name pos:line="5642" pos:column="122">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5642" pos:column="131">=</op:operator> <lit:literal type="boolean" pos:line="5642" pos:column="133">true</lit:literal><op:operator pos:line="5642" pos:column="137">)</op:operator></expr>;</expr_stmt>
			<comment type="line" pos:line="5643" pos:column="25">//-- Direction DIR_DOWN ---</comment>
			<expr_stmt><expr><name><name pos:line="5644" pos:column="25">posStartCommentAfter</name><index pos:line="5644" pos:column="45">[<expr><name pos:line="5644" pos:column="46">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5644" pos:column="55">=</op:operator> <call><name><name pos:line="5644" pos:column="57">_pEditView</name><op:operator pos:line="5644" pos:column="67">-&gt;</op:operator><name pos:line="5644" pos:column="69">searchInTarget</name></name><argument_list pos:line="5644" pos:column="83">(<argument><expr><call><name><name pos:line="5644" pos:column="84">start_comment</name><op:operator pos:line="5644" pos:column="97">.</op:operator><name pos:line="5644" pos:column="98">c_str</name></name><argument_list pos:line="5644" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5644" pos:column="107">start_comment_length</name></expr></argument>, <argument><expr><name pos:line="5644" pos:column="129">selectionEnd</name></expr></argument>, <argument><expr><name pos:line="5644" pos:column="143">docLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="5645" pos:column="25">(</op:operator><name><name pos:line="5645" pos:column="26">posStartCommentAfter</name><index pos:line="5645" pos:column="46">[<expr><name pos:line="5645" pos:column="47">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5645" pos:column="56">==</op:operator> <op:operator pos:line="5645" pos:column="59">-</op:operator><lit:literal type="number" pos:line="5645" pos:column="60">1</lit:literal> <op:operator pos:line="5645" pos:column="62">?</op:operator> <name><name pos:line="5645" pos:column="64">blnStartCommentAfter</name><index pos:line="5645" pos:column="84">[<expr><name pos:line="5645" pos:column="85">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5645" pos:column="94">=</op:operator> <lit:literal type="boolean" pos:line="5645" pos:column="96">false</lit:literal> <op:operator pos:line="5645" pos:column="102">:</op:operator> <name><name pos:line="5645" pos:column="104">blnStartCommentAfter</name><index pos:line="5645" pos:column="124">[<expr><name pos:line="5645" pos:column="125">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5645" pos:column="134">=</op:operator> <lit:literal type="boolean" pos:line="5645" pos:column="136">true</lit:literal><op:operator pos:line="5645" pos:column="140">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="5646" pos:column="25">posEndCommentAfter</name><index pos:line="5646" pos:column="43">[<expr><name pos:line="5646" pos:column="44">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5646" pos:column="53">=</op:operator> <call><name><name pos:line="5646" pos:column="55">_pEditView</name><op:operator pos:line="5646" pos:column="65">-&gt;</op:operator><name pos:line="5646" pos:column="67">searchInTarget</name></name><argument_list pos:line="5646" pos:column="81">(<argument><expr><call><name><name pos:line="5646" pos:column="82">end_comment</name><op:operator pos:line="5646" pos:column="93">.</op:operator><name pos:line="5646" pos:column="94">c_str</name></name><argument_list pos:line="5646" pos:column="99">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5646" pos:column="103">end_comment_length</name></expr></argument>, <argument><expr><name pos:line="5646" pos:column="123">selectionEnd</name></expr></argument>, <argument><expr><name pos:line="5646" pos:column="137">docLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="5647" pos:column="25">(</op:operator><name><name pos:line="5647" pos:column="26">posEndCommentAfter</name><index pos:line="5647" pos:column="44">[<expr><name pos:line="5647" pos:column="45">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5647" pos:column="54">==</op:operator> <op:operator pos:line="5647" pos:column="57">-</op:operator><lit:literal type="number" pos:line="5647" pos:column="58">1</lit:literal> <op:operator pos:line="5647" pos:column="60">?</op:operator> <name><name pos:line="5647" pos:column="62">blnEndCommentAfter</name><index pos:line="5647" pos:column="80">[<expr><name pos:line="5647" pos:column="81">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5647" pos:column="90">=</op:operator> <lit:literal type="boolean" pos:line="5647" pos:column="92">false</lit:literal> <op:operator pos:line="5647" pos:column="98">:</op:operator> <name><name pos:line="5647" pos:column="100">blnEndCommentAfter</name><index pos:line="5647" pos:column="118">[<expr><name pos:line="5647" pos:column="119">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5647" pos:column="128">=</op:operator> <lit:literal type="boolean" pos:line="5647" pos:column="130">true</lit:literal><op:operator pos:line="5647" pos:column="134">)</op:operator></expr>;</expr_stmt>
			<if pos:line="5648" pos:column="25">if <condition pos:line="5648" pos:column="28">(<expr><op:operator pos:line="5648" pos:column="29">(</op:operator><name><name pos:line="5648" pos:column="30">blnStartCommentBefore</name><index pos:line="5648" pos:column="51">[<expr><name pos:line="5648" pos:column="52">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5648" pos:column="61">&amp;&amp;</op:operator> <name><name pos:line="5648" pos:column="64">blnEndCommentAfter</name><index pos:line="5648" pos:column="82">[<expr><name pos:line="5648" pos:column="83">iSelEnd</name></expr>]</index></name><op:operator pos:line="5648" pos:column="91">)</op:operator> 
				<op:operator pos:line="5649" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="5649" pos:column="36">(</op:operator><op:operator pos:line="5649" pos:column="37">!</op:operator><name><name pos:line="5649" pos:column="38">blnEndCommentBefore</name><index pos:line="5649" pos:column="57">[<expr><name pos:line="5649" pos:column="58">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5649" pos:column="67">||</op:operator> <op:operator pos:line="5649" pos:column="70">(</op:operator><name><name pos:line="5649" pos:column="71">posStartCommentBefore</name><index pos:line="5649" pos:column="92">[<expr><name pos:line="5649" pos:column="93">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5649" pos:column="102">&gt;=</op:operator> <name><name pos:line="5649" pos:column="105">posEndCommentBefore</name><index pos:line="5649" pos:column="124">[<expr><name pos:line="5649" pos:column="125">iSelEnd</name></expr>]</index></name><op:operator pos:line="5649" pos:column="133">)</op:operator><op:operator pos:line="5649" pos:column="134">)</op:operator> 
				<op:operator pos:line="5650" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="5650" pos:column="36">(</op:operator><op:operator pos:line="5650" pos:column="37">!</op:operator><name><name pos:line="5650" pos:column="38">blnStartCommentAfter</name><index pos:line="5650" pos:column="58">[<expr><name pos:line="5650" pos:column="59">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5650" pos:column="68">||</op:operator> <op:operator pos:line="5650" pos:column="71">(</op:operator><name><name pos:line="5650" pos:column="72">posEndCommentAfter</name><index pos:line="5650" pos:column="90">[<expr><name pos:line="5650" pos:column="91">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5650" pos:column="100">&lt;=</op:operator> <name><name pos:line="5650" pos:column="103">posStartCommentAfter</name><index pos:line="5650" pos:column="123">[<expr><name pos:line="5650" pos:column="124">iSelEnd</name></expr>]</index></name><op:operator pos:line="5650" pos:column="132">)</op:operator><op:operator pos:line="5650" pos:column="133">)</op:operator></expr>)</condition><then pos:line="5650" pos:column="135"> <block pos:line="5650" pos:column="136">{
					<expr_stmt><expr><name pos:line="5651" pos:column="41">blnCommentFound</name> <op:operator pos:line="5651" pos:column="57">=</op:operator> <lit:literal type="boolean" pos:line="5651" pos:column="59">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="5652" pos:column="41">posStartComment</name> <op:operator pos:line="5652" pos:column="57">=</op:operator> <name><name pos:line="5652" pos:column="59">posStartCommentBefore</name><index pos:line="5652" pos:column="80">[<expr><name pos:line="5652" pos:column="81">iSelEnd</name></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="5653" pos:column="41">posEndComment</name>   <op:operator pos:line="5653" pos:column="57">=</op:operator> <name><name pos:line="5653" pos:column="59">posEndCommentAfter</name><index pos:line="5653" pos:column="77">[<expr><name pos:line="5653" pos:column="78">iSelEnd</name></expr>]</index></name></expr>;</expr_stmt>
			}</block></then>
			<comment type="line" pos:line="5655" pos:column="25">//-- Third, check if there is a stream-comment within the selected area:</comment>
			<else pos:line="5656" pos:column="25">else <if pos:line="5656" pos:column="30">if <condition pos:line="5656" pos:column="33">( <expr><op:operator pos:line="5656" pos:column="35">(</op:operator><name><name pos:line="5656" pos:column="36">blnStartCommentAfter</name><index pos:line="5656" pos:column="56">[<expr><name pos:line="5656" pos:column="57">iSelStart</name></expr>]</index></name> <op:operator pos:line="5656" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="5656" pos:column="71">(</op:operator><name><name pos:line="5656" pos:column="72">posStartCommentAfter</name><index pos:line="5656" pos:column="92">[<expr><name pos:line="5656" pos:column="93">iSelStart</name></expr>]</index></name> <op:operator pos:line="5656" pos:column="104">&lt;</op:operator> <name pos:line="5656" pos:column="106">selectionEnd</name><op:operator pos:line="5656" pos:column="118">)</op:operator><op:operator pos:line="5656" pos:column="119">)</op:operator>
				<op:operator pos:line="5657" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="5657" pos:column="36">(</op:operator><name><name pos:line="5657" pos:column="37">blnEndCommentBefore</name><index pos:line="5657" pos:column="56">[<expr><name pos:line="5657" pos:column="57">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5657" pos:column="66">&amp;&amp;</op:operator> <op:operator pos:line="5657" pos:column="69">(</op:operator><name><name pos:line="5657" pos:column="70">posEndCommentBefore</name><index pos:line="5657" pos:column="89">[<expr><name pos:line="5657" pos:column="90">iSelEnd</name></expr>]</index></name> <op:operator pos:line="5657" pos:column="99">&gt;</op:operator>  <name pos:line="5657" pos:column="102">selectionStart</name><op:operator pos:line="5657" pos:column="116">)</op:operator><op:operator pos:line="5657" pos:column="117">)</op:operator></expr>)</condition><then pos:line="5657" pos:column="119"> <block pos:line="5657" pos:column="120">{
					<comment type="line" pos:line="5658" pos:column="41">//-- If there are more than one stream-comment within the selection, take the first one after selectionStart!!</comment>
					<expr_stmt><expr><name pos:line="5659" pos:column="41">blnCommentFound</name> <op:operator pos:line="5659" pos:column="57">=</op:operator> <lit:literal type="boolean" pos:line="5659" pos:column="59">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="5660" pos:column="41">posStartComment</name> <op:operator pos:line="5660" pos:column="57">=</op:operator> <name><name pos:line="5660" pos:column="59">posStartCommentAfter</name><index pos:line="5660" pos:column="79">[<expr><name pos:line="5660" pos:column="80">iSelStart</name></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="5661" pos:column="41">posEndComment</name>   <op:operator pos:line="5661" pos:column="57">=</op:operator> <name><name pos:line="5661" pos:column="59">posEndCommentAfter</name><index pos:line="5661" pos:column="77">[<expr><name pos:line="5661" pos:column="78">iSelStart</name></expr>]</index></name></expr>;</expr_stmt>
			}</block></then>
			<comment type="line" pos:line="5663" pos:column="25">//-- Finally, if there is no stream-comment, return</comment>
			<else pos:line="5664" pos:column="25">else <block pos:line="5664" pos:column="30">{
				<return pos:line="5665" pos:column="33">return <expr><name pos:line="5665" pos:column="40">retVal</name></expr>;</return>
			}</block></else></if></else></if>
		}</block></else></if>
		<comment type="line" pos:line="5668" pos:column="17">//-- Ok, there are valid start-comment and valid end-comment around the caret-position.</comment>
		<comment type="line" pos:line="5669" pos:column="17">//   Now, un-comment stream-comment:</comment>
		<expr_stmt><expr><name pos:line="5670" pos:column="17">retVal</name> <op:operator pos:line="5670" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="5670" pos:column="26">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5671" pos:column="17">startCommentLength</name> <op:operator pos:line="5671" pos:column="36">=</op:operator> <name pos:line="5671" pos:column="38">start_comment_length</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5672" pos:column="17">endCommentLength</name> <op:operator pos:line="5672" pos:column="34">=</op:operator> <name pos:line="5672" pos:column="36">end_comment_length</name></expr>;</expr_stmt>
		<comment type="line" pos:line="5673" pos:column="17">//-- First delete end-comment, so that posStartCommentBefore does not change!</comment>
		<comment type="line" pos:line="5674" pos:column="17">//-- Get character before end-comment to decide, if there is a white character before the end-comment, which will be removed too!</comment>
		<expr_stmt><expr><call><name><name pos:line="5675" pos:column="17">_pEditView</name><op:operator pos:line="5675" pos:column="27">-&gt;</op:operator><name pos:line="5675" pos:column="29">getGenericText</name></name><argument_list pos:line="5675" pos:column="43">(<argument><expr><name pos:line="5675" pos:column="44">charbuf</name></expr></argument>, <argument><expr><name pos:line="5675" pos:column="53">charbufLen</name></expr></argument>, <argument><expr><name pos:line="5675" pos:column="65">posEndComment</name><op:operator pos:line="5675" pos:column="78">-</op:operator><lit:literal type="number" pos:line="5675" pos:column="79">1</lit:literal></expr></argument>, <argument><expr><name pos:line="5675" pos:column="82">posEndComment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5676" pos:column="17">if <condition pos:line="5676" pos:column="20">(<expr><call><name pos:line="5676" pos:column="21">generic_strncmp</name><argument_list pos:line="5676" pos:column="36">(<argument><expr><name pos:line="5676" pos:column="37">charbuf</name></expr></argument>, <argument><expr><call><name><name pos:line="5676" pos:column="46">white_space</name><op:operator pos:line="5676" pos:column="57">.</op:operator><name pos:line="5676" pos:column="58">c_str</name></name><argument_list pos:line="5676" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5676" pos:column="67">white_space</name><op:operator pos:line="5676" pos:column="78">.</op:operator><name pos:line="5676" pos:column="79">length</name></name><argument_list pos:line="5676" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5676" pos:column="89">==</op:operator> <lit:literal type="number" pos:line="5676" pos:column="92">0</lit:literal></expr>)</condition><then pos:line="5676" pos:column="94"> <block pos:line="5676" pos:column="95">{
			<expr_stmt><expr><name pos:line="5677" pos:column="25">endCommentLength</name> <op:operator pos:line="5677" pos:column="42">+=</op:operator><lit:literal type="number" pos:line="5677" pos:column="44">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="5678" pos:column="25">posEndComment</name><op:operator pos:line="5678" pos:column="38">-=</op:operator><lit:literal type="number" pos:line="5678" pos:column="40">1</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="5680" pos:column="17">//-- Delete end stream-comment string ---------</comment>
		<expr_stmt><expr><call><name><name pos:line="5681" pos:column="17">_pEditView</name><op:operator pos:line="5681" pos:column="27">-&gt;</op:operator><name pos:line="5681" pos:column="29">execute</name></name><argument_list pos:line="5681" pos:column="36">(<argument><expr><name pos:line="5681" pos:column="37">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5682" pos:column="17">_pEditView</name><op:operator pos:line="5682" pos:column="27">-&gt;</op:operator><name pos:line="5682" pos:column="29">execute</name></name><argument_list pos:line="5682" pos:column="36">(<argument><expr><name pos:line="5682" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="5682" pos:column="49">posEndComment</name></expr></argument>, <argument><expr><name pos:line="5682" pos:column="64">posEndComment</name> <op:operator pos:line="5682" pos:column="78">+</op:operator> <name pos:line="5682" pos:column="80">endCommentLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5683" pos:column="17">_pEditView</name><op:operator pos:line="5683" pos:column="27">-&gt;</op:operator><name pos:line="5683" pos:column="29">execute</name></name><argument_list pos:line="5683" pos:column="36">(<argument><expr><name pos:line="5683" pos:column="37">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5683" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5683" pos:column="56">(</op:operator><name pos:line="5683" pos:column="57">WPARAM</name><op:operator pos:line="5683" pos:column="63">)</op:operator><lit:literal type="string" pos:line="5683" pos:column="64">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="5685" pos:column="17">//-- Get character after start-comment to decide, if there is a white character after the start-comment, which will be removed too!</comment>
		<expr_stmt><expr><call><name><name pos:line="5686" pos:column="17">_pEditView</name><op:operator pos:line="5686" pos:column="27">-&gt;</op:operator><name pos:line="5686" pos:column="29">getGenericText</name></name><argument_list pos:line="5686" pos:column="43">(<argument><expr><name pos:line="5686" pos:column="44">charbuf</name></expr></argument>, <argument><expr><name pos:line="5686" pos:column="53">charbufLen</name></expr></argument>, <argument><expr><name pos:line="5686" pos:column="65">posStartComment</name><op:operator pos:line="5686" pos:column="80">+</op:operator><name pos:line="5686" pos:column="81">startCommentLength</name></expr></argument>, <argument><expr><name pos:line="5686" pos:column="101">posStartComment</name><op:operator pos:line="5686" pos:column="116">+</op:operator><name pos:line="5686" pos:column="117">startCommentLength</name><op:operator pos:line="5686" pos:column="135">+</op:operator><lit:literal type="number" pos:line="5686" pos:column="136">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5687" pos:column="17">if <condition pos:line="5687" pos:column="20">(<expr><call><name pos:line="5687" pos:column="21">generic_strncmp</name><argument_list pos:line="5687" pos:column="36">(<argument><expr><name pos:line="5687" pos:column="37">charbuf</name></expr></argument>, <argument><expr><call><name><name pos:line="5687" pos:column="46">white_space</name><op:operator pos:line="5687" pos:column="57">.</op:operator><name pos:line="5687" pos:column="58">c_str</name></name><argument_list pos:line="5687" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5687" pos:column="67">white_space</name><op:operator pos:line="5687" pos:column="78">.</op:operator><name pos:line="5687" pos:column="79">length</name></name><argument_list pos:line="5687" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5687" pos:column="89">==</op:operator> <lit:literal type="number" pos:line="5687" pos:column="92">0</lit:literal></expr>)</condition><then pos:line="5687" pos:column="94"> <block pos:line="5687" pos:column="95">{
			<expr_stmt><expr><name pos:line="5688" pos:column="25">startCommentLength</name> <op:operator pos:line="5688" pos:column="44">+=</op:operator><lit:literal type="number" pos:line="5688" pos:column="46">1</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="5690" pos:column="17">//-- Delete starting stream-comment string ---------</comment>
		<expr_stmt><expr><call><name><name pos:line="5691" pos:column="17">_pEditView</name><op:operator pos:line="5691" pos:column="27">-&gt;</op:operator><name pos:line="5691" pos:column="29">execute</name></name><argument_list pos:line="5691" pos:column="36">(<argument><expr><name pos:line="5691" pos:column="37">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="5691" pos:column="49">posStartComment</name></expr></argument>, <argument><expr><name pos:line="5691" pos:column="66">posStartComment</name> <op:operator pos:line="5691" pos:column="82">+</op:operator> <name pos:line="5691" pos:column="84">startCommentLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5692" pos:column="17">_pEditView</name><op:operator pos:line="5692" pos:column="27">-&gt;</op:operator><name pos:line="5692" pos:column="29">execute</name></name><argument_list pos:line="5692" pos:column="36">(<argument><expr><name pos:line="5692" pos:column="37">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5692" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="5692" pos:column="56">(</op:operator><name pos:line="5692" pos:column="57">WPARAM</name><op:operator pos:line="5692" pos:column="63">)</op:operator><lit:literal type="string" pos:line="5692" pos:column="64">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5693" pos:column="17">_pEditView</name><op:operator pos:line="5693" pos:column="27">-&gt;</op:operator><name pos:line="5693" pos:column="29">execute</name></name><argument_list pos:line="5693" pos:column="36">(<argument><expr><name pos:line="5693" pos:column="37">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="5695" pos:column="17">//-- Reset selection before calling the routine</comment>
		<comment type="line" pos:line="5696" pos:column="17">//-- Determine selection movement</comment>
		<comment type="line" pos:line="5697" pos:column="17">//   selectionStart</comment>
		<if pos:line="5698" pos:column="17">if <condition pos:line="5698" pos:column="20">(<expr><name pos:line="5698" pos:column="21">selectionStart</name> <op:operator pos:line="5698" pos:column="36">&gt;</op:operator> <name pos:line="5698" pos:column="38">posStartComment</name></expr>)</condition><then pos:line="5698" pos:column="54"> <block pos:line="5698" pos:column="55">{
			<if pos:line="5699" pos:column="25">if <condition pos:line="5699" pos:column="28">(<expr><name pos:line="5699" pos:column="29">selectionStart</name> <op:operator pos:line="5699" pos:column="44">&gt;=</op:operator> <name pos:line="5699" pos:column="47">posStartComment</name><op:operator pos:line="5699" pos:column="62">+</op:operator><name pos:line="5699" pos:column="63">startCommentLength</name></expr>)</condition><then pos:line="5699" pos:column="82">
				<expr_stmt><expr><name pos:line="5700" pos:column="33">selectionStartMove</name> <op:operator pos:line="5700" pos:column="52">=</op:operator> <op:operator pos:line="5700" pos:column="54">-</op:operator><op:operator pos:line="5700" pos:column="55">(</op:operator><name pos:line="5700" pos:column="56">int</name><op:operator pos:line="5700" pos:column="59">)</op:operator><name pos:line="5700" pos:column="60">startCommentLength</name></expr>;</expr_stmt></then>
			<else pos:line="5701" pos:column="25">else
				<expr_stmt><expr><name pos:line="5702" pos:column="33">selectionStartMove</name> <op:operator pos:line="5702" pos:column="52">=</op:operator> <op:operator pos:line="5702" pos:column="54">-</op:operator><call pos:line="5702" pos:column="55">(<name pos:line="5702" pos:column="56">int</name>)<argument_list pos:line="5702" pos:column="60">(<argument><expr><name pos:line="5702" pos:column="61">selectionStart</name> <op:operator pos:line="5702" pos:column="76">-</op:operator> <name pos:line="5702" pos:column="78">posStartComment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="5704" pos:column="17">else
			<expr_stmt><expr><name pos:line="5705" pos:column="25">selectionStartMove</name> <op:operator pos:line="5705" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="5705" pos:column="46">0</lit:literal></expr>;</expr_stmt></else></if>
		<comment type="line" pos:line="5706" pos:column="17">//   selectionEnd</comment>
		<if pos:line="5707" pos:column="17">if <condition pos:line="5707" pos:column="20">(<expr><name pos:line="5707" pos:column="21">selectionEnd</name> <op:operator pos:line="5707" pos:column="34">&gt;=</op:operator> <name pos:line="5707" pos:column="37">posEndComment</name><op:operator pos:line="5707" pos:column="50">+</op:operator><name pos:line="5707" pos:column="51">endCommentLength</name></expr>)</condition><then pos:line="5707" pos:column="68">
			<expr_stmt><expr><name pos:line="5708" pos:column="25">selectionEndMove</name> <op:operator pos:line="5708" pos:column="42">=</op:operator> <op:operator pos:line="5708" pos:column="44">-</op:operator><call pos:line="5708" pos:column="45">(<name pos:line="5708" pos:column="46">int</name>)<argument_list pos:line="5708" pos:column="50">(<argument><expr><name pos:line="5708" pos:column="51">startCommentLength</name><op:operator pos:line="5708" pos:column="69">+</op:operator><name pos:line="5708" pos:column="70">endCommentLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="5709" pos:column="17">else <if pos:line="5709" pos:column="22">if <condition pos:line="5709" pos:column="25">(<expr><name pos:line="5709" pos:column="26">selectionEnd</name> <op:operator pos:line="5709" pos:column="39">&lt;=</op:operator> <name pos:line="5709" pos:column="42">posEndComment</name></expr>)</condition><then pos:line="5709" pos:column="56">
				<expr_stmt><expr><name pos:line="5710" pos:column="33">selectionEndMove</name> <op:operator pos:line="5710" pos:column="50">=</op:operator> <op:operator pos:line="5710" pos:column="52">-</op:operator><op:operator pos:line="5710" pos:column="53">(</op:operator><name pos:line="5710" pos:column="54">int</name><op:operator pos:line="5710" pos:column="57">)</op:operator><name pos:line="5710" pos:column="58">startCommentLength</name></expr>;</expr_stmt></then>
		<else pos:line="5711" pos:column="17">else
				<expr_stmt><expr><name pos:line="5712" pos:column="33">selectionEndMove</name> <op:operator pos:line="5712" pos:column="50">=</op:operator> <op:operator pos:line="5712" pos:column="52">-</op:operator><call pos:line="5712" pos:column="53">(<name pos:line="5712" pos:column="54">int</name>)<argument_list pos:line="5712" pos:column="58">(<argument><expr><name pos:line="5712" pos:column="59">startCommentLength</name> <op:operator pos:line="5712" pos:column="78">+</op:operator> <op:operator pos:line="5712" pos:column="80">(</op:operator><name pos:line="5712" pos:column="81">selectionEnd</name> <op:operator pos:line="5712" pos:column="94">-</op:operator> <name pos:line="5712" pos:column="96">posEndComment</name><op:operator pos:line="5712" pos:column="109">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if>
		<comment type="line" pos:line="5713" pos:column="17">//-- Reset selection of text without deleted stream-comment-string</comment>
		<if pos:line="5714" pos:column="17">if <condition pos:line="5714" pos:column="20">(<expr><name pos:line="5714" pos:column="21">move_caret</name></expr>)</condition><then pos:line="5714" pos:column="32">
		<block pos:line="5715" pos:column="17">{
			<comment type="line" pos:line="5716" pos:column="25">// moving caret to the beginning of selected block</comment>
			<expr_stmt><expr><call><name><name pos:line="5717" pos:column="25">_pEditView</name><op:operator pos:line="5717" pos:column="35">-&gt;</op:operator><name pos:line="5717" pos:column="37">execute</name></name><argument_list pos:line="5717" pos:column="44">(<argument><expr><name pos:line="5717" pos:column="45">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="5717" pos:column="58">selectionEnd</name><op:operator pos:line="5717" pos:column="70">+</op:operator><name pos:line="5717" pos:column="71">selectionEndMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5718" pos:column="25">_pEditView</name><op:operator pos:line="5718" pos:column="35">-&gt;</op:operator><name pos:line="5718" pos:column="37">execute</name></name><argument_list pos:line="5718" pos:column="44">(<argument><expr><name pos:line="5718" pos:column="45">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><name pos:line="5718" pos:column="64">selectionStart</name><op:operator pos:line="5718" pos:column="78">+</op:operator><name pos:line="5718" pos:column="79">selectionStartMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="5720" pos:column="17">else
		<block pos:line="5721" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="5722" pos:column="25">_pEditView</name><op:operator pos:line="5722" pos:column="35">-&gt;</op:operator><name pos:line="5722" pos:column="37">execute</name></name><argument_list pos:line="5722" pos:column="44">(<argument><expr><name pos:line="5722" pos:column="45">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="5722" pos:column="57">selectionStart</name><op:operator pos:line="5722" pos:column="71">+</op:operator><name pos:line="5722" pos:column="72">selectionStartMove</name></expr></argument>, <argument><expr><name pos:line="5722" pos:column="92">selectionEnd</name><op:operator pos:line="5722" pos:column="104">+</op:operator><name pos:line="5722" pos:column="105">selectionEndMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block> while<condition pos:line="5724" pos:column="16">(<expr><lit:literal type="number" pos:line="5724" pos:column="17">1</lit:literal></expr>)</condition>;</do> <comment type="line" pos:line="5724" pos:column="21">//do as long as stream-comments are within selection</comment>
	<comment type="line" pos:line="5725" pos:column="9">//return retVal;</comment>
}</block></function> <comment type="line" pos:line="5726" pos:column="3">//----- undoStreamComment() -------------------------------</comment></unit>
