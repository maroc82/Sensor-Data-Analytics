<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\SplitterContainer\Splitter.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Splitter.h"</lit:literal></cpp:file></cpp:include>

<decl_stmt><decl><type><name pos:line="32" pos:column="1">bool</name></type> <name><name pos:line="32" pos:column="6">Splitter</name><op:operator pos:line="32" pos:column="14">::</op:operator><name pos:line="32" pos:column="16">_isHorizontalRegistered</name></name> <init pos:line="32" pos:column="40">= <expr><lit:literal type="boolean" pos:line="32" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="33" pos:column="1">bool</name></type> <name><name pos:line="33" pos:column="6">Splitter</name><op:operator pos:line="33" pos:column="14">::</op:operator><name pos:line="33" pos:column="16">_isVerticalRegistered</name></name> <init pos:line="33" pos:column="38">= <expr><lit:literal type="boolean" pos:line="33" pos:column="40">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="34" pos:column="1">bool</name></type> <name><name pos:line="34" pos:column="6">Splitter</name><op:operator pos:line="34" pos:column="14">::</op:operator><name pos:line="34" pos:column="16">_isHorizontalFixedRegistered</name></name> <init pos:line="34" pos:column="45">= <expr><lit:literal type="boolean" pos:line="34" pos:column="47">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="35" pos:column="1">bool</name></type> <name><name pos:line="35" pos:column="6">Splitter</name><op:operator pos:line="35" pos:column="14">::</op:operator><name pos:line="35" pos:column="16">_isVerticalFixedRegistered</name></name> <init pos:line="35" pos:column="43">= <expr><lit:literal type="boolean" pos:line="35" pos:column="45">false</lit:literal></expr></init></decl>;</decl_stmt>


<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">SPLITTER_SIZE</name></cpp:macro> <cpp:value pos:line="38" pos:column="23">8</cpp:value></cpp:define>

<constructor><name><name pos:line="40" pos:column="1">Splitter</name><op:operator pos:line="40" pos:column="9">::</op:operator><name pos:line="40" pos:column="11">Splitter</name></name><parameter_list pos:line="40" pos:column="19">()</parameter_list> <member_list pos:line="40" pos:column="22">: <call><name pos:line="40" pos:column="24">Window</name><argument_list pos:line="40" pos:column="30">()</argument_list></call> 
</member_list><block pos:line="41" pos:column="1">{
	<comment type="line" pos:line="42" pos:column="9">//hInstance = GetModuleHandle(NULL);</comment>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">_rect</name><op:operator pos:line="43" pos:column="14">.</op:operator><name pos:line="43" pos:column="15">left</name></name>   <op:operator pos:line="43" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="43" pos:column="24">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="43" pos:column="27">// x axis </comment>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">_rect</name><op:operator pos:line="44" pos:column="14">.</op:operator><name pos:line="44" pos:column="15">top</name></name>    <op:operator pos:line="44" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="44" pos:column="24">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="44" pos:column="27">// y axis </comment>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">_rect</name><op:operator pos:line="45" pos:column="14">.</op:operator><name pos:line="45" pos:column="15">right</name></name>  <op:operator pos:line="45" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="45" pos:column="24">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="45" pos:column="27">// Width of the spliter.</comment>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">_rect</name><op:operator pos:line="46" pos:column="14">.</op:operator><name pos:line="46" pos:column="15">bottom</name></name> <op:operator pos:line="46" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="46" pos:column="24">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="46" pos:column="27">// Height of the spliter</comment>
	<expr_stmt><expr><name pos:line="47" pos:column="9">_isFixed</name> <op:operator pos:line="47" pos:column="18">=</op:operator> <lit:literal type="boolean" pos:line="47" pos:column="20">false</lit:literal></expr>;</expr_stmt>
}</block></constructor>


<function><type><name pos:line="51" pos:column="1">void</name></type> <name><name pos:line="51" pos:column="6">Splitter</name><op:operator pos:line="51" pos:column="14">::</op:operator><name pos:line="51" pos:column="16">init</name></name><parameter_list pos:line="51" pos:column="20">( <param><decl><type><name pos:line="51" pos:column="22">HINSTANCE</name></type> <name pos:line="51" pos:column="32">hInst</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="39">HWND</name></type> <name pos:line="51" pos:column="44">hPere</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="51">int</name></type> <name pos:line="51" pos:column="55">splitterSize</name></decl></param>,
				<param><decl><type><name pos:line="52" pos:column="33">int</name></type> <name pos:line="52" pos:column="37">iSplitRatio</name></decl></param>, <param><decl><type><name pos:line="52" pos:column="50">DWORD</name></type> <name pos:line="52" pos:column="56">dwFlags</name></decl></param>)</parameter_list>
<block pos:line="53" pos:column="1">{
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">hPere</name> <op:operator pos:line="54" pos:column="19">==</op:operator> <name pos:line="54" pos:column="22">NULL</name></expr>)</condition><then pos:line="54" pos:column="27">
	<block pos:line="55" pos:column="9">{
		<throw pos:line="56" pos:column="17">throw <expr><call><name><name pos:line="56" pos:column="23">std</name><op:operator pos:line="56" pos:column="26">::</op:operator><name pos:line="56" pos:column="28">runtime_error</name></name><argument_list pos:line="56" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="42">"Splitter::init : Parameter hPere is null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">iSplitRatio</name> <op:operator pos:line="58" pos:column="25">&lt;</op:operator> <lit:literal type="number" pos:line="58" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="58" pos:column="29">
	<block pos:line="59" pos:column="9">{
		<throw pos:line="60" pos:column="17">throw <expr><call><name><name pos:line="60" pos:column="23">std</name><op:operator pos:line="60" pos:column="26">::</op:operator><name pos:line="60" pos:column="28">runtime_error</name></name><argument_list pos:line="60" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="42">"Splitter::init : Parameter iSplitRatio shoulds be 0 &lt; ratio &lt; 100"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="63" pos:column="9">Window</name><op:operator pos:line="63" pos:column="15">::</op:operator><name pos:line="63" pos:column="17">init</name></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="29">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="64" pos:column="9">_spiltterSize</name> <op:operator pos:line="64" pos:column="23">=</op:operator> <name pos:line="64" pos:column="25">splitterSize</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="66" pos:column="9">WNDCLASSEX</name></type> <name pos:line="66" pos:column="20">wcex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">DWORD</name></type> <name pos:line="67" pos:column="15">dwExStyle</name> <init pos:line="67" pos:column="25">= <expr><lit:literal type="number" pos:line="67" pos:column="27">0L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="68" pos:column="9">DWORD</name></type> <name pos:line="68" pos:column="15">dwStyle</name>   <init pos:line="68" pos:column="25">= <expr><name pos:line="68" pos:column="27">WS_CHILD</name> <op:operator pos:line="68" pos:column="36">|</op:operator> <name pos:line="68" pos:column="38">WS_VISIBLE</name></expr></init></decl>;</decl_stmt>
	

	<expr_stmt><expr><name pos:line="71" pos:column="9">_hParent</name> <op:operator pos:line="71" pos:column="18">=</op:operator> <name pos:line="71" pos:column="20">hPere</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="72" pos:column="9">_dwFlags</name> <op:operator pos:line="72" pos:column="18">=</op:operator> <name pos:line="72" pos:column="20">dwFlags</name></expr>;</expr_stmt>
	
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">_dwFlags</name> <op:operator pos:line="74" pos:column="22">&amp;</op:operator> <name pos:line="74" pos:column="24">SV_FIXED</name></expr>)</condition><then pos:line="74" pos:column="33">
	<block pos:line="75" pos:column="9">{
		<comment type="line" pos:line="76" pos:column="17">//Fixed spliter</comment>
		<expr_stmt><expr><name pos:line="77" pos:column="17">_isFixed</name> <op:operator pos:line="77" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="77" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="79" pos:column="9">else
	<block pos:line="80" pos:column="9">{
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">iSplitRatio</name> <op:operator pos:line="81" pos:column="33">&gt;=</op:operator> <lit:literal type="number" pos:line="81" pos:column="36">100</lit:literal></expr>)</condition><then pos:line="81" pos:column="40">
		<block pos:line="82" pos:column="17">{
			<comment type="line" pos:line="83" pos:column="25">//cant be 100 % or more </comment>
			<throw pos:line="84" pos:column="25">throw <expr><call><name><name pos:line="84" pos:column="31">std</name><op:operator pos:line="84" pos:column="34">::</op:operator><name pos:line="84" pos:column="36">runtime_error</name></name><argument_list pos:line="84" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="50">"Splitter::init : Parameter iSplitRatio shoulds be 0 &lt; ratio &lt; 100"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
		}</block></then></if>
	}</block></else></if>

	<expr_stmt><expr><name pos:line="88" pos:column="9">_splitPercent</name> <op:operator pos:line="88" pos:column="23">=</op:operator> <name pos:line="88" pos:column="25">iSplitRatio</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="90" pos:column="9">wcex</name><op:operator pos:line="90" pos:column="13">.</op:operator><name pos:line="90" pos:column="14">cbSize</name></name>			<op:operator pos:line="90" pos:column="41">=</op:operator> <sizeof pos:line="90" pos:column="43">sizeof<argument_list pos:line="90" pos:column="49">(<argument><expr><name pos:line="90" pos:column="50">WNDCLASSEX</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="91" pos:column="9">wcex</name><op:operator pos:line="91" pos:column="13">.</op:operator><name pos:line="91" pos:column="14">style</name></name>			<op:operator pos:line="91" pos:column="41">=</op:operator> <name pos:line="91" pos:column="43">CS_HREDRAW</name> <op:operator pos:line="91" pos:column="54">|</op:operator> <name pos:line="91" pos:column="56">CS_VREDRAW</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="92" pos:column="9">wcex</name><op:operator pos:line="92" pos:column="13">.</op:operator><name pos:line="92" pos:column="14">lpfnWndProc</name></name>	<op:operator pos:line="92" pos:column="33">=</op:operator> <op:operator pos:line="92" pos:column="35">(</op:operator><name pos:line="92" pos:column="36">WNDPROC</name><op:operator pos:line="92" pos:column="43">)</op:operator><name pos:line="92" pos:column="44">staticWndProc</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="93" pos:column="9">wcex</name><op:operator pos:line="93" pos:column="13">.</op:operator><name pos:line="93" pos:column="14">cbClsExtra</name></name>		<op:operator pos:line="93" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="93" pos:column="35">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="94" pos:column="9">wcex</name><op:operator pos:line="94" pos:column="13">.</op:operator><name pos:line="94" pos:column="14">cbWndExtra</name></name>		<op:operator pos:line="94" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="94" pos:column="35">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="95" pos:column="9">wcex</name><op:operator pos:line="95" pos:column="13">.</op:operator><name pos:line="95" pos:column="14">hInstance</name></name>		<op:operator pos:line="95" pos:column="33">=</op:operator> <name pos:line="95" pos:column="35">_hInst</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="96" pos:column="9">wcex</name><op:operator pos:line="96" pos:column="13">.</op:operator><name pos:line="96" pos:column="14">hIcon</name></name>			<op:operator pos:line="96" pos:column="41">=</op:operator> <name pos:line="96" pos:column="43">NULL</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name><op:operator pos:line="98" pos:column="9">::</op:operator><name pos:line="98" pos:column="11">GetClientRect</name></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="98" pos:column="35">&amp;</op:operator><name pos:line="98" pos:column="36">_rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">_dwFlags</name> <op:operator pos:line="100" pos:column="22">&amp;</op:operator> <name pos:line="100" pos:column="24">SV_HORIZONTAL</name></expr>)</condition><then pos:line="100" pos:column="38"> <comment type="line" pos:line="100" pos:column="39">//Horizontal spliter</comment>
	<block pos:line="101" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="102" pos:column="17">_rect</name><op:operator pos:line="102" pos:column="22">.</op:operator><name pos:line="102" pos:column="23">top</name></name>  <op:operator pos:line="102" pos:column="28">=</op:operator> <op:operator pos:line="102" pos:column="30">(</op:operator><op:operator pos:line="102" pos:column="31">(</op:operator><name><name pos:line="102" pos:column="32">_rect</name><op:operator pos:line="102" pos:column="37">.</op:operator><name pos:line="102" pos:column="38">bottom</name></name> <op:operator pos:line="102" pos:column="45">*</op:operator> <name pos:line="102" pos:column="47">_splitPercent</name><op:operator pos:line="102" pos:column="60">)</op:operator><op:operator pos:line="102" pos:column="61">/</op:operator><lit:literal type="number" pos:line="102" pos:column="62">100</lit:literal><op:operator pos:line="102" pos:column="65">)</op:operator></expr>;</expr_stmt>
		<comment type="line" pos:line="103" pos:column="17">// y axis determined by the split% of the parent windows height</comment>
		
		<expr_stmt><expr><name><name pos:line="105" pos:column="17">_rect</name><op:operator pos:line="105" pos:column="22">.</op:operator><name pos:line="105" pos:column="23">left</name></name> <op:operator pos:line="105" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="105" pos:column="30">0</lit:literal></expr>;</expr_stmt>
		<comment type="line" pos:line="106" pos:column="17">// x axis is always 0</comment>
		
		<expr_stmt><expr><name><name pos:line="108" pos:column="17">_rect</name><op:operator pos:line="108" pos:column="22">.</op:operator><name pos:line="108" pos:column="23">bottom</name></name> <op:operator pos:line="108" pos:column="30">=</op:operator> <name pos:line="108" pos:column="32">_spiltterSize</name></expr>;</expr_stmt>
		<comment type="line" pos:line="109" pos:column="17">// the height of the spliter</comment>
		
		<comment type="line" pos:line="111" pos:column="17">// the width of the splitter remains the same as the width of the parent window.</comment>
	}</block></then>
	<else pos:line="113" pos:column="9">else <comment type="line" pos:line="113" pos:column="14">//Vertical spliter</comment>
	<block pos:line="114" pos:column="9">{
		<comment type="line" pos:line="115" pos:column="17">// y axis is 0 always </comment>
		
		<expr_stmt><expr><name><name pos:line="117" pos:column="17">_rect</name><op:operator pos:line="117" pos:column="22">.</op:operator><name pos:line="117" pos:column="23">left</name></name> <op:operator pos:line="117" pos:column="28">=</op:operator> <op:operator pos:line="117" pos:column="30">(</op:operator><op:operator pos:line="117" pos:column="31">(</op:operator><name><name pos:line="117" pos:column="32">_rect</name><op:operator pos:line="117" pos:column="37">.</op:operator><name pos:line="117" pos:column="38">right</name></name> <op:operator pos:line="117" pos:column="44">*</op:operator> <name pos:line="117" pos:column="46">_splitPercent</name><op:operator pos:line="117" pos:column="59">)</op:operator><op:operator pos:line="117" pos:column="60">/</op:operator><lit:literal type="number" pos:line="117" pos:column="61">100</lit:literal><op:operator pos:line="117" pos:column="64">)</op:operator></expr>;</expr_stmt> 
		<comment type="line" pos:line="118" pos:column="17">// x axis determined by split% of the parent windows width.</comment>
		
		<expr_stmt><expr><name><name pos:line="120" pos:column="17">_rect</name><op:operator pos:line="120" pos:column="22">.</op:operator><name pos:line="120" pos:column="23">right</name></name> <op:operator pos:line="120" pos:column="29">=</op:operator> <name pos:line="120" pos:column="31">_spiltterSize</name></expr>;</expr_stmt> 
		<comment type="line" pos:line="121" pos:column="17">// width of the spliter.			</comment>
		
		<comment type="line" pos:line="123" pos:column="17">//height of the spliter remains the same as the height of the parent window</comment>
	}</block></else></if>
	
	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><op:operator pos:line="126" pos:column="13">!</op:operator><name pos:line="126" pos:column="14">_isFixed</name></expr>)</condition><then pos:line="126" pos:column="23">
	<block pos:line="127" pos:column="9">{
		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><op:operator pos:line="128" pos:column="21">(</op:operator><name pos:line="128" pos:column="22">_dwFlags</name> <op:operator pos:line="128" pos:column="31">&amp;</op:operator> <name pos:line="128" pos:column="33">SV_ENABLERDBLCLK</name><op:operator pos:line="128" pos:column="49">)</op:operator> <op:operator pos:line="128" pos:column="51">||</op:operator> <op:operator pos:line="128" pos:column="54">(</op:operator><name pos:line="128" pos:column="55">_dwFlags</name> <op:operator pos:line="128" pos:column="64">&amp;</op:operator> <name pos:line="128" pos:column="66">SV_ENABLELDBLCLK</name><op:operator pos:line="128" pos:column="82">)</op:operator></expr>)</condition><then pos:line="128" pos:column="84">
		<block pos:line="129" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="130" pos:column="25">wcex</name><op:operator pos:line="130" pos:column="29">.</op:operator><name pos:line="130" pos:column="30">style</name></name> <op:operator pos:line="130" pos:column="36">=</op:operator> <name><name pos:line="130" pos:column="38">wcex</name><op:operator pos:line="130" pos:column="42">.</op:operator><name pos:line="130" pos:column="43">style</name></name> <op:operator pos:line="130" pos:column="49">|</op:operator> <name pos:line="130" pos:column="51">CS_DBLCLKS</name></expr>;</expr_stmt>
			<comment type="line" pos:line="131" pos:column="25">// enable mouse double click messages.</comment>
		}</block></then></if>
	}</block></then></if>
	
	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">_isFixed</name></expr>)</condition><then pos:line="135" pos:column="22">
	<block pos:line="136" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="137" pos:column="17">wcex</name><op:operator pos:line="137" pos:column="21">.</op:operator><name pos:line="137" pos:column="22">hCursor</name></name>		<op:operator pos:line="137" pos:column="41">=</op:operator> <call><name><op:operator pos:line="137" pos:column="43">::</op:operator><name pos:line="137" pos:column="45">LoadCursor</name></name><argument_list pos:line="137" pos:column="55">(<argument><expr><name pos:line="137" pos:column="56">NULL</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="62">IDC_ARROW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="138" pos:column="17">// if fixed spliter then choose default cursor type.</comment>
        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">_dwFlags</name> <op:operator pos:line="139" pos:column="22">&amp;</op:operator> <name pos:line="139" pos:column="24">SV_HORIZONTAL</name></expr>)</condition><then pos:line="139" pos:column="38">
		    <expr_stmt><expr><name><name pos:line="140" pos:column="21">wcex</name><op:operator pos:line="140" pos:column="25">.</op:operator><name pos:line="140" pos:column="26">lpszClassName</name></name>	<op:operator pos:line="140" pos:column="41">=</op:operator> <call><name pos:line="140" pos:column="43">TEXT</name><argument_list pos:line="140" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="48">"fxdnsspliter"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
        <else pos:line="141" pos:column="9">else
            <expr_stmt><expr><name><name pos:line="142" pos:column="13">wcex</name><op:operator pos:line="142" pos:column="17">.</op:operator><name pos:line="142" pos:column="18">lpszClassName</name></name>	<op:operator pos:line="142" pos:column="33">=</op:operator> <call><name pos:line="142" pos:column="35">TEXT</name><argument_list pos:line="142" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="142" pos:column="40">"fxdwespliter"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></then>
	<else pos:line="144" pos:column="9">else
	<block pos:line="145" pos:column="9">{
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><name pos:line="146" pos:column="21">_dwFlags</name> <op:operator pos:line="146" pos:column="30">&amp;</op:operator> <name pos:line="146" pos:column="32">SV_HORIZONTAL</name></expr>)</condition><then pos:line="146" pos:column="46">
		<block pos:line="147" pos:column="17">{
			<comment type="line" pos:line="148" pos:column="25">//double sided arrow pointing north-south as cursor</comment>
			<expr_stmt><expr><name><name pos:line="149" pos:column="25">wcex</name><op:operator pos:line="149" pos:column="29">.</op:operator><name pos:line="149" pos:column="30">hCursor</name></name>		<op:operator pos:line="149" pos:column="49">=</op:operator> <call><name><op:operator pos:line="149" pos:column="51">::</op:operator><name pos:line="149" pos:column="53">LoadCursor</name></name><argument_list pos:line="149" pos:column="63">(<argument><expr><name pos:line="149" pos:column="64">NULL</name></expr></argument>,<argument><expr><name pos:line="149" pos:column="69">IDC_SIZENS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="150" pos:column="25">wcex</name><op:operator pos:line="150" pos:column="29">.</op:operator><name pos:line="150" pos:column="30">lpszClassName</name></name>	<op:operator pos:line="150" pos:column="49">=</op:operator> <call><name pos:line="150" pos:column="51">TEXT</name><argument_list pos:line="150" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="56">"nsspliter"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="152" pos:column="17">else
		<block pos:line="153" pos:column="17">{
			<comment type="line" pos:line="154" pos:column="25">// double sided arrow pointing east-west as cursor</comment>
			<expr_stmt><expr><name><name pos:line="155" pos:column="25">wcex</name><op:operator pos:line="155" pos:column="29">.</op:operator><name pos:line="155" pos:column="30">hCursor</name></name>		<op:operator pos:line="155" pos:column="49">=</op:operator> <call><name><op:operator pos:line="155" pos:column="51">::</op:operator><name pos:line="155" pos:column="53">LoadCursor</name></name><argument_list pos:line="155" pos:column="63">(<argument><expr><name pos:line="155" pos:column="64">NULL</name></expr></argument>,<argument><expr><name pos:line="155" pos:column="69">IDC_SIZEWE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="156" pos:column="25">wcex</name><op:operator pos:line="156" pos:column="29">.</op:operator><name pos:line="156" pos:column="30">lpszClassName</name></name>	<op:operator pos:line="156" pos:column="49">=</op:operator> <call><name pos:line="156" pos:column="51">TEXT</name><argument_list pos:line="156" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="56">"wespliter"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
	
	<expr_stmt><expr><name><name pos:line="160" pos:column="9">wcex</name><op:operator pos:line="160" pos:column="13">.</op:operator><name pos:line="160" pos:column="14">hbrBackground</name></name>	<op:operator pos:line="160" pos:column="33">=</op:operator> <call pos:line="160" pos:column="35">(<name pos:line="160" pos:column="36">HBRUSH</name>)<argument_list pos:line="160" pos:column="43">(<argument><expr><name pos:line="160" pos:column="44">COLOR_3DFACE</name><op:operator pos:line="160" pos:column="56">+</op:operator><lit:literal type="number" pos:line="160" pos:column="57">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="161" pos:column="9">wcex</name><op:operator pos:line="161" pos:column="13">.</op:operator><name pos:line="161" pos:column="14">lpszMenuName</name></name>	<op:operator pos:line="161" pos:column="33">=</op:operator> <name pos:line="161" pos:column="35">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="162" pos:column="9">wcex</name><op:operator pos:line="162" pos:column="13">.</op:operator><name pos:line="162" pos:column="14">hIconSm</name></name>		<op:operator pos:line="162" pos:column="33">=</op:operator> <name pos:line="162" pos:column="35">NULL</name></expr>;</expr_stmt>
	
	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><op:operator pos:line="164" pos:column="13">(</op:operator><name pos:line="164" pos:column="14">_dwFlags</name> <op:operator pos:line="164" pos:column="23">&amp;</op:operator> <name pos:line="164" pos:column="25">SV_HORIZONTAL</name><op:operator pos:line="164" pos:column="38">)</op:operator><op:operator pos:line="164" pos:column="39">&amp;&amp;</op:operator><op:operator pos:line="164" pos:column="41">(</op:operator><op:operator pos:line="164" pos:column="42">!</op:operator><name pos:line="164" pos:column="43">_isHorizontalRegistered</name><op:operator pos:line="164" pos:column="66">)</op:operator></expr>)</condition><then pos:line="164" pos:column="68">
	<block pos:line="165" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="166" pos:column="17">RegisterClassEx</name><argument_list pos:line="166" pos:column="32">(<argument><expr><op:operator pos:line="166" pos:column="33">&amp;</op:operator><name pos:line="166" pos:column="34">wcex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="167" pos:column="17">_isHorizontalRegistered</name> <op:operator pos:line="167" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="167" pos:column="43">true</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="169" pos:column="9">else <if pos:line="169" pos:column="14">if <condition pos:line="169" pos:column="17">(<expr><call><name pos:line="169" pos:column="18">isVertical</name><argument_list pos:line="169" pos:column="28">()</argument_list></call><op:operator pos:line="169" pos:column="30">&amp;&amp;</op:operator><op:operator pos:line="169" pos:column="32">(</op:operator><op:operator pos:line="169" pos:column="33">!</op:operator><name pos:line="169" pos:column="34">_isVerticalRegistered</name><op:operator pos:line="169" pos:column="55">)</op:operator></expr>)</condition><then pos:line="169" pos:column="57">
	<block pos:line="170" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="171" pos:column="17">RegisterClassEx</name><argument_list pos:line="171" pos:column="32">(<argument><expr><op:operator pos:line="171" pos:column="33">&amp;</op:operator><name pos:line="171" pos:column="34">wcex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="172" pos:column="17">_isVerticalRegistered</name> <op:operator pos:line="172" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="172" pos:column="41">true</lit:literal></expr>;</expr_stmt>
	}</block></then>
    <else pos:line="174" pos:column="5">else <if pos:line="174" pos:column="10">if <condition pos:line="174" pos:column="13">(<expr><op:operator pos:line="174" pos:column="14">(</op:operator><name pos:line="174" pos:column="15">_dwFlags</name> <op:operator pos:line="174" pos:column="24">&amp;</op:operator> <name pos:line="174" pos:column="26">SV_HORIZONTAL</name><op:operator pos:line="174" pos:column="39">)</op:operator><op:operator pos:line="174" pos:column="40">&amp;&amp;</op:operator><op:operator pos:line="174" pos:column="42">(</op:operator><op:operator pos:line="174" pos:column="43">!</op:operator><name pos:line="174" pos:column="44">_isHorizontalFixedRegistered</name><op:operator pos:line="174" pos:column="72">)</op:operator></expr>)</condition><then pos:line="174" pos:column="74">
    <block pos:line="175" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">RegisterClassEx</name><argument_list pos:line="176" pos:column="24">(<argument><expr><op:operator pos:line="176" pos:column="25">&amp;</op:operator><name pos:line="176" pos:column="26">wcex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="177" pos:column="9">_isHorizontalFixedRegistered</name> <op:operator pos:line="177" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="177" pos:column="40">true</lit:literal></expr>;</expr_stmt>
    }</block></then>
    <else pos:line="179" pos:column="5">else <if pos:line="179" pos:column="10">if <condition pos:line="179" pos:column="13">(<expr><call><name pos:line="179" pos:column="14">isVertical</name><argument_list pos:line="179" pos:column="24">()</argument_list></call><op:operator pos:line="179" pos:column="26">&amp;&amp;</op:operator><op:operator pos:line="179" pos:column="28">(</op:operator><op:operator pos:line="179" pos:column="29">!</op:operator><name pos:line="179" pos:column="30">_isVerticalFixedRegistered</name><op:operator pos:line="179" pos:column="56">)</op:operator></expr>)</condition><then pos:line="179" pos:column="58">
    <block pos:line="180" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="181" pos:column="9">RegisterClassEx</name><argument_list pos:line="181" pos:column="24">(<argument><expr><op:operator pos:line="181" pos:column="25">&amp;</op:operator><name pos:line="181" pos:column="26">wcex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="182" pos:column="9">_isVerticalFixedRegistered</name> <op:operator pos:line="182" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="182" pos:column="38">true</lit:literal></expr>;</expr_stmt>
    }</block></then></if></else></if></else></if></else></if>

	<expr_stmt><expr><name pos:line="185" pos:column="9">_hSelf</name> <op:operator pos:line="185" pos:column="16">=</op:operator> <call><name pos:line="185" pos:column="18">CreateWindowEx</name><argument_list pos:line="185" pos:column="32">(
				<argument><expr><name pos:line="186" pos:column="33">dwExStyle</name></expr></argument>,
				<argument><expr><name><name pos:line="187" pos:column="33">wcex</name><op:operator pos:line="187" pos:column="37">.</op:operator><name pos:line="187" pos:column="38">lpszClassName</name></name></expr></argument>,
				<argument><expr><call><name pos:line="188" pos:column="33">TEXT</name><argument_list pos:line="188" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="188" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="189" pos:column="33">dwStyle</name></expr></argument>,
				<argument><expr><name><name pos:line="190" pos:column="33">_rect</name><op:operator pos:line="190" pos:column="38">.</op:operator><name pos:line="190" pos:column="39">left</name></name></expr></argument>, 
				<argument><expr><name><name pos:line="191" pos:column="33">_rect</name><op:operator pos:line="191" pos:column="38">.</op:operator><name pos:line="191" pos:column="39">top</name></name></expr></argument>, 
				<argument><expr><name><name pos:line="192" pos:column="33">_rect</name><op:operator pos:line="192" pos:column="38">.</op:operator><name pos:line="192" pos:column="39">right</name></name></expr></argument>, 
				<argument><expr><name><name pos:line="193" pos:column="33">_rect</name><op:operator pos:line="193" pos:column="38">.</op:operator><name pos:line="193" pos:column="39">bottom</name></name></expr></argument>, 
				<argument><expr><name pos:line="194" pos:column="33">_hParent</name></expr></argument>,
				<argument><expr><name pos:line="195" pos:column="33">NULL</name></expr></argument>,
				<argument><expr><name pos:line="196" pos:column="33">_hInst</name></expr></argument>,
				<argument><expr><op:operator pos:line="197" pos:column="33">(</op:operator><name pos:line="197" pos:column="34">LPVOID</name><op:operator pos:line="197" pos:column="40">)</op:operator><name pos:line="197" pos:column="41">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><op:operator pos:line="199" pos:column="13">!</op:operator><name pos:line="199" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="199" pos:column="21">
	<block pos:line="200" pos:column="9">{
		<throw pos:line="201" pos:column="17">throw <expr><call><name><name pos:line="201" pos:column="23">std</name><op:operator pos:line="201" pos:column="26">::</op:operator><name pos:line="201" pos:column="28">runtime_error</name></name><argument_list pos:line="201" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="42">"Splitter::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="204" pos:column="9">RECT</name></type> <name pos:line="204" pos:column="14">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="205" pos:column="9">getClientRect</name><argument_list pos:line="205" pos:column="22">(<argument><expr><name pos:line="205" pos:column="23">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="206" pos:column="9">//::GetClientRect(_hParent,&amp;rc);</comment>

	<expr_stmt><expr><name><name pos:line="208" pos:column="9">_clickZone2TL</name><op:operator pos:line="208" pos:column="22">.</op:operator><name pos:line="208" pos:column="23">left</name></name> <op:operator pos:line="208" pos:column="28">=</op:operator> <name><name pos:line="208" pos:column="30">rc</name><op:operator pos:line="208" pos:column="32">.</op:operator><name pos:line="208" pos:column="33">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="209" pos:column="9">_clickZone2TL</name><op:operator pos:line="209" pos:column="22">.</op:operator><name pos:line="209" pos:column="23">top</name></name> <op:operator pos:line="209" pos:column="27">=</op:operator> <name><name pos:line="209" pos:column="29">rc</name><op:operator pos:line="209" pos:column="31">.</op:operator><name pos:line="209" pos:column="32">top</name></name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="211" pos:column="9">int</name></type> <name pos:line="211" pos:column="13">clickZoneWidth</name> <init pos:line="211" pos:column="28">= <expr><call><name pos:line="211" pos:column="30">getClickZone</name><argument_list pos:line="211" pos:column="42">(<argument><expr><name pos:line="211" pos:column="43">WIDTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="212" pos:column="9">int</name></type> <name pos:line="212" pos:column="13">clickZoneHeight</name> <init pos:line="212" pos:column="29">= <expr><call><name pos:line="212" pos:column="31">getClickZone</name><argument_list pos:line="212" pos:column="43">(<argument><expr><name pos:line="212" pos:column="44">HEIGHT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="213" pos:column="9">_clickZone2TL</name><op:operator pos:line="213" pos:column="22">.</op:operator><name pos:line="213" pos:column="23">right</name></name> <op:operator pos:line="213" pos:column="29">=</op:operator> <name pos:line="213" pos:column="31">clickZoneWidth</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="214" pos:column="9">_clickZone2TL</name><op:operator pos:line="214" pos:column="22">.</op:operator><name pos:line="214" pos:column="23">bottom</name></name> <op:operator pos:line="214" pos:column="30">=</op:operator> <name pos:line="214" pos:column="32">clickZoneHeight</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="216" pos:column="9">_clickZone2BR</name><op:operator pos:line="216" pos:column="22">.</op:operator><name pos:line="216" pos:column="23">left</name></name> <op:operator pos:line="216" pos:column="28">=</op:operator> <name><name pos:line="216" pos:column="30">rc</name><op:operator pos:line="216" pos:column="32">.</op:operator><name pos:line="216" pos:column="33">right</name></name> <op:operator pos:line="216" pos:column="39">-</op:operator> <name pos:line="216" pos:column="41">clickZoneWidth</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="217" pos:column="9">_clickZone2BR</name><op:operator pos:line="217" pos:column="22">.</op:operator><name pos:line="217" pos:column="23">top</name></name> <op:operator pos:line="217" pos:column="27">=</op:operator> <name><name pos:line="217" pos:column="29">rc</name><op:operator pos:line="217" pos:column="31">.</op:operator><name pos:line="217" pos:column="32">bottom</name></name> <op:operator pos:line="217" pos:column="39">-</op:operator> <name pos:line="217" pos:column="41">clickZoneHeight</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="218" pos:column="9">_clickZone2BR</name><op:operator pos:line="218" pos:column="22">.</op:operator><name pos:line="218" pos:column="23">right</name></name> <op:operator pos:line="218" pos:column="29">=</op:operator> <name pos:line="218" pos:column="31">clickZoneWidth</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="219" pos:column="9">_clickZone2BR</name><op:operator pos:line="219" pos:column="22">.</op:operator><name pos:line="219" pos:column="23">bottom</name></name> <op:operator pos:line="219" pos:column="30">=</op:operator> <name pos:line="219" pos:column="32">clickZoneHeight</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="221" pos:column="9">display</name><argument_list pos:line="221" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="222" pos:column="9">::</op:operator><name pos:line="222" pos:column="11">SendMessage</name></name><argument_list pos:line="222" pos:column="22">(<argument><expr><name pos:line="222" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="33">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="54">_rect</name><op:operator pos:line="222" pos:column="59">.</op:operator><name pos:line="222" pos:column="60">left</name></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="66">_rect</name><op:operator pos:line="222" pos:column="71">.</op:operator><name pos:line="222" pos:column="72">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></function>
<comment type="line" pos:line="225" pos:column="1">// determinated by (_dwFlags &amp; SV_VERTICAL) &amp;&amp; _splitterSize</comment>
<function><type><name pos:line="226" pos:column="1">int</name></type> <name><name pos:line="226" pos:column="5">Splitter</name><op:operator pos:line="226" pos:column="13">::</op:operator><name pos:line="226" pos:column="15">getClickZone</name></name><parameter_list pos:line="226" pos:column="27">(<param><decl><type><name pos:line="226" pos:column="28">WH</name></type> <name pos:line="226" pos:column="31">which</name></decl></param>)</parameter_list>
<block pos:line="227" pos:column="1">{
	<if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><name pos:line="228" pos:column="13">_spiltterSize</name> <op:operator pos:line="228" pos:column="27">&lt;=</op:operator> <lit:literal type="number" pos:line="228" pos:column="30">8</lit:literal></expr>)</condition><then pos:line="228" pos:column="32">
	<block pos:line="229" pos:column="9">{
		<return pos:line="230" pos:column="17">return <expr><call><name pos:line="230" pos:column="24">isVertical</name><argument_list pos:line="230" pos:column="34">()</argument_list></call><op:operator pos:line="230" pos:column="36">?</op:operator><op:operator pos:line="230" pos:column="37">(</op:operator><name pos:line="230" pos:column="38">which</name><op:operator pos:line="230" pos:column="43">==</op:operator><name pos:line="230" pos:column="45">WIDTH</name><op:operator pos:line="230" pos:column="50">?</op:operator><name pos:line="230" pos:column="51">_spiltterSize</name><op:operator pos:line="230" pos:column="64">:</op:operator><name pos:line="230" pos:column="65">HIEGHT_MINIMAL</name><op:operator pos:line="230" pos:column="79">)</op:operator>
							<op:operator pos:line="231" pos:column="57">:</op:operator><op:operator pos:line="231" pos:column="58">(</op:operator><name pos:line="231" pos:column="59">which</name><op:operator pos:line="231" pos:column="64">==</op:operator><name pos:line="231" pos:column="66">WIDTH</name><op:operator pos:line="231" pos:column="71">?</op:operator><name pos:line="231" pos:column="72">HIEGHT_MINIMAL</name><op:operator pos:line="231" pos:column="86">:</op:operator><name pos:line="231" pos:column="87">_spiltterSize</name><op:operator pos:line="231" pos:column="100">)</op:operator></expr>;</return>
	}</block></then>
	<else pos:line="233" pos:column="9">else <comment type="line" pos:line="233" pos:column="14">// (_spiltterSize &gt; 8)</comment>
	<block pos:line="234" pos:column="9">{
		<return pos:line="235" pos:column="17">return <expr><call><name pos:line="235" pos:column="24">isVertical</name><argument_list pos:line="235" pos:column="34">()</argument_list></call><op:operator pos:line="235" pos:column="36">?</op:operator><op:operator pos:line="235" pos:column="37">(</op:operator><name pos:line="235" pos:column="38">which</name><op:operator pos:line="235" pos:column="43">==</op:operator><name pos:line="235" pos:column="45">WIDTH</name><op:operator pos:line="235" pos:column="50">?</op:operator> <lit:literal type="number" pos:line="235" pos:column="52">8</lit:literal><op:operator pos:line="235" pos:column="53">:</op:operator><lit:literal type="number" pos:line="235" pos:column="54">15</lit:literal><op:operator pos:line="235" pos:column="56">)</op:operator>
							<op:operator pos:line="236" pos:column="57">:</op:operator><op:operator pos:line="236" pos:column="58">(</op:operator><name pos:line="236" pos:column="59">which</name><op:operator pos:line="236" pos:column="64">==</op:operator><name pos:line="236" pos:column="66">WIDTH</name><op:operator pos:line="236" pos:column="71">?</op:operator><lit:literal type="number" pos:line="236" pos:column="72">15</lit:literal><op:operator pos:line="236" pos:column="74">:</op:operator><lit:literal type="number" pos:line="236" pos:column="75">8</lit:literal><op:operator pos:line="236" pos:column="76">)</op:operator></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="240" pos:column="1">LRESULT</name> <name pos:line="240" pos:column="9">CALLBACK</name></type> <name><name pos:line="240" pos:column="18">Splitter</name><op:operator pos:line="240" pos:column="26">::</op:operator><name pos:line="240" pos:column="28">staticWndProc</name></name><parameter_list pos:line="240" pos:column="41">(<param><decl><type><name pos:line="240" pos:column="42">HWND</name></type> <name pos:line="240" pos:column="47">hWnd</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="53">UINT</name></type> <name pos:line="240" pos:column="58">uMsg</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="64">WPARAM</name></type> <name pos:line="240" pos:column="71">wParam</name></decl></param>, <param><decl><type><name pos:line="240" pos:column="79">LPARAM</name></type> <name pos:line="240" pos:column="86">lParam</name></decl></param>)</parameter_list>
<block pos:line="241" pos:column="1">{
	<switch pos:line="242" pos:column="9">switch<condition pos:line="242" pos:column="15">(<expr><name pos:line="242" pos:column="16">uMsg</name></expr>)</condition>
	<block pos:line="243" pos:column="9">{
		<case pos:line="244" pos:column="17">case <expr><name pos:line="244" pos:column="22">WM_NCCREATE</name></expr>:
		<block pos:line="245" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="246" pos:column="25">Splitter</name> <type:modifier pos:line="246" pos:column="34">*</type:modifier></type> <name pos:line="246" pos:column="36">pSplitter</name> <init pos:line="246" pos:column="46">= <expr><op:operator pos:line="246" pos:column="48">(</op:operator><name pos:line="246" pos:column="49">Splitter</name> <op:operator pos:line="246" pos:column="58">*</op:operator><op:operator pos:line="246" pos:column="59">)</op:operator><op:operator pos:line="246" pos:column="60">(</op:operator><op:operator pos:line="246" pos:column="61">(</op:operator><name pos:line="246" pos:column="62">LPCREATESTRUCT</name><op:operator pos:line="246" pos:column="76">)</op:operator><name pos:line="246" pos:column="77">lParam</name><op:operator pos:line="246" pos:column="83">)</op:operator><op:operator pos:line="246" pos:column="84">-&gt;</op:operator><name pos:line="246" pos:column="86">lpCreateParams</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="247" pos:column="25">pSplitter</name><op:operator pos:line="247" pos:column="34">-&gt;</op:operator><name pos:line="247" pos:column="36">_hSelf</name></name> <op:operator pos:line="247" pos:column="43">=</op:operator> <name pos:line="247" pos:column="45">hWnd</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="248" pos:column="25">::</op:operator><name pos:line="248" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="248" pos:column="43">(<argument><expr><name pos:line="248" pos:column="44">hWnd</name></expr></argument>, <argument><expr><name pos:line="248" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="248" pos:column="65">(</op:operator><name pos:line="248" pos:column="66">LONG_PTR</name><op:operator pos:line="248" pos:column="74">)</op:operator><name pos:line="248" pos:column="75">pSplitter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="249" pos:column="25">return <expr><name pos:line="249" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><default pos:line="251" pos:column="17">default:
		<block pos:line="252" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="253" pos:column="25">Splitter</name> <type:modifier pos:line="253" pos:column="34">*</type:modifier></type> <name pos:line="253" pos:column="36">pSplitter</name> <init pos:line="253" pos:column="46">= <expr><op:operator pos:line="253" pos:column="48">(</op:operator><name pos:line="253" pos:column="49">Splitter</name> <op:operator pos:line="253" pos:column="58">*</op:operator><op:operator pos:line="253" pos:column="59">)</op:operator><call><name><op:operator pos:line="253" pos:column="60">::</op:operator><name pos:line="253" pos:column="62">GetWindowLongPtr</name></name><argument_list pos:line="253" pos:column="78">(<argument><expr><name pos:line="253" pos:column="79">hWnd</name></expr></argument>, <argument><expr><name pos:line="253" pos:column="85">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="254" pos:column="25">if <condition pos:line="254" pos:column="28">(<expr><op:operator pos:line="254" pos:column="29">!</op:operator><name pos:line="254" pos:column="30">pSplitter</name></expr>)</condition><then pos:line="254" pos:column="40">
				<return pos:line="255" pos:column="33">return <expr><call><name><op:operator pos:line="255" pos:column="40">::</op:operator><name pos:line="255" pos:column="42">DefWindowProc</name></name><argument_list pos:line="255" pos:column="55">(<argument><expr><name pos:line="255" pos:column="56">hWnd</name></expr></argument>, <argument><expr><name pos:line="255" pos:column="62">uMsg</name></expr></argument>, <argument><expr><name pos:line="255" pos:column="68">wParam</name></expr></argument>, <argument><expr><name pos:line="255" pos:column="76">lParam</name></expr></argument>)</argument_list></call></expr>;</return></then></if>

			<return pos:line="257" pos:column="25">return <expr><call><name><name pos:line="257" pos:column="32">pSplitter</name><op:operator pos:line="257" pos:column="41">-&gt;</op:operator><name pos:line="257" pos:column="43">spliterWndProc</name></name><argument_list pos:line="257" pos:column="57">(<argument><expr><name pos:line="257" pos:column="58">uMsg</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="64">wParam</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="72">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="262" pos:column="1">LRESULT</name> <name pos:line="262" pos:column="9">CALLBACK</name></type> <name><name pos:line="262" pos:column="18">Splitter</name><op:operator pos:line="262" pos:column="26">::</op:operator><name pos:line="262" pos:column="28">spliterWndProc</name></name><parameter_list pos:line="262" pos:column="42">(<param><decl><type><name pos:line="262" pos:column="43">UINT</name></type> <name pos:line="262" pos:column="48">uMsg</name></decl></param>, <param><decl><type><name pos:line="262" pos:column="54">WPARAM</name></type> <name pos:line="262" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="262" pos:column="69">LPARAM</name></type> <name pos:line="262" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="263" pos:column="1">{
	<switch pos:line="264" pos:column="9">switch <condition pos:line="264" pos:column="16">(<expr><name pos:line="264" pos:column="17">uMsg</name></expr>)</condition>
	<block pos:line="265" pos:column="9">{
<comment type="block" pos:line="266" pos:column="1">/*	
	case WM_LBUTTONDBLCLK:
		{
::MessageBox(NULL, TEXT(""), TEXT(""), MB_OK);
		}
		return 0;

	case WM_RBUTTONDBLCLK:
		{

		}
		return 0;
	*/</comment>
	<case pos:line="279" pos:column="9">case <expr><name pos:line="279" pos:column="14">WM_LBUTTONDOWN</name></expr>:
		<block pos:line="280" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="281" pos:column="25">POINT</name></type> <name pos:line="281" pos:column="31">p</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="282" pos:column="25">p</name><op:operator pos:line="282" pos:column="26">.</op:operator><name pos:line="282" pos:column="27">x</name></name> <op:operator pos:line="282" pos:column="29">=</op:operator> <call><name pos:line="282" pos:column="31">LOWORD</name><argument_list pos:line="282" pos:column="37">(<argument><expr><name pos:line="282" pos:column="38">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="283" pos:column="25">p</name><op:operator pos:line="283" pos:column="26">.</op:operator><name pos:line="283" pos:column="27">y</name></name> <op:operator pos:line="283" pos:column="29">=</op:operator> <call><name pos:line="283" pos:column="31">HIWORD</name><argument_list pos:line="283" pos:column="37">(<argument><expr><name pos:line="283" pos:column="38">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="285" pos:column="25">if <condition pos:line="285" pos:column="28">(<expr><op:operator pos:line="285" pos:column="29">(</op:operator><call><name pos:line="285" pos:column="30">isInLeftTopZone</name><argument_list pos:line="285" pos:column="45">(<argument><expr><name pos:line="285" pos:column="46">p</name></expr></argument>)</argument_list></call><op:operator pos:line="285" pos:column="48">)</op:operator><op:operator pos:line="285" pos:column="49">&amp;&amp;</op:operator><op:operator pos:line="285" pos:column="51">(</op:operator><name pos:line="285" pos:column="52">wParam</name> <op:operator pos:line="285" pos:column="59">==</op:operator> <name pos:line="285" pos:column="62">MK_LBUTTON</name><op:operator pos:line="285" pos:column="72">)</op:operator></expr>)</condition><then pos:line="285" pos:column="74">
			<block pos:line="286" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="287" pos:column="33">gotoTopLeft</name><argument_list pos:line="287" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="288" pos:column="33">return <expr><name pos:line="288" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>

			<if pos:line="291" pos:column="25">if <condition pos:line="291" pos:column="28">(<expr><op:operator pos:line="291" pos:column="29">(</op:operator><call><name pos:line="291" pos:column="30">isInRightBottomZone</name><argument_list pos:line="291" pos:column="49">(<argument><expr><name pos:line="291" pos:column="50">p</name></expr></argument>)</argument_list></call><op:operator pos:line="291" pos:column="52">)</op:operator><op:operator pos:line="291" pos:column="53">&amp;&amp;</op:operator><op:operator pos:line="291" pos:column="55">(</op:operator><name pos:line="291" pos:column="56">wParam</name> <op:operator pos:line="291" pos:column="63">==</op:operator> <name pos:line="291" pos:column="66">MK_LBUTTON</name><op:operator pos:line="291" pos:column="76">)</op:operator></expr>)</condition><then pos:line="291" pos:column="78">
			<block pos:line="292" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="293" pos:column="33">gotoRightBouuom</name><argument_list pos:line="293" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="294" pos:column="33">return <expr><name pos:line="294" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>

			<if pos:line="297" pos:column="25">if <condition pos:line="297" pos:column="28">(<expr><op:operator pos:line="297" pos:column="29">!</op:operator><name pos:line="297" pos:column="30">_isFixed</name></expr>)</condition><then pos:line="297" pos:column="39">
			<block pos:line="298" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="299" pos:column="33">::</op:operator><name pos:line="299" pos:column="35">SetCapture</name></name><argument_list pos:line="299" pos:column="45">(<argument><expr><name pos:line="299" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="300" pos:column="33">_isDraged</name> <op:operator pos:line="300" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="300" pos:column="45">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<return pos:line="303" pos:column="17">return <expr><lit:literal type="number" pos:line="303" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="305" pos:column="9">case <expr><name pos:line="305" pos:column="14">WM_RBUTTONDOWN</name></expr> :
		<expr_stmt><expr><call><name><op:operator pos:line="306" pos:column="17">::</op:operator><name pos:line="306" pos:column="19">SendMessage</name></name><argument_list pos:line="306" pos:column="30">(<argument><expr><name pos:line="306" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="306" pos:column="41">WM_DOPOPUPMENU</name></expr></argument>, <argument><expr><name pos:line="306" pos:column="57">wParam</name></expr></argument>, <argument><expr><name pos:line="306" pos:column="65">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="307" pos:column="17">return <expr><name pos:line="307" pos:column="24">TRUE</name></expr>;</return>

	</case><case pos:line="309" pos:column="9">case <expr><name pos:line="309" pos:column="14">WM_MOUSEMOVE</name></expr>:
		<block pos:line="310" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="311" pos:column="25">POINT</name></type> <name pos:line="311" pos:column="31">p</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="312" pos:column="25">p</name><op:operator pos:line="312" pos:column="26">.</op:operator><name pos:line="312" pos:column="27">x</name></name> <op:operator pos:line="312" pos:column="29">=</op:operator> <call><name pos:line="312" pos:column="31">LOWORD</name><argument_list pos:line="312" pos:column="37">(<argument><expr><name pos:line="312" pos:column="38">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="313" pos:column="25">p</name><op:operator pos:line="313" pos:column="26">.</op:operator><name pos:line="313" pos:column="27">y</name></name> <op:operator pos:line="313" pos:column="29">=</op:operator> <call><name pos:line="313" pos:column="31">HIWORD</name><argument_list pos:line="313" pos:column="37">(<argument><expr><name pos:line="313" pos:column="38">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="315" pos:column="25">if <condition pos:line="315" pos:column="28">(<expr><call><name pos:line="315" pos:column="29">isInLeftTopZone</name><argument_list pos:line="315" pos:column="44">(<argument><expr><name pos:line="315" pos:column="45">p</name></expr></argument>)</argument_list></call> <op:operator pos:line="315" pos:column="48">||</op:operator> <call><name pos:line="315" pos:column="51">isInRightBottomZone</name><argument_list pos:line="315" pos:column="70">(<argument><expr><name pos:line="315" pos:column="71">p</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="315" pos:column="74">
			<block pos:line="316" pos:column="25">{
				<comment type="line" pos:line="317" pos:column="33">//::SetCursor(::LoadCursor(_hInst, MAKEINTRESOURCE(IDC_UP_ARROW)));</comment>
				<expr_stmt><expr><call><name><op:operator pos:line="318" pos:column="33">::</op:operator><name pos:line="318" pos:column="35">SetCursor</name></name><argument_list pos:line="318" pos:column="44">(<argument><expr><call><name><op:operator pos:line="318" pos:column="45">::</op:operator><name pos:line="318" pos:column="47">LoadCursor</name></name><argument_list pos:line="318" pos:column="57">(<argument><expr><name pos:line="318" pos:column="58">NULL</name></expr></argument>, <argument><expr><name pos:line="318" pos:column="64">IDC_ARROW</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="319" pos:column="33">return <expr><name pos:line="319" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>

			<if pos:line="322" pos:column="25">if <condition pos:line="322" pos:column="28">(<expr><op:operator pos:line="322" pos:column="29">(</op:operator><op:operator pos:line="322" pos:column="30">!</op:operator><name pos:line="322" pos:column="31">_isFixed</name><op:operator pos:line="322" pos:column="39">)</op:operator> <op:operator pos:line="322" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="322" pos:column="44">(</op:operator><name pos:line="322" pos:column="45">wParam</name> <op:operator pos:line="322" pos:column="52">==</op:operator> <name pos:line="322" pos:column="55">MK_LBUTTON</name><op:operator pos:line="322" pos:column="65">)</op:operator></expr>)</condition><then pos:line="322" pos:column="67">
			<block pos:line="323" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="324" pos:column="33">POINT</name></type> <name pos:line="324" pos:column="39">pt</name></decl>;</decl_stmt> <decl_stmt><decl><type><name pos:line="324" pos:column="43">RECT</name></type> <name pos:line="324" pos:column="48">rt</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="325" pos:column="33">::</op:operator><name pos:line="325" pos:column="35">GetClientRect</name></name><argument_list pos:line="325" pos:column="48">(<argument><expr><name pos:line="325" pos:column="49">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="325" pos:column="59">&amp;</op:operator><name pos:line="325" pos:column="60">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="327" pos:column="33">::</op:operator><name pos:line="327" pos:column="35">GetCursorPos</name></name><argument_list pos:line="327" pos:column="47">(<argument><expr><op:operator pos:line="327" pos:column="48">&amp;</op:operator><name pos:line="327" pos:column="49">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="328" pos:column="33">::</op:operator><name pos:line="328" pos:column="35">ScreenToClient</name></name><argument_list pos:line="328" pos:column="49">(<argument><expr><name pos:line="328" pos:column="50">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="328" pos:column="60">&amp;</op:operator><name pos:line="328" pos:column="61">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="330" pos:column="33">if <condition pos:line="330" pos:column="36">(<expr><name pos:line="330" pos:column="37">_dwFlags</name> <op:operator pos:line="330" pos:column="46">&amp;</op:operator> <name pos:line="330" pos:column="48">SV_HORIZONTAL</name></expr>)</condition><then pos:line="330" pos:column="62">
				<block pos:line="331" pos:column="33">{
					<if pos:line="332" pos:column="41">if <condition pos:line="332" pos:column="44">(<expr><name><name pos:line="332" pos:column="45">pt</name><op:operator pos:line="332" pos:column="47">.</op:operator><name pos:line="332" pos:column="48">y</name></name> <op:operator pos:line="332" pos:column="50">&lt;=</op:operator> <lit:literal type="number" pos:line="332" pos:column="53">1</lit:literal></expr>)</condition><then pos:line="332" pos:column="55">
					<block pos:line="333" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="334" pos:column="49">_rect</name><op:operator pos:line="334" pos:column="54">.</op:operator><name pos:line="334" pos:column="55">top</name></name> <op:operator pos:line="334" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="334" pos:column="61">1</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="335" pos:column="49">_splitPercent</name> <op:operator pos:line="335" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="335" pos:column="65">1</lit:literal></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="337" pos:column="41">else
					<block pos:line="338" pos:column="41">{
						<if pos:line="339" pos:column="49">if <condition pos:line="339" pos:column="52">(<expr><name><name pos:line="339" pos:column="53">pt</name><op:operator pos:line="339" pos:column="55">.</op:operator><name pos:line="339" pos:column="56">y</name></name> <op:operator pos:line="339" pos:column="58">&lt;=</op:operator> <op:operator pos:line="339" pos:column="61">(</op:operator><name><name pos:line="339" pos:column="62">rt</name><op:operator pos:line="339" pos:column="64">.</op:operator><name pos:line="339" pos:column="65">bottom</name></name> <op:operator pos:line="339" pos:column="72">-</op:operator> <lit:literal type="number" pos:line="339" pos:column="74">5</lit:literal><op:operator pos:line="339" pos:column="75">)</op:operator></expr>)</condition><then pos:line="339" pos:column="77">
						<block pos:line="340" pos:column="49">{
							<expr_stmt><expr><name><name pos:line="341" pos:column="57">_rect</name><op:operator pos:line="341" pos:column="62">.</op:operator><name pos:line="341" pos:column="63">top</name></name> <op:operator pos:line="341" pos:column="67">=</op:operator> <name><name pos:line="341" pos:column="69">pt</name><op:operator pos:line="341" pos:column="71">.</op:operator><name pos:line="341" pos:column="72">y</name></name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="342" pos:column="57">_splitPercent</name> <op:operator pos:line="342" pos:column="71">=</op:operator> <op:operator pos:line="342" pos:column="73">(</op:operator><op:operator pos:line="342" pos:column="74">(</op:operator><name><name pos:line="342" pos:column="75">pt</name><op:operator pos:line="342" pos:column="77">.</op:operator><name pos:line="342" pos:column="78">y</name></name> <op:operator pos:line="342" pos:column="80">*</op:operator> <lit:literal type="number" pos:line="342" pos:column="82">100</lit:literal> <op:operator pos:line="342" pos:column="86">/</op:operator> <name><name pos:line="342" pos:column="88">rt</name><op:operator pos:line="342" pos:column="90">.</op:operator><name pos:line="342" pos:column="91">bottom</name></name><op:operator pos:line="342" pos:column="97">*</op:operator><lit:literal type="number" pos:line="342" pos:column="98">100</lit:literal><op:operator pos:line="342" pos:column="101">)</op:operator> <op:operator pos:line="342" pos:column="103">/</op:operator> <lit:literal type="number" pos:line="342" pos:column="105">100</lit:literal><op:operator pos:line="342" pos:column="108">)</op:operator></expr>;</expr_stmt>
						}</block></then>
						<else pos:line="344" pos:column="49">else
						<block pos:line="345" pos:column="49">{
							<expr_stmt><expr><name><name pos:line="346" pos:column="57">_rect</name><op:operator pos:line="346" pos:column="62">.</op:operator><name pos:line="346" pos:column="63">top</name></name> <op:operator pos:line="346" pos:column="67">=</op:operator> <name><name pos:line="346" pos:column="69">rt</name><op:operator pos:line="346" pos:column="71">.</op:operator><name pos:line="346" pos:column="72">bottom</name></name> <op:operator pos:line="346" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="346" pos:column="81">5</lit:literal></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="347" pos:column="57">_splitPercent</name> <op:operator pos:line="347" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="347" pos:column="73">99</lit:literal></expr>;</expr_stmt>
						}</block></else></if>
					}</block></else></if>
				}</block></then>
				<else pos:line="351" pos:column="33">else
				<block pos:line="352" pos:column="33">{
					<if pos:line="353" pos:column="41">if <condition pos:line="353" pos:column="44">(<expr><name><name pos:line="353" pos:column="45">pt</name><op:operator pos:line="353" pos:column="47">.</op:operator><name pos:line="353" pos:column="48">x</name></name> <op:operator pos:line="353" pos:column="50">&lt;=</op:operator> <lit:literal type="number" pos:line="353" pos:column="53">1</lit:literal></expr>)</condition><then pos:line="353" pos:column="55">
					<block pos:line="354" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="355" pos:column="49">_rect</name><op:operator pos:line="355" pos:column="54">.</op:operator><name pos:line="355" pos:column="55">left</name></name> <op:operator pos:line="355" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="355" pos:column="62">1</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="356" pos:column="49">_splitPercent</name> <op:operator pos:line="356" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="356" pos:column="65">1</lit:literal></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="358" pos:column="41">else
					<block pos:line="359" pos:column="41">{
						<if pos:line="360" pos:column="49">if <condition pos:line="360" pos:column="52">(<expr><name><name pos:line="360" pos:column="53">pt</name><op:operator pos:line="360" pos:column="55">.</op:operator><name pos:line="360" pos:column="56">x</name></name> <op:operator pos:line="360" pos:column="58">&lt;=</op:operator> <op:operator pos:line="360" pos:column="61">(</op:operator><name><name pos:line="360" pos:column="62">rt</name><op:operator pos:line="360" pos:column="64">.</op:operator><name pos:line="360" pos:column="65">right</name></name> <op:operator pos:line="360" pos:column="71">-</op:operator> <lit:literal type="number" pos:line="360" pos:column="73">5</lit:literal><op:operator pos:line="360" pos:column="74">)</op:operator></expr>)</condition><then pos:line="360" pos:column="76">
						<block pos:line="361" pos:column="49">{
							<expr_stmt><expr><name><name pos:line="362" pos:column="57">_rect</name><op:operator pos:line="362" pos:column="62">.</op:operator><name pos:line="362" pos:column="63">left</name></name> <op:operator pos:line="362" pos:column="68">=</op:operator> <name><name pos:line="362" pos:column="70">pt</name><op:operator pos:line="362" pos:column="72">.</op:operator><name pos:line="362" pos:column="73">x</name></name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="363" pos:column="57">_splitPercent</name> <op:operator pos:line="363" pos:column="71">=</op:operator> <op:operator pos:line="363" pos:column="73">(</op:operator><op:operator pos:line="363" pos:column="74">(</op:operator><name><name pos:line="363" pos:column="75">pt</name><op:operator pos:line="363" pos:column="77">.</op:operator><name pos:line="363" pos:column="78">x</name></name><op:operator pos:line="363" pos:column="79">*</op:operator><lit:literal type="number" pos:line="363" pos:column="80">100</lit:literal><op:operator pos:line="363" pos:column="83">/</op:operator><name><name pos:line="363" pos:column="84">rt</name><op:operator pos:line="363" pos:column="86">.</op:operator><name pos:line="363" pos:column="87">right</name></name><op:operator pos:line="363" pos:column="92">*</op:operator><lit:literal type="number" pos:line="363" pos:column="93">100</lit:literal><op:operator pos:line="363" pos:column="96">)</op:operator><op:operator pos:line="363" pos:column="97">/</op:operator><lit:literal type="number" pos:line="363" pos:column="98">100</lit:literal><op:operator pos:line="363" pos:column="101">)</op:operator></expr>;</expr_stmt>
						}</block></then>
						<else pos:line="365" pos:column="49">else
						<block pos:line="366" pos:column="49">{
							<expr_stmt><expr><name><name pos:line="367" pos:column="57">_rect</name><op:operator pos:line="367" pos:column="62">.</op:operator><name pos:line="367" pos:column="63">left</name></name> <op:operator pos:line="367" pos:column="68">=</op:operator> <name><name pos:line="367" pos:column="70">rt</name><op:operator pos:line="367" pos:column="72">.</op:operator><name pos:line="367" pos:column="73">right</name></name> <op:operator pos:line="367" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="367" pos:column="81">5</lit:literal></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="368" pos:column="57">_splitPercent</name> <op:operator pos:line="368" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="368" pos:column="73">99</lit:literal></expr>;</expr_stmt>
						}</block></else></if>
					}</block></else></if>
				}</block></else></if>

				<expr_stmt><expr><call><name><op:operator pos:line="373" pos:column="33">::</op:operator><name pos:line="373" pos:column="35">SendMessage</name></name><argument_list pos:line="373" pos:column="46">(<argument><expr><name pos:line="373" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="373" pos:column="57">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="373" pos:column="78">_rect</name><op:operator pos:line="373" pos:column="83">.</op:operator><name pos:line="373" pos:column="84">left</name></name></expr></argument>, <argument><expr><name><name pos:line="373" pos:column="90">_rect</name><op:operator pos:line="373" pos:column="95">.</op:operator><name pos:line="373" pos:column="96">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="374" pos:column="33">::</op:operator><name pos:line="374" pos:column="35">MoveWindow</name></name><argument_list pos:line="374" pos:column="45">(<argument><expr><name pos:line="374" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="54">_rect</name><op:operator pos:line="374" pos:column="59">.</op:operator><name pos:line="374" pos:column="60">left</name></name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="66">_rect</name><op:operator pos:line="374" pos:column="71">.</op:operator><name pos:line="374" pos:column="72">top</name></name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="77">_rect</name><op:operator pos:line="374" pos:column="82">.</op:operator><name pos:line="374" pos:column="83">right</name></name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="90">_rect</name><op:operator pos:line="374" pos:column="95">.</op:operator><name pos:line="374" pos:column="96">bottom</name></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="104">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="375" pos:column="33">redraw</name><argument_list pos:line="375" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="377" pos:column="25">return <expr><lit:literal type="number" pos:line="377" pos:column="32">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="380" pos:column="9">case <expr><name pos:line="380" pos:column="14">WM_LBUTTONUP</name></expr>:
		<block pos:line="381" pos:column="17">{
			<if pos:line="382" pos:column="25">if <condition pos:line="382" pos:column="28">(<expr><op:operator pos:line="382" pos:column="29">!</op:operator><name pos:line="382" pos:column="30">_isFixed</name></expr>)</condition><then pos:line="382" pos:column="39">
			<block pos:line="383" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="384" pos:column="33">ReleaseCapture</name><argument_list pos:line="384" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="386" pos:column="25">return <expr><lit:literal type="number" pos:line="386" pos:column="32">0</lit:literal></expr>;</return>
		}</block>
	</case><case pos:line="388" pos:column="9">case <expr><name pos:line="388" pos:column="14">WM_CAPTURECHANGED</name></expr>:
		<block pos:line="389" pos:column="17">{
			<if pos:line="390" pos:column="25">if <condition pos:line="390" pos:column="28">(<expr><name pos:line="390" pos:column="29">_isDraged</name></expr>)</condition><then pos:line="390" pos:column="39">
			<block pos:line="391" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="392" pos:column="33">::</op:operator><name pos:line="392" pos:column="35">SendMessage</name></name><argument_list pos:line="392" pos:column="46">(<argument><expr><name pos:line="392" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="392" pos:column="57">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="392" pos:column="78">_rect</name><op:operator pos:line="392" pos:column="83">.</op:operator><name pos:line="392" pos:column="84">left</name></name></expr></argument>, <argument><expr><name><name pos:line="392" pos:column="90">_rect</name><op:operator pos:line="392" pos:column="95">.</op:operator><name pos:line="392" pos:column="96">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="393" pos:column="33">::</op:operator><name pos:line="393" pos:column="35">MoveWindow</name></name><argument_list pos:line="393" pos:column="45">(<argument><expr><name pos:line="393" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="54">_rect</name><op:operator pos:line="393" pos:column="59">.</op:operator><name pos:line="393" pos:column="60">left</name></name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="66">_rect</name><op:operator pos:line="393" pos:column="71">.</op:operator><name pos:line="393" pos:column="72">top</name></name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="77">_rect</name><op:operator pos:line="393" pos:column="82">.</op:operator><name pos:line="393" pos:column="83">right</name></name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="90">_rect</name><op:operator pos:line="393" pos:column="95">.</op:operator><name pos:line="393" pos:column="96">bottom</name></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="104">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="394" pos:column="33">_isDraged</name> <op:operator pos:line="394" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="394" pos:column="45">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="396" pos:column="25">return <expr><lit:literal type="number" pos:line="396" pos:column="32">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="399" pos:column="9">case <expr><name pos:line="399" pos:column="14">WM_PAINT</name></expr> :
		<expr_stmt><expr><call><name pos:line="400" pos:column="17">drawSplitter</name><argument_list pos:line="400" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="401" pos:column="17">return <expr><lit:literal type="number" pos:line="401" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="403" pos:column="9">case <expr><name pos:line="403" pos:column="14">WM_CLOSE</name></expr>:
		<expr_stmt><expr><call><name pos:line="404" pos:column="17">destroy</name><argument_list pos:line="404" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="405" pos:column="17">return <expr><lit:literal type="number" pos:line="405" pos:column="24">0</lit:literal></expr>;</return>
	</case>}</block></switch>
	<return pos:line="407" pos:column="9">return <expr><call><name><op:operator pos:line="407" pos:column="16">::</op:operator><name pos:line="407" pos:column="18">DefWindowProc</name></name><argument_list pos:line="407" pos:column="31">(<argument><expr><name pos:line="407" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><name pos:line="407" pos:column="40">uMsg</name></expr></argument>, <argument><expr><name pos:line="407" pos:column="46">wParam</name></expr></argument>, <argument><expr><name pos:line="407" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="410" pos:column="1">void</name></type> <name><name pos:line="410" pos:column="6">Splitter</name><op:operator pos:line="410" pos:column="14">::</op:operator><name pos:line="410" pos:column="16">resizeSpliter</name></name><parameter_list pos:line="410" pos:column="29">(<param><decl><type><name pos:line="410" pos:column="30">RECT</name> <type:modifier pos:line="410" pos:column="35">*</type:modifier></type><name pos:line="410" pos:column="36">pRect</name></decl></param>)</parameter_list>
<block pos:line="411" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="412" pos:column="9">RECT</name></type> <name pos:line="412" pos:column="14">rect</name></decl>;</decl_stmt>

	<if pos:line="414" pos:column="9">if <condition pos:line="414" pos:column="12">(<expr><name pos:line="414" pos:column="13">pRect</name></expr>)</condition><then pos:line="414" pos:column="19">
		<expr_stmt><expr><name pos:line="415" pos:column="17">rect</name> <op:operator pos:line="415" pos:column="22">=</op:operator> <op:operator pos:line="415" pos:column="24">*</op:operator><name pos:line="415" pos:column="25">pRect</name></expr>;</expr_stmt></then>
	<else pos:line="416" pos:column="9">else
		<expr_stmt><expr><call><name><op:operator pos:line="417" pos:column="17">::</op:operator><name pos:line="417" pos:column="19">GetClientRect</name></name><argument_list pos:line="417" pos:column="32">(<argument><expr><name pos:line="417" pos:column="33">_hParent</name></expr></argument>,<argument><expr><op:operator pos:line="417" pos:column="42">&amp;</op:operator><name pos:line="417" pos:column="43">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	
	<if pos:line="419" pos:column="9">if <condition pos:line="419" pos:column="12">(<expr><name pos:line="419" pos:column="13">_dwFlags</name> <op:operator pos:line="419" pos:column="22">&amp;</op:operator> <name pos:line="419" pos:column="24">SV_HORIZONTAL</name></expr>)</condition><then pos:line="419" pos:column="38">
	<block pos:line="420" pos:column="9">{
		<comment type="line" pos:line="421" pos:column="17">// for a Horizontal spliter the width remains the same </comment>
		<comment type="line" pos:line="422" pos:column="17">// as the width of the parent window, so get the new width of the parent.</comment>
		<expr_stmt><expr><name><name pos:line="423" pos:column="17">_rect</name><op:operator pos:line="423" pos:column="22">.</op:operator><name pos:line="423" pos:column="23">right</name></name> <op:operator pos:line="423" pos:column="29">=</op:operator> <name><name pos:line="423" pos:column="31">rect</name><op:operator pos:line="423" pos:column="35">.</op:operator><name pos:line="423" pos:column="36">right</name></name></expr>;</expr_stmt>
		
		<comment type="line" pos:line="425" pos:column="17">//if resizeing should be done proportionately.</comment>
		<if pos:line="426" pos:column="17">if <condition pos:line="426" pos:column="20">(<expr><name pos:line="426" pos:column="21">_dwFlags</name> <op:operator pos:line="426" pos:column="30">&amp;</op:operator> <name pos:line="426" pos:column="32">SV_RESIZEWTHPERCNT</name></expr>)</condition><then pos:line="426" pos:column="51">
			<expr_stmt><expr><name><name pos:line="427" pos:column="25">_rect</name><op:operator pos:line="427" pos:column="30">.</op:operator><name pos:line="427" pos:column="31">top</name></name>  <op:operator pos:line="427" pos:column="36">=</op:operator> <op:operator pos:line="427" pos:column="38">(</op:operator><op:operator pos:line="427" pos:column="39">(</op:operator><name><name pos:line="427" pos:column="40">rect</name><op:operator pos:line="427" pos:column="44">.</op:operator><name pos:line="427" pos:column="45">bottom</name></name> <op:operator pos:line="427" pos:column="52">*</op:operator> <name pos:line="427" pos:column="54">_splitPercent</name><op:operator pos:line="427" pos:column="67">)</op:operator><op:operator pos:line="427" pos:column="68">/</op:operator><lit:literal type="number" pos:line="427" pos:column="69">100</lit:literal><op:operator pos:line="427" pos:column="72">)</op:operator></expr>;</expr_stmt></then>
		<else pos:line="428" pos:column="17">else <comment type="line" pos:line="428" pos:column="22">// soit la fenetre en haut soit la fenetre en bas qui est fixee</comment>
			<expr_stmt><expr><name><name pos:line="429" pos:column="25">_rect</name><op:operator pos:line="429" pos:column="30">.</op:operator><name pos:line="429" pos:column="31">top</name></name> <op:operator pos:line="429" pos:column="35">=</op:operator> <call><name pos:line="429" pos:column="37">getSplitterFixPosY</name><argument_list pos:line="429" pos:column="55">()</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></then>
	<else pos:line="431" pos:column="9">else
	<block pos:line="432" pos:column="9">{
		<comment type="line" pos:line="433" pos:column="17">// for a (default) Vertical spliter the height remains the same </comment>
		<comment type="line" pos:line="434" pos:column="17">// as the height of the parent window, so get the new height of the parent.</comment>
		<expr_stmt><expr><name><name pos:line="435" pos:column="17">_rect</name><op:operator pos:line="435" pos:column="22">.</op:operator><name pos:line="435" pos:column="23">bottom</name></name> <op:operator pos:line="435" pos:column="30">=</op:operator> <name><name pos:line="435" pos:column="32">rect</name><op:operator pos:line="435" pos:column="36">.</op:operator><name pos:line="435" pos:column="37">bottom</name></name></expr>;</expr_stmt>
		
		<comment type="line" pos:line="437" pos:column="17">//if resizeing should be done proportionately.</comment>
		<if pos:line="438" pos:column="17">if <condition pos:line="438" pos:column="20">(<expr><name pos:line="438" pos:column="21">_dwFlags</name> <op:operator pos:line="438" pos:column="30">&amp;</op:operator> <name pos:line="438" pos:column="32">SV_RESIZEWTHPERCNT</name></expr>)</condition><then pos:line="438" pos:column="51"> 
        <block pos:line="439" pos:column="9">{
			<expr_stmt><expr><name><name pos:line="440" pos:column="25">_rect</name><op:operator pos:line="440" pos:column="30">.</op:operator><name pos:line="440" pos:column="31">left</name></name> <op:operator pos:line="440" pos:column="36">=</op:operator> <op:operator pos:line="440" pos:column="38">(</op:operator><op:operator pos:line="440" pos:column="39">(</op:operator><name><name pos:line="440" pos:column="40">rect</name><op:operator pos:line="440" pos:column="44">.</op:operator><name pos:line="440" pos:column="45">right</name></name> <op:operator pos:line="440" pos:column="51">*</op:operator> <name pos:line="440" pos:column="53">_splitPercent</name><op:operator pos:line="440" pos:column="66">)</op:operator><op:operator pos:line="440" pos:column="67">/</op:operator><lit:literal type="number" pos:line="440" pos:column="68">100</lit:literal><op:operator pos:line="440" pos:column="71">)</op:operator></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="442" pos:column="9">else <comment type="line" pos:line="442" pos:column="14">// soit la fenetre gauche soit la fenetre droit qui est fixee</comment>
			<expr_stmt><expr><name><name pos:line="443" pos:column="25">_rect</name><op:operator pos:line="443" pos:column="30">.</op:operator><name pos:line="443" pos:column="31">left</name></name> <op:operator pos:line="443" pos:column="36">=</op:operator> <call><name pos:line="443" pos:column="38">getSplitterFixPosX</name><argument_list pos:line="443" pos:column="56">()</argument_list></call></expr>;</expr_stmt></else></if>
        
	}</block></else></if>
	<expr_stmt><expr><call><name><op:operator pos:line="446" pos:column="9">::</op:operator><name pos:line="446" pos:column="11">MoveWindow</name></name><argument_list pos:line="446" pos:column="21">(<argument><expr><name pos:line="446" pos:column="22">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="30">_rect</name><op:operator pos:line="446" pos:column="35">.</op:operator><name pos:line="446" pos:column="36">left</name></name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="42">_rect</name><op:operator pos:line="446" pos:column="47">.</op:operator><name pos:line="446" pos:column="48">top</name></name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="53">_rect</name><op:operator pos:line="446" pos:column="58">.</op:operator><name pos:line="446" pos:column="59">right</name></name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="66">_rect</name><op:operator pos:line="446" pos:column="71">.</op:operator><name pos:line="446" pos:column="72">bottom</name></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="80">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="447" pos:column="9">::</op:operator><name pos:line="447" pos:column="11">SendMessage</name></name><argument_list pos:line="447" pos:column="22">(<argument><expr><name pos:line="447" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="447" pos:column="33">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="54">_rect</name><op:operator pos:line="447" pos:column="59">.</op:operator><name pos:line="447" pos:column="60">left</name></name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="66">_rect</name><op:operator pos:line="447" pos:column="71">.</op:operator><name pos:line="447" pos:column="72">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="449" pos:column="9">RECT</name></type> <name pos:line="449" pos:column="14">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="450" pos:column="9">getClientRect</name><argument_list pos:line="450" pos:column="22">(<argument><expr><name pos:line="450" pos:column="23">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
	<expr_stmt><expr><name><name pos:line="451" pos:column="9">_clickZone2BR</name><op:operator pos:line="451" pos:column="22">.</op:operator><name pos:line="451" pos:column="23">right</name></name> <op:operator pos:line="451" pos:column="29">=</op:operator> <call><name pos:line="451" pos:column="31">getClickZone</name><argument_list pos:line="451" pos:column="43">(<argument><expr><name pos:line="451" pos:column="44">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="452" pos:column="9">_clickZone2BR</name><op:operator pos:line="452" pos:column="22">.</op:operator><name pos:line="452" pos:column="23">bottom</name></name> <op:operator pos:line="452" pos:column="30">=</op:operator> <call><name pos:line="452" pos:column="32">getClickZone</name><argument_list pos:line="452" pos:column="44">(<argument><expr><name pos:line="452" pos:column="45">HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="453" pos:column="9">_clickZone2BR</name><op:operator pos:line="453" pos:column="22">.</op:operator><name pos:line="453" pos:column="23">left</name></name> <op:operator pos:line="453" pos:column="28">=</op:operator> <name><name pos:line="453" pos:column="30">rc</name><op:operator pos:line="453" pos:column="32">.</op:operator><name pos:line="453" pos:column="33">right</name></name> <op:operator pos:line="453" pos:column="39">-</op:operator> <name><name pos:line="453" pos:column="41">_clickZone2BR</name><op:operator pos:line="453" pos:column="54">.</op:operator><name pos:line="453" pos:column="55">right</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="454" pos:column="9">_clickZone2BR</name><op:operator pos:line="454" pos:column="22">.</op:operator><name pos:line="454" pos:column="23">top</name></name> <op:operator pos:line="454" pos:column="27">=</op:operator> <name><name pos:line="454" pos:column="29">rc</name><op:operator pos:line="454" pos:column="31">.</op:operator><name pos:line="454" pos:column="32">bottom</name></name> <op:operator pos:line="454" pos:column="39">-</op:operator> <name><name pos:line="454" pos:column="41">_clickZone2BR</name><op:operator pos:line="454" pos:column="54">.</op:operator><name pos:line="454" pos:column="55">bottom</name></name></expr>;</expr_stmt>


	<comment type="line" pos:line="457" pos:column="9">//force the window to repaint, to make sure the splitter is visible</comment>
	<comment type="line" pos:line="458" pos:column="9">// in the new position.</comment>
	<expr_stmt><expr><call><name pos:line="459" pos:column="9">redraw</name><argument_list pos:line="459" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="462" pos:column="1">void</name></type> <name><name pos:line="462" pos:column="6">Splitter</name><op:operator pos:line="462" pos:column="14">::</op:operator><name pos:line="462" pos:column="16">gotoTopLeft</name></name><parameter_list pos:line="462" pos:column="27">()</parameter_list> 
<block pos:line="463" pos:column="1">{
	<if pos:line="464" pos:column="9">if <condition pos:line="464" pos:column="12">(<expr><op:operator pos:line="464" pos:column="13">(</op:operator><name pos:line="464" pos:column="14">_dwFlags</name> <op:operator pos:line="464" pos:column="23">&amp;</op:operator> <name pos:line="464" pos:column="25">SV_ENABLELDBLCLK</name><op:operator pos:line="464" pos:column="41">)</op:operator> <op:operator pos:line="464" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="464" pos:column="46">(</op:operator><op:operator pos:line="464" pos:column="47">!</op:operator><name pos:line="464" pos:column="48">_isFixed</name><op:operator pos:line="464" pos:column="56">)</op:operator> <op:operator pos:line="464" pos:column="58">&amp;&amp;</op:operator> <op:operator pos:line="464" pos:column="61">(</op:operator><name pos:line="464" pos:column="62">_splitPercent</name> <op:operator pos:line="464" pos:column="76">&gt;</op:operator> <lit:literal type="number" pos:line="464" pos:column="78">1</lit:literal><op:operator pos:line="464" pos:column="79">)</op:operator></expr>)</condition><then pos:line="464" pos:column="81">
	<block pos:line="465" pos:column="9">{
		<if pos:line="466" pos:column="17">if <condition pos:line="466" pos:column="20">(<expr><name pos:line="466" pos:column="21">_dwFlags</name> <op:operator pos:line="466" pos:column="30">&amp;</op:operator> <name pos:line="466" pos:column="32">SV_HORIZONTAL</name></expr>)</condition><then pos:line="466" pos:column="46">
			<expr_stmt><expr><name><name pos:line="467" pos:column="25">_rect</name><op:operator pos:line="467" pos:column="30">.</op:operator><name pos:line="467" pos:column="31">top</name></name>   <op:operator pos:line="467" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="467" pos:column="39">1</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="468" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="469" pos:column="25">_rect</name><op:operator pos:line="469" pos:column="30">.</op:operator><name pos:line="469" pos:column="31">left</name></name>   <op:operator pos:line="469" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="469" pos:column="40">1</lit:literal></expr>;</expr_stmt></else></if>
		<expr_stmt><expr><name pos:line="470" pos:column="17">_splitPercent</name> <op:operator pos:line="470" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="470" pos:column="33">1</lit:literal></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><op:operator pos:line="472" pos:column="17">::</op:operator><name pos:line="472" pos:column="19">SendMessage</name></name><argument_list pos:line="472" pos:column="30">(<argument><expr><name pos:line="472" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="472" pos:column="41">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="472" pos:column="62">_rect</name><op:operator pos:line="472" pos:column="67">.</op:operator><name pos:line="472" pos:column="68">left</name></name></expr></argument>, <argument><expr><name><name pos:line="472" pos:column="74">_rect</name><op:operator pos:line="472" pos:column="79">.</op:operator><name pos:line="472" pos:column="80">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="473" pos:column="17">::</op:operator><name pos:line="473" pos:column="19">MoveWindow</name></name><argument_list pos:line="473" pos:column="29">(<argument><expr><name pos:line="473" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="473" pos:column="38">_rect</name><op:operator pos:line="473" pos:column="43">.</op:operator><name pos:line="473" pos:column="44">left</name></name></expr></argument>, <argument><expr><name><name pos:line="473" pos:column="50">_rect</name><op:operator pos:line="473" pos:column="55">.</op:operator><name pos:line="473" pos:column="56">top</name></name></expr></argument>, <argument><expr><name><name pos:line="473" pos:column="61">_rect</name><op:operator pos:line="473" pos:column="66">.</op:operator><name pos:line="473" pos:column="67">right</name></name></expr></argument>, <argument><expr><name><name pos:line="473" pos:column="74">_rect</name><op:operator pos:line="473" pos:column="79">.</op:operator><name pos:line="473" pos:column="80">bottom</name></name></expr></argument>, <argument><expr><name pos:line="473" pos:column="88">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="474" pos:column="17">redraw</name><argument_list pos:line="474" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="478" pos:column="1">void</name></type> <name><name pos:line="478" pos:column="6">Splitter</name><op:operator pos:line="478" pos:column="14">::</op:operator><name pos:line="478" pos:column="16">gotoRightBouuom</name></name><parameter_list pos:line="478" pos:column="31">()</parameter_list> 
<block pos:line="479" pos:column="1">{
	<if pos:line="480" pos:column="9">if <condition pos:line="480" pos:column="12">(<expr><op:operator pos:line="480" pos:column="13">(</op:operator><name pos:line="480" pos:column="14">_dwFlags</name> <op:operator pos:line="480" pos:column="23">&amp;</op:operator> <name pos:line="480" pos:column="25">SV_ENABLERDBLCLK</name><op:operator pos:line="480" pos:column="41">)</op:operator> <op:operator pos:line="480" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="480" pos:column="46">(</op:operator><op:operator pos:line="480" pos:column="47">!</op:operator><name pos:line="480" pos:column="48">_isFixed</name><op:operator pos:line="480" pos:column="56">)</op:operator> <op:operator pos:line="480" pos:column="58">&amp;&amp;</op:operator> <op:operator pos:line="480" pos:column="61">(</op:operator><name pos:line="480" pos:column="62">_splitPercent</name> <op:operator pos:line="480" pos:column="76">&lt;</op:operator> <lit:literal type="number" pos:line="480" pos:column="78">99</lit:literal><op:operator pos:line="480" pos:column="80">)</op:operator></expr>)</condition><then pos:line="480" pos:column="82">
	<block pos:line="481" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="482" pos:column="17">RECT</name></type> <name pos:line="482" pos:column="22">rt</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="483" pos:column="17">GetClientRect</name><argument_list pos:line="483" pos:column="30">(<argument><expr><name pos:line="483" pos:column="31">_hParent</name></expr></argument>,<argument><expr><op:operator pos:line="483" pos:column="40">&amp;</op:operator><name pos:line="483" pos:column="41">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="485" pos:column="17">if <condition pos:line="485" pos:column="20">(<expr><name pos:line="485" pos:column="21">_dwFlags</name> <op:operator pos:line="485" pos:column="30">&amp;</op:operator> <name pos:line="485" pos:column="32">SV_HORIZONTAL</name></expr>)</condition><then pos:line="485" pos:column="46">
			<expr_stmt><expr><name><name pos:line="486" pos:column="25">_rect</name><op:operator pos:line="486" pos:column="30">.</op:operator><name pos:line="486" pos:column="31">top</name></name>   <op:operator pos:line="486" pos:column="37">=</op:operator> <name><name pos:line="486" pos:column="39">rt</name><op:operator pos:line="486" pos:column="41">.</op:operator><name pos:line="486" pos:column="42">bottom</name></name> <op:operator pos:line="486" pos:column="49">-</op:operator> <name pos:line="486" pos:column="51">_spiltterSize</name></expr>;</expr_stmt></then>
		<else pos:line="487" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="488" pos:column="25">_rect</name><op:operator pos:line="488" pos:column="30">.</op:operator><name pos:line="488" pos:column="31">left</name></name>   <op:operator pos:line="488" pos:column="38">=</op:operator> <name><name pos:line="488" pos:column="40">rt</name><op:operator pos:line="488" pos:column="42">.</op:operator><name pos:line="488" pos:column="43">right</name></name> <op:operator pos:line="488" pos:column="49">-</op:operator> <name pos:line="488" pos:column="51">_spiltterSize</name></expr>;</expr_stmt></else></if>

		<expr_stmt><expr><name pos:line="490" pos:column="17">_splitPercent</name> <op:operator pos:line="490" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="490" pos:column="33">99</lit:literal></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><op:operator pos:line="492" pos:column="17">::</op:operator><name pos:line="492" pos:column="19">SendMessage</name></name><argument_list pos:line="492" pos:column="30">(<argument><expr><name pos:line="492" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="41">WM_RESIZE_CONTAINER</name></expr></argument>, <argument><expr><name><name pos:line="492" pos:column="62">_rect</name><op:operator pos:line="492" pos:column="67">.</op:operator><name pos:line="492" pos:column="68">left</name></name></expr></argument>, <argument><expr><name><name pos:line="492" pos:column="74">_rect</name><op:operator pos:line="492" pos:column="79">.</op:operator><name pos:line="492" pos:column="80">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="493" pos:column="17">::</op:operator><name pos:line="493" pos:column="19">MoveWindow</name></name><argument_list pos:line="493" pos:column="29">(<argument><expr><name pos:line="493" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="38">_rect</name><op:operator pos:line="493" pos:column="43">.</op:operator><name pos:line="493" pos:column="44">left</name></name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="50">_rect</name><op:operator pos:line="493" pos:column="55">.</op:operator><name pos:line="493" pos:column="56">top</name></name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="61">_rect</name><op:operator pos:line="493" pos:column="66">.</op:operator><name pos:line="493" pos:column="67">right</name></name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="74">_rect</name><op:operator pos:line="493" pos:column="79">.</op:operator><name pos:line="493" pos:column="80">bottom</name></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="88">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="494" pos:column="17">redraw</name><argument_list pos:line="494" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="498" pos:column="1">void</name></type> <name><name pos:line="498" pos:column="6">Splitter</name><op:operator pos:line="498" pos:column="14">::</op:operator><name pos:line="498" pos:column="16">drawSplitter</name></name><parameter_list pos:line="498" pos:column="28">()</parameter_list> 
<block pos:line="499" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="500" pos:column="9">PAINTSTRUCT</name></type> <name pos:line="500" pos:column="21">ps</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="501" pos:column="9">RECT</name></type> <name pos:line="501" pos:column="14">rc</name></decl><op:operator pos:line="501" pos:column="16">,</op:operator> <decl><type ref="prev"/><name pos:line="501" pos:column="18">rcToDraw1</name></decl><op:operator pos:line="501" pos:column="27">,</op:operator> <decl><type ref="prev"/><name pos:line="501" pos:column="29">rcToDraw2</name></decl><op:operator pos:line="501" pos:column="38">,</op:operator> <decl><type ref="prev"/><name pos:line="501" pos:column="40">TLrc</name></decl><op:operator pos:line="501" pos:column="44">,</op:operator> <decl><type ref="prev"/><name pos:line="501" pos:column="46">BRrc</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="503" pos:column="9">HDC</name></type> <name pos:line="503" pos:column="13">hdc</name> <init pos:line="503" pos:column="17">= <expr><call><name><op:operator pos:line="503" pos:column="19">::</op:operator><name pos:line="503" pos:column="21">BeginPaint</name></name><argument_list pos:line="503" pos:column="31">(<argument><expr><name pos:line="503" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="503" pos:column="40">&amp;</op:operator><name pos:line="503" pos:column="41">ps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="504" pos:column="9">getClientRect</name><argument_list pos:line="504" pos:column="22">(<argument><expr><name pos:line="504" pos:column="23">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="506" pos:column="9">if <condition pos:line="506" pos:column="12">(<expr><op:operator pos:line="506" pos:column="13">(</op:operator><name pos:line="506" pos:column="14">_spiltterSize</name> <op:operator pos:line="506" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="506" pos:column="31">4</lit:literal><op:operator pos:line="506" pos:column="32">)</op:operator> <op:operator pos:line="506" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="506" pos:column="37">(</op:operator><name pos:line="506" pos:column="38">_dwFlags</name> <op:operator pos:line="506" pos:column="47">&amp;</op:operator> <name pos:line="506" pos:column="49">SV_RESIZEWTHPERCNT</name><op:operator pos:line="506" pos:column="67">)</op:operator></expr>)</condition><then pos:line="506" pos:column="69">
	<block pos:line="507" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="508" pos:column="17">adjustZoneToDraw</name><argument_list pos:line="508" pos:column="33">(<argument><expr><name pos:line="508" pos:column="34">TLrc</name></expr></argument>, <argument><expr><name pos:line="508" pos:column="40">TOP_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="509" pos:column="17">adjustZoneToDraw</name><argument_list pos:line="509" pos:column="33">(<argument><expr><name pos:line="509" pos:column="34">BRrc</name></expr></argument>, <argument><expr><name pos:line="509" pos:column="40">BOTTOM_RIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="510" pos:column="17">paintArrow</name><argument_list pos:line="510" pos:column="27">(<argument><expr><name pos:line="510" pos:column="28">hdc</name></expr></argument>, <argument><expr><name pos:line="510" pos:column="33">TLrc</name></expr></argument>, <argument><expr><call><name pos:line="510" pos:column="39">isVertical</name><argument_list pos:line="510" pos:column="49">()</argument_list></call><op:operator pos:line="510" pos:column="51">?</op:operator><name pos:line="510" pos:column="52">ARROW_LEFT</name><op:operator pos:line="510" pos:column="62">:</op:operator><name pos:line="510" pos:column="63">ARROW_UP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="513" pos:column="9">if <condition pos:line="513" pos:column="12">(<expr><call><name pos:line="513" pos:column="13">isVertical</name><argument_list pos:line="513" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="513" pos:column="26">
	<block pos:line="514" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="515" pos:column="17">rcToDraw2</name><op:operator pos:line="515" pos:column="26">.</op:operator><name pos:line="515" pos:column="27">top</name></name> <op:operator pos:line="515" pos:column="31">=</op:operator> <op:operator pos:line="515" pos:column="33">(</op:operator><name pos:line="515" pos:column="34">_dwFlags</name> <op:operator pos:line="515" pos:column="43">&amp;</op:operator> <name pos:line="515" pos:column="45">SV_RESIZEWTHPERCNT</name><op:operator pos:line="515" pos:column="63">)</op:operator><op:operator pos:line="515" pos:column="64">?</op:operator><name><name pos:line="515" pos:column="65">_clickZone2TL</name><op:operator pos:line="515" pos:column="78">.</op:operator><name pos:line="515" pos:column="79">bottom</name></name><op:operator pos:line="515" pos:column="85">:</op:operator><lit:literal type="number" pos:line="515" pos:column="86">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="516" pos:column="17">rcToDraw2</name><op:operator pos:line="516" pos:column="26">.</op:operator><name pos:line="516" pos:column="27">bottom</name></name> <op:operator pos:line="516" pos:column="34">=</op:operator> <name><name pos:line="516" pos:column="36">rcToDraw2</name><op:operator pos:line="516" pos:column="45">.</op:operator><name pos:line="516" pos:column="46">top</name></name> <op:operator pos:line="516" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="516" pos:column="52">2</lit:literal></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="518" pos:column="17">rcToDraw1</name><op:operator pos:line="518" pos:column="26">.</op:operator><name pos:line="518" pos:column="27">top</name></name> <op:operator pos:line="518" pos:column="31">=</op:operator> <name><name pos:line="518" pos:column="33">rcToDraw2</name><op:operator pos:line="518" pos:column="42">.</op:operator><name pos:line="518" pos:column="43">top</name></name> <op:operator pos:line="518" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="518" pos:column="49">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="519" pos:column="17">rcToDraw1</name><op:operator pos:line="519" pos:column="26">.</op:operator><name pos:line="519" pos:column="27">bottom</name></name> <op:operator pos:line="519" pos:column="34">=</op:operator> <name><name pos:line="519" pos:column="36">rcToDraw1</name><op:operator pos:line="519" pos:column="45">.</op:operator><name pos:line="519" pos:column="46">top</name></name> <op:operator pos:line="519" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="519" pos:column="52">2</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="521" pos:column="9">else
	<block pos:line="522" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="523" pos:column="17">rcToDraw2</name><op:operator pos:line="523" pos:column="26">.</op:operator><name pos:line="523" pos:column="27">top</name></name> <op:operator pos:line="523" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="523" pos:column="33">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="524" pos:column="17">rcToDraw2</name><op:operator pos:line="524" pos:column="26">.</op:operator><name pos:line="524" pos:column="27">bottom</name></name> <op:operator pos:line="524" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="524" pos:column="36">3</lit:literal></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="526" pos:column="17">rcToDraw1</name><op:operator pos:line="526" pos:column="26">.</op:operator><name pos:line="526" pos:column="27">top</name></name> <op:operator pos:line="526" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="526" pos:column="33">2</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="527" pos:column="17">rcToDraw1</name><op:operator pos:line="527" pos:column="26">.</op:operator><name pos:line="527" pos:column="27">bottom</name></name> <op:operator pos:line="527" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="527" pos:column="36">4</lit:literal></expr>;</expr_stmt>
	}</block></else></if>

	<decl_stmt><decl><type><name pos:line="530" pos:column="9">int</name></type> <name pos:line="530" pos:column="13">bottom</name> <init pos:line="530" pos:column="20">= <expr><lit:literal type="number" pos:line="530" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="531" pos:column="9">if <condition pos:line="531" pos:column="12">(<expr><name pos:line="531" pos:column="13">_dwFlags</name> <op:operator pos:line="531" pos:column="22">&amp;</op:operator> <name pos:line="531" pos:column="24">SV_RESIZEWTHPERCNT</name></expr>)</condition><then pos:line="531" pos:column="43">
		<expr_stmt><expr><name pos:line="532" pos:column="17">bottom</name> <op:operator pos:line="532" pos:column="24">=</op:operator> <op:operator pos:line="532" pos:column="26">(</op:operator><call><name pos:line="532" pos:column="27">isVertical</name><argument_list pos:line="532" pos:column="37">()</argument_list></call> <op:operator pos:line="532" pos:column="40">?</op:operator> <name><name pos:line="532" pos:column="42">rc</name><op:operator pos:line="532" pos:column="44">.</op:operator><name pos:line="532" pos:column="45">bottom</name></name> <op:operator pos:line="532" pos:column="52">-</op:operator> <name><name pos:line="532" pos:column="54">_clickZone2BR</name><op:operator pos:line="532" pos:column="67">.</op:operator><name pos:line="532" pos:column="68">bottom</name></name> <op:operator pos:line="532" pos:column="75">:</op:operator> <name><name pos:line="532" pos:column="77">rc</name><op:operator pos:line="532" pos:column="79">.</op:operator><name pos:line="532" pos:column="80">bottom</name></name><op:operator pos:line="532" pos:column="86">)</op:operator></expr>;</expr_stmt></then>
	<else pos:line="533" pos:column="9">else
		<expr_stmt><expr><name pos:line="534" pos:column="17">bottom</name> <op:operator pos:line="534" pos:column="24">=</op:operator> <name><name pos:line="534" pos:column="26">rc</name><op:operator pos:line="534" pos:column="28">.</op:operator><name pos:line="534" pos:column="29">bottom</name></name></expr>;</expr_stmt></else></if>

	<while pos:line="536" pos:column="9">while <condition pos:line="536" pos:column="15">(<expr><name><name pos:line="536" pos:column="16">rcToDraw1</name><op:operator pos:line="536" pos:column="25">.</op:operator><name pos:line="536" pos:column="26">bottom</name></name> <op:operator pos:line="536" pos:column="33">&lt;=</op:operator> <name pos:line="536" pos:column="36">bottom</name></expr>)</condition>
	<block pos:line="537" pos:column="9">{
		<if pos:line="538" pos:column="17">if <condition pos:line="538" pos:column="20">(<expr><call><name pos:line="538" pos:column="21">isVertical</name><argument_list pos:line="538" pos:column="31">()</argument_list></call></expr>)</condition><then pos:line="538" pos:column="34">
		<block pos:line="539" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="540" pos:column="25">rcToDraw2</name><op:operator pos:line="540" pos:column="34">.</op:operator><name pos:line="540" pos:column="35">left</name></name> <op:operator pos:line="540" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="540" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="541" pos:column="25">rcToDraw2</name><op:operator pos:line="541" pos:column="34">.</op:operator><name pos:line="541" pos:column="35">right</name></name> <op:operator pos:line="541" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="541" pos:column="43">3</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="543" pos:column="25">rcToDraw1</name><op:operator pos:line="543" pos:column="34">.</op:operator><name pos:line="543" pos:column="35">left</name></name> <op:operator pos:line="543" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="543" pos:column="42">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="544" pos:column="25">rcToDraw1</name><op:operator pos:line="544" pos:column="34">.</op:operator><name pos:line="544" pos:column="35">right</name></name> <op:operator pos:line="544" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="544" pos:column="43">4</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="546" pos:column="17">else
		<block pos:line="547" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="548" pos:column="25">rcToDraw2</name><op:operator pos:line="548" pos:column="34">.</op:operator><name pos:line="548" pos:column="35">left</name></name> <op:operator pos:line="548" pos:column="40">=</op:operator> <name><name pos:line="548" pos:column="42">_clickZone2TL</name><op:operator pos:line="548" pos:column="55">.</op:operator><name pos:line="548" pos:column="56">right</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="549" pos:column="25">rcToDraw2</name><op:operator pos:line="549" pos:column="34">.</op:operator><name pos:line="549" pos:column="35">right</name></name> <op:operator pos:line="549" pos:column="41">=</op:operator> <name><name pos:line="549" pos:column="43">rcToDraw2</name><op:operator pos:line="549" pos:column="52">.</op:operator><name pos:line="549" pos:column="53">left</name></name> <op:operator pos:line="549" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="549" pos:column="60">2</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="551" pos:column="25">rcToDraw1</name><op:operator pos:line="551" pos:column="34">.</op:operator><name pos:line="551" pos:column="35">left</name></name> <op:operator pos:line="551" pos:column="40">=</op:operator> <name><name pos:line="551" pos:column="42">rcToDraw2</name><op:operator pos:line="551" pos:column="51">.</op:operator><name pos:line="551" pos:column="52">left</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="552" pos:column="25">rcToDraw1</name><op:operator pos:line="552" pos:column="34">.</op:operator><name pos:line="552" pos:column="35">right</name></name> <op:operator pos:line="552" pos:column="41">=</op:operator> <name><name pos:line="552" pos:column="43">rcToDraw1</name><op:operator pos:line="552" pos:column="52">.</op:operator><name pos:line="552" pos:column="53">left</name></name> <op:operator pos:line="552" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="552" pos:column="60">2</lit:literal></expr>;</expr_stmt>
		}</block></else></if>

		<while pos:line="555" pos:column="17">while <condition pos:line="555" pos:column="23">(<expr><name><name pos:line="555" pos:column="24">rcToDraw1</name><op:operator pos:line="555" pos:column="33">.</op:operator><name pos:line="555" pos:column="34">right</name></name> <op:operator pos:line="555" pos:column="40">&lt;=</op:operator> <op:operator pos:line="555" pos:column="43">(</op:operator><call><name pos:line="555" pos:column="44">isVertical</name><argument_list pos:line="555" pos:column="54">()</argument_list></call> <op:operator pos:line="555" pos:column="57">?</op:operator> <name><name pos:line="555" pos:column="59">rc</name><op:operator pos:line="555" pos:column="61">.</op:operator><name pos:line="555" pos:column="62">right</name></name> <op:operator pos:line="555" pos:column="68">:</op:operator> <name><name pos:line="555" pos:column="70">rc</name><op:operator pos:line="555" pos:column="72">.</op:operator><name pos:line="555" pos:column="73">right</name></name> <op:operator pos:line="555" pos:column="79">-</op:operator> <name><name pos:line="555" pos:column="81">_clickZone2BR</name><op:operator pos:line="555" pos:column="94">.</op:operator><name pos:line="555" pos:column="95">right</name></name><op:operator pos:line="555" pos:column="100">)</op:operator></expr>)</condition>
		<block pos:line="556" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="557" pos:column="25">::</op:operator><name pos:line="557" pos:column="27">FillRect</name></name><argument_list pos:line="557" pos:column="35">(<argument><expr><name pos:line="557" pos:column="36">hdc</name></expr></argument>, <argument><expr><op:operator pos:line="557" pos:column="41">&amp;</op:operator><name pos:line="557" pos:column="42">rcToDraw1</name></expr></argument>, <argument><expr><call pos:line="557" pos:column="53">(<name pos:line="557" pos:column="54">HBRUSH</name>)<argument_list pos:line="557" pos:column="61">(<argument><expr><call><name pos:line="557" pos:column="62">RGB</name><argument_list pos:line="557" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="557" pos:column="66">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="557" pos:column="72">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="557" pos:column="78">0xFF</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="558" pos:column="25">::</op:operator><name pos:line="558" pos:column="27">FillRect</name></name><argument_list pos:line="558" pos:column="35">(<argument><expr><name pos:line="558" pos:column="36">hdc</name></expr></argument>, <argument><expr><op:operator pos:line="558" pos:column="41">&amp;</op:operator><name pos:line="558" pos:column="42">rcToDraw2</name></expr></argument>, <argument><expr><call pos:line="558" pos:column="53">(<name pos:line="558" pos:column="54">HBRUSH</name>)<argument_list pos:line="558" pos:column="61">(<argument><expr><name pos:line="558" pos:column="62">COLOR_3DSHADOW</name><op:operator pos:line="558" pos:column="76">+</op:operator><lit:literal type="number" pos:line="558" pos:column="77">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="560" pos:column="25">rcToDraw2</name><op:operator pos:line="560" pos:column="34">.</op:operator><name pos:line="560" pos:column="35">left</name></name> <op:operator pos:line="560" pos:column="40">+=</op:operator> <lit:literal type="number" pos:line="560" pos:column="43">4</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="561" pos:column="25">rcToDraw2</name><op:operator pos:line="561" pos:column="34">.</op:operator><name pos:line="561" pos:column="35">right</name></name> <op:operator pos:line="561" pos:column="41">+=</op:operator> <lit:literal type="number" pos:line="561" pos:column="44">4</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="562" pos:column="25">rcToDraw1</name><op:operator pos:line="562" pos:column="34">.</op:operator><name pos:line="562" pos:column="35">left</name></name> <op:operator pos:line="562" pos:column="40">+=</op:operator> <lit:literal type="number" pos:line="562" pos:column="43">4</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="563" pos:column="25">rcToDraw1</name><op:operator pos:line="563" pos:column="34">.</op:operator><name pos:line="563" pos:column="35">right</name></name> <op:operator pos:line="563" pos:column="41">+=</op:operator> <lit:literal type="number" pos:line="563" pos:column="44">4</lit:literal></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><name><name pos:line="565" pos:column="17">rcToDraw2</name><op:operator pos:line="565" pos:column="26">.</op:operator><name pos:line="565" pos:column="27">top</name></name> <op:operator pos:line="565" pos:column="31">+=</op:operator> <lit:literal type="number" pos:line="565" pos:column="34">4</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="566" pos:column="17">rcToDraw2</name><op:operator pos:line="566" pos:column="26">.</op:operator><name pos:line="566" pos:column="27">bottom</name></name> <op:operator pos:line="566" pos:column="34">+=</op:operator> <lit:literal type="number" pos:line="566" pos:column="37">4</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="567" pos:column="17">rcToDraw1</name><op:operator pos:line="567" pos:column="26">.</op:operator><name pos:line="567" pos:column="27">top</name></name> <op:operator pos:line="567" pos:column="31">+=</op:operator> <lit:literal type="number" pos:line="567" pos:column="34">4</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="568" pos:column="17">rcToDraw1</name><op:operator pos:line="568" pos:column="26">.</op:operator><name pos:line="568" pos:column="27">bottom</name></name> <op:operator pos:line="568" pos:column="34">+=</op:operator> <lit:literal type="number" pos:line="568" pos:column="37">4</lit:literal></expr>;</expr_stmt>
	}</block></while>

	<if pos:line="571" pos:column="9">if <condition pos:line="571" pos:column="12">(<expr><op:operator pos:line="571" pos:column="13">(</op:operator><name pos:line="571" pos:column="14">_spiltterSize</name> <op:operator pos:line="571" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="571" pos:column="31">4</lit:literal><op:operator pos:line="571" pos:column="32">)</op:operator> <op:operator pos:line="571" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="571" pos:column="37">(</op:operator><name pos:line="571" pos:column="38">_dwFlags</name> <op:operator pos:line="571" pos:column="47">&amp;</op:operator> <name pos:line="571" pos:column="49">SV_RESIZEWTHPERCNT</name><op:operator pos:line="571" pos:column="67">)</op:operator></expr>)</condition><then pos:line="571" pos:column="69">
		<expr_stmt><expr><call><name pos:line="572" pos:column="17">paintArrow</name><argument_list pos:line="572" pos:column="27">(<argument><expr><name pos:line="572" pos:column="28">hdc</name></expr></argument>, <argument><expr><name pos:line="572" pos:column="33">BRrc</name></expr></argument>, <argument><expr><call><name pos:line="572" pos:column="39">isVertical</name><argument_list pos:line="572" pos:column="49">()</argument_list></call><op:operator pos:line="572" pos:column="51">?</op:operator><name pos:line="572" pos:column="52">ARROW_RIGHT</name><op:operator pos:line="572" pos:column="63">:</op:operator><name pos:line="572" pos:column="64">ARROW_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="574" pos:column="9">::</op:operator><name pos:line="574" pos:column="11">EndPaint</name></name><argument_list pos:line="574" pos:column="19">(<argument><expr><name pos:line="574" pos:column="20">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="574" pos:column="28">&amp;</op:operator><name pos:line="574" pos:column="29">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="577" pos:column="1">void</name></type> <name><name pos:line="577" pos:column="6">Splitter</name><op:operator pos:line="577" pos:column="14">::</op:operator><name pos:line="577" pos:column="16">rotate</name></name><parameter_list pos:line="577" pos:column="22">()</parameter_list>
<block pos:line="578" pos:column="1">{
	<if pos:line="579" pos:column="9">if <condition pos:line="579" pos:column="12">(<expr><op:operator pos:line="579" pos:column="13">!</op:operator><name pos:line="579" pos:column="14">_isFixed</name></expr>)</condition><then pos:line="579" pos:column="23">
	<block pos:line="580" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="581" pos:column="17">destroy</name><argument_list pos:line="581" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
		<if pos:line="582" pos:column="17">if <condition pos:line="582" pos:column="20">(<expr><name pos:line="582" pos:column="21">_dwFlags</name> <op:operator pos:line="582" pos:column="30">&amp;</op:operator> <name pos:line="582" pos:column="32">SV_HORIZONTAL</name></expr>)</condition><then pos:line="582" pos:column="46">
		<block pos:line="583" pos:column="17">{
			<expr_stmt><expr><name pos:line="584" pos:column="25">_dwFlags</name> <op:operator pos:line="584" pos:column="34">^=</op:operator> <name pos:line="584" pos:column="37">SV_HORIZONTAL</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="585" pos:column="25">_dwFlags</name> <op:operator pos:line="585" pos:column="34">|=</op:operator> <name pos:line="585" pos:column="37">SV_VERTICAL</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="587" pos:column="17">else <comment type="line" pos:line="587" pos:column="22">//SV_VERTICAL</comment>
		<block pos:line="588" pos:column="17">{
			<expr_stmt><expr><name pos:line="589" pos:column="25">_dwFlags</name> <op:operator pos:line="589" pos:column="34">^=</op:operator> <name pos:line="589" pos:column="37">SV_VERTICAL</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="590" pos:column="25">_dwFlags</name> <op:operator pos:line="590" pos:column="34">|=</op:operator> <name pos:line="590" pos:column="37">SV_HORIZONTAL</name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="592" pos:column="17">init</name><argument_list pos:line="592" pos:column="21">(<argument><expr><name pos:line="592" pos:column="22">_hInst</name></expr></argument>, <argument><expr><name pos:line="592" pos:column="30">_hParent</name></expr></argument>, <argument><expr><name pos:line="592" pos:column="40">_spiltterSize</name></expr></argument>, <argument><expr><name pos:line="592" pos:column="55">_splitPercent</name></expr></argument>, <argument><expr><name pos:line="592" pos:column="70">_dwFlags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="596" pos:column="1">void</name></type> <name><name pos:line="596" pos:column="6">Splitter</name><op:operator pos:line="596" pos:column="14">::</op:operator><name pos:line="596" pos:column="16">paintArrow</name></name><parameter_list pos:line="596" pos:column="26">(<param><decl><type><name pos:line="596" pos:column="27">HDC</name></type> <name pos:line="596" pos:column="31">hdc</name></decl></param>, <param><decl><type><specifier pos:line="596" pos:column="36">const</specifier> <name pos:line="596" pos:column="42">RECT</name> <type:modifier pos:line="596" pos:column="47">&amp;</type:modifier></type><name pos:line="596" pos:column="48">rect</name></decl></param>, <param><decl><type><name pos:line="596" pos:column="54">Arrow</name></type> <name pos:line="596" pos:column="60">arrowDir</name></decl></param>)</parameter_list>
<block pos:line="597" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="598" pos:column="9">RECT</name></type> <name pos:line="598" pos:column="14">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="599" pos:column="9">rc</name><op:operator pos:line="599" pos:column="11">.</op:operator><name pos:line="599" pos:column="12">left</name></name> <op:operator pos:line="599" pos:column="17">=</op:operator> <name><name pos:line="599" pos:column="19">rect</name><op:operator pos:line="599" pos:column="23">.</op:operator><name pos:line="599" pos:column="24">left</name></name></expr>;</expr_stmt> <expr_stmt><expr><name><name pos:line="599" pos:column="30">rc</name><op:operator pos:line="599" pos:column="32">.</op:operator><name pos:line="599" pos:column="33">top</name></name> <op:operator pos:line="599" pos:column="37">=</op:operator> <name><name pos:line="599" pos:column="39">rect</name><op:operator pos:line="599" pos:column="43">.</op:operator><name pos:line="599" pos:column="44">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="600" pos:column="9">rc</name><op:operator pos:line="600" pos:column="11">.</op:operator><name pos:line="600" pos:column="12">right</name></name> <op:operator pos:line="600" pos:column="18">=</op:operator> <name><name pos:line="600" pos:column="20">rect</name><op:operator pos:line="600" pos:column="24">.</op:operator><name pos:line="600" pos:column="25">right</name></name></expr>;</expr_stmt> <expr_stmt><expr><name><name pos:line="600" pos:column="32">rc</name><op:operator pos:line="600" pos:column="34">.</op:operator><name pos:line="600" pos:column="35">bottom</name></name> <op:operator pos:line="600" pos:column="42">=</op:operator> <name><name pos:line="600" pos:column="44">rect</name><op:operator pos:line="600" pos:column="48">.</op:operator><name pos:line="600" pos:column="49">bottom</name></name></expr>;</expr_stmt>
	<if pos:line="601" pos:column="9">if <condition pos:line="601" pos:column="12">(<expr><name pos:line="601" pos:column="13">arrowDir</name> <op:operator pos:line="601" pos:column="22">==</op:operator> <name pos:line="601" pos:column="25">ARROW_LEFT</name></expr>)</condition><then pos:line="601" pos:column="36">
	<block pos:line="602" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="603" pos:column="17">int</name></type> <name pos:line="603" pos:column="21">x</name> <init pos:line="603" pos:column="23">= <expr><name><name pos:line="603" pos:column="25">rc</name><op:operator pos:line="603" pos:column="27">.</op:operator><name pos:line="603" pos:column="28">right</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="604" pos:column="17">int</name></type> <name pos:line="604" pos:column="21">y</name> <init pos:line="604" pos:column="23">= <expr><name><name pos:line="604" pos:column="25">rc</name><op:operator pos:line="604" pos:column="27">.</op:operator><name pos:line="604" pos:column="28">top</name></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="606" pos:column="17">//::MoveToEx(hdc, x, y, NULL);</comment>
		<for pos:line="607" pos:column="17">for (<init pos:line="607" pos:column="22">;</init> <condition><expr><op:operator pos:line="607" pos:column="24">(</op:operator><name pos:line="607" pos:column="25">x</name> <op:operator pos:line="607" pos:column="27">&gt;</op:operator> <name><name pos:line="607" pos:column="29">rc</name><op:operator pos:line="607" pos:column="31">.</op:operator><name pos:line="607" pos:column="32">left</name></name><op:operator pos:line="607" pos:column="36">)</op:operator> <op:operator pos:line="607" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="607" pos:column="41">(</op:operator><name pos:line="607" pos:column="42">y</name> <op:operator pos:line="607" pos:column="44">!=</op:operator> <name><name pos:line="607" pos:column="47">rc</name><op:operator pos:line="607" pos:column="49">.</op:operator><name pos:line="607" pos:column="50">bottom</name></name><op:operator pos:line="607" pos:column="56">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="607" pos:column="60">x</name><op:operator pos:line="607" pos:column="61">--</op:operator></expr></incr>)
		<block pos:line="608" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="609" pos:column="25">::</op:operator><name pos:line="609" pos:column="27">MoveToEx</name></name><argument_list pos:line="609" pos:column="35">(<argument><expr><name pos:line="609" pos:column="36">hdc</name></expr></argument>, <argument><expr><name pos:line="609" pos:column="41">x</name></expr></argument>, <argument><expr><name pos:line="609" pos:column="44">y</name><op:operator pos:line="609" pos:column="45">++</op:operator></expr></argument>, <argument><expr><name pos:line="609" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="610" pos:column="25">::</op:operator><name pos:line="610" pos:column="27">LineTo</name></name><argument_list pos:line="610" pos:column="33">(<argument><expr><name pos:line="610" pos:column="34">hdc</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="39">x</name></expr></argument>, <argument><expr><name><name pos:line="610" pos:column="42">rc</name><op:operator pos:line="610" pos:column="44">.</op:operator><name pos:line="610" pos:column="45">bottom</name></name><op:operator pos:line="610" pos:column="51">--</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then>
	<else pos:line="613" pos:column="9">else <if pos:line="613" pos:column="14">if <condition pos:line="613" pos:column="17">(<expr><name pos:line="613" pos:column="18">arrowDir</name> <op:operator pos:line="613" pos:column="27">==</op:operator> <name pos:line="613" pos:column="30">ARROW_RIGHT</name></expr>)</condition><then pos:line="613" pos:column="42">
	<block pos:line="614" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="615" pos:column="17">int</name></type> <name pos:line="615" pos:column="21">x</name> <init pos:line="615" pos:column="23">= <expr><name><name pos:line="615" pos:column="25">rc</name><op:operator pos:line="615" pos:column="27">.</op:operator><name pos:line="615" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="616" pos:column="17">int</name></type> <name pos:line="616" pos:column="21">y</name> <init pos:line="616" pos:column="23">= <expr><name><name pos:line="616" pos:column="25">rc</name><op:operator pos:line="616" pos:column="27">.</op:operator><name pos:line="616" pos:column="28">top</name></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="618" pos:column="17">//::MoveToEx(hdc, x, y, NULL);</comment>
		<for pos:line="619" pos:column="17">for (<init pos:line="619" pos:column="22">;</init> <condition><expr><op:operator pos:line="619" pos:column="24">(</op:operator><name pos:line="619" pos:column="25">x</name> <op:operator pos:line="619" pos:column="27">&lt;</op:operator> <name><name pos:line="619" pos:column="29">rc</name><op:operator pos:line="619" pos:column="31">.</op:operator><name pos:line="619" pos:column="32">right</name></name><op:operator pos:line="619" pos:column="37">)</op:operator> <op:operator pos:line="619" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="619" pos:column="42">(</op:operator><name pos:line="619" pos:column="43">y</name> <op:operator pos:line="619" pos:column="45">!=</op:operator> <name><name pos:line="619" pos:column="48">rc</name><op:operator pos:line="619" pos:column="50">.</op:operator><name pos:line="619" pos:column="51">bottom</name></name><op:operator pos:line="619" pos:column="57">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="619" pos:column="61">x</name><op:operator pos:line="619" pos:column="62">++</op:operator></expr></incr>)
		<block pos:line="620" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="621" pos:column="25">::</op:operator><name pos:line="621" pos:column="27">MoveToEx</name></name><argument_list pos:line="621" pos:column="35">(<argument><expr><name pos:line="621" pos:column="36">hdc</name></expr></argument>, <argument><expr><name pos:line="621" pos:column="41">x</name></expr></argument>, <argument><expr><name pos:line="621" pos:column="44">y</name><op:operator pos:line="621" pos:column="45">++</op:operator></expr></argument>, <argument><expr><name pos:line="621" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="622" pos:column="25">::</op:operator><name pos:line="622" pos:column="27">LineTo</name></name><argument_list pos:line="622" pos:column="33">(<argument><expr><name pos:line="622" pos:column="34">hdc</name></expr></argument>, <argument><expr><name pos:line="622" pos:column="39">x</name></expr></argument>, <argument><expr><name><name pos:line="622" pos:column="42">rc</name><op:operator pos:line="622" pos:column="44">.</op:operator><name pos:line="622" pos:column="45">bottom</name></name><op:operator pos:line="622" pos:column="51">--</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then>
	<else pos:line="625" pos:column="9">else <if pos:line="625" pos:column="14">if <condition pos:line="625" pos:column="17">(<expr><name pos:line="625" pos:column="18">arrowDir</name> <op:operator pos:line="625" pos:column="27">==</op:operator> <name pos:line="625" pos:column="30">ARROW_UP</name></expr>)</condition><then pos:line="625" pos:column="39">
	<block pos:line="626" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="627" pos:column="17">int</name></type> <name pos:line="627" pos:column="21">x</name> <init pos:line="627" pos:column="23">= <expr><name><name pos:line="627" pos:column="25">rc</name><op:operator pos:line="627" pos:column="27">.</op:operator><name pos:line="627" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="628" pos:column="17">int</name></type> <name pos:line="628" pos:column="21">y</name> <init pos:line="628" pos:column="23">= <expr><name><name pos:line="628" pos:column="25">rc</name><op:operator pos:line="628" pos:column="27">.</op:operator><name pos:line="628" pos:column="28">bottom</name></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="630" pos:column="17">//::MoveToEx(hdc, x, y, NULL);</comment>
		<for pos:line="631" pos:column="17">for (<init pos:line="631" pos:column="22">;</init> <condition><expr><op:operator pos:line="631" pos:column="24">(</op:operator><name pos:line="631" pos:column="25">y</name> <op:operator pos:line="631" pos:column="27">&gt;</op:operator> <name><name pos:line="631" pos:column="29">rc</name><op:operator pos:line="631" pos:column="31">.</op:operator><name pos:line="631" pos:column="32">top</name></name><op:operator pos:line="631" pos:column="35">)</op:operator> <op:operator pos:line="631" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="631" pos:column="40">(</op:operator><name pos:line="631" pos:column="41">x</name> <op:operator pos:line="631" pos:column="43">!=</op:operator> <name><name pos:line="631" pos:column="46">rc</name><op:operator pos:line="631" pos:column="48">.</op:operator><name pos:line="631" pos:column="49">right</name></name><op:operator pos:line="631" pos:column="54">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="631" pos:column="58">y</name><op:operator pos:line="631" pos:column="59">--</op:operator></expr></incr>)
		<block pos:line="632" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="633" pos:column="25">::</op:operator><name pos:line="633" pos:column="27">MoveToEx</name></name><argument_list pos:line="633" pos:column="35">(<argument><expr><name pos:line="633" pos:column="36">hdc</name></expr></argument>, <argument><expr><name pos:line="633" pos:column="41">x</name><op:operator pos:line="633" pos:column="42">++</op:operator></expr></argument>, <argument><expr><name pos:line="633" pos:column="46">y</name></expr></argument>, <argument><expr><name pos:line="633" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="634" pos:column="25">::</op:operator><name pos:line="634" pos:column="27">LineTo</name></name><argument_list pos:line="634" pos:column="33">(<argument><expr><name pos:line="634" pos:column="34">hdc</name></expr></argument>, <argument><expr><name><name pos:line="634" pos:column="39">rc</name><op:operator pos:line="634" pos:column="41">.</op:operator><name pos:line="634" pos:column="42">right</name></name><op:operator pos:line="634" pos:column="47">--</op:operator></expr></argument>, <argument><expr><name pos:line="634" pos:column="51">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then>
	<else pos:line="637" pos:column="9">else <if pos:line="637" pos:column="14">if <condition pos:line="637" pos:column="17">(<expr><name pos:line="637" pos:column="18">arrowDir</name> <op:operator pos:line="637" pos:column="27">==</op:operator> <name pos:line="637" pos:column="30">ARROW_DOWN</name></expr>)</condition><then pos:line="637" pos:column="41">
	<block pos:line="638" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="639" pos:column="17">int</name></type> <name pos:line="639" pos:column="21">x</name> <init pos:line="639" pos:column="23">= <expr><name><name pos:line="639" pos:column="25">rc</name><op:operator pos:line="639" pos:column="27">.</op:operator><name pos:line="639" pos:column="28">left</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="640" pos:column="17">int</name></type> <name pos:line="640" pos:column="21">y</name> <init pos:line="640" pos:column="23">= <expr><name><name pos:line="640" pos:column="25">rc</name><op:operator pos:line="640" pos:column="27">.</op:operator><name pos:line="640" pos:column="28">top</name></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="642" pos:column="17">//::MoveToEx(hdc, x, y, NULL);</comment>
		<for pos:line="643" pos:column="17">for (<init pos:line="643" pos:column="22">;</init> <condition><expr><op:operator pos:line="643" pos:column="24">(</op:operator><name pos:line="643" pos:column="25">y</name> <op:operator pos:line="643" pos:column="27">&lt;</op:operator> <name><name pos:line="643" pos:column="29">rc</name><op:operator pos:line="643" pos:column="31">.</op:operator><name pos:line="643" pos:column="32">bottom</name></name><op:operator pos:line="643" pos:column="38">)</op:operator> <op:operator pos:line="643" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="643" pos:column="43">(</op:operator><name pos:line="643" pos:column="44">x</name> <op:operator pos:line="643" pos:column="46">!=</op:operator> <name><name pos:line="643" pos:column="49">rc</name><op:operator pos:line="643" pos:column="51">.</op:operator><name pos:line="643" pos:column="52">right</name></name><op:operator pos:line="643" pos:column="57">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="643" pos:column="61">y</name><op:operator pos:line="643" pos:column="62">++</op:operator></expr></incr>)
		<block pos:line="644" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="645" pos:column="25">::</op:operator><name pos:line="645" pos:column="27">MoveToEx</name></name><argument_list pos:line="645" pos:column="35">(<argument><expr><name pos:line="645" pos:column="36">hdc</name></expr></argument>, <argument><expr><name pos:line="645" pos:column="41">x</name><op:operator pos:line="645" pos:column="42">++</op:operator></expr></argument>, <argument><expr><name pos:line="645" pos:column="46">y</name></expr></argument>, <argument><expr><name pos:line="645" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="646" pos:column="25">::</op:operator><name pos:line="646" pos:column="27">LineTo</name></name><argument_list pos:line="646" pos:column="33">(<argument><expr><name pos:line="646" pos:column="34">hdc</name></expr></argument>, <argument><expr><name><name pos:line="646" pos:column="39">rc</name><op:operator pos:line="646" pos:column="41">.</op:operator><name pos:line="646" pos:column="42">right</name></name><op:operator pos:line="646" pos:column="47">--</op:operator></expr></argument>, <argument><expr><name pos:line="646" pos:column="51">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if></else></if></else></if></else></if>
}</block></function>
<function><type><name pos:line="650" pos:column="1">void</name></type> <name><name pos:line="650" pos:column="6">Splitter</name><op:operator pos:line="650" pos:column="14">::</op:operator><name pos:line="650" pos:column="16">adjustZoneToDraw</name></name><parameter_list pos:line="650" pos:column="32">(<param><decl><type><name pos:line="650" pos:column="33">RECT</name> <type:modifier pos:line="650" pos:column="38">&amp;</type:modifier></type> <name pos:line="650" pos:column="40">rc2def</name></decl></param>, <param><decl><type><name pos:line="650" pos:column="48">ZONE_TYPE</name></type> <name pos:line="650" pos:column="58">whichZone</name></decl></param>)</parameter_list> 
<block pos:line="651" pos:column="1">{
	<if pos:line="652" pos:column="9">if <condition pos:line="652" pos:column="12">(<expr><name pos:line="652" pos:column="13">_spiltterSize</name> <op:operator pos:line="652" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="652" pos:column="29">4</lit:literal></expr>)</condition><then pos:line="652" pos:column="31"> <return pos:line="652" pos:column="32">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="653" pos:column="9">int</name></type> <name pos:line="653" pos:column="13">x0</name></decl><op:operator pos:line="653" pos:column="15">,</op:operator> <decl><type ref="prev"/><name pos:line="653" pos:column="17">y0</name></decl><op:operator pos:line="653" pos:column="19">,</op:operator> <decl><type ref="prev"/><name pos:line="653" pos:column="21">x1</name></decl><op:operator pos:line="653" pos:column="23">,</op:operator> <decl><type ref="prev"/><name pos:line="653" pos:column="25">y1</name></decl><op:operator pos:line="653" pos:column="27">,</op:operator> <decl><type ref="prev"/><name pos:line="653" pos:column="29">w</name></decl><op:operator pos:line="653" pos:column="30">,</op:operator> <decl><type ref="prev"/><name pos:line="653" pos:column="32">h</name></decl>;</decl_stmt>
	<if pos:line="654" pos:column="9">if <condition pos:line="654" pos:column="12">(<expr><op:operator pos:line="654" pos:column="13">(</op:operator><lit:literal type="number" pos:line="654" pos:column="14">4</lit:literal> <op:operator pos:line="654" pos:column="16">&lt;=</op:operator> <name pos:line="654" pos:column="19">_spiltterSize</name><op:operator pos:line="654" pos:column="32">)</op:operator> <op:operator pos:line="654" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="654" pos:column="37">(</op:operator><name pos:line="654" pos:column="38">_spiltterSize</name> <op:operator pos:line="654" pos:column="52">&lt;=</op:operator> <lit:literal type="number" pos:line="654" pos:column="55">8</lit:literal><op:operator pos:line="654" pos:column="56">)</op:operator></expr>)</condition><then pos:line="654" pos:column="58">
	<block pos:line="655" pos:column="9">{
		<expr_stmt><expr><name pos:line="656" pos:column="17">w</name> <op:operator pos:line="656" pos:column="19">=</op:operator> <op:operator pos:line="656" pos:column="21">(</op:operator><call><name pos:line="656" pos:column="22">isVertical</name><argument_list pos:line="656" pos:column="32">()</argument_list></call><op:operator pos:line="656" pos:column="34">?</op:operator><lit:literal type="number" pos:line="656" pos:column="35">4</lit:literal><op:operator pos:line="656" pos:column="36">:</op:operator><lit:literal type="number" pos:line="656" pos:column="37">7</lit:literal><op:operator pos:line="656" pos:column="38">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="657" pos:column="17">h</name> <op:operator pos:line="657" pos:column="19">=</op:operator> <op:operator pos:line="657" pos:column="21">(</op:operator><call><name pos:line="657" pos:column="22">isVertical</name><argument_list pos:line="657" pos:column="32">()</argument_list></call><op:operator pos:line="657" pos:column="34">?</op:operator><lit:literal type="number" pos:line="657" pos:column="35">7</lit:literal><op:operator pos:line="657" pos:column="36">:</op:operator><lit:literal type="number" pos:line="657" pos:column="37">4</lit:literal><op:operator pos:line="657" pos:column="38">)</op:operator></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="659" pos:column="9">else <comment type="line" pos:line="659" pos:column="14">// (_spiltterSize &gt; 8)</comment>
	<block pos:line="660" pos:column="9">{
		<expr_stmt><expr><name pos:line="661" pos:column="17">w</name> <op:operator pos:line="661" pos:column="19">=</op:operator> <op:operator pos:line="661" pos:column="21">(</op:operator><call><name pos:line="661" pos:column="22">isVertical</name><argument_list pos:line="661" pos:column="32">()</argument_list></call><op:operator pos:line="661" pos:column="34">?</op:operator><lit:literal type="number" pos:line="661" pos:column="35">6</lit:literal><op:operator pos:line="661" pos:column="36">:</op:operator><lit:literal type="number" pos:line="661" pos:column="37">11</lit:literal><op:operator pos:line="661" pos:column="39">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="662" pos:column="17">h</name> <op:operator pos:line="662" pos:column="19">=</op:operator> <op:operator pos:line="662" pos:column="21">(</op:operator><call><name pos:line="662" pos:column="22">isVertical</name><argument_list pos:line="662" pos:column="32">()</argument_list></call><op:operator pos:line="662" pos:column="34">?</op:operator><lit:literal type="number" pos:line="662" pos:column="35">11</lit:literal><op:operator pos:line="662" pos:column="37">:</op:operator><lit:literal type="number" pos:line="662" pos:column="38">6</lit:literal><op:operator pos:line="662" pos:column="39">)</op:operator></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="665" pos:column="9">if <condition pos:line="665" pos:column="12">(<expr><call><name pos:line="665" pos:column="13">isVertical</name><argument_list pos:line="665" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="665" pos:column="26">
	<block pos:line="666" pos:column="9">{<comment type="line" pos:line="666" pos:column="10">//w=4 h=7</comment>
		<if pos:line="667" pos:column="17">if <condition pos:line="667" pos:column="20">(<expr><name pos:line="667" pos:column="21">whichZone</name> <op:operator pos:line="667" pos:column="31">==</op:operator> <name pos:line="667" pos:column="34">TOP_LEFT</name></expr>)</condition><then pos:line="667" pos:column="43">
		<block pos:line="668" pos:column="17">{
			<expr_stmt><expr><name pos:line="669" pos:column="25">x0</name> <op:operator pos:line="669" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="669" pos:column="30">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="670" pos:column="25">y0</name> <op:operator pos:line="670" pos:column="28">=</op:operator> <op:operator pos:line="670" pos:column="30">(</op:operator><name><name pos:line="670" pos:column="31">_clickZone2TL</name><op:operator pos:line="670" pos:column="44">.</op:operator><name pos:line="670" pos:column="45">bottom</name></name> <op:operator pos:line="670" pos:column="52">-</op:operator> <name pos:line="670" pos:column="54">h</name><op:operator pos:line="670" pos:column="55">)</op:operator> <op:operator pos:line="670" pos:column="57">/</op:operator> <lit:literal type="number" pos:line="670" pos:column="59">2</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="672" pos:column="17">else <comment type="line" pos:line="672" pos:column="22">// whichZone == BOTTOM_RIGHT</comment>
		<block pos:line="673" pos:column="17">{
			<expr_stmt><expr><name pos:line="674" pos:column="25">x0</name> <op:operator pos:line="674" pos:column="28">=</op:operator> <name><name pos:line="674" pos:column="30">_clickZone2BR</name><op:operator pos:line="674" pos:column="43">.</op:operator><name pos:line="674" pos:column="44">left</name></name> <op:operator pos:line="674" pos:column="49">+</op:operator> <name><name pos:line="674" pos:column="51">_clickZone2BR</name><op:operator pos:line="674" pos:column="64">.</op:operator><name pos:line="674" pos:column="65">right</name></name> <op:operator pos:line="674" pos:column="71">-</op:operator> <name pos:line="674" pos:column="73">w</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="675" pos:column="25">y0</name> <op:operator pos:line="675" pos:column="28">=</op:operator> <op:operator pos:line="675" pos:column="30">(</op:operator><name><name pos:line="675" pos:column="31">_clickZone2BR</name><op:operator pos:line="675" pos:column="44">.</op:operator><name pos:line="675" pos:column="45">bottom</name></name> <op:operator pos:line="675" pos:column="52">-</op:operator> <name pos:line="675" pos:column="54">h</name><op:operator pos:line="675" pos:column="55">)</op:operator> <op:operator pos:line="675" pos:column="57">/</op:operator> <lit:literal type="number" pos:line="675" pos:column="59">2</lit:literal> <op:operator pos:line="675" pos:column="61">+</op:operator> <name><name pos:line="675" pos:column="63">_clickZone2BR</name><op:operator pos:line="675" pos:column="76">.</op:operator><name pos:line="675" pos:column="77">top</name></name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="677" pos:column="17">x1</name> <op:operator pos:line="677" pos:column="20">=</op:operator> <name pos:line="677" pos:column="22">x0</name> <op:operator pos:line="677" pos:column="25">+</op:operator> <name pos:line="677" pos:column="27">w</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="678" pos:column="17">y1</name> <op:operator pos:line="678" pos:column="20">=</op:operator> <name pos:line="678" pos:column="22">y0</name> <op:operator pos:line="678" pos:column="25">+</op:operator> <name pos:line="678" pos:column="27">h</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="680" pos:column="9">else <comment type="line" pos:line="680" pos:column="14">// Horizontal</comment>
	<block pos:line="681" pos:column="9">{<comment type="line" pos:line="681" pos:column="10">//w=7 h=4</comment>
		<if pos:line="682" pos:column="17">if <condition pos:line="682" pos:column="20">(<expr><name pos:line="682" pos:column="21">whichZone</name> <op:operator pos:line="682" pos:column="31">==</op:operator> <name pos:line="682" pos:column="34">TOP_LEFT</name></expr>)</condition><then pos:line="682" pos:column="43">
		<block pos:line="683" pos:column="17">{
			<expr_stmt><expr><name pos:line="684" pos:column="25">x0</name> <op:operator pos:line="684" pos:column="28">=</op:operator> <op:operator pos:line="684" pos:column="30">(</op:operator><name><name pos:line="684" pos:column="31">_clickZone2TL</name><op:operator pos:line="684" pos:column="44">.</op:operator><name pos:line="684" pos:column="45">right</name></name> <op:operator pos:line="684" pos:column="51">-</op:operator> <name pos:line="684" pos:column="53">w</name><op:operator pos:line="684" pos:column="54">)</op:operator> <op:operator pos:line="684" pos:column="56">/</op:operator> <lit:literal type="number" pos:line="684" pos:column="58">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="685" pos:column="25">y0</name> <op:operator pos:line="685" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="685" pos:column="30">0</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="687" pos:column="17">else <comment type="line" pos:line="687" pos:column="22">// whichZone == BOTTOM_RIGHT</comment>
		<block pos:line="688" pos:column="17">{
			<expr_stmt><expr><name pos:line="689" pos:column="25">x0</name> <op:operator pos:line="689" pos:column="28">=</op:operator> <op:operator pos:line="689" pos:column="30">(</op:operator><op:operator pos:line="689" pos:column="31">(</op:operator><name><name pos:line="689" pos:column="32">_clickZone2BR</name><op:operator pos:line="689" pos:column="45">.</op:operator><name pos:line="689" pos:column="46">right</name></name> <op:operator pos:line="689" pos:column="52">-</op:operator> <name pos:line="689" pos:column="54">w</name><op:operator pos:line="689" pos:column="55">)</op:operator> <op:operator pos:line="689" pos:column="57">/</op:operator> <lit:literal type="number" pos:line="689" pos:column="59">2</lit:literal><op:operator pos:line="689" pos:column="60">)</op:operator> <op:operator pos:line="689" pos:column="62">+</op:operator> <name><name pos:line="689" pos:column="64">_clickZone2BR</name><op:operator pos:line="689" pos:column="77">.</op:operator><name pos:line="689" pos:column="78">left</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="690" pos:column="25">y0</name> <op:operator pos:line="690" pos:column="28">=</op:operator> <name><name pos:line="690" pos:column="30">_clickZone2BR</name><op:operator pos:line="690" pos:column="43">.</op:operator><name pos:line="690" pos:column="44">top</name></name> <op:operator pos:line="690" pos:column="48">+</op:operator> <name><name pos:line="690" pos:column="50">_clickZone2BR</name><op:operator pos:line="690" pos:column="63">.</op:operator><name pos:line="690" pos:column="64">bottom</name></name> <op:operator pos:line="690" pos:column="71">-</op:operator> <name pos:line="690" pos:column="73">h</name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="692" pos:column="17">x1</name> <op:operator pos:line="692" pos:column="20">=</op:operator> <name pos:line="692" pos:column="22">x0</name> <op:operator pos:line="692" pos:column="25">+</op:operator> <name pos:line="692" pos:column="27">w</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="693" pos:column="17">y1</name> <op:operator pos:line="693" pos:column="20">=</op:operator> <name pos:line="693" pos:column="22">y0</name> <op:operator pos:line="693" pos:column="25">+</op:operator> <name pos:line="693" pos:column="27">h</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><name><name pos:line="695" pos:column="9">rc2def</name><op:operator pos:line="695" pos:column="15">.</op:operator><name pos:line="695" pos:column="16">left</name></name> <op:operator pos:line="695" pos:column="21">=</op:operator> <name pos:line="695" pos:column="23">x0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="696" pos:column="9">rc2def</name><op:operator pos:line="696" pos:column="15">.</op:operator><name pos:line="696" pos:column="16">top</name></name> <op:operator pos:line="696" pos:column="20">=</op:operator> <name pos:line="696" pos:column="22">y0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="697" pos:column="9">rc2def</name><op:operator pos:line="697" pos:column="15">.</op:operator><name pos:line="697" pos:column="16">right</name></name> <op:operator pos:line="697" pos:column="22">=</op:operator> <name pos:line="697" pos:column="24">x1</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="698" pos:column="9">rc2def</name><op:operator pos:line="698" pos:column="15">.</op:operator><name pos:line="698" pos:column="16">bottom</name></name> <op:operator pos:line="698" pos:column="23">=</op:operator> <name pos:line="698" pos:column="25">y1</name></expr>;</expr_stmt>
}</block></function>
</unit>
