<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\columnEditor.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"columnEditor.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>


<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">ColumnEditorDlg</name><op:operator pos:line="34" pos:column="21">::</op:operator><name pos:line="34" pos:column="23">display</name></name><parameter_list pos:line="34" pos:column="30">(<param><decl><type><name pos:line="34" pos:column="31">bool</name></type> <name pos:line="34" pos:column="36">toShow</name></decl></param>)</parameter_list> <specifier pos:line="34" pos:column="44">const</specifier> 
<block pos:line="35" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">Window</name><op:operator pos:line="36" pos:column="11">::</op:operator><name pos:line="36" pos:column="13">display</name></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">toShow</name></expr>)</condition><then pos:line="37" pos:column="16">
        <expr_stmt><expr><call><name><op:operator pos:line="38" pos:column="9">::</op:operator><name pos:line="38" pos:column="11">SetFocus</name></name><argument_list pos:line="38" pos:column="19">(<argument><expr><call><name><op:operator pos:line="38" pos:column="20">::</op:operator><name pos:line="38" pos:column="22">GetDlgItem</name></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">ID_GOLINE_EDIT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="41" pos:column="1">BOOL</name> <name pos:line="41" pos:column="6">CALLBACK</name></type> <name><name pos:line="41" pos:column="15">ColumnEditorDlg</name><op:operator pos:line="41" pos:column="30">::</op:operator><name pos:line="41" pos:column="32">run_dlgProc</name></name><parameter_list pos:line="41" pos:column="43">(<param><decl><type><name pos:line="41" pos:column="44">UINT</name></type> <name pos:line="41" pos:column="49">message</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="58">WPARAM</name></type> <name pos:line="41" pos:column="65">wParam</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="73">LPARAM</name></type></decl></param>)</parameter_list>
<block pos:line="42" pos:column="1">{
	<switch pos:line="43" pos:column="9">switch <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="44" pos:column="9">{
		<case pos:line="45" pos:column="17">case <expr><name pos:line="45" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="46" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">switchTo</name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">activeText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="48" pos:column="25">::</op:operator><name pos:line="48" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="48" pos:column="45">(<argument><expr><name pos:line="48" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">IDC_COL_DEC_RADIO</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="73">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="86">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="48" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">goToCenter</name><argument_list pos:line="49" pos:column="35">()</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="51" pos:column="25">NppParameters</name> <type:modifier pos:line="51" pos:column="39">*</type:modifier></type><name pos:line="51" pos:column="40">pNppParam</name> <init pos:line="51" pos:column="50">= <expr><call><name><name pos:line="51" pos:column="52">NppParameters</name><op:operator pos:line="51" pos:column="65">::</op:operator><name pos:line="51" pos:column="67">getInstance</name></name><argument_list pos:line="51" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">ETDTProc</name></type> <name pos:line="52" pos:column="34">enableDlgTheme</name> <init pos:line="52" pos:column="49">= <expr><op:operator pos:line="52" pos:column="51">(</op:operator><name pos:line="52" pos:column="52">ETDTProc</name><op:operator pos:line="52" pos:column="60">)</op:operator><call><name><name pos:line="52" pos:column="61">pNppParam</name><op:operator pos:line="52" pos:column="70">-&gt;</op:operator><name pos:line="52" pos:column="72">getEnableThemeDlgTexture</name></name><argument_list pos:line="52" pos:column="96">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">enableDlgTheme</name></expr>)</condition><then pos:line="53" pos:column="44">
			<block pos:line="54" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="55" pos:column="33">enableDlgTheme</name><argument_list pos:line="55" pos:column="47">(<argument><expr><name pos:line="55" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="56">ETDT_ENABLETAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="56" pos:column="33">redraw</name><argument_list pos:line="56" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="58" pos:column="25">return <expr><name pos:line="58" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="60" pos:column="17">case <expr><name pos:line="60" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="61" pos:column="17">{
			<switch pos:line="62" pos:column="25">switch <condition pos:line="62" pos:column="32">(<expr><name pos:line="62" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="63" pos:column="25">{
				<case pos:line="64" pos:column="33">case <expr><name pos:line="64" pos:column="38">IDCANCEL</name></expr> : <comment type="line" pos:line="64" pos:column="49">// Close</comment>
					<expr_stmt><expr><call><name pos:line="65" pos:column="41">display</name><argument_list pos:line="65" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="65" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="66" pos:column="41">return <expr><name pos:line="66" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="68" pos:column="33">case <expr><name pos:line="68" pos:column="38">IDOK</name></expr> :
                <block pos:line="69" pos:column="17">{
					<expr_stmt><expr><call><name pos:line="70" pos:column="41">(<type:modifier pos:line="70" pos:column="42">*</type:modifier><name pos:line="70" pos:column="43">_ppEditView</name>)<op:operator pos:line="70" pos:column="55">-&gt;</op:operator><name pos:line="70" pos:column="57">execute</name></name><argument_list pos:line="70" pos:column="64">(<argument><expr><name pos:line="70" pos:column="65">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<decl_stmt><decl><type><specifier pos:line="72" pos:column="41">const</specifier> <name pos:line="72" pos:column="47">int</name></type> <name pos:line="72" pos:column="51">stringSize</name> <init pos:line="72" pos:column="62">= <expr><lit:literal type="number" pos:line="72" pos:column="64">1024</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="73" pos:column="41">TCHAR</name></type> <name><name pos:line="73" pos:column="47">str</name><index pos:line="73" pos:column="50">[<expr><name pos:line="73" pos:column="51">stringSize</name></expr>]</index></name></decl>;</decl_stmt>
					
					<decl_stmt><decl><type><name pos:line="75" pos:column="41">bool</name></type> <name pos:line="75" pos:column="46">isTextMode</name> <init pos:line="75" pos:column="57">= <expr><op:operator pos:line="75" pos:column="59">(</op:operator><name pos:line="75" pos:column="60">BST_CHECKED</name> <op:operator pos:line="75" pos:column="72">==</op:operator> <call><name><op:operator pos:line="75" pos:column="75">::</op:operator><name pos:line="75" pos:column="77">SendDlgItemMessage</name></name><argument_list pos:line="75" pos:column="95">(<argument><expr><name pos:line="75" pos:column="96">_hSelf</name></expr></argument>, <argument><expr><name pos:line="75" pos:column="104">IDC_COL_TEXT_RADIO</name></expr></argument>, <argument><expr><name pos:line="75" pos:column="124">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="137">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="140">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="75" pos:column="142">)</op:operator></expr></init></decl>;</decl_stmt>
					
					<if pos:line="77" pos:column="41">if <condition pos:line="77" pos:column="44">(<expr><name pos:line="77" pos:column="45">isTextMode</name></expr>)</condition><then pos:line="77" pos:column="56">
					<block pos:line="78" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="79" pos:column="49">::</op:operator><name pos:line="79" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="79" pos:column="69">(<argument><expr><name pos:line="79" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="79" pos:column="78">IDC_COL_TEXT_EDIT</name></expr></argument>, <argument><expr><name pos:line="79" pos:column="97">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="79" pos:column="109">stringSize</name></expr></argument>, <argument><expr><op:operator pos:line="79" pos:column="121">(</op:operator><name pos:line="79" pos:column="122">LPARAM</name><op:operator pos:line="79" pos:column="128">)</op:operator><name pos:line="79" pos:column="129">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><call><name pos:line="81" pos:column="49">display</name><argument_list pos:line="81" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="81" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
						<if pos:line="83" pos:column="49">if <condition pos:line="83" pos:column="52">(<expr><call><name pos:line="83" pos:column="53">(<type:modifier pos:line="83" pos:column="54">*</type:modifier><name pos:line="83" pos:column="55">_ppEditView</name>)<op:operator pos:line="83" pos:column="67">-&gt;</op:operator><name pos:line="83" pos:column="69">execute</name></name><argument_list pos:line="83" pos:column="76">(<argument><expr><name pos:line="83" pos:column="77">SCI_SELECTIONISRECTANGLE</name></expr></argument>)</argument_list></call> <op:operator pos:line="83" pos:column="103">||</op:operator> <call><name pos:line="83" pos:column="106">(<type:modifier pos:line="83" pos:column="107">*</type:modifier><name pos:line="83" pos:column="108">_ppEditView</name>)<op:operator pos:line="83" pos:column="120">-&gt;</op:operator><name pos:line="83" pos:column="122">execute</name></name><argument_list pos:line="83" pos:column="129">(<argument><expr><name pos:line="83" pos:column="130">SCI_GETSELECTIONS</name></expr></argument>)</argument_list></call> <op:operator pos:line="83" pos:column="149">&gt;</op:operator> <lit:literal type="number" pos:line="83" pos:column="151">1</lit:literal></expr>)</condition><then pos:line="83" pos:column="153">
						<block pos:line="84" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="85" pos:column="57">ColumnModeInfos</name></type> <name pos:line="85" pos:column="73">colInfos</name> <init pos:line="85" pos:column="82">= <expr><call><name pos:line="85" pos:column="84">(<type:modifier pos:line="85" pos:column="85">*</type:modifier><name pos:line="85" pos:column="86">_ppEditView</name>)<op:operator pos:line="85" pos:column="98">-&gt;</op:operator><name pos:line="85" pos:column="100">getColumnModeSelectInfo</name></name><argument_list pos:line="85" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="86" pos:column="57">std</name><op:operator pos:line="86" pos:column="60">::</op:operator><name pos:line="86" pos:column="62">sort</name></name><argument_list pos:line="86" pos:column="66">(<argument><expr><call><name><name pos:line="86" pos:column="67">colInfos</name><op:operator pos:line="86" pos:column="75">.</op:operator><name pos:line="86" pos:column="76">begin</name></name><argument_list pos:line="86" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="86" pos:column="85">colInfos</name><op:operator pos:line="86" pos:column="93">.</op:operator><name pos:line="86" pos:column="94">end</name></name><argument_list pos:line="86" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="101">SortInPositionOrder</name><argument_list pos:line="86" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="87" pos:column="57">(<type:modifier pos:line="87" pos:column="58">*</type:modifier><name pos:line="87" pos:column="59">_ppEditView</name>)<op:operator pos:line="87" pos:column="71">-&gt;</op:operator><name pos:line="87" pos:column="73">columnReplace</name></name><argument_list pos:line="87" pos:column="86">(<argument><expr><name pos:line="87" pos:column="87">colInfos</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="97">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="88" pos:column="57">std</name><op:operator pos:line="88" pos:column="60">::</op:operator><name pos:line="88" pos:column="62">sort</name></name><argument_list pos:line="88" pos:column="66">(<argument><expr><call><name><name pos:line="88" pos:column="67">colInfos</name><op:operator pos:line="88" pos:column="75">.</op:operator><name pos:line="88" pos:column="76">begin</name></name><argument_list pos:line="88" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="85">colInfos</name><op:operator pos:line="88" pos:column="93">.</op:operator><name pos:line="88" pos:column="94">end</name></name><argument_list pos:line="88" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="101">SortInSelectOrder</name><argument_list pos:line="88" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="89" pos:column="57">(<type:modifier pos:line="89" pos:column="58">*</type:modifier><name pos:line="89" pos:column="59">_ppEditView</name>)<op:operator pos:line="89" pos:column="71">-&gt;</op:operator><name pos:line="89" pos:column="73">setMultiSelections</name></name><argument_list pos:line="89" pos:column="91">(<argument><expr><name pos:line="89" pos:column="92">colInfos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then>
						<else pos:line="91" pos:column="49">else
						<block pos:line="92" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="93" pos:column="57">int</name></type> <name pos:line="93" pos:column="61">cursorPos</name> <init pos:line="93" pos:column="71">= <expr><call><name pos:line="93" pos:column="73">(<type:modifier pos:line="93" pos:column="74">*</type:modifier><name pos:line="93" pos:column="75">_ppEditView</name>)<op:operator pos:line="93" pos:column="87">-&gt;</op:operator><name pos:line="93" pos:column="89">execute</name></name><argument_list pos:line="93" pos:column="96">(<argument><expr><name pos:line="93" pos:column="97">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="94" pos:column="57">int</name></type> <name pos:line="94" pos:column="61">cursorCol</name> <init pos:line="94" pos:column="71">= <expr><call><name pos:line="94" pos:column="73">(<type:modifier pos:line="94" pos:column="74">*</type:modifier><name pos:line="94" pos:column="75">_ppEditView</name>)<op:operator pos:line="94" pos:column="87">-&gt;</op:operator><name pos:line="94" pos:column="89">execute</name></name><argument_list pos:line="94" pos:column="96">(<argument><expr><name pos:line="94" pos:column="97">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="112">cursorPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="95" pos:column="57">int</name></type> <name pos:line="95" pos:column="61">cursorLine</name> <init pos:line="95" pos:column="72">= <expr><call><name pos:line="95" pos:column="74">(<type:modifier pos:line="95" pos:column="75">*</type:modifier><name pos:line="95" pos:column="76">_ppEditView</name>)<op:operator pos:line="95" pos:column="88">-&gt;</op:operator><name pos:line="95" pos:column="90">execute</name></name><argument_list pos:line="95" pos:column="97">(<argument><expr><name pos:line="95" pos:column="98">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="120">cursorPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="96" pos:column="57">int</name></type> <name pos:line="96" pos:column="61">endPos</name> <init pos:line="96" pos:column="68">= <expr><call><name pos:line="96" pos:column="70">(<type:modifier pos:line="96" pos:column="71">*</type:modifier><name pos:line="96" pos:column="72">_ppEditView</name>)<op:operator pos:line="96" pos:column="84">-&gt;</op:operator><name pos:line="96" pos:column="86">execute</name></name><argument_list pos:line="96" pos:column="93">(<argument><expr><name pos:line="96" pos:column="94">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="97" pos:column="57">int</name></type> <name pos:line="97" pos:column="61">endLine</name> <init pos:line="97" pos:column="69">= <expr><call><name pos:line="97" pos:column="71">(<type:modifier pos:line="97" pos:column="72">*</type:modifier><name pos:line="97" pos:column="73">_ppEditView</name>)<op:operator pos:line="97" pos:column="85">-&gt;</op:operator><name pos:line="97" pos:column="87">execute</name></name><argument_list pos:line="97" pos:column="94">(<argument><expr><name pos:line="97" pos:column="95">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="117">endPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

							<decl_stmt><decl><type><name pos:line="99" pos:column="57">int</name></type> <name pos:line="99" pos:column="61">lineAllocatedLen</name> <init pos:line="99" pos:column="78">= <expr><lit:literal type="number" pos:line="99" pos:column="80">1024</lit:literal></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="100" pos:column="57">TCHAR</name> <type:modifier pos:line="100" pos:column="63">*</type:modifier></type><name pos:line="100" pos:column="64">line</name> <init pos:line="100" pos:column="69">= <expr><op:operator pos:line="100" pos:column="71">new</op:operator> <name><name pos:line="100" pos:column="75">TCHAR</name><index pos:line="100" pos:column="80">[<expr><name pos:line="100" pos:column="81">lineAllocatedLen</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

							<for pos:line="102" pos:column="57">for (<init><decl><type><name pos:line="102" pos:column="62">int</name></type> <name pos:line="102" pos:column="66">i</name> <init pos:line="102" pos:column="68">= <expr><name pos:line="102" pos:column="70">cursorLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="102" pos:column="83">i</name> <op:operator pos:line="102" pos:column="85">&lt;=</op:operator> <name pos:line="102" pos:column="88">endLine</name></expr> ;</condition> <incr><expr><name pos:line="102" pos:column="98">i</name><op:operator pos:line="102" pos:column="99">++</op:operator></expr></incr>)
							<block pos:line="103" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="104" pos:column="65">int</name></type> <name pos:line="104" pos:column="69">lineBegin</name> <init pos:line="104" pos:column="79">= <expr><call><name pos:line="104" pos:column="81">(<type:modifier pos:line="104" pos:column="82">*</type:modifier><name pos:line="104" pos:column="83">_ppEditView</name>)<op:operator pos:line="104" pos:column="95">-&gt;</op:operator><name pos:line="104" pos:column="97">execute</name></name><argument_list pos:line="104" pos:column="104">(<argument><expr><name pos:line="104" pos:column="105">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="127">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="105" pos:column="65">int</name></type> <name pos:line="105" pos:column="69">lineEnd</name> <init pos:line="105" pos:column="77">= <expr><call><name pos:line="105" pos:column="79">(<type:modifier pos:line="105" pos:column="80">*</type:modifier><name pos:line="105" pos:column="81">_ppEditView</name>)<op:operator pos:line="105" pos:column="93">-&gt;</op:operator><name pos:line="105" pos:column="95">execute</name></name><argument_list pos:line="105" pos:column="102">(<argument><expr><name pos:line="105" pos:column="103">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="127">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

								<decl_stmt><decl><type><name pos:line="107" pos:column="65">int</name></type> <name pos:line="107" pos:column="69">lineEndCol</name> <init pos:line="107" pos:column="80">= <expr><call><name pos:line="107" pos:column="82">(<type:modifier pos:line="107" pos:column="83">*</type:modifier><name pos:line="107" pos:column="84">_ppEditView</name>)<op:operator pos:line="107" pos:column="96">-&gt;</op:operator><name pos:line="107" pos:column="98">execute</name></name><argument_list pos:line="107" pos:column="105">(<argument><expr><name pos:line="107" pos:column="106">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="121">lineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="108" pos:column="65">int</name></type> <name pos:line="108" pos:column="69">lineLen</name> <init pos:line="108" pos:column="77">= <expr><name pos:line="108" pos:column="79">lineEnd</name> <op:operator pos:line="108" pos:column="87">-</op:operator> <name pos:line="108" pos:column="89">lineBegin</name> <op:operator pos:line="108" pos:column="99">+</op:operator> <lit:literal type="number" pos:line="108" pos:column="101">1</lit:literal></expr></init></decl>;</decl_stmt>

								<if pos:line="110" pos:column="65">if <condition pos:line="110" pos:column="68">(<expr><name pos:line="110" pos:column="69">lineLen</name> <op:operator pos:line="110" pos:column="77">&gt;</op:operator> <name pos:line="110" pos:column="79">lineAllocatedLen</name></expr>)</condition><then pos:line="110" pos:column="96">
								<block pos:line="111" pos:column="65">{
									<expr_stmt><expr><op:operator pos:line="112" pos:column="73">delete</op:operator> <index pos:line="112" pos:column="80">[]</index> <name pos:line="112" pos:column="83">line</name></expr>;</expr_stmt>
									<expr_stmt><expr><name pos:line="113" pos:column="73">line</name> <op:operator pos:line="113" pos:column="78">=</op:operator> <op:operator pos:line="113" pos:column="80">new</op:operator> <name><name pos:line="113" pos:column="84">TCHAR</name><index pos:line="113" pos:column="89">[<expr><name pos:line="113" pos:column="90">lineLen</name></expr>]</index></name></expr>;</expr_stmt>
								}</block></then></if>
								<expr_stmt><expr><call><name pos:line="115" pos:column="65">(<type:modifier pos:line="115" pos:column="66">*</type:modifier><name pos:line="115" pos:column="67">_ppEditView</name>)<op:operator pos:line="115" pos:column="79">-&gt;</op:operator><name pos:line="115" pos:column="81">getGenericText</name></name><argument_list pos:line="115" pos:column="95">(<argument><expr><name pos:line="115" pos:column="96">line</name></expr></argument>, <argument><expr><name pos:line="115" pos:column="102">lineLen</name></expr></argument>, <argument><expr><name pos:line="115" pos:column="111">lineBegin</name></expr></argument>, <argument><expr><name pos:line="115" pos:column="122">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<function_decl><type><name pos:line="116" pos:column="65">generic_string</name></type> <name pos:line="116" pos:column="80">s2r</name><parameter_list pos:line="116" pos:column="83">(<param><decl><type><name pos:line="116" pos:column="84">line</name></type></decl></param>)</parameter_list>;</function_decl>

								<if pos:line="118" pos:column="65">if <condition pos:line="118" pos:column="68">(<expr><name pos:line="118" pos:column="69">lineEndCol</name> <op:operator pos:line="118" pos:column="80">&lt;</op:operator> <name pos:line="118" pos:column="82">cursorCol</name></expr>)</condition><then pos:line="118" pos:column="92">
								<block pos:line="119" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="120" pos:column="73">generic_string</name></type> <name pos:line="120" pos:column="88">s_space</name><argument_list pos:line="120" pos:column="95">(<argument><expr><name pos:line="120" pos:column="96">cursorCol</name> <op:operator pos:line="120" pos:column="106">-</op:operator> <name pos:line="120" pos:column="108">lineEndCol</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="120" pos:column="120">' '</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="121" pos:column="73">s2r</name><op:operator pos:line="121" pos:column="76">.</op:operator><name pos:line="121" pos:column="77">append</name></name><argument_list pos:line="121" pos:column="83">(<argument><expr><name pos:line="121" pos:column="84">s_space</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									<expr_stmt><expr><call><name><name pos:line="122" pos:column="73">s2r</name><op:operator pos:line="122" pos:column="76">.</op:operator><name pos:line="122" pos:column="77">append</name></name><argument_list pos:line="122" pos:column="83">(<argument><expr><name pos:line="122" pos:column="84">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></then>
								<else pos:line="124" pos:column="65">else
								<block pos:line="125" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="126" pos:column="73">int</name></type> <name pos:line="126" pos:column="77">posAbs2Start</name> <init pos:line="126" pos:column="90">= <expr><call><name pos:line="126" pos:column="92">(<type:modifier pos:line="126" pos:column="93">*</type:modifier><name pos:line="126" pos:column="94">_ppEditView</name>)<op:operator pos:line="126" pos:column="106">-&gt;</op:operator><name pos:line="126" pos:column="108">execute</name></name><argument_list pos:line="126" pos:column="115">(<argument><expr><name pos:line="126" pos:column="116">SCI_FINDCOLUMN</name></expr></argument>, <argument><expr><name pos:line="126" pos:column="132">i</name></expr></argument>, <argument><expr><name pos:line="126" pos:column="135">cursorCol</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
									<decl_stmt><decl><type><name pos:line="127" pos:column="73">int</name></type> <name pos:line="127" pos:column="77">posRelative2Start</name> <init pos:line="127" pos:column="95">= <expr><name pos:line="127" pos:column="97">posAbs2Start</name> <op:operator pos:line="127" pos:column="110">-</op:operator> <name pos:line="127" pos:column="112">lineBegin</name></expr></init></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="128" pos:column="73">s2r</name><op:operator pos:line="128" pos:column="76">.</op:operator><name pos:line="128" pos:column="77">insert</name></name><argument_list pos:line="128" pos:column="83">(<argument><expr><name pos:line="128" pos:column="84">posRelative2Start</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="103">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></else></if>
								<expr_stmt><expr><call><name pos:line="130" pos:column="65">(<type:modifier pos:line="130" pos:column="66">*</type:modifier><name pos:line="130" pos:column="67">_ppEditView</name>)<op:operator pos:line="130" pos:column="79">-&gt;</op:operator><name pos:line="130" pos:column="81">replaceTarget</name></name><argument_list pos:line="130" pos:column="94">(<argument><expr><call><name><name pos:line="130" pos:column="95">s2r</name><op:operator pos:line="130" pos:column="98">.</op:operator><name pos:line="130" pos:column="99">c_str</name></name><argument_list pos:line="130" pos:column="104">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="130" pos:column="108">lineBegin</name></expr></argument>, <argument><expr><name pos:line="130" pos:column="119">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></for>
							<expr_stmt><expr><op:operator pos:line="132" pos:column="57">delete</op:operator> <index pos:line="132" pos:column="64">[]</index> <name pos:line="132" pos:column="67">line</name></expr>;</expr_stmt>
						}</block></else></if>
					}</block></then>
					<else pos:line="135" pos:column="41">else
					<block pos:line="136" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="137" pos:column="49">int</name></type> <name pos:line="137" pos:column="53">initialNumber</name> <init pos:line="137" pos:column="67">= <expr><call><name><op:operator pos:line="137" pos:column="69">::</op:operator><name pos:line="137" pos:column="71">GetDlgItemInt</name></name><argument_list pos:line="137" pos:column="84">(<argument><expr><name pos:line="137" pos:column="85">_hSelf</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="93">IDC_COL_INITNUM_EDIT</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="115">NULL</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="121">TRUE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="138" pos:column="49">int</name></type> <name pos:line="138" pos:column="53">increaseNumber</name> <init pos:line="138" pos:column="68">= <expr><call><name><op:operator pos:line="138" pos:column="70">::</op:operator><name pos:line="138" pos:column="72">GetDlgItemInt</name></name><argument_list pos:line="138" pos:column="85">(<argument><expr><name pos:line="138" pos:column="86">_hSelf</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="94">IDC_COL_INCREASENUM_EDIT</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="120">NULL</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="126">TRUE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="139" pos:column="49">UCHAR</name></type> <name pos:line="139" pos:column="55">format</name> <init pos:line="139" pos:column="62">= <expr><call><name pos:line="139" pos:column="64">getFormat</name><argument_list pos:line="139" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="140" pos:column="49">display</name><argument_list pos:line="140" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="140" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
						<if pos:line="142" pos:column="49">if <condition pos:line="142" pos:column="52">(<expr><call><name pos:line="142" pos:column="53">(<type:modifier pos:line="142" pos:column="54">*</type:modifier><name pos:line="142" pos:column="55">_ppEditView</name>)<op:operator pos:line="142" pos:column="67">-&gt;</op:operator><name pos:line="142" pos:column="69">execute</name></name><argument_list pos:line="142" pos:column="76">(<argument><expr><name pos:line="142" pos:column="77">SCI_SELECTIONISRECTANGLE</name></expr></argument>)</argument_list></call> <op:operator pos:line="142" pos:column="103">||</op:operator> <call><name pos:line="142" pos:column="106">(<type:modifier pos:line="142" pos:column="107">*</type:modifier><name pos:line="142" pos:column="108">_ppEditView</name>)<op:operator pos:line="142" pos:column="120">-&gt;</op:operator><name pos:line="142" pos:column="122">execute</name></name><argument_list pos:line="142" pos:column="129">(<argument><expr><name pos:line="142" pos:column="130">SCI_GETSELECTIONS</name></expr></argument>)</argument_list></call> <op:operator pos:line="142" pos:column="149">&gt;</op:operator> <lit:literal type="number" pos:line="142" pos:column="151">1</lit:literal></expr>)</condition><then pos:line="142" pos:column="153">
						<block pos:line="143" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="144" pos:column="57">ColumnModeInfos</name></type> <name pos:line="144" pos:column="73">colInfos</name> <init pos:line="144" pos:column="82">= <expr><call><name pos:line="144" pos:column="84">(<type:modifier pos:line="144" pos:column="85">*</type:modifier><name pos:line="144" pos:column="86">_ppEditView</name>)<op:operator pos:line="144" pos:column="98">-&gt;</op:operator><name pos:line="144" pos:column="100">getColumnModeSelectInfo</name></name><argument_list pos:line="144" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="145" pos:column="57">std</name><op:operator pos:line="145" pos:column="60">::</op:operator><name pos:line="145" pos:column="62">sort</name></name><argument_list pos:line="145" pos:column="66">(<argument><expr><call><name><name pos:line="145" pos:column="67">colInfos</name><op:operator pos:line="145" pos:column="75">.</op:operator><name pos:line="145" pos:column="76">begin</name></name><argument_list pos:line="145" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="145" pos:column="85">colInfos</name><op:operator pos:line="145" pos:column="93">.</op:operator><name pos:line="145" pos:column="94">end</name></name><argument_list pos:line="145" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="145" pos:column="101">SortInPositionOrder</name><argument_list pos:line="145" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="146" pos:column="57">(<type:modifier pos:line="146" pos:column="58">*</type:modifier><name pos:line="146" pos:column="59">_ppEditView</name>)<op:operator pos:line="146" pos:column="71">-&gt;</op:operator><name pos:line="146" pos:column="73">columnReplace</name></name><argument_list pos:line="146" pos:column="86">(<argument><expr><name pos:line="146" pos:column="87">colInfos</name></expr></argument>, <argument><expr><name pos:line="146" pos:column="97">initialNumber</name></expr></argument>, <argument><expr><name pos:line="146" pos:column="112">increaseNumber</name></expr></argument>, <argument><expr><name pos:line="146" pos:column="128">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="147" pos:column="57">std</name><op:operator pos:line="147" pos:column="60">::</op:operator><name pos:line="147" pos:column="62">sort</name></name><argument_list pos:line="147" pos:column="66">(<argument><expr><call><name><name pos:line="147" pos:column="67">colInfos</name><op:operator pos:line="147" pos:column="75">.</op:operator><name pos:line="147" pos:column="76">begin</name></name><argument_list pos:line="147" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="147" pos:column="85">colInfos</name><op:operator pos:line="147" pos:column="93">.</op:operator><name pos:line="147" pos:column="94">end</name></name><argument_list pos:line="147" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="147" pos:column="101">SortInSelectOrder</name><argument_list pos:line="147" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="148" pos:column="57">(<type:modifier pos:line="148" pos:column="58">*</type:modifier><name pos:line="148" pos:column="59">_ppEditView</name>)<op:operator pos:line="148" pos:column="71">-&gt;</op:operator><name pos:line="148" pos:column="73">setMultiSelections</name></name><argument_list pos:line="148" pos:column="91">(<argument><expr><name pos:line="148" pos:column="92">colInfos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then>
						<else pos:line="150" pos:column="49">else
						<block pos:line="151" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="152" pos:column="57">int</name></type> <name pos:line="152" pos:column="61">cursorPos</name> <init pos:line="152" pos:column="71">= <expr><call><name pos:line="152" pos:column="73">(<type:modifier pos:line="152" pos:column="74">*</type:modifier><name pos:line="152" pos:column="75">_ppEditView</name>)<op:operator pos:line="152" pos:column="87">-&gt;</op:operator><name pos:line="152" pos:column="89">execute</name></name><argument_list pos:line="152" pos:column="96">(<argument><expr><name pos:line="152" pos:column="97">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="153" pos:column="57">int</name></type> <name pos:line="153" pos:column="61">cursorCol</name> <init pos:line="153" pos:column="71">= <expr><call><name pos:line="153" pos:column="73">(<type:modifier pos:line="153" pos:column="74">*</type:modifier><name pos:line="153" pos:column="75">_ppEditView</name>)<op:operator pos:line="153" pos:column="87">-&gt;</op:operator><name pos:line="153" pos:column="89">execute</name></name><argument_list pos:line="153" pos:column="96">(<argument><expr><name pos:line="153" pos:column="97">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="112">cursorPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="154" pos:column="57">int</name></type> <name pos:line="154" pos:column="61">cursorLine</name> <init pos:line="154" pos:column="72">= <expr><call><name pos:line="154" pos:column="74">(<type:modifier pos:line="154" pos:column="75">*</type:modifier><name pos:line="154" pos:column="76">_ppEditView</name>)<op:operator pos:line="154" pos:column="88">-&gt;</op:operator><name pos:line="154" pos:column="90">execute</name></name><argument_list pos:line="154" pos:column="97">(<argument><expr><name pos:line="154" pos:column="98">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="154" pos:column="120">cursorPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="155" pos:column="57">int</name></type> <name pos:line="155" pos:column="61">endPos</name> <init pos:line="155" pos:column="68">= <expr><call><name pos:line="155" pos:column="70">(<type:modifier pos:line="155" pos:column="71">*</type:modifier><name pos:line="155" pos:column="72">_ppEditView</name>)<op:operator pos:line="155" pos:column="84">-&gt;</op:operator><name pos:line="155" pos:column="86">execute</name></name><argument_list pos:line="155" pos:column="93">(<argument><expr><name pos:line="155" pos:column="94">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="156" pos:column="57">int</name></type> <name pos:line="156" pos:column="61">endLine</name> <init pos:line="156" pos:column="69">= <expr><call><name pos:line="156" pos:column="71">(<type:modifier pos:line="156" pos:column="72">*</type:modifier><name pos:line="156" pos:column="73">_ppEditView</name>)<op:operator pos:line="156" pos:column="85">-&gt;</op:operator><name pos:line="156" pos:column="87">execute</name></name><argument_list pos:line="156" pos:column="94">(<argument><expr><name pos:line="156" pos:column="95">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="156" pos:column="117">endPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

							<decl_stmt><decl><type><name pos:line="158" pos:column="57">int</name></type> <name pos:line="158" pos:column="61">lineAllocatedLen</name> <init pos:line="158" pos:column="78">= <expr><lit:literal type="number" pos:line="158" pos:column="80">1024</lit:literal></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="159" pos:column="57">TCHAR</name> <type:modifier pos:line="159" pos:column="63">*</type:modifier></type><name pos:line="159" pos:column="64">line</name> <init pos:line="159" pos:column="69">= <expr><op:operator pos:line="159" pos:column="71">new</op:operator> <name><name pos:line="159" pos:column="75">TCHAR</name><index pos:line="159" pos:column="80">[<expr><name pos:line="159" pos:column="81">lineAllocatedLen</name></expr>]</index></name></expr></init></decl>;</decl_stmt>


							<decl_stmt><decl><type><name pos:line="162" pos:column="57">UCHAR</name></type> <name pos:line="162" pos:column="63">f</name> <init pos:line="162" pos:column="65">= <expr><name pos:line="162" pos:column="67">format</name> <op:operator pos:line="162" pos:column="74">&amp;</op:operator> <name pos:line="162" pos:column="76">MASK_FORMAT</name></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="163" pos:column="57">bool</name></type> <name pos:line="163" pos:column="62">isZeroLeading</name> <init pos:line="163" pos:column="76">= <expr><op:operator pos:line="163" pos:column="78">(</op:operator><name pos:line="163" pos:column="79">MASK_ZERO_LEADING</name> <op:operator pos:line="163" pos:column="97">&amp;</op:operator> <name pos:line="163" pos:column="99">format</name><op:operator pos:line="163" pos:column="105">)</op:operator> <op:operator pos:line="163" pos:column="107">!=</op:operator> <lit:literal type="number" pos:line="163" pos:column="110">0</lit:literal></expr></init></decl>;</decl_stmt>
							
							<decl_stmt><decl><type><name pos:line="165" pos:column="57">int</name></type> <name pos:line="165" pos:column="61">base</name> <init pos:line="165" pos:column="66">= <expr><lit:literal type="number" pos:line="165" pos:column="68">10</lit:literal></expr></init></decl>;</decl_stmt>
							<if pos:line="166" pos:column="57">if <condition pos:line="166" pos:column="60">(<expr><name pos:line="166" pos:column="61">f</name> <op:operator pos:line="166" pos:column="63">==</op:operator> <name pos:line="166" pos:column="66">BASE_16</name></expr>)</condition><then pos:line="166" pos:column="74">
								<expr_stmt><expr><name pos:line="167" pos:column="65">base</name> <op:operator pos:line="167" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="167" pos:column="72">16</lit:literal></expr>;</expr_stmt></then>
							<else pos:line="168" pos:column="57">else <if pos:line="168" pos:column="62">if <condition pos:line="168" pos:column="65">(<expr><name pos:line="168" pos:column="66">f</name> <op:operator pos:line="168" pos:column="68">==</op:operator> <name pos:line="168" pos:column="71">BASE_08</name></expr>)</condition><then pos:line="168" pos:column="79">
								<expr_stmt><expr><name pos:line="169" pos:column="65">base</name> <op:operator pos:line="169" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="169" pos:column="72">8</lit:literal></expr>;</expr_stmt></then>
							<else pos:line="170" pos:column="57">else <if pos:line="170" pos:column="62">if <condition pos:line="170" pos:column="65">(<expr><name pos:line="170" pos:column="66">f</name> <op:operator pos:line="170" pos:column="68">==</op:operator> <name pos:line="170" pos:column="71">BASE_02</name></expr>)</condition><then pos:line="170" pos:column="79">
								<expr_stmt><expr><name pos:line="171" pos:column="65">base</name> <op:operator pos:line="171" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="171" pos:column="72">2</lit:literal></expr>;</expr_stmt></then></if></else></if></else></if>

							<decl_stmt><decl><type><name pos:line="173" pos:column="57">int</name></type> <name pos:line="173" pos:column="61">nbLine</name> <init pos:line="173" pos:column="68">= <expr><name pos:line="173" pos:column="70">endLine</name> <op:operator pos:line="173" pos:column="78">-</op:operator> <name pos:line="173" pos:column="80">cursorLine</name> <op:operator pos:line="173" pos:column="91">+</op:operator> <lit:literal type="number" pos:line="173" pos:column="93">1</lit:literal></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="174" pos:column="57">int</name></type> <name pos:line="174" pos:column="61">endNumber</name> <init pos:line="174" pos:column="71">= <expr><name pos:line="174" pos:column="73">initialNumber</name> <op:operator pos:line="174" pos:column="87">+</op:operator> <name pos:line="174" pos:column="89">increaseNumber</name> <op:operator pos:line="174" pos:column="104">*</op:operator> <op:operator pos:line="174" pos:column="106">(</op:operator><name pos:line="174" pos:column="107">nbLine</name> <op:operator pos:line="174" pos:column="114">-</op:operator> <lit:literal type="number" pos:line="174" pos:column="116">1</lit:literal><op:operator pos:line="174" pos:column="117">)</op:operator></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="175" pos:column="57">int</name></type> <name pos:line="175" pos:column="61">nbEnd</name> <init pos:line="175" pos:column="67">= <expr><call><name pos:line="175" pos:column="69">getNbDigits</name><argument_list pos:line="175" pos:column="80">(<argument><expr><name pos:line="175" pos:column="81">endNumber</name></expr></argument>, <argument><expr><name pos:line="175" pos:column="92">base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="176" pos:column="57">int</name></type> <name pos:line="176" pos:column="61">nbInit</name> <init pos:line="176" pos:column="68">= <expr><call><name pos:line="176" pos:column="70">getNbDigits</name><argument_list pos:line="176" pos:column="81">(<argument><expr><name pos:line="176" pos:column="82">initialNumber</name></expr></argument>, <argument><expr><name pos:line="176" pos:column="97">base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="177" pos:column="57">int</name></type> <name pos:line="177" pos:column="61">nb</name> <init pos:line="177" pos:column="64">= <expr><call><name pos:line="177" pos:column="66">max</name><argument_list pos:line="177" pos:column="69">(<argument><expr><name pos:line="177" pos:column="70">nbInit</name></expr></argument>, <argument><expr><name pos:line="177" pos:column="78">nbEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


							<for pos:line="180" pos:column="57">for (<init><decl><type><name pos:line="180" pos:column="62">int</name></type> <name pos:line="180" pos:column="66">i</name> <init pos:line="180" pos:column="68">= <expr><name pos:line="180" pos:column="70">cursorLine</name></expr></init></decl> ;</init> <condition><expr><name pos:line="180" pos:column="83">i</name> <op:operator pos:line="180" pos:column="85">&lt;=</op:operator> <name pos:line="180" pos:column="88">endLine</name></expr> ;</condition> <incr><expr><name pos:line="180" pos:column="98">i</name><op:operator pos:line="180" pos:column="99">++</op:operator></expr></incr>)
							<block pos:line="181" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="182" pos:column="65">int</name></type> <name pos:line="182" pos:column="69">lineBegin</name> <init pos:line="182" pos:column="79">= <expr><call><name pos:line="182" pos:column="81">(<type:modifier pos:line="182" pos:column="82">*</type:modifier><name pos:line="182" pos:column="83">_ppEditView</name>)<op:operator pos:line="182" pos:column="95">-&gt;</op:operator><name pos:line="182" pos:column="97">execute</name></name><argument_list pos:line="182" pos:column="104">(<argument><expr><name pos:line="182" pos:column="105">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="127">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="183" pos:column="65">int</name></type> <name pos:line="183" pos:column="69">lineEnd</name> <init pos:line="183" pos:column="77">= <expr><call><name pos:line="183" pos:column="79">(<type:modifier pos:line="183" pos:column="80">*</type:modifier><name pos:line="183" pos:column="81">_ppEditView</name>)<op:operator pos:line="183" pos:column="93">-&gt;</op:operator><name pos:line="183" pos:column="95">execute</name></name><argument_list pos:line="183" pos:column="102">(<argument><expr><name pos:line="183" pos:column="103">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="127">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

								<decl_stmt><decl><type><name pos:line="185" pos:column="65">int</name></type> <name pos:line="185" pos:column="69">lineEndCol</name> <init pos:line="185" pos:column="80">= <expr><call><name pos:line="185" pos:column="82">(<type:modifier pos:line="185" pos:column="83">*</type:modifier><name pos:line="185" pos:column="84">_ppEditView</name>)<op:operator pos:line="185" pos:column="96">-&gt;</op:operator><name pos:line="185" pos:column="98">execute</name></name><argument_list pos:line="185" pos:column="105">(<argument><expr><name pos:line="185" pos:column="106">SCI_GETCOLUMN</name></expr></argument>, <argument><expr><name pos:line="185" pos:column="121">lineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="186" pos:column="65">int</name></type> <name pos:line="186" pos:column="69">lineLen</name> <init pos:line="186" pos:column="77">= <expr><name pos:line="186" pos:column="79">lineEnd</name> <op:operator pos:line="186" pos:column="87">-</op:operator> <name pos:line="186" pos:column="89">lineBegin</name> <op:operator pos:line="186" pos:column="99">+</op:operator> <lit:literal type="number" pos:line="186" pos:column="101">1</lit:literal></expr></init></decl>;</decl_stmt>

								<if pos:line="188" pos:column="65">if <condition pos:line="188" pos:column="68">(<expr><name pos:line="188" pos:column="69">lineLen</name> <op:operator pos:line="188" pos:column="77">&gt;</op:operator> <name pos:line="188" pos:column="79">lineAllocatedLen</name></expr>)</condition><then pos:line="188" pos:column="96">
								<block pos:line="189" pos:column="65">{
									<expr_stmt><expr><op:operator pos:line="190" pos:column="73">delete</op:operator> <index pos:line="190" pos:column="80">[]</index> <name pos:line="190" pos:column="83">line</name></expr>;</expr_stmt>
									<expr_stmt><expr><name pos:line="191" pos:column="73">line</name> <op:operator pos:line="191" pos:column="78">=</op:operator> <op:operator pos:line="191" pos:column="80">new</op:operator> <name><name pos:line="191" pos:column="84">TCHAR</name><index pos:line="191" pos:column="89">[<expr><name pos:line="191" pos:column="90">lineLen</name></expr>]</index></name></expr>;</expr_stmt>
								}</block></then></if>
								<expr_stmt><expr><call><name pos:line="193" pos:column="65">(<type:modifier pos:line="193" pos:column="66">*</type:modifier><name pos:line="193" pos:column="67">_ppEditView</name>)<op:operator pos:line="193" pos:column="79">-&gt;</op:operator><name pos:line="193" pos:column="81">getGenericText</name></name><argument_list pos:line="193" pos:column="95">(<argument><expr><name pos:line="193" pos:column="96">line</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="102">lineLen</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="111">lineBegin</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="122">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<function_decl><type><name pos:line="194" pos:column="65">generic_string</name></type> <name pos:line="194" pos:column="80">s2r</name><parameter_list pos:line="194" pos:column="83">(<param><decl><type><name pos:line="194" pos:column="84">line</name></type></decl></param>)</parameter_list>;</function_decl>

								<comment type="line" pos:line="196" pos:column="65">//</comment>
								<comment type="line" pos:line="197" pos:column="65">// Calcule generic_string</comment>
								<comment type="line" pos:line="198" pos:column="65">//</comment>
								<expr_stmt><expr><call><name pos:line="199" pos:column="65">int2str</name><argument_list pos:line="199" pos:column="72">(<argument><expr><name pos:line="199" pos:column="73">str</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="78">stringSize</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="90">initialNumber</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="105">base</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="111">nb</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="115">isZeroLeading</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="200" pos:column="65">initialNumber</name> <op:operator pos:line="200" pos:column="79">+=</op:operator> <name pos:line="200" pos:column="82">increaseNumber</name></expr>;</expr_stmt>

								<if pos:line="202" pos:column="65">if <condition pos:line="202" pos:column="68">(<expr><name pos:line="202" pos:column="69">lineEndCol</name> <op:operator pos:line="202" pos:column="80">&lt;</op:operator> <name pos:line="202" pos:column="82">cursorCol</name></expr>)</condition><then pos:line="202" pos:column="92">
								<block pos:line="203" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="204" pos:column="73">generic_string</name></type> <name pos:line="204" pos:column="88">s_space</name><argument_list pos:line="204" pos:column="95">(<argument><expr><name pos:line="204" pos:column="96">cursorCol</name> <op:operator pos:line="204" pos:column="106">-</op:operator> <name pos:line="204" pos:column="108">lineEndCol</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="204" pos:column="120">' '</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="205" pos:column="73">s2r</name><op:operator pos:line="205" pos:column="76">.</op:operator><name pos:line="205" pos:column="77">append</name></name><argument_list pos:line="205" pos:column="83">(<argument><expr><name pos:line="205" pos:column="84">s_space</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									<expr_stmt><expr><call><name><name pos:line="206" pos:column="73">s2r</name><op:operator pos:line="206" pos:column="76">.</op:operator><name pos:line="206" pos:column="77">append</name></name><argument_list pos:line="206" pos:column="83">(<argument><expr><name pos:line="206" pos:column="84">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></then>
								<else pos:line="208" pos:column="65">else
								<block pos:line="209" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="210" pos:column="73">int</name></type> <name pos:line="210" pos:column="77">posAbs2Start</name> <init pos:line="210" pos:column="90">= <expr><call><name pos:line="210" pos:column="92">(<type:modifier pos:line="210" pos:column="93">*</type:modifier><name pos:line="210" pos:column="94">_ppEditView</name>)<op:operator pos:line="210" pos:column="106">-&gt;</op:operator><name pos:line="210" pos:column="108">execute</name></name><argument_list pos:line="210" pos:column="115">(<argument><expr><name pos:line="210" pos:column="116">SCI_FINDCOLUMN</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="132">i</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="135">cursorCol</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
									<decl_stmt><decl><type><name pos:line="211" pos:column="73">int</name></type> <name pos:line="211" pos:column="77">posRelative2Start</name> <init pos:line="211" pos:column="95">= <expr><name pos:line="211" pos:column="97">posAbs2Start</name> <op:operator pos:line="211" pos:column="110">-</op:operator> <name pos:line="211" pos:column="112">lineBegin</name></expr></init></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="212" pos:column="73">s2r</name><op:operator pos:line="212" pos:column="76">.</op:operator><name pos:line="212" pos:column="77">insert</name></name><argument_list pos:line="212" pos:column="83">(<argument><expr><name pos:line="212" pos:column="84">posRelative2Start</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="103">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></else></if>

								<expr_stmt><expr><call><name pos:line="215" pos:column="65">(<type:modifier pos:line="215" pos:column="66">*</type:modifier><name pos:line="215" pos:column="67">_ppEditView</name>)<op:operator pos:line="215" pos:column="79">-&gt;</op:operator><name pos:line="215" pos:column="81">replaceTarget</name></name><argument_list pos:line="215" pos:column="94">(<argument><expr><call><name><name pos:line="215" pos:column="95">s2r</name><op:operator pos:line="215" pos:column="98">.</op:operator><name pos:line="215" pos:column="99">c_str</name></name><argument_list pos:line="215" pos:column="104">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="215" pos:column="108">lineBegin</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="119">lineEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></for>
							<expr_stmt><expr><op:operator pos:line="217" pos:column="57">delete</op:operator> <index pos:line="217" pos:column="64">[]</index> <name pos:line="217" pos:column="67">line</name></expr>;</expr_stmt>
						}</block></else></if>
					}</block></else></if>
					<expr_stmt><expr><call><name pos:line="220" pos:column="41">(<type:modifier pos:line="220" pos:column="42">*</type:modifier><name pos:line="220" pos:column="43">_ppEditView</name>)<op:operator pos:line="220" pos:column="55">-&gt;</op:operator><name pos:line="220" pos:column="57">execute</name></name><argument_list pos:line="220" pos:column="64">(<argument><expr><name pos:line="220" pos:column="65">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="221" pos:column="21">(<type:modifier pos:line="221" pos:column="22">*</type:modifier><name pos:line="221" pos:column="23">_ppEditView</name>)<op:operator pos:line="221" pos:column="35">-&gt;</op:operator><name pos:line="221" pos:column="37">getFocus</name></name><argument_list pos:line="221" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="222" pos:column="21">return <expr><name pos:line="222" pos:column="28">TRUE</name></expr>;</return>
                }</block>
				</case><case pos:line="224" pos:column="33">case <expr><name pos:line="224" pos:column="38">IDC_COL_TEXT_RADIO</name></expr> :
				</case><case pos:line="225" pos:column="33">case <expr><name pos:line="225" pos:column="38">IDC_COL_NUM_RADIO</name></expr> :
				<block pos:line="226" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="227" pos:column="41">switchTo</name><argument_list pos:line="227" pos:column="49">(<argument><expr><op:operator pos:line="227" pos:column="50">(</op:operator><name pos:line="227" pos:column="51">wParam</name> <op:operator pos:line="227" pos:column="58">==</op:operator> <name pos:line="227" pos:column="61">IDC_COL_TEXT_RADIO</name><op:operator pos:line="227" pos:column="79">)</op:operator><op:operator pos:line="227" pos:column="80">?</op:operator> <name pos:line="227" pos:column="82">activeText</name> <op:operator pos:line="227" pos:column="93">:</op:operator> <name pos:line="227" pos:column="95">activeNumeric</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="228" pos:column="41">return <expr><name pos:line="228" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="231" pos:column="33">default :
				<block pos:line="232" pos:column="33">{
					<switch pos:line="233" pos:column="41">switch <condition pos:line="233" pos:column="48">(<expr><call><name pos:line="233" pos:column="49">HIWORD</name><argument_list pos:line="233" pos:column="55">(<argument><expr><name pos:line="233" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr>)</condition>
					<block pos:line="234" pos:column="41">{
						<case pos:line="235" pos:column="49">case <expr><name pos:line="235" pos:column="54">EN_SETFOCUS</name></expr> :
						</case><case pos:line="236" pos:column="49">case <expr><name pos:line="236" pos:column="54">BN_SETFOCUS</name></expr> :
							<comment type="line" pos:line="237" pos:column="57">//updateLinesNumbers();</comment>
							<return pos:line="238" pos:column="57">return <expr><name pos:line="238" pos:column="64">TRUE</name></expr>;</return>
						</case><default pos:line="239" pos:column="49">default :
							<return pos:line="240" pos:column="57">return <expr><name pos:line="240" pos:column="64">TRUE</name></expr>;</return>
					</default>}</block></switch>
					<break pos:line="242" pos:column="41">break;</break>
				}</block>
			</default>}</block></switch>
		}</block>

		</case><default pos:line="247" pos:column="17">default :
			<return pos:line="248" pos:column="25">return <expr><name pos:line="248" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
	<comment type="line" pos:line="250" pos:column="9">//return FALSE;</comment>
}</block></function>

<function><type><name pos:line="253" pos:column="1">void</name></type> <name><name pos:line="253" pos:column="6">ColumnEditorDlg</name><op:operator pos:line="253" pos:column="21">::</op:operator><name pos:line="253" pos:column="23">switchTo</name></name><parameter_list pos:line="253" pos:column="31">(<param><decl><type><name pos:line="253" pos:column="32">bool</name></type> <name pos:line="253" pos:column="37">toText</name></decl></param>)</parameter_list>
<block pos:line="254" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="255" pos:column="9">HWND</name></type> <name pos:line="255" pos:column="14">hText</name> <init pos:line="255" pos:column="20">= <expr><call><name><op:operator pos:line="255" pos:column="22">::</op:operator><name pos:line="255" pos:column="24">GetDlgItem</name></name><argument_list pos:line="255" pos:column="34">(<argument><expr><name pos:line="255" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="255" pos:column="43">IDC_COL_TEXT_EDIT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="256" pos:column="9">::</op:operator><name pos:line="256" pos:column="11">EnableWindow</name></name><argument_list pos:line="256" pos:column="23">(<argument><expr><name pos:line="256" pos:column="24">hText</name></expr></argument>, <argument><expr><name pos:line="256" pos:column="31">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="257" pos:column="9">::</op:operator><name pos:line="257" pos:column="11">EnableWindow</name></name><argument_list pos:line="257" pos:column="23">(<argument><expr><call><name><op:operator pos:line="257" pos:column="24">::</op:operator><name pos:line="257" pos:column="26">GetDlgItem</name></name><argument_list pos:line="257" pos:column="36">(<argument><expr><name pos:line="257" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="45">IDC_COL_TEXT_GRP_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="257" pos:column="71">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="258" pos:column="9">::</op:operator><name pos:line="258" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="258" pos:column="29">(<argument><expr><name pos:line="258" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="38">IDC_COL_TEXT_RADIO</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="58">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="71">toText</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="258" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="260" pos:column="9">HWND</name></type> <name pos:line="260" pos:column="14">hNum</name> <init pos:line="260" pos:column="19">= <expr><call><name><op:operator pos:line="260" pos:column="21">::</op:operator><name pos:line="260" pos:column="23">GetDlgItem</name></name><argument_list pos:line="260" pos:column="33">(<argument><expr><name pos:line="260" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><name pos:line="260" pos:column="42">IDC_COL_INITNUM_EDIT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="261" pos:column="9">::</op:operator><name pos:line="261" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="261" pos:column="29">(<argument><expr><name pos:line="261" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="38">IDC_COL_NUM_RADIO</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="57">BM_SETCHECK</name></expr></argument>, <argument><expr><op:operator pos:line="261" pos:column="70">!</op:operator><name pos:line="261" pos:column="71">toText</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="261" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="262" pos:column="9">::</op:operator><name pos:line="262" pos:column="11">EnableWindow</name></name><argument_list pos:line="262" pos:column="23">(<argument><expr><call><name><op:operator pos:line="262" pos:column="24">::</op:operator><name pos:line="262" pos:column="26">GetDlgItem</name></name><argument_list pos:line="262" pos:column="36">(<argument><expr><name pos:line="262" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="45">IDC_COL_NUM_GRP_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="262" pos:column="70">!</op:operator><name pos:line="262" pos:column="71">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="263" pos:column="9">::</op:operator><name pos:line="263" pos:column="11">EnableWindow</name></name><argument_list pos:line="263" pos:column="23">(<argument><expr><call><name><op:operator pos:line="263" pos:column="24">::</op:operator><name pos:line="263" pos:column="26">GetDlgItem</name></name><argument_list pos:line="263" pos:column="36">(<argument><expr><name pos:line="263" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="263" pos:column="45">IDC_COL_INITNUM_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="263" pos:column="70">!</op:operator><name pos:line="263" pos:column="71">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="264" pos:column="9">::</op:operator><name pos:line="264" pos:column="11">EnableWindow</name></name><argument_list pos:line="264" pos:column="23">(<argument><expr><name pos:line="264" pos:column="24">hNum</name></expr></argument>, <argument><expr><op:operator pos:line="264" pos:column="30">!</op:operator><name pos:line="264" pos:column="31">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="265" pos:column="9">::</op:operator><name pos:line="265" pos:column="11">EnableWindow</name></name><argument_list pos:line="265" pos:column="23">(<argument><expr><call><name><op:operator pos:line="265" pos:column="24">::</op:operator><name pos:line="265" pos:column="26">GetDlgItem</name></name><argument_list pos:line="265" pos:column="36">(<argument><expr><name pos:line="265" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="45">IDC_COL_INCRNUM_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="265" pos:column="70">!</op:operator><name pos:line="265" pos:column="71">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="266" pos:column="9">::</op:operator><name pos:line="266" pos:column="11">EnableWindow</name></name><argument_list pos:line="266" pos:column="23">(<argument><expr><call><name><op:operator pos:line="266" pos:column="24">::</op:operator><name pos:line="266" pos:column="26">GetDlgItem</name></name><argument_list pos:line="266" pos:column="36">(<argument><expr><name pos:line="266" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="45">IDC_COL_INCREASENUM_EDIT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="266" pos:column="72">!</op:operator><name pos:line="266" pos:column="73">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="267" pos:column="9">::</op:operator><name pos:line="267" pos:column="11">EnableWindow</name></name><argument_list pos:line="267" pos:column="23">(<argument><expr><call><name><op:operator pos:line="267" pos:column="24">::</op:operator><name pos:line="267" pos:column="26">GetDlgItem</name></name><argument_list pos:line="267" pos:column="36">(<argument><expr><name pos:line="267" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="45">IDC_COL_FORMAT_GRP_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="267" pos:column="73">!</op:operator><name pos:line="267" pos:column="74">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="268" pos:column="9">::</op:operator><name pos:line="268" pos:column="11">EnableWindow</name></name><argument_list pos:line="268" pos:column="23">(<argument><expr><call><name><op:operator pos:line="268" pos:column="24">::</op:operator><name pos:line="268" pos:column="26">GetDlgItem</name></name><argument_list pos:line="268" pos:column="36">(<argument><expr><name pos:line="268" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="268" pos:column="45">IDC_COL_DEC_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="268" pos:column="65">!</op:operator><name pos:line="268" pos:column="66">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="269" pos:column="9">::</op:operator><name pos:line="269" pos:column="11">EnableWindow</name></name><argument_list pos:line="269" pos:column="23">(<argument><expr><call><name><op:operator pos:line="269" pos:column="24">::</op:operator><name pos:line="269" pos:column="26">GetDlgItem</name></name><argument_list pos:line="269" pos:column="36">(<argument><expr><name pos:line="269" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="45">IDC_COL_HEX_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="269" pos:column="65">!</op:operator><name pos:line="269" pos:column="66">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="270" pos:column="9">::</op:operator><name pos:line="270" pos:column="11">EnableWindow</name></name><argument_list pos:line="270" pos:column="23">(<argument><expr><call><name><op:operator pos:line="270" pos:column="24">::</op:operator><name pos:line="270" pos:column="26">GetDlgItem</name></name><argument_list pos:line="270" pos:column="36">(<argument><expr><name pos:line="270" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="270" pos:column="45">IDC_COL_OCT_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="270" pos:column="65">!</op:operator><name pos:line="270" pos:column="66">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="271" pos:column="9">::</op:operator><name pos:line="271" pos:column="11">EnableWindow</name></name><argument_list pos:line="271" pos:column="23">(<argument><expr><call><name><op:operator pos:line="271" pos:column="24">::</op:operator><name pos:line="271" pos:column="26">GetDlgItem</name></name><argument_list pos:line="271" pos:column="36">(<argument><expr><name pos:line="271" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="271" pos:column="45">IDC_COL_BIN_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="271" pos:column="65">!</op:operator><name pos:line="271" pos:column="66">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="272" pos:column="9">::</op:operator><name pos:line="272" pos:column="11">EnableWindow</name></name><argument_list pos:line="272" pos:column="23">(<argument><expr><call><name><op:operator pos:line="272" pos:column="24">::</op:operator><name pos:line="272" pos:column="26">GetDlgItem</name></name><argument_list pos:line="272" pos:column="36">(<argument><expr><name pos:line="272" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="45">IDC_COL_LEADZERO_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="272" pos:column="70">!</op:operator><name pos:line="272" pos:column="71">toText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="274" pos:column="9">::</op:operator><name pos:line="274" pos:column="11">SetFocus</name></name><argument_list pos:line="274" pos:column="19">(<argument><expr><name pos:line="274" pos:column="20">toText</name><op:operator pos:line="274" pos:column="26">?</op:operator><name pos:line="274" pos:column="27">hText</name><op:operator pos:line="274" pos:column="32">:</op:operator><name pos:line="274" pos:column="33">hNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="277" pos:column="1">UCHAR</name></type> <name><name pos:line="277" pos:column="7">ColumnEditorDlg</name><op:operator pos:line="277" pos:column="22">::</op:operator><name pos:line="277" pos:column="24">getFormat</name></name><parameter_list pos:line="277" pos:column="33">()</parameter_list> 
<block pos:line="278" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="279" pos:column="9">bool</name></type> <name pos:line="279" pos:column="14">isLeadingZeros</name> <init pos:line="279" pos:column="29">= <expr><op:operator pos:line="279" pos:column="31">(</op:operator><name pos:line="279" pos:column="32">BST_CHECKED</name> <op:operator pos:line="279" pos:column="44">==</op:operator> <call><name><op:operator pos:line="279" pos:column="47">::</op:operator><name pos:line="279" pos:column="49">SendDlgItemMessage</name></name><argument_list pos:line="279" pos:column="67">(<argument><expr><name pos:line="279" pos:column="68">_hSelf</name></expr></argument>, <argument><expr><name pos:line="279" pos:column="76">IDC_COL_LEADZERO_CHECK</name></expr></argument>, <argument><expr><name pos:line="279" pos:column="100">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="279" pos:column="113">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="279" pos:column="116">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="279" pos:column="118">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="280" pos:column="9">UCHAR</name></type> <name pos:line="280" pos:column="15">f</name> <init pos:line="280" pos:column="17">= <expr><lit:literal type="number" pos:line="280" pos:column="19">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="280" pos:column="22">// Dec by default</comment>
	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">BST_CHECKED</name> <op:operator pos:line="281" pos:column="25">==</op:operator> <call><name><op:operator pos:line="281" pos:column="28">::</op:operator><name pos:line="281" pos:column="30">SendDlgItemMessage</name></name><argument_list pos:line="281" pos:column="48">(<argument><expr><name pos:line="281" pos:column="49">_hSelf</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="57">IDC_COL_HEX_RADIO</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="76">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="281" pos:column="89">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="281" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="281" pos:column="95">
		<expr_stmt><expr><name pos:line="282" pos:column="17">f</name> <op:operator pos:line="282" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="282" pos:column="21">1</lit:literal></expr>;</expr_stmt></then>
	<else pos:line="283" pos:column="9">else <if pos:line="283" pos:column="14">if <condition pos:line="283" pos:column="17">(<expr><name pos:line="283" pos:column="18">BST_CHECKED</name> <op:operator pos:line="283" pos:column="30">==</op:operator> <call><name><op:operator pos:line="283" pos:column="33">::</op:operator><name pos:line="283" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="283" pos:column="53">(<argument><expr><name pos:line="283" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="62">IDC_COL_OCT_RADIO</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="81">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="283" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="283" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="283" pos:column="100">
		<expr_stmt><expr><name pos:line="284" pos:column="17">f</name> <op:operator pos:line="284" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="284" pos:column="21">2</lit:literal></expr>;</expr_stmt></then>
	<else pos:line="285" pos:column="9">else <if pos:line="285" pos:column="14">if <condition pos:line="285" pos:column="17">(<expr><name pos:line="285" pos:column="18">BST_CHECKED</name> <op:operator pos:line="285" pos:column="30">==</op:operator> <call><name><op:operator pos:line="285" pos:column="33">::</op:operator><name pos:line="285" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="285" pos:column="53">(<argument><expr><name pos:line="285" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="285" pos:column="62">IDC_COL_BIN_RADIO</name></expr></argument>, <argument><expr><name pos:line="285" pos:column="81">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="285" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="285" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="285" pos:column="100">
		<expr_stmt><expr><name pos:line="286" pos:column="17">f</name> <op:operator pos:line="286" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="286" pos:column="21">3</lit:literal></expr>;</expr_stmt></then></if></else></if></else></if>
	<return pos:line="287" pos:column="9">return <expr><op:operator pos:line="287" pos:column="16">(</op:operator><name pos:line="287" pos:column="17">f</name> <op:operator pos:line="287" pos:column="19">|</op:operator> <op:operator pos:line="287" pos:column="21">(</op:operator><name pos:line="287" pos:column="22">isLeadingZeros</name><op:operator pos:line="287" pos:column="36">?</op:operator><name pos:line="287" pos:column="37">MASK_ZERO_LEADING</name><op:operator pos:line="287" pos:column="54">:</op:operator><lit:literal type="number" pos:line="287" pos:column="55">0</lit:literal><op:operator pos:line="287" pos:column="56">)</op:operator><op:operator pos:line="287" pos:column="57">)</op:operator></expr>;</return>
}</block></function>
</unit>
