<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ProjectPanel\TreeView.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>

<cpp:ifndef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifndef</cpp:directive> <name pos:line="28" pos:column="9">TREE_VIEW_H</name></cpp:ifndef>
<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">TREE_VIEW_H</name></cpp:macro></cpp:define>

<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"window.h"</lit:literal></cpp:file></cpp:include>

<class pos:line="33" pos:column="1">class <name pos:line="33" pos:column="7">TreeView</name> <super pos:line="33" pos:column="16">: <specifier pos:line="33" pos:column="18">public</specifier> <name pos:line="33" pos:column="25">Window</name></super>
<block pos:line="34" pos:column="1">{<private type="default" pos:line="34" pos:column="2">
</private><public pos:line="35" pos:column="1">public:
	<constructor><name pos:line="36" pos:column="9">TreeView</name><parameter_list pos:line="36" pos:column="17">()</parameter_list> <member_list pos:line="36" pos:column="20">: <call><name pos:line="36" pos:column="22">Window</name><argument_list pos:line="36" pos:column="28">()</argument_list></call><op:operator pos:line="36" pos:column="30">,</op:operator> <call><name pos:line="36" pos:column="32">_isItemDragged</name><argument_list pos:line="36" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="36" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="36" pos:column="54">{}</block></constructor><empty_stmt pos:line="36" pos:column="56">;</empty_stmt>

	<destructor><specifier pos:line="38" pos:column="9">virtual</specifier> <name pos:line="38" pos:column="17">~<name pos:line="38" pos:column="18">TreeView</name></name><parameter_list pos:line="38" pos:column="26">()</parameter_list> <block pos:line="38" pos:column="29">{}</block></destructor><empty_stmt pos:line="38" pos:column="31">;</empty_stmt>
	<function_decl><type><specifier pos:line="39" pos:column="9">virtual</specifier> <name pos:line="39" pos:column="17">void</name></type> <name pos:line="39" pos:column="22">init</name><parameter_list pos:line="39" pos:column="26">(<param><decl><type><name pos:line="39" pos:column="27">HINSTANCE</name></type> <name pos:line="39" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="44">HWND</name></type> <name pos:line="39" pos:column="49">parent</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="57">int</name></type> <name pos:line="39" pos:column="61">treeViewID</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="40" pos:column="9">virtual</specifier> <name pos:line="40" pos:column="17">void</name></type> <name pos:line="40" pos:column="22">destroy</name><parameter_list pos:line="40" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="41" pos:column="9">HTREEITEM</name></type> <name pos:line="41" pos:column="19">addItem</name><parameter_list pos:line="41" pos:column="26">(<param><decl><type><specifier pos:line="41" pos:column="27">const</specifier> <name pos:line="41" pos:column="33">TCHAR</name> <type:modifier pos:line="41" pos:column="39">*</type:modifier></type><name pos:line="41" pos:column="40">itemName</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="50">HTREEITEM</name></type> <name pos:line="41" pos:column="60">hParentItem</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="73">int</name></type> <name pos:line="41" pos:column="77">iImage</name></decl></param>, <param><decl><type><specifier pos:line="41" pos:column="85">const</specifier> <name pos:line="41" pos:column="91">TCHAR</name> <type:modifier pos:line="41" pos:column="97">*</type:modifier></type><name pos:line="41" pos:column="98">filePath</name> <init pos:line="41" pos:column="107">= <expr><name pos:line="41" pos:column="109">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="42" pos:column="9">void</name></type> <name pos:line="42" pos:column="14">removeItem</name><parameter_list pos:line="42" pos:column="24">(<param><decl><type><name pos:line="42" pos:column="25">HTREEITEM</name></type> <name pos:line="42" pos:column="35">hTreeItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="43" pos:column="9">void</name></type> <name pos:line="43" pos:column="14">removeAllItems</name><parameter_list pos:line="43" pos:column="28">()</parameter_list>;</function_decl>
	
	<function><type><name pos:line="45" pos:column="9">HTREEITEM</name></type> <name pos:line="45" pos:column="19">getChildFrom</name><parameter_list pos:line="45" pos:column="31">(<param><decl><type><name pos:line="45" pos:column="32">HTREEITEM</name></type> <name pos:line="45" pos:column="42">hTreeItem</name></decl></param>)</parameter_list> <specifier pos:line="45" pos:column="53">const</specifier> <block pos:line="45" pos:column="59">{
		<return pos:line="46" pos:column="17">return <expr><call><name pos:line="46" pos:column="24">TreeView_GetChild</name><argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="47" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="48" pos:column="9">HTREEITEM</name></type> <name pos:line="48" pos:column="19">getSelection</name><parameter_list pos:line="48" pos:column="31">()</parameter_list> <specifier pos:line="48" pos:column="34">const</specifier> <block pos:line="48" pos:column="40">{
		<return pos:line="49" pos:column="17">return <expr><call><name pos:line="49" pos:column="24">TreeView_GetSelection</name><argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="50" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="51" pos:column="9">bool</name></type> <name pos:line="51" pos:column="14">selectItem</name><parameter_list pos:line="51" pos:column="24">(<param><decl><type><name pos:line="51" pos:column="25">HTREEITEM</name></type> <name pos:line="51" pos:column="35">hTreeItem2Select</name></decl></param>)</parameter_list> <specifier pos:line="51" pos:column="53">const</specifier> <block pos:line="51" pos:column="59">{
		<return pos:line="52" pos:column="17">return <expr><call><name pos:line="52" pos:column="24">TreeView_SelectItem</name><argument_list pos:line="52" pos:column="43">(<argument><expr><name pos:line="52" pos:column="44">_hSelf</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">hTreeItem2Select</name></expr></argument>)</argument_list></call> <op:operator pos:line="52" pos:column="70">==</op:operator> <name pos:line="52" pos:column="73">TRUE</name></expr>;</return>
	}</block></function><empty_stmt pos:line="53" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="54" pos:column="9">HTREEITEM</name></type> <name pos:line="54" pos:column="19">getRoot</name><parameter_list pos:line="54" pos:column="26">()</parameter_list> <specifier pos:line="54" pos:column="29">const</specifier> <block pos:line="54" pos:column="35">{
		<return pos:line="55" pos:column="17">return <expr><call><name pos:line="55" pos:column="24">TreeView_GetRoot</name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">_hSelf</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="56" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="57" pos:column="9">HTREEITEM</name></type> <name pos:line="57" pos:column="19">getParent</name><parameter_list pos:line="57" pos:column="28">(<param><decl><type><name pos:line="57" pos:column="29">HTREEITEM</name></type> <name pos:line="57" pos:column="39">hItem</name></decl></param>)</parameter_list> <specifier pos:line="57" pos:column="46">const</specifier> <block pos:line="57" pos:column="52">{
		<return pos:line="58" pos:column="17">return <expr><call><name pos:line="58" pos:column="24">TreeView_GetParent</name><argument_list pos:line="58" pos:column="42">(<argument><expr><name pos:line="58" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">hItem</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="59" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="60" pos:column="9">HTREEITEM</name></type> <name pos:line="60" pos:column="19">getNextSibling</name><parameter_list pos:line="60" pos:column="33">(<param><decl><type><name pos:line="60" pos:column="34">HTREEITEM</name></type> <name pos:line="60" pos:column="44">hItem</name></decl></param>)</parameter_list> <specifier pos:line="60" pos:column="51">const</specifier> <block pos:line="60" pos:column="57">{
		<return pos:line="61" pos:column="17">return <expr><call><name pos:line="61" pos:column="24">TreeView_GetNextSibling</name><argument_list pos:line="61" pos:column="47">(<argument><expr><name pos:line="61" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">hItem</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="62" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="63" pos:column="9">HTREEITEM</name></type> <name pos:line="63" pos:column="19">getPrevSibling</name><parameter_list pos:line="63" pos:column="33">(<param><decl><type><name pos:line="63" pos:column="34">HTREEITEM</name></type> <name pos:line="63" pos:column="44">hItem</name></decl></param>)</parameter_list> <specifier pos:line="63" pos:column="51">const</specifier> <block pos:line="63" pos:column="57">{
		<return pos:line="64" pos:column="17">return <expr><call><name pos:line="64" pos:column="24">TreeView_GetPrevSibling</name><argument_list pos:line="64" pos:column="47">(<argument><expr><name pos:line="64" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="56">hItem</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="65" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="66" pos:column="9">void</name></type> <name pos:line="66" pos:column="14">expand</name><parameter_list pos:line="66" pos:column="20">(<param><decl><type><name pos:line="66" pos:column="21">HTREEITEM</name></type> <name pos:line="66" pos:column="31">hItem</name></decl></param>)</parameter_list> <specifier pos:line="66" pos:column="38">const</specifier> <block pos:line="66" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">TreeView_Expand</name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="41">hItem</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">TVE_EXPAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="68" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="69" pos:column="9">void</name></type> <name pos:line="69" pos:column="14">toggleExpandCollapse</name><parameter_list pos:line="69" pos:column="34">(<param><decl><type><name pos:line="69" pos:column="35">HTREEITEM</name></type> <name pos:line="69" pos:column="45">hItem</name></decl></param>)</parameter_list> <specifier pos:line="69" pos:column="52">const</specifier> <block pos:line="69" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">TreeView_Expand</name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="41">hItem</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="48">TVE_TOGGLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="71" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="72" pos:column="9">void</name></type> <name pos:line="72" pos:column="14">setItemImage</name><parameter_list pos:line="72" pos:column="26">(<param><decl><type><name pos:line="72" pos:column="27">HTREEITEM</name></type> <name pos:line="72" pos:column="37">hTreeItem</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="48">int</name></type> <name pos:line="72" pos:column="52">iImage</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="60">int</name></type> <name pos:line="72" pos:column="64">iSelectedImage</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="74" pos:column="9">// Drag and Drop operations</comment>
	<function_decl><type><name pos:line="75" pos:column="9">void</name></type> <name pos:line="75" pos:column="14">beginDrag</name><parameter_list pos:line="75" pos:column="23">(<param><decl><type><name pos:line="75" pos:column="24">NMTREEVIEW</name><type:modifier pos:line="75" pos:column="34">*</type:modifier></type> <name pos:line="75" pos:column="36">tv</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="76" pos:column="9">void</name></type> <name pos:line="76" pos:column="14">dragItem</name><parameter_list pos:line="76" pos:column="22">(<param><decl><type><name pos:line="76" pos:column="23">HWND</name></type> <name pos:line="76" pos:column="28">parentHandle</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="42">int</name></type> <name pos:line="76" pos:column="46">x</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="49">int</name></type> <name pos:line="76" pos:column="53">y</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="77" pos:column="9">bool</name></type> <name pos:line="77" pos:column="14">isDragging</name><parameter_list pos:line="77" pos:column="24">()</parameter_list> <specifier pos:line="77" pos:column="27">const</specifier> <block pos:line="77" pos:column="33">{
		<return pos:line="78" pos:column="17">return <expr><name pos:line="78" pos:column="24">_isItemDragged</name></expr>;</return>
	}</block></function><empty_stmt pos:line="79" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="80" pos:column="9">bool</name></type> <name pos:line="80" pos:column="14">dropItem</name><parameter_list pos:line="80" pos:column="22">()</parameter_list>;</function_decl>
	<function><type><name pos:line="81" pos:column="9">void</name></type> <name pos:line="81" pos:column="14">addCanNotDropInList</name><parameter_list pos:line="81" pos:column="33">(<param><decl><type><name pos:line="81" pos:column="34">int</name></type> <name pos:line="81" pos:column="38">val2set</name></decl></param>)</parameter_list> <block pos:line="81" pos:column="47">{
		<expr_stmt><expr><call><name><name pos:line="82" pos:column="17">_canNotDropInList</name><op:operator pos:line="82" pos:column="34">.</op:operator><name pos:line="82" pos:column="35">push_back</name></name><argument_list pos:line="82" pos:column="44">(<argument><expr><name pos:line="82" pos:column="45">val2set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="83" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="85" pos:column="9">void</name></type> <name pos:line="85" pos:column="14">addCanNotDragOutList</name><parameter_list pos:line="85" pos:column="34">(<param><decl><type><name pos:line="85" pos:column="35">int</name></type> <name pos:line="85" pos:column="39">val2set</name></decl></param>)</parameter_list> <block pos:line="85" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="86" pos:column="17">_canNotDragOutList</name><op:operator pos:line="86" pos:column="35">.</op:operator><name pos:line="86" pos:column="36">push_back</name></name><argument_list pos:line="86" pos:column="45">(<argument><expr><name pos:line="86" pos:column="46">val2set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="87" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="89" pos:column="9">bool</name></type> <name pos:line="89" pos:column="14">moveDown</name><parameter_list pos:line="89" pos:column="22">(<param><decl><type><name pos:line="89" pos:column="23">HTREEITEM</name></type> <name pos:line="89" pos:column="33">itemToMove</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="90" pos:column="9">bool</name></type> <name pos:line="90" pos:column="14">moveUp</name><parameter_list pos:line="90" pos:column="20">(<param><decl><type><name pos:line="90" pos:column="21">HTREEITEM</name></type> <name pos:line="90" pos:column="31">itemToMove</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="91" pos:column="9">bool</name></type> <name pos:line="91" pos:column="14">swapTreeViewItem</name><parameter_list pos:line="91" pos:column="30">(<param><decl><type><name pos:line="91" pos:column="31">HTREEITEM</name></type> <name pos:line="91" pos:column="41">itemGoDown</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="53">HTREEITEM</name></type> <name pos:line="91" pos:column="63">itemGoUp</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="93" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">WNDPROC</name></type> <name pos:line="94" pos:column="17">_defaultProc</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="95" pos:column="9">LRESULT</name></type> <name pos:line="95" pos:column="17">runProc</name><parameter_list pos:line="95" pos:column="24">(<param><decl><type><name pos:line="95" pos:column="25">HWND</name></type> <name pos:line="95" pos:column="30">hwnd</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="36">UINT</name></type> <name pos:line="95" pos:column="41">Message</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="50">WPARAM</name></type> <name pos:line="95" pos:column="57">wParam</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="65">LPARAM</name></type> <name pos:line="95" pos:column="72">lParam</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><specifier pos:line="97" pos:column="9">static</specifier> <name pos:line="97" pos:column="16">LRESULT</name> <name pos:line="97" pos:column="24">CALLBACK</name></type> <name pos:line="97" pos:column="33">staticProc</name><parameter_list pos:line="97" pos:column="43">(<param><decl><type><name pos:line="97" pos:column="44">HWND</name></type> <name pos:line="97" pos:column="49">hwnd</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="55">UINT</name></type> <name pos:line="97" pos:column="60">Message</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="69">WPARAM</name></type> <name pos:line="97" pos:column="76">wParam</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="84">LPARAM</name></type> <name pos:line="97" pos:column="91">lParam</name></decl></param>)</parameter_list> <block pos:line="97" pos:column="99">{
		<return pos:line="98" pos:column="17">return <expr><op:operator pos:line="98" pos:column="24">(</op:operator><op:operator pos:line="98" pos:column="25">(</op:operator><op:operator pos:line="98" pos:column="26">(</op:operator><name pos:line="98" pos:column="27">TreeView</name> <op:operator pos:line="98" pos:column="36">*</op:operator><op:operator pos:line="98" pos:column="37">)</op:operator><op:operator pos:line="98" pos:column="38">(</op:operator><call><name><op:operator pos:line="98" pos:column="39">::</op:operator><name pos:line="98" pos:column="41">GetWindowLongPtr</name></name><argument_list pos:line="98" pos:column="57">(<argument><expr><name pos:line="98" pos:column="58">hwnd</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="64">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="77">)</op:operator><op:operator pos:line="98" pos:column="78">)</op:operator><op:operator pos:line="98" pos:column="79">-&gt;</op:operator><call><name pos:line="98" pos:column="81">runProc</name><argument_list pos:line="98" pos:column="88">(<argument><expr><name pos:line="98" pos:column="89">hwnd</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="95">Message</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="104">wParam</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="112">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="119">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="99" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="100" pos:column="9">void</name></type> <name pos:line="100" pos:column="14">cleanSubEntries</name><parameter_list pos:line="100" pos:column="29">(<param><decl><type><name pos:line="100" pos:column="30">HTREEITEM</name></type> <name pos:line="100" pos:column="40">hTreeItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="101" pos:column="9">void</name></type> <name pos:line="101" pos:column="14">dupTree</name><parameter_list pos:line="101" pos:column="21">(<param><decl><type><name pos:line="101" pos:column="22">HTREEITEM</name></type> <name pos:line="101" pos:column="32">hTree2Dup</name></decl></param>, <param><decl><type><name pos:line="101" pos:column="43">HTREEITEM</name></type> <name pos:line="101" pos:column="53">hParentItem</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="103" pos:column="9">// Drag and Drop operations</comment>
	<decl_stmt><decl><type><name pos:line="104" pos:column="9">HTREEITEM</name></type> <name pos:line="104" pos:column="19">_draggedItem</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="105" pos:column="9">HIMAGELIST</name></type> <name pos:line="105" pos:column="20">_draggedImageList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="106" pos:column="9">bool</name></type> <name pos:line="106" pos:column="14">_isItemDragged</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="107" pos:column="9">std</name><op:operator pos:line="107" pos:column="12">::</op:operator><name><name pos:line="107" pos:column="14">vector</name><argument_list pos:line="107" pos:column="20">&lt;<argument><expr><name pos:line="107" pos:column="21">int</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="107" pos:column="26">_canNotDragOutList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="108" pos:column="9">std</name><op:operator pos:line="108" pos:column="12">::</op:operator><name><name pos:line="108" pos:column="14">vector</name><argument_list pos:line="108" pos:column="20">&lt;<argument><expr><name pos:line="108" pos:column="21">int</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="108" pos:column="26">_canNotDropInList</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="109" pos:column="9">bool</name></type> <name pos:line="109" pos:column="14">canBeDropped</name><parameter_list pos:line="109" pos:column="26">(<param><decl><type><name pos:line="109" pos:column="27">HTREEITEM</name></type> <name pos:line="109" pos:column="37">draggedItem</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="50">HTREEITEM</name></type> <name pos:line="109" pos:column="60">targetItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="110" pos:column="9">void</name></type> <name pos:line="110" pos:column="14">moveTreeViewItem</name><parameter_list pos:line="110" pos:column="30">(<param><decl><type><name pos:line="110" pos:column="31">HTREEITEM</name></type> <name pos:line="110" pos:column="41">draggedItem</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="54">HTREEITEM</name></type> <name pos:line="110" pos:column="64">targetItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="111" pos:column="9">bool</name></type> <name pos:line="111" pos:column="14">isParent</name><parameter_list pos:line="111" pos:column="22">(<param><decl><type><name pos:line="111" pos:column="23">HTREEITEM</name></type> <name pos:line="111" pos:column="33">targetItem</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="45">HTREEITEM</name></type> <name pos:line="111" pos:column="55">draggedItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="112" pos:column="9">bool</name></type> <name pos:line="112" pos:column="14">isDescendant</name><parameter_list pos:line="112" pos:column="26">(<param><decl><type><name pos:line="112" pos:column="27">HTREEITEM</name></type> <name pos:line="112" pos:column="37">targetItem</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="49">HTREEITEM</name></type> <name pos:line="112" pos:column="59">draggedItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="113" pos:column="9">bool</name></type> <name pos:line="113" pos:column="14">canDragOut</name><parameter_list pos:line="113" pos:column="24">(<param><decl><type><name pos:line="113" pos:column="25">HTREEITEM</name></type> <name pos:line="113" pos:column="35">targetItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="114" pos:column="9">bool</name></type> <name pos:line="114" pos:column="14">canDropIn</name><parameter_list pos:line="114" pos:column="23">(<param><decl><type><name pos:line="114" pos:column="24">HTREEITEM</name></type> <name pos:line="114" pos:column="34">targetItem</name></decl></param>)</parameter_list>;</function_decl>
</protected>}</block>;</class>


<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="118" pos:column="8">// TREE_VIEW_H</comment>
</unit>
