<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\macosx\ScintillaListBox.cxx" pos:tabs="8" pos:line="1" pos:column="1">
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="2" pos:column="10">"ScintillaMacOSX.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="3" pos:column="10">"ScintillaListBox.h"</lit:literal></cpp:file></cpp:include>

<using pos:line="5" pos:column="1">using namespace <name pos:line="5" pos:column="17">Scintilla</name>;</using>

<decl_stmt><decl><type><specifier pos:line="7" pos:column="1">const</specifier> <name pos:line="7" pos:column="7">CFStringRef</name></type> <name><name pos:line="7" pos:column="19">ScintillaListBox</name><op:operator pos:line="7" pos:column="35">::</op:operator><name pos:line="7" pos:column="37">kScintillaListBoxClassID</name></name> <init pos:line="7" pos:column="62">= <expr><call><name pos:line="7" pos:column="64">CFSTR</name><argument_list pos:line="7" pos:column="69">( <argument><expr><lit:literal type="string" pos:line="7" pos:column="71">"org.scintilla.listbox"</lit:literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="8" pos:column="1">const</specifier> <name pos:line="8" pos:column="7">ControlKind</name></type> <name><name pos:line="8" pos:column="19">ScintillaListBox</name><op:operator pos:line="8" pos:column="35">::</op:operator><name pos:line="8" pos:column="37">kScintillaListBoxKind</name></name> <init pos:line="8" pos:column="59">= <expr><block pos:line="8" pos:column="61">{ <expr><lit:literal type="char" pos:line="8" pos:column="63">'ejon'</lit:literal></expr>, <expr><lit:literal type="char" pos:line="8" pos:column="71">'Sclb'</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>

<constructor><name><name pos:line="10" pos:column="1">ScintillaListBox</name><op:operator pos:line="10" pos:column="17">::</op:operator><name pos:line="10" pos:column="19">ScintillaListBox</name></name><parameter_list pos:line="10" pos:column="35">( <param><decl><type><name pos:line="10" pos:column="37">void</name><type:modifier pos:line="10" pos:column="41">*</type:modifier></type> <name pos:line="10" pos:column="43">windowid</name></decl></param> )</parameter_list> <member_list pos:line="10" pos:column="54">:
		<call><name pos:line="11" pos:column="17">TView</name><argument_list pos:line="11" pos:column="22">( <argument><expr><call><name><name pos:line="11" pos:column="24">reinterpret_cast</name><argument_list pos:line="11" pos:column="40">&lt;<argument><expr><name pos:line="11" pos:column="41">HIViewRef</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="51">( <argument><expr><name pos:line="11" pos:column="53">windowid</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call>
</member_list><block pos:line="12" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ActivateInterface</name><argument_list pos:line="13" pos:column="20">( <argument><expr><name pos:line="13" pos:column="22">kMouse</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <comment type="line" pos:line="14" pos:column="3">//  debugPrint = true;</comment>
}</block></constructor>

<function><type><name pos:line="17" pos:column="1">void</name></type> <name><name pos:line="17" pos:column="6">ScintillaListBox</name><op:operator pos:line="17" pos:column="22">::</op:operator><name pos:line="17" pos:column="24">Draw</name></name><parameter_list pos:line="17" pos:column="28">(
	<param><decl><type><name pos:line="18" pos:column="9">RgnHandle</name></type></decl></param>			<comment type="block" pos:line="18" pos:column="41">/*inLimitRgn*/</comment>,
	<param><decl><type><name pos:line="19" pos:column="9">CGContextRef</name></type>		<name pos:line="19" pos:column="33">inContext</name></decl></param> )</parameter_list>
<block pos:line="20" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">Rect</name></type> <name pos:line="21" pos:column="14">contentBounds</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">GetControlBounds</name><argument_list pos:line="22" pos:column="25">(<argument><expr><call><name pos:line="22" pos:column="26">GetViewRef</name><argument_list pos:line="22" pos:column="36">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="22" pos:column="40">&amp;</op:operator><name pos:line="22" pos:column="41">contentBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="24" pos:column="9">HIRect</name></type> <name pos:line="24" pos:column="16">controlFrame</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">HIViewGetFrame</name><argument_list pos:line="25" pos:column="23">( <argument><expr><call><name pos:line="25" pos:column="25">GetViewRef</name><argument_list pos:line="25" pos:column="35">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="25" pos:column="39">&amp;</op:operator><name pos:line="25" pos:column="40">controlFrame</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="27" pos:column="9">// what is the global pos?</comment>
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">Surface</name> <type:modifier pos:line="28" pos:column="17">*</type:modifier></type><name pos:line="28" pos:column="18">surfaceWindow</name> <init pos:line="28" pos:column="32">= <expr><call><name><name pos:line="28" pos:column="34">Surface</name><op:operator pos:line="28" pos:column="41">::</op:operator><name pos:line="28" pos:column="43">Allocate</name></name><argument_list pos:line="28" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">surfaceWindow</name></expr>)</condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
		<expr_stmt><expr><call><name><name pos:line="30" pos:column="17">surfaceWindow</name><op:operator pos:line="30" pos:column="30">-&gt;</op:operator><name pos:line="30" pos:column="32">Init</name></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">inContext</name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="48">GetViewRef</name><argument_list pos:line="30" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="31" pos:column="17">ctip</name><op:operator pos:line="31" pos:column="21">-&gt;</op:operator><name pos:line="31" pos:column="23">PaintCT</name></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="32" pos:column="17">surfaceWindow</name><op:operator pos:line="32" pos:column="30">-&gt;</op:operator><name pos:line="32" pos:column="32">Release</name></name><argument_list pos:line="32" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="33" pos:column="17">delete</op:operator> <name pos:line="33" pos:column="24">surfaceWindow</name></expr>;</expr_stmt>
	}</block></then></if>

}</block></function>

<function><type><name pos:line="38" pos:column="1">ControlPartCode</name></type> <name><name pos:line="38" pos:column="17">ScintillaListBox</name><op:operator pos:line="38" pos:column="33">::</op:operator><name pos:line="38" pos:column="35">HitTest</name></name><parameter_list pos:line="38" pos:column="42">( <param><decl><type><specifier pos:line="38" pos:column="44">const</specifier> <name pos:line="38" pos:column="50">HIPoint</name><type:modifier pos:line="38" pos:column="57">&amp;</type:modifier></type> <name pos:line="38" pos:column="59">where</name></decl></param> )</parameter_list>
<block pos:line="39" pos:column="1">{
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">( <expr><call><name pos:line="40" pos:column="14">CGRectContainsPoint</name><argument_list pos:line="40" pos:column="33">( <argument><expr><call><name pos:line="40" pos:column="35">Bounds</name><argument_list pos:line="40" pos:column="41">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">where</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="40" pos:column="54">
		<return pos:line="41" pos:column="17">return <expr><lit:literal type="number" pos:line="41" pos:column="24">1</lit:literal></expr>;</return></then>
	<else pos:line="42" pos:column="9">else
		<return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">kControlNoPart</name></expr>;</return></else></if>
}</block></function>

<function><type><name pos:line="46" pos:column="1">OSStatus</name></type> <name><name pos:line="46" pos:column="10">ScintillaListBox</name><op:operator pos:line="46" pos:column="26">::</op:operator><name pos:line="46" pos:column="28">MouseDown</name></name><parameter_list pos:line="46" pos:column="37">(<param><decl><type><name pos:line="46" pos:column="38">HIPoint</name><type:modifier pos:line="46" pos:column="45">&amp;</type:modifier></type> <name pos:line="46" pos:column="47">location</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="57">UInt32</name></type></decl></param> <comment type="block" pos:line="46" pos:column="64">/*inKeyModifiers*/</comment>, <param><decl><type><name pos:line="46" pos:column="84">EventMouseButton</name></type> <name pos:line="46" pos:column="101">button</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="109">UInt32</name></type></decl></param> <comment type="block" pos:line="46" pos:column="116">/*inClickCount*/</comment> )</parameter_list>
<block pos:line="47" pos:column="1">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">( <expr><name pos:line="48" pos:column="10">button</name> <op:operator pos:line="48" pos:column="17">!=</op:operator> <name pos:line="48" pos:column="20">kEventMouseButtonPrimary</name></expr> )</condition><then pos:line="48" pos:column="46"> <return pos:line="48" pos:column="47">return <expr><name pos:line="48" pos:column="54">eventNotHandledErr</name></expr>;</return></then></if>
    <decl_stmt><decl><type><name pos:line="49" pos:column="5">ListBox</name><type:modifier pos:line="49" pos:column="12">*</type:modifier></type> <name pos:line="49" pos:column="14">ctip</name> <init pos:line="49" pos:column="19">= <expr><name pos:line="49" pos:column="21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">ScintillaMacOSX</name> <type:modifier pos:line="50" pos:column="21">*</type:modifier></type><name pos:line="50" pos:column="22">sciThis</name> <init pos:line="50" pos:column="30">= <expr><name pos:line="50" pos:column="32">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">OSStatus</name></type> <name pos:line="51" pos:column="14">err</name> <init pos:line="51" pos:column="18">= <expr><call><name pos:line="51" pos:column="20">GetControlProperty</name><argument_list pos:line="51" pos:column="38">( <argument><expr><call><name pos:line="51" pos:column="40">GetViewRef</name><argument_list pos:line="51" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">scintillaListBoxType</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="51" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="79">sizeof<argument_list pos:line="51" pos:column="85">( <argument><expr><name pos:line="51" pos:column="87">ctip</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="51" pos:column="95">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="51" pos:column="101">&amp;</op:operator><name pos:line="51" pos:column="102">ctip</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">err</name> <op:operator pos:line="52" pos:column="9">=</op:operator> <call><name pos:line="52" pos:column="11">GetControlProperty</name><argument_list pos:line="52" pos:column="29">( <argument><expr><call><name pos:line="52" pos:column="31">GetViewRef</name><argument_list pos:line="52" pos:column="41">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">scintillaMacOSType</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="52" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="68">sizeof<argument_list pos:line="52" pos:column="74">( <argument><expr><name pos:line="52" pos:column="76">sciThis</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="52" pos:column="87">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="52" pos:column="93">&amp;</op:operator><name pos:line="52" pos:column="94">sciThis</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="53" pos:column="5">ctip</name><op:operator pos:line="53" pos:column="9">-&gt;</op:operator><name pos:line="53" pos:column="11">MouseClick</name></name><argument_list pos:line="53" pos:column="21">( <argument><expr><call><name><name pos:line="53" pos:column="23">Scintilla</name><op:operator pos:line="53" pos:column="32">::</op:operator><name pos:line="53" pos:column="34">Point</name></name><argument_list pos:line="53" pos:column="39">( <argument><expr><call><name><name pos:line="53" pos:column="41">static_cast</name><argument_list pos:line="53" pos:column="52">&lt;<argument><expr><name pos:line="53" pos:column="53">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="53" pos:column="57">( <argument><expr><name><name pos:line="53" pos:column="59">location</name><op:operator pos:line="53" pos:column="67">.</op:operator><name pos:line="53" pos:column="68">x</name></name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="53" pos:column="73">static_cast</name><argument_list pos:line="53" pos:column="84">&lt;<argument><expr><name pos:line="53" pos:column="85">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="53" pos:column="89">( <argument><expr><name><name pos:line="53" pos:column="91">location</name><op:operator pos:line="53" pos:column="99">.</op:operator><name pos:line="53" pos:column="100">y</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="54" pos:column="5">sciThis</name><op:operator pos:line="54" pos:column="12">-&gt;</op:operator><name pos:line="54" pos:column="14">ListBoxClick</name></name><argument_list pos:line="54" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">noErr</name></expr>;</return>
}</block></function>

<function><type><name pos:line="58" pos:column="1">OSStatus</name></type> <name><name pos:line="58" pos:column="10">ScintillaListBox</name><op:operator pos:line="58" pos:column="26">::</op:operator><name pos:line="58" pos:column="28">MouseUp</name></name><parameter_list pos:line="58" pos:column="35">(<param><decl><type><name pos:line="58" pos:column="36">HIPoint</name><type:modifier pos:line="58" pos:column="43">&amp;</type:modifier></type></decl></param> <comment type="block" pos:line="58" pos:column="45">/*inMouseLocation*/</comment>, <param><decl><type><name pos:line="58" pos:column="66">UInt32</name></type></decl></param> <comment type="block" pos:line="58" pos:column="73">/*inKeyModifiers*/</comment>, <param><decl><type><name pos:line="58" pos:column="93">EventMouseButton</name></type> <name pos:line="58" pos:column="110">button</name></decl></param>, <param><decl><type><name pos:line="58" pos:column="118">UInt32</name></type></decl></param> <comment type="block" pos:line="58" pos:column="125">/*inClickCount*/</comment> )</parameter_list>
<block pos:line="59" pos:column="1">{
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">( <expr><name pos:line="60" pos:column="10">button</name> <op:operator pos:line="60" pos:column="17">!=</op:operator> <name pos:line="60" pos:column="20">kEventMouseButtonPrimary</name></expr> )</condition><then pos:line="60" pos:column="46"> <return pos:line="60" pos:column="47">return <expr><name pos:line="60" pos:column="54">eventNotHandledErr</name></expr>;</return></then></if>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">noErr</name></expr>;</return>
}</block></function>

<function><type><name pos:line="64" pos:column="1">HIViewRef</name></type> <name><name pos:line="64" pos:column="11">ScintillaListBox</name><op:operator pos:line="64" pos:column="27">::</op:operator><name pos:line="64" pos:column="29">Create</name></name><parameter_list pos:line="64" pos:column="35">()</parameter_list>
<block pos:line="65" pos:column="1">{
	<comment type="line" pos:line="66" pos:column="9">// Register the HIView, if needed</comment>
	<decl_stmt><decl><type><specifier pos:line="67" pos:column="9">static</specifier> <name pos:line="67" pos:column="16">bool</name></type> <name pos:line="67" pos:column="21">registered</name> <init pos:line="67" pos:column="32">= <expr><lit:literal type="boolean" pos:line="67" pos:column="34">false</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">( <expr><op:operator pos:line="69" pos:column="14">not</op:operator> <name pos:line="69" pos:column="18">registered</name></expr> )</condition><then pos:line="69" pos:column="30">
		<block pos:line="70" pos:column="17">{
		<expr_stmt><expr><call><name><name pos:line="71" pos:column="17">TView</name><op:operator pos:line="71" pos:column="22">::</op:operator><name pos:line="71" pos:column="24">RegisterSubclass</name></name><argument_list pos:line="71" pos:column="40">( <argument><expr><name pos:line="71" pos:column="42">kScintillaListBoxClassID</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="68">Construct</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="72" pos:column="17">registered</name> <op:operator pos:line="72" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="72" pos:column="30">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

	<decl_stmt><decl><type><name pos:line="75" pos:column="9">OSStatus</name></type> <name pos:line="75" pos:column="18">err</name> <init pos:line="75" pos:column="22">= <expr><name pos:line="75" pos:column="24">noErr</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="76" pos:column="9">EventRef</name></type> <name pos:line="76" pos:column="18">event</name> <init pos:line="76" pos:column="24">= <expr><call><name pos:line="76" pos:column="26">CreateInitializationEvent</name><argument_list pos:line="76" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">assert</name><argument_list pos:line="77" pos:column="15">( <argument><expr><name pos:line="77" pos:column="17">event</name> <op:operator pos:line="77" pos:column="23">!=</op:operator> <name pos:line="77" pos:column="26">NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="79" pos:column="9">HIViewRef</name></type> <name pos:line="79" pos:column="19">control</name> <init pos:line="79" pos:column="27">= <expr><name pos:line="79" pos:column="29">NULL</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="80" pos:column="9">err</name> <op:operator pos:line="80" pos:column="13">=</op:operator> <call><name pos:line="80" pos:column="15">HIObjectCreate</name><argument_list pos:line="80" pos:column="29">( <argument><expr><name pos:line="80" pos:column="31">kScintillaListBoxClassID</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="57">event</name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="64">reinterpret_cast</name><argument_list pos:line="80" pos:column="80">&lt;<argument><expr><name pos:line="80" pos:column="81">HIObjectRef</name><op:operator pos:line="80" pos:column="92">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="80" pos:column="94">( <argument><expr><op:operator pos:line="80" pos:column="96">&amp;</op:operator><name pos:line="80" pos:column="97">control</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">ReleaseEvent</name><argument_list pos:line="81" pos:column="21">( <argument><expr><name pos:line="81" pos:column="23">event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">( <expr><name pos:line="82" pos:column="14">err</name> <op:operator pos:line="82" pos:column="18">==</op:operator> <name pos:line="82" pos:column="21">noErr</name></expr> )</condition><then pos:line="82" pos:column="28"> <block pos:line="82" pos:column="29">{
	  <expr_stmt><expr><call><name><name pos:line="83" pos:column="11">Platform</name><op:operator pos:line="83" pos:column="19">::</op:operator><name pos:line="83" pos:column="21">DebugPrintf</name></name><argument_list pos:line="83" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="33">"ScintillaListBox::Create control %08X\n"</lit:literal></expr></argument>,<argument><expr><name pos:line="83" pos:column="75">control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	  <return pos:line="84" pos:column="11">return <expr><name pos:line="84" pos:column="18">control</name></expr>;</return>
	}</block></then></if>
	<return pos:line="86" pos:column="9">return <expr><name pos:line="86" pos:column="16">NULL</name></expr>;</return>	
}</block></function>

<function><type><name pos:line="89" pos:column="1">OSStatus</name></type> <name><name pos:line="89" pos:column="10">ScintillaListBox</name><op:operator pos:line="89" pos:column="26">::</op:operator><name pos:line="89" pos:column="28">Construct</name></name><parameter_list pos:line="89" pos:column="37">( <param><decl><type><name pos:line="89" pos:column="39">HIViewRef</name></type> <name pos:line="89" pos:column="49">inControl</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="60">TView</name><type:modifier pos:line="89" pos:column="65">*</type:modifier><type:modifier pos:line="89" pos:column="66">*</type:modifier></type> <name pos:line="89" pos:column="68">outView</name></decl></param> )</parameter_list>
<block pos:line="90" pos:column="1">{
	<expr_stmt><expr><op:operator pos:line="91" pos:column="9">*</op:operator><name pos:line="91" pos:column="10">outView</name> <op:operator pos:line="91" pos:column="18">=</op:operator> <op:operator pos:line="91" pos:column="20">new</op:operator> <call><name pos:line="91" pos:column="24">ScintillaListBox</name><argument_list pos:line="91" pos:column="40">( <argument><expr><name pos:line="91" pos:column="42">inControl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="92" pos:column="9">Platform</name><op:operator pos:line="92" pos:column="17">::</op:operator><name pos:line="92" pos:column="19">DebugPrintf</name></name><argument_list pos:line="92" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="31">"ScintillaListBox::Construct scintilla %08X\n"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="92" pos:column="78">*</op:operator><name pos:line="92" pos:column="79">outView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">( <expr><op:operator pos:line="93" pos:column="14">*</op:operator><name pos:line="93" pos:column="15">outView</name> <op:operator pos:line="93" pos:column="23">!=</op:operator> <name pos:line="93" pos:column="26">NULL</name></expr> )</condition><then pos:line="93" pos:column="32">
		<return pos:line="94" pos:column="17">return <expr><name pos:line="94" pos:column="24">noErr</name></expr>;</return></then>
	<else pos:line="95" pos:column="9">else
		<return pos:line="96" pos:column="17">return <expr><name pos:line="96" pos:column="24">memFullErr</name></expr>;</return></else></if>
}</block></function>

<extern pos:line="99" pos:column="1">extern <lit:literal type="string" pos:line="99" pos:column="8">"C"</lit:literal> <block pos:line="99" pos:column="12">{
<function><type><name pos:line="100" pos:column="1">HIViewRef</name></type> <name pos:line="100" pos:column="11">scintilla_listbox_new</name><parameter_list pos:line="100" pos:column="32">()</parameter_list> <block pos:line="100" pos:column="35">{
	<return pos:line="101" pos:column="9">return <expr><call><name><name pos:line="101" pos:column="16">ScintillaListBox</name><op:operator pos:line="101" pos:column="32">::</op:operator><name pos:line="101" pos:column="34">Create</name></name><argument_list pos:line="101" pos:column="40">()</argument_list></call></expr>;</return>
}</block></function>
}</block></extern>
</unit>
