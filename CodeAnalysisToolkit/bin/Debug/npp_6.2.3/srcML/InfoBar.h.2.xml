<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\cocoa\InfoBar.h" pos:tabs="8" pos:line="1" pos:column="1">
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/**
 * Scintilla source code edit control
 * InfoBar.h - Implements special info bar with zoom info, caret position etc. to be used with
 *             ScintillaView.
 *
 * Mike Lischke &lt;mlischke@sun.com&gt;
 *
 * Copyright 2009 Sun Microsystems, Inc. All rights reserved.
 * This file is dual licensed under LGPL v2.1 and the Scintilla license (http://www.scintilla.org/License.txt).
 */</comment>

<cpp:error pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">import</cpp:directive> &lt;Cocoa/Cocoa.h&gt;</cpp:error>
<cpp:error pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">import</cpp:directive> "InfoBarCommunicator.h"</cpp:error>

<comment type="block" format="doxygen" pos:line="16" pos:column="1">/**
 * Extended text cell for vertically aligned text.
 */</comment>
@<decl_stmt><decl><type><name pos:line="19" pos:column="2">interface</name></type> <name pos:line="19" pos:column="12">VerticallyCenteredTextFieldCell</name> <range pos:line="19" pos:column="44">: <expr><name pos:line="19" pos:column="46">NSTextFieldCell</name>
<block pos:line="20" pos:column="1">{
	<expr><name pos:line="21" pos:column="9">BOOL</name> <name pos:line="21" pos:column="14">mIsEditingOrSelecting</name></expr>;
}</block>

@<name pos:line="24" pos:column="2">end</name>

@<name pos:line="26" pos:column="2">interface</name> <name pos:line="26" pos:column="12">InfoBar</name> <op:operator pos:line="26" pos:column="20">:</op:operator> <name><name pos:line="26" pos:column="22">NSView</name> <argument_list pos:line="26" pos:column="29">&lt;<argument><expr><name pos:line="26" pos:column="30">InfoBarCommunicator</name></expr></argument>&gt;</argument_list></name>
<block pos:line="27" pos:column="1">{
@<expr pos:line="28" pos:column="2">private
  <name pos:line="29" pos:column="3">NSImage</name><op:operator pos:line="29" pos:column="10">*</op:operator> <name pos:line="29" pos:column="12">mBackground</name></expr>;
  <expr><name pos:line="30" pos:column="3">IBDisplay</name> <name pos:line="30" pos:column="13">mDisplayMask</name></expr>;
  
  <expr><name pos:line="32" pos:column="3">float</name> <name pos:line="32" pos:column="9">mScaleFactor</name></expr>;
  <expr><name pos:line="33" pos:column="3">NSPopUpButton</name><op:operator pos:line="33" pos:column="16">*</op:operator> <name pos:line="33" pos:column="18">mZoomPopup</name></expr>;
  
  <expr><name pos:line="35" pos:column="3">int</name> <name pos:line="35" pos:column="7">mCurrentCaretX</name></expr>;
  <expr><name pos:line="36" pos:column="3">int</name> <name pos:line="36" pos:column="7">mCurrentCaretY</name></expr>;
  <expr><name pos:line="37" pos:column="3">NSTextField</name><op:operator pos:line="37" pos:column="14">*</op:operator> <name pos:line="37" pos:column="16">mCaretPositionLabel</name></expr>;
  <expr><name pos:line="38" pos:column="3">NSTextField</name><op:operator pos:line="38" pos:column="14">*</op:operator> <name pos:line="38" pos:column="16">mStatusTextLabel</name></expr>;
  
  <expr><name><name pos:line="40" pos:column="3">id</name> <argument_list pos:line="40" pos:column="6">&lt;<argument><expr><name pos:line="40" pos:column="7">InfoBarCommunicator</name></expr></argument>&gt;</argument_list></name> <name pos:line="40" pos:column="28">mCallback</name></expr>;
}</block>

<op:operator pos:line="43" pos:column="1">-</op:operator> <op:operator pos:line="43" pos:column="3">(</op:operator><name pos:line="43" pos:column="4">void</name><op:operator pos:line="43" pos:column="8">)</op:operator> <name pos:line="43" pos:column="10">notify</name><op:operator pos:line="43" pos:column="16">:</op:operator> <op:operator pos:line="43" pos:column="18">(</op:operator><name pos:line="43" pos:column="19">NotificationType</name><op:operator pos:line="43" pos:column="35">)</op:operator> <name pos:line="43" pos:column="37">type</name> <name pos:line="43" pos:column="42">message</name><op:operator pos:line="43" pos:column="49">:</op:operator> <op:operator pos:line="43" pos:column="51">(</op:operator><name pos:line="43" pos:column="52">NSString</name><op:operator pos:line="43" pos:column="60">*</op:operator><op:operator pos:line="43" pos:column="61">)</op:operator> <name pos:line="43" pos:column="63">message</name> <name pos:line="43" pos:column="71">location</name><op:operator pos:line="43" pos:column="79">:</op:operator> <op:operator pos:line="43" pos:column="81">(</op:operator><name pos:line="43" pos:column="82">NSPoint</name><op:operator pos:line="43" pos:column="89">)</op:operator> <name pos:line="43" pos:column="91">location</name>
          <name pos:line="44" pos:column="11">value</name><op:operator pos:line="44" pos:column="16">:</op:operator> <op:operator pos:line="44" pos:column="18">(</op:operator><name pos:line="44" pos:column="19">float</name><op:operator pos:line="44" pos:column="24">)</op:operator> <name pos:line="44" pos:column="26">value</name></expr></range></decl>;</decl_stmt>
<expr_stmt><expr><op:operator pos:line="45" pos:column="1">-</op:operator> <op:operator pos:line="45" pos:column="3">(</op:operator><name pos:line="45" pos:column="4">void</name><op:operator pos:line="45" pos:column="8">)</op:operator> <name pos:line="45" pos:column="10">setCallback</name><op:operator pos:line="45" pos:column="21">:</op:operator> <op:operator pos:line="45" pos:column="23">(</op:operator><name><name pos:line="45" pos:column="24">id</name> <argument_list pos:line="45" pos:column="27">&lt;<argument><expr><name pos:line="45" pos:column="28">InfoBarCommunicator</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="45" pos:column="48">)</op:operator> <name pos:line="45" pos:column="50">callback</name></expr>;</expr_stmt>

<expr_stmt><expr><op:operator pos:line="47" pos:column="1">-</op:operator> <op:operator pos:line="47" pos:column="3">(</op:operator><name pos:line="47" pos:column="4">void</name><op:operator pos:line="47" pos:column="8">)</op:operator> <name pos:line="47" pos:column="10">createItems</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="48" pos:column="1">-</op:operator> <op:operator pos:line="48" pos:column="3">(</op:operator><name pos:line="48" pos:column="4">void</name><op:operator pos:line="48" pos:column="8">)</op:operator> <name pos:line="48" pos:column="10">layout</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="49" pos:column="1">-</op:operator> <op:operator pos:line="49" pos:column="3">(</op:operator><name pos:line="49" pos:column="4">void</name><op:operator pos:line="49" pos:column="8">)</op:operator> <name pos:line="49" pos:column="10">setDisplay</name><op:operator pos:line="49" pos:column="20">:</op:operator> <op:operator pos:line="49" pos:column="22">(</op:operator><name pos:line="49" pos:column="23">IBDisplay</name><op:operator pos:line="49" pos:column="32">)</op:operator> <name pos:line="49" pos:column="34">display</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="50" pos:column="1">-</op:operator> <op:operator pos:line="50" pos:column="3">(</op:operator><name pos:line="50" pos:column="4">void</name><op:operator pos:line="50" pos:column="8">)</op:operator> <name pos:line="50" pos:column="10">zoomItemAction</name><op:operator pos:line="50" pos:column="24">:</op:operator> <op:operator pos:line="50" pos:column="26">(</op:operator><name pos:line="50" pos:column="27">id</name><op:operator pos:line="50" pos:column="29">)</op:operator> <name pos:line="50" pos:column="31">sender</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="51" pos:column="1">-</op:operator> <op:operator pos:line="51" pos:column="3">(</op:operator><name pos:line="51" pos:column="4">void</name><op:operator pos:line="51" pos:column="8">)</op:operator> <name pos:line="51" pos:column="10">setScaleFactor</name><op:operator pos:line="51" pos:column="24">:</op:operator> <op:operator pos:line="51" pos:column="26">(</op:operator><name pos:line="51" pos:column="27">float</name><op:operator pos:line="51" pos:column="32">)</op:operator> <name pos:line="51" pos:column="34">newScaleFactor</name> <name pos:line="51" pos:column="49">adjustPopup</name><op:operator pos:line="51" pos:column="60">:</op:operator> <op:operator pos:line="51" pos:column="62">(</op:operator><name pos:line="51" pos:column="63">BOOL</name><op:operator pos:line="51" pos:column="67">)</op:operator> <name pos:line="51" pos:column="69">flag</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="52" pos:column="1">-</op:operator> <op:operator pos:line="52" pos:column="3">(</op:operator><name pos:line="52" pos:column="4">void</name><op:operator pos:line="52" pos:column="8">)</op:operator> <name pos:line="52" pos:column="10">setCaretPosition</name><op:operator pos:line="52" pos:column="26">:</op:operator> <op:operator pos:line="52" pos:column="28">(</op:operator><name pos:line="52" pos:column="29">NSPoint</name><op:operator pos:line="52" pos:column="36">)</op:operator> <name pos:line="52" pos:column="38">position</name></expr>;</expr_stmt>
<expr_stmt><expr><op:operator pos:line="53" pos:column="1">-</op:operator> <op:operator pos:line="53" pos:column="3">(</op:operator><name pos:line="53" pos:column="4">void</name><op:operator pos:line="53" pos:column="8">)</op:operator> <name pos:line="53" pos:column="10">sizeToFit</name></expr>;</expr_stmt>

@<macro><name pos:line="55" pos:column="2">end</name></macro>
</unit>
