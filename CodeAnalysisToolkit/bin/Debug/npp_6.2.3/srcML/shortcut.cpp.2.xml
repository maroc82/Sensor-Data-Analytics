<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\shortcut\shortcut.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"shortcut.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"keys.h"</lit:literal></cpp:file></cpp:include>
<decl_stmt><decl><type><specifier pos:line="38" pos:column="1">const</specifier> <name pos:line="38" pos:column="7">int</name></type> <name pos:line="38" pos:column="11">KEY_STR_LEN</name> <init pos:line="38" pos:column="23">= <expr><lit:literal type="number" pos:line="38" pos:column="25">16</lit:literal></expr></init></decl>;</decl_stmt>

<struct pos:line="40" pos:column="1">struct <name pos:line="40" pos:column="8">KeyIDNAME</name> <block pos:line="40" pos:column="18">{<public type="default" pos:line="40" pos:column="19">
	<decl_stmt><decl><type><specifier pos:line="41" pos:column="9">const</specifier> <name pos:line="41" pos:column="15">TCHAR</name> <type:modifier pos:line="41" pos:column="21">*</type:modifier></type> <name pos:line="41" pos:column="23">name</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">UCHAR</name></type> <name pos:line="42" pos:column="15">id</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<decl_stmt><decl><type><name pos:line="45" pos:column="1">KeyIDNAME</name></type> <name><name pos:line="45" pos:column="11">namedKeyArray</name><index pos:line="45" pos:column="24">[]</index></name> <init pos:line="45" pos:column="27">= <expr><block pos:line="45" pos:column="29">{
<expr><block pos:line="46" pos:column="1">{<expr><call><name pos:line="46" pos:column="2">TEXT</name><argument_list pos:line="46" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="7">"None"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="46" pos:column="16">VK_NULL</name></expr>}</block></expr>,

<expr><block pos:line="48" pos:column="1">{<expr><call><name pos:line="48" pos:column="2">TEXT</name><argument_list pos:line="48" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="7">"Backspace"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="48" pos:column="21">VK_BACK</name></expr>}</block></expr>,
<expr><block pos:line="49" pos:column="1">{<expr><call><name pos:line="49" pos:column="2">TEXT</name><argument_list pos:line="49" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="7">"Tab"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="49" pos:column="15">VK_TAB</name></expr>}</block></expr>,
<expr><block pos:line="50" pos:column="1">{<expr><call><name pos:line="50" pos:column="2">TEXT</name><argument_list pos:line="50" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="7">"Enter"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="50" pos:column="17">VK_RETURN</name></expr>}</block></expr>,
<expr><block pos:line="51" pos:column="1">{<expr><call><name pos:line="51" pos:column="2">TEXT</name><argument_list pos:line="51" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="7">"Esc"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="51" pos:column="15">VK_ESCAPE</name></expr>}</block></expr>,
<expr><block pos:line="52" pos:column="1">{<expr><call><name pos:line="52" pos:column="2">TEXT</name><argument_list pos:line="52" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="7">"Spacebar"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="52" pos:column="20">VK_SPACE</name></expr>}</block></expr>,

<expr><block pos:line="54" pos:column="1">{<expr><call><name pos:line="54" pos:column="2">TEXT</name><argument_list pos:line="54" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="7">"Page up"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="54" pos:column="19">VK_PRIOR</name></expr>}</block></expr>,
<expr><block pos:line="55" pos:column="1">{<expr><call><name pos:line="55" pos:column="2">TEXT</name><argument_list pos:line="55" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="7">"Page down"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="55" pos:column="21">VK_NEXT</name></expr>}</block></expr>,
<expr><block pos:line="56" pos:column="1">{<expr><call><name pos:line="56" pos:column="2">TEXT</name><argument_list pos:line="56" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="7">"End"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="56" pos:column="15">VK_END</name></expr>}</block></expr>,
<expr><block pos:line="57" pos:column="1">{<expr><call><name pos:line="57" pos:column="2">TEXT</name><argument_list pos:line="57" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="7">"Home"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="57" pos:column="16">VK_HOME</name></expr>}</block></expr>,
<expr><block pos:line="58" pos:column="1">{<expr><call><name pos:line="58" pos:column="2">TEXT</name><argument_list pos:line="58" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="7">"Left"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="58" pos:column="16">VK_LEFT</name></expr>}</block></expr>,
<expr><block pos:line="59" pos:column="1">{<expr><call><name pos:line="59" pos:column="2">TEXT</name><argument_list pos:line="59" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="7">"Up"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="59" pos:column="14">VK_UP</name></expr>}</block></expr>,
<expr><block pos:line="60" pos:column="1">{<expr><call><name pos:line="60" pos:column="2">TEXT</name><argument_list pos:line="60" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="7">"Right"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="60" pos:column="17">VK_RIGHT</name></expr>}</block></expr>,
<expr><block pos:line="61" pos:column="1">{<expr><call><name pos:line="61" pos:column="2">TEXT</name><argument_list pos:line="61" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="7">"Down"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="61" pos:column="16">VK_DOWN</name></expr>}</block></expr>,

<expr><block pos:line="63" pos:column="1">{<expr><call><name pos:line="63" pos:column="2">TEXT</name><argument_list pos:line="63" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="7">"INS"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="63" pos:column="15">VK_INSERT</name></expr>}</block></expr>,
<expr><block pos:line="64" pos:column="1">{<expr><call><name pos:line="64" pos:column="2">TEXT</name><argument_list pos:line="64" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="7">"DEL"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="64" pos:column="15">VK_DELETE</name></expr>}</block></expr>,

<expr><block pos:line="66" pos:column="1">{<expr><call><name pos:line="66" pos:column="2">TEXT</name><argument_list pos:line="66" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="7">"0"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="66" pos:column="13">VK_0</name></expr>}</block></expr>,
<expr><block pos:line="67" pos:column="1">{<expr><call><name pos:line="67" pos:column="2">TEXT</name><argument_list pos:line="67" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="7">"1"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="67" pos:column="13">VK_1</name></expr>}</block></expr>,
<expr><block pos:line="68" pos:column="1">{<expr><call><name pos:line="68" pos:column="2">TEXT</name><argument_list pos:line="68" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="7">"2"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="68" pos:column="13">VK_2</name></expr>}</block></expr>,
<expr><block pos:line="69" pos:column="1">{<expr><call><name pos:line="69" pos:column="2">TEXT</name><argument_list pos:line="69" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="7">"3"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="69" pos:column="13">VK_3</name></expr>}</block></expr>,
<expr><block pos:line="70" pos:column="1">{<expr><call><name pos:line="70" pos:column="2">TEXT</name><argument_list pos:line="70" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="7">"4"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="70" pos:column="13">VK_4</name></expr>}</block></expr>,
<expr><block pos:line="71" pos:column="1">{<expr><call><name pos:line="71" pos:column="2">TEXT</name><argument_list pos:line="71" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="7">"5"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="71" pos:column="13">VK_5</name></expr>}</block></expr>,
<expr><block pos:line="72" pos:column="1">{<expr><call><name pos:line="72" pos:column="2">TEXT</name><argument_list pos:line="72" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="7">"6"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="72" pos:column="13">VK_6</name></expr>}</block></expr>,
<expr><block pos:line="73" pos:column="1">{<expr><call><name pos:line="73" pos:column="2">TEXT</name><argument_list pos:line="73" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="7">"7"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="73" pos:column="13">VK_7</name></expr>}</block></expr>,
<expr><block pos:line="74" pos:column="1">{<expr><call><name pos:line="74" pos:column="2">TEXT</name><argument_list pos:line="74" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="7">"8"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="74" pos:column="13">VK_8</name></expr>}</block></expr>,
<expr><block pos:line="75" pos:column="1">{<expr><call><name pos:line="75" pos:column="2">TEXT</name><argument_list pos:line="75" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="7">"9"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="75" pos:column="13">VK_9</name></expr>}</block></expr>,
<expr><block pos:line="76" pos:column="1">{<expr><call><name pos:line="76" pos:column="2">TEXT</name><argument_list pos:line="76" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="7">"A"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="76" pos:column="13">VK_A</name></expr>}</block></expr>,
<expr><block pos:line="77" pos:column="1">{<expr><call><name pos:line="77" pos:column="2">TEXT</name><argument_list pos:line="77" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="7">"B"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="77" pos:column="13">VK_B</name></expr>}</block></expr>,
<expr><block pos:line="78" pos:column="1">{<expr><call><name pos:line="78" pos:column="2">TEXT</name><argument_list pos:line="78" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="7">"C"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="78" pos:column="13">VK_C</name></expr>}</block></expr>,
<expr><block pos:line="79" pos:column="1">{<expr><call><name pos:line="79" pos:column="2">TEXT</name><argument_list pos:line="79" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="7">"D"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="79" pos:column="13">VK_D</name></expr>}</block></expr>,
<expr><block pos:line="80" pos:column="1">{<expr><call><name pos:line="80" pos:column="2">TEXT</name><argument_list pos:line="80" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="7">"E"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="80" pos:column="13">VK_E</name></expr>}</block></expr>,
<expr><block pos:line="81" pos:column="1">{<expr><call><name pos:line="81" pos:column="2">TEXT</name><argument_list pos:line="81" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="81" pos:column="7">"F"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="81" pos:column="13">VK_F</name></expr>}</block></expr>,
<expr><block pos:line="82" pos:column="1">{<expr><call><name pos:line="82" pos:column="2">TEXT</name><argument_list pos:line="82" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="7">"G"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="82" pos:column="13">VK_G</name></expr>}</block></expr>,
<expr><block pos:line="83" pos:column="1">{<expr><call><name pos:line="83" pos:column="2">TEXT</name><argument_list pos:line="83" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="7">"H"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="83" pos:column="13">VK_H</name></expr>}</block></expr>,
<expr><block pos:line="84" pos:column="1">{<expr><call><name pos:line="84" pos:column="2">TEXT</name><argument_list pos:line="84" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="7">"I"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="84" pos:column="13">VK_I</name></expr>}</block></expr>,
<expr><block pos:line="85" pos:column="1">{<expr><call><name pos:line="85" pos:column="2">TEXT</name><argument_list pos:line="85" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="7">"J"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="85" pos:column="13">VK_J</name></expr>}</block></expr>,
<expr><block pos:line="86" pos:column="1">{<expr><call><name pos:line="86" pos:column="2">TEXT</name><argument_list pos:line="86" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="7">"K"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="86" pos:column="13">VK_K</name></expr>}</block></expr>,
<expr><block pos:line="87" pos:column="1">{<expr><call><name pos:line="87" pos:column="2">TEXT</name><argument_list pos:line="87" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="7">"L"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="87" pos:column="13">VK_L</name></expr>}</block></expr>,
<expr><block pos:line="88" pos:column="1">{<expr><call><name pos:line="88" pos:column="2">TEXT</name><argument_list pos:line="88" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="7">"M"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="88" pos:column="13">VK_M</name></expr>}</block></expr>,
<expr><block pos:line="89" pos:column="1">{<expr><call><name pos:line="89" pos:column="2">TEXT</name><argument_list pos:line="89" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="89" pos:column="7">"N"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="89" pos:column="13">VK_N</name></expr>}</block></expr>,
<expr><block pos:line="90" pos:column="1">{<expr><call><name pos:line="90" pos:column="2">TEXT</name><argument_list pos:line="90" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="7">"O"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="90" pos:column="13">VK_O</name></expr>}</block></expr>,
<expr><block pos:line="91" pos:column="1">{<expr><call><name pos:line="91" pos:column="2">TEXT</name><argument_list pos:line="91" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="7">"P"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="91" pos:column="13">VK_P</name></expr>}</block></expr>,
<expr><block pos:line="92" pos:column="1">{<expr><call><name pos:line="92" pos:column="2">TEXT</name><argument_list pos:line="92" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="7">"Q"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="92" pos:column="13">VK_Q</name></expr>}</block></expr>,
<expr><block pos:line="93" pos:column="1">{<expr><call><name pos:line="93" pos:column="2">TEXT</name><argument_list pos:line="93" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="7">"R"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="93" pos:column="13">VK_R</name></expr>}</block></expr>,
<expr><block pos:line="94" pos:column="1">{<expr><call><name pos:line="94" pos:column="2">TEXT</name><argument_list pos:line="94" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="7">"S"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="94" pos:column="13">VK_S</name></expr>}</block></expr>,
<expr><block pos:line="95" pos:column="1">{<expr><call><name pos:line="95" pos:column="2">TEXT</name><argument_list pos:line="95" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="7">"T"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="95" pos:column="13">VK_T</name></expr>}</block></expr>,
<expr><block pos:line="96" pos:column="1">{<expr><call><name pos:line="96" pos:column="2">TEXT</name><argument_list pos:line="96" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="96" pos:column="7">"U"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="96" pos:column="13">VK_U</name></expr>}</block></expr>,
<expr><block pos:line="97" pos:column="1">{<expr><call><name pos:line="97" pos:column="2">TEXT</name><argument_list pos:line="97" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="7">"V"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="97" pos:column="13">VK_V</name></expr>}</block></expr>,
<expr><block pos:line="98" pos:column="1">{<expr><call><name pos:line="98" pos:column="2">TEXT</name><argument_list pos:line="98" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="7">"W"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="98" pos:column="13">VK_W</name></expr>}</block></expr>,
<expr><block pos:line="99" pos:column="1">{<expr><call><name pos:line="99" pos:column="2">TEXT</name><argument_list pos:line="99" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="99" pos:column="7">"X"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="99" pos:column="13">VK_X</name></expr>}</block></expr>,
<expr><block pos:line="100" pos:column="1">{<expr><call><name pos:line="100" pos:column="2">TEXT</name><argument_list pos:line="100" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="7">"Y"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="100" pos:column="13">VK_Y</name></expr>}</block></expr>,
<expr><block pos:line="101" pos:column="1">{<expr><call><name pos:line="101" pos:column="2">TEXT</name><argument_list pos:line="101" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="7">"Z"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="101" pos:column="13">VK_Z</name></expr>}</block></expr>,

<expr><block pos:line="103" pos:column="1">{<expr><call><name pos:line="103" pos:column="2">TEXT</name><argument_list pos:line="103" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="7">"Numpad 0"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="103" pos:column="20">VK_NUMPAD0</name></expr>}</block></expr>,
<expr><block pos:line="104" pos:column="1">{<expr><call><name pos:line="104" pos:column="2">TEXT</name><argument_list pos:line="104" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="104" pos:column="7">"Numpad 1"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="104" pos:column="20">VK_NUMPAD1</name></expr>}</block></expr>,
<expr><block pos:line="105" pos:column="1">{<expr><call><name pos:line="105" pos:column="2">TEXT</name><argument_list pos:line="105" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="7">"Numpad 2"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="105" pos:column="20">VK_NUMPAD2</name></expr>}</block></expr>,
<expr><block pos:line="106" pos:column="1">{<expr><call><name pos:line="106" pos:column="2">TEXT</name><argument_list pos:line="106" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="106" pos:column="7">"Numpad 3"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="106" pos:column="20">VK_NUMPAD3</name></expr>}</block></expr>,
<expr><block pos:line="107" pos:column="1">{<expr><call><name pos:line="107" pos:column="2">TEXT</name><argument_list pos:line="107" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="7">"Numpad 4"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="107" pos:column="20">VK_NUMPAD4</name></expr>}</block></expr>,
<expr><block pos:line="108" pos:column="1">{<expr><call><name pos:line="108" pos:column="2">TEXT</name><argument_list pos:line="108" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="7">"Numpad 5"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="108" pos:column="20">VK_NUMPAD5</name></expr>}</block></expr>,
<expr><block pos:line="109" pos:column="1">{<expr><call><name pos:line="109" pos:column="2">TEXT</name><argument_list pos:line="109" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="7">"Numpad 6"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="109" pos:column="20">VK_NUMPAD6</name></expr>}</block></expr>,
<expr><block pos:line="110" pos:column="1">{<expr><call><name pos:line="110" pos:column="2">TEXT</name><argument_list pos:line="110" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="7">"Numpad 7"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="110" pos:column="20">VK_NUMPAD7</name></expr>}</block></expr>,
<expr><block pos:line="111" pos:column="1">{<expr><call><name pos:line="111" pos:column="2">TEXT</name><argument_list pos:line="111" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="7">"Numpad 8"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="111" pos:column="20">VK_NUMPAD8</name></expr>}</block></expr>,
<expr><block pos:line="112" pos:column="1">{<expr><call><name pos:line="112" pos:column="2">TEXT</name><argument_list pos:line="112" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="7">"Numpad 9"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="112" pos:column="20">VK_NUMPAD9</name></expr>}</block></expr>,
<expr><block pos:line="113" pos:column="1">{<expr><call><name pos:line="113" pos:column="2">TEXT</name><argument_list pos:line="113" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="7">"Num *"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="113" pos:column="17">VK_MULTIPLY</name></expr>}</block></expr>,
<expr><block pos:line="114" pos:column="1">{<expr><call><name pos:line="114" pos:column="2">TEXT</name><argument_list pos:line="114" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="114" pos:column="7">"Num +"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="114" pos:column="17">VK_ADD</name></expr>}</block></expr>,
<comment type="line" pos:line="115" pos:column="1">//{TEXT("Num Enter"), VK_SEPARATOR},	//this one doesnt seem to work</comment>
<expr><block pos:line="116" pos:column="1">{<expr><call><name pos:line="116" pos:column="2">TEXT</name><argument_list pos:line="116" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="7">"Num -"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="116" pos:column="17">VK_SUBTRACT</name></expr>}</block></expr>,
<expr><block pos:line="117" pos:column="1">{<expr><call><name pos:line="117" pos:column="2">TEXT</name><argument_list pos:line="117" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="7">"Num ."</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="117" pos:column="17">VK_DECIMAL</name></expr>}</block></expr>,
<expr><block pos:line="118" pos:column="1">{<expr><call><name pos:line="118" pos:column="2">TEXT</name><argument_list pos:line="118" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="7">"Num /"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="118" pos:column="17">VK_DIVIDE</name></expr>}</block></expr>,
<expr><block pos:line="119" pos:column="1">{<expr><call><name pos:line="119" pos:column="2">TEXT</name><argument_list pos:line="119" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="7">"F1"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="119" pos:column="14">VK_F1</name></expr>}</block></expr>,
<expr><block pos:line="120" pos:column="1">{<expr><call><name pos:line="120" pos:column="2">TEXT</name><argument_list pos:line="120" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="7">"F2"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="120" pos:column="14">VK_F2</name></expr>}</block></expr>,
<expr><block pos:line="121" pos:column="1">{<expr><call><name pos:line="121" pos:column="2">TEXT</name><argument_list pos:line="121" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="7">"F3"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="121" pos:column="14">VK_F3</name></expr>}</block></expr>,
<expr><block pos:line="122" pos:column="1">{<expr><call><name pos:line="122" pos:column="2">TEXT</name><argument_list pos:line="122" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="7">"F4"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="122" pos:column="14">VK_F4</name></expr>}</block></expr>,
<expr><block pos:line="123" pos:column="1">{<expr><call><name pos:line="123" pos:column="2">TEXT</name><argument_list pos:line="123" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="7">"F5"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="123" pos:column="14">VK_F5</name></expr>}</block></expr>,
<expr><block pos:line="124" pos:column="1">{<expr><call><name pos:line="124" pos:column="2">TEXT</name><argument_list pos:line="124" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="7">"F6"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="124" pos:column="14">VK_F6</name></expr>}</block></expr>,
<expr><block pos:line="125" pos:column="1">{<expr><call><name pos:line="125" pos:column="2">TEXT</name><argument_list pos:line="125" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="7">"F7"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="125" pos:column="14">VK_F7</name></expr>}</block></expr>,
<expr><block pos:line="126" pos:column="1">{<expr><call><name pos:line="126" pos:column="2">TEXT</name><argument_list pos:line="126" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="7">"F8"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="126" pos:column="14">VK_F8</name></expr>}</block></expr>,
<expr><block pos:line="127" pos:column="1">{<expr><call><name pos:line="127" pos:column="2">TEXT</name><argument_list pos:line="127" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="7">"F9"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="127" pos:column="14">VK_F9</name></expr>}</block></expr>,
<expr><block pos:line="128" pos:column="1">{<expr><call><name pos:line="128" pos:column="2">TEXT</name><argument_list pos:line="128" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="7">"F10"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="128" pos:column="15">VK_F10</name></expr>}</block></expr>,
<expr><block pos:line="129" pos:column="1">{<expr><call><name pos:line="129" pos:column="2">TEXT</name><argument_list pos:line="129" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="7">"F11"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="129" pos:column="15">VK_F11</name></expr>}</block></expr>,
<expr><block pos:line="130" pos:column="1">{<expr><call><name pos:line="130" pos:column="2">TEXT</name><argument_list pos:line="130" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="7">"F12"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="130" pos:column="15">VK_F12</name></expr>}</block></expr>,

<expr><block pos:line="132" pos:column="1">{<expr><call><name pos:line="132" pos:column="2">TEXT</name><argument_list pos:line="132" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="7">"~"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="132" pos:column="13">VK_OEM_3</name></expr>}</block></expr>,
<expr><block pos:line="133" pos:column="1">{<expr><call><name pos:line="133" pos:column="2">TEXT</name><argument_list pos:line="133" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="133" pos:column="7">"-"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="133" pos:column="13">VK_OEM_MINUS</name></expr>}</block></expr>,
<expr><block pos:line="134" pos:column="1">{<expr><call><name pos:line="134" pos:column="2">TEXT</name><argument_list pos:line="134" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="7">"="</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="134" pos:column="13">VK_OEM_PLUS</name></expr>}</block></expr>,
<expr><block pos:line="135" pos:column="1">{<expr><call><name pos:line="135" pos:column="2">TEXT</name><argument_list pos:line="135" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="7">"["</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="135" pos:column="13">VK_OEM_4</name></expr>}</block></expr>,
<expr><block pos:line="136" pos:column="1">{<expr><call><name pos:line="136" pos:column="2">TEXT</name><argument_list pos:line="136" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="7">"]"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="136" pos:column="13">VK_OEM_6</name></expr>}</block></expr>,
<expr><block pos:line="137" pos:column="1">{<expr><call><name pos:line="137" pos:column="2">TEXT</name><argument_list pos:line="137" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="7">";"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="137" pos:column="13">VK_OEM_1</name></expr>}</block></expr>,
<expr><block pos:line="138" pos:column="1">{<expr><call><name pos:line="138" pos:column="2">TEXT</name><argument_list pos:line="138" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="7">"'"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="138" pos:column="13">VK_OEM_7</name></expr>}</block></expr>,
<expr><block pos:line="139" pos:column="1">{<expr><call><name pos:line="139" pos:column="2">TEXT</name><argument_list pos:line="139" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="7">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="139" pos:column="14">VK_OEM_5</name></expr>}</block></expr>,
<expr><block pos:line="140" pos:column="1">{<expr><call><name pos:line="140" pos:column="2">TEXT</name><argument_list pos:line="140" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="7">","</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="140" pos:column="13">VK_OEM_COMMA</name></expr>}</block></expr>,
<expr><block pos:line="141" pos:column="1">{<expr><call><name pos:line="141" pos:column="2">TEXT</name><argument_list pos:line="141" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="141" pos:column="7">"."</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="141" pos:column="13">VK_OEM_PERIOD</name></expr>}</block></expr>,
<expr><block pos:line="142" pos:column="1">{<expr><call><name pos:line="142" pos:column="2">TEXT</name><argument_list pos:line="142" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="142" pos:column="7">"/"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="142" pos:column="13">VK_OEM_2</name></expr>}</block></expr>,

<expr><block pos:line="144" pos:column="1">{<expr><call><name pos:line="144" pos:column="2">TEXT</name><argument_list pos:line="144" pos:column="6">(<argument><expr><lit:literal type="string" pos:line="144" pos:column="7">"&lt;&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="144" pos:column="14">VK_OEM_102</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="147" pos:column="9">nrKeys</name></cpp:macro> <cpp:value pos:line="147" pos:column="16">sizeof(namedKeyArray)/sizeof(KeyIDNAME)</cpp:value></cpp:define>

<comment type="block" pos:line="149" pos:column="1">/*
TCHAR vKeyArray[][KEY_STR_LEN] = \
{TEXT(""), TEXT("BACKSPACE"), TEXT("TAB"), TEXT("ENTER"), TEXT("PAUSE"), TEXT("CAPS LOCK"), TEXT("ESC"), TEXT("SPACEBAR"), TEXT("PAGE UP"), TEXT("PAGE DOWN"),\
"END", TEXT("HOME"), TEXT("LEFT ARROW"), TEXT("UP ARROW"), TEXT("RIGHT ARROW"), TEXT("DOWN ARROW"), TEXT("INS"), TEXT("DEL"),\
"0", TEXT("1"), TEXT("2"), TEXT("3"), TEXT("4"), TEXT("5"), TEXT("6"), TEXT("7"), TEXT("8"), TEXT("9"),\
"A", TEXT("B"), TEXT("C"), TEXT("D"), TEXT("E"), TEXT("F"), TEXT("G"), TEXT("H"), TEXT("I"), TEXT("J"), TEXT("K"), TEXT("L"), TEXT("M"),\
"N", TEXT("O"), TEXT("P"), TEXT("Q"), TEXT("R"), TEXT("S"), TEXT("T"), TEXT("U"), TEXT("V"), TEXT("W"), TEXT("X"), TEXT("Y"), TEXT("Z"),\
"NUMPAD0", TEXT("NUMPAD1"), TEXT("NUMPAD2"), TEXT("NUMPAD3"), TEXT("NUMPAD4"),\
"NUMPAD5", TEXT("NUMPAD6"), TEXT("NUMPAD7"), TEXT("NUMPAD8"), TEXT("NUMPAD9"),\
"F1", TEXT("F2"), TEXT("F3"), TEXT("F4"), TEXT("F5"), TEXT("F6"),\
"F7", TEXT("F8"), TEXT("F9"), TEXT("F10"), TEXT("F11"), TEXT("F12")};

UCHAR vkeyValue[] = {\
0x00, 0x08, 0x09, 0x0D, 0x13, 0x14, 0x1B, 0x20, 0x21, 0x22,\
0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x2D, 0x2E, 0x30, 0x31,\
0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42,\
0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C,\
0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56,\
0x57, 0x58, 0x59, 0x5A, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65,\
0x66, 0x67, 0x68, 0x69, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75,\
0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B};
*/</comment>

<function><type><name pos:line="172" pos:column="1">generic_string</name></type> <name><name pos:line="172" pos:column="16">Shortcut</name><op:operator pos:line="172" pos:column="24">::</op:operator><name pos:line="172" pos:column="26">toString</name></name><parameter_list pos:line="172" pos:column="34">()</parameter_list> <specifier pos:line="172" pos:column="37">const</specifier>
<block pos:line="173" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="174" pos:column="9">generic_string</name></type> <name pos:line="174" pos:column="24">sc</name> <init pos:line="174" pos:column="27">= <expr><call><name pos:line="174" pos:column="29">TEXT</name><argument_list pos:line="174" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="34">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><op:operator pos:line="175" pos:column="13">!</op:operator><call><name pos:line="175" pos:column="14">isEnabled</name><argument_list pos:line="175" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="175" pos:column="26">
		<return pos:line="176" pos:column="17">return <expr><name pos:line="176" pos:column="24">sc</name></expr>;</return></then></if>

	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name><name pos:line="178" pos:column="13">_keyCombo</name><op:operator pos:line="178" pos:column="22">.</op:operator><name pos:line="178" pos:column="23">_isCtrl</name></name></expr>)</condition><then pos:line="178" pos:column="31">
		<expr_stmt><expr><name pos:line="179" pos:column="17">sc</name> <op:operator pos:line="179" pos:column="20">+=</op:operator> <call><name pos:line="179" pos:column="23">TEXT</name><argument_list pos:line="179" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="179" pos:column="28">"Ctrl+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name><name pos:line="180" pos:column="13">_keyCombo</name><op:operator pos:line="180" pos:column="22">.</op:operator><name pos:line="180" pos:column="23">_isAlt</name></name></expr>)</condition><then pos:line="180" pos:column="30">
		<expr_stmt><expr><name pos:line="181" pos:column="17">sc</name> <op:operator pos:line="181" pos:column="20">+=</op:operator> <call><name pos:line="181" pos:column="23">TEXT</name><argument_list pos:line="181" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="181" pos:column="28">"Alt+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="182" pos:column="9">if <condition pos:line="182" pos:column="12">(<expr><name><name pos:line="182" pos:column="13">_keyCombo</name><op:operator pos:line="182" pos:column="22">.</op:operator><name pos:line="182" pos:column="23">_isShift</name></name></expr>)</condition><then pos:line="182" pos:column="32">
		<expr_stmt><expr><name pos:line="183" pos:column="17">sc</name> <op:operator pos:line="183" pos:column="20">+=</op:operator> <call><name pos:line="183" pos:column="23">TEXT</name><argument_list pos:line="183" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="183" pos:column="28">"Shift+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="185" pos:column="9">generic_string</name></type> <name pos:line="185" pos:column="24">keyString</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="186" pos:column="9">getKeyStrFromVal</name><argument_list pos:line="186" pos:column="25">(<argument><expr><name><name pos:line="186" pos:column="26">_keyCombo</name><op:operator pos:line="186" pos:column="35">.</op:operator><name pos:line="186" pos:column="36">_key</name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="42">keyString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="187" pos:column="9">sc</name> <op:operator pos:line="187" pos:column="12">+=</op:operator> <name pos:line="187" pos:column="15">keyString</name></expr>;</expr_stmt>
	<return pos:line="188" pos:column="9">return <expr><name pos:line="188" pos:column="16">sc</name></expr>;</return>
}</block></function>

<function><type><name pos:line="191" pos:column="1">void</name></type> <name><name pos:line="191" pos:column="6">Shortcut</name><op:operator pos:line="191" pos:column="14">::</op:operator><name pos:line="191" pos:column="16">setName</name></name><parameter_list pos:line="191" pos:column="23">(<param><decl><type><specifier pos:line="191" pos:column="24">const</specifier> <name pos:line="191" pos:column="30">TCHAR</name> <type:modifier pos:line="191" pos:column="36">*</type:modifier></type> <name pos:line="191" pos:column="38">name</name></decl></param>)</parameter_list> <block pos:line="191" pos:column="44">{
	<expr_stmt><expr><call><name pos:line="192" pos:column="9">lstrcpyn</name><argument_list pos:line="192" pos:column="17">(<argument><expr><name pos:line="192" pos:column="18">_menuName</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="29">name</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="35">nameLenMax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="193" pos:column="9">lstrcpyn</name><argument_list pos:line="193" pos:column="17">(<argument><expr><name pos:line="193" pos:column="18">_name</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="25">name</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="31">nameLenMax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="194" pos:column="9">int</name></type> <name pos:line="194" pos:column="13">i</name> <init pos:line="194" pos:column="15">= <expr><lit:literal type="number" pos:line="194" pos:column="17">0</lit:literal></expr></init><op:operator pos:line="194" pos:column="18">,</op:operator> <name pos:line="194" pos:column="20">j</name> <init pos:line="194" pos:column="22">= <expr><lit:literal type="number" pos:line="194" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="195" pos:column="9">while<condition pos:line="195" pos:column="14">(<expr><name><name pos:line="195" pos:column="15">name</name><index pos:line="195" pos:column="19">[<expr><name pos:line="195" pos:column="20">j</name></expr>]</index></name> <op:operator pos:line="195" pos:column="23">!=</op:operator> <lit:literal type="number" pos:line="195" pos:column="26">0</lit:literal> <op:operator pos:line="195" pos:column="28">&amp;&amp;</op:operator> <name pos:line="195" pos:column="31">i</name> <op:operator pos:line="195" pos:column="33">&lt;</op:operator> <name pos:line="195" pos:column="35">nameLenMax</name></expr>)</condition> <block pos:line="195" pos:column="47">{
		<if pos:line="196" pos:column="17">if <condition pos:line="196" pos:column="20">(<expr><name><name pos:line="196" pos:column="21">name</name><index pos:line="196" pos:column="25">[<expr><name pos:line="196" pos:column="26">j</name></expr>]</index></name> <op:operator pos:line="196" pos:column="29">!=</op:operator> <lit:literal type="char" pos:line="196" pos:column="32">'&amp;'</lit:literal></expr>)</condition><then pos:line="196" pos:column="36"> <block pos:line="196" pos:column="37">{
			<expr_stmt><expr><name><name pos:line="197" pos:column="25">_name</name><index pos:line="197" pos:column="30">[<expr><name pos:line="197" pos:column="31">i</name></expr>]</index></name> <op:operator pos:line="197" pos:column="34">=</op:operator> <name><name pos:line="197" pos:column="36">name</name><index pos:line="197" pos:column="40">[<expr><name pos:line="197" pos:column="41">j</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="198" pos:column="25">i</name><op:operator pos:line="198" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></then> <else pos:line="199" pos:column="19">else <block pos:line="199" pos:column="24">{	<comment type="line" pos:line="199" pos:column="33">//check if this ampersand is being escaped</comment>
			<if pos:line="200" pos:column="25">if <condition pos:line="200" pos:column="28">(<expr><name><name pos:line="200" pos:column="29">name</name><index pos:line="200" pos:column="33">[<expr><name pos:line="200" pos:column="34">j</name><op:operator pos:line="200" pos:column="35">+</op:operator><lit:literal type="number" pos:line="200" pos:column="36">1</lit:literal></expr>]</index></name> <op:operator pos:line="200" pos:column="39">==</op:operator> <lit:literal type="char" pos:line="200" pos:column="42">'&amp;'</lit:literal></expr>)</condition><then pos:line="200" pos:column="46"> <block pos:line="200" pos:column="47">{	<comment type="line" pos:line="200" pos:column="49">//escaped ampersand</comment>
				<expr_stmt><expr><name><name pos:line="201" pos:column="33">_name</name><index pos:line="201" pos:column="38">[<expr><name pos:line="201" pos:column="39">i</name></expr>]</index></name> <op:operator pos:line="201" pos:column="42">=</op:operator> <name><name pos:line="201" pos:column="44">name</name><index pos:line="201" pos:column="48">[<expr><name pos:line="201" pos:column="49">j</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="202" pos:column="33">i</name><op:operator pos:line="202" pos:column="34">++</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="203" pos:column="33">j</name><op:operator pos:line="203" pos:column="34">++</op:operator></expr>;</expr_stmt>	<comment type="line" pos:line="203" pos:column="41">//skip escaped ampersand</comment>
			}</block></then></if>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="206" pos:column="17">j</name><op:operator pos:line="206" pos:column="18">++</op:operator></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><name><name pos:line="208" pos:column="9">_name</name><index pos:line="208" pos:column="14">[<expr><name pos:line="208" pos:column="15">i</name></expr>]</index></name> <op:operator pos:line="208" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="208" pos:column="20">0</lit:literal></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="211" pos:column="1">generic_string</name></type> <name><name pos:line="211" pos:column="16">ScintillaKeyMap</name><op:operator pos:line="211" pos:column="31">::</op:operator><name pos:line="211" pos:column="33">toString</name></name><parameter_list pos:line="211" pos:column="41">()</parameter_list> <specifier pos:line="211" pos:column="44">const</specifier> <block pos:line="211" pos:column="50">{
	<return pos:line="212" pos:column="9">return <expr><call><name pos:line="212" pos:column="16">toString</name><argument_list pos:line="212" pos:column="24">(<argument><expr><lit:literal type="number" pos:line="212" pos:column="25">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="215" pos:column="1">generic_string</name></type> <name><name pos:line="215" pos:column="16">ScintillaKeyMap</name><op:operator pos:line="215" pos:column="31">::</op:operator><name pos:line="215" pos:column="33">toString</name></name><parameter_list pos:line="215" pos:column="41">(<param><decl><type><name pos:line="215" pos:column="42">int</name></type> <name pos:line="215" pos:column="46">index</name></decl></param>)</parameter_list> <specifier pos:line="215" pos:column="53">const</specifier> <block pos:line="215" pos:column="59">{
	<decl_stmt><decl><type><name pos:line="216" pos:column="9">generic_string</name></type> <name pos:line="216" pos:column="24">sc</name> <init pos:line="216" pos:column="27">= <expr><call><name pos:line="216" pos:column="29">TEXT</name><argument_list pos:line="216" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="34">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="217" pos:column="9">if <condition pos:line="217" pos:column="12">(<expr><op:operator pos:line="217" pos:column="13">!</op:operator><call><name pos:line="217" pos:column="14">isEnabled</name><argument_list pos:line="217" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="217" pos:column="26">
		<return pos:line="218" pos:column="17">return <expr><name pos:line="218" pos:column="24">sc</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="220" pos:column="9">KeyCombo</name></type> <name pos:line="220" pos:column="18">kc</name> <init pos:line="220" pos:column="21">= <expr><name><name pos:line="220" pos:column="23">_keyCombos</name><index pos:line="220" pos:column="33">[<expr><name pos:line="220" pos:column="34">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name><name pos:line="221" pos:column="13">kc</name><op:operator pos:line="221" pos:column="15">.</op:operator><name pos:line="221" pos:column="16">_isCtrl</name></name></expr>)</condition><then pos:line="221" pos:column="24">
		<expr_stmt><expr><name pos:line="222" pos:column="17">sc</name> <op:operator pos:line="222" pos:column="20">+=</op:operator> <call><name pos:line="222" pos:column="23">TEXT</name><argument_list pos:line="222" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="28">"Ctrl+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">kc</name><op:operator pos:line="223" pos:column="15">.</op:operator><name pos:line="223" pos:column="16">_isAlt</name></name></expr>)</condition><then pos:line="223" pos:column="23">
		<expr_stmt><expr><name pos:line="224" pos:column="17">sc</name> <op:operator pos:line="224" pos:column="20">+=</op:operator> <call><name pos:line="224" pos:column="23">TEXT</name><argument_list pos:line="224" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="224" pos:column="28">"Alt+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><name><name pos:line="225" pos:column="13">kc</name><op:operator pos:line="225" pos:column="15">.</op:operator><name pos:line="225" pos:column="16">_isShift</name></name></expr>)</condition><then pos:line="225" pos:column="25">
		<expr_stmt><expr><name pos:line="226" pos:column="17">sc</name> <op:operator pos:line="226" pos:column="20">+=</op:operator> <call><name pos:line="226" pos:column="23">TEXT</name><argument_list pos:line="226" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="226" pos:column="28">"Shift+"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="228" pos:column="9">generic_string</name></type> <name pos:line="228" pos:column="24">keyString</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="229" pos:column="9">getKeyStrFromVal</name><argument_list pos:line="229" pos:column="25">(<argument><expr><name><name pos:line="229" pos:column="26">kc</name><op:operator pos:line="229" pos:column="28">.</op:operator><name pos:line="229" pos:column="29">_key</name></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="35">keyString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="230" pos:column="9">sc</name> <op:operator pos:line="230" pos:column="12">+=</op:operator> <name pos:line="230" pos:column="15">keyString</name></expr>;</expr_stmt>
	<return pos:line="231" pos:column="9">return <expr><name pos:line="231" pos:column="16">sc</name></expr>;</return>
}</block></function>

<function><type><name pos:line="234" pos:column="1">KeyCombo</name></type> <name><name pos:line="234" pos:column="10">ScintillaKeyMap</name><op:operator pos:line="234" pos:column="25">::</op:operator><name pos:line="234" pos:column="27">getKeyComboByIndex</name></name><parameter_list pos:line="234" pos:column="45">(<param><decl><type><name pos:line="234" pos:column="46">int</name></type> <name pos:line="234" pos:column="50">index</name></decl></param>)</parameter_list> <specifier pos:line="234" pos:column="57">const</specifier> <block pos:line="234" pos:column="63">{
	<return pos:line="235" pos:column="9">return <expr><name><name pos:line="235" pos:column="16">_keyCombos</name><index pos:line="235" pos:column="26">[<expr><name pos:line="235" pos:column="27">index</name></expr>]</index></name></expr>;</return>
}</block></function>

<function><type><name pos:line="238" pos:column="1">void</name></type> <name><name pos:line="238" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="238" pos:column="21">::</op:operator><name pos:line="238" pos:column="23">setKeyComboByIndex</name></name><parameter_list pos:line="238" pos:column="41">(<param><decl><type><name pos:line="238" pos:column="42">int</name></type> <name pos:line="238" pos:column="46">index</name></decl></param>, <param><decl><type><name pos:line="238" pos:column="53">KeyCombo</name></type> <name pos:line="238" pos:column="62">combo</name></decl></param>)</parameter_list> <block pos:line="238" pos:column="69">{
	<if pos:line="239" pos:column="9">if<condition pos:line="239" pos:column="11">(<expr><name><name pos:line="239" pos:column="12">combo</name><op:operator pos:line="239" pos:column="17">.</op:operator><name pos:line="239" pos:column="18">_key</name></name> <op:operator pos:line="239" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="239" pos:column="26">0</lit:literal> <op:operator pos:line="239" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="239" pos:column="31">(</op:operator><name pos:line="239" pos:column="32">size</name> <op:operator pos:line="239" pos:column="37">&gt;</op:operator> <lit:literal type="number" pos:line="239" pos:column="39">1</lit:literal><op:operator pos:line="239" pos:column="40">)</op:operator></expr>)</condition><then pos:line="239" pos:column="42"> <block pos:line="239" pos:column="43">{	<comment type="line" pos:line="239" pos:column="49">//remove the item if possible</comment>
		<expr_stmt><expr><call><name><name pos:line="240" pos:column="17">_keyCombos</name><op:operator pos:line="240" pos:column="27">.</op:operator><name pos:line="240" pos:column="28">erase</name></name><argument_list pos:line="240" pos:column="33">(<argument><expr><call><name><name pos:line="240" pos:column="34">_keyCombos</name><op:operator pos:line="240" pos:column="44">.</op:operator><name pos:line="240" pos:column="45">begin</name></name><argument_list pos:line="240" pos:column="50">()</argument_list></call> <op:operator pos:line="240" pos:column="53">+</op:operator> <name pos:line="240" pos:column="55">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name><name pos:line="242" pos:column="9">_keyCombos</name><index pos:line="242" pos:column="19">[<expr><name pos:line="242" pos:column="20">index</name></expr>]</index></name> <op:operator pos:line="242" pos:column="27">=</op:operator> <name pos:line="242" pos:column="29">combo</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="245" pos:column="1">void</name></type> <name><name pos:line="245" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="245" pos:column="21">::</op:operator><name pos:line="245" pos:column="23">removeKeyComboByIndex</name></name><parameter_list pos:line="245" pos:column="44">(<param><decl><type><name pos:line="245" pos:column="45">int</name></type> <name pos:line="245" pos:column="49">index</name></decl></param>)</parameter_list> <block pos:line="245" pos:column="56">{
	<if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><name pos:line="246" pos:column="13">size</name> <op:operator pos:line="246" pos:column="18">&gt;</op:operator> <lit:literal type="number" pos:line="246" pos:column="20">1</lit:literal> <op:operator pos:line="246" pos:column="22">&amp;&amp;</op:operator> <name pos:line="246" pos:column="25">index</name> <op:operator pos:line="246" pos:column="31">&gt;</op:operator> <op:operator pos:line="246" pos:column="33">-</op:operator><lit:literal type="number" pos:line="246" pos:column="34">1</lit:literal> <op:operator pos:line="246" pos:column="36">&amp;&amp;</op:operator> <name pos:line="246" pos:column="39">index</name> <op:operator pos:line="246" pos:column="45">&lt;</op:operator> <call><name pos:line="246" pos:column="47">int</name><argument_list pos:line="246" pos:column="50">(<argument><expr><name pos:line="246" pos:column="51">size</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="246" pos:column="57"> <block pos:line="246" pos:column="58">{
		<expr_stmt><expr><call><name><name pos:line="247" pos:column="17">_keyCombos</name><op:operator pos:line="247" pos:column="27">.</op:operator><name pos:line="247" pos:column="28">erase</name></name><argument_list pos:line="247" pos:column="33">(<argument><expr><call><name><name pos:line="247" pos:column="34">_keyCombos</name><op:operator pos:line="247" pos:column="44">.</op:operator><name pos:line="247" pos:column="45">begin</name></name><argument_list pos:line="247" pos:column="50">()</argument_list></call> <op:operator pos:line="247" pos:column="53">+</op:operator> <name pos:line="247" pos:column="55">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="248" pos:column="17">size</name><op:operator pos:line="248" pos:column="21">--</op:operator></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="252" pos:column="1">int</name></type> <name><name pos:line="252" pos:column="5">ScintillaKeyMap</name><op:operator pos:line="252" pos:column="20">::</op:operator><name pos:line="252" pos:column="22">addKeyCombo</name></name><parameter_list pos:line="252" pos:column="33">(<param><decl><type><name pos:line="252" pos:column="34">KeyCombo</name></type> <name pos:line="252" pos:column="43">combo</name></decl></param>)</parameter_list> <block pos:line="252" pos:column="50">{	<comment type="line" pos:line="252" pos:column="57">//returns index where key is added, or -1 when invalid</comment>
	<if pos:line="253" pos:column="9">if <condition pos:line="253" pos:column="12">(<expr><name><name pos:line="253" pos:column="13">combo</name><op:operator pos:line="253" pos:column="18">.</op:operator><name pos:line="253" pos:column="19">_key</name></name> <op:operator pos:line="253" pos:column="24">==</op:operator> <lit:literal type="number" pos:line="253" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="253" pos:column="29">	<comment type="line" pos:line="253" pos:column="33">//do not allow to add disabled keycombos</comment>
		<return pos:line="254" pos:column="17">return <expr><op:operator pos:line="254" pos:column="24">-</op:operator><lit:literal type="number" pos:line="254" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<if pos:line="255" pos:column="9">if <condition pos:line="255" pos:column="12">(<expr><op:operator pos:line="255" pos:column="13">!</op:operator><call><name pos:line="255" pos:column="14">isEnabled</name><argument_list pos:line="255" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="255" pos:column="26"> <block pos:line="255" pos:column="27">{	<comment type="line" pos:line="255" pos:column="33">//disabled, override current combo with new enabled one</comment>
		<expr_stmt><expr><name><name pos:line="256" pos:column="17">_keyCombos</name><index pos:line="256" pos:column="27">[<expr><lit:literal type="number" pos:line="256" pos:column="28">0</lit:literal></expr>]</index></name> <op:operator pos:line="256" pos:column="31">=</op:operator> <name pos:line="256" pos:column="33">combo</name></expr>;</expr_stmt>
		<return pos:line="257" pos:column="17">return <expr><lit:literal type="number" pos:line="257" pos:column="24">0</lit:literal></expr>;</return>
	}</block></then></if>
	<for pos:line="259" pos:column="9">for(<init><decl><type><name pos:line="259" pos:column="13">size_t</name></type> <name pos:line="259" pos:column="20">i</name> <init pos:line="259" pos:column="22">= <expr><lit:literal type="number" pos:line="259" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="259" pos:column="27">i</name> <op:operator pos:line="259" pos:column="29">&lt;</op:operator> <name pos:line="259" pos:column="31">size</name></expr>;</condition> <incr><expr><name pos:line="259" pos:column="37">i</name><op:operator pos:line="259" pos:column="38">++</op:operator></expr></incr>) <block pos:line="259" pos:column="42">{	<comment type="line" pos:line="259" pos:column="49">//if already in the list do not add it</comment>
		<decl_stmt><decl><type><name pos:line="260" pos:column="17">KeyCombo</name> <type:modifier pos:line="260" pos:column="26">&amp;</type:modifier></type> <name pos:line="260" pos:column="28">kc</name> <init pos:line="260" pos:column="31">= <expr><name><name pos:line="260" pos:column="33">_keyCombos</name><index pos:line="260" pos:column="43">[<expr><name pos:line="260" pos:column="44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><name><name pos:line="261" pos:column="21">combo</name><op:operator pos:line="261" pos:column="26">.</op:operator><name pos:line="261" pos:column="27">_key</name></name> <op:operator pos:line="261" pos:column="32">==</op:operator> <name><name pos:line="261" pos:column="35">kc</name><op:operator pos:line="261" pos:column="37">.</op:operator><name pos:line="261" pos:column="38">_key</name></name> <op:operator pos:line="261" pos:column="43">&amp;&amp;</op:operator> <name><name pos:line="261" pos:column="46">combo</name><op:operator pos:line="261" pos:column="51">.</op:operator><name pos:line="261" pos:column="52">_isCtrl</name></name> <op:operator pos:line="261" pos:column="60">==</op:operator> <name><name pos:line="261" pos:column="63">kc</name><op:operator pos:line="261" pos:column="65">.</op:operator><name pos:line="261" pos:column="66">_isCtrl</name></name> <op:operator pos:line="261" pos:column="74">&amp;&amp;</op:operator> <name><name pos:line="261" pos:column="77">combo</name><op:operator pos:line="261" pos:column="82">.</op:operator><name pos:line="261" pos:column="83">_isAlt</name></name> <op:operator pos:line="261" pos:column="90">==</op:operator> <name><name pos:line="261" pos:column="93">kc</name><op:operator pos:line="261" pos:column="95">.</op:operator><name pos:line="261" pos:column="96">_isAlt</name></name> <op:operator pos:line="261" pos:column="103">&amp;&amp;</op:operator> <name><name pos:line="261" pos:column="106">combo</name><op:operator pos:line="261" pos:column="111">.</op:operator><name pos:line="261" pos:column="112">_isShift</name></name> <op:operator pos:line="261" pos:column="121">==</op:operator> <name><name pos:line="261" pos:column="124">kc</name><op:operator pos:line="261" pos:column="126">.</op:operator><name pos:line="261" pos:column="127">_isShift</name></name></expr>)</condition><then pos:line="261" pos:column="136">
			<return pos:line="262" pos:column="25">return <expr><name pos:line="262" pos:column="32">i</name></expr>;</return></then></if>	<comment type="line" pos:line="262" pos:column="41">//already in the list</comment>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="264" pos:column="9">_keyCombos</name><op:operator pos:line="264" pos:column="19">.</op:operator><name pos:line="264" pos:column="20">push_back</name></name><argument_list pos:line="264" pos:column="29">(<argument><expr><name pos:line="264" pos:column="30">combo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="265" pos:column="9">size</name><op:operator pos:line="265" pos:column="13">++</op:operator></expr>;</expr_stmt>
	<return pos:line="266" pos:column="9">return <expr><op:operator pos:line="266" pos:column="16">(</op:operator><name pos:line="266" pos:column="17">size</name> <op:operator pos:line="266" pos:column="22">-</op:operator> <lit:literal type="number" pos:line="266" pos:column="24">1</lit:literal><op:operator pos:line="266" pos:column="25">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="269" pos:column="1">bool</name></type> <name><name pos:line="269" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="269" pos:column="21">::</op:operator><name pos:line="269" pos:column="23">isEnabled</name></name><parameter_list pos:line="269" pos:column="32">()</parameter_list> <specifier pos:line="269" pos:column="35">const</specifier> <block pos:line="269" pos:column="41">{
	<return pos:line="270" pos:column="9">return <expr><op:operator pos:line="270" pos:column="16">(</op:operator><name><name pos:line="270" pos:column="17">_keyCombos</name><index pos:line="270" pos:column="27">[<expr><lit:literal type="number" pos:line="270" pos:column="28">0</lit:literal></expr>]</index></name><op:operator pos:line="270" pos:column="30">.</op:operator><name pos:line="270" pos:column="31">_key</name> <op:operator pos:line="270" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="270" pos:column="39">0</lit:literal><op:operator pos:line="270" pos:column="40">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="273" pos:column="1">size_t</name></type> <name><name pos:line="273" pos:column="8">ScintillaKeyMap</name><op:operator pos:line="273" pos:column="23">::</op:operator><name pos:line="273" pos:column="25">getSize</name></name><parameter_list pos:line="273" pos:column="32">()</parameter_list> <specifier pos:line="273" pos:column="35">const</specifier> <block pos:line="273" pos:column="41">{
	<return pos:line="274" pos:column="9">return <expr><name pos:line="274" pos:column="16">size</name></expr>;</return>
}</block></function>

<function><type><name pos:line="277" pos:column="1">void</name></type> <name pos:line="277" pos:column="6">getKeyStrFromVal</name><parameter_list pos:line="277" pos:column="22">(<param><decl><type><name pos:line="277" pos:column="23">UCHAR</name></type> <name pos:line="277" pos:column="29">keyVal</name></decl></param>, <param><decl><type><name pos:line="277" pos:column="37">generic_string</name> <type:modifier pos:line="277" pos:column="52">&amp;</type:modifier></type> <name pos:line="277" pos:column="54">str</name></decl></param>)</parameter_list>
<block pos:line="278" pos:column="1">{
	<expr_stmt><expr><name pos:line="279" pos:column="9">str</name> <op:operator pos:line="279" pos:column="13">=</op:operator> <call><name pos:line="279" pos:column="15">TEXT</name><argument_list pos:line="279" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="279" pos:column="20">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="280" pos:column="9">bool</name></type> <name pos:line="280" pos:column="14">found</name> <init pos:line="280" pos:column="20">= <expr><lit:literal type="boolean" pos:line="280" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="281" pos:column="9">int</name></type> <name pos:line="281" pos:column="13">i</name></decl>;</decl_stmt>
	<for pos:line="282" pos:column="9">for (<init><expr><name pos:line="282" pos:column="14">i</name> <op:operator pos:line="282" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="282" pos:column="18">0</lit:literal></expr>;</init> <condition><expr><name pos:line="282" pos:column="21">i</name> <op:operator pos:line="282" pos:column="23">&lt;</op:operator> <name pos:line="282" pos:column="25">nrKeys</name></expr>;</condition> <incr><expr><name pos:line="282" pos:column="33">i</name><op:operator pos:line="282" pos:column="34">++</op:operator></expr></incr>) <block pos:line="282" pos:column="38">{
		<if pos:line="283" pos:column="17">if <condition pos:line="283" pos:column="20">(<expr><name pos:line="283" pos:column="21">keyVal</name> <op:operator pos:line="283" pos:column="28">==</op:operator> <name><name pos:line="283" pos:column="31">namedKeyArray</name><index pos:line="283" pos:column="44">[<expr><name pos:line="283" pos:column="45">i</name></expr>]</index></name><op:operator pos:line="283" pos:column="47">.</op:operator><name pos:line="283" pos:column="48">id</name></expr>)</condition><then pos:line="283" pos:column="51"> <block pos:line="283" pos:column="52">{
			<expr_stmt><expr><name pos:line="284" pos:column="25">found</name> <op:operator pos:line="284" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="284" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="285" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<if pos:line="288" pos:column="9">if <condition pos:line="288" pos:column="12">(<expr><name pos:line="288" pos:column="13">found</name></expr>)</condition><then pos:line="288" pos:column="19">
		<expr_stmt><expr><name pos:line="289" pos:column="17">str</name> <op:operator pos:line="289" pos:column="21">=</op:operator> <name><name pos:line="289" pos:column="23">namedKeyArray</name><index pos:line="289" pos:column="36">[<expr><name pos:line="289" pos:column="37">i</name></expr>]</index></name><op:operator pos:line="289" pos:column="39">.</op:operator><name pos:line="289" pos:column="40">name</name></expr>;</expr_stmt></then>
	<else pos:line="290" pos:column="9">else 
		<expr_stmt><expr><name pos:line="291" pos:column="17">str</name> <op:operator pos:line="291" pos:column="21">=</op:operator> <call><name pos:line="291" pos:column="23">TEXT</name><argument_list pos:line="291" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="291" pos:column="28">"Unlisted"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
}</block></function>

<function><type><name pos:line="294" pos:column="1">void</name></type> <name pos:line="294" pos:column="6">getNameStrFromCmd</name><parameter_list pos:line="294" pos:column="23">(<param><decl><type><name pos:line="294" pos:column="24">DWORD</name></type> <name pos:line="294" pos:column="30">cmd</name></decl></param>, <param><decl><type><name pos:line="294" pos:column="35">generic_string</name> <type:modifier pos:line="294" pos:column="50">&amp;</type:modifier></type> <name pos:line="294" pos:column="52">str</name></decl></param>)</parameter_list>
<block pos:line="295" pos:column="1">{
	<if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><op:operator pos:line="296" pos:column="13">(</op:operator><name pos:line="296" pos:column="14">cmd</name> <op:operator pos:line="296" pos:column="18">&gt;=</op:operator> <name pos:line="296" pos:column="21">ID_MACRO</name><op:operator pos:line="296" pos:column="29">)</op:operator> <op:operator pos:line="296" pos:column="31">&amp;&amp;</op:operator> <op:operator pos:line="296" pos:column="34">(</op:operator><name pos:line="296" pos:column="35">cmd</name> <op:operator pos:line="296" pos:column="39">&lt;</op:operator> <name pos:line="296" pos:column="41">ID_MACRO_LIMIT</name><op:operator pos:line="296" pos:column="55">)</op:operator></expr>)</condition><then pos:line="296" pos:column="57">
	<block pos:line="297" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="298" pos:column="17">vector</name><argument_list pos:line="298" pos:column="23">&lt;<argument><expr><name pos:line="298" pos:column="24">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="298" pos:column="39">&amp;</type:modifier></type> <name pos:line="298" pos:column="41">theMacros</name> <init pos:line="298" pos:column="51">= <expr><op:operator pos:line="298" pos:column="53">(</op:operator><call><name><name pos:line="298" pos:column="54">NppParameters</name><op:operator pos:line="298" pos:column="67">::</op:operator><name pos:line="298" pos:column="69">getInstance</name></name><argument_list pos:line="298" pos:column="80">()</argument_list></call><op:operator pos:line="298" pos:column="82">)</op:operator><op:operator pos:line="298" pos:column="83">-&gt;</op:operator><call><name pos:line="298" pos:column="85">getMacroList</name><argument_list pos:line="298" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="299" pos:column="17">int</name></type> <name pos:line="299" pos:column="21">i</name> <init pos:line="299" pos:column="23">= <expr><name pos:line="299" pos:column="25">cmd</name> <op:operator pos:line="299" pos:column="29">-</op:operator> <name pos:line="299" pos:column="31">ID_MACRO</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="300" pos:column="17">str</name> <op:operator pos:line="300" pos:column="21">=</op:operator> <name><name pos:line="300" pos:column="23">theMacros</name><index pos:line="300" pos:column="32">[<expr><name pos:line="300" pos:column="33">i</name></expr>]</index></name><op:operator pos:line="300" pos:column="35">.</op:operator><call><name pos:line="300" pos:column="36">getName</name><argument_list pos:line="300" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="302" pos:column="9">else <if pos:line="302" pos:column="14">if <condition pos:line="302" pos:column="17">(<expr><op:operator pos:line="302" pos:column="18">(</op:operator><name pos:line="302" pos:column="19">cmd</name> <op:operator pos:line="302" pos:column="23">&gt;=</op:operator> <name pos:line="302" pos:column="26">ID_USER_CMD</name><op:operator pos:line="302" pos:column="37">)</op:operator> <op:operator pos:line="302" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="302" pos:column="42">(</op:operator><name pos:line="302" pos:column="43">cmd</name> <op:operator pos:line="302" pos:column="47">&lt;</op:operator> <name pos:line="302" pos:column="49">ID_USER_CMD_LIMIT</name><op:operator pos:line="302" pos:column="66">)</op:operator></expr>)</condition><then pos:line="302" pos:column="68">
	<block pos:line="303" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="304" pos:column="17">vector</name><argument_list pos:line="304" pos:column="23">&lt;<argument><expr><name pos:line="304" pos:column="24">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="304" pos:column="37">&amp;</type:modifier></type> <name pos:line="304" pos:column="39">userCommands</name> <init pos:line="304" pos:column="52">= <expr><op:operator pos:line="304" pos:column="54">(</op:operator><call><name><name pos:line="304" pos:column="55">NppParameters</name><op:operator pos:line="304" pos:column="68">::</op:operator><name pos:line="304" pos:column="70">getInstance</name></name><argument_list pos:line="304" pos:column="81">()</argument_list></call><op:operator pos:line="304" pos:column="83">)</op:operator><op:operator pos:line="304" pos:column="84">-&gt;</op:operator><call><name pos:line="304" pos:column="86">getUserCommandList</name><argument_list pos:line="304" pos:column="104">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="305" pos:column="17">int</name></type> <name pos:line="305" pos:column="21">i</name> <init pos:line="305" pos:column="23">= <expr><name pos:line="305" pos:column="25">cmd</name> <op:operator pos:line="305" pos:column="29">-</op:operator> <name pos:line="305" pos:column="31">ID_USER_CMD</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="306" pos:column="17">str</name> <op:operator pos:line="306" pos:column="21">=</op:operator> <name><name pos:line="306" pos:column="23">userCommands</name><index pos:line="306" pos:column="35">[<expr><name pos:line="306" pos:column="36">i</name></expr>]</index></name><op:operator pos:line="306" pos:column="38">.</op:operator><call><name pos:line="306" pos:column="39">getName</name><argument_list pos:line="306" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="308" pos:column="9">else <if pos:line="308" pos:column="14">if <condition pos:line="308" pos:column="17">(<expr><op:operator pos:line="308" pos:column="18">(</op:operator><name pos:line="308" pos:column="19">cmd</name> <op:operator pos:line="308" pos:column="23">&gt;=</op:operator> <name pos:line="308" pos:column="26">ID_PLUGINS_CMD</name><op:operator pos:line="308" pos:column="40">)</op:operator> <op:operator pos:line="308" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="308" pos:column="45">(</op:operator><name pos:line="308" pos:column="46">cmd</name> <op:operator pos:line="308" pos:column="50">&lt;</op:operator> <name pos:line="308" pos:column="52">ID_PLUGINS_CMD_LIMIT</name><op:operator pos:line="308" pos:column="72">)</op:operator></expr>)</condition><then pos:line="308" pos:column="74">
	<block pos:line="309" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="310" pos:column="17">vector</name><argument_list pos:line="310" pos:column="23">&lt;<argument><expr><name pos:line="310" pos:column="24">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="310" pos:column="43">&amp;</type:modifier></type> <name pos:line="310" pos:column="45">pluginCmds</name> <init pos:line="310" pos:column="56">= <expr><op:operator pos:line="310" pos:column="58">(</op:operator><call><name><name pos:line="310" pos:column="59">NppParameters</name><op:operator pos:line="310" pos:column="72">::</op:operator><name pos:line="310" pos:column="74">getInstance</name></name><argument_list pos:line="310" pos:column="85">()</argument_list></call><op:operator pos:line="310" pos:column="87">)</op:operator><op:operator pos:line="310" pos:column="88">-&gt;</op:operator><call><name pos:line="310" pos:column="90">getPluginCommandList</name><argument_list pos:line="310" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="311" pos:column="17">int</name></type> <name pos:line="311" pos:column="21">i</name> <init pos:line="311" pos:column="23">= <expr><lit:literal type="number" pos:line="311" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="312" pos:column="17">for (<init><decl><type><name pos:line="312" pos:column="22">size_t</name></type> <name pos:line="312" pos:column="29">j</name> <init pos:line="312" pos:column="31">= <expr><lit:literal type="number" pos:line="312" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="312" pos:column="37">j</name> <op:operator pos:line="312" pos:column="39">&lt;</op:operator> <call><name><name pos:line="312" pos:column="41">pluginCmds</name><op:operator pos:line="312" pos:column="51">.</op:operator><name pos:line="312" pos:column="52">size</name></name><argument_list pos:line="312" pos:column="56">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="312" pos:column="61">j</name><op:operator pos:line="312" pos:column="62">++</op:operator></expr></incr>)
		<block pos:line="313" pos:column="17">{
			<if pos:line="314" pos:column="25">if <condition pos:line="314" pos:column="28">(<expr><name><name pos:line="314" pos:column="29">pluginCmds</name><index pos:line="314" pos:column="39">[<expr><name pos:line="314" pos:column="40">j</name></expr>]</index></name><op:operator pos:line="314" pos:column="42">.</op:operator><call><name pos:line="314" pos:column="43">getID</name><argument_list pos:line="314" pos:column="48">()</argument_list></call> <op:operator pos:line="314" pos:column="51">==</op:operator> <name pos:line="314" pos:column="54">cmd</name></expr>)</condition><then pos:line="314" pos:column="58">
			<block pos:line="315" pos:column="25">{
				<expr_stmt><expr><name pos:line="316" pos:column="33">i</name> <op:operator pos:line="316" pos:column="35">=</op:operator> <name pos:line="316" pos:column="37">j</name></expr>;</expr_stmt>
				<break pos:line="317" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><name pos:line="320" pos:column="17">str</name> <op:operator pos:line="320" pos:column="21">=</op:operator> <name><name pos:line="320" pos:column="23">pluginCmds</name><index pos:line="320" pos:column="33">[<expr><name pos:line="320" pos:column="34">i</name></expr>]</index></name><op:operator pos:line="320" pos:column="36">.</op:operator><call><name pos:line="320" pos:column="37">getName</name><argument_list pos:line="320" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="322" pos:column="9">else
	<block pos:line="323" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="324" pos:column="17">HWND</name></type> <name pos:line="324" pos:column="22">hNotepad_plus</name> <init pos:line="324" pos:column="36">= <expr><call><name><op:operator pos:line="324" pos:column="38">::</op:operator><name pos:line="324" pos:column="40">FindWindow</name></name><argument_list pos:line="324" pos:column="50">(<argument><expr><call><name><name pos:line="324" pos:column="51">Notepad_plus_Window</name><op:operator pos:line="324" pos:column="70">::</op:operator><name pos:line="324" pos:column="72">getClassName</name></name><argument_list pos:line="324" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="324" pos:column="88">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="325" pos:column="17">const</specifier> <name pos:line="325" pos:column="23">int</name></type> <name pos:line="325" pos:column="27">commandSize</name> <init pos:line="325" pos:column="39">= <expr><lit:literal type="number" pos:line="325" pos:column="41">64</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="326" pos:column="17">TCHAR</name></type> <name><name pos:line="326" pos:column="23">cmdName</name><index pos:line="326" pos:column="30">[<expr><name pos:line="326" pos:column="31">commandSize</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="327" pos:column="17">int</name></type> <name pos:line="327" pos:column="21">nbChar</name> <init pos:line="327" pos:column="28">= <expr><call><name><op:operator pos:line="327" pos:column="30">::</op:operator><name pos:line="327" pos:column="32">GetMenuString</name></name><argument_list pos:line="327" pos:column="45">(<argument><expr><op:operator pos:line="327" pos:column="46">(</op:operator><name pos:line="327" pos:column="47">HMENU</name><op:operator pos:line="327" pos:column="52">)</op:operator><call><name><op:operator pos:line="327" pos:column="53">::</op:operator><name pos:line="327" pos:column="55">SendMessage</name></name><argument_list pos:line="327" pos:column="66">(<argument><expr><name pos:line="327" pos:column="67">hNotepad_plus</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="82">NPPM_INTERNAL_GETMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="327" pos:column="105">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="327" pos:column="108">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="327" pos:column="112">cmd</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="117">cmdName</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="126">commandSize</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="139">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="328" pos:column="17">if <condition pos:line="328" pos:column="20">(<expr><op:operator pos:line="328" pos:column="21">!</op:operator><name pos:line="328" pos:column="22">nbChar</name></expr>)</condition><then pos:line="328" pos:column="29">
			<return pos:line="329" pos:column="25">return;</return></then></if>
		<decl_stmt><decl><type><name pos:line="330" pos:column="17">bool</name></type> <name pos:line="330" pos:column="22">fin</name> <init pos:line="330" pos:column="26">= <expr><lit:literal type="boolean" pos:line="330" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="331" pos:column="17">int</name></type> <name pos:line="331" pos:column="21">j</name> <init pos:line="331" pos:column="23">= <expr><lit:literal type="number" pos:line="331" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="332" pos:column="17">size_t</name></type> <name pos:line="332" pos:column="24">len</name> <init pos:line="332" pos:column="28">= <expr><call><name pos:line="332" pos:column="30">lstrlen</name><argument_list pos:line="332" pos:column="37">(<argument><expr><name pos:line="332" pos:column="38">cmdName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="333" pos:column="17">for (<init><decl><type><name pos:line="333" pos:column="22">size_t</name></type> <name pos:line="333" pos:column="29">i</name> <init pos:line="333" pos:column="31">= <expr><lit:literal type="number" pos:line="333" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="333" pos:column="37">i</name> <op:operator pos:line="333" pos:column="39">&lt;</op:operator> <name pos:line="333" pos:column="41">len</name></expr>;</condition> <incr><expr><name pos:line="333" pos:column="46">i</name><op:operator pos:line="333" pos:column="47">++</op:operator></expr></incr>)
		<block pos:line="334" pos:column="17">{
			<switch pos:line="335" pos:column="25">switch<condition pos:line="335" pos:column="31">(<expr><name><name pos:line="335" pos:column="32">cmdName</name><index pos:line="335" pos:column="39">[<expr><name pos:line="335" pos:column="40">i</name></expr>]</index></name></expr>)</condition>
			<block pos:line="336" pos:column="25">{
				<case pos:line="337" pos:column="33">case <expr><lit:literal type="char" pos:line="337" pos:column="38">'\t'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="338" pos:column="41">cmdName</name><index pos:line="338" pos:column="48">[<expr><name pos:line="338" pos:column="49">j</name></expr>]</index></name> <op:operator pos:line="338" pos:column="52">=</op:operator> <lit:literal type="char" pos:line="338" pos:column="54">'\0'</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="339" pos:column="41">fin</name> <op:operator pos:line="339" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="339" pos:column="47">true</lit:literal></expr>;</expr_stmt>
					<break pos:line="340" pos:column="41">break;</break>

				</case><case pos:line="342" pos:column="33">case <expr><lit:literal type="char" pos:line="342" pos:column="38">'&amp;'</lit:literal></expr>:
					<break pos:line="343" pos:column="41">break;</break>

				</case><default pos:line="345" pos:column="33">default :
					<expr_stmt><expr><name><name pos:line="346" pos:column="41">cmdName</name><index pos:line="346" pos:column="48">[<expr><name pos:line="346" pos:column="49">j</name><op:operator pos:line="346" pos:column="50">++</op:operator></expr>]</index></name> <op:operator pos:line="346" pos:column="54">=</op:operator> <name><name pos:line="346" pos:column="56">cmdName</name><index pos:line="346" pos:column="63">[<expr><name pos:line="346" pos:column="64">i</name></expr>]</index></name></expr>;</expr_stmt>
			</default>}</block></switch>
			<if pos:line="348" pos:column="25">if <condition pos:line="348" pos:column="28">(<expr><name pos:line="348" pos:column="29">fin</name></expr>)</condition><then pos:line="348" pos:column="33">
				<break pos:line="349" pos:column="33">break;</break></then></if>
		}</block></for>
		<expr_stmt><expr><name><name pos:line="351" pos:column="17">cmdName</name><index pos:line="351" pos:column="24">[<expr><name pos:line="351" pos:column="25">j</name></expr>]</index></name> <op:operator pos:line="351" pos:column="28">=</op:operator> <lit:literal type="char" pos:line="351" pos:column="30">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="352" pos:column="17">str</name> <op:operator pos:line="352" pos:column="21">=</op:operator> <name pos:line="352" pos:column="23">cmdName</name></expr>;</expr_stmt>
	}</block></else></if></else></if></else></if>
	<return pos:line="354" pos:column="9">return;</return>
}</block></function>

<function><type><name pos:line="357" pos:column="1">BOOL</name> <name pos:line="357" pos:column="6">CALLBACK</name></type> <name><name pos:line="357" pos:column="15">Shortcut</name><op:operator pos:line="357" pos:column="23">::</op:operator><name pos:line="357" pos:column="25">run_dlgProc</name></name><parameter_list pos:line="357" pos:column="36">(<param><decl><type><name pos:line="357" pos:column="37">UINT</name></type> <name pos:line="357" pos:column="42">Message</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="51">WPARAM</name></type> <name pos:line="357" pos:column="58">wParam</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="66">LPARAM</name></type></decl></param>)</parameter_list> 
<block pos:line="358" pos:column="1">{
	<switch pos:line="359" pos:column="9">switch <condition pos:line="359" pos:column="16">(<expr><name pos:line="359" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="360" pos:column="9">{
		<case pos:line="361" pos:column="17">case <expr><name pos:line="361" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="362" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="363" pos:column="25">::</op:operator><name pos:line="363" pos:column="27">SetDlgItemText</name></name><argument_list pos:line="363" pos:column="41">(<argument><expr><name pos:line="363" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="363" pos:column="50">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><call><name pos:line="363" pos:column="65">getMenuName</name><argument_list pos:line="363" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="363" pos:column="81">//display the menu name, with ampersands</comment>
			<if pos:line="364" pos:column="25">if <condition pos:line="364" pos:column="28">(<expr><op:operator pos:line="364" pos:column="29">!</op:operator><name pos:line="364" pos:column="30">_canModifyName</name></expr>)</condition><then pos:line="364" pos:column="45">
				<expr_stmt><expr><call><name><op:operator pos:line="365" pos:column="33">::</op:operator><name pos:line="365" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="365" pos:column="53">(<argument><expr><name pos:line="365" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="62">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="77">EM_SETREADONLY</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="93">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="365" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<decl_stmt><decl><type><name pos:line="366" pos:column="25">int</name></type> <name pos:line="366" pos:column="29">textlen</name> <init pos:line="366" pos:column="37">= <expr><op:operator pos:line="366" pos:column="39">(</op:operator><name pos:line="366" pos:column="40">int</name><op:operator pos:line="366" pos:column="43">)</op:operator><call><name><op:operator pos:line="366" pos:column="44">::</op:operator><name pos:line="366" pos:column="46">SendDlgItemMessage</name></name><argument_list pos:line="366" pos:column="64">(<argument><expr><name pos:line="366" pos:column="65">_hSelf</name></expr></argument>, <argument><expr><name pos:line="366" pos:column="73">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><name pos:line="366" pos:column="88">WM_GETTEXTLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="366" pos:column="106">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="366" pos:column="109">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="368" pos:column="25">::</op:operator><name pos:line="368" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="368" pos:column="45">(<argument><expr><name pos:line="368" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="54">IDC_CTRL_CHECK</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="70">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="368" pos:column="83">_keyCombo</name><op:operator pos:line="368" pos:column="92">.</op:operator><name pos:line="368" pos:column="93">_isCtrl</name></name><op:operator pos:line="368" pos:column="100">?</op:operator><name pos:line="368" pos:column="101">BST_CHECKED</name><op:operator pos:line="368" pos:column="112">:</op:operator><name pos:line="368" pos:column="113">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="368" pos:column="128">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="369" pos:column="25">::</op:operator><name pos:line="369" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="369" pos:column="45">(<argument><expr><name pos:line="369" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="54">IDC_ALT_CHECK</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="69">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="369" pos:column="82">_keyCombo</name><op:operator pos:line="369" pos:column="91">.</op:operator><name pos:line="369" pos:column="92">_isAlt</name></name><op:operator pos:line="369" pos:column="98">?</op:operator><name pos:line="369" pos:column="99">BST_CHECKED</name><op:operator pos:line="369" pos:column="110">:</op:operator><name pos:line="369" pos:column="111">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="369" pos:column="126">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="370" pos:column="25">::</op:operator><name pos:line="370" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="370" pos:column="45">(<argument><expr><name pos:line="370" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="370" pos:column="54">IDC_SHIFT_CHECK</name></expr></argument>, <argument><expr><name pos:line="370" pos:column="71">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="370" pos:column="84">_keyCombo</name><op:operator pos:line="370" pos:column="93">.</op:operator><name pos:line="370" pos:column="94">_isShift</name></name><op:operator pos:line="370" pos:column="102">?</op:operator><name pos:line="370" pos:column="103">BST_CHECKED</name><op:operator pos:line="370" pos:column="114">:</op:operator><name pos:line="370" pos:column="115">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="370" pos:column="130">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="371" pos:column="25">::</op:operator><name pos:line="371" pos:column="27">EnableWindow</name></name><argument_list pos:line="371" pos:column="39">(<argument><expr><call><name><op:operator pos:line="371" pos:column="40">::</op:operator><name pos:line="371" pos:column="42">GetDlgItem</name></name><argument_list pos:line="371" pos:column="52">(<argument><expr><name pos:line="371" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="371" pos:column="61">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="371" pos:column="68">isValid</name><argument_list pos:line="371" pos:column="75">()</argument_list></call> <op:operator pos:line="371" pos:column="78">&amp;&amp;</op:operator> <op:operator pos:line="371" pos:column="81">(</op:operator><name pos:line="371" pos:column="82">textlen</name> <op:operator pos:line="371" pos:column="90">&gt;</op:operator> <lit:literal type="number" pos:line="371" pos:column="92">0</lit:literal> <op:operator pos:line="371" pos:column="94">||</op:operator> <op:operator pos:line="371" pos:column="97">!</op:operator><name pos:line="371" pos:column="98">_canModifyName</name><op:operator pos:line="371" pos:column="112">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="372" pos:column="25">int</name></type> <name pos:line="372" pos:column="29">iFound</name> <init pos:line="372" pos:column="36">= <expr><op:operator pos:line="372" pos:column="38">-</op:operator><lit:literal type="number" pos:line="372" pos:column="39">1</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="373" pos:column="25">for (<init><decl><type><name pos:line="373" pos:column="30">size_t</name></type> <name pos:line="373" pos:column="37">i</name> <init pos:line="373" pos:column="39">= <expr><lit:literal type="number" pos:line="373" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="373" pos:column="45">i</name> <op:operator pos:line="373" pos:column="47">&lt;</op:operator> <name pos:line="373" pos:column="49">nrKeys</name></expr> ;</condition> <incr><expr><name pos:line="373" pos:column="58">i</name><op:operator pos:line="373" pos:column="59">++</op:operator></expr></incr>)
			<block pos:line="374" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="375" pos:column="33">::</op:operator><name pos:line="375" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="375" pos:column="53">(<argument><expr><name pos:line="375" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="375" pos:column="62">IDC_KEY_COMBO</name></expr></argument>, <argument><expr><name pos:line="375" pos:column="77">CB_ADDSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="375" pos:column="91">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="375" pos:column="94">(</op:operator><name pos:line="375" pos:column="95">LPARAM</name><op:operator pos:line="375" pos:column="101">)</op:operator><name><name pos:line="375" pos:column="102">namedKeyArray</name><index pos:line="375" pos:column="115">[<expr><name pos:line="375" pos:column="116">i</name></expr>]</index></name><op:operator pos:line="375" pos:column="118">.</op:operator><name pos:line="375" pos:column="119">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="377" pos:column="33">if <condition pos:line="377" pos:column="36">(<expr><name><name pos:line="377" pos:column="37">_keyCombo</name><op:operator pos:line="377" pos:column="46">.</op:operator><name pos:line="377" pos:column="47">_key</name></name> <op:operator pos:line="377" pos:column="52">==</op:operator> <name><name pos:line="377" pos:column="55">namedKeyArray</name><index pos:line="377" pos:column="68">[<expr><name pos:line="377" pos:column="69">i</name></expr>]</index></name><op:operator pos:line="377" pos:column="71">.</op:operator><name pos:line="377" pos:column="72">id</name></expr>)</condition><then pos:line="377" pos:column="75">
					<expr_stmt><expr><name pos:line="378" pos:column="41">iFound</name> <op:operator pos:line="378" pos:column="48">=</op:operator> <name pos:line="378" pos:column="50">i</name></expr>;</expr_stmt></then></if>
			}</block></for>

			<if pos:line="381" pos:column="25">if <condition pos:line="381" pos:column="28">(<expr><name pos:line="381" pos:column="29">iFound</name> <op:operator pos:line="381" pos:column="36">!=</op:operator> <op:operator pos:line="381" pos:column="39">-</op:operator><lit:literal type="number" pos:line="381" pos:column="40">1</lit:literal></expr>)</condition><then pos:line="381" pos:column="42">
				<expr_stmt><expr><call><name><op:operator pos:line="382" pos:column="33">::</op:operator><name pos:line="382" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="382" pos:column="53">(<argument><expr><name pos:line="382" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="382" pos:column="62">IDC_KEY_COMBO</name></expr></argument>, <argument><expr><name pos:line="382" pos:column="77">CB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="382" pos:column="91">iFound</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="382" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><op:operator pos:line="383" pos:column="25">::</op:operator><name pos:line="383" pos:column="27">ShowWindow</name></name><argument_list pos:line="383" pos:column="37">(<argument><expr><call><name><op:operator pos:line="383" pos:column="38">::</op:operator><name pos:line="383" pos:column="40">GetDlgItem</name></name><argument_list pos:line="383" pos:column="50">(<argument><expr><name pos:line="383" pos:column="51">_hSelf</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="59">IDC_WARNING_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="383" pos:column="80">isEnabled</name><argument_list pos:line="383" pos:column="89">()</argument_list></call><op:operator pos:line="383" pos:column="91">?</op:operator><name pos:line="383" pos:column="92">SW_HIDE</name><op:operator pos:line="383" pos:column="99">:</op:operator><name pos:line="383" pos:column="100">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="385" pos:column="25">goToCenter</name><argument_list pos:line="385" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="386" pos:column="25">return <expr><name pos:line="386" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="389" pos:column="17">case <expr><name pos:line="389" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="390" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="391" pos:column="25">int</name></type> <name pos:line="391" pos:column="29">textlen</name> <init pos:line="391" pos:column="37">= <expr><op:operator pos:line="391" pos:column="39">(</op:operator><name pos:line="391" pos:column="40">int</name><op:operator pos:line="391" pos:column="43">)</op:operator><call><name><op:operator pos:line="391" pos:column="44">::</op:operator><name pos:line="391" pos:column="46">SendDlgItemMessage</name></name><argument_list pos:line="391" pos:column="64">(<argument><expr><name pos:line="391" pos:column="65">_hSelf</name></expr></argument>, <argument><expr><name pos:line="391" pos:column="73">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><name pos:line="391" pos:column="88">WM_GETTEXTLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="391" pos:column="106">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="391" pos:column="109">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<switch pos:line="392" pos:column="25">switch <condition pos:line="392" pos:column="32">(<expr><name pos:line="392" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="393" pos:column="25">{
				<case pos:line="394" pos:column="33">case <expr><name pos:line="394" pos:column="38">IDC_CTRL_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="395" pos:column="41">_keyCombo</name><op:operator pos:line="395" pos:column="50">.</op:operator><name pos:line="395" pos:column="51">_isCtrl</name></name> <op:operator pos:line="395" pos:column="59">=</op:operator> <name pos:line="395" pos:column="61">BST_CHECKED</name> <op:operator pos:line="395" pos:column="73">==</op:operator> <call><name><op:operator pos:line="395" pos:column="76">::</op:operator><name pos:line="395" pos:column="78">SendDlgItemMessage</name></name><argument_list pos:line="395" pos:column="96">(<argument><expr><name pos:line="395" pos:column="97">_hSelf</name></expr></argument>, <argument><expr><name pos:line="395" pos:column="105">wParam</name></expr></argument>, <argument><expr><name pos:line="395" pos:column="113">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="395" pos:column="126">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="395" pos:column="129">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="396" pos:column="41">::</op:operator><name pos:line="396" pos:column="43">EnableWindow</name></name><argument_list pos:line="396" pos:column="55">(<argument><expr><call><name><op:operator pos:line="396" pos:column="56">::</op:operator><name pos:line="396" pos:column="58">GetDlgItem</name></name><argument_list pos:line="396" pos:column="68">(<argument><expr><name pos:line="396" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="396" pos:column="77">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="396" pos:column="84">isValid</name><argument_list pos:line="396" pos:column="91">()</argument_list></call> <op:operator pos:line="396" pos:column="94">&amp;&amp;</op:operator> <op:operator pos:line="396" pos:column="97">(</op:operator><name pos:line="396" pos:column="98">textlen</name> <op:operator pos:line="396" pos:column="106">&gt;</op:operator> <lit:literal type="number" pos:line="396" pos:column="108">0</lit:literal> <op:operator pos:line="396" pos:column="110">||</op:operator> <op:operator pos:line="396" pos:column="113">!</op:operator><name pos:line="396" pos:column="114">_canModifyName</name><op:operator pos:line="396" pos:column="128">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="397" pos:column="41">return <expr><name pos:line="397" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="399" pos:column="33">case <expr><name pos:line="399" pos:column="38">IDC_ALT_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="400" pos:column="41">_keyCombo</name><op:operator pos:line="400" pos:column="50">.</op:operator><name pos:line="400" pos:column="51">_isAlt</name></name> <op:operator pos:line="400" pos:column="58">=</op:operator> <name pos:line="400" pos:column="60">BST_CHECKED</name> <op:operator pos:line="400" pos:column="72">==</op:operator> <call><name><op:operator pos:line="400" pos:column="75">::</op:operator><name pos:line="400" pos:column="77">SendDlgItemMessage</name></name><argument_list pos:line="400" pos:column="95">(<argument><expr><name pos:line="400" pos:column="96">_hSelf</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="104">wParam</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="112">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="400" pos:column="125">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="400" pos:column="128">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="401" pos:column="41">::</op:operator><name pos:line="401" pos:column="43">EnableWindow</name></name><argument_list pos:line="401" pos:column="55">(<argument><expr><call><name><op:operator pos:line="401" pos:column="56">::</op:operator><name pos:line="401" pos:column="58">GetDlgItem</name></name><argument_list pos:line="401" pos:column="68">(<argument><expr><name pos:line="401" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="401" pos:column="77">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="401" pos:column="84">isValid</name><argument_list pos:line="401" pos:column="91">()</argument_list></call> <op:operator pos:line="401" pos:column="94">&amp;&amp;</op:operator> <op:operator pos:line="401" pos:column="97">(</op:operator><name pos:line="401" pos:column="98">textlen</name> <op:operator pos:line="401" pos:column="106">&gt;</op:operator> <lit:literal type="number" pos:line="401" pos:column="108">0</lit:literal> <op:operator pos:line="401" pos:column="110">||</op:operator> <op:operator pos:line="401" pos:column="113">!</op:operator><name pos:line="401" pos:column="114">_canModifyName</name><op:operator pos:line="401" pos:column="128">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="402" pos:column="41">return <expr><name pos:line="402" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="404" pos:column="33">case <expr><name pos:line="404" pos:column="38">IDC_SHIFT_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="405" pos:column="41">_keyCombo</name><op:operator pos:line="405" pos:column="50">.</op:operator><name pos:line="405" pos:column="51">_isShift</name></name> <op:operator pos:line="405" pos:column="60">=</op:operator> <name pos:line="405" pos:column="62">BST_CHECKED</name> <op:operator pos:line="405" pos:column="74">==</op:operator> <call><name><op:operator pos:line="405" pos:column="77">::</op:operator><name pos:line="405" pos:column="79">SendDlgItemMessage</name></name><argument_list pos:line="405" pos:column="97">(<argument><expr><name pos:line="405" pos:column="98">_hSelf</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="106">wParam</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="114">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="127">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="130">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="406" pos:column="41">return <expr><name pos:line="406" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="408" pos:column="33">case <expr><name pos:line="408" pos:column="38">IDOK</name></expr> :
					<if pos:line="409" pos:column="41">if <condition pos:line="409" pos:column="44">(<expr><op:operator pos:line="409" pos:column="45">!</op:operator><call><name pos:line="409" pos:column="46">isEnabled</name><argument_list pos:line="409" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="409" pos:column="58"> <block pos:line="409" pos:column="59">{
						<expr_stmt><expr><name><name pos:line="410" pos:column="49">_keyCombo</name><op:operator pos:line="410" pos:column="58">.</op:operator><name pos:line="410" pos:column="59">_isCtrl</name></name> <op:operator pos:line="410" pos:column="67">=</op:operator> <name><name pos:line="410" pos:column="69">_keyCombo</name><op:operator pos:line="410" pos:column="78">.</op:operator><name pos:line="410" pos:column="79">_isAlt</name></name> <op:operator pos:line="410" pos:column="86">=</op:operator> <name><name pos:line="410" pos:column="88">_keyCombo</name><op:operator pos:line="410" pos:column="97">.</op:operator><name pos:line="410" pos:column="98">_isShift</name></name> <op:operator pos:line="410" pos:column="107">=</op:operator> <lit:literal type="boolean" pos:line="410" pos:column="109">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
					<if pos:line="412" pos:column="41">if <condition pos:line="412" pos:column="44">(<expr><name pos:line="412" pos:column="45">_canModifyName</name></expr>)</condition><then pos:line="412" pos:column="60"> <block pos:line="412" pos:column="61">{
						<decl_stmt><decl><type><name pos:line="413" pos:column="49">TCHAR</name></type> <name><name pos:line="413" pos:column="55">editName</name><index pos:line="413" pos:column="63">[<expr><name pos:line="413" pos:column="64">nameLenMax</name></expr>]</index></name></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="414" pos:column="49">::</op:operator><name pos:line="414" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="414" pos:column="69">(<argument><expr><name pos:line="414" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="78">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="93">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="105">nameLenMax</name></expr></argument>, <argument><expr><op:operator pos:line="414" pos:column="117">(</op:operator><name pos:line="414" pos:column="118">LPARAM</name><op:operator pos:line="414" pos:column="124">)</op:operator><name pos:line="414" pos:column="125">editName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="415" pos:column="49">setName</name><argument_list pos:line="415" pos:column="56">(<argument><expr><name pos:line="415" pos:column="57">editName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><call><name><op:operator pos:line="417" pos:column="41">::</op:operator><name pos:line="417" pos:column="43">EndDialog</name></name><argument_list pos:line="417" pos:column="52">(<argument><expr><name pos:line="417" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="417" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="418" pos:column="41">return <expr><name pos:line="418" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="420" pos:column="33">case <expr><name pos:line="420" pos:column="38">IDCANCEL</name></expr> :
					<expr_stmt><expr><call><name><op:operator pos:line="421" pos:column="41">::</op:operator><name pos:line="421" pos:column="43">EndDialog</name></name><argument_list pos:line="421" pos:column="52">(<argument><expr><name pos:line="421" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="421" pos:column="61">-</op:operator><lit:literal type="number" pos:line="421" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="422" pos:column="41">return <expr><name pos:line="422" pos:column="48">TRUE</name></expr>;</return>

				</case><default pos:line="424" pos:column="33">default:
					<if pos:line="425" pos:column="41">if <condition pos:line="425" pos:column="44">(<expr><call><name pos:line="425" pos:column="45">HIWORD</name><argument_list pos:line="425" pos:column="51">(<argument><expr><name pos:line="425" pos:column="52">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="425" pos:column="60">==</op:operator> <name pos:line="425" pos:column="63">EN_CHANGE</name></expr>)</condition><then pos:line="425" pos:column="73">
					<block pos:line="426" pos:column="41">{
						<if pos:line="427" pos:column="49">if <condition pos:line="427" pos:column="52">(<expr><call><name pos:line="427" pos:column="53">LOWORD</name><argument_list pos:line="427" pos:column="59">(<argument><expr><name pos:line="427" pos:column="60">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="427" pos:column="68">==</op:operator> <name pos:line="427" pos:column="71">IDC_NAME_EDIT</name></expr>)</condition><then pos:line="427" pos:column="85">
						<block pos:line="428" pos:column="49">{
							<expr_stmt><expr><call><name><op:operator pos:line="429" pos:column="57">::</op:operator><name pos:line="429" pos:column="59">EnableWindow</name></name><argument_list pos:line="429" pos:column="71">(<argument><expr><call><name><op:operator pos:line="429" pos:column="72">::</op:operator><name pos:line="429" pos:column="74">GetDlgItem</name></name><argument_list pos:line="429" pos:column="84">(<argument><expr><name pos:line="429" pos:column="85">_hSelf</name></expr></argument>, <argument><expr><name pos:line="429" pos:column="93">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="429" pos:column="100">isValid</name><argument_list pos:line="429" pos:column="107">()</argument_list></call> <op:operator pos:line="429" pos:column="110">&amp;&amp;</op:operator> <op:operator pos:line="429" pos:column="113">(</op:operator><name pos:line="429" pos:column="114">textlen</name> <op:operator pos:line="429" pos:column="122">&gt;</op:operator> <lit:literal type="number" pos:line="429" pos:column="124">0</lit:literal> <op:operator pos:line="429" pos:column="126">||</op:operator> <op:operator pos:line="429" pos:column="129">!</op:operator><name pos:line="429" pos:column="130">_canModifyName</name><op:operator pos:line="429" pos:column="144">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<return pos:line="430" pos:column="57">return <expr><name pos:line="430" pos:column="64">TRUE</name></expr>;</return>
						}</block></then></if>
					}</block></then>
					<else pos:line="433" pos:column="41">else <if pos:line="433" pos:column="46">if <condition pos:line="433" pos:column="49">(<expr><call><name pos:line="433" pos:column="50">HIWORD</name><argument_list pos:line="433" pos:column="56">(<argument><expr><name pos:line="433" pos:column="57">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="433" pos:column="65">==</op:operator> <name pos:line="433" pos:column="68">CBN_SELCHANGE</name></expr>)</condition><then pos:line="433" pos:column="82">
					<block pos:line="434" pos:column="41">{
						<if pos:line="435" pos:column="49">if <condition pos:line="435" pos:column="52">(<expr><call><name pos:line="435" pos:column="53">LOWORD</name><argument_list pos:line="435" pos:column="59">(<argument><expr><name pos:line="435" pos:column="60">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="435" pos:column="68">==</op:operator> <name pos:line="435" pos:column="71">IDC_KEY_COMBO</name></expr>)</condition><then pos:line="435" pos:column="85">
						<block pos:line="436" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="437" pos:column="57">int</name></type> <name pos:line="437" pos:column="61">i</name> <init pos:line="437" pos:column="63">= <expr><call><name><op:operator pos:line="437" pos:column="65">::</op:operator><name pos:line="437" pos:column="67">SendDlgItemMessage</name></name><argument_list pos:line="437" pos:column="85">(<argument><expr><name pos:line="437" pos:column="86">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="437" pos:column="94">LOWORD</name><argument_list pos:line="437" pos:column="100">(<argument><expr><name pos:line="437" pos:column="101">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="437" pos:column="110">CB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="437" pos:column="124">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="437" pos:column="127">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><name><name pos:line="438" pos:column="57">_keyCombo</name><op:operator pos:line="438" pos:column="66">.</op:operator><name pos:line="438" pos:column="67">_key</name></name> <op:operator pos:line="438" pos:column="72">=</op:operator> <name><name pos:line="438" pos:column="74">namedKeyArray</name><index pos:line="438" pos:column="87">[<expr><name pos:line="438" pos:column="88">i</name></expr>]</index></name><op:operator pos:line="438" pos:column="90">.</op:operator><name pos:line="438" pos:column="91">id</name></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><op:operator pos:line="439" pos:column="57">::</op:operator><name pos:line="439" pos:column="59">EnableWindow</name></name><argument_list pos:line="439" pos:column="71">(<argument><expr><call><name><op:operator pos:line="439" pos:column="72">::</op:operator><name pos:line="439" pos:column="74">GetDlgItem</name></name><argument_list pos:line="439" pos:column="84">(<argument><expr><name pos:line="439" pos:column="85">_hSelf</name></expr></argument>, <argument><expr><name pos:line="439" pos:column="93">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="439" pos:column="100">isValid</name><argument_list pos:line="439" pos:column="107">()</argument_list></call> <op:operator pos:line="439" pos:column="110">&amp;&amp;</op:operator> <op:operator pos:line="439" pos:column="113">(</op:operator><name pos:line="439" pos:column="114">textlen</name> <op:operator pos:line="439" pos:column="122">&gt;</op:operator> <lit:literal type="number" pos:line="439" pos:column="124">0</lit:literal> <op:operator pos:line="439" pos:column="126">||</op:operator> <op:operator pos:line="439" pos:column="129">!</op:operator><name pos:line="439" pos:column="130">_canModifyName</name><op:operator pos:line="439" pos:column="144">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><op:operator pos:line="440" pos:column="57">::</op:operator><name pos:line="440" pos:column="59">ShowWindow</name></name><argument_list pos:line="440" pos:column="69">(<argument><expr><call><name><op:operator pos:line="440" pos:column="70">::</op:operator><name pos:line="440" pos:column="72">GetDlgItem</name></name><argument_list pos:line="440" pos:column="82">(<argument><expr><name pos:line="440" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="440" pos:column="91">IDC_WARNING_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="440" pos:column="112">isEnabled</name><argument_list pos:line="440" pos:column="121">()</argument_list></call><op:operator pos:line="440" pos:column="123">?</op:operator><name pos:line="440" pos:column="124">SW_HIDE</name><op:operator pos:line="440" pos:column="131">:</op:operator><name pos:line="440" pos:column="132">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<return pos:line="441" pos:column="57">return <expr><name pos:line="441" pos:column="64">TRUE</name></expr>;</return>
						}</block></then></if>
					}</block></then></if></else></if>
					<return pos:line="444" pos:column="41">return <expr><name pos:line="444" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="447" pos:column="17">default :
			<return pos:line="448" pos:column="25">return <expr><name pos:line="448" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>

<comment type="line" pos:line="452" pos:column="1">// return true if one of CommandShortcuts is deleted. Otherwise false.</comment>
<function><type><name pos:line="453" pos:column="1">void</name></type> <name><name pos:line="453" pos:column="6">Accelerator</name><op:operator pos:line="453" pos:column="17">::</op:operator><name pos:line="453" pos:column="19">updateShortcuts</name></name><parameter_list pos:line="453" pos:column="34">()</parameter_list> 
<block pos:line="454" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="455" pos:column="9">NppParameters</name> <type:modifier pos:line="455" pos:column="23">*</type:modifier></type><name pos:line="455" pos:column="24">pNppParam</name> <init pos:line="455" pos:column="34">= <expr><call><name><name pos:line="455" pos:column="36">NppParameters</name><op:operator pos:line="455" pos:column="49">::</op:operator><name pos:line="455" pos:column="51">getInstance</name></name><argument_list pos:line="455" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="457" pos:column="9">vector</name><argument_list pos:line="457" pos:column="15">&lt;<argument><expr><name pos:line="457" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="457" pos:column="33">&amp;</type:modifier></type> <name pos:line="457" pos:column="35">shortcuts</name> <init pos:line="457" pos:column="45">= <expr><call><name><name pos:line="457" pos:column="47">pNppParam</name><op:operator pos:line="457" pos:column="56">-&gt;</op:operator><name pos:line="457" pos:column="58">getUserShortcuts</name></name><argument_list pos:line="457" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="458" pos:column="9">vector</name><argument_list pos:line="458" pos:column="15">&lt;<argument><expr><name pos:line="458" pos:column="16">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="458" pos:column="31">&amp;</type:modifier></type> <name pos:line="458" pos:column="33">macros</name>  <init pos:line="458" pos:column="41">= <expr><call><name><name pos:line="458" pos:column="43">pNppParam</name><op:operator pos:line="458" pos:column="52">-&gt;</op:operator><name pos:line="458" pos:column="54">getMacroList</name></name><argument_list pos:line="458" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="459" pos:column="9">vector</name><argument_list pos:line="459" pos:column="15">&lt;<argument><expr><name pos:line="459" pos:column="16">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="459" pos:column="29">&amp;</type:modifier></type> <name pos:line="459" pos:column="31">userCommands</name> <init pos:line="459" pos:column="44">= <expr><call><name><name pos:line="459" pos:column="46">pNppParam</name><op:operator pos:line="459" pos:column="55">-&gt;</op:operator><name pos:line="459" pos:column="57">getUserCommandList</name></name><argument_list pos:line="459" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="460" pos:column="9">vector</name><argument_list pos:line="460" pos:column="15">&lt;<argument><expr><name pos:line="460" pos:column="16">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="460" pos:column="35">&amp;</type:modifier></type> <name pos:line="460" pos:column="37">pluginCommands</name> <init pos:line="460" pos:column="52">= <expr><call><name><name pos:line="460" pos:column="54">pNppParam</name><op:operator pos:line="460" pos:column="63">-&gt;</op:operator><name pos:line="460" pos:column="65">getPluginCommandList</name></name><argument_list pos:line="460" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="462" pos:column="9">size_t</name></type> <name pos:line="462" pos:column="16">nbMenu</name> <init pos:line="462" pos:column="23">= <expr><call><name><name pos:line="462" pos:column="25">shortcuts</name><op:operator pos:line="462" pos:column="34">.</op:operator><name pos:line="462" pos:column="35">size</name></name><argument_list pos:line="462" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="463" pos:column="9">size_t</name></type> <name pos:line="463" pos:column="16">nbMacro</name> <init pos:line="463" pos:column="24">= <expr><call><name><name pos:line="463" pos:column="26">macros</name><op:operator pos:line="463" pos:column="32">.</op:operator><name pos:line="463" pos:column="33">size</name></name><argument_list pos:line="463" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="464" pos:column="9">size_t</name></type> <name pos:line="464" pos:column="16">nbUserCmd</name> <init pos:line="464" pos:column="26">= <expr><call><name><name pos:line="464" pos:column="28">userCommands</name><op:operator pos:line="464" pos:column="40">.</op:operator><name pos:line="464" pos:column="41">size</name></name><argument_list pos:line="464" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="465" pos:column="9">size_t</name></type> <name pos:line="465" pos:column="16">nbPluginCmd</name> <init pos:line="465" pos:column="28">= <expr><call><name><name pos:line="465" pos:column="30">pluginCommands</name><op:operator pos:line="465" pos:column="44">.</op:operator><name pos:line="465" pos:column="45">size</name></name><argument_list pos:line="465" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="467" pos:column="9">if <condition pos:line="467" pos:column="12">(<expr><name pos:line="467" pos:column="13">_pAccelArray</name></expr>)</condition><then pos:line="467" pos:column="26">
		<expr_stmt><expr><op:operator pos:line="468" pos:column="17">delete</op:operator> <index pos:line="468" pos:column="24">[]</index> <name pos:line="468" pos:column="27">_pAccelArray</name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name pos:line="469" pos:column="9">_pAccelArray</name> <op:operator pos:line="469" pos:column="22">=</op:operator> <op:operator pos:line="469" pos:column="24">new</op:operator> <name><name pos:line="469" pos:column="28">ACCEL</name><index pos:line="469" pos:column="33">[<expr><name pos:line="469" pos:column="34">nbMenu</name><op:operator pos:line="469" pos:column="40">+</op:operator><name pos:line="469" pos:column="41">nbMacro</name><op:operator pos:line="469" pos:column="48">+</op:operator><name pos:line="469" pos:column="49">nbUserCmd</name><op:operator pos:line="469" pos:column="58">+</op:operator><name pos:line="469" pos:column="59">nbPluginCmd</name></expr>]</index></name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="471" pos:column="9">int</name></type> <name pos:line="471" pos:column="13">offset</name> <init pos:line="471" pos:column="20">= <expr><lit:literal type="number" pos:line="471" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="472" pos:column="9">size_t</name></type> <name pos:line="472" pos:column="16">i</name> <init pos:line="472" pos:column="18">= <expr><lit:literal type="number" pos:line="472" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="473" pos:column="9">//no validation performed, it might be that invalid shortcuts are being used by default. Allows user to 'hack', might be a good thing</comment>
	<for pos:line="474" pos:column="9">for(<init><expr><name pos:line="474" pos:column="13">i</name> <op:operator pos:line="474" pos:column="15">=</op:operator> <lit:literal type="number" pos:line="474" pos:column="17">0</lit:literal></expr>;</init> <condition><expr><name pos:line="474" pos:column="20">i</name> <op:operator pos:line="474" pos:column="22">&lt;</op:operator> <name pos:line="474" pos:column="24">nbMenu</name></expr>;</condition> <incr><expr><name pos:line="474" pos:column="32">i</name><op:operator pos:line="474" pos:column="33">++</op:operator></expr></incr>) <block pos:line="474" pos:column="37">{
		<if pos:line="475" pos:column="17">if <condition pos:line="475" pos:column="20">(<expr><name><name pos:line="475" pos:column="21">shortcuts</name><index pos:line="475" pos:column="30">[<expr><name pos:line="475" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="475" pos:column="33">.</op:operator><call><name pos:line="475" pos:column="34">isEnabled</name><argument_list pos:line="475" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="475" pos:column="46"> <block pos:line="475" pos:column="47">{<comment type="line" pos:line="475" pos:column="48">// &amp;&amp; shortcuts[i].isValid()) {</comment>
			<expr_stmt><expr><name><name pos:line="476" pos:column="25">_pAccelArray</name><index pos:line="476" pos:column="37">[<expr><name pos:line="476" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="476" pos:column="45">.</op:operator><name pos:line="476" pos:column="46">cmd</name> <op:operator pos:line="476" pos:column="50">=</op:operator> <call pos:line="476" pos:column="52">(<name pos:line="476" pos:column="53">WORD</name>)<argument_list pos:line="476" pos:column="58">(<argument><expr><name><name pos:line="476" pos:column="59">shortcuts</name><index pos:line="476" pos:column="68">[<expr><name pos:line="476" pos:column="69">i</name></expr>]</index></name><op:operator pos:line="476" pos:column="71">.</op:operator><call><name pos:line="476" pos:column="72">getID</name><argument_list pos:line="476" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="477" pos:column="25">_pAccelArray</name><index pos:line="477" pos:column="37">[<expr><name pos:line="477" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="477" pos:column="45">.</op:operator><name pos:line="477" pos:column="46">fVirt</name> <op:operator pos:line="477" pos:column="52">=</op:operator> <name><name pos:line="477" pos:column="54">shortcuts</name><index pos:line="477" pos:column="63">[<expr><name pos:line="477" pos:column="64">i</name></expr>]</index></name><op:operator pos:line="477" pos:column="66">.</op:operator><call><name pos:line="477" pos:column="67">getAcceleratorModifiers</name><argument_list pos:line="477" pos:column="90">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="478" pos:column="25">_pAccelArray</name><index pos:line="478" pos:column="37">[<expr><name pos:line="478" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="478" pos:column="45">.</op:operator><name pos:line="478" pos:column="46">key</name> <op:operator pos:line="478" pos:column="50">=</op:operator> <name><name pos:line="478" pos:column="52">shortcuts</name><index pos:line="478" pos:column="61">[<expr><name pos:line="478" pos:column="62">i</name></expr>]</index></name><op:operator pos:line="478" pos:column="64">.</op:operator><call><name pos:line="478" pos:column="65">getKeyCombo</name><argument_list pos:line="478" pos:column="76">()</argument_list></call><op:operator pos:line="478" pos:column="78">.</op:operator><name pos:line="478" pos:column="79">_key</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="479" pos:column="25">offset</name><op:operator pos:line="479" pos:column="31">++</op:operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="483" pos:column="9">for(<init><expr><name pos:line="483" pos:column="13">i</name> <op:operator pos:line="483" pos:column="15">=</op:operator> <lit:literal type="number" pos:line="483" pos:column="17">0</lit:literal></expr>;</init> <condition><expr><name pos:line="483" pos:column="20">i</name> <op:operator pos:line="483" pos:column="22">&lt;</op:operator> <name pos:line="483" pos:column="24">nbMacro</name></expr>;</condition> <incr><expr><name pos:line="483" pos:column="33">i</name><op:operator pos:line="483" pos:column="34">++</op:operator></expr></incr>) <block pos:line="483" pos:column="38">{
		<if pos:line="484" pos:column="17">if <condition pos:line="484" pos:column="20">(<expr><name><name pos:line="484" pos:column="21">macros</name><index pos:line="484" pos:column="27">[<expr><name pos:line="484" pos:column="28">i</name></expr>]</index></name><op:operator pos:line="484" pos:column="30">.</op:operator><call><name pos:line="484" pos:column="31">isEnabled</name><argument_list pos:line="484" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="484" pos:column="43"> <block pos:line="484" pos:column="44">{<comment type="line" pos:line="484" pos:column="45">// &amp;&amp; macros[i].isValid()) {</comment>
			<expr_stmt><expr><name><name pos:line="485" pos:column="25">_pAccelArray</name><index pos:line="485" pos:column="37">[<expr><name pos:line="485" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="485" pos:column="45">.</op:operator><name pos:line="485" pos:column="46">cmd</name> <op:operator pos:line="485" pos:column="50">=</op:operator> <call pos:line="485" pos:column="52">(<name pos:line="485" pos:column="53">WORD</name>)<argument_list pos:line="485" pos:column="58">(<argument><expr><name><name pos:line="485" pos:column="59">macros</name><index pos:line="485" pos:column="65">[<expr><name pos:line="485" pos:column="66">i</name></expr>]</index></name><op:operator pos:line="485" pos:column="68">.</op:operator><call><name pos:line="485" pos:column="69">getID</name><argument_list pos:line="485" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="486" pos:column="25">_pAccelArray</name><index pos:line="486" pos:column="37">[<expr><name pos:line="486" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="486" pos:column="45">.</op:operator><name pos:line="486" pos:column="46">fVirt</name> <op:operator pos:line="486" pos:column="52">=</op:operator> <name><name pos:line="486" pos:column="54">macros</name><index pos:line="486" pos:column="60">[<expr><name pos:line="486" pos:column="61">i</name></expr>]</index></name><op:operator pos:line="486" pos:column="63">.</op:operator><call><name pos:line="486" pos:column="64">getAcceleratorModifiers</name><argument_list pos:line="486" pos:column="87">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="487" pos:column="25">_pAccelArray</name><index pos:line="487" pos:column="37">[<expr><name pos:line="487" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="487" pos:column="45">.</op:operator><name pos:line="487" pos:column="46">key</name> <op:operator pos:line="487" pos:column="50">=</op:operator> <name><name pos:line="487" pos:column="52">macros</name><index pos:line="487" pos:column="58">[<expr><name pos:line="487" pos:column="59">i</name></expr>]</index></name><op:operator pos:line="487" pos:column="61">.</op:operator><call><name pos:line="487" pos:column="62">getKeyCombo</name><argument_list pos:line="487" pos:column="73">()</argument_list></call><op:operator pos:line="487" pos:column="75">.</op:operator><name pos:line="487" pos:column="76">_key</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="488" pos:column="25">offset</name><op:operator pos:line="488" pos:column="31">++</op:operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="492" pos:column="9">for(<init><expr><name pos:line="492" pos:column="13">i</name> <op:operator pos:line="492" pos:column="15">=</op:operator> <lit:literal type="number" pos:line="492" pos:column="17">0</lit:literal></expr>;</init> <condition><expr><name pos:line="492" pos:column="20">i</name> <op:operator pos:line="492" pos:column="22">&lt;</op:operator> <name pos:line="492" pos:column="24">nbUserCmd</name></expr>;</condition> <incr><expr><name pos:line="492" pos:column="35">i</name><op:operator pos:line="492" pos:column="36">++</op:operator></expr></incr>) <block pos:line="492" pos:column="40">{
		<if pos:line="493" pos:column="17">if <condition pos:line="493" pos:column="20">(<expr><name><name pos:line="493" pos:column="21">userCommands</name><index pos:line="493" pos:column="33">[<expr><name pos:line="493" pos:column="34">i</name></expr>]</index></name><op:operator pos:line="493" pos:column="36">.</op:operator><call><name pos:line="493" pos:column="37">isEnabled</name><argument_list pos:line="493" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="493" pos:column="49"> <block pos:line="493" pos:column="50">{<comment type="line" pos:line="493" pos:column="51">// &amp;&amp; userCommands[i].isValid()) {</comment>
			<expr_stmt><expr><name><name pos:line="494" pos:column="25">_pAccelArray</name><index pos:line="494" pos:column="37">[<expr><name pos:line="494" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="494" pos:column="45">.</op:operator><name pos:line="494" pos:column="46">cmd</name> <op:operator pos:line="494" pos:column="50">=</op:operator> <call pos:line="494" pos:column="52">(<name pos:line="494" pos:column="53">WORD</name>)<argument_list pos:line="494" pos:column="58">(<argument><expr><name><name pos:line="494" pos:column="59">userCommands</name><index pos:line="494" pos:column="71">[<expr><name pos:line="494" pos:column="72">i</name></expr>]</index></name><op:operator pos:line="494" pos:column="74">.</op:operator><call><name pos:line="494" pos:column="75">getID</name><argument_list pos:line="494" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="495" pos:column="25">_pAccelArray</name><index pos:line="495" pos:column="37">[<expr><name pos:line="495" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="495" pos:column="45">.</op:operator><name pos:line="495" pos:column="46">fVirt</name> <op:operator pos:line="495" pos:column="52">=</op:operator> <name><name pos:line="495" pos:column="54">userCommands</name><index pos:line="495" pos:column="66">[<expr><name pos:line="495" pos:column="67">i</name></expr>]</index></name><op:operator pos:line="495" pos:column="69">.</op:operator><call><name pos:line="495" pos:column="70">getAcceleratorModifiers</name><argument_list pos:line="495" pos:column="93">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="496" pos:column="25">_pAccelArray</name><index pos:line="496" pos:column="37">[<expr><name pos:line="496" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="496" pos:column="45">.</op:operator><name pos:line="496" pos:column="46">key</name> <op:operator pos:line="496" pos:column="50">=</op:operator> <name><name pos:line="496" pos:column="52">userCommands</name><index pos:line="496" pos:column="64">[<expr><name pos:line="496" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="496" pos:column="67">.</op:operator><call><name pos:line="496" pos:column="68">getKeyCombo</name><argument_list pos:line="496" pos:column="79">()</argument_list></call><op:operator pos:line="496" pos:column="81">.</op:operator><name pos:line="496" pos:column="82">_key</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="497" pos:column="25">offset</name><op:operator pos:line="497" pos:column="31">++</op:operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="501" pos:column="9">for(<init><expr><name pos:line="501" pos:column="13">i</name> <op:operator pos:line="501" pos:column="15">=</op:operator> <lit:literal type="number" pos:line="501" pos:column="17">0</lit:literal></expr>;</init> <condition><expr><name pos:line="501" pos:column="20">i</name> <op:operator pos:line="501" pos:column="22">&lt;</op:operator> <name pos:line="501" pos:column="24">nbPluginCmd</name></expr>;</condition> <incr><expr><name pos:line="501" pos:column="37">i</name><op:operator pos:line="501" pos:column="38">++</op:operator></expr></incr>) <block pos:line="501" pos:column="42">{
		<if pos:line="502" pos:column="17">if <condition pos:line="502" pos:column="20">(<expr><name><name pos:line="502" pos:column="21">pluginCommands</name><index pos:line="502" pos:column="35">[<expr><name pos:line="502" pos:column="36">i</name></expr>]</index></name><op:operator pos:line="502" pos:column="38">.</op:operator><call><name pos:line="502" pos:column="39">isEnabled</name><argument_list pos:line="502" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="502" pos:column="51"> <block pos:line="502" pos:column="52">{<comment type="line" pos:line="502" pos:column="53">// &amp;&amp; pluginCommands[i].isValid()) {</comment>
			<expr_stmt><expr><name><name pos:line="503" pos:column="25">_pAccelArray</name><index pos:line="503" pos:column="37">[<expr><name pos:line="503" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="503" pos:column="45">.</op:operator><name pos:line="503" pos:column="46">cmd</name> <op:operator pos:line="503" pos:column="50">=</op:operator> <call pos:line="503" pos:column="52">(<name pos:line="503" pos:column="53">WORD</name>)<argument_list pos:line="503" pos:column="58">(<argument><expr><name><name pos:line="503" pos:column="59">pluginCommands</name><index pos:line="503" pos:column="73">[<expr><name pos:line="503" pos:column="74">i</name></expr>]</index></name><op:operator pos:line="503" pos:column="76">.</op:operator><call><name pos:line="503" pos:column="77">getID</name><argument_list pos:line="503" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="504" pos:column="25">_pAccelArray</name><index pos:line="504" pos:column="37">[<expr><name pos:line="504" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="504" pos:column="45">.</op:operator><name pos:line="504" pos:column="46">fVirt</name> <op:operator pos:line="504" pos:column="52">=</op:operator> <name><name pos:line="504" pos:column="54">pluginCommands</name><index pos:line="504" pos:column="68">[<expr><name pos:line="504" pos:column="69">i</name></expr>]</index></name><op:operator pos:line="504" pos:column="71">.</op:operator><call><name pos:line="504" pos:column="72">getAcceleratorModifiers</name><argument_list pos:line="504" pos:column="95">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="505" pos:column="25">_pAccelArray</name><index pos:line="505" pos:column="37">[<expr><name pos:line="505" pos:column="38">offset</name></expr>]</index></name><op:operator pos:line="505" pos:column="45">.</op:operator><name pos:line="505" pos:column="46">key</name> <op:operator pos:line="505" pos:column="50">=</op:operator> <name><name pos:line="505" pos:column="52">pluginCommands</name><index pos:line="505" pos:column="66">[<expr><name pos:line="505" pos:column="67">i</name></expr>]</index></name><op:operator pos:line="505" pos:column="69">.</op:operator><call><name pos:line="505" pos:column="70">getKeyCombo</name><argument_list pos:line="505" pos:column="81">()</argument_list></call><op:operator pos:line="505" pos:column="83">.</op:operator><name pos:line="505" pos:column="84">_key</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="506" pos:column="25">offset</name><op:operator pos:line="506" pos:column="31">++</op:operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<expr_stmt><expr><name pos:line="510" pos:column="9">_nbAccelItems</name> <op:operator pos:line="510" pos:column="23">=</op:operator> <name pos:line="510" pos:column="25">offset</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="512" pos:column="9">updateFullMenu</name><argument_list pos:line="512" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="513" pos:column="9">reNew</name><argument_list pos:line="513" pos:column="14">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="513" pos:column="25">//update the table</comment>
	<return pos:line="514" pos:column="9">return;</return>
}</block></function>

<function><type><name pos:line="517" pos:column="1">void</name></type> <name><name pos:line="517" pos:column="6">Accelerator</name><op:operator pos:line="517" pos:column="17">::</op:operator><name pos:line="517" pos:column="19">updateFullMenu</name></name><parameter_list pos:line="517" pos:column="33">()</parameter_list> <block pos:line="517" pos:column="36">{
	<decl_stmt><decl><type><name pos:line="518" pos:column="9">NppParameters</name> <type:modifier pos:line="518" pos:column="23">*</type:modifier></type> <name pos:line="518" pos:column="25">pNppParam</name> <init pos:line="518" pos:column="35">= <expr><call><name><name pos:line="518" pos:column="37">NppParameters</name><op:operator pos:line="518" pos:column="50">::</op:operator><name pos:line="518" pos:column="52">getInstance</name></name><argument_list pos:line="518" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="519" pos:column="9">vector</name><argument_list pos:line="519" pos:column="15">&lt;<argument><expr><name pos:line="519" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="519" pos:column="33">commands</name> <init pos:line="519" pos:column="42">= <expr><call><name><name pos:line="519" pos:column="44">pNppParam</name><op:operator pos:line="519" pos:column="53">-&gt;</op:operator><name pos:line="519" pos:column="55">getUserShortcuts</name></name><argument_list pos:line="519" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="520" pos:column="9">for(<init><decl><type><name pos:line="520" pos:column="13">size_t</name></type> <name pos:line="520" pos:column="20">i</name> <init pos:line="520" pos:column="22">= <expr><lit:literal type="number" pos:line="520" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="520" pos:column="27">i</name> <op:operator pos:line="520" pos:column="29">&lt;</op:operator> <call><name><name pos:line="520" pos:column="31">commands</name><op:operator pos:line="520" pos:column="39">.</op:operator><name pos:line="520" pos:column="40">size</name></name><argument_list pos:line="520" pos:column="44">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="520" pos:column="48">i</name><op:operator pos:line="520" pos:column="49">++</op:operator></expr></incr>) <block pos:line="520" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="521" pos:column="17">updateMenuItemByCommand</name><argument_list pos:line="521" pos:column="40">(<argument><expr><name><name pos:line="521" pos:column="41">commands</name><index pos:line="521" pos:column="49">[<expr><name pos:line="521" pos:column="50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name><name pos:line="524" pos:column="9">vector</name><argument_list pos:line="524" pos:column="15">&lt;<argument><expr><name pos:line="524" pos:column="16">MacroShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="524" pos:column="31">mcommands</name> <init pos:line="524" pos:column="41">= <expr><call><name><name pos:line="524" pos:column="43">pNppParam</name><op:operator pos:line="524" pos:column="52">-&gt;</op:operator><name pos:line="524" pos:column="54">getMacroList</name></name><argument_list pos:line="524" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="525" pos:column="9">for(<init><decl><type><name pos:line="525" pos:column="13">size_t</name></type> <name pos:line="525" pos:column="20">i</name> <init pos:line="525" pos:column="22">= <expr><lit:literal type="number" pos:line="525" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="525" pos:column="27">i</name> <op:operator pos:line="525" pos:column="29">&lt;</op:operator> <call><name><name pos:line="525" pos:column="31">mcommands</name><op:operator pos:line="525" pos:column="40">.</op:operator><name pos:line="525" pos:column="41">size</name></name><argument_list pos:line="525" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="525" pos:column="49">i</name><op:operator pos:line="525" pos:column="50">++</op:operator></expr></incr>) <block pos:line="525" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="526" pos:column="17">updateMenuItemByCommand</name><argument_list pos:line="526" pos:column="40">(<argument><expr><name><name pos:line="526" pos:column="41">mcommands</name><index pos:line="526" pos:column="50">[<expr><name pos:line="526" pos:column="51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name><name pos:line="529" pos:column="9">vector</name><argument_list pos:line="529" pos:column="15">&lt;<argument><expr><name pos:line="529" pos:column="16">UserCommand</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="529" pos:column="29">ucommands</name> <init pos:line="529" pos:column="39">= <expr><call><name><name pos:line="529" pos:column="41">pNppParam</name><op:operator pos:line="529" pos:column="50">-&gt;</op:operator><name pos:line="529" pos:column="52">getUserCommandList</name></name><argument_list pos:line="529" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="530" pos:column="9">for(<init><decl><type><name pos:line="530" pos:column="13">size_t</name></type> <name pos:line="530" pos:column="20">i</name> <init pos:line="530" pos:column="22">= <expr><lit:literal type="number" pos:line="530" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="530" pos:column="27">i</name> <op:operator pos:line="530" pos:column="29">&lt;</op:operator> <call><name><name pos:line="530" pos:column="31">ucommands</name><op:operator pos:line="530" pos:column="40">.</op:operator><name pos:line="530" pos:column="41">size</name></name><argument_list pos:line="530" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="530" pos:column="49">i</name><op:operator pos:line="530" pos:column="50">++</op:operator></expr></incr>) <block pos:line="530" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="531" pos:column="17">updateMenuItemByCommand</name><argument_list pos:line="531" pos:column="40">(<argument><expr><name><name pos:line="531" pos:column="41">ucommands</name><index pos:line="531" pos:column="50">[<expr><name pos:line="531" pos:column="51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name><name pos:line="534" pos:column="9">vector</name><argument_list pos:line="534" pos:column="15">&lt;<argument><expr><name pos:line="534" pos:column="16">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="534" pos:column="35">pcommands</name> <init pos:line="534" pos:column="45">= <expr><call><name><name pos:line="534" pos:column="47">pNppParam</name><op:operator pos:line="534" pos:column="56">-&gt;</op:operator><name pos:line="534" pos:column="58">getPluginCommandList</name></name><argument_list pos:line="534" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="535" pos:column="9">for(<init><decl><type><name pos:line="535" pos:column="13">size_t</name></type> <name pos:line="535" pos:column="20">i</name> <init pos:line="535" pos:column="22">= <expr><lit:literal type="number" pos:line="535" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="535" pos:column="27">i</name> <op:operator pos:line="535" pos:column="29">&lt;</op:operator> <call><name><name pos:line="535" pos:column="31">pcommands</name><op:operator pos:line="535" pos:column="40">.</op:operator><name pos:line="535" pos:column="41">size</name></name><argument_list pos:line="535" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="535" pos:column="49">i</name><op:operator pos:line="535" pos:column="50">++</op:operator></expr></incr>) <block pos:line="535" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="536" pos:column="17">updateMenuItemByCommand</name><argument_list pos:line="536" pos:column="40">(<argument><expr><name><name pos:line="536" pos:column="41">pcommands</name><index pos:line="536" pos:column="50">[<expr><name pos:line="536" pos:column="51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><op:operator pos:line="539" pos:column="9">::</op:operator><name pos:line="539" pos:column="11">DrawMenuBar</name></name><argument_list pos:line="539" pos:column="22">(<argument><expr><name pos:line="539" pos:column="23">_hMenuParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="542" pos:column="1">void</name></type> <name><name pos:line="542" pos:column="6">Accelerator</name><op:operator pos:line="542" pos:column="17">::</op:operator><name pos:line="542" pos:column="19">updateMenuItemByCommand</name></name><parameter_list pos:line="542" pos:column="42">(<param><decl><type><name pos:line="542" pos:column="43">CommandShortcut</name></type> <name pos:line="542" pos:column="59">csc</name></decl></param>)</parameter_list> <block pos:line="542" pos:column="64">{
	<decl_stmt><decl><type><name pos:line="543" pos:column="9">int</name></type> <name pos:line="543" pos:column="13">cmdID</name> <init pos:line="543" pos:column="19">= <expr><op:operator pos:line="543" pos:column="21">(</op:operator><name pos:line="543" pos:column="22">int</name><op:operator pos:line="543" pos:column="25">)</op:operator><call><name><name pos:line="543" pos:column="26">csc</name><op:operator pos:line="543" pos:column="29">.</op:operator><name pos:line="543" pos:column="30">getID</name></name><argument_list pos:line="543" pos:column="35">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<comment type="line" pos:line="545" pos:column="9">//  Ensure that the menu item checks set prior to this update remain in affect.</comment>
	<decl_stmt><decl><type><name pos:line="546" pos:column="9">UINT</name></type> <name pos:line="546" pos:column="14">cmdFlags</name> <init pos:line="546" pos:column="23">= <expr><call><name pos:line="546" pos:column="25">GetMenuState</name><argument_list pos:line="546" pos:column="37">(<argument><expr><name pos:line="546" pos:column="38">_hAccelMenu</name></expr></argument>, <argument><expr><name pos:line="546" pos:column="51">cmdID</name></expr></argument>, <argument><expr><name pos:line="546" pos:column="58">MF_BYCOMMAND</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="547" pos:column="9">cmdFlags</name> <op:operator pos:line="547" pos:column="18">=</op:operator> <name pos:line="547" pos:column="20">MF_BYCOMMAND</name> <op:operator pos:line="547" pos:column="33">|</op:operator> <op:operator pos:line="547" pos:column="35">(</op:operator><name pos:line="547" pos:column="36">cmdFlags</name><op:operator pos:line="547" pos:column="44">&amp;</op:operator><name pos:line="547" pos:column="45">MF_CHECKED</name><op:operator pos:line="547" pos:column="55">)</op:operator> <op:operator pos:line="547" pos:column="57">?</op:operator> <op:operator pos:line="547" pos:column="59">(</op:operator> <name pos:line="547" pos:column="61">MF_CHECKED</name> <op:operator pos:line="547" pos:column="72">)</op:operator> <op:operator pos:line="547" pos:column="74">:</op:operator> <op:operator pos:line="547" pos:column="76">(</op:operator> <name pos:line="547" pos:column="78">MF_UNCHECKED</name> <op:operator pos:line="547" pos:column="91">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="548" pos:column="9">::</op:operator><name pos:line="548" pos:column="11">ModifyMenu</name></name><argument_list pos:line="548" pos:column="21">(<argument><expr><name pos:line="548" pos:column="22">_hAccelMenu</name></expr></argument>, <argument><expr><name pos:line="548" pos:column="35">cmdID</name></expr></argument>, <argument><expr><name pos:line="548" pos:column="42">cmdFlags</name></expr></argument>, <argument><expr><name pos:line="548" pos:column="52">cmdID</name></expr></argument>, <argument><expr><call><name><name pos:line="548" pos:column="59">csc</name><op:operator pos:line="548" pos:column="62">.</op:operator><name pos:line="548" pos:column="63">toMenuItemString</name></name><argument_list pos:line="548" pos:column="79">()</argument_list></call><op:operator pos:line="548" pos:column="81">.</op:operator><call><name pos:line="548" pos:column="82">c_str</name><argument_list pos:line="548" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<constructor><name><name pos:line="551" pos:column="1">recordedMacroStep</name><op:operator pos:line="551" pos:column="18">::</op:operator><name pos:line="551" pos:column="20">recordedMacroStep</name></name><parameter_list pos:line="551" pos:column="37">(<param><decl><type><name pos:line="551" pos:column="38">int</name></type> <name pos:line="551" pos:column="42">iMessage</name></decl></param>, <param><decl><type><name pos:line="551" pos:column="52">long</name></type> <name pos:line="551" pos:column="57">wParam</name></decl></param>, <param><decl><type><name pos:line="551" pos:column="65">long</name></type> <name pos:line="551" pos:column="70">lParam</name></decl></param>, <param><decl><type><name pos:line="551" pos:column="78">int</name></type> <name pos:line="551" pos:column="82">codepage</name></decl></param>)</parameter_list>
	<member_list pos:line="552" pos:column="9">: <call><name pos:line="552" pos:column="11">message</name><argument_list pos:line="552" pos:column="18">(<argument><expr><name pos:line="552" pos:column="19">iMessage</name></expr></argument>)</argument_list></call><op:operator pos:line="552" pos:column="28">,</op:operator> <call><name pos:line="552" pos:column="30">wParameter</name><argument_list pos:line="552" pos:column="40">(<argument><expr><name pos:line="552" pos:column="41">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="552" pos:column="48">,</op:operator> <call><name pos:line="552" pos:column="50">lParameter</name><argument_list pos:line="552" pos:column="60">(<argument><expr><name pos:line="552" pos:column="61">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="552" pos:column="68">,</op:operator> <call><name pos:line="552" pos:column="70">MacroType</name><argument_list pos:line="552" pos:column="79">(<argument><expr><name pos:line="552" pos:column="80">mtUseLParameter</name></expr></argument>)</argument_list></call>
</member_list><block pos:line="553" pos:column="1">{ 
	<if pos:line="554" pos:column="9">if <condition pos:line="554" pos:column="12">(<expr><name pos:line="554" pos:column="13">lParameter</name></expr>)</condition><then pos:line="554" pos:column="24"> <block pos:line="554" pos:column="25">{
		<switch pos:line="555" pos:column="17">switch <condition pos:line="555" pos:column="24">(<expr><name pos:line="555" pos:column="25">message</name></expr>)</condition> <block pos:line="555" pos:column="34">{
			<case pos:line="556" pos:column="25">case <expr><name pos:line="556" pos:column="30">SCI_SETTEXT</name></expr> :
			</case><case pos:line="557" pos:column="25">case <expr><name pos:line="557" pos:column="30">SCI_REPLACESEL</name></expr> :
			</case><case pos:line="558" pos:column="25">case <expr><name pos:line="558" pos:column="30">SCI_REPLACETARGET</name></expr> :
			</case><case pos:line="559" pos:column="25">case <expr><name pos:line="559" pos:column="30">SCI_REPLACETARGETRE</name></expr> :
			</case><case pos:line="560" pos:column="25">case <expr><name pos:line="560" pos:column="30">SCI_SEARCHINTARGET</name></expr> :
			</case><case pos:line="561" pos:column="25">case <expr><name pos:line="561" pos:column="30">SCI_ADDTEXT</name></expr> :
			</case><case pos:line="562" pos:column="25">case <expr><name pos:line="562" pos:column="30">SCI_ADDSTYLEDTEXT</name></expr> :
			</case><case pos:line="563" pos:column="25">case <expr><name pos:line="563" pos:column="30">SCI_INSERTTEXT</name></expr> :
			</case><case pos:line="564" pos:column="25">case <expr><name pos:line="564" pos:column="30">SCI_APPENDTEXT</name></expr> :
			</case><case pos:line="565" pos:column="25">case <expr><name pos:line="565" pos:column="30">SCI_SETWORDCHARS</name></expr> :
			</case><case pos:line="566" pos:column="25">case <expr><name pos:line="566" pos:column="30">SCI_SETWHITESPACECHARS</name></expr> :
			</case><case pos:line="567" pos:column="25">case <expr><name pos:line="567" pos:column="30">SCI_SETSTYLINGEX</name></expr> :
			</case><case pos:line="568" pos:column="25">case <expr><name pos:line="568" pos:column="30">SCI_TEXTWIDTH</name></expr> :
			</case><case pos:line="569" pos:column="25">case <expr><name pos:line="569" pos:column="30">SCI_STYLESETFONT</name></expr> :
			</case><case pos:line="570" pos:column="25">case <expr><name pos:line="570" pos:column="30">SCI_SEARCHNEXT</name></expr> :
			</case><case pos:line="571" pos:column="25">case <expr><name pos:line="571" pos:column="30">SCI_SEARCHPREV</name></expr> :
			</case><case pos:line="572" pos:column="25">case <expr><name pos:line="572" pos:column="30">IDFINDWHAT</name></expr>:
			</case><case pos:line="573" pos:column="25">case <expr><name pos:line="573" pos:column="30">IDREPLACEWITH</name></expr>:
			</case><case pos:line="574" pos:column="25">case <expr><name pos:line="574" pos:column="30">IDD_FINDINFILES_DIR_COMBO</name></expr>:
			</case><case pos:line="575" pos:column="25">case <expr><name pos:line="575" pos:column="30">IDD_FINDINFILES_FILTERS_COMBO</name></expr>:
			<block pos:line="576" pos:column="25">{
<cpp:ifdef pos:line="577" pos:column="1">#<cpp:directive pos:line="577" pos:column="2">ifdef</cpp:directive> <name pos:line="577" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><name pos:line="578" pos:column="33">char</name> <type:modifier pos:line="578" pos:column="38">*</type:modifier></type><name pos:line="578" pos:column="39">ch</name> <init pos:line="578" pos:column="42">= <expr><call><name><name pos:line="578" pos:column="44">reinterpret_cast</name><argument_list pos:line="578" pos:column="60">&lt;<argument><expr><name pos:line="578" pos:column="61">char</name> <op:operator pos:line="578" pos:column="66">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="578" pos:column="68">(<argument><expr><name pos:line="578" pos:column="69">lParameter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="579" pos:column="33">TCHAR</name></type> <name><name pos:line="579" pos:column="39">tch</name><index pos:line="579" pos:column="42">[<expr><lit:literal type="number" pos:line="579" pos:column="43">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="580" pos:column="33">::</op:operator><name pos:line="580" pos:column="35">MultiByteToWideChar</name></name><argument_list pos:line="580" pos:column="54">(<argument><expr><name pos:line="580" pos:column="55">codepage</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="580" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><name pos:line="580" pos:column="68">ch</name></expr></argument>, <argument><expr><op:operator pos:line="580" pos:column="72">-</op:operator><lit:literal type="number" pos:line="580" pos:column="73">1</lit:literal></expr></argument>, <argument><expr><name pos:line="580" pos:column="76">tch</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="580" pos:column="81">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="581" pos:column="33">sParameter</name> <op:operator pos:line="581" pos:column="44">=</op:operator> <op:operator pos:line="581" pos:column="46">*</op:operator><name pos:line="581" pos:column="47">tch</name></expr>;</expr_stmt>
<cpp:else pos:line="582" pos:column="1">#<cpp:directive pos:line="582" pos:column="2">else</cpp:directive></cpp:else>
				<decl_stmt><decl><type><name pos:line="583" pos:column="33">char</name></type> <name pos:line="583" pos:column="38">ch</name> <init pos:line="583" pos:column="41">= <expr><op:operator pos:line="583" pos:column="43">*</op:operator><call><name><name pos:line="583" pos:column="44">reinterpret_cast</name><argument_list pos:line="583" pos:column="60">&lt;<argument><expr><name pos:line="583" pos:column="61">char</name> <op:operator pos:line="583" pos:column="66">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="583" pos:column="68">(<argument><expr><name pos:line="583" pos:column="69">lParameter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="584" pos:column="33">TCHAR</name></type> <name pos:line="584" pos:column="39">tch</name> <init pos:line="584" pos:column="43">= <expr><name pos:line="584" pos:column="45">ch</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="585" pos:column="33">sParameter</name> <op:operator pos:line="585" pos:column="44">=</op:operator> <name pos:line="585" pos:column="46">tch</name></expr>;</expr_stmt>

				<comment type="line" pos:line="587" pos:column="33">// dummy call</comment>
				<expr_stmt><expr><name pos:line="588" pos:column="33">codepage</name> <op:operator pos:line="588" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="588" pos:column="44">0</lit:literal></expr>;</expr_stmt>
<cpp:endif pos:line="589" pos:column="1">#<cpp:directive pos:line="589" pos:column="2">endif</cpp:directive></cpp:endif>
				<expr_stmt><expr><name pos:line="590" pos:column="33">MacroType</name> <op:operator pos:line="590" pos:column="43">=</op:operator> <name pos:line="590" pos:column="45">mtUseSParameter</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="591" pos:column="33">lParameter</name> <op:operator pos:line="591" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="591" pos:column="46">0</lit:literal></expr>;</expr_stmt>
			}</block>
			<break pos:line="593" pos:column="25">break;</break>

				
			</case><default pos:line="596" pos:column="25">default : <comment type="line" pos:line="596" pos:column="35">// for all other messages, use lParameter "as is"</comment>
				<break pos:line="597" pos:column="33">break;</break>
		</default>}</block></switch>
	}</block></then></if>
}</block></constructor>

<function><type><name pos:line="602" pos:column="1">void</name></type> <name><name pos:line="602" pos:column="6">recordedMacroStep</name><op:operator pos:line="602" pos:column="23">::</op:operator><name pos:line="602" pos:column="25">PlayBack</name></name><parameter_list pos:line="602" pos:column="33">(<param><decl><type><name pos:line="602" pos:column="34">Window</name><type:modifier pos:line="602" pos:column="40">*</type:modifier></type> <name pos:line="602" pos:column="42">pNotepad</name></decl></param>, <param><decl><type><name pos:line="602" pos:column="52">ScintillaEditView</name> <type:modifier pos:line="602" pos:column="70">*</type:modifier></type><name pos:line="602" pos:column="71">pEditView</name></decl></param>)</parameter_list>
<block pos:line="603" pos:column="1">{
	<if pos:line="604" pos:column="9">if <condition pos:line="604" pos:column="12">(<expr><name pos:line="604" pos:column="13">MacroType</name> <op:operator pos:line="604" pos:column="23">==</op:operator> <name pos:line="604" pos:column="26">mtMenuCommand</name></expr>)</condition><then pos:line="604" pos:column="40">
		<expr_stmt><expr><call><name><op:operator pos:line="605" pos:column="17">::</op:operator><name pos:line="605" pos:column="19">SendMessage</name></name><argument_list pos:line="605" pos:column="30">(<argument><expr><call><name><name pos:line="605" pos:column="31">pNotepad</name><op:operator pos:line="605" pos:column="39">-&gt;</op:operator><name pos:line="605" pos:column="41">getHSelf</name></name><argument_list pos:line="605" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="605" pos:column="53">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="605" pos:column="65">wParameter</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="605" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>

	<else pos:line="607" pos:column="9">else
	<block pos:line="608" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="609" pos:column="17">long</name></type> <name pos:line="609" pos:column="22">lParam</name> <init pos:line="609" pos:column="29">= <expr><name pos:line="609" pos:column="31">lParameter</name></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="610" pos:column="1">#<cpp:directive pos:line="610" pos:column="2">ifdef</cpp:directive> <name pos:line="610" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="611" pos:column="17">char</name></type> <name><name pos:line="611" pos:column="22">ansiBuffer</name><index pos:line="611" pos:column="32">[<expr><lit:literal type="number" pos:line="611" pos:column="33">3</lit:literal></expr>]</index></name></decl>;</decl_stmt>
<cpp:endif pos:line="612" pos:column="1">#<cpp:directive pos:line="612" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="613" pos:column="17">if <condition pos:line="613" pos:column="20">(<expr><name pos:line="613" pos:column="21">MacroType</name> <op:operator pos:line="613" pos:column="31">==</op:operator> <name pos:line="613" pos:column="34">mtUseSParameter</name></expr>)</condition><then pos:line="613" pos:column="50">
		<block pos:line="614" pos:column="17">{
<cpp:ifdef pos:line="615" pos:column="1">#<cpp:directive pos:line="615" pos:column="2">ifdef</cpp:directive> <name pos:line="615" pos:column="8">UNICODE</name></cpp:ifdef>
			<expr_stmt><expr><call><name><op:operator pos:line="616" pos:column="25">::</op:operator><name pos:line="616" pos:column="27">WideCharToMultiByte</name></name><argument_list pos:line="616" pos:column="46">(<argument><expr><call><name><name pos:line="616" pos:column="47">pEditView</name><op:operator pos:line="616" pos:column="56">-&gt;</op:operator><name pos:line="616" pos:column="58">execute</name></name><argument_list pos:line="616" pos:column="65">(<argument><expr><name pos:line="616" pos:column="66">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="616" pos:column="84">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="616" pos:column="87">sParameter</name><op:operator pos:line="616" pos:column="97">.</op:operator><name pos:line="616" pos:column="98">c_str</name></name><argument_list pos:line="616" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="616" pos:column="107">-</op:operator><lit:literal type="number" pos:line="616" pos:column="108">1</lit:literal></expr></argument>, <argument><expr><name pos:line="616" pos:column="111">ansiBuffer</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="616" pos:column="123">3</lit:literal></expr></argument>, <argument><expr><name pos:line="616" pos:column="126">NULL</name></expr></argument>, <argument><expr><name pos:line="616" pos:column="132">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="617" pos:column="25">lParam</name> <op:operator pos:line="617" pos:column="32">=</op:operator> <call><name><name pos:line="617" pos:column="34">reinterpret_cast</name><argument_list pos:line="617" pos:column="50">&lt;<argument><expr><name pos:line="617" pos:column="51">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="617" pos:column="58">(<argument><expr><name pos:line="617" pos:column="59">ansiBuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="618" pos:column="1">#<cpp:directive pos:line="618" pos:column="2">else</cpp:directive></cpp:else>
			<expr_stmt><expr><name pos:line="619" pos:column="25">lParam</name> <op:operator pos:line="619" pos:column="32">=</op:operator> <call><name><name pos:line="619" pos:column="34">reinterpret_cast</name><argument_list pos:line="619" pos:column="50">&lt;<argument><expr><name pos:line="619" pos:column="51">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="619" pos:column="58">(<argument><expr><call><name><name pos:line="619" pos:column="59">sParameter</name><op:operator pos:line="619" pos:column="69">.</op:operator><name pos:line="619" pos:column="70">c_str</name></name><argument_list pos:line="619" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="620" pos:column="1">#<cpp:directive pos:line="620" pos:column="2">endif</cpp:directive></cpp:endif>
		}</block></then></if>

		<expr_stmt><expr><call><name><name pos:line="623" pos:column="17">pEditView</name><op:operator pos:line="623" pos:column="26">-&gt;</op:operator><name pos:line="623" pos:column="28">execute</name></name><argument_list pos:line="623" pos:column="35">(<argument><expr><name pos:line="623" pos:column="36">message</name></expr></argument>, <argument><expr><name pos:line="623" pos:column="45">wParameter</name></expr></argument>, <argument><expr><name pos:line="623" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="624" pos:column="17">if <condition pos:line="624" pos:column="20">( <expr><op:operator pos:line="624" pos:column="22">(</op:operator><name pos:line="624" pos:column="23">message</name> <op:operator pos:line="624" pos:column="31">==</op:operator> <name pos:line="624" pos:column="34">SCI_SETTEXT</name><op:operator pos:line="624" pos:column="45">)</op:operator>
			<op:operator pos:line="625" pos:column="25">||</op:operator> <op:operator pos:line="625" pos:column="28">(</op:operator><name pos:line="625" pos:column="29">message</name> <op:operator pos:line="625" pos:column="37">==</op:operator> <name pos:line="625" pos:column="40">SCI_REPLACESEL</name><op:operator pos:line="625" pos:column="54">)</op:operator> 
			<op:operator pos:line="626" pos:column="25">||</op:operator> <op:operator pos:line="626" pos:column="28">(</op:operator><name pos:line="626" pos:column="29">message</name> <op:operator pos:line="626" pos:column="37">==</op:operator> <name pos:line="626" pos:column="40">SCI_ADDTEXT</name><op:operator pos:line="626" pos:column="51">)</op:operator> 
			<op:operator pos:line="627" pos:column="25">||</op:operator> <op:operator pos:line="627" pos:column="28">(</op:operator><name pos:line="627" pos:column="29">message</name> <op:operator pos:line="627" pos:column="37">==</op:operator> <name pos:line="627" pos:column="40">SCI_ADDSTYLEDTEXT</name><op:operator pos:line="627" pos:column="57">)</op:operator> 
			<op:operator pos:line="628" pos:column="25">||</op:operator> <op:operator pos:line="628" pos:column="28">(</op:operator><name pos:line="628" pos:column="29">message</name> <op:operator pos:line="628" pos:column="37">==</op:operator> <name pos:line="628" pos:column="40">SCI_INSERTTEXT</name><op:operator pos:line="628" pos:column="54">)</op:operator> 
			<op:operator pos:line="629" pos:column="25">||</op:operator> <op:operator pos:line="629" pos:column="28">(</op:operator><name pos:line="629" pos:column="29">message</name> <op:operator pos:line="629" pos:column="37">==</op:operator> <name pos:line="629" pos:column="40">SCI_APPENDTEXT</name><op:operator pos:line="629" pos:column="54">)</op:operator></expr> )</condition><then pos:line="629" pos:column="57"> <block pos:line="629" pos:column="58">{
			<decl_stmt><decl><type><name pos:line="630" pos:column="25">SCNotification</name></type> <name pos:line="630" pos:column="40">scnN</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="631" pos:column="25">scnN</name><op:operator pos:line="631" pos:column="29">.</op:operator><name pos:line="631" pos:column="30">nmhdr</name><op:operator pos:line="631" pos:column="35">.</op:operator><name pos:line="631" pos:column="36">code</name></name> <op:operator pos:line="631" pos:column="41">=</op:operator> <name pos:line="631" pos:column="43">SCN_CHARADDED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="632" pos:column="25">scnN</name><op:operator pos:line="632" pos:column="29">.</op:operator><name pos:line="632" pos:column="30">nmhdr</name><op:operator pos:line="632" pos:column="35">.</op:operator><name pos:line="632" pos:column="36">hwndFrom</name></name> <op:operator pos:line="632" pos:column="45">=</op:operator> <call><name><name pos:line="632" pos:column="47">pEditView</name><op:operator pos:line="632" pos:column="56">-&gt;</op:operator><name pos:line="632" pos:column="58">getHSelf</name></name><argument_list pos:line="632" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="633" pos:column="25">scnN</name><op:operator pos:line="633" pos:column="29">.</op:operator><name pos:line="633" pos:column="30">nmhdr</name><op:operator pos:line="633" pos:column="35">.</op:operator><name pos:line="633" pos:column="36">idFrom</name></name> <op:operator pos:line="633" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="633" pos:column="45">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="634" pos:column="25">scnN</name><op:operator pos:line="634" pos:column="29">.</op:operator><name pos:line="634" pos:column="30">ch</name></name> <op:operator pos:line="634" pos:column="33">=</op:operator> <call><name><name pos:line="634" pos:column="35">sParameter</name><op:operator pos:line="634" pos:column="45">.</op:operator><name pos:line="634" pos:column="46">at</name></name><argument_list pos:line="634" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="634" pos:column="49">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="635" pos:column="25">::</op:operator><name pos:line="635" pos:column="27">SendMessage</name></name><argument_list pos:line="635" pos:column="38">(<argument><expr><call><name><name pos:line="635" pos:column="39">pNotepad</name><op:operator pos:line="635" pos:column="47">-&gt;</op:operator><name pos:line="635" pos:column="49">getHSelf</name></name><argument_list pos:line="635" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="635" pos:column="61">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="635" pos:column="72">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="635" pos:column="75">reinterpret_cast</name><argument_list pos:line="635" pos:column="91">&lt;<argument><expr><name pos:line="635" pos:column="92">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="635" pos:column="99">(<argument><expr><op:operator pos:line="635" pos:column="100">&amp;</op:operator><name pos:line="635" pos:column="101">scnN</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="640" pos:column="1">void</name></type> <name><name pos:line="640" pos:column="6">ScintillaAccelerator</name><op:operator pos:line="640" pos:column="26">::</op:operator><name pos:line="640" pos:column="28">init</name></name><parameter_list pos:line="640" pos:column="32">(<param><decl><type><name><name pos:line="640" pos:column="33">vector</name><argument_list pos:line="640" pos:column="39">&lt;<argument><expr><name pos:line="640" pos:column="40">HWND</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="640" pos:column="46">*</type:modifier></type> <name pos:line="640" pos:column="48">vScintillas</name></decl></param>, <param><decl><type><name pos:line="640" pos:column="61">HMENU</name></type> <name pos:line="640" pos:column="67">hMenu</name></decl></param>, <param><decl><type><name pos:line="640" pos:column="74">HWND</name></type> <name pos:line="640" pos:column="79">menuParent</name></decl></param>)</parameter_list> <block pos:line="640" pos:column="91">{
	<expr_stmt><expr><name pos:line="641" pos:column="9">_hAccelMenu</name> <op:operator pos:line="641" pos:column="21">=</op:operator> <name pos:line="641" pos:column="23">hMenu</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="642" pos:column="9">_hMenuParent</name> <op:operator pos:line="642" pos:column="22">=</op:operator> <name pos:line="642" pos:column="24">menuParent</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="643" pos:column="9">size_t</name></type> <name pos:line="643" pos:column="16">nr</name> <init pos:line="643" pos:column="19">= <expr><call><name><name pos:line="643" pos:column="21">vScintillas</name><op:operator pos:line="643" pos:column="32">-&gt;</op:operator><name pos:line="643" pos:column="34">size</name></name><argument_list pos:line="643" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="644" pos:column="9">for(<init><decl><type><name pos:line="644" pos:column="13">size_t</name></type> <name pos:line="644" pos:column="20">i</name> <init pos:line="644" pos:column="22">= <expr><lit:literal type="number" pos:line="644" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="644" pos:column="27">i</name> <op:operator pos:line="644" pos:column="29">&lt;</op:operator> <name pos:line="644" pos:column="31">nr</name></expr>;</condition> <incr><expr><name pos:line="644" pos:column="35">i</name><op:operator pos:line="644" pos:column="36">++</op:operator></expr></incr>) <block pos:line="644" pos:column="40">{
		<expr_stmt><expr><call><name><name pos:line="645" pos:column="17">_vScintillas</name><op:operator pos:line="645" pos:column="29">.</op:operator><name pos:line="645" pos:column="30">push_back</name></name><argument_list pos:line="645" pos:column="39">(<argument><expr><call><name><name pos:line="645" pos:column="40">vScintillas</name><op:operator pos:line="645" pos:column="51">-&gt;</op:operator><name pos:line="645" pos:column="53">at</name></name><argument_list pos:line="645" pos:column="55">(<argument><expr><name pos:line="645" pos:column="56">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name pos:line="647" pos:column="9">_nrScintillas</name> <op:operator pos:line="647" pos:column="23">=</op:operator> <op:operator pos:line="647" pos:column="25">(</op:operator><name pos:line="647" pos:column="26">int</name><op:operator pos:line="647" pos:column="29">)</op:operator><name pos:line="647" pos:column="30">nr</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="650" pos:column="1">void</name></type> <name><name pos:line="650" pos:column="6">ScintillaAccelerator</name><op:operator pos:line="650" pos:column="26">::</op:operator><name pos:line="650" pos:column="28">updateKeys</name></name><parameter_list pos:line="650" pos:column="38">()</parameter_list> 
<block pos:line="651" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="652" pos:column="9">NppParameters</name> <type:modifier pos:line="652" pos:column="23">*</type:modifier></type><name pos:line="652" pos:column="24">pNppParam</name> <init pos:line="652" pos:column="34">= <expr><call><name><name pos:line="652" pos:column="36">NppParameters</name><op:operator pos:line="652" pos:column="49">::</op:operator><name pos:line="652" pos:column="51">getInstance</name></name><argument_list pos:line="652" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="653" pos:column="9">vector</name><argument_list pos:line="653" pos:column="15">&lt;<argument><expr><name pos:line="653" pos:column="16">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="653" pos:column="33">&amp;</type:modifier></type> <name pos:line="653" pos:column="35">map</name> <init pos:line="653" pos:column="39">= <expr><call><name><name pos:line="653" pos:column="41">pNppParam</name><op:operator pos:line="653" pos:column="50">-&gt;</op:operator><name pos:line="653" pos:column="52">getScintillaKeyList</name></name><argument_list pos:line="653" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="654" pos:column="9">size_t</name></type> <name pos:line="654" pos:column="16">mapSize</name> <init pos:line="654" pos:column="24">= <expr><call><name><name pos:line="654" pos:column="26">map</name><op:operator pos:line="654" pos:column="29">.</op:operator><name pos:line="654" pos:column="30">size</name></name><argument_list pos:line="654" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="655" pos:column="9">size_t</name></type> <name pos:line="655" pos:column="16">index</name></decl>;</decl_stmt>

	<for pos:line="657" pos:column="9">for(<init><decl><type><name pos:line="657" pos:column="13">int</name></type> <name pos:line="657" pos:column="17">i</name> <init pos:line="657" pos:column="19">= <expr><lit:literal type="number" pos:line="657" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="657" pos:column="24">i</name> <op:operator pos:line="657" pos:column="26">&lt;</op:operator> <name pos:line="657" pos:column="28">_nrScintillas</name></expr>;</condition> <incr><expr><name pos:line="657" pos:column="43">i</name><op:operator pos:line="657" pos:column="44">++</op:operator></expr></incr>)
	<block pos:line="658" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="659" pos:column="17">::</op:operator><name pos:line="659" pos:column="19">SendMessage</name></name><argument_list pos:line="659" pos:column="30">(<argument><expr><name><name pos:line="659" pos:column="31">_vScintillas</name><index pos:line="659" pos:column="43">[<expr><name pos:line="659" pos:column="44">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="659" pos:column="48">SCI_CLEARALLCMDKEYS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="659" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="659" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="660" pos:column="17">for(<init><decl><type><name pos:line="660" pos:column="21">size_t</name></type> <name pos:line="660" pos:column="28">j</name> <init pos:line="660" pos:column="30">= <expr><name pos:line="660" pos:column="32">mapSize</name> <op:operator pos:line="660" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="660" pos:column="42">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="660" pos:column="45">j</name> <op:operator pos:line="660" pos:column="47">&gt;=</op:operator> <lit:literal type="number" pos:line="660" pos:column="50">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="660" pos:column="53">j</name><op:operator pos:line="660" pos:column="54">--</op:operator></expr></incr>) <comment type="line" pos:line="660" pos:column="58">//reverse order, top of the list has highest priority</comment>
		<block pos:line="661" pos:column="17">{	
			<decl_stmt><decl><type><name pos:line="662" pos:column="25">ScintillaKeyMap</name></type> <name pos:line="662" pos:column="41">skm</name> <init pos:line="662" pos:column="45">= <expr><name><name pos:line="662" pos:column="47">map</name><index pos:line="662" pos:column="50">[<expr><name pos:line="662" pos:column="51">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if pos:line="663" pos:column="25">if <condition pos:line="663" pos:column="28">(<expr><call><name><name pos:line="663" pos:column="29">skm</name><op:operator pos:line="663" pos:column="32">.</op:operator><name pos:line="663" pos:column="33">isEnabled</name></name><argument_list pos:line="663" pos:column="42">()</argument_list></call></expr>)</condition><then pos:line="663" pos:column="45"> 
			<block pos:line="664" pos:column="25">{		<comment type="line" pos:line="664" pos:column="41">//no validating, scintilla accepts more keys</comment>
				<decl_stmt><decl><type><name pos:line="665" pos:column="33">size_t</name></type> <name pos:line="665" pos:column="40">size</name> <init pos:line="665" pos:column="45">= <expr><call><name><name pos:line="665" pos:column="47">skm</name><op:operator pos:line="665" pos:column="50">.</op:operator><name pos:line="665" pos:column="51">getSize</name></name><argument_list pos:line="665" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="666" pos:column="33">for(<init><expr><name pos:line="666" pos:column="37">index</name> <op:operator pos:line="666" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="666" pos:column="45">0</lit:literal></expr>;</init> <condition><expr><name pos:line="666" pos:column="48">index</name> <op:operator pos:line="666" pos:column="54">&lt;</op:operator> <name pos:line="666" pos:column="56">size</name></expr>;</condition> <incr><expr><name pos:line="666" pos:column="62">index</name><op:operator pos:line="666" pos:column="67">++</op:operator></expr></incr>)
					<expr_stmt><expr><call><name><op:operator pos:line="667" pos:column="41">::</op:operator><name pos:line="667" pos:column="43">SendMessage</name></name><argument_list pos:line="667" pos:column="54">(<argument><expr><name><name pos:line="667" pos:column="55">_vScintillas</name><index pos:line="667" pos:column="67">[<expr><name pos:line="667" pos:column="68">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="667" pos:column="72">SCI_ASSIGNCMDKEY</name></expr></argument>, <argument><expr><call><name><name pos:line="667" pos:column="90">skm</name><op:operator pos:line="667" pos:column="93">.</op:operator><name pos:line="667" pos:column="94">toKeyDef</name></name><argument_list pos:line="667" pos:column="102">(<argument><expr><name pos:line="667" pos:column="103">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="667" pos:column="111">skm</name><op:operator pos:line="667" pos:column="114">.</op:operator><name pos:line="667" pos:column="115">getScintillaKeyID</name></name><argument_list pos:line="667" pos:column="132">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
			}</block></then></if>
			<if pos:line="669" pos:column="25">if <condition pos:line="669" pos:column="28">(<expr><call><name><name pos:line="669" pos:column="29">skm</name><op:operator pos:line="669" pos:column="32">.</op:operator><name pos:line="669" pos:column="33">getMenuCmdID</name></name><argument_list pos:line="669" pos:column="45">()</argument_list></call> <op:operator pos:line="669" pos:column="48">!=</op:operator> <lit:literal type="number" pos:line="669" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="669" pos:column="53"> 
			<block pos:line="670" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="671" pos:column="33">updateMenuItemByID</name><argument_list pos:line="671" pos:column="51">(<argument><expr><name pos:line="671" pos:column="52">skm</name></expr></argument>, <argument><expr><call><name><name pos:line="671" pos:column="57">skm</name><op:operator pos:line="671" pos:column="60">.</op:operator><name pos:line="671" pos:column="61">getMenuCmdID</name></name><argument_list pos:line="671" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="673" pos:column="25">if <condition pos:line="673" pos:column="28">(<expr><name pos:line="673" pos:column="29">j</name> <op:operator pos:line="673" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="673" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="673" pos:column="36">	<comment type="line" pos:line="673" pos:column="41">//j is unsigned, so default method doesnt work</comment>
				<break pos:line="674" pos:column="33">break;</break></then></if>
		}</block></for>
	}</block></for>
}</block></function>

<function><type><name pos:line="679" pos:column="1">void</name></type> <name><name pos:line="679" pos:column="6">ScintillaAccelerator</name><op:operator pos:line="679" pos:column="26">::</op:operator><name pos:line="679" pos:column="28">updateMenuItemByID</name></name><parameter_list pos:line="679" pos:column="46">(<param><decl><type><name pos:line="679" pos:column="47">ScintillaKeyMap</name></type> <name pos:line="679" pos:column="63">skm</name></decl></param>, <param><decl><type><name pos:line="679" pos:column="68">int</name></type> <name pos:line="679" pos:column="72">id</name></decl></param>)</parameter_list> 
<block pos:line="680" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="681" pos:column="9">const</specifier> <name pos:line="681" pos:column="15">int</name></type> <name pos:line="681" pos:column="19">commandSize</name> <init pos:line="681" pos:column="31">= <expr><lit:literal type="number" pos:line="681" pos:column="33">64</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="682" pos:column="9">TCHAR</name></type> <name><name pos:line="682" pos:column="15">cmdName</name><index pos:line="682" pos:column="22">[<expr><name pos:line="682" pos:column="23">commandSize</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="683" pos:column="9">::</op:operator><name pos:line="683" pos:column="11">GetMenuString</name></name><argument_list pos:line="683" pos:column="24">(<argument><expr><name pos:line="683" pos:column="25">_hAccelMenu</name></expr></argument>, <argument><expr><name pos:line="683" pos:column="38">id</name></expr></argument>, <argument><expr><name pos:line="683" pos:column="42">cmdName</name></expr></argument>, <argument><expr><name pos:line="683" pos:column="51">commandSize</name></expr></argument>, <argument><expr><name pos:line="683" pos:column="64">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="684" pos:column="9">int</name></type> <name pos:line="684" pos:column="13">i</name> <init pos:line="684" pos:column="15">= <expr><lit:literal type="number" pos:line="684" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="685" pos:column="9">while<condition pos:line="685" pos:column="14">(<expr><name><name pos:line="685" pos:column="15">cmdName</name><index pos:line="685" pos:column="22">[<expr><name pos:line="685" pos:column="23">i</name></expr>]</index></name> <op:operator pos:line="685" pos:column="26">!=</op:operator> <lit:literal type="number" pos:line="685" pos:column="29">0</lit:literal></expr>)</condition>
	<block pos:line="686" pos:column="9">{
		<if pos:line="687" pos:column="17">if <condition pos:line="687" pos:column="20">(<expr><name><name pos:line="687" pos:column="21">cmdName</name><index pos:line="687" pos:column="28">[<expr><name pos:line="687" pos:column="29">i</name></expr>]</index></name> <op:operator pos:line="687" pos:column="32">==</op:operator> <lit:literal type="char" pos:line="687" pos:column="35">'\t'</lit:literal></expr>)</condition><then pos:line="687" pos:column="40">
		<block pos:line="688" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="689" pos:column="25">cmdName</name><index pos:line="689" pos:column="32">[<expr><name pos:line="689" pos:column="33">i</name></expr>]</index></name> <op:operator pos:line="689" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="689" pos:column="38">0</lit:literal></expr>;</expr_stmt>
			<break pos:line="690" pos:column="25">break;</break>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="692" pos:column="17">i</name><op:operator pos:line="692" pos:column="18">++</op:operator></expr>;</expr_stmt>
	}</block></while>
	<decl_stmt><decl><type><name pos:line="694" pos:column="9">generic_string</name></type> <name pos:line="694" pos:column="24">menuItem</name> <init pos:line="694" pos:column="33">= <expr><name pos:line="694" pos:column="35">cmdName</name></expr></init></decl>;</decl_stmt>
	<if pos:line="695" pos:column="9">if <condition pos:line="695" pos:column="12">(<expr><call><name><name pos:line="695" pos:column="13">skm</name><op:operator pos:line="695" pos:column="16">.</op:operator><name pos:line="695" pos:column="17">isEnabled</name></name><argument_list pos:line="695" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="695" pos:column="29">
	<block pos:line="696" pos:column="9">{
		<expr_stmt><expr><name pos:line="697" pos:column="17">menuItem</name> <op:operator pos:line="697" pos:column="26">+=</op:operator> <call><name pos:line="697" pos:column="29">TEXT</name><argument_list pos:line="697" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="697" pos:column="34">"\t"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="698" pos:column="17">//menuItem += TEXT("Sc:");	//sc: scintilla shortcut</comment>
		<expr_stmt><expr><name pos:line="699" pos:column="17">menuItem</name> <op:operator pos:line="699" pos:column="26">+=</op:operator> <call><name><name pos:line="699" pos:column="29">skm</name><op:operator pos:line="699" pos:column="32">.</op:operator><name pos:line="699" pos:column="33">toString</name></name><argument_list pos:line="699" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="701" pos:column="9">::</op:operator><name pos:line="701" pos:column="11">ModifyMenu</name></name><argument_list pos:line="701" pos:column="21">(<argument><expr><name pos:line="701" pos:column="22">_hAccelMenu</name></expr></argument>, <argument><expr><name pos:line="701" pos:column="35">id</name></expr></argument>, <argument><expr><name pos:line="701" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="701" pos:column="53">id</name></expr></argument>, <argument><expr><call><name><name pos:line="701" pos:column="57">menuItem</name><op:operator pos:line="701" pos:column="65">.</op:operator><name pos:line="701" pos:column="66">c_str</name></name><argument_list pos:line="701" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="702" pos:column="9">::</op:operator><name pos:line="702" pos:column="11">DrawMenuBar</name></name><argument_list pos:line="702" pos:column="22">(<argument><expr><name pos:line="702" pos:column="23">_hMenuParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" pos:line="705" pos:column="1">//This procedure uses _keyCombo as a temp. variable to store current settings which can then later be applied (by pressing OK)</comment>
<function><type><name pos:line="706" pos:column="1">void</name></type> <name><name pos:line="706" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="706" pos:column="21">::</op:operator><name pos:line="706" pos:column="23">applyToCurrentIndex</name></name><parameter_list pos:line="706" pos:column="42">()</parameter_list> <block pos:line="706" pos:column="45">{
	<decl_stmt><decl><type><name pos:line="707" pos:column="9">int</name></type> <name pos:line="707" pos:column="13">index</name> <init pos:line="707" pos:column="19">= <expr><op:operator pos:line="707" pos:column="21">(</op:operator><name pos:line="707" pos:column="22">int</name><op:operator pos:line="707" pos:column="25">)</op:operator><call><name><op:operator pos:line="707" pos:column="26">::</op:operator><name pos:line="707" pos:column="28">SendDlgItemMessage</name></name><argument_list pos:line="707" pos:column="46">(<argument><expr><name pos:line="707" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="707" pos:column="55">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="707" pos:column="70">LB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="707" pos:column="84">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="707" pos:column="87">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="708" pos:column="9">if<condition pos:line="708" pos:column="11">(<expr><name pos:line="708" pos:column="12">index</name> <op:operator pos:line="708" pos:column="18">==</op:operator> <name pos:line="708" pos:column="21">LB_ERR</name></expr>)</condition><then pos:line="708" pos:column="28">
		<return pos:line="709" pos:column="17">return;</return></then></if>
	<expr_stmt><expr><call><name pos:line="710" pos:column="9">setKeyComboByIndex</name><argument_list pos:line="710" pos:column="27">(<argument><expr><name pos:line="710" pos:column="28">index</name></expr></argument>, <argument><expr><name pos:line="710" pos:column="35">_keyCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="711" pos:column="9">updateListItem</name><argument_list pos:line="711" pos:column="23">(<argument><expr><name pos:line="711" pos:column="24">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="712" pos:column="9">::</op:operator><name pos:line="712" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="712" pos:column="29">(<argument><expr><name pos:line="712" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="712" pos:column="38">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="712" pos:column="53">LB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="712" pos:column="67">index</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="712" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></function>

<function><type><name pos:line="716" pos:column="1">void</name></type> <name><name pos:line="716" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="716" pos:column="21">::</op:operator><name pos:line="716" pos:column="23">validateDialog</name></name><parameter_list pos:line="716" pos:column="37">()</parameter_list> <block pos:line="716" pos:column="40">{
	<decl_stmt><decl><type><name pos:line="717" pos:column="9">bool</name></type> <name pos:line="717" pos:column="14">valid</name> <init pos:line="717" pos:column="20">= <expr><call><name pos:line="717" pos:column="22">isValid</name><argument_list pos:line="717" pos:column="29">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="717" pos:column="33">//current combo valid?</comment>
	<decl_stmt><decl><type><name pos:line="718" pos:column="9">bool</name></type> <name pos:line="718" pos:column="14">isDisabling</name> <init pos:line="718" pos:column="26">= <expr><name><name pos:line="718" pos:column="28">_keyCombo</name><op:operator pos:line="718" pos:column="37">.</op:operator><name pos:line="718" pos:column="38">_key</name></name> <op:operator pos:line="718" pos:column="43">==</op:operator> <lit:literal type="number" pos:line="718" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="718" pos:column="49">//true if this keycombo were to disable the shortcut</comment>
	<decl_stmt><decl><type><name pos:line="719" pos:column="9">bool</name></type> <name pos:line="719" pos:column="14">isDisabled</name> <init pos:line="719" pos:column="25">= <expr><op:operator pos:line="719" pos:column="27">!</op:operator><call><name pos:line="719" pos:column="28">isEnabled</name><argument_list pos:line="719" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="719" pos:column="41">//true if this shortcut already is </comment>

	<expr_stmt><expr><call><name><op:operator pos:line="721" pos:column="9">::</op:operator><name pos:line="721" pos:column="11">EnableWindow</name></name><argument_list pos:line="721" pos:column="23">(<argument><expr><call><name><op:operator pos:line="721" pos:column="24">::</op:operator><name pos:line="721" pos:column="26">GetDlgItem</name></name><argument_list pos:line="721" pos:column="36">(<argument><expr><name pos:line="721" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="721" pos:column="45">IDC_BUTTON_ADD</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="721" pos:column="62">valid</name> <op:operator pos:line="721" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="721" pos:column="71">!</op:operator><name pos:line="721" pos:column="72">isDisabling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="722" pos:column="9">::</op:operator><name pos:line="722" pos:column="11">EnableWindow</name></name><argument_list pos:line="722" pos:column="23">(<argument><expr><call><name><op:operator pos:line="722" pos:column="24">::</op:operator><name pos:line="722" pos:column="26">GetDlgItem</name></name><argument_list pos:line="722" pos:column="36">(<argument><expr><name pos:line="722" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="722" pos:column="45">IDC_BUTTON_APPLY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="722" pos:column="64">valid</name> <op:operator pos:line="722" pos:column="70">&amp;&amp;</op:operator> <op:operator pos:line="722" pos:column="73">(</op:operator><op:operator pos:line="722" pos:column="74">!</op:operator><name pos:line="722" pos:column="75">isDisabling</name> <op:operator pos:line="722" pos:column="87">||</op:operator> <name pos:line="722" pos:column="90">size</name> <op:operator pos:line="722" pos:column="95">==</op:operator> <lit:literal type="number" pos:line="722" pos:column="98">1</lit:literal><op:operator pos:line="722" pos:column="99">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="723" pos:column="9">::</op:operator><name pos:line="723" pos:column="11">EnableWindow</name></name><argument_list pos:line="723" pos:column="23">(<argument><expr><call><name><op:operator pos:line="723" pos:column="24">::</op:operator><name pos:line="723" pos:column="26">GetDlgItem</name></name><argument_list pos:line="723" pos:column="36">(<argument><expr><name pos:line="723" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="723" pos:column="45">IDC_BUTTON_RMVE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="723" pos:column="63">(</op:operator><name pos:line="723" pos:column="64">size</name> <op:operator pos:line="723" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="723" pos:column="71">1</lit:literal><op:operator pos:line="723" pos:column="72">)</op:operator><op:operator pos:line="723" pos:column="73">?</op:operator><name pos:line="723" pos:column="74">TRUE</name><op:operator pos:line="723" pos:column="78">:</op:operator><name pos:line="723" pos:column="79">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="724" pos:column="9">::</op:operator><name pos:line="724" pos:column="11">ShowWindow</name></name><argument_list pos:line="724" pos:column="21">(<argument><expr><call><name><op:operator pos:line="724" pos:column="22">::</op:operator><name pos:line="724" pos:column="24">GetDlgItem</name></name><argument_list pos:line="724" pos:column="34">(<argument><expr><name pos:line="724" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="724" pos:column="43">IDC_WARNING_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="724" pos:column="64">isDisabled</name><op:operator pos:line="724" pos:column="74">?</op:operator><name pos:line="724" pos:column="75">SW_SHOW</name><op:operator pos:line="724" pos:column="82">:</op:operator><name pos:line="724" pos:column="83">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="727" pos:column="1">void</name></type> <name><name pos:line="727" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="727" pos:column="21">::</op:operator><name pos:line="727" pos:column="23">showCurrentSettings</name></name><parameter_list pos:line="727" pos:column="42">()</parameter_list> <block pos:line="727" pos:column="45">{
	<decl_stmt><decl><type><name pos:line="728" pos:column="9">int</name></type> <name pos:line="728" pos:column="13">keyIndex</name> <init pos:line="728" pos:column="22">= <expr><call><name><op:operator pos:line="728" pos:column="24">::</op:operator><name pos:line="728" pos:column="26">SendDlgItemMessage</name></name><argument_list pos:line="728" pos:column="44">(<argument><expr><name pos:line="728" pos:column="45">_hSelf</name></expr></argument>, <argument><expr><name pos:line="728" pos:column="53">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="728" pos:column="68">LB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="728" pos:column="82">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="728" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="729" pos:column="9">_keyCombo</name> <op:operator pos:line="729" pos:column="19">=</op:operator> <name><name pos:line="729" pos:column="21">_keyCombos</name><index pos:line="729" pos:column="31">[<expr><name pos:line="729" pos:column="32">keyIndex</name></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="730" pos:column="9">::</op:operator><name pos:line="730" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="730" pos:column="29">(<argument><expr><name pos:line="730" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="730" pos:column="38">IDC_CTRL_CHECK</name></expr></argument>,	<argument><expr><name pos:line="730" pos:column="57">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="730" pos:column="70">_keyCombo</name><op:operator pos:line="730" pos:column="79">.</op:operator><name pos:line="730" pos:column="80">_isCtrl</name></name><op:operator pos:line="730" pos:column="87">?</op:operator><name pos:line="730" pos:column="88">BST_CHECKED</name><op:operator pos:line="730" pos:column="99">:</op:operator><name pos:line="730" pos:column="100">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="730" pos:column="115">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="731" pos:column="9">::</op:operator><name pos:line="731" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="731" pos:column="29">(<argument><expr><name pos:line="731" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="731" pos:column="38">IDC_ALT_CHECK</name></expr></argument>,		<argument><expr><name pos:line="731" pos:column="65">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="731" pos:column="78">_keyCombo</name><op:operator pos:line="731" pos:column="87">.</op:operator><name pos:line="731" pos:column="88">_isAlt</name></name><op:operator pos:line="731" pos:column="94">?</op:operator><name pos:line="731" pos:column="95">BST_CHECKED</name><op:operator pos:line="731" pos:column="106">:</op:operator><name pos:line="731" pos:column="107">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="731" pos:column="122">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="732" pos:column="9">::</op:operator><name pos:line="732" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="732" pos:column="29">(<argument><expr><name pos:line="732" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="732" pos:column="38">IDC_SHIFT_CHECK</name></expr></argument>,	<argument><expr><name pos:line="732" pos:column="57">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="732" pos:column="70">_keyCombo</name><op:operator pos:line="732" pos:column="79">.</op:operator><name pos:line="732" pos:column="80">_isShift</name></name><op:operator pos:line="732" pos:column="88">?</op:operator><name pos:line="732" pos:column="89">BST_CHECKED</name><op:operator pos:line="732" pos:column="100">:</op:operator><name pos:line="732" pos:column="101">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="732" pos:column="116">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="733" pos:column="9">for (<init><decl><type><name pos:line="733" pos:column="14">size_t</name></type> <name pos:line="733" pos:column="21">i</name> <init pos:line="733" pos:column="23">= <expr><lit:literal type="number" pos:line="733" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="733" pos:column="29">i</name> <op:operator pos:line="733" pos:column="31">&lt;</op:operator> <name pos:line="733" pos:column="33">nrKeys</name></expr> ;</condition> <incr><expr><name pos:line="733" pos:column="42">i</name><op:operator pos:line="733" pos:column="43">++</op:operator></expr></incr>)
	<block pos:line="734" pos:column="9">{
		<if pos:line="735" pos:column="17">if <condition pos:line="735" pos:column="20">(<expr><name><name pos:line="735" pos:column="21">_keyCombo</name><op:operator pos:line="735" pos:column="30">.</op:operator><name pos:line="735" pos:column="31">_key</name></name> <op:operator pos:line="735" pos:column="36">==</op:operator> <name><name pos:line="735" pos:column="39">namedKeyArray</name><index pos:line="735" pos:column="52">[<expr><name pos:line="735" pos:column="53">i</name></expr>]</index></name><op:operator pos:line="735" pos:column="55">.</op:operator><name pos:line="735" pos:column="56">id</name></expr>)</condition><then pos:line="735" pos:column="59">
		<block pos:line="736" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="737" pos:column="25">::</op:operator><name pos:line="737" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="737" pos:column="45">(<argument><expr><name pos:line="737" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="737" pos:column="54">IDC_KEY_COMBO</name></expr></argument>, <argument><expr><name pos:line="737" pos:column="69">CB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="737" pos:column="83">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="737" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="738" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="743" pos:column="1">void</name></type> <name><name pos:line="743" pos:column="6">ScintillaKeyMap</name><op:operator pos:line="743" pos:column="21">::</op:operator><name pos:line="743" pos:column="23">updateListItem</name></name><parameter_list pos:line="743" pos:column="37">(<param><decl><type><name pos:line="743" pos:column="38">int</name></type> <name pos:line="743" pos:column="42">index</name></decl></param>)</parameter_list> <block pos:line="743" pos:column="49">{
	<expr_stmt><expr><call><name><op:operator pos:line="744" pos:column="9">::</op:operator><name pos:line="744" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="744" pos:column="29">(<argument><expr><name pos:line="744" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="744" pos:column="38">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="744" pos:column="53">LB_INSERTSTRING</name></expr></argument>, <argument><expr><name pos:line="744" pos:column="70">index</name></expr></argument>, <argument><expr><op:operator pos:line="744" pos:column="77">(</op:operator><name pos:line="744" pos:column="78">LPARAM</name><op:operator pos:line="744" pos:column="84">)</op:operator><call><name pos:line="744" pos:column="85">toString</name><argument_list pos:line="744" pos:column="93">(<argument><expr><name pos:line="744" pos:column="94">index</name></expr></argument>)</argument_list></call><op:operator pos:line="744" pos:column="100">.</op:operator><call><name pos:line="744" pos:column="101">c_str</name><argument_list pos:line="744" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="745" pos:column="9">::</op:operator><name pos:line="745" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="745" pos:column="29">(<argument><expr><name pos:line="745" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="745" pos:column="38">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="745" pos:column="53">LB_DELETESTRING</name></expr></argument>, <argument><expr><name pos:line="745" pos:column="70">index</name><op:operator pos:line="745" pos:column="75">+</op:operator><lit:literal type="number" pos:line="745" pos:column="76">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="745" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="748" pos:column="1">BOOL</name> <name pos:line="748" pos:column="6">CALLBACK</name></type> <name><name pos:line="748" pos:column="15">ScintillaKeyMap</name><op:operator pos:line="748" pos:column="30">::</op:operator><name pos:line="748" pos:column="32">run_dlgProc</name></name><parameter_list pos:line="748" pos:column="43">(<param><decl><type><name pos:line="748" pos:column="44">UINT</name></type> <name pos:line="748" pos:column="49">Message</name></decl></param>, <param><decl><type><name pos:line="748" pos:column="58">WPARAM</name></type> <name pos:line="748" pos:column="65">wParam</name></decl></param>, <param><decl><type><name pos:line="748" pos:column="73">LPARAM</name></type></decl></param>)</parameter_list> 
<block pos:line="749" pos:column="1">{
	
	<switch pos:line="751" pos:column="9">switch <condition pos:line="751" pos:column="16">(<expr><name pos:line="751" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="752" pos:column="9">{
		<case pos:line="753" pos:column="17">case <expr><name pos:line="753" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="754" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="755" pos:column="25">::</op:operator><name pos:line="755" pos:column="27">SetDlgItemText</name></name><argument_list pos:line="755" pos:column="41">(<argument><expr><name pos:line="755" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="755" pos:column="50">IDC_NAME_EDIT</name></expr></argument>, <argument><expr><name pos:line="755" pos:column="65">_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="756" pos:column="25">_keyCombo</name> <op:operator pos:line="756" pos:column="35">=</op:operator> <name><name pos:line="756" pos:column="37">_keyCombos</name><index pos:line="756" pos:column="47">[<expr><lit:literal type="number" pos:line="756" pos:column="48">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>

			<for pos:line="758" pos:column="25">for (<init><decl><type><name pos:line="758" pos:column="30">size_t</name></type> <name pos:line="758" pos:column="37">i</name> <init pos:line="758" pos:column="39">= <expr><lit:literal type="number" pos:line="758" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="758" pos:column="45">i</name> <op:operator pos:line="758" pos:column="47">&lt;</op:operator> <name pos:line="758" pos:column="49">nrKeys</name></expr> ;</condition> <incr><expr><name pos:line="758" pos:column="58">i</name><op:operator pos:line="758" pos:column="59">++</op:operator></expr></incr>)
			<block pos:line="759" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="760" pos:column="33">::</op:operator><name pos:line="760" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="760" pos:column="53">(<argument><expr><name pos:line="760" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="760" pos:column="62">IDC_KEY_COMBO</name></expr></argument>, <argument><expr><name pos:line="760" pos:column="77">CB_ADDSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="760" pos:column="91">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="760" pos:column="94">(</op:operator><name pos:line="760" pos:column="95">LPARAM</name><op:operator pos:line="760" pos:column="101">)</op:operator><name><name pos:line="760" pos:column="102">namedKeyArray</name><index pos:line="760" pos:column="115">[<expr><name pos:line="760" pos:column="116">i</name></expr>]</index></name><op:operator pos:line="760" pos:column="118">.</op:operator><name pos:line="760" pos:column="119">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>

			<for pos:line="763" pos:column="25">for(<init><decl><type><name pos:line="763" pos:column="29">size_t</name></type> <name pos:line="763" pos:column="36">i</name> <init pos:line="763" pos:column="38">= <expr><lit:literal type="number" pos:line="763" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="763" pos:column="43">i</name> <op:operator pos:line="763" pos:column="45">&lt;</op:operator> <name pos:line="763" pos:column="47">size</name></expr>;</condition> <incr><expr><name pos:line="763" pos:column="53">i</name><op:operator pos:line="763" pos:column="54">++</op:operator></expr></incr>) <block pos:line="763" pos:column="58">{
				<expr_stmt><expr><call><name><op:operator pos:line="764" pos:column="33">::</op:operator><name pos:line="764" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="764" pos:column="53">(<argument><expr><name pos:line="764" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="764" pos:column="62">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="764" pos:column="77">LB_ADDSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="764" pos:column="91">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="764" pos:column="94">(</op:operator><name pos:line="764" pos:column="95">LPARAM</name><op:operator pos:line="764" pos:column="101">)</op:operator><call><name pos:line="764" pos:column="102">toString</name><argument_list pos:line="764" pos:column="110">(<argument><expr><name pos:line="764" pos:column="111">i</name></expr></argument>)</argument_list></call><op:operator pos:line="764" pos:column="113">.</op:operator><call><name pos:line="764" pos:column="114">c_str</name><argument_list pos:line="764" pos:column="119">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><op:operator pos:line="766" pos:column="25">::</op:operator><name pos:line="766" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="766" pos:column="45">(<argument><expr><name pos:line="766" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="766" pos:column="54">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="766" pos:column="69">LB_SETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="768" pos:column="25">showCurrentSettings</name><argument_list pos:line="768" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="769" pos:column="25">validateDialog</name><argument_list pos:line="769" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="771" pos:column="25">goToCenter</name><argument_list pos:line="771" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="772" pos:column="25">return <expr><name pos:line="772" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="775" pos:column="17">case <expr><name pos:line="775" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="776" pos:column="17">{
			<switch pos:line="777" pos:column="25">switch <condition pos:line="777" pos:column="32">(<expr><name pos:line="777" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="778" pos:column="25">{
				<case pos:line="779" pos:column="33">case <expr><name pos:line="779" pos:column="38">IDC_CTRL_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="780" pos:column="41">_keyCombo</name><op:operator pos:line="780" pos:column="50">.</op:operator><name pos:line="780" pos:column="51">_isCtrl</name></name> <op:operator pos:line="780" pos:column="59">=</op:operator> <name pos:line="780" pos:column="61">BST_CHECKED</name> <op:operator pos:line="780" pos:column="73">==</op:operator> <call><name><op:operator pos:line="780" pos:column="76">::</op:operator><name pos:line="780" pos:column="78">SendDlgItemMessage</name></name><argument_list pos:line="780" pos:column="96">(<argument><expr><name pos:line="780" pos:column="97">_hSelf</name></expr></argument>, <argument><expr><name pos:line="780" pos:column="105">wParam</name></expr></argument>, <argument><expr><name pos:line="780" pos:column="113">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="780" pos:column="126">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="780" pos:column="129">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line" pos:line="781" pos:column="41">//applyToCurrentIndex();</comment>
					<expr_stmt><expr><call><name pos:line="782" pos:column="41">validateDialog</name><argument_list pos:line="782" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="783" pos:column="41">return <expr><name pos:line="783" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="785" pos:column="33">case <expr><name pos:line="785" pos:column="38">IDC_ALT_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="786" pos:column="41">_keyCombo</name><op:operator pos:line="786" pos:column="50">.</op:operator><name pos:line="786" pos:column="51">_isAlt</name></name> <op:operator pos:line="786" pos:column="58">=</op:operator> <name pos:line="786" pos:column="60">BST_CHECKED</name> <op:operator pos:line="786" pos:column="72">==</op:operator> <call><name><op:operator pos:line="786" pos:column="75">::</op:operator><name pos:line="786" pos:column="77">SendDlgItemMessage</name></name><argument_list pos:line="786" pos:column="95">(<argument><expr><name pos:line="786" pos:column="96">_hSelf</name></expr></argument>, <argument><expr><name pos:line="786" pos:column="104">wParam</name></expr></argument>, <argument><expr><name pos:line="786" pos:column="112">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="786" pos:column="125">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="786" pos:column="128">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line" pos:line="787" pos:column="41">//applyToCurrentIndex();</comment>
					<expr_stmt><expr><call><name pos:line="788" pos:column="41">validateDialog</name><argument_list pos:line="788" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="789" pos:column="41">return <expr><name pos:line="789" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="791" pos:column="33">case <expr><name pos:line="791" pos:column="38">IDC_SHIFT_CHECK</name></expr> :
					<expr_stmt><expr><name><name pos:line="792" pos:column="41">_keyCombo</name><op:operator pos:line="792" pos:column="50">.</op:operator><name pos:line="792" pos:column="51">_isShift</name></name> <op:operator pos:line="792" pos:column="60">=</op:operator> <name pos:line="792" pos:column="62">BST_CHECKED</name> <op:operator pos:line="792" pos:column="74">==</op:operator> <call><name><op:operator pos:line="792" pos:column="77">::</op:operator><name pos:line="792" pos:column="79">SendDlgItemMessage</name></name><argument_list pos:line="792" pos:column="97">(<argument><expr><name pos:line="792" pos:column="98">_hSelf</name></expr></argument>, <argument><expr><name pos:line="792" pos:column="106">wParam</name></expr></argument>, <argument><expr><name pos:line="792" pos:column="114">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="792" pos:column="127">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="792" pos:column="130">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line" pos:line="793" pos:column="41">//applyToCurrentIndex();</comment>
					<return pos:line="794" pos:column="41">return <expr><name pos:line="794" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="796" pos:column="33">case <expr><name pos:line="796" pos:column="38">IDOK</name></expr> :
					<comment type="line" pos:line="797" pos:column="41">//Cleanup</comment>
					<expr_stmt><expr><name><name pos:line="798" pos:column="41">_keyCombo</name><op:operator pos:line="798" pos:column="50">.</op:operator><name pos:line="798" pos:column="51">_key</name></name> <op:operator pos:line="798" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="798" pos:column="58">0</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="799" pos:column="41">_keyCombo</name><op:operator pos:line="799" pos:column="50">.</op:operator><name pos:line="799" pos:column="51">_isCtrl</name></name> <op:operator pos:line="799" pos:column="59">=</op:operator> <name><name pos:line="799" pos:column="61">_keyCombo</name><op:operator pos:line="799" pos:column="70">.</op:operator><name pos:line="799" pos:column="71">_isAlt</name></name> <op:operator pos:line="799" pos:column="78">=</op:operator> <name><name pos:line="799" pos:column="80">_keyCombo</name><op:operator pos:line="799" pos:column="89">.</op:operator><name pos:line="799" pos:column="90">_isShift</name></name> <op:operator pos:line="799" pos:column="99">=</op:operator> <lit:literal type="boolean" pos:line="799" pos:column="101">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="800" pos:column="41">::</op:operator><name pos:line="800" pos:column="43">EndDialog</name></name><argument_list pos:line="800" pos:column="52">(<argument><expr><name pos:line="800" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="800" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="801" pos:column="41">return <expr><name pos:line="801" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="803" pos:column="33">case <expr><name pos:line="803" pos:column="38">IDCANCEL</name></expr> :
					<expr_stmt><expr><call><name><op:operator pos:line="804" pos:column="41">::</op:operator><name pos:line="804" pos:column="43">EndDialog</name></name><argument_list pos:line="804" pos:column="52">(<argument><expr><name pos:line="804" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="804" pos:column="61">-</op:operator><lit:literal type="number" pos:line="804" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="805" pos:column="41">return <expr><name pos:line="805" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="807" pos:column="33">case <expr><name pos:line="807" pos:column="38">IDC_BUTTON_ADD</name></expr>: <block pos:line="807" pos:column="54">{
					<decl_stmt><decl><type><name pos:line="808" pos:column="41">int</name></type> <name pos:line="808" pos:column="45">oldsize</name> <init pos:line="808" pos:column="53">= <expr><name pos:line="808" pos:column="55">size</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="809" pos:column="41">int</name></type> <name pos:line="809" pos:column="45">res</name> <init pos:line="809" pos:column="49">= <expr><call><name pos:line="809" pos:column="51">addKeyCombo</name><argument_list pos:line="809" pos:column="62">(<argument><expr><name pos:line="809" pos:column="63">_keyCombo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="810" pos:column="41">if <condition pos:line="810" pos:column="44">(<expr><name pos:line="810" pos:column="45">res</name> <op:operator pos:line="810" pos:column="49">&gt;</op:operator> <op:operator pos:line="810" pos:column="51">-</op:operator><lit:literal type="number" pos:line="810" pos:column="52">1</lit:literal></expr>)</condition><then pos:line="810" pos:column="54"> <block pos:line="810" pos:column="55">{
						<if pos:line="811" pos:column="49">if <condition pos:line="811" pos:column="52">(<expr><name pos:line="811" pos:column="53">res</name> <op:operator pos:line="811" pos:column="57">==</op:operator> <name pos:line="811" pos:column="60">oldsize</name></expr>)</condition><then pos:line="811" pos:column="68"> <block pos:line="811" pos:column="69">{
							<expr_stmt><expr><call><name><op:operator pos:line="812" pos:column="57">::</op:operator><name pos:line="812" pos:column="59">SendDlgItemMessage</name></name><argument_list pos:line="812" pos:column="77">(<argument><expr><name pos:line="812" pos:column="78">_hSelf</name></expr></argument>, <argument><expr><name pos:line="812" pos:column="86">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="812" pos:column="101">LB_INSERTSTRING</name></expr></argument>, <argument><expr><op:operator pos:line="812" pos:column="118">(</op:operator><name pos:line="812" pos:column="119">WPARAM</name><op:operator pos:line="812" pos:column="125">)</op:operator><op:operator pos:line="812" pos:column="126">-</op:operator><lit:literal type="number" pos:line="812" pos:column="127">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="812" pos:column="130">(</op:operator><name pos:line="812" pos:column="131">LPARAM</name><op:operator pos:line="812" pos:column="137">)</op:operator><call><name pos:line="812" pos:column="138">toString</name><argument_list pos:line="812" pos:column="146">(<argument><expr><name pos:line="812" pos:column="147">res</name></expr></argument>)</argument_list></call><op:operator pos:line="812" pos:column="151">.</op:operator><call><name pos:line="812" pos:column="152">c_str</name><argument_list pos:line="812" pos:column="157">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then><else pos:line="813" pos:column="50">else <block pos:line="813" pos:column="55">{	<comment type="line" pos:line="813" pos:column="57">//update current generic_string, can happen if it was disabled</comment>
							<expr_stmt><expr><call><name pos:line="814" pos:column="57">updateListItem</name><argument_list pos:line="814" pos:column="71">(<argument><expr><name pos:line="814" pos:column="72">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
						<expr_stmt><expr><call><name><op:operator pos:line="816" pos:column="49">::</op:operator><name pos:line="816" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="816" pos:column="69">(<argument><expr><name pos:line="816" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="816" pos:column="78">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="816" pos:column="93">LB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="816" pos:column="107">res</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="816" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><call><name pos:line="818" pos:column="41">showCurrentSettings</name><argument_list pos:line="818" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="819" pos:column="41">validateDialog</name><argument_list pos:line="819" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="820" pos:column="41">return <expr><name pos:line="820" pos:column="48">TRUE</name></expr>;</return> }</block>

				</case><case pos:line="822" pos:column="33">case <expr><name pos:line="822" pos:column="38">IDC_BUTTON_RMVE</name></expr>: <block pos:line="822" pos:column="55">{
					<if pos:line="823" pos:column="41">if <condition pos:line="823" pos:column="44">(<expr><name pos:line="823" pos:column="45">size</name> <op:operator pos:line="823" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="823" pos:column="53">1</lit:literal></expr>)</condition><then pos:line="823" pos:column="55">	<comment type="line" pos:line="823" pos:column="57">//cannot delete last shortcut</comment>
						<return pos:line="824" pos:column="49">return <expr><name pos:line="824" pos:column="56">TRUE</name></expr>;</return></then></if>
					<decl_stmt><decl><type><name pos:line="825" pos:column="41">int</name></type> <name pos:line="825" pos:column="45">i</name> <init pos:line="825" pos:column="47">= <expr><call><name><op:operator pos:line="825" pos:column="49">::</op:operator><name pos:line="825" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="825" pos:column="69">(<argument><expr><name pos:line="825" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="825" pos:column="78">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="825" pos:column="93">LB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="825" pos:column="107">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="825" pos:column="110">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="826" pos:column="41">removeKeyComboByIndex</name><argument_list pos:line="826" pos:column="62">(<argument><expr><name pos:line="826" pos:column="63">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="827" pos:column="41">::</op:operator><name pos:line="827" pos:column="43">SendDlgItemMessage</name></name><argument_list pos:line="827" pos:column="61">(<argument><expr><name pos:line="827" pos:column="62">_hSelf</name></expr></argument>, <argument><expr><name pos:line="827" pos:column="70">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="827" pos:column="85">LB_DELETESTRING</name></expr></argument>, <argument><expr><name pos:line="827" pos:column="102">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="827" pos:column="105">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="828" pos:column="41">if <condition pos:line="828" pos:column="44">(<expr><name pos:line="828" pos:column="45">i</name> <op:operator pos:line="828" pos:column="47">==</op:operator> <op:operator pos:line="828" pos:column="50">(</op:operator><name pos:line="828" pos:column="51">int</name><op:operator pos:line="828" pos:column="54">)</op:operator><name pos:line="828" pos:column="55">size</name></expr>)</condition><then pos:line="828" pos:column="60">
						<expr_stmt><expr><name pos:line="829" pos:column="49">i</name> <op:operator pos:line="829" pos:column="51">=</op:operator> <name pos:line="829" pos:column="53">size</name> <op:operator pos:line="829" pos:column="58">-</op:operator> <lit:literal type="number" pos:line="829" pos:column="60">1</lit:literal></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name><op:operator pos:line="830" pos:column="41">::</op:operator><name pos:line="830" pos:column="43">SendDlgItemMessage</name></name><argument_list pos:line="830" pos:column="61">(<argument><expr><name pos:line="830" pos:column="62">_hSelf</name></expr></argument>, <argument><expr><name pos:line="830" pos:column="70">IDC_LIST_KEYS</name></expr></argument>, <argument><expr><name pos:line="830" pos:column="85">LB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="830" pos:column="99">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="830" pos:column="102">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="831" pos:column="41">showCurrentSettings</name><argument_list pos:line="831" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="832" pos:column="41">validateDialog</name><argument_list pos:line="832" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="833" pos:column="41">return <expr><name pos:line="833" pos:column="48">TRUE</name></expr>;</return> }</block>

				</case><case pos:line="835" pos:column="33">case <expr><name pos:line="835" pos:column="38">IDC_BUTTON_APPLY</name></expr>: <block pos:line="835" pos:column="56">{
					<expr_stmt><expr><call><name pos:line="836" pos:column="41">applyToCurrentIndex</name><argument_list pos:line="836" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="837" pos:column="41">validateDialog</name><argument_list pos:line="837" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="838" pos:column="41">return <expr><name pos:line="838" pos:column="48">TRUE</name></expr>;</return> }</block>

				</case><default pos:line="840" pos:column="33">default:
					<if pos:line="841" pos:column="41">if <condition pos:line="841" pos:column="44">(<expr><call><name pos:line="841" pos:column="45">HIWORD</name><argument_list pos:line="841" pos:column="51">(<argument><expr><name pos:line="841" pos:column="52">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="841" pos:column="60">==</op:operator> <name pos:line="841" pos:column="63">CBN_SELCHANGE</name> <op:operator pos:line="841" pos:column="77">||</op:operator> <call><name pos:line="841" pos:column="80">HIWORD</name><argument_list pos:line="841" pos:column="86">(<argument><expr><name pos:line="841" pos:column="87">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="841" pos:column="95">==</op:operator> <name pos:line="841" pos:column="98">LBN_SELCHANGE</name></expr>)</condition><then pos:line="841" pos:column="112">
					<block pos:line="842" pos:column="41">{
						<switch pos:line="843" pos:column="49">switch<condition pos:line="843" pos:column="55">(<expr><call><name pos:line="843" pos:column="56">LOWORD</name><argument_list pos:line="843" pos:column="62">(<argument><expr><name pos:line="843" pos:column="63">wParam</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="843" pos:column="72">{
							<case pos:line="844" pos:column="57">case <expr><name pos:line="844" pos:column="62">IDC_KEY_COMBO</name></expr>:
							<block pos:line="845" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="846" pos:column="65">int</name></type> <name pos:line="846" pos:column="69">i</name> <init pos:line="846" pos:column="71">= <expr><call><name><op:operator pos:line="846" pos:column="73">::</op:operator><name pos:line="846" pos:column="75">SendDlgItemMessage</name></name><argument_list pos:line="846" pos:column="93">(<argument><expr><name pos:line="846" pos:column="94">_hSelf</name></expr></argument>, <argument><expr><name pos:line="846" pos:column="102">IDC_KEY_COMBO</name></expr></argument>, <argument><expr><name pos:line="846" pos:column="117">CB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="846" pos:column="131">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="846" pos:column="134">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<expr_stmt><expr><name><name pos:line="847" pos:column="65">_keyCombo</name><op:operator pos:line="847" pos:column="74">.</op:operator><name pos:line="847" pos:column="75">_key</name></name> <op:operator pos:line="847" pos:column="80">=</op:operator> <name><name pos:line="847" pos:column="82">namedKeyArray</name><index pos:line="847" pos:column="95">[<expr><name pos:line="847" pos:column="96">i</name></expr>]</index></name><op:operator pos:line="847" pos:column="98">.</op:operator><name pos:line="847" pos:column="99">id</name></expr>;</expr_stmt>
								<comment type="line" pos:line="848" pos:column="65">//applyToCurrentIndex();</comment>
								<expr_stmt><expr><call><name pos:line="849" pos:column="65">validateDialog</name><argument_list pos:line="849" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
								<return pos:line="850" pos:column="65">return <expr><name pos:line="850" pos:column="72">TRUE</name></expr>;</return>
							}</block>
							</case><case pos:line="852" pos:column="57">case <expr><name pos:line="852" pos:column="62">IDC_LIST_KEYS</name></expr>:
							<block pos:line="853" pos:column="57">{
								<expr_stmt><expr><call><name pos:line="854" pos:column="65">showCurrentSettings</name><argument_list pos:line="854" pos:column="84">()</argument_list></call></expr>;</expr_stmt>
								<return pos:line="855" pos:column="65">return <expr><name pos:line="855" pos:column="72">TRUE</name></expr>;</return>
							}</block>
						</case>}</block></switch>
					}</block></then></if>
					<return pos:line="859" pos:column="41">return <expr><name pos:line="859" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="862" pos:column="17">default :
			<return pos:line="863" pos:column="25">return <expr><name pos:line="863" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>

	<comment type="line" pos:line="866" pos:column="9">//return FALSE;</comment>
}</block></function>
</unit>
