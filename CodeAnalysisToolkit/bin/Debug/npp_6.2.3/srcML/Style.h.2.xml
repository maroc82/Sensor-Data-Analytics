<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\Style.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file Style.h
 ** Defines the font and colour style for a class of text.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2001 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">STYLE_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">STYLE_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<struct pos:line="15" pos:column="1">struct <name pos:line="15" pos:column="8">FontSpecification</name> <block pos:line="15" pos:column="26">{<public type="default" pos:line="15" pos:column="27">
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const</specifier> <name pos:line="16" pos:column="15">char</name> <type:modifier pos:line="16" pos:column="20">*</type:modifier></type><name pos:line="16" pos:column="21">fontName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">bool</name></type> <name pos:line="17" pos:column="14">bold</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">bool</name></type> <name pos:line="18" pos:column="14">italic</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int</name></type> <name pos:line="19" pos:column="13">size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int</name></type> <name pos:line="20" pos:column="13">characterSet</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int</name></type> <name pos:line="21" pos:column="13">extraFontFlag</name></decl>;</decl_stmt>
	<constructor><name pos:line="22" pos:column="9">FontSpecification</name><parameter_list pos:line="22" pos:column="26">()</parameter_list> <member_list pos:line="22" pos:column="29">:
		<call><name pos:line="23" pos:column="17">fontName</name><argument_list pos:line="23" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="26">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="28">,</op:operator>
		<call><name pos:line="24" pos:column="17">bold</name><argument_list pos:line="24" pos:column="21">(<argument><expr><lit:literal type="boolean" pos:line="24" pos:column="22">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="28">,</op:operator>
		<call><name pos:line="25" pos:column="17">italic</name><argument_list pos:line="25" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="25" pos:column="24">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="30">,</op:operator>
		<call><name pos:line="26" pos:column="17">size</name><argument_list pos:line="26" pos:column="21">(<argument><expr><lit:literal type="number" pos:line="26" pos:column="22">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="26" pos:column="25">,</op:operator>
		<call><name pos:line="27" pos:column="17">characterSet</name><argument_list pos:line="27" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="27" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="27" pos:column="32">,</op:operator>
		<call><name pos:line="28" pos:column="17">extraFontFlag</name><argument_list pos:line="28" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="28" pos:column="31">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="28" pos:column="34">{
	}</block></constructor>
	<function_decl><type><name pos:line="30" pos:column="9">bool</name></type> <name pos:line="30" pos:column="14">EqualTo</name><parameter_list pos:line="30" pos:column="21">(<param><decl><type><specifier pos:line="30" pos:column="22">const</specifier> <name pos:line="30" pos:column="28">FontSpecification</name> <type:modifier pos:line="30" pos:column="46">&amp;</type:modifier></type><name pos:line="30" pos:column="47">other</name></decl></param>)</parameter_list> <specifier pos:line="30" pos:column="54">const</specifier>;</function_decl>
</public>}</block>;</struct>

<comment type="line" pos:line="33" pos:column="1">// Just like Font but only has a copy of the FontID so should not delete it</comment>
<class pos:line="34" pos:column="1">class <name pos:line="34" pos:column="7">FontAlias</name> <super pos:line="34" pos:column="17">: <specifier pos:line="34" pos:column="19">public</specifier> <name pos:line="34" pos:column="26">Font</name></super> <block pos:line="34" pos:column="31">{<private type="default" pos:line="34" pos:column="32">
	<comment type="line" pos:line="35" pos:column="9">// Private so FontAlias objects can not be copied</comment>
	<constructor_decl><name pos:line="36" pos:column="9">FontAlias</name><parameter_list pos:line="36" pos:column="18">(<param><decl><type><specifier pos:line="36" pos:column="19">const</specifier></type> <name pos:line="36" pos:column="25">FontAlias</name> <type:modifier pos:line="36" pos:column="35">&amp;</type:modifier></decl></param>)</parameter_list>;</constructor_decl>
	<function_decl><type><name pos:line="37" pos:column="9">FontAlias</name> <type:modifier pos:line="37" pos:column="19">&amp;</type:modifier></type><name pos:line="37" pos:column="20">operator=</name><parameter_list pos:line="37" pos:column="29">(<param><decl><type><specifier pos:line="37" pos:column="30">const</specifier></type> <name pos:line="37" pos:column="36">FontAlias</name> <type:modifier pos:line="37" pos:column="46">&amp;</type:modifier></decl></param>)</parameter_list>;</function_decl>
</private><public pos:line="38" pos:column="1">public:
	<constructor_decl><name pos:line="39" pos:column="9">FontAlias</name><parameter_list pos:line="39" pos:column="18">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="40" pos:column="9">virtual</specifier> <name pos:line="40" pos:column="17">~<name pos:line="40" pos:column="18">FontAlias</name></name><parameter_list pos:line="40" pos:column="27">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="41" pos:column="9">void</name></type> <name pos:line="41" pos:column="14">MakeAlias</name><parameter_list pos:line="41" pos:column="23">(<param><decl><type><name pos:line="41" pos:column="24">Font</name> <type:modifier pos:line="41" pos:column="29">&amp;</type:modifier></type><name pos:line="41" pos:column="30">fontOrigin</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="42" pos:column="9">void</name></type> <name pos:line="42" pos:column="14">ClearFont</name><parameter_list pos:line="42" pos:column="23">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<struct pos:line="45" pos:column="1">struct <name pos:line="45" pos:column="8">FontMeasurements</name> <block pos:line="45" pos:column="25">{<public type="default" pos:line="45" pos:column="26">
	<decl_stmt><decl><type><name pos:line="46" pos:column="9">unsigned</name> <name pos:line="46" pos:column="18">int</name></type> <name pos:line="46" pos:column="22">lineHeight</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="47" pos:column="9">unsigned</name> <name pos:line="47" pos:column="18">int</name></type> <name pos:line="47" pos:column="22">ascent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="48" pos:column="9">unsigned</name> <name pos:line="48" pos:column="18">int</name></type> <name pos:line="48" pos:column="22">descent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="49" pos:column="9">unsigned</name> <name pos:line="49" pos:column="18">int</name></type> <name pos:line="49" pos:column="22">externalLeading</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="50" pos:column="9">unsigned</name> <name pos:line="50" pos:column="18">int</name></type> <name pos:line="50" pos:column="22">aveCharWidth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="51" pos:column="9">unsigned</name> <name pos:line="51" pos:column="18">int</name></type> <name pos:line="51" pos:column="22">spaceWidth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">int</name></type> <name pos:line="52" pos:column="13">sizeZoomed</name></decl>;</decl_stmt>
	<constructor_decl><name pos:line="53" pos:column="9">FontMeasurements</name><parameter_list pos:line="53" pos:column="25">()</parameter_list>;</constructor_decl>
	<function_decl><type><name pos:line="54" pos:column="9">void</name></type> <name pos:line="54" pos:column="14">Clear</name><parameter_list pos:line="54" pos:column="19">()</parameter_list>;</function_decl>
</public>}</block>;</struct>

<comment type="block" format="doxygen" pos:line="57" pos:column="1">/**
 */</comment>
<class pos:line="59" pos:column="1">class <name pos:line="59" pos:column="7">Style</name> <super pos:line="59" pos:column="13">: <specifier pos:line="59" pos:column="15">public</specifier> <name pos:line="59" pos:column="22">FontSpecification</name>, <specifier pos:line="59" pos:column="41">public</specifier> <name pos:line="59" pos:column="48">FontMeasurements</name></super> <block pos:line="59" pos:column="65">{<private type="default" pos:line="59" pos:column="66">
</private><public pos:line="60" pos:column="1">public:
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">ColourPair</name></type> <name pos:line="61" pos:column="20">fore</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">ColourPair</name></type> <name pos:line="62" pos:column="20">back</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="63" pos:column="9">bool</name></type> <name pos:line="63" pos:column="14">eolFilled</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="64" pos:column="9">bool</name></type> <name pos:line="64" pos:column="14">underline</name></decl>;</decl_stmt>
	<enum pos:line="65" pos:column="9">enum <name pos:line="65" pos:column="14">ecaseForced</name> <block pos:line="65" pos:column="26">{<decl><name pos:line="65" pos:column="27">caseMixed</name></decl><op:operator pos:line="65" pos:column="36">,</op:operator> <decl><name pos:line="65" pos:column="38">caseUpper</name></decl><op:operator pos:line="65" pos:column="47">,</op:operator> <decl><name pos:line="65" pos:column="49">caseLower</name></decl>}</block>;</enum>
	<decl_stmt><decl><type><name pos:line="66" pos:column="9">ecaseForced</name></type> <name pos:line="66" pos:column="21">caseForce</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">bool</name></type> <name pos:line="67" pos:column="14">visible</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="68" pos:column="9">bool</name></type> <name pos:line="68" pos:column="14">changeable</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="69" pos:column="9">bool</name></type> <name pos:line="69" pos:column="14">hotspot</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="71" pos:column="9">FontAlias</name></type> <name pos:line="71" pos:column="19">font</name></decl>;</decl_stmt>

	<constructor_decl><name pos:line="73" pos:column="9">Style</name><parameter_list pos:line="73" pos:column="14">()</parameter_list>;</constructor_decl>
	<constructor_decl><name pos:line="74" pos:column="9">Style</name><parameter_list pos:line="74" pos:column="14">(<param><decl><type><specifier pos:line="74" pos:column="15">const</specifier> <name pos:line="74" pos:column="21">Style</name> <type:modifier pos:line="74" pos:column="27">&amp;</type:modifier></type><name pos:line="74" pos:column="28">source</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="75" pos:column="9">~<name pos:line="75" pos:column="10">Style</name></name><parameter_list pos:line="75" pos:column="15">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="76" pos:column="9">Style</name> <type:modifier pos:line="76" pos:column="15">&amp;</type:modifier></type><name pos:line="76" pos:column="16">operator=</name><parameter_list pos:line="76" pos:column="25">(<param><decl><type><specifier pos:line="76" pos:column="26">const</specifier> <name pos:line="76" pos:column="32">Style</name> <type:modifier pos:line="76" pos:column="38">&amp;</type:modifier></type><name pos:line="76" pos:column="39">source</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="77" pos:column="9">void</name></type> <name pos:line="77" pos:column="14">Clear</name><parameter_list pos:line="77" pos:column="19">(<param><decl><type><name pos:line="77" pos:column="20">ColourDesired</name></type> <name pos:line="77" pos:column="34">fore_</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="41">ColourDesired</name></type> <name pos:line="77" pos:column="55">back_</name></decl></param>,
	           <param><decl><type><name pos:line="78" pos:column="20">int</name></type> <name pos:line="78" pos:column="24">size_</name></decl></param>,
	           <param><decl><type><specifier pos:line="79" pos:column="20">const</specifier> <name pos:line="79" pos:column="26">char</name> <type:modifier pos:line="79" pos:column="31">*</type:modifier></type><name pos:line="79" pos:column="32">fontName_</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="43">int</name></type> <name pos:line="79" pos:column="47">characterSet_</name></decl></param>,
	           <param><decl><type><name pos:line="80" pos:column="20">bool</name></type> <name pos:line="80" pos:column="25">bold_</name></decl></param>, <param><decl><type><name pos:line="80" pos:column="32">bool</name></type> <name pos:line="80" pos:column="37">italic_</name></decl></param>, <param><decl><type><name pos:line="80" pos:column="46">bool</name></type> <name pos:line="80" pos:column="51">eolFilled_</name></decl></param>,
	           <param><decl><type><name pos:line="81" pos:column="20">bool</name></type> <name pos:line="81" pos:column="25">underline_</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="37">ecaseForced</name></type> <name pos:line="81" pos:column="49">caseForce_</name></decl></param>,
		   <param><decl><type><name pos:line="82" pos:column="20">bool</name></type> <name pos:line="82" pos:column="25">visible_</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="35">bool</name></type> <name pos:line="82" pos:column="40">changeable_</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="53">bool</name></type> <name pos:line="82" pos:column="58">hotspot_</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="83" pos:column="9">void</name></type> <name pos:line="83" pos:column="14">ClearTo</name><parameter_list pos:line="83" pos:column="21">(<param><decl><type><specifier pos:line="83" pos:column="22">const</specifier> <name pos:line="83" pos:column="28">Style</name> <type:modifier pos:line="83" pos:column="34">&amp;</type:modifier></type><name pos:line="83" pos:column="35">source</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="84" pos:column="9">void</name></type> <name pos:line="84" pos:column="14">Copy</name><parameter_list pos:line="84" pos:column="18">(<param><decl><type><name pos:line="84" pos:column="19">Font</name> <type:modifier pos:line="84" pos:column="24">&amp;</type:modifier></type><name pos:line="84" pos:column="25">font_</name></decl></param>, <param><decl><type><specifier pos:line="84" pos:column="32">const</specifier> <name pos:line="84" pos:column="38">FontMeasurements</name> <type:modifier pos:line="84" pos:column="55">&amp;</type:modifier></type><name pos:line="84" pos:column="56">fm_</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="85" pos:column="9">bool</name></type> <name pos:line="85" pos:column="14">IsProtected</name><parameter_list pos:line="85" pos:column="25">()</parameter_list> <specifier pos:line="85" pos:column="28">const</specifier> <block pos:line="85" pos:column="34">{ <return pos:line="85" pos:column="36">return <expr><op:operator pos:line="85" pos:column="43">!</op:operator><op:operator pos:line="85" pos:column="44">(</op:operator><name pos:line="85" pos:column="45">changeable</name> <op:operator pos:line="85" pos:column="56">&amp;&amp;</op:operator> <name pos:line="85" pos:column="59">visible</name><op:operator pos:line="85" pos:column="66">)</op:operator></expr>;</return>}</block></function>
</public>}</block>;</class>

<cpp:ifdef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifdef</cpp:directive> <name pos:line="88" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
