<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\staticdialog\StaticDialog.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="31" pos:column="1">void</name></type> <name><name pos:line="31" pos:column="6">StaticDialog</name><op:operator pos:line="31" pos:column="18">::</op:operator><name pos:line="31" pos:column="20">goToCenter</name></name><parameter_list pos:line="31" pos:column="30">()</parameter_list>
<block pos:line="32" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">RECT</name></type> <name pos:line="33" pos:column="10">rc</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="34" pos:column="5">::</op:operator><name pos:line="34" pos:column="7">GetClientRect</name></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="34" pos:column="31">&amp;</op:operator><name pos:line="34" pos:column="32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">POINT</name></type> <name pos:line="35" pos:column="11">center</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">center</name><op:operator pos:line="36" pos:column="11">.</op:operator><name pos:line="36" pos:column="12">x</name></name> <op:operator pos:line="36" pos:column="14">=</op:operator> <name><name pos:line="36" pos:column="16">rc</name><op:operator pos:line="36" pos:column="18">.</op:operator><name pos:line="36" pos:column="19">left</name></name> <op:operator pos:line="36" pos:column="24">+</op:operator> <op:operator pos:line="36" pos:column="26">(</op:operator><name><name pos:line="36" pos:column="27">rc</name><op:operator pos:line="36" pos:column="29">.</op:operator><name pos:line="36" pos:column="30">right</name></name> <op:operator pos:line="36" pos:column="36">-</op:operator> <name><name pos:line="36" pos:column="38">rc</name><op:operator pos:line="36" pos:column="40">.</op:operator><name pos:line="36" pos:column="41">left</name></name><op:operator pos:line="36" pos:column="45">)</op:operator><op:operator pos:line="36" pos:column="46">/</op:operator><lit:literal type="number" pos:line="36" pos:column="47">2</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">center</name><op:operator pos:line="37" pos:column="11">.</op:operator><name pos:line="37" pos:column="12">y</name></name> <op:operator pos:line="37" pos:column="14">=</op:operator> <name><name pos:line="37" pos:column="16">rc</name><op:operator pos:line="37" pos:column="18">.</op:operator><name pos:line="37" pos:column="19">top</name></name> <op:operator pos:line="37" pos:column="23">+</op:operator> <op:operator pos:line="37" pos:column="25">(</op:operator><name><name pos:line="37" pos:column="26">rc</name><op:operator pos:line="37" pos:column="28">.</op:operator><name pos:line="37" pos:column="29">bottom</name></name> <op:operator pos:line="37" pos:column="36">-</op:operator> <name><name pos:line="37" pos:column="38">rc</name><op:operator pos:line="37" pos:column="40">.</op:operator><name pos:line="37" pos:column="41">top</name></name><op:operator pos:line="37" pos:column="44">)</op:operator><op:operator pos:line="37" pos:column="45">/</op:operator><lit:literal type="number" pos:line="37" pos:column="46">2</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="38" pos:column="5">::</op:operator><name pos:line="38" pos:column="7">ClientToScreen</name></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="38" pos:column="32">&amp;</op:operator><name pos:line="38" pos:column="33">center</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="40" pos:column="9">int</name></type> <name pos:line="40" pos:column="13">x</name> <init pos:line="40" pos:column="15">= <expr><name><name pos:line="40" pos:column="17">center</name><op:operator pos:line="40" pos:column="23">.</op:operator><name pos:line="40" pos:column="24">x</name></name> <op:operator pos:line="40" pos:column="26">-</op:operator> <op:operator pos:line="40" pos:column="28">(</op:operator><name><name pos:line="40" pos:column="29">_rc</name><op:operator pos:line="40" pos:column="32">.</op:operator><name pos:line="40" pos:column="33">right</name></name> <op:operator pos:line="40" pos:column="39">-</op:operator> <name><name pos:line="40" pos:column="41">_rc</name><op:operator pos:line="40" pos:column="44">.</op:operator><name pos:line="40" pos:column="45">left</name></name><op:operator pos:line="40" pos:column="49">)</op:operator><op:operator pos:line="40" pos:column="50">/</op:operator><lit:literal type="number" pos:line="40" pos:column="51">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">int</name></type> <name pos:line="41" pos:column="13">y</name> <init pos:line="41" pos:column="15">= <expr><name><name pos:line="41" pos:column="17">center</name><op:operator pos:line="41" pos:column="23">.</op:operator><name pos:line="41" pos:column="24">y</name></name> <op:operator pos:line="41" pos:column="26">-</op:operator> <op:operator pos:line="41" pos:column="28">(</op:operator><name><name pos:line="41" pos:column="29">_rc</name><op:operator pos:line="41" pos:column="32">.</op:operator><name pos:line="41" pos:column="33">bottom</name></name> <op:operator pos:line="41" pos:column="40">-</op:operator> <name><name pos:line="41" pos:column="42">_rc</name><op:operator pos:line="41" pos:column="45">.</op:operator><name pos:line="41" pos:column="46">top</name></name><op:operator pos:line="41" pos:column="49">)</op:operator><op:operator pos:line="41" pos:column="50">/</op:operator><lit:literal type="number" pos:line="41" pos:column="51">2</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="43" pos:column="9">::</op:operator><name pos:line="43" pos:column="11">SetWindowPos</name></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">_hSelf</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="32">HWND_TOP</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">x</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">y</name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="48">_rc</name><op:operator pos:line="43" pos:column="51">.</op:operator><name pos:line="43" pos:column="52">right</name></name> <op:operator pos:line="43" pos:column="58">-</op:operator> <name><name pos:line="43" pos:column="60">_rc</name><op:operator pos:line="43" pos:column="63">.</op:operator><name pos:line="43" pos:column="64">left</name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="70">_rc</name><op:operator pos:line="43" pos:column="73">.</op:operator><name pos:line="43" pos:column="74">bottom</name></name> <op:operator pos:line="43" pos:column="81">-</op:operator> <name><name pos:line="43" pos:column="83">_rc</name><op:operator pos:line="43" pos:column="86">.</op:operator><name pos:line="43" pos:column="87">top</name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="92">SWP_SHOWWINDOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="47" pos:column="1">void</name></type> <name><name pos:line="47" pos:column="6">StaticDialog</name><op:operator pos:line="47" pos:column="18">::</op:operator><name pos:line="47" pos:column="20">display</name></name><parameter_list pos:line="47" pos:column="27">(<param><decl><type><name pos:line="47" pos:column="28">bool</name></type> <name pos:line="47" pos:column="33">toShow</name></decl></param>)</parameter_list> <specifier pos:line="47" pos:column="41">const</specifier> 
<block pos:line="48" pos:column="1">{
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">toShow</name></expr>)</condition><then pos:line="49" pos:column="20"> <block pos:line="49" pos:column="21">{
		<comment type="line" pos:line="50" pos:column="17">// If the user has switched from a dual monitor to a single monitor since we last</comment>
		<comment type="line" pos:line="51" pos:column="17">// displayed the dialog, then ensure that it's still visible on the single monitor.</comment>
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">RECT</name></type> <name pos:line="52" pos:column="22">workAreaRect</name></decl><op:operator pos:line="52" pos:column="34">,</op:operator> <decl><type ref="prev"/><name pos:line="52" pos:column="36">rc</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="53" pos:column="17">::</op:operator><name pos:line="53" pos:column="19">SystemParametersInfo</name></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">SPI_GETWORKAREA</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="53" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="53" pos:column="60">&amp;</op:operator><name pos:line="53" pos:column="61">workAreaRect</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="53" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="54" pos:column="17">::</op:operator><name pos:line="54" pos:column="19">GetWindowRect</name></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="54" pos:column="41">&amp;</op:operator><name pos:line="54" pos:column="42">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">int</name></type> <name pos:line="55" pos:column="21">newLeft</name> <init pos:line="55" pos:column="29">= <expr><name><name pos:line="55" pos:column="31">rc</name><op:operator pos:line="55" pos:column="33">.</op:operator><name pos:line="55" pos:column="34">left</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="56" pos:column="17">int</name></type> <name pos:line="56" pos:column="21">newTop</name> <init pos:line="56" pos:column="28">= <expr><name><name pos:line="56" pos:column="30">rc</name><op:operator pos:line="56" pos:column="32">.</op:operator><name pos:line="56" pos:column="33">top</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">int</name></type> <name pos:line="57" pos:column="21">margin</name> <init pos:line="57" pos:column="28">= <expr><call><name><op:operator pos:line="57" pos:column="30">::</op:operator><name pos:line="57" pos:column="32">GetSystemMetrics</name></name><argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">SM_CYSMCAPTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">newLeft</name> <op:operator pos:line="58" pos:column="29">&gt;</op:operator> <call><name><op:operator pos:line="58" pos:column="31">::</op:operator><name pos:line="58" pos:column="33">GetSystemMetrics</name></name><argument_list pos:line="58" pos:column="49">(<argument><expr><name pos:line="58" pos:column="50">SM_CXVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="69">-</op:operator><name pos:line="58" pos:column="70">margin</name></expr>)</condition><then pos:line="58" pos:column="77">
			<expr_stmt><expr><name pos:line="59" pos:column="25">newLeft</name> <op:operator pos:line="59" pos:column="33">-=</op:operator> <name><name pos:line="59" pos:column="36">rc</name><op:operator pos:line="59" pos:column="38">.</op:operator><name pos:line="59" pos:column="39">right</name></name> <op:operator pos:line="59" pos:column="45">-</op:operator> <name><name pos:line="59" pos:column="47">workAreaRect</name><op:operator pos:line="59" pos:column="59">.</op:operator><name pos:line="59" pos:column="60">right</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">newLeft</name> <op:operator pos:line="60" pos:column="29">+</op:operator> <op:operator pos:line="60" pos:column="31">(</op:operator><name><name pos:line="60" pos:column="32">rc</name><op:operator pos:line="60" pos:column="34">.</op:operator><name pos:line="60" pos:column="35">right</name></name> <op:operator pos:line="60" pos:column="41">-</op:operator> <name><name pos:line="60" pos:column="43">rc</name><op:operator pos:line="60" pos:column="45">.</op:operator><name pos:line="60" pos:column="46">left</name></name><op:operator pos:line="60" pos:column="50">)</op:operator> <op:operator pos:line="60" pos:column="52">&lt;</op:operator> <call><name><op:operator pos:line="60" pos:column="54">::</op:operator><name pos:line="60" pos:column="56">GetSystemMetrics</name></name><argument_list pos:line="60" pos:column="72">(<argument><expr><name pos:line="60" pos:column="73">SM_XVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="60" pos:column="91">+</op:operator><name pos:line="60" pos:column="92">margin</name></expr>)</condition><then pos:line="60" pos:column="99">
			<expr_stmt><expr><name pos:line="61" pos:column="25">newLeft</name> <op:operator pos:line="61" pos:column="33">=</op:operator> <name><name pos:line="61" pos:column="35">workAreaRect</name><op:operator pos:line="61" pos:column="47">.</op:operator><name pos:line="61" pos:column="48">left</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">newTop</name> <op:operator pos:line="62" pos:column="28">&gt;</op:operator> <call><name><op:operator pos:line="62" pos:column="30">::</op:operator><name pos:line="62" pos:column="32">GetSystemMetrics</name></name><argument_list pos:line="62" pos:column="48">(<argument><expr><name pos:line="62" pos:column="49">SM_CYVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="62" pos:column="68">-</op:operator><name pos:line="62" pos:column="69">margin</name></expr>)</condition><then pos:line="62" pos:column="76">
			<expr_stmt><expr><name pos:line="63" pos:column="25">newTop</name> <op:operator pos:line="63" pos:column="32">-=</op:operator> <name><name pos:line="63" pos:column="35">rc</name><op:operator pos:line="63" pos:column="37">.</op:operator><name pos:line="63" pos:column="38">bottom</name></name> <op:operator pos:line="63" pos:column="45">-</op:operator> <name><name pos:line="63" pos:column="47">workAreaRect</name><op:operator pos:line="63" pos:column="59">.</op:operator><name pos:line="63" pos:column="60">bottom</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">newTop</name> <op:operator pos:line="64" pos:column="28">+</op:operator> <op:operator pos:line="64" pos:column="30">(</op:operator><name><name pos:line="64" pos:column="31">rc</name><op:operator pos:line="64" pos:column="33">.</op:operator><name pos:line="64" pos:column="34">bottom</name></name> <op:operator pos:line="64" pos:column="41">-</op:operator> <name><name pos:line="64" pos:column="43">rc</name><op:operator pos:line="64" pos:column="45">.</op:operator><name pos:line="64" pos:column="46">top</name></name><op:operator pos:line="64" pos:column="49">)</op:operator> <op:operator pos:line="64" pos:column="51">&lt;</op:operator> <call><name><op:operator pos:line="64" pos:column="53">::</op:operator><name pos:line="64" pos:column="55">GetSystemMetrics</name></name><argument_list pos:line="64" pos:column="71">(<argument><expr><name pos:line="64" pos:column="72">SM_YVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="90">+</op:operator><name pos:line="64" pos:column="91">margin</name></expr>)</condition><then pos:line="64" pos:column="98">
			<expr_stmt><expr><name pos:line="65" pos:column="25">newTop</name> <op:operator pos:line="65" pos:column="32">=</op:operator> <name><name pos:line="65" pos:column="34">workAreaRect</name><op:operator pos:line="65" pos:column="46">.</op:operator><name pos:line="65" pos:column="47">top</name></name></expr>;</expr_stmt></then></if>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><op:operator pos:line="67" pos:column="21">(</op:operator><name pos:line="67" pos:column="22">newLeft</name> <op:operator pos:line="67" pos:column="30">!=</op:operator> <name><name pos:line="67" pos:column="33">rc</name><op:operator pos:line="67" pos:column="35">.</op:operator><name pos:line="67" pos:column="36">left</name></name><op:operator pos:line="67" pos:column="40">)</op:operator> <op:operator pos:line="67" pos:column="42">||</op:operator> <op:operator pos:line="67" pos:column="45">(</op:operator><name pos:line="67" pos:column="46">newTop</name> <op:operator pos:line="67" pos:column="53">!=</op:operator> <name><name pos:line="67" pos:column="56">rc</name><op:operator pos:line="67" pos:column="58">.</op:operator><name pos:line="67" pos:column="59">top</name></name><op:operator pos:line="67" pos:column="62">)</op:operator></expr>)</condition><then pos:line="67" pos:column="64"> <comment type="line" pos:line="67" pos:column="65">// then the virtual screen size has shrunk</comment>
			<comment type="line" pos:line="68" pos:column="25">// Remember that MoveWindow wants width/height.</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="69" pos:column="25">::</op:operator><name pos:line="69" pos:column="27">MoveWindow</name></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">newLeft</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="55">newTop</name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="63">rc</name><op:operator pos:line="69" pos:column="65">.</op:operator><name pos:line="69" pos:column="66">right</name></name> <op:operator pos:line="69" pos:column="72">-</op:operator> <name><name pos:line="69" pos:column="74">rc</name><op:operator pos:line="69" pos:column="76">.</op:operator><name pos:line="69" pos:column="77">left</name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="83">rc</name><op:operator pos:line="69" pos:column="85">.</op:operator><name pos:line="69" pos:column="86">bottom</name></name> <op:operator pos:line="69" pos:column="93">-</op:operator> <name><name pos:line="69" pos:column="95">rc</name><op:operator pos:line="69" pos:column="97">.</op:operator><name pos:line="69" pos:column="98">top</name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="103">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="72" pos:column="9">Window</name><op:operator pos:line="72" pos:column="15">::</op:operator><name pos:line="72" pos:column="17">display</name></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="76" pos:column="1">HGLOBAL</name></type> <name><name pos:line="76" pos:column="9">StaticDialog</name><op:operator pos:line="76" pos:column="21">::</op:operator><name pos:line="76" pos:column="23">makeRTLResource</name></name><parameter_list pos:line="76" pos:column="38">(<param><decl><type><name pos:line="76" pos:column="39">int</name></type> <name pos:line="76" pos:column="43">dialogID</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="53">DLGTEMPLATE</name> <type:modifier pos:line="76" pos:column="65">*</type:modifier><type:modifier pos:line="76" pos:column="66">*</type:modifier></type><name pos:line="76" pos:column="67">ppMyDlgTemplate</name></decl></param>)</parameter_list>
<block pos:line="77" pos:column="1">{
	<comment type="line" pos:line="78" pos:column="9">// Get Dlg Template resource</comment>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">HRSRC</name></type>  <name pos:line="79" pos:column="16">hDialogRC</name> <init pos:line="79" pos:column="26">= <expr><call><name><op:operator pos:line="79" pos:column="28">::</op:operator><name pos:line="79" pos:column="30">FindResource</name></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="51">MAKEINTRESOURCE</name><argument_list pos:line="79" pos:column="66">(<argument><expr><name pos:line="79" pos:column="67">dialogID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="79" pos:column="78">RT_DIALOG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">HGLOBAL</name></type>  <name pos:line="80" pos:column="18">hDlgTemplate</name> <init pos:line="80" pos:column="31">= <expr><call><name><op:operator pos:line="80" pos:column="33">::</op:operator><name pos:line="80" pos:column="35">LoadResource</name></name><argument_list pos:line="80" pos:column="47">(<argument><expr><name pos:line="80" pos:column="48">_hInst</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="56">hDialogRC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="81" pos:column="9">DLGTEMPLATE</name> <type:modifier pos:line="81" pos:column="21">*</type:modifier></type><name pos:line="81" pos:column="22">pDlgTemplate</name> <init pos:line="81" pos:column="35">= <expr><op:operator pos:line="81" pos:column="37">(</op:operator><name pos:line="81" pos:column="38">DLGTEMPLATE</name> <op:operator pos:line="81" pos:column="50">*</op:operator><op:operator pos:line="81" pos:column="51">)</op:operator><call><name><op:operator pos:line="81" pos:column="52">::</op:operator><name pos:line="81" pos:column="54">LockResource</name></name><argument_list pos:line="81" pos:column="66">(<argument><expr><name pos:line="81" pos:column="67">hDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<comment type="line" pos:line="83" pos:column="9">// Duplicate Dlg Template resource</comment>
	<decl_stmt><decl><type><name pos:line="84" pos:column="9">unsigned</name> <name pos:line="84" pos:column="18">long</name></type> <name pos:line="84" pos:column="23">sizeDlg</name> <init pos:line="84" pos:column="31">= <expr><call><name><op:operator pos:line="84" pos:column="33">::</op:operator><name pos:line="84" pos:column="35">SizeofResource</name></name><argument_list pos:line="84" pos:column="49">(<argument><expr><name pos:line="84" pos:column="50">_hInst</name></expr></argument>, <argument><expr><name pos:line="84" pos:column="58">hDialogRC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="85" pos:column="9">HGLOBAL</name></type> <name pos:line="85" pos:column="17">hMyDlgTemplate</name> <init pos:line="85" pos:column="32">= <expr><call><name><op:operator pos:line="85" pos:column="34">::</op:operator><name pos:line="85" pos:column="36">GlobalAlloc</name></name><argument_list pos:line="85" pos:column="47">(<argument><expr><name pos:line="85" pos:column="48">GPTR</name></expr></argument>, <argument><expr><name pos:line="85" pos:column="54">sizeDlg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="86" pos:column="9">*</op:operator><name pos:line="86" pos:column="10">ppMyDlgTemplate</name> <op:operator pos:line="86" pos:column="26">=</op:operator> <op:operator pos:line="86" pos:column="28">(</op:operator><name pos:line="86" pos:column="29">DLGTEMPLATE</name> <op:operator pos:line="86" pos:column="41">*</op:operator><op:operator pos:line="86" pos:column="42">)</op:operator><call><name><op:operator pos:line="86" pos:column="43">::</op:operator><name pos:line="86" pos:column="45">GlobalLock</name></name><argument_list pos:line="86" pos:column="55">(<argument><expr><name pos:line="86" pos:column="56">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="88" pos:column="9">::</op:operator><name pos:line="88" pos:column="11">memcpy</name></name><argument_list pos:line="88" pos:column="17">(<argument><expr><op:operator pos:line="88" pos:column="18">*</op:operator><name pos:line="88" pos:column="19">ppMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">pDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">sizeDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="90" pos:column="9">DLGTEMPLATEEX</name> <type:modifier pos:line="90" pos:column="23">*</type:modifier></type><name pos:line="90" pos:column="24">pMyDlgTemplateEx</name> <init pos:line="90" pos:column="41">= <expr><op:operator pos:line="90" pos:column="43">(</op:operator><name pos:line="90" pos:column="44">DLGTEMPLATEEX</name> <op:operator pos:line="90" pos:column="58">*</op:operator><op:operator pos:line="90" pos:column="59">)</op:operator><op:operator pos:line="90" pos:column="60">*</op:operator><name pos:line="90" pos:column="61">ppMyDlgTemplate</name></expr></init></decl>;</decl_stmt>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name><name pos:line="91" pos:column="13">pMyDlgTemplateEx</name><op:operator pos:line="91" pos:column="29">-&gt;</op:operator><name pos:line="91" pos:column="31">signature</name></name> <op:operator pos:line="91" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="91" pos:column="44">0xFFFF</lit:literal></expr>)</condition><then pos:line="91" pos:column="51">
		<expr_stmt><expr><name><name pos:line="92" pos:column="17">pMyDlgTemplateEx</name><op:operator pos:line="92" pos:column="33">-&gt;</op:operator><name pos:line="92" pos:column="35">exStyle</name></name> <op:operator pos:line="92" pos:column="43">|=</op:operator> <name pos:line="92" pos:column="46">WS_EX_LAYOUTRTL</name></expr>;</expr_stmt></then>
	<else pos:line="93" pos:column="9">else
		<expr_stmt><expr><name pos:line="94" pos:column="17">(<type:modifier pos:line="94" pos:column="18">*</type:modifier><name pos:line="94" pos:column="19">ppMyDlgTemplate</name>)<op:operator pos:line="94" pos:column="35">-&gt;</op:operator><name pos:line="94" pos:column="37">dwExtendedStyle</name></name> <op:operator pos:line="94" pos:column="53">|=</op:operator> <name pos:line="94" pos:column="56">WS_EX_LAYOUTRTL</name></expr>;</expr_stmt></else></if>

	<return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">hMyDlgTemplate</name></expr>;</return>
}</block></function>

<function><type><name pos:line="99" pos:column="1">void</name></type> <name><name pos:line="99" pos:column="6">StaticDialog</name><op:operator pos:line="99" pos:column="18">::</op:operator><name pos:line="99" pos:column="20">create</name></name><parameter_list pos:line="99" pos:column="26">(<param><decl><type><name pos:line="99" pos:column="27">int</name></type> <name pos:line="99" pos:column="31">dialogID</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="41">bool</name></type> <name pos:line="99" pos:column="46">isRTL</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="53">bool</name></type> <name pos:line="99" pos:column="58">msgDestParent</name></decl></param>)</parameter_list>
<block pos:line="100" pos:column="1">{
	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">isRTL</name></expr>)</condition><then pos:line="101" pos:column="19">
	<block pos:line="102" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">DLGTEMPLATE</name> <type:modifier pos:line="103" pos:column="29">*</type:modifier></type><name pos:line="103" pos:column="30">pMyDlgTemplate</name> <init pos:line="103" pos:column="45">= <expr><name pos:line="103" pos:column="47">NULL</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">HGLOBAL</name></type> <name pos:line="104" pos:column="25">hMyDlgTemplate</name> <init pos:line="104" pos:column="40">= <expr><call><name pos:line="104" pos:column="42">makeRTLResource</name><argument_list pos:line="104" pos:column="57">(<argument><expr><name pos:line="104" pos:column="58">dialogID</name></expr></argument>, <argument><expr><op:operator pos:line="104" pos:column="68">&amp;</op:operator><name pos:line="104" pos:column="69">pMyDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="105" pos:column="17">_hSelf</name> <op:operator pos:line="105" pos:column="24">=</op:operator> <call><name><op:operator pos:line="105" pos:column="26">::</op:operator><name pos:line="105" pos:column="28">CreateDialogIndirectParam</name></name><argument_list pos:line="105" pos:column="53">(<argument><expr><name pos:line="105" pos:column="54">_hInst</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="62">pMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="78">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="105" pos:column="88">(</op:operator><name pos:line="105" pos:column="89">DLGPROC</name><op:operator pos:line="105" pos:column="96">)</op:operator><name pos:line="105" pos:column="97">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="105" pos:column="106">(</op:operator><name pos:line="105" pos:column="107">LPARAM</name><op:operator pos:line="105" pos:column="113">)</op:operator><name pos:line="105" pos:column="114">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="106" pos:column="17">::</op:operator><name pos:line="106" pos:column="19">GlobalFree</name></name><argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="108" pos:column="9">else
		<expr_stmt><expr><name pos:line="109" pos:column="17">_hSelf</name> <op:operator pos:line="109" pos:column="24">=</op:operator> <call><name><op:operator pos:line="109" pos:column="26">::</op:operator><name pos:line="109" pos:column="28">CreateDialogParam</name></name><argument_list pos:line="109" pos:column="45">(<argument><expr><name pos:line="109" pos:column="46">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="54">MAKEINTRESOURCE</name><argument_list pos:line="109" pos:column="69">(<argument><expr><name pos:line="109" pos:column="70">dialogID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="109" pos:column="81">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="109" pos:column="91">(</op:operator><name pos:line="109" pos:column="92">DLGPROC</name><op:operator pos:line="109" pos:column="99">)</op:operator><name pos:line="109" pos:column="100">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="109" pos:column="109">(</op:operator><name pos:line="109" pos:column="110">LPARAM</name><op:operator pos:line="109" pos:column="116">)</op:operator><name pos:line="109" pos:column="117">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><op:operator pos:line="111" pos:column="13">!</op:operator><name pos:line="111" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="111" pos:column="21">
	<block pos:line="112" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="113" pos:column="17">DWORD</name></type> <name pos:line="113" pos:column="23">err</name> <init pos:line="113" pos:column="27">= <expr><call><name><op:operator pos:line="113" pos:column="29">::</op:operator><name pos:line="113" pos:column="31">GetLastError</name></name><argument_list pos:line="113" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="114" pos:column="17">char</name></type> <name><name pos:line="114" pos:column="22">errMsg</name><index pos:line="114" pos:column="28">[<expr><lit:literal type="number" pos:line="114" pos:column="29">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="115" pos:column="17">sprintf</name><argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">errMsg</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="115" pos:column="33">"CreateDialogParam() return NULL.\rGetLastError() == %d"</lit:literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="91">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="116" pos:column="17">::</op:operator><name pos:line="116" pos:column="19">MessageBoxA</name></name><argument_list pos:line="116" pos:column="30">(<argument><expr><name pos:line="116" pos:column="31">NULL</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="37">errMsg</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="116" pos:column="45">"In StaticDialog::create()"</lit:literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="74">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="117" pos:column="17">return;</return>
	}</block></then></if>

	<comment type="line" pos:line="120" pos:column="9">// if the destination of message NPPM_MODELESSDIALOG is not its parent, then it's the grand-parent</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="121" pos:column="9">::</op:operator><name pos:line="121" pos:column="11">SendMessage</name></name><argument_list pos:line="121" pos:column="22">(<argument><expr><name pos:line="121" pos:column="23">msgDestParent</name><op:operator pos:line="121" pos:column="36">?</op:operator><name pos:line="121" pos:column="37">_hParent</name><op:operator pos:line="121" pos:column="45">:</op:operator><op:operator pos:line="121" pos:column="46">(</op:operator><call><name><op:operator pos:line="121" pos:column="47">::</op:operator><name pos:line="121" pos:column="49">GetParent</name></name><argument_list pos:line="121" pos:column="58">(<argument><expr><name pos:line="121" pos:column="59">_hParent</name></expr></argument>)</argument_list></call><op:operator pos:line="121" pos:column="68">)</op:operator></expr></argument>, <argument><expr><name pos:line="121" pos:column="71">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="92">MODELESSDIALOGADD</name></expr></argument>, <argument><expr><op:operator pos:line="121" pos:column="111">(</op:operator><name pos:line="121" pos:column="112">WPARAM</name><op:operator pos:line="121" pos:column="118">)</op:operator><name pos:line="121" pos:column="119">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="124" pos:column="1">BOOL</name> <name pos:line="124" pos:column="6">CALLBACK</name></type> <name><name pos:line="124" pos:column="15">StaticDialog</name><op:operator pos:line="124" pos:column="27">::</op:operator><name pos:line="124" pos:column="29">dlgProc</name></name><parameter_list pos:line="124" pos:column="36">(<param><decl><type><name pos:line="124" pos:column="37">HWND</name></type> <name pos:line="124" pos:column="42">hwnd</name></decl></param>, <param><decl><type><name pos:line="124" pos:column="48">UINT</name></type> <name pos:line="124" pos:column="53">message</name></decl></param>, <param><decl><type><name pos:line="124" pos:column="62">WPARAM</name></type> <name pos:line="124" pos:column="69">wParam</name></decl></param>, <param><decl><type><name pos:line="124" pos:column="77">LPARAM</name></type> <name pos:line="124" pos:column="84">lParam</name></decl></param>)</parameter_list> 
<block pos:line="125" pos:column="1">{
	<switch pos:line="126" pos:column="9">switch <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="127" pos:column="9">{
		<case pos:line="128" pos:column="17">case <expr><name pos:line="128" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="129" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="130" pos:column="25">StaticDialog</name> <type:modifier pos:line="130" pos:column="38">*</type:modifier></type><name pos:line="130" pos:column="39">pStaticDlg</name> <init pos:line="130" pos:column="50">= <expr><op:operator pos:line="130" pos:column="52">(</op:operator><name pos:line="130" pos:column="53">StaticDialog</name> <op:operator pos:line="130" pos:column="66">*</op:operator><op:operator pos:line="130" pos:column="67">)</op:operator><op:operator pos:line="130" pos:column="68">(</op:operator><name pos:line="130" pos:column="69">lParam</name><op:operator pos:line="130" pos:column="75">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="131" pos:column="25">pStaticDlg</name><op:operator pos:line="131" pos:column="35">-&gt;</op:operator><name pos:line="131" pos:column="37">_hSelf</name></name> <op:operator pos:line="131" pos:column="44">=</op:operator> <name pos:line="131" pos:column="46">hwnd</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="132" pos:column="25">::</op:operator><name pos:line="132" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="132" pos:column="43">(<argument><expr><name pos:line="132" pos:column="44">hwnd</name></expr></argument>, <argument><expr><name pos:line="132" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="132" pos:column="65">(</op:operator><name pos:line="132" pos:column="66">LONG_PTR</name><op:operator pos:line="132" pos:column="74">)</op:operator><name pos:line="132" pos:column="75">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="133" pos:column="25">::</op:operator><name pos:line="133" pos:column="27">GetWindowRect</name></name><argument_list pos:line="133" pos:column="40">(<argument><expr><name pos:line="133" pos:column="41">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="133" pos:column="47">&amp;</op:operator><op:operator pos:line="133" pos:column="48">(</op:operator><name><name pos:line="133" pos:column="49">pStaticDlg</name><op:operator pos:line="133" pos:column="59">-&gt;</op:operator><name pos:line="133" pos:column="61">_rc</name></name><op:operator pos:line="133" pos:column="64">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="134" pos:column="13">pStaticDlg</name><op:operator pos:line="134" pos:column="23">-&gt;</op:operator><name pos:line="134" pos:column="25">run_dlgProc</name></name><argument_list pos:line="134" pos:column="36">(<argument><expr><name pos:line="134" pos:column="37">message</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="46">wParam</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<return pos:line="136" pos:column="25">return <expr><name pos:line="136" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><default pos:line="139" pos:column="17">default :
		<block pos:line="140" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="141" pos:column="25">StaticDialog</name> <type:modifier pos:line="141" pos:column="38">*</type:modifier></type><name pos:line="141" pos:column="39">pStaticDlg</name> <init pos:line="141" pos:column="50">= <expr><call><name><name pos:line="141" pos:column="52">reinterpret_cast</name><argument_list pos:line="141" pos:column="68">&lt;<argument><expr><name pos:line="141" pos:column="69">StaticDialog</name> <op:operator pos:line="141" pos:column="82">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="141" pos:column="84">(<argument><expr><call><name><op:operator pos:line="141" pos:column="85">::</op:operator><name pos:line="141" pos:column="87">GetWindowLongPtr</name></name><argument_list pos:line="141" pos:column="103">(<argument><expr><name pos:line="141" pos:column="104">hwnd</name></expr></argument>, <argument><expr><name pos:line="141" pos:column="110">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><op:operator pos:line="142" pos:column="29">!</op:operator><name pos:line="142" pos:column="30">pStaticDlg</name></expr>)</condition><then pos:line="142" pos:column="41">
				<return pos:line="143" pos:column="33">return <expr><name pos:line="143" pos:column="40">FALSE</name></expr>;</return></then></if>
			<return pos:line="144" pos:column="25">return <expr><call><name><name pos:line="144" pos:column="32">pStaticDlg</name><op:operator pos:line="144" pos:column="42">-&gt;</op:operator><name pos:line="144" pos:column="44">run_dlgProc</name></name><argument_list pos:line="144" pos:column="55">(<argument><expr><name pos:line="144" pos:column="56">message</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="65">wParam</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="149" pos:column="1">void</name></type> <name><name pos:line="149" pos:column="6">StaticDialog</name><op:operator pos:line="149" pos:column="18">::</op:operator><name pos:line="149" pos:column="20">alignWith</name></name><parameter_list pos:line="149" pos:column="29">(<param><decl><type><name pos:line="149" pos:column="30">HWND</name></type> <name pos:line="149" pos:column="35">handle</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="43">HWND</name></type> <name pos:line="149" pos:column="48">handle2Align</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="62">PosAlign</name></type> <name pos:line="149" pos:column="71">pos</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="76">POINT</name> <type:modifier pos:line="149" pos:column="82">&amp;</type:modifier></type> <name pos:line="149" pos:column="84">point</name></decl></param>)</parameter_list>
<block pos:line="150" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="151" pos:column="5">RECT</name></type> <name pos:line="151" pos:column="10">rc</name></decl><op:operator pos:line="151" pos:column="12">,</op:operator> <decl><type ref="prev"/><name pos:line="151" pos:column="14">rc2</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="152" pos:column="5">::</op:operator><name pos:line="152" pos:column="7">GetWindowRect</name></name><argument_list pos:line="152" pos:column="20">(<argument><expr><name pos:line="152" pos:column="21">handle</name></expr></argument>, <argument><expr><op:operator pos:line="152" pos:column="29">&amp;</op:operator><name pos:line="152" pos:column="30">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name pos:line="154" pos:column="5">point</name><op:operator pos:line="154" pos:column="10">.</op:operator><name pos:line="154" pos:column="11">x</name></name> <op:operator pos:line="154" pos:column="13">=</op:operator> <name><name pos:line="154" pos:column="15">rc</name><op:operator pos:line="154" pos:column="17">.</op:operator><name pos:line="154" pos:column="18">left</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="155" pos:column="5">point</name><op:operator pos:line="155" pos:column="10">.</op:operator><name pos:line="155" pos:column="11">y</name></name> <op:operator pos:line="155" pos:column="13">=</op:operator> <name><name pos:line="155" pos:column="15">rc</name><op:operator pos:line="155" pos:column="17">.</op:operator><name pos:line="155" pos:column="18">top</name></name></expr>;</expr_stmt>

    <switch pos:line="157" pos:column="5">switch <condition pos:line="157" pos:column="12">(<expr><name pos:line="157" pos:column="13">pos</name></expr>)</condition>
    <block pos:line="158" pos:column="5">{
        <case pos:line="159" pos:column="9">case <expr><name pos:line="159" pos:column="14">ALIGNPOS_LEFT</name></expr> :
            <expr_stmt><expr><call><name><op:operator pos:line="160" pos:column="13">::</op:operator><name pos:line="160" pos:column="15">GetWindowRect</name></name><argument_list pos:line="160" pos:column="28">(<argument><expr><name pos:line="160" pos:column="29">handle2Align</name></expr></argument>, <argument><expr><op:operator pos:line="160" pos:column="43">&amp;</op:operator><name pos:line="160" pos:column="44">rc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="161" pos:column="13">point</name><op:operator pos:line="161" pos:column="18">.</op:operator><name pos:line="161" pos:column="19">x</name></name> <op:operator pos:line="161" pos:column="21">-=</op:operator> <name><name pos:line="161" pos:column="24">rc2</name><op:operator pos:line="161" pos:column="27">.</op:operator><name pos:line="161" pos:column="28">right</name></name> <op:operator pos:line="161" pos:column="34">-</op:operator> <name><name pos:line="161" pos:column="36">rc2</name><op:operator pos:line="161" pos:column="39">.</op:operator><name pos:line="161" pos:column="40">left</name></name></expr>;</expr_stmt>
            <break pos:line="162" pos:column="13">break;</break>

        </case><case pos:line="164" pos:column="9">case <expr><name pos:line="164" pos:column="14">ALIGNPOS_RIGHT</name></expr> :
            <expr_stmt><expr><call><name><op:operator pos:line="165" pos:column="13">::</op:operator><name pos:line="165" pos:column="15">GetWindowRect</name></name><argument_list pos:line="165" pos:column="28">(<argument><expr><name pos:line="165" pos:column="29">handle</name></expr></argument>, <argument><expr><op:operator pos:line="165" pos:column="37">&amp;</op:operator><name pos:line="165" pos:column="38">rc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="166" pos:column="13">point</name><op:operator pos:line="166" pos:column="18">.</op:operator><name pos:line="166" pos:column="19">x</name></name> <op:operator pos:line="166" pos:column="21">+=</op:operator> <name><name pos:line="166" pos:column="24">rc2</name><op:operator pos:line="166" pos:column="27">.</op:operator><name pos:line="166" pos:column="28">right</name></name> <op:operator pos:line="166" pos:column="34">-</op:operator> <name><name pos:line="166" pos:column="36">rc2</name><op:operator pos:line="166" pos:column="39">.</op:operator><name pos:line="166" pos:column="40">left</name></name></expr>;</expr_stmt>
            <break pos:line="167" pos:column="13">break;</break>

        </case><case pos:line="169" pos:column="9">case <expr><name pos:line="169" pos:column="14">ALIGNPOS_TOP</name></expr> :
            <expr_stmt><expr><call><name><op:operator pos:line="170" pos:column="13">::</op:operator><name pos:line="170" pos:column="15">GetWindowRect</name></name><argument_list pos:line="170" pos:column="28">(<argument><expr><name pos:line="170" pos:column="29">handle2Align</name></expr></argument>, <argument><expr><op:operator pos:line="170" pos:column="43">&amp;</op:operator><name pos:line="170" pos:column="44">rc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="171" pos:column="13">point</name><op:operator pos:line="171" pos:column="18">.</op:operator><name pos:line="171" pos:column="19">y</name></name> <op:operator pos:line="171" pos:column="21">-=</op:operator> <name><name pos:line="171" pos:column="24">rc2</name><op:operator pos:line="171" pos:column="27">.</op:operator><name pos:line="171" pos:column="28">bottom</name></name> <op:operator pos:line="171" pos:column="35">-</op:operator> <name><name pos:line="171" pos:column="37">rc2</name><op:operator pos:line="171" pos:column="40">.</op:operator><name pos:line="171" pos:column="41">top</name></name></expr>;</expr_stmt>
            <break pos:line="172" pos:column="13">break;</break>

        </case><default pos:line="174" pos:column="9">default : <comment type="line" pos:line="174" pos:column="19">//ALIGNPOS_BOTTOM</comment>
            <expr_stmt><expr><call><name><op:operator pos:line="175" pos:column="13">::</op:operator><name pos:line="175" pos:column="15">GetWindowRect</name></name><argument_list pos:line="175" pos:column="28">(<argument><expr><name pos:line="175" pos:column="29">handle</name></expr></argument>, <argument><expr><op:operator pos:line="175" pos:column="37">&amp;</op:operator><name pos:line="175" pos:column="38">rc2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="176" pos:column="13">point</name><op:operator pos:line="176" pos:column="18">.</op:operator><name pos:line="176" pos:column="19">y</name></name> <op:operator pos:line="176" pos:column="21">+=</op:operator> <name><name pos:line="176" pos:column="24">rc2</name><op:operator pos:line="176" pos:column="27">.</op:operator><name pos:line="176" pos:column="28">bottom</name></name> <op:operator pos:line="176" pos:column="35">-</op:operator> <name><name pos:line="176" pos:column="37">rc2</name><op:operator pos:line="176" pos:column="40">.</op:operator><name pos:line="176" pos:column="41">top</name></name></expr>;</expr_stmt>
            <break pos:line="177" pos:column="13">break;</break>
    </default>}</block></switch>
    
    <expr_stmt><expr><call><name><op:operator pos:line="180" pos:column="5">::</op:operator><name pos:line="180" pos:column="7">ScreenToClient</name></name><argument_list pos:line="180" pos:column="21">(<argument><expr><name pos:line="180" pos:column="22">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="180" pos:column="30">&amp;</op:operator><name pos:line="180" pos:column="31">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
