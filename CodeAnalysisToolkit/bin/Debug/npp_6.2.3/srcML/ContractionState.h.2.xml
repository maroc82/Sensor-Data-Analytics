<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\ContractionState.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file ContractionState.h
 ** Manages visibility of lines for folding and wrapping.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2007 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">CONTRACTIONSTATE_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">CONTRACTIONSTATE_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="15" pos:column="1">/**
 */</comment>
<class pos:line="17" pos:column="1">class <name pos:line="17" pos:column="7">ContractionState</name> <block pos:line="17" pos:column="24">{<private type="default" pos:line="17" pos:column="25">
	<comment type="line" pos:line="18" pos:column="9">// These contain 1 element for every document line.</comment>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">RunStyles</name> <type:modifier pos:line="19" pos:column="19">*</type:modifier></type><name pos:line="19" pos:column="20">visible</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">RunStyles</name> <type:modifier pos:line="20" pos:column="19">*</type:modifier></type><name pos:line="20" pos:column="20">expanded</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">RunStyles</name> <type:modifier pos:line="21" pos:column="19">*</type:modifier></type><name pos:line="21" pos:column="20">heights</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">Partitioning</name> <type:modifier pos:line="22" pos:column="22">*</type:modifier></type><name pos:line="22" pos:column="23">displayLines</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int</name></type> <name pos:line="23" pos:column="13">linesInDocument</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="25" pos:column="9">void</name></type> <name pos:line="25" pos:column="14">EnsureData</name><parameter_list pos:line="25" pos:column="24">()</parameter_list>;</function_decl>

	<function><type><name pos:line="27" pos:column="9">bool</name></type> <name pos:line="27" pos:column="14">OneToOne</name><parameter_list pos:line="27" pos:column="22">()</parameter_list> <specifier pos:line="27" pos:column="25">const</specifier> <block pos:line="27" pos:column="31">{
		<comment type="line" pos:line="28" pos:column="17">// True when each document line is exactly one display line so need for</comment>
		<comment type="line" pos:line="29" pos:column="17">// complex data structures.</comment>
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">visible</name> <op:operator pos:line="30" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="30" pos:column="35">0</lit:literal></expr>;</return>
	}</block></function>

</private><public pos:line="33" pos:column="1">public:
	<constructor_decl><name pos:line="34" pos:column="9">ContractionState</name><parameter_list pos:line="34" pos:column="25">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="35" pos:column="9">virtual</specifier> <name pos:line="35" pos:column="17">~<name pos:line="35" pos:column="18">ContractionState</name></name><parameter_list pos:line="35" pos:column="34">()</parameter_list>;</destructor_decl>

	<function_decl><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">Clear</name><parameter_list pos:line="37" pos:column="19">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="39" pos:column="9">int</name></type> <name pos:line="39" pos:column="13">LinesInDoc</name><parameter_list pos:line="39" pos:column="23">()</parameter_list> <specifier pos:line="39" pos:column="26">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="40" pos:column="9">int</name></type> <name pos:line="40" pos:column="13">LinesDisplayed</name><parameter_list pos:line="40" pos:column="27">()</parameter_list> <specifier pos:line="40" pos:column="30">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="41" pos:column="9">int</name></type> <name pos:line="41" pos:column="13">DisplayFromDoc</name><parameter_list pos:line="41" pos:column="27">(<param><decl><type><name pos:line="41" pos:column="28">int</name></type> <name pos:line="41" pos:column="32">lineDoc</name></decl></param>)</parameter_list> <specifier pos:line="41" pos:column="41">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="42" pos:column="9">int</name></type> <name pos:line="42" pos:column="13">DocFromDisplay</name><parameter_list pos:line="42" pos:column="27">(<param><decl><type><name pos:line="42" pos:column="28">int</name></type> <name pos:line="42" pos:column="32">lineDisplay</name></decl></param>)</parameter_list> <specifier pos:line="42" pos:column="45">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="44" pos:column="9">void</name></type> <name pos:line="44" pos:column="14">InsertLine</name><parameter_list pos:line="44" pos:column="24">(<param><decl><type><name pos:line="44" pos:column="25">int</name></type> <name pos:line="44" pos:column="29">lineDoc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="45" pos:column="9">void</name></type> <name pos:line="45" pos:column="14">InsertLines</name><parameter_list pos:line="45" pos:column="25">(<param><decl><type><name pos:line="45" pos:column="26">int</name></type> <name pos:line="45" pos:column="30">lineDoc</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="39">int</name></type> <name pos:line="45" pos:column="43">lineCount</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="46" pos:column="9">void</name></type> <name pos:line="46" pos:column="14">DeleteLine</name><parameter_list pos:line="46" pos:column="24">(<param><decl><type><name pos:line="46" pos:column="25">int</name></type> <name pos:line="46" pos:column="29">lineDoc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="47" pos:column="9">void</name></type> <name pos:line="47" pos:column="14">DeleteLines</name><parameter_list pos:line="47" pos:column="25">(<param><decl><type><name pos:line="47" pos:column="26">int</name></type> <name pos:line="47" pos:column="30">lineDoc</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="39">int</name></type> <name pos:line="47" pos:column="43">lineCount</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="49" pos:column="9">bool</name></type> <name pos:line="49" pos:column="14">GetVisible</name><parameter_list pos:line="49" pos:column="24">(<param><decl><type><name pos:line="49" pos:column="25">int</name></type> <name pos:line="49" pos:column="29">lineDoc</name></decl></param>)</parameter_list> <specifier pos:line="49" pos:column="38">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="50" pos:column="9">bool</name></type> <name pos:line="50" pos:column="14">SetVisible</name><parameter_list pos:line="50" pos:column="24">(<param><decl><type><name pos:line="50" pos:column="25">int</name></type> <name pos:line="50" pos:column="29">lineDocStart</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="43">int</name></type> <name pos:line="50" pos:column="47">lineDocEnd</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="59">bool</name></type> <name pos:line="50" pos:column="64">visible</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="51" pos:column="9">bool</name></type> <name pos:line="51" pos:column="14">HiddenLines</name><parameter_list pos:line="51" pos:column="25">()</parameter_list> <specifier pos:line="51" pos:column="28">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="53" pos:column="9">bool</name></type> <name pos:line="53" pos:column="14">GetExpanded</name><parameter_list pos:line="53" pos:column="25">(<param><decl><type><name pos:line="53" pos:column="26">int</name></type> <name pos:line="53" pos:column="30">lineDoc</name></decl></param>)</parameter_list> <specifier pos:line="53" pos:column="39">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="54" pos:column="9">bool</name></type> <name pos:line="54" pos:column="14">SetExpanded</name><parameter_list pos:line="54" pos:column="25">(<param><decl><type><name pos:line="54" pos:column="26">int</name></type> <name pos:line="54" pos:column="30">lineDoc</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="39">bool</name></type> <name pos:line="54" pos:column="44">expanded</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="55" pos:column="9">int</name></type> <name pos:line="55" pos:column="13">ContractedNext</name><parameter_list pos:line="55" pos:column="27">(<param><decl><type><name pos:line="55" pos:column="28">int</name></type> <name pos:line="55" pos:column="32">lineDocStart</name></decl></param>)</parameter_list> <specifier pos:line="55" pos:column="46">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="57" pos:column="9">int</name></type> <name pos:line="57" pos:column="13">GetHeight</name><parameter_list pos:line="57" pos:column="22">(<param><decl><type><name pos:line="57" pos:column="23">int</name></type> <name pos:line="57" pos:column="27">lineDoc</name></decl></param>)</parameter_list> <specifier pos:line="57" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="58" pos:column="9">bool</name></type> <name pos:line="58" pos:column="14">SetHeight</name><parameter_list pos:line="58" pos:column="23">(<param><decl><type><name pos:line="58" pos:column="24">int</name></type> <name pos:line="58" pos:column="28">lineDoc</name></decl></param>, <param><decl><type><name pos:line="58" pos:column="37">int</name></type> <name pos:line="58" pos:column="41">height</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="60" pos:column="9">void</name></type> <name pos:line="60" pos:column="14">ShowAll</name><parameter_list pos:line="60" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="61" pos:column="9">void</name></type> <name pos:line="61" pos:column="14">Check</name><parameter_list pos:line="61" pos:column="19">()</parameter_list> <specifier pos:line="61" pos:column="22">const</specifier>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef</cpp:directive> <name pos:line="64" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
