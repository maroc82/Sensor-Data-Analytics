<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\GoToLineDlg.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"GoToLineDlg.h"</lit:literal></cpp:file></cpp:include>


<function><type><name pos:line="33" pos:column="1">BOOL</name> <name pos:line="33" pos:column="6">CALLBACK</name></type> <name><name pos:line="33" pos:column="15">GoToLineDlg</name><op:operator pos:line="33" pos:column="26">::</op:operator><name pos:line="33" pos:column="28">run_dlgProc</name></name><parameter_list pos:line="33" pos:column="39">(<param><decl><type><name pos:line="33" pos:column="40">UINT</name></type> <name pos:line="33" pos:column="45">message</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="54">WPARAM</name></type> <name pos:line="33" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="69">LPARAM</name></type></decl></param>)</parameter_list>
<block pos:line="34" pos:column="1">{
	<switch pos:line="35" pos:column="9">switch <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="36" pos:column="9">{
		<case pos:line="37" pos:column="17">case <expr><name pos:line="37" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="39" pos:column="25">::</op:operator><name pos:line="39" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">IDC_RADIO_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="74">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="87">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">goToCenter</name><argument_list pos:line="40" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><name pos:line="41" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="43" pos:column="17">case <expr><name pos:line="43" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="44" pos:column="17">{
			<switch pos:line="45" pos:column="25">switch <condition pos:line="45" pos:column="32">(<expr><name pos:line="45" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="46" pos:column="25">{
				<case pos:line="47" pos:column="33">case <expr><name pos:line="47" pos:column="38">IDCANCEL</name></expr> : <comment type="line" pos:line="47" pos:column="49">// Close</comment>
					<expr_stmt><expr><call><name pos:line="48" pos:column="41">display</name><argument_list pos:line="48" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="48" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="49" pos:column="21">cleanLineEdit</name><argument_list pos:line="49" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="50" pos:column="41">return <expr><name pos:line="50" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="52" pos:column="33">case <expr><name pos:line="52" pos:column="38">IDOK</name></expr> :
                <block pos:line="53" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="54" pos:column="21">int</name></type> <name pos:line="54" pos:column="25">line</name> <init pos:line="54" pos:column="30">= <expr><call><name pos:line="54" pos:column="32">getLine</name><argument_list pos:line="54" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="55" pos:column="21">if <condition pos:line="55" pos:column="24">(<expr><name pos:line="55" pos:column="25">line</name> <op:operator pos:line="55" pos:column="30">!=</op:operator> <op:operator pos:line="55" pos:column="33">-</op:operator><lit:literal type="number" pos:line="55" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="55" pos:column="36">
                    <block pos:line="56" pos:column="21">{
                        <expr_stmt><expr><call><name pos:line="57" pos:column="25">display</name><argument_list pos:line="57" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="57" pos:column="33">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name pos:line="58" pos:column="25">cleanLineEdit</name><argument_list pos:line="58" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
						<if pos:line="59" pos:column="49">if <condition pos:line="59" pos:column="52">(<expr><name pos:line="59" pos:column="53">_mode</name> <op:operator pos:line="59" pos:column="59">==</op:operator> <name pos:line="59" pos:column="62">go2line</name></expr>)</condition><then pos:line="59" pos:column="70"> <block pos:line="59" pos:column="71">{
							<expr_stmt><expr><call><name pos:line="60" pos:column="57">(<type:modifier pos:line="60" pos:column="58">*</type:modifier><name pos:line="60" pos:column="59">_ppEditView</name>)<op:operator pos:line="60" pos:column="71">-&gt;</op:operator><name pos:line="60" pos:column="73">execute</name></name><argument_list pos:line="60" pos:column="80">(<argument><expr><name pos:line="60" pos:column="81">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="100">line</name><op:operator pos:line="60" pos:column="104">-</op:operator><lit:literal type="number" pos:line="60" pos:column="105">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="61" pos:column="57">(<type:modifier pos:line="61" pos:column="58">*</type:modifier><name pos:line="61" pos:column="59">_ppEditView</name>)<op:operator pos:line="61" pos:column="71">-&gt;</op:operator><name pos:line="61" pos:column="73">execute</name></name><argument_list pos:line="61" pos:column="80">(<argument><expr><name pos:line="61" pos:column="81">SCI_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="95">line</name><op:operator pos:line="61" pos:column="99">-</op:operator><lit:literal type="number" pos:line="61" pos:column="100">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then> <else pos:line="62" pos:column="51">else <block pos:line="62" pos:column="56">{
							<decl_stmt><decl><type><name pos:line="63" pos:column="57">int</name></type> <name pos:line="63" pos:column="61">sci_line</name> <init pos:line="63" pos:column="70">= <expr><call><name pos:line="63" pos:column="72">(<type:modifier pos:line="63" pos:column="73">*</type:modifier><name pos:line="63" pos:column="74">_ppEditView</name>)<op:operator pos:line="63" pos:column="86">-&gt;</op:operator><name pos:line="63" pos:column="88">execute</name></name><argument_list pos:line="63" pos:column="95">(<argument><expr><name pos:line="63" pos:column="96">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="118">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name pos:line="64" pos:column="57">(<type:modifier pos:line="64" pos:column="58">*</type:modifier><name pos:line="64" pos:column="59">_ppEditView</name>)<op:operator pos:line="64" pos:column="71">-&gt;</op:operator><name pos:line="64" pos:column="73">execute</name></name><argument_list pos:line="64" pos:column="80">(<argument><expr><name pos:line="64" pos:column="81">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="100">sci_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="65" pos:column="57">(<type:modifier pos:line="65" pos:column="58">*</type:modifier><name pos:line="65" pos:column="59">_ppEditView</name>)<op:operator pos:line="65" pos:column="71">-&gt;</op:operator><name pos:line="65" pos:column="73">execute</name></name><argument_list pos:line="65" pos:column="80">(<argument><expr><name pos:line="65" pos:column="81">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="94">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
                    }</block></then></if>

					<comment type="line" pos:line="69" pos:column="41">// find hotspots</comment>
					<decl_stmt><decl><type><name pos:line="70" pos:column="41">NMHDR</name></type> <name pos:line="70" pos:column="47">nmhdr</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="71" pos:column="41">nmhdr</name><op:operator pos:line="71" pos:column="46">.</op:operator><name pos:line="71" pos:column="47">code</name></name> <op:operator pos:line="71" pos:column="52">=</op:operator> <name pos:line="71" pos:column="54">SCN_PAINTED</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="72" pos:column="41">nmhdr</name><op:operator pos:line="72" pos:column="46">.</op:operator><name pos:line="72" pos:column="47">hwndFrom</name></name> <op:operator pos:line="72" pos:column="56">=</op:operator> <name pos:line="72" pos:column="58">_hSelf</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="73" pos:column="41">nmhdr</name><op:operator pos:line="73" pos:column="46">.</op:operator><name pos:line="73" pos:column="47">idFrom</name></name> <op:operator pos:line="73" pos:column="54">=</op:operator> <call><name><op:operator pos:line="73" pos:column="56">::</op:operator><name pos:line="73" pos:column="58">GetDlgCtrlID</name></name><argument_list pos:line="73" pos:column="70">(<argument><expr><name><name pos:line="73" pos:column="71">nmhdr</name><op:operator pos:line="73" pos:column="76">.</op:operator><name pos:line="73" pos:column="77">hwndFrom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="74" pos:column="41">::</op:operator><name pos:line="74" pos:column="43">SendMessage</name></name><argument_list pos:line="74" pos:column="54">(<argument><expr><name pos:line="74" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="65">WM_NOTIFY</name></expr></argument>, <argument><expr><op:operator pos:line="74" pos:column="76">(</op:operator><name pos:line="74" pos:column="77">WPARAM</name><op:operator pos:line="74" pos:column="83">)</op:operator><name pos:line="74" pos:column="84">LINKTRIGGERED</name></expr></argument>, <argument><expr><op:operator pos:line="74" pos:column="99">(</op:operator><name pos:line="74" pos:column="100">LPARAM</name><op:operator pos:line="74" pos:column="106">)</op:operator><op:operator pos:line="74" pos:column="107">&amp;</op:operator><name pos:line="74" pos:column="108">nmhdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><call><name pos:line="76" pos:column="21">(<type:modifier pos:line="76" pos:column="22">*</type:modifier><name pos:line="76" pos:column="23">_ppEditView</name>)<op:operator pos:line="76" pos:column="35">-&gt;</op:operator><name pos:line="76" pos:column="37">getFocus</name></name><argument_list pos:line="76" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="77" pos:column="21">return <expr><name pos:line="77" pos:column="28">TRUE</name></expr>;</return>
                }</block>

				</case><case pos:line="80" pos:column="33">case <expr><name pos:line="80" pos:column="38">IDC_RADIO_GOTOLINE</name></expr> :
				</case><case pos:line="81" pos:column="33">case <expr><name pos:line="81" pos:column="38">IDC_RADIO_GOTOOFFSET</name></expr> :
				<block pos:line="82" pos:column="33">{
				
					<decl_stmt><decl><type><name pos:line="84" pos:column="41">bool</name></type> <name pos:line="84" pos:column="46">isLine</name></decl><op:operator pos:line="84" pos:column="52">,</op:operator> <decl><type ref="prev"/><name pos:line="84" pos:column="54">isOffset</name></decl>;</decl_stmt>
					<if pos:line="85" pos:column="41">if <condition pos:line="85" pos:column="44">(<expr><name pos:line="85" pos:column="45">wParam</name> <op:operator pos:line="85" pos:column="52">==</op:operator> <name pos:line="85" pos:column="55">IDC_RADIO_GOTOLINE</name></expr>)</condition><then pos:line="85" pos:column="74">
					<block pos:line="86" pos:column="41">{
						<expr_stmt><expr><name pos:line="87" pos:column="49">isLine</name> <op:operator pos:line="87" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="87" pos:column="58">true</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="88" pos:column="49">isOffset</name> <op:operator pos:line="88" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="88" pos:column="60">false</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="89" pos:column="49">_mode</name> <op:operator pos:line="89" pos:column="55">=</op:operator> <name pos:line="89" pos:column="57">go2line</name></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="91" pos:column="41">else
					<block pos:line="92" pos:column="41">{
						<expr_stmt><expr><name pos:line="93" pos:column="49">isLine</name> <op:operator pos:line="93" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="93" pos:column="58">false</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="94" pos:column="49">isOffset</name> <op:operator pos:line="94" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="94" pos:column="60">true</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="95" pos:column="49">_mode</name> <op:operator pos:line="95" pos:column="55">=</op:operator> <name pos:line="95" pos:column="57">go2offsset</name></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name><op:operator pos:line="97" pos:column="41">::</op:operator><name pos:line="97" pos:column="43">SendDlgItemMessage</name></name><argument_list pos:line="97" pos:column="61">(<argument><expr><name pos:line="97" pos:column="62">_hSelf</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="70">IDC_RADIO_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="90">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="103">isLine</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="111">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="98" pos:column="41">::</op:operator><name pos:line="98" pos:column="43">SendDlgItemMessage</name></name><argument_list pos:line="98" pos:column="61">(<argument><expr><name pos:line="98" pos:column="62">_hSelf</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="70">IDC_RADIO_GOTOOFFSET</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="92">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="105">isOffset</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="98" pos:column="115">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="99" pos:column="41">updateLinesNumbers</name><argument_list pos:line="99" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="100" pos:column="41">return <expr><name pos:line="100" pos:column="48">TRUE</name></expr>;</return>
				}</block>
				</case><default pos:line="102" pos:column="33">default :
				<block pos:line="103" pos:column="33">{
					<switch pos:line="104" pos:column="41">switch <condition pos:line="104" pos:column="48">(<expr><call><name pos:line="104" pos:column="49">HIWORD</name><argument_list pos:line="104" pos:column="55">(<argument><expr><name pos:line="104" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr>)</condition>
					<block pos:line="105" pos:column="41">{
						<case pos:line="106" pos:column="49">case <expr><name pos:line="106" pos:column="54">EN_SETFOCUS</name></expr> :
						</case><case pos:line="107" pos:column="49">case <expr><name pos:line="107" pos:column="54">BN_SETFOCUS</name></expr> :
							<expr_stmt><expr><call><name pos:line="108" pos:column="57">updateLinesNumbers</name><argument_list pos:line="108" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
							<return pos:line="109" pos:column="57">return <expr><name pos:line="109" pos:column="64">TRUE</name></expr>;</return>
						</case><default pos:line="110" pos:column="49">default :
							<return pos:line="111" pos:column="57">return <expr><name pos:line="111" pos:column="64">TRUE</name></expr>;</return>
					</default>}</block></switch>
					<break pos:line="113" pos:column="41">break;</break>
				}</block>
			</default>}</block></switch>
		}</block>

		</case><default pos:line="118" pos:column="17">default :
			<return pos:line="119" pos:column="25">return <expr><name pos:line="119" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="123" pos:column="1">void</name></type> <name><name pos:line="123" pos:column="6">GoToLineDlg</name><op:operator pos:line="123" pos:column="17">::</op:operator><name pos:line="123" pos:column="19">updateLinesNumbers</name></name><parameter_list pos:line="123" pos:column="37">()</parameter_list> <specifier pos:line="123" pos:column="40">const</specifier> 
<block pos:line="124" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="125" pos:column="9">unsigned</name> <name pos:line="125" pos:column="18">int</name></type> <name pos:line="125" pos:column="22">current</name> <init pos:line="125" pos:column="30">= <expr><lit:literal type="number" pos:line="125" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="126" pos:column="9">unsigned</name> <name pos:line="126" pos:column="18">int</name></type> <name pos:line="126" pos:column="22">limit</name> <init pos:line="126" pos:column="28">= <expr><lit:literal type="number" pos:line="126" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
	
	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name pos:line="128" pos:column="13">_mode</name> <op:operator pos:line="128" pos:column="19">==</op:operator> <name pos:line="128" pos:column="22">go2line</name></expr>)</condition><then pos:line="128" pos:column="30">
	<block pos:line="129" pos:column="9">{
		<expr_stmt><expr><name pos:line="130" pos:column="17">current</name> <op:operator pos:line="130" pos:column="25">=</op:operator> <call pos:line="130" pos:column="27">(<name pos:line="130" pos:column="28">unsigned</name> <name pos:line="130" pos:column="37">int</name>)<argument_list pos:line="130" pos:column="41">(<argument><expr><call><name pos:line="130" pos:column="42">(<type:modifier pos:line="130" pos:column="43">*</type:modifier><name pos:line="130" pos:column="44">_ppEditView</name>)<op:operator pos:line="130" pos:column="56">-&gt;</op:operator><name pos:line="130" pos:column="58">getCurrentLineNumber</name></name><argument_list pos:line="130" pos:column="78">()</argument_list></call> <op:operator pos:line="130" pos:column="81">+</op:operator> <lit:literal type="number" pos:line="130" pos:column="83">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="131" pos:column="17">limit</name> <op:operator pos:line="131" pos:column="23">=</op:operator> <call pos:line="131" pos:column="25">(<name pos:line="131" pos:column="26">unsigned</name> <name pos:line="131" pos:column="35">int</name>)<argument_list pos:line="131" pos:column="39">(<argument><expr><call><name pos:line="131" pos:column="40">(<type:modifier pos:line="131" pos:column="41">*</type:modifier><name pos:line="131" pos:column="42">_ppEditView</name>)<op:operator pos:line="131" pos:column="54">-&gt;</op:operator><name pos:line="131" pos:column="56">execute</name></name><argument_list pos:line="131" pos:column="63">(<argument><expr><name pos:line="131" pos:column="64">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="133" pos:column="9">else
	<block pos:line="134" pos:column="9">{
		<expr_stmt><expr><name pos:line="135" pos:column="17">current</name> <op:operator pos:line="135" pos:column="25">=</op:operator> <call pos:line="135" pos:column="27">(<name pos:line="135" pos:column="28">unsigned</name> <name pos:line="135" pos:column="37">int</name>)<argument_list pos:line="135" pos:column="41">(<argument><expr><op:operator pos:line="135" pos:column="42">*</op:operator><name pos:line="135" pos:column="43">_ppEditView</name></expr></argument>)</argument_list></call><op:operator pos:line="135" pos:column="55">-&gt;</op:operator><call><name pos:line="135" pos:column="57">execute</name><argument_list pos:line="135" pos:column="64">(<argument><expr><name pos:line="135" pos:column="65">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="136" pos:column="17">limit</name> <op:operator pos:line="136" pos:column="23">=</op:operator> <call pos:line="136" pos:column="25">(<name pos:line="136" pos:column="26">unsigned</name> <name pos:line="136" pos:column="35">int</name>)<argument_list pos:line="136" pos:column="39">(<argument><expr><call><name pos:line="136" pos:column="40">(<type:modifier pos:line="136" pos:column="41">*</type:modifier><name pos:line="136" pos:column="42">_ppEditView</name>)<op:operator pos:line="136" pos:column="54">-&gt;</op:operator><name pos:line="136" pos:column="56">getCurrentDocLen</name></name><argument_list pos:line="136" pos:column="72">()</argument_list></call> <op:operator pos:line="136" pos:column="75">-</op:operator> <lit:literal type="number" pos:line="136" pos:column="77">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
    <expr_stmt><expr><call><name><op:operator pos:line="138" pos:column="5">::</op:operator><name pos:line="138" pos:column="7">SetDlgItemInt</name></name><argument_list pos:line="138" pos:column="20">(<argument><expr><name pos:line="138" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="29">ID_CURRLINE</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="42">current</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="51">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="139" pos:column="5">::</op:operator><name pos:line="139" pos:column="7">SetDlgItemInt</name></name><argument_list pos:line="139" pos:column="20">(<argument><expr><name pos:line="139" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="139" pos:column="29">ID_LASTLINE</name></expr></argument>, <argument><expr><name pos:line="139" pos:column="42">limit</name></expr></argument>, <argument><expr><name pos:line="139" pos:column="49">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

</unit>
