<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ProjectPanel\TreeView.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"TreeView.h"</lit:literal></cpp:file></cpp:include>

<cpp:define pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="32" pos:column="9">CY_ITEMHEIGHT</name></cpp:macro>     <cpp:value pos:line="32" pos:column="27">18</cpp:value></cpp:define>

<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">TreeView</name><op:operator pos:line="34" pos:column="14">::</op:operator><name pos:line="34" pos:column="16">init</name></name><parameter_list pos:line="34" pos:column="20">(<param><decl><type><name pos:line="34" pos:column="21">HINSTANCE</name></type> <name pos:line="34" pos:column="31">hInst</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="38">HWND</name></type> <name pos:line="34" pos:column="43">parent</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="51">int</name></type> <name pos:line="34" pos:column="55">treeViewID</name></decl></param>)</parameter_list>
<block pos:line="35" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="36" pos:column="9">Window</name><op:operator pos:line="36" pos:column="15">::</op:operator><name pos:line="36" pos:column="17">init</name></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">_hSelf</name> <op:operator pos:line="37" pos:column="16">=</op:operator> <call><name><op:operator pos:line="37" pos:column="18">::</op:operator><name pos:line="37" pos:column="20">GetDlgItem</name></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">parent</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">treeViewID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="39" pos:column="9">_hSelf</name> <op:operator pos:line="39" pos:column="16">=</op:operator> <call><name pos:line="39" pos:column="18">CreateWindowEx</name><argument_list pos:line="39" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="33">0</lit:literal></expr></argument>,
                            <argument><expr><name pos:line="40" pos:column="29">WC_TREEVIEW</name></expr></argument>,
                            <argument><expr><call><name pos:line="41" pos:column="29">TEXT</name><argument_list pos:line="41" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="34">"Tree View"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><name pos:line="42" pos:column="29">WS_CHILD</name> <op:operator pos:line="42" pos:column="38">|</op:operator> <name pos:line="42" pos:column="40">WS_BORDER</name> <op:operator pos:line="42" pos:column="50">|</op:operator> <name pos:line="42" pos:column="52">WS_HSCROLL</name> <op:operator pos:line="42" pos:column="63">|</op:operator> <name pos:line="42" pos:column="65">WS_TABSTOP</name> <op:operator pos:line="42" pos:column="76">|</op:operator> <name pos:line="42" pos:column="78">TVS_LINESATROOT</name> <op:operator pos:line="42" pos:column="94">|</op:operator> <name pos:line="42" pos:column="96">TVS_HASLINES</name> <op:operator pos:line="42" pos:column="109">|</op:operator>
							<name pos:line="43" pos:column="57">TVS_HASBUTTONS</name> <op:operator pos:line="43" pos:column="72">|</op:operator> <name pos:line="43" pos:column="74">TVS_HASBUTTONS</name> <op:operator pos:line="43" pos:column="89">|</op:operator> <name pos:line="43" pos:column="91">TVS_SHOWSELALWAYS</name> <op:operator pos:line="43" pos:column="109">|</op:operator> <name pos:line="43" pos:column="111">TVS_EDITLABELS</name> <op:operator pos:line="43" pos:column="126">|</op:operator> <name pos:line="43" pos:column="128">TVS_INFOTIP</name></expr></argument>, 
                            <argument><expr><lit:literal type="number" pos:line="44" pos:column="29">0</lit:literal></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="44" pos:column="33">0</lit:literal></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="44" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="44" pos:column="40">0</lit:literal></expr></argument>,
                            <argument><expr><name pos:line="45" pos:column="29">_hParent</name></expr></argument>, 
                            <argument><expr><name pos:line="46" pos:column="29">NULL</name></expr></argument>, 
                            <argument><expr><name pos:line="47" pos:column="29">_hInst</name></expr></argument>, 
                            <argument><expr><op:operator pos:line="48" pos:column="29">(</op:operator><name pos:line="48" pos:column="30">LPVOID</name><op:operator pos:line="48" pos:column="36">)</op:operator><lit:literal type="number" pos:line="48" pos:column="37">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">TreeView_SetItemHeight</name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">CY_ITEMHEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="52" pos:column="9">::</op:operator><name pos:line="52" pos:column="11">SetWindowLongPtr</name></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="52" pos:column="51">(</op:operator><name pos:line="52" pos:column="52">LONG_PTR</name><op:operator pos:line="52" pos:column="60">)</op:operator><name pos:line="52" pos:column="61">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">_defaultProc</name> <op:operator pos:line="53" pos:column="22">=</op:operator> <call><name><name pos:line="53" pos:column="24">reinterpret_cast</name><argument_list pos:line="53" pos:column="40">&lt;<argument><expr><name pos:line="53" pos:column="41">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="53" pos:column="49">(<argument><expr><call><name><op:operator pos:line="53" pos:column="50">::</op:operator><name pos:line="53" pos:column="52">SetWindowLongPtr</name></name><argument_list pos:line="53" pos:column="68">(<argument><expr><name pos:line="53" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="77">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="53" pos:column="91">(</op:operator><name pos:line="53" pos:column="92">LONG_PTR</name><op:operator pos:line="53" pos:column="100">)</op:operator><name pos:line="53" pos:column="101">staticProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="57" pos:column="1">void</name></type> <name><name pos:line="57" pos:column="6">TreeView</name><op:operator pos:line="57" pos:column="14">::</op:operator><name pos:line="57" pos:column="16">destroy</name></name><parameter_list pos:line="57" pos:column="23">()</parameter_list>
<block pos:line="58" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">HTREEITEM</name></type> <name pos:line="59" pos:column="19">root</name> <init pos:line="59" pos:column="24">= <expr><call><name pos:line="59" pos:column="26">TreeView_GetRoot</name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">cleanSubEntries</name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="61" pos:column="9">::</op:operator><name pos:line="61" pos:column="11">DestroyWindow</name></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">_hSelf</name> <op:operator pos:line="62" pos:column="16">=</op:operator> <name pos:line="62" pos:column="18">NULL</name></expr>;</expr_stmt>
}</block></function> 

<function><type><name pos:line="65" pos:column="1">LRESULT</name></type> <name><name pos:line="65" pos:column="9">TreeView</name><op:operator pos:line="65" pos:column="17">::</op:operator><name pos:line="65" pos:column="19">runProc</name></name><parameter_list pos:line="65" pos:column="26">(<param><decl><type><name pos:line="65" pos:column="27">HWND</name></type> <name pos:line="65" pos:column="32">hwnd</name></decl></param>, <param><decl><type><name pos:line="65" pos:column="38">UINT</name></type> <name pos:line="65" pos:column="43">Message</name></decl></param>, <param><decl><type><name pos:line="65" pos:column="52">WPARAM</name></type> <name pos:line="65" pos:column="59">wParam</name></decl></param>, <param><decl><type><name pos:line="65" pos:column="67">LPARAM</name></type> <name pos:line="65" pos:column="74">lParam</name></decl></param>)</parameter_list>
<block pos:line="66" pos:column="1">{
	<return pos:line="67" pos:column="9">return <expr><call><name><op:operator pos:line="67" pos:column="16">::</op:operator><name pos:line="67" pos:column="18">CallWindowProc</name></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">_defaultProc</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">hwnd</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="53">Message</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="62">wParam</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="70" pos:column="1">HTREEITEM</name></type> <name><name pos:line="70" pos:column="11">TreeView</name><op:operator pos:line="70" pos:column="19">::</op:operator><name pos:line="70" pos:column="21">addItem</name></name><parameter_list pos:line="70" pos:column="28">(<param><decl><type><specifier pos:line="70" pos:column="29">const</specifier> <name pos:line="70" pos:column="35">TCHAR</name> <type:modifier pos:line="70" pos:column="41">*</type:modifier></type><name pos:line="70" pos:column="42">itemName</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="52">HTREEITEM</name></type> <name pos:line="70" pos:column="62">hParentItem</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="75">int</name></type> <name pos:line="70" pos:column="79">iImage</name></decl></param>, <param><decl><type><specifier pos:line="70" pos:column="87">const</specifier> <name pos:line="70" pos:column="93">TCHAR</name> <type:modifier pos:line="70" pos:column="99">*</type:modifier></type><name pos:line="70" pos:column="100">filePath</name></decl></param>)</parameter_list>
<block pos:line="71" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="72" pos:column="9">TVITEM</name></type> <name pos:line="72" pos:column="16">tvi</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">tvi</name><op:operator pos:line="73" pos:column="12">.</op:operator><name pos:line="73" pos:column="13">mask</name></name> <op:operator pos:line="73" pos:column="18">=</op:operator> <name pos:line="73" pos:column="20">TVIF_TEXT</name> <op:operator pos:line="73" pos:column="30">|</op:operator> <name pos:line="73" pos:column="32">TVIF_IMAGE</name> <op:operator pos:line="73" pos:column="43">|</op:operator> <name pos:line="73" pos:column="45">TVIF_SELECTEDIMAGE</name> <op:operator pos:line="73" pos:column="64">|</op:operator> <name pos:line="73" pos:column="66">TVIF_PARAM</name></expr>;</expr_stmt> 

	<comment type="line" pos:line="75" pos:column="9">// Set the item label.</comment>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">tvi</name><op:operator pos:line="76" pos:column="12">.</op:operator><name pos:line="76" pos:column="13">pszText</name></name> <op:operator pos:line="76" pos:column="21">=</op:operator> <op:operator pos:line="76" pos:column="23">(</op:operator><name pos:line="76" pos:column="24">LPTSTR</name><op:operator pos:line="76" pos:column="30">)</op:operator><name pos:line="76" pos:column="31">itemName</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">tvi</name><op:operator pos:line="77" pos:column="12">.</op:operator><name pos:line="77" pos:column="13">cchTextMax</name></name> <op:operator pos:line="77" pos:column="24">=</op:operator> <name pos:line="77" pos:column="26">MAX_PATH</name></expr>;</expr_stmt> 

	<comment type="line" pos:line="79" pos:column="9">// Set icon</comment>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">tvi</name><op:operator pos:line="80" pos:column="12">.</op:operator><name pos:line="80" pos:column="13">iImage</name></name> <op:operator pos:line="80" pos:column="20">=</op:operator> <name pos:line="80" pos:column="22">iImage</name></expr>;</expr_stmt><comment type="line" pos:line="80" pos:column="29">//isNode?INDEX_CLOSED_NODE:INDEX_LEAF; </comment>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">tvi</name><op:operator pos:line="81" pos:column="12">.</op:operator><name pos:line="81" pos:column="13">iSelectedImage</name></name> <op:operator pos:line="81" pos:column="28">=</op:operator> <name pos:line="81" pos:column="30">iImage</name></expr>;</expr_stmt><comment type="line" pos:line="81" pos:column="37">//isNode?INDEX_OPEN_NODE:INDEX_LEAF; </comment>

	<comment type="line" pos:line="83" pos:column="9">// Save the full path of file in the item's application-defined data area. </comment>
	<expr_stmt><expr><name><name pos:line="84" pos:column="9">tvi</name><op:operator pos:line="84" pos:column="12">.</op:operator><name pos:line="84" pos:column="13">lParam</name></name> <op:operator pos:line="84" pos:column="20">=</op:operator> <op:operator pos:line="84" pos:column="22">(</op:operator><name pos:line="84" pos:column="23">filePath</name> <op:operator pos:line="84" pos:column="32">==</op:operator> <name pos:line="84" pos:column="35">NULL</name><op:operator pos:line="84" pos:column="39">?</op:operator><lit:literal type="number" pos:line="84" pos:column="40">0</lit:literal><op:operator pos:line="84" pos:column="41">:</op:operator><call pos:line="84" pos:column="42">(<name pos:line="84" pos:column="43">LPARAM</name>)<argument_list pos:line="84" pos:column="50">(<argument><expr><op:operator pos:line="84" pos:column="51">new</op:operator> <call><name pos:line="84" pos:column="55">generic_string</name><argument_list pos:line="84" pos:column="69">(<argument><expr><name pos:line="84" pos:column="70">filePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="84" pos:column="80">)</op:operator></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="86" pos:column="9">TVINSERTSTRUCT</name></type> <name pos:line="86" pos:column="24">tvInsertStruct</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="87" pos:column="9">tvInsertStruct</name><op:operator pos:line="87" pos:column="23">.</op:operator><name pos:line="87" pos:column="24">item</name></name> <op:operator pos:line="87" pos:column="29">=</op:operator> <name pos:line="87" pos:column="31">tvi</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="88" pos:column="9">tvInsertStruct</name><op:operator pos:line="88" pos:column="23">.</op:operator><name pos:line="88" pos:column="24">hInsertAfter</name></name> <op:operator pos:line="88" pos:column="37">=</op:operator> <op:operator pos:line="88" pos:column="39">(</op:operator><name pos:line="88" pos:column="40">HTREEITEM</name><op:operator pos:line="88" pos:column="49">)</op:operator><name pos:line="88" pos:column="50">TVI_LAST</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="89" pos:column="9">tvInsertStruct</name><op:operator pos:line="89" pos:column="23">.</op:operator><name pos:line="89" pos:column="24">hParent</name></name> <op:operator pos:line="89" pos:column="32">=</op:operator> <name pos:line="89" pos:column="34">hParentItem</name></expr>;</expr_stmt>

	<return pos:line="91" pos:column="9">return <expr><op:operator pos:line="91" pos:column="16">(</op:operator><name pos:line="91" pos:column="17">HTREEITEM</name><op:operator pos:line="91" pos:column="26">)</op:operator><call><name><op:operator pos:line="91" pos:column="27">::</op:operator><name pos:line="91" pos:column="29">SendMessage</name></name><argument_list pos:line="91" pos:column="40">(<argument><expr><name pos:line="91" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="49">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="91" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><call pos:line="91" pos:column="68">(<name pos:line="91" pos:column="69">LPARAM</name>)<argument_list pos:line="91" pos:column="76">(<argument><expr><name pos:line="91" pos:column="77">LPTVINSERTSTRUCT</name></expr></argument>)</argument_list></call><op:operator pos:line="91" pos:column="94">&amp;</op:operator><name pos:line="91" pos:column="95">tvInsertStruct</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="94" pos:column="1">void</name></type> <name><name pos:line="94" pos:column="6">TreeView</name><op:operator pos:line="94" pos:column="14">::</op:operator><name pos:line="94" pos:column="16">removeItem</name></name><parameter_list pos:line="94" pos:column="26">(<param><decl><type><name pos:line="94" pos:column="27">HTREEITEM</name></type> <name pos:line="94" pos:column="37">hTreeItem</name></decl></param>)</parameter_list>
<block pos:line="95" pos:column="1">{
	<comment type="line" pos:line="96" pos:column="9">// Deallocate all the sub-entries recursively</comment>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">cleanSubEntries</name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="99" pos:column="9">// Deallocate current entry</comment>
	<decl_stmt><decl><type><name pos:line="100" pos:column="9">TVITEM</name></type> <name pos:line="100" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="101" pos:column="9">tvItem</name><op:operator pos:line="101" pos:column="15">.</op:operator><name pos:line="101" pos:column="16">hItem</name></name> <op:operator pos:line="101" pos:column="22">=</op:operator> <name pos:line="101" pos:column="24">hTreeItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="102" pos:column="9">tvItem</name><op:operator pos:line="102" pos:column="15">.</op:operator><name pos:line="102" pos:column="16">mask</name></name> <op:operator pos:line="102" pos:column="21">=</op:operator> <name pos:line="102" pos:column="23">TVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">SendMessage</name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="103" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="103" pos:column="44">(</op:operator><name pos:line="103" pos:column="45">LPARAM</name><op:operator pos:line="103" pos:column="51">)</op:operator><op:operator pos:line="103" pos:column="52">&amp;</op:operator><name pos:line="103" pos:column="53">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">tvItem</name><op:operator pos:line="104" pos:column="19">.</op:operator><name pos:line="104" pos:column="20">lParam</name></name></expr>)</condition><then pos:line="104" pos:column="27">
		<expr_stmt><expr><op:operator pos:line="105" pos:column="17">delete</op:operator> <op:operator pos:line="105" pos:column="24">(</op:operator><name pos:line="105" pos:column="25">generic_string</name> <op:operator pos:line="105" pos:column="40">*</op:operator><op:operator pos:line="105" pos:column="41">)</op:operator><op:operator pos:line="105" pos:column="42">(</op:operator><name><name pos:line="105" pos:column="43">tvItem</name><op:operator pos:line="105" pos:column="49">.</op:operator><name pos:line="105" pos:column="50">lParam</name></name><op:operator pos:line="105" pos:column="56">)</op:operator></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="107" pos:column="9">// Remove the node</comment>
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">TreeView_DeleteItem</name><argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="37">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="111" pos:column="1">void</name></type> <name><name pos:line="111" pos:column="6">TreeView</name><op:operator pos:line="111" pos:column="14">::</op:operator><name pos:line="111" pos:column="16">removeAllItems</name></name><parameter_list pos:line="111" pos:column="30">()</parameter_list>
<block pos:line="112" pos:column="1">{
	<for pos:line="113" pos:column="9">for (<init><decl><type><name pos:line="113" pos:column="14">HTREEITEM</name></type> <name pos:line="113" pos:column="24">tvProj</name> <init pos:line="113" pos:column="31">= <expr><call><name pos:line="113" pos:column="33">getRoot</name><argument_list pos:line="113" pos:column="40">()</argument_list></call></expr></init></decl>;</init>
        <condition><expr><name pos:line="114" pos:column="9">tvProj</name> <op:operator pos:line="114" pos:column="16">!=</op:operator> <name pos:line="114" pos:column="19">NULL</name></expr>;</condition>
        <incr><expr><name pos:line="115" pos:column="9">tvProj</name> <op:operator pos:line="115" pos:column="16">=</op:operator> <call><name pos:line="115" pos:column="18">getNextSibling</name><argument_list pos:line="115" pos:column="32">(<argument><expr><name pos:line="115" pos:column="33">tvProj</name></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="116" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">cleanSubEntries</name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">tvProj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">TreeView_DeleteAllItems</name><argument_list pos:line="119" pos:column="32">(<argument><expr><name pos:line="119" pos:column="33">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="123" pos:column="1">void</name></type> <name><name pos:line="123" pos:column="6">TreeView</name><op:operator pos:line="123" pos:column="14">::</op:operator><name pos:line="123" pos:column="16">dupTree</name></name><parameter_list pos:line="123" pos:column="23">(<param><decl><type><name pos:line="123" pos:column="24">HTREEITEM</name></type> <name pos:line="123" pos:column="34">hTree2Dup</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="45">HTREEITEM</name></type> <name pos:line="123" pos:column="55">hParentItem</name></decl></param>)</parameter_list>
<block pos:line="124" pos:column="1">{
	<for pos:line="125" pos:column="9">for (<init><decl><type><name pos:line="125" pos:column="14">HTREEITEM</name></type> <name pos:line="125" pos:column="24">hItem</name> <init pos:line="125" pos:column="30">= <expr><call><name pos:line="125" pos:column="32">getChildFrom</name><argument_list pos:line="125" pos:column="44">(<argument><expr><name pos:line="125" pos:column="45">hTree2Dup</name></expr></argument>)</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="125" pos:column="57">hItem</name> <op:operator pos:line="125" pos:column="63">!=</op:operator> <name pos:line="125" pos:column="66">NULL</name></expr>;</condition> <incr><expr><name pos:line="125" pos:column="72">hItem</name> <op:operator pos:line="125" pos:column="78">=</op:operator> <call><name pos:line="125" pos:column="80">getNextSibling</name><argument_list pos:line="125" pos:column="94">(<argument><expr><name pos:line="125" pos:column="95">hItem</name></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="126" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="127" pos:column="17">TCHAR</name></type> <name><name pos:line="127" pos:column="23">textBuffer</name><index pos:line="127" pos:column="33">[<expr><name pos:line="127" pos:column="34">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="128" pos:column="17">TVITEM</name></type> <name pos:line="128" pos:column="24">tvItem</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="129" pos:column="17">tvItem</name><op:operator pos:line="129" pos:column="23">.</op:operator><name pos:line="129" pos:column="24">hItem</name></name> <op:operator pos:line="129" pos:column="30">=</op:operator> <name pos:line="129" pos:column="32">hItem</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="130" pos:column="17">tvItem</name><op:operator pos:line="130" pos:column="23">.</op:operator><name pos:line="130" pos:column="24">pszText</name></name> <op:operator pos:line="130" pos:column="32">=</op:operator> <name pos:line="130" pos:column="34">textBuffer</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="131" pos:column="17">tvItem</name><op:operator pos:line="131" pos:column="23">.</op:operator><name pos:line="131" pos:column="24">cchTextMax</name></name> <op:operator pos:line="131" pos:column="35">=</op:operator> <name pos:line="131" pos:column="37">MAX_PATH</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="132" pos:column="17">tvItem</name><op:operator pos:line="132" pos:column="23">.</op:operator><name pos:line="132" pos:column="24">mask</name></name> <op:operator pos:line="132" pos:column="29">=</op:operator> <name pos:line="132" pos:column="31">TVIF_TEXT</name> <op:operator pos:line="132" pos:column="41">|</op:operator> <name pos:line="132" pos:column="43">TVIF_PARAM</name> <op:operator pos:line="132" pos:column="54">|</op:operator> <name pos:line="132" pos:column="56">TVIF_IMAGE</name> <op:operator pos:line="132" pos:column="67">|</op:operator> <name pos:line="132" pos:column="69">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">SendMessage</name><argument_list pos:line="133" pos:column="28">(<argument><expr><name pos:line="133" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="37">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="133" pos:column="50">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="133" pos:column="52">(</op:operator><name pos:line="133" pos:column="53">LPARAM</name><op:operator pos:line="133" pos:column="59">)</op:operator><op:operator pos:line="133" pos:column="60">&amp;</op:operator><name pos:line="133" pos:column="61">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name><name pos:line="134" pos:column="21">tvItem</name><op:operator pos:line="134" pos:column="27">.</op:operator><name pos:line="134" pos:column="28">lParam</name></name></expr>)</condition><then pos:line="134" pos:column="35">
		<block pos:line="135" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="136" pos:column="25">tvItem</name><op:operator pos:line="136" pos:column="31">.</op:operator><name pos:line="136" pos:column="32">lParam</name></name> <op:operator pos:line="136" pos:column="39">=</op:operator> <call pos:line="136" pos:column="41">(<name pos:line="136" pos:column="42">LPARAM</name>)<argument_list pos:line="136" pos:column="49">(<argument><expr><op:operator pos:line="136" pos:column="50">new</op:operator> <call><name pos:line="136" pos:column="54">generic_string</name><argument_list pos:line="136" pos:column="68">(<argument><expr><op:operator pos:line="136" pos:column="69">*</op:operator><op:operator pos:line="136" pos:column="70">(</op:operator><op:operator pos:line="136" pos:column="71">(</op:operator><name pos:line="136" pos:column="72">generic_string</name> <op:operator pos:line="136" pos:column="87">*</op:operator><op:operator pos:line="136" pos:column="88">)</op:operator><op:operator pos:line="136" pos:column="89">(</op:operator><name><name pos:line="136" pos:column="90">tvItem</name><op:operator pos:line="136" pos:column="96">.</op:operator><name pos:line="136" pos:column="97">lParam</name></name><op:operator pos:line="136" pos:column="103">)</op:operator><op:operator pos:line="136" pos:column="104">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="139" pos:column="17">TVINSERTSTRUCT</name></type> <name pos:line="139" pos:column="32">tvInsertStruct</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="140" pos:column="17">tvInsertStruct</name><op:operator pos:line="140" pos:column="31">.</op:operator><name pos:line="140" pos:column="32">item</name></name> <op:operator pos:line="140" pos:column="37">=</op:operator> <name pos:line="140" pos:column="39">tvItem</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="141" pos:column="17">tvInsertStruct</name><op:operator pos:line="141" pos:column="31">.</op:operator><name pos:line="141" pos:column="32">hInsertAfter</name></name> <op:operator pos:line="141" pos:column="45">=</op:operator> <op:operator pos:line="141" pos:column="47">(</op:operator><name pos:line="141" pos:column="48">HTREEITEM</name><op:operator pos:line="141" pos:column="57">)</op:operator><name pos:line="141" pos:column="58">TVI_LAST</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="142" pos:column="17">tvInsertStruct</name><op:operator pos:line="142" pos:column="31">.</op:operator><name pos:line="142" pos:column="32">hParent</name></name> <op:operator pos:line="142" pos:column="40">=</op:operator> <name pos:line="142" pos:column="42">hParentItem</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="143" pos:column="17">HTREEITEM</name></type> <name pos:line="143" pos:column="27">hTreeParent</name> <init pos:line="143" pos:column="39">= <expr><op:operator pos:line="143" pos:column="41">(</op:operator><name pos:line="143" pos:column="42">HTREEITEM</name><op:operator pos:line="143" pos:column="51">)</op:operator><call><name><op:operator pos:line="143" pos:column="52">::</op:operator><name pos:line="143" pos:column="54">SendMessage</name></name><argument_list pos:line="143" pos:column="65">(<argument><expr><name pos:line="143" pos:column="66">_hSelf</name></expr></argument>, <argument><expr><name pos:line="143" pos:column="74">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="90">0</lit:literal></expr></argument>, <argument><expr><call pos:line="143" pos:column="93">(<name pos:line="143" pos:column="94">LPARAM</name>)<argument_list pos:line="143" pos:column="101">(<argument><expr><name pos:line="143" pos:column="102">LPTVINSERTSTRUCT</name></expr></argument>)</argument_list></call><op:operator pos:line="143" pos:column="119">&amp;</op:operator><name pos:line="143" pos:column="120">tvInsertStruct</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="144" pos:column="17">dupTree</name><argument_list pos:line="144" pos:column="24">(<argument><expr><name pos:line="144" pos:column="25">hItem</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="32">hTreeParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>


<function><type><name pos:line="149" pos:column="1">void</name></type> <name><name pos:line="149" pos:column="6">TreeView</name><op:operator pos:line="149" pos:column="14">::</op:operator><name pos:line="149" pos:column="16">cleanSubEntries</name></name><parameter_list pos:line="149" pos:column="31">(<param><decl><type><name pos:line="149" pos:column="32">HTREEITEM</name></type> <name pos:line="149" pos:column="42">hTreeItem</name></decl></param>)</parameter_list>
<block pos:line="150" pos:column="1">{
	<for pos:line="151" pos:column="9">for (<init><decl><type><name pos:line="151" pos:column="14">HTREEITEM</name></type> <name pos:line="151" pos:column="24">hItem</name> <init pos:line="151" pos:column="30">= <expr><call><name pos:line="151" pos:column="32">getChildFrom</name><argument_list pos:line="151" pos:column="44">(<argument><expr><name pos:line="151" pos:column="45">hTreeItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="151" pos:column="57">hItem</name> <op:operator pos:line="151" pos:column="63">!=</op:operator> <name pos:line="151" pos:column="66">NULL</name></expr>;</condition> <incr><expr><name pos:line="151" pos:column="72">hItem</name> <op:operator pos:line="151" pos:column="78">=</op:operator> <call><name pos:line="151" pos:column="80">getNextSibling</name><argument_list pos:line="151" pos:column="94">(<argument><expr><name pos:line="151" pos:column="95">hItem</name></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="152" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="153" pos:column="17">TVITEM</name></type> <name pos:line="153" pos:column="24">tvItem</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="154" pos:column="17">tvItem</name><op:operator pos:line="154" pos:column="23">.</op:operator><name pos:line="154" pos:column="24">hItem</name></name> <op:operator pos:line="154" pos:column="30">=</op:operator> <name pos:line="154" pos:column="32">hItem</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">tvItem</name><op:operator pos:line="155" pos:column="23">.</op:operator><name pos:line="155" pos:column="24">mask</name></name> <op:operator pos:line="155" pos:column="29">=</op:operator> <name pos:line="155" pos:column="31">TVIF_PARAM</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="156" pos:column="17">SendMessage</name><argument_list pos:line="156" pos:column="28">(<argument><expr><name pos:line="156" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="156" pos:column="37">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="156" pos:column="50">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="156" pos:column="52">(</op:operator><name pos:line="156" pos:column="53">LPARAM</name><op:operator pos:line="156" pos:column="59">)</op:operator><op:operator pos:line="156" pos:column="60">&amp;</op:operator><name pos:line="156" pos:column="61">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><name><name pos:line="157" pos:column="21">tvItem</name><op:operator pos:line="157" pos:column="27">.</op:operator><name pos:line="157" pos:column="28">lParam</name></name></expr>)</condition><then pos:line="157" pos:column="35">
		<block pos:line="158" pos:column="17">{
			<expr_stmt><expr><op:operator pos:line="159" pos:column="25">delete</op:operator> <op:operator pos:line="159" pos:column="32">(</op:operator><name pos:line="159" pos:column="33">generic_string</name> <op:operator pos:line="159" pos:column="48">*</op:operator><op:operator pos:line="159" pos:column="49">)</op:operator><op:operator pos:line="159" pos:column="50">(</op:operator><name><name pos:line="159" pos:column="51">tvItem</name><op:operator pos:line="159" pos:column="57">.</op:operator><name pos:line="159" pos:column="58">lParam</name></name><op:operator pos:line="159" pos:column="64">)</op:operator></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="161" pos:column="17">cleanSubEntries</name><argument_list pos:line="161" pos:column="32">(<argument><expr><name pos:line="161" pos:column="33">hItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="165" pos:column="1">void</name></type> <name><name pos:line="165" pos:column="6">TreeView</name><op:operator pos:line="165" pos:column="14">::</op:operator><name pos:line="165" pos:column="16">setItemImage</name></name><parameter_list pos:line="165" pos:column="28">(<param><decl><type><name pos:line="165" pos:column="29">HTREEITEM</name></type> <name pos:line="165" pos:column="39">hTreeItem</name></decl></param>, <param><decl><type><name pos:line="165" pos:column="50">int</name></type> <name pos:line="165" pos:column="54">iImage</name></decl></param>, <param><decl><type><name pos:line="165" pos:column="62">int</name></type> <name pos:line="165" pos:column="66">iSelectedImage</name></decl></param>)</parameter_list>
<block pos:line="166" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="167" pos:column="9">TVITEM</name></type> <name pos:line="167" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="168" pos:column="9">tvItem</name><op:operator pos:line="168" pos:column="15">.</op:operator><name pos:line="168" pos:column="16">hItem</name></name> <op:operator pos:line="168" pos:column="22">=</op:operator> <name pos:line="168" pos:column="24">hTreeItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="169" pos:column="9">tvItem</name><op:operator pos:line="169" pos:column="15">.</op:operator><name pos:line="169" pos:column="16">mask</name></name> <op:operator pos:line="169" pos:column="21">=</op:operator> <name pos:line="169" pos:column="23">TVIF_IMAGE</name> <op:operator pos:line="169" pos:column="34">|</op:operator> <name pos:line="169" pos:column="36">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="170" pos:column="9">tvItem</name><op:operator pos:line="170" pos:column="15">.</op:operator><name pos:line="170" pos:column="16">iImage</name></name> <op:operator pos:line="170" pos:column="23">=</op:operator> <name pos:line="170" pos:column="25">iImage</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="171" pos:column="9">tvItem</name><op:operator pos:line="171" pos:column="15">.</op:operator><name pos:line="171" pos:column="16">iSelectedImage</name></name> <op:operator pos:line="171" pos:column="31">=</op:operator> <name pos:line="171" pos:column="33">iSelectedImage</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="172" pos:column="9">TreeView_SetItem</name><argument_list pos:line="172" pos:column="25">(<argument><expr><name pos:line="172" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="172" pos:column="34">&amp;</op:operator><name pos:line="172" pos:column="35">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" pos:line="175" pos:column="1">// pass LPARAM of WM_NOTIFY here after casted to NMTREEVIEW*</comment>
<function><type><name pos:line="176" pos:column="1">void</name></type> <name><name pos:line="176" pos:column="6">TreeView</name><op:operator pos:line="176" pos:column="14">::</op:operator><name pos:line="176" pos:column="16">beginDrag</name></name><parameter_list pos:line="176" pos:column="25">(<param><decl><type><name pos:line="176" pos:column="26">NMTREEVIEW</name><type:modifier pos:line="176" pos:column="36">*</type:modifier></type> <name pos:line="176" pos:column="38">tv</name></decl></param>)</parameter_list>
<block pos:line="177" pos:column="1">{
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><op:operator pos:line="178" pos:column="13">!</op:operator><call><name pos:line="178" pos:column="14">canDragOut</name><argument_list pos:line="178" pos:column="24">(<argument><expr><name><name pos:line="178" pos:column="25">tv</name><op:operator pos:line="178" pos:column="27">-&gt;</op:operator><name pos:line="178" pos:column="29">itemNew</name><op:operator pos:line="178" pos:column="36">.</op:operator><name pos:line="178" pos:column="37">hItem</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="178" pos:column="44">
		<return pos:line="179" pos:column="17">return;</return></then></if>

    <comment type="line" pos:line="181" pos:column="5">// create dragging image for you using TVM_CREATEDRAGIMAGE</comment>
    <comment type="line" pos:line="182" pos:column="5">// You have to delete it after drop operation, so remember it.</comment>
    <expr_stmt><expr><name pos:line="183" pos:column="5">_draggedItem</name> <op:operator pos:line="183" pos:column="18">=</op:operator> <name><name pos:line="183" pos:column="20">tv</name><op:operator pos:line="183" pos:column="22">-&gt;</op:operator><name pos:line="183" pos:column="24">itemNew</name><op:operator pos:line="183" pos:column="31">.</op:operator><name pos:line="183" pos:column="32">hItem</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="184" pos:column="5">_draggedImageList</name> <op:operator pos:line="184" pos:column="23">=</op:operator> <op:operator pos:line="184" pos:column="25">(</op:operator><name pos:line="184" pos:column="26">HIMAGELIST</name><op:operator pos:line="184" pos:column="36">)</op:operator><call><name><op:operator pos:line="184" pos:column="37">::</op:operator><name pos:line="184" pos:column="39">SendMessage</name></name><argument_list pos:line="184" pos:column="50">(<argument><expr><name pos:line="184" pos:column="51">_hSelf</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="59">TVM_CREATEDRAGIMAGE</name></expr></argument>, <argument><expr><op:operator pos:line="184" pos:column="80">(</op:operator><name pos:line="184" pos:column="81">WPARAM</name><op:operator pos:line="184" pos:column="87">)</op:operator><lit:literal type="number" pos:line="184" pos:column="88">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="184" pos:column="91">(</op:operator><name pos:line="184" pos:column="92">LPARAM</name><op:operator pos:line="184" pos:column="98">)</op:operator><name pos:line="184" pos:column="99">_draggedItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="186" pos:column="5">// start dragging operation</comment>
    <comment type="line" pos:line="187" pos:column="5">// PARAMS: HIMAGELIST, imageIndex, xHotspot, yHotspot</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="188" pos:column="5">::</op:operator><name pos:line="188" pos:column="7">ImageList_BeginDrag</name></name><argument_list pos:line="188" pos:column="26">(<argument><expr><name pos:line="188" pos:column="27">_draggedImageList</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="189" pos:column="5">::</op:operator><name pos:line="189" pos:column="7">ImageList_DragEnter</name></name><argument_list pos:line="189" pos:column="26">(<argument><expr><name pos:line="189" pos:column="27">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="35">tv</name><op:operator pos:line="189" pos:column="37">-&gt;</op:operator><name pos:line="189" pos:column="39">ptDrag</name><op:operator pos:line="189" pos:column="45">.</op:operator><name pos:line="189" pos:column="46">x</name></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="49">tv</name><op:operator pos:line="189" pos:column="51">-&gt;</op:operator><name pos:line="189" pos:column="53">ptDrag</name><op:operator pos:line="189" pos:column="59">.</op:operator><name pos:line="189" pos:column="60">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="191" pos:column="5">// redirect mouse input to the parent window</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="192" pos:column="5">::</op:operator><name pos:line="192" pos:column="7">SetCapture</name></name><argument_list pos:line="192" pos:column="17">(<argument><expr><call><name><op:operator pos:line="192" pos:column="18">::</op:operator><name pos:line="192" pos:column="20">GetParent</name></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">_hSelf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="193" pos:column="5">::</op:operator><name pos:line="193" pos:column="7">ShowCursor</name></name><argument_list pos:line="193" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="193" pos:column="18">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:line="193" pos:column="35">// hide the cursor</comment>

    <expr_stmt><expr><name pos:line="195" pos:column="5">_isItemDragged</name> <op:operator pos:line="195" pos:column="20">=</op:operator> <lit:literal type="boolean" pos:line="195" pos:column="22">true</lit:literal></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="198" pos:column="1">void</name></type> <name><name pos:line="198" pos:column="6">TreeView</name><op:operator pos:line="198" pos:column="14">::</op:operator><name pos:line="198" pos:column="16">dragItem</name></name><parameter_list pos:line="198" pos:column="24">(<param><decl><type><name pos:line="198" pos:column="25">HWND</name></type> <name pos:line="198" pos:column="30">parentHandle</name></decl></param>, <param><decl><type><name pos:line="198" pos:column="44">int</name></type> <name pos:line="198" pos:column="48">x</name></decl></param>, <param><decl><type><name pos:line="198" pos:column="51">int</name></type> <name pos:line="198" pos:column="55">y</name></decl></param>)</parameter_list>
<block pos:line="199" pos:column="1">{
    <comment type="line" pos:line="200" pos:column="5">// convert the dialog coords to control coords</comment>
    <decl_stmt><decl><type><name pos:line="201" pos:column="5">POINT</name></type> <name pos:line="201" pos:column="11">point</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="202" pos:column="5">point</name><op:operator pos:line="202" pos:column="10">.</op:operator><name pos:line="202" pos:column="11">x</name></name> <op:operator pos:line="202" pos:column="13">=</op:operator> <op:operator pos:line="202" pos:column="15">(</op:operator><name pos:line="202" pos:column="16">SHORT</name><op:operator pos:line="202" pos:column="21">)</op:operator><name pos:line="202" pos:column="22">x</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="203" pos:column="5">point</name><op:operator pos:line="203" pos:column="10">.</op:operator><name pos:line="203" pos:column="11">y</name></name> <op:operator pos:line="203" pos:column="13">=</op:operator> <op:operator pos:line="203" pos:column="15">(</op:operator><name pos:line="203" pos:column="16">SHORT</name><op:operator pos:line="203" pos:column="21">)</op:operator><name pos:line="203" pos:column="22">y</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="204" pos:column="5">::</op:operator><name pos:line="204" pos:column="7">ClientToScreen</name></name><argument_list pos:line="204" pos:column="21">(<argument><expr><name pos:line="204" pos:column="22">parentHandle</name></expr></argument>, <argument><expr><op:operator pos:line="204" pos:column="36">&amp;</op:operator><name pos:line="204" pos:column="37">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="205" pos:column="5">::</op:operator><name pos:line="205" pos:column="7">ScreenToClient</name></name><argument_list pos:line="205" pos:column="21">(<argument><expr><name pos:line="205" pos:column="22">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="205" pos:column="30">&amp;</op:operator><name pos:line="205" pos:column="31">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="207" pos:column="5">// drag the item to the current the cursor position</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="208" pos:column="5">::</op:operator><name pos:line="208" pos:column="7">ImageList_DragMove</name></name><argument_list pos:line="208" pos:column="25">(<argument><expr><name><name pos:line="208" pos:column="26">point</name><op:operator pos:line="208" pos:column="31">.</op:operator><name pos:line="208" pos:column="32">x</name></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="35">point</name><op:operator pos:line="208" pos:column="40">.</op:operator><name pos:line="208" pos:column="41">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="210" pos:column="5">// hide the dragged image, so the background can be refreshed</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="211" pos:column="5">::</op:operator><name pos:line="211" pos:column="7">ImageList_DragShowNolock</name></name><argument_list pos:line="211" pos:column="31">(<argument><expr><lit:literal type="boolean" pos:line="211" pos:column="32">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="213" pos:column="5">// find out if the pointer is on an item</comment>
    <comment type="line" pos:line="214" pos:column="5">// If so, highlight the item as a drop target.</comment>
    <decl_stmt><decl><type><name pos:line="215" pos:column="5">TVHITTESTINFO</name></type> <name pos:line="215" pos:column="19">hitTestInfo</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="216" pos:column="5">hitTestInfo</name><op:operator pos:line="216" pos:column="16">.</op:operator><name pos:line="216" pos:column="17">pt</name><op:operator pos:line="216" pos:column="19">.</op:operator><name pos:line="216" pos:column="20">x</name></name> <op:operator pos:line="216" pos:column="22">=</op:operator> <name><name pos:line="216" pos:column="24">point</name><op:operator pos:line="216" pos:column="29">.</op:operator><name pos:line="216" pos:column="30">x</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="217" pos:column="5">hitTestInfo</name><op:operator pos:line="217" pos:column="16">.</op:operator><name pos:line="217" pos:column="17">pt</name><op:operator pos:line="217" pos:column="19">.</op:operator><name pos:line="217" pos:column="20">y</name></name> <op:operator pos:line="217" pos:column="22">=</op:operator> <name><name pos:line="217" pos:column="24">point</name><op:operator pos:line="217" pos:column="29">.</op:operator><name pos:line="217" pos:column="30">y</name></name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name pos:line="218" pos:column="5">HTREEITEM</name></type> <name pos:line="218" pos:column="15">targetItem</name> <init pos:line="218" pos:column="26">= <expr><op:operator pos:line="218" pos:column="28">(</op:operator><name pos:line="218" pos:column="29">HTREEITEM</name><op:operator pos:line="218" pos:column="38">)</op:operator><call><name><op:operator pos:line="218" pos:column="39">::</op:operator><name pos:line="218" pos:column="41">SendMessage</name></name><argument_list pos:line="218" pos:column="52">(<argument><expr><name pos:line="218" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="61">TVM_HITTEST</name></expr></argument>, <argument><expr><op:operator pos:line="218" pos:column="74">(</op:operator><name pos:line="218" pos:column="75">WPARAM</name><op:operator pos:line="218" pos:column="81">)</op:operator><lit:literal type="number" pos:line="218" pos:column="82">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="218" pos:column="85">(</op:operator><name pos:line="218" pos:column="86">LPARAM</name><op:operator pos:line="218" pos:column="92">)</op:operator><op:operator pos:line="218" pos:column="93">&amp;</op:operator><name pos:line="218" pos:column="94">hitTestInfo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if pos:line="219" pos:column="5">if<condition pos:line="219" pos:column="7">(<expr><name pos:line="219" pos:column="8">targetItem</name></expr>)</condition><then pos:line="219" pos:column="19">
    <block pos:line="220" pos:column="5">{
		<expr_stmt><expr><call><name><op:operator pos:line="221" pos:column="17">::</op:operator><name pos:line="221" pos:column="19">SendMessage</name></name><argument_list pos:line="221" pos:column="30">(<argument><expr><name pos:line="221" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="39">TVM_SELECTITEM</name></expr></argument>, <argument><expr><call pos:line="221" pos:column="55">(<name pos:line="221" pos:column="56">WPARAM</name>)<argument_list pos:line="221" pos:column="63">(<argument><expr><name pos:line="221" pos:column="64">TVGN_DROPHILITE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="221" pos:column="82">(</op:operator><name pos:line="221" pos:column="83">LPARAM</name><op:operator pos:line="221" pos:column="89">)</op:operator><name pos:line="221" pos:column="90">targetItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <comment type="line" pos:line="224" pos:column="5">// show the dragged image</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="225" pos:column="5">::</op:operator><name pos:line="225" pos:column="7">ImageList_DragShowNolock</name></name><argument_list pos:line="225" pos:column="31">(<argument><expr><lit:literal type="boolean" pos:line="225" pos:column="32">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="228" pos:column="1">bool</name></type> <name><name pos:line="228" pos:column="6">TreeView</name><op:operator pos:line="228" pos:column="14">::</op:operator><name pos:line="228" pos:column="16">dropItem</name></name><parameter_list pos:line="228" pos:column="24">()</parameter_list>
<block pos:line="229" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="230" pos:column="9">bool</name></type> <name pos:line="230" pos:column="14">isFilesMoved</name> <init pos:line="230" pos:column="27">= <expr><lit:literal type="boolean" pos:line="230" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:line="231" pos:column="5">// get the target item</comment>
    <decl_stmt><decl><type><name pos:line="232" pos:column="5">HTREEITEM</name></type> <name pos:line="232" pos:column="15">targetItem</name> <init pos:line="232" pos:column="26">= <expr><op:operator pos:line="232" pos:column="28">(</op:operator><name pos:line="232" pos:column="29">HTREEITEM</name><op:operator pos:line="232" pos:column="38">)</op:operator><call><name><op:operator pos:line="232" pos:column="39">::</op:operator><name pos:line="232" pos:column="41">SendMessage</name></name><argument_list pos:line="232" pos:column="52">(<argument><expr><name pos:line="232" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="61">TVM_GETNEXTITEM</name></expr></argument>, <argument><expr><op:operator pos:line="232" pos:column="78">(</op:operator><name pos:line="232" pos:column="79">WPARAM</name><op:operator pos:line="232" pos:column="85">)</op:operator><name pos:line="232" pos:column="86">TVGN_DROPHILITE</name></expr></argument>, <argument><expr><op:operator pos:line="232" pos:column="103">(</op:operator><name pos:line="232" pos:column="104">LPARAM</name><op:operator pos:line="232" pos:column="110">)</op:operator><lit:literal type="number" pos:line="232" pos:column="111">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="234" pos:column="5">// make a copy of the dragged item and insert the clone under</comment>
    <comment type="line" pos:line="235" pos:column="5">// the target item, then, delete the original dragged item</comment>
    <comment type="line" pos:line="236" pos:column="5">// Note that the dragged item may have children. In this case,</comment>
    <comment type="line" pos:line="237" pos:column="5">// you have to move (copy and delete) for every child items, too.</comment>
	<if pos:line="238" pos:column="9">if <condition pos:line="238" pos:column="12">(<expr><call><name pos:line="238" pos:column="13">canBeDropped</name><argument_list pos:line="238" pos:column="25">(<argument><expr><name pos:line="238" pos:column="26">_draggedItem</name></expr></argument>, <argument><expr><name pos:line="238" pos:column="40">targetItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="238" pos:column="52">
	<block pos:line="239" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="240" pos:column="17">moveTreeViewItem</name><argument_list pos:line="240" pos:column="33">(<argument><expr><name pos:line="240" pos:column="34">_draggedItem</name></expr></argument>, <argument><expr><name pos:line="240" pos:column="48">targetItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="241" pos:column="17">isFilesMoved</name> <op:operator pos:line="241" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="241" pos:column="32">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
    <comment type="line" pos:line="243" pos:column="5">// finish drag-and-drop operation</comment>
    <expr_stmt><expr><call><name><op:operator pos:line="244" pos:column="5">::</op:operator><name pos:line="244" pos:column="7">ImageList_EndDrag</name></name><argument_list pos:line="244" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="245" pos:column="5">::</op:operator><name pos:line="245" pos:column="7">ImageList_Destroy</name></name><argument_list pos:line="245" pos:column="24">(<argument><expr><name pos:line="245" pos:column="25">_draggedImageList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="246" pos:column="5">::</op:operator><name pos:line="246" pos:column="7">ReleaseCapture</name></name><argument_list pos:line="246" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="247" pos:column="5">::</op:operator><name pos:line="247" pos:column="7">ShowCursor</name></name><argument_list pos:line="247" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="247" pos:column="18">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    
	<expr_stmt><expr><call><name pos:line="249" pos:column="9">SendMessage</name><argument_list pos:line="249" pos:column="20">(<argument><expr><name pos:line="249" pos:column="21">_hSelf</name></expr></argument>,<argument><expr><name pos:line="249" pos:column="28">TVM_SELECTITEM</name></expr></argument>,<argument><expr><name pos:line="249" pos:column="43">TVGN_CARET</name></expr></argument>,<argument><expr><op:operator pos:line="249" pos:column="54">(</op:operator><name pos:line="249" pos:column="55">LPARAM</name><op:operator pos:line="249" pos:column="61">)</op:operator><name pos:line="249" pos:column="62">targetItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="250" pos:column="5">SendMessage</name><argument_list pos:line="250" pos:column="16">(<argument><expr><name pos:line="250" pos:column="17">_hSelf</name></expr></argument>,<argument><expr><name pos:line="250" pos:column="24">TVM_SELECTITEM</name></expr></argument>,<argument><expr><name pos:line="250" pos:column="39">TVGN_DROPHILITE</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="250" pos:column="55">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="252" pos:column="5">// clear global variables</comment>
    <expr_stmt><expr><name pos:line="253" pos:column="5">_draggedItem</name> <op:operator pos:line="253" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="253" pos:column="20">0</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="254" pos:column="5">_draggedImageList</name> <op:operator pos:line="254" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="254" pos:column="25">0</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="255" pos:column="5">_isItemDragged</name> <op:operator pos:line="255" pos:column="20">=</op:operator> <lit:literal type="boolean" pos:line="255" pos:column="22">false</lit:literal></expr>;</expr_stmt>
	<return pos:line="256" pos:column="9">return <expr><name pos:line="256" pos:column="16">isFilesMoved</name></expr>;</return>
}</block></function>

<function><type><name pos:line="259" pos:column="1">bool</name></type> <name><name pos:line="259" pos:column="6">TreeView</name><op:operator pos:line="259" pos:column="14">::</op:operator><name pos:line="259" pos:column="16">canBeDropped</name></name><parameter_list pos:line="259" pos:column="28">(<param><decl><type><name pos:line="259" pos:column="29">HTREEITEM</name></type> <name pos:line="259" pos:column="39">draggedItem</name></decl></param>, <param><decl><type><name pos:line="259" pos:column="52">HTREEITEM</name></type> <name pos:line="259" pos:column="62">targetItem</name></decl></param>)</parameter_list>
<block pos:line="260" pos:column="1">{
	<if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><name pos:line="261" pos:column="13">targetItem</name> <op:operator pos:line="261" pos:column="24">==</op:operator> <name pos:line="261" pos:column="27">NULL</name></expr>)</condition><then pos:line="261" pos:column="32">
		<return pos:line="262" pos:column="17">return <expr><lit:literal type="boolean" pos:line="262" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="263" pos:column="9">if <condition pos:line="263" pos:column="12">(<expr><name pos:line="263" pos:column="13">draggedItem</name> <op:operator pos:line="263" pos:column="25">==</op:operator> <name pos:line="263" pos:column="28">targetItem</name></expr>)</condition><then pos:line="263" pos:column="39">
		<return pos:line="264" pos:column="17">return <expr><lit:literal type="boolean" pos:line="264" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name pos:line="265" pos:column="13">targetItem</name> <op:operator pos:line="265" pos:column="24">==</op:operator> <call><name pos:line="265" pos:column="27">TreeView_GetRoot</name><argument_list pos:line="265" pos:column="43">(<argument><expr><name pos:line="265" pos:column="44">_hSelf</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="265" pos:column="52">
		<return pos:line="266" pos:column="17">return <expr><lit:literal type="boolean" pos:line="266" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="267" pos:column="9">if <condition pos:line="267" pos:column="12">(<expr><call><name pos:line="267" pos:column="13">isDescendant</name><argument_list pos:line="267" pos:column="25">(<argument><expr><name pos:line="267" pos:column="26">targetItem</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="38">draggedItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="267" pos:column="51">
		<return pos:line="268" pos:column="17">return <expr><lit:literal type="boolean" pos:line="268" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="269" pos:column="9">if <condition pos:line="269" pos:column="12">(<expr><call><name pos:line="269" pos:column="13">isParent</name><argument_list pos:line="269" pos:column="21">(<argument><expr><name pos:line="269" pos:column="22">targetItem</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="34">draggedItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="269" pos:column="47">
		<return pos:line="270" pos:column="17">return <expr><lit:literal type="boolean" pos:line="270" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<comment type="line" pos:line="271" pos:column="9">// candragItem, canBeDropInItems</comment>
	<if pos:line="272" pos:column="9">if <condition pos:line="272" pos:column="12">(<expr><op:operator pos:line="272" pos:column="13">!</op:operator><call><name pos:line="272" pos:column="14">canDropIn</name><argument_list pos:line="272" pos:column="23">(<argument><expr><name pos:line="272" pos:column="24">targetItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="272" pos:column="36">
		<return pos:line="273" pos:column="17">return <expr><lit:literal type="boolean" pos:line="273" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<return pos:line="275" pos:column="9">return <expr><lit:literal type="boolean" pos:line="275" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="278" pos:column="1">bool</name></type> <name><name pos:line="278" pos:column="6">TreeView</name><op:operator pos:line="278" pos:column="14">::</op:operator><name pos:line="278" pos:column="16">isDescendant</name></name><parameter_list pos:line="278" pos:column="28">(<param><decl><type><name pos:line="278" pos:column="29">HTREEITEM</name></type> <name pos:line="278" pos:column="39">targetItem</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="51">HTREEITEM</name></type> <name pos:line="278" pos:column="61">draggedItem</name></decl></param>)</parameter_list>
<block pos:line="279" pos:column="1">{
	<if pos:line="280" pos:column="9">if <condition pos:line="280" pos:column="12">(<expr><name pos:line="280" pos:column="13">targetItem</name> <op:operator pos:line="280" pos:column="24">==</op:operator> <name pos:line="280" pos:column="27">NULL</name></expr>)</condition><then pos:line="280" pos:column="32">
		<return pos:line="281" pos:column="17">return <expr><lit:literal type="boolean" pos:line="281" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<if pos:line="283" pos:column="9">if <condition pos:line="283" pos:column="12">(<expr><call><name pos:line="283" pos:column="13">TreeView_GetRoot</name><argument_list pos:line="283" pos:column="29">(<argument><expr><name pos:line="283" pos:column="30">_hSelf</name></expr></argument>)</argument_list></call> <op:operator pos:line="283" pos:column="38">==</op:operator> <name pos:line="283" pos:column="41">targetItem</name></expr>)</condition><then pos:line="283" pos:column="52">
		<return pos:line="284" pos:column="17">return <expr><lit:literal type="boolean" pos:line="284" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="286" pos:column="9">HTREEITEM</name></type> <name pos:line="286" pos:column="19">parent</name> <init pos:line="286" pos:column="26">= <expr><call><name pos:line="286" pos:column="28">getParent</name><argument_list pos:line="286" pos:column="37">(<argument><expr><name pos:line="286" pos:column="38">targetItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><name pos:line="287" pos:column="13">parent</name> <op:operator pos:line="287" pos:column="20">==</op:operator> <name pos:line="287" pos:column="23">draggedItem</name></expr>)</condition><then pos:line="287" pos:column="35">
		<return pos:line="288" pos:column="17">return <expr><lit:literal type="boolean" pos:line="288" pos:column="24">true</lit:literal></expr>;</return></then></if>
	
	<return pos:line="290" pos:column="9">return <expr><call><name pos:line="290" pos:column="16">isDescendant</name><argument_list pos:line="290" pos:column="28">(<argument><expr><name pos:line="290" pos:column="29">parent</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="37">draggedItem</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="293" pos:column="1">bool</name></type> <name><name pos:line="293" pos:column="6">TreeView</name><op:operator pos:line="293" pos:column="14">::</op:operator><name pos:line="293" pos:column="16">isParent</name></name><parameter_list pos:line="293" pos:column="24">(<param><decl><type><name pos:line="293" pos:column="25">HTREEITEM</name></type> <name pos:line="293" pos:column="35">targetItem</name></decl></param>, <param><decl><type><name pos:line="293" pos:column="47">HTREEITEM</name></type> <name pos:line="293" pos:column="57">draggedItem</name></decl></param>)</parameter_list>
<block pos:line="294" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="295" pos:column="9">HTREEITEM</name></type> <name pos:line="295" pos:column="19">parent</name> <init pos:line="295" pos:column="26">= <expr><call><name pos:line="295" pos:column="28">getParent</name><argument_list pos:line="295" pos:column="37">(<argument><expr><name pos:line="295" pos:column="38">draggedItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><name pos:line="296" pos:column="13">parent</name> <op:operator pos:line="296" pos:column="20">==</op:operator> <name pos:line="296" pos:column="23">targetItem</name></expr>)</condition><then pos:line="296" pos:column="34">
		<return pos:line="297" pos:column="17">return <expr><lit:literal type="boolean" pos:line="297" pos:column="24">true</lit:literal></expr>;</return></then></if>
	<return pos:line="298" pos:column="9">return <expr><lit:literal type="boolean" pos:line="298" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="301" pos:column="1">void</name></type> <name><name pos:line="301" pos:column="6">TreeView</name><op:operator pos:line="301" pos:column="14">::</op:operator><name pos:line="301" pos:column="16">moveTreeViewItem</name></name><parameter_list pos:line="301" pos:column="32">(<param><decl><type><name pos:line="301" pos:column="33">HTREEITEM</name></type> <name pos:line="301" pos:column="43">draggedItem</name></decl></param>, <param><decl><type><name pos:line="301" pos:column="56">HTREEITEM</name></type> <name pos:line="301" pos:column="66">targetItem</name></decl></param>)</parameter_list>
<block pos:line="302" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="303" pos:column="9">TCHAR</name></type> <name><name pos:line="303" pos:column="15">textBuffer</name><index pos:line="303" pos:column="25">[<expr><name pos:line="303" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="304" pos:column="9">TVITEM</name></type> <name pos:line="304" pos:column="16">tvDraggingItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="305" pos:column="9">tvDraggingItem</name><op:operator pos:line="305" pos:column="23">.</op:operator><name pos:line="305" pos:column="24">mask</name></name> <op:operator pos:line="305" pos:column="29">=</op:operator> <name pos:line="305" pos:column="31">TVIF_TEXT</name> <op:operator pos:line="305" pos:column="41">|</op:operator> <name pos:line="305" pos:column="43">TVIF_PARAM</name> <op:operator pos:line="305" pos:column="54">|</op:operator> <name pos:line="305" pos:column="56">TVIF_IMAGE</name> <op:operator pos:line="305" pos:column="67">|</op:operator> <name pos:line="305" pos:column="69">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="306" pos:column="9">tvDraggingItem</name><op:operator pos:line="306" pos:column="23">.</op:operator><name pos:line="306" pos:column="24">pszText</name></name> <op:operator pos:line="306" pos:column="32">=</op:operator> <name pos:line="306" pos:column="34">textBuffer</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="307" pos:column="9">tvDraggingItem</name><op:operator pos:line="307" pos:column="23">.</op:operator><name pos:line="307" pos:column="24">cchTextMax</name></name> <op:operator pos:line="307" pos:column="35">=</op:operator> <name pos:line="307" pos:column="37">MAX_PATH</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="308" pos:column="9">tvDraggingItem</name><op:operator pos:line="308" pos:column="23">.</op:operator><name pos:line="308" pos:column="24">hItem</name></name> <op:operator pos:line="308" pos:column="30">=</op:operator> <name pos:line="308" pos:column="32">draggedItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="309" pos:column="9">SendMessage</name><argument_list pos:line="309" pos:column="20">(<argument><expr><name pos:line="309" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="309" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="309" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="309" pos:column="44">(</op:operator><name pos:line="309" pos:column="45">LPARAM</name><op:operator pos:line="309" pos:column="51">)</op:operator><op:operator pos:line="309" pos:column="52">&amp;</op:operator><name pos:line="309" pos:column="53">tvDraggingItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name><name pos:line="311" pos:column="13">tvDraggingItem</name><op:operator pos:line="311" pos:column="27">.</op:operator><name pos:line="311" pos:column="28">lParam</name></name></expr>)</condition><then pos:line="311" pos:column="35">
		<expr_stmt><expr><name><name pos:line="312" pos:column="17">tvDraggingItem</name><op:operator pos:line="312" pos:column="31">.</op:operator><name pos:line="312" pos:column="32">lParam</name></name> <op:operator pos:line="312" pos:column="39">=</op:operator> <call pos:line="312" pos:column="41">(<name pos:line="312" pos:column="42">LPARAM</name>)<argument_list pos:line="312" pos:column="49">(<argument><expr><op:operator pos:line="312" pos:column="50">new</op:operator> <call><name pos:line="312" pos:column="54">generic_string</name><argument_list pos:line="312" pos:column="68">(<argument><expr><op:operator pos:line="312" pos:column="69">*</op:operator><op:operator pos:line="312" pos:column="70">(</op:operator><op:operator pos:line="312" pos:column="71">(</op:operator><name pos:line="312" pos:column="72">generic_string</name> <op:operator pos:line="312" pos:column="87">*</op:operator><op:operator pos:line="312" pos:column="88">)</op:operator><op:operator pos:line="312" pos:column="89">(</op:operator><name><name pos:line="312" pos:column="90">tvDraggingItem</name><op:operator pos:line="312" pos:column="104">.</op:operator><name pos:line="312" pos:column="105">lParam</name></name><op:operator pos:line="312" pos:column="111">)</op:operator><op:operator pos:line="312" pos:column="112">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

    <decl_stmt><decl><type><name pos:line="314" pos:column="5">TVINSERTSTRUCT</name></type> <name pos:line="314" pos:column="20">tvInsertStruct</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="315" pos:column="9">tvInsertStruct</name><op:operator pos:line="315" pos:column="23">.</op:operator><name pos:line="315" pos:column="24">item</name></name> <op:operator pos:line="315" pos:column="29">=</op:operator> <name pos:line="315" pos:column="31">tvDraggingItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="316" pos:column="9">tvInsertStruct</name><op:operator pos:line="316" pos:column="23">.</op:operator><name pos:line="316" pos:column="24">hInsertAfter</name></name> <op:operator pos:line="316" pos:column="37">=</op:operator> <op:operator pos:line="316" pos:column="39">(</op:operator><name pos:line="316" pos:column="40">HTREEITEM</name><op:operator pos:line="316" pos:column="49">)</op:operator><name pos:line="316" pos:column="50">TVI_LAST</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="317" pos:column="9">tvInsertStruct</name><op:operator pos:line="317" pos:column="23">.</op:operator><name pos:line="317" pos:column="24">hParent</name></name> <op:operator pos:line="317" pos:column="32">=</op:operator> <name pos:line="317" pos:column="34">targetItem</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="319" pos:column="9">HTREEITEM</name></type> <name pos:line="319" pos:column="19">hTreeParent</name> <init pos:line="319" pos:column="31">= <expr><op:operator pos:line="319" pos:column="33">(</op:operator><name pos:line="319" pos:column="34">HTREEITEM</name><op:operator pos:line="319" pos:column="43">)</op:operator><call><name><op:operator pos:line="319" pos:column="44">::</op:operator><name pos:line="319" pos:column="46">SendMessage</name></name><argument_list pos:line="319" pos:column="57">(<argument><expr><name pos:line="319" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="319" pos:column="66">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="319" pos:column="82">0</lit:literal></expr></argument>, <argument><expr><call pos:line="319" pos:column="85">(<name pos:line="319" pos:column="86">LPARAM</name>)<argument_list pos:line="319" pos:column="93">(<argument><expr><name pos:line="319" pos:column="94">LPTVINSERTSTRUCT</name></expr></argument>)</argument_list></call><op:operator pos:line="319" pos:column="111">&amp;</op:operator><name pos:line="319" pos:column="112">tvInsertStruct</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="320" pos:column="9">dupTree</name><argument_list pos:line="320" pos:column="16">(<argument><expr><name pos:line="320" pos:column="17">draggedItem</name></expr></argument>, <argument><expr><name pos:line="320" pos:column="30">hTreeParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="321" pos:column="9">removeItem</name><argument_list pos:line="321" pos:column="19">(<argument><expr><name pos:line="321" pos:column="20">draggedItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="324" pos:column="1">bool</name></type> <name><name pos:line="324" pos:column="6">TreeView</name><op:operator pos:line="324" pos:column="14">::</op:operator><name pos:line="324" pos:column="16">moveDown</name></name><parameter_list pos:line="324" pos:column="24">(<param><decl><type><name pos:line="324" pos:column="25">HTREEITEM</name></type> <name pos:line="324" pos:column="35">itemToMove</name></decl></param>)</parameter_list>
<block pos:line="325" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="326" pos:column="9">HTREEITEM</name></type> <name pos:line="326" pos:column="19">hItemToUp</name> <init pos:line="326" pos:column="29">= <expr><call><name pos:line="326" pos:column="31">getNextSibling</name><argument_list pos:line="326" pos:column="45">(<argument><expr><name pos:line="326" pos:column="46">itemToMove</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="327" pos:column="9">if <condition pos:line="327" pos:column="12">(<expr><op:operator pos:line="327" pos:column="13">!</op:operator><name pos:line="327" pos:column="14">hItemToUp</name></expr>)</condition><then pos:line="327" pos:column="24">
		<return pos:line="328" pos:column="17">return <expr><lit:literal type="boolean" pos:line="328" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<return pos:line="329" pos:column="9">return <expr><call><name pos:line="329" pos:column="16">swapTreeViewItem</name><argument_list pos:line="329" pos:column="32">(<argument><expr><name pos:line="329" pos:column="33">itemToMove</name></expr></argument>, <argument><expr><name pos:line="329" pos:column="45">hItemToUp</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="332" pos:column="1">bool</name></type> <name><name pos:line="332" pos:column="6">TreeView</name><op:operator pos:line="332" pos:column="14">::</op:operator><name pos:line="332" pos:column="16">moveUp</name></name><parameter_list pos:line="332" pos:column="22">(<param><decl><type><name pos:line="332" pos:column="23">HTREEITEM</name></type> <name pos:line="332" pos:column="33">itemToMove</name></decl></param>)</parameter_list>
<block pos:line="333" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="334" pos:column="9">HTREEITEM</name></type> <name pos:line="334" pos:column="19">hItemToDown</name> <init pos:line="334" pos:column="31">= <expr><call><name pos:line="334" pos:column="33">getPrevSibling</name><argument_list pos:line="334" pos:column="47">(<argument><expr><name pos:line="334" pos:column="48">itemToMove</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="335" pos:column="9">if <condition pos:line="335" pos:column="12">(<expr><op:operator pos:line="335" pos:column="13">!</op:operator><name pos:line="335" pos:column="14">hItemToDown</name></expr>)</condition><then pos:line="335" pos:column="26">
		<return pos:line="336" pos:column="17">return <expr><lit:literal type="boolean" pos:line="336" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<return pos:line="337" pos:column="9">return <expr><call><name pos:line="337" pos:column="16">swapTreeViewItem</name><argument_list pos:line="337" pos:column="32">(<argument><expr><name pos:line="337" pos:column="33">hItemToDown</name></expr></argument>, <argument><expr><name pos:line="337" pos:column="46">itemToMove</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="340" pos:column="1">bool</name></type> <name><name pos:line="340" pos:column="6">TreeView</name><op:operator pos:line="340" pos:column="14">::</op:operator><name pos:line="340" pos:column="16">swapTreeViewItem</name></name><parameter_list pos:line="340" pos:column="32">(<param><decl><type><name pos:line="340" pos:column="33">HTREEITEM</name></type> <name pos:line="340" pos:column="43">itemGoDown</name></decl></param>, <param><decl><type><name pos:line="340" pos:column="55">HTREEITEM</name></type> <name pos:line="340" pos:column="65">itemGoUp</name></decl></param>)</parameter_list>
<block pos:line="341" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="342" pos:column="9">HTREEITEM</name></type> <name pos:line="342" pos:column="19">selectedItem</name> <init pos:line="342" pos:column="32">= <expr><call><name pos:line="342" pos:column="34">getSelection</name><argument_list pos:line="342" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="343" pos:column="9">int</name></type> <name pos:line="343" pos:column="13">itemSelected</name> <init pos:line="343" pos:column="26">= <expr><name pos:line="343" pos:column="28">selectedItem</name> <op:operator pos:line="343" pos:column="41">==</op:operator> <name pos:line="343" pos:column="44">itemGoDown</name><op:operator pos:line="343" pos:column="54">?</op:operator><lit:literal type="number" pos:line="343" pos:column="55">1</lit:literal><op:operator pos:line="343" pos:column="56">:</op:operator><op:operator pos:line="343" pos:column="57">(</op:operator><name pos:line="343" pos:column="58">selectedItem</name> <op:operator pos:line="343" pos:column="71">==</op:operator> <name pos:line="343" pos:column="74">itemGoUp</name><op:operator pos:line="343" pos:column="82">?</op:operator><lit:literal type="number" pos:line="343" pos:column="83">2</lit:literal><op:operator pos:line="343" pos:column="84">:</op:operator><lit:literal type="number" pos:line="343" pos:column="85">0</lit:literal><op:operator pos:line="343" pos:column="86">)</op:operator></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="345" pos:column="9">// get previous and next for both items with () function</comment>
	<decl_stmt><decl><type><name pos:line="346" pos:column="9">HTREEITEM</name></type> <name pos:line="346" pos:column="19">itemTop</name> <init pos:line="346" pos:column="27">= <expr><call><name pos:line="346" pos:column="29">getPrevSibling</name><argument_list pos:line="346" pos:column="43">(<argument><expr><name pos:line="346" pos:column="44">itemGoDown</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="347" pos:column="9">itemTop</name> <op:operator pos:line="347" pos:column="17">=</op:operator> <name pos:line="347" pos:column="19">itemTop</name><op:operator pos:line="347" pos:column="26">?</op:operator><name pos:line="347" pos:column="27">itemTop</name><op:operator pos:line="347" pos:column="34">:</op:operator><op:operator pos:line="347" pos:column="35">(</op:operator><name pos:line="347" pos:column="36">HTREEITEM</name><op:operator pos:line="347" pos:column="45">)</op:operator><name pos:line="347" pos:column="46">TVI_FIRST</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="348" pos:column="9">HTREEITEM</name></type> <name pos:line="348" pos:column="19">parentGoDown</name> <init pos:line="348" pos:column="32">= <expr><call><name pos:line="348" pos:column="34">getParent</name><argument_list pos:line="348" pos:column="43">(<argument><expr><name pos:line="348" pos:column="44">itemGoDown</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="349" pos:column="9">HTREEITEM</name></type> <name pos:line="349" pos:column="19">parentGoUp</name> <init pos:line="349" pos:column="30">= <expr><call><name pos:line="349" pos:column="32">getParent</name><argument_list pos:line="349" pos:column="41">(<argument><expr><name pos:line="349" pos:column="42">itemGoUp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="351" pos:column="9">if <condition pos:line="351" pos:column="12">(<expr><name pos:line="351" pos:column="13">parentGoUp</name> <op:operator pos:line="351" pos:column="24">!=</op:operator> <name pos:line="351" pos:column="27">parentGoDown</name></expr>)</condition><then pos:line="351" pos:column="40">
		<return pos:line="352" pos:column="17">return <expr><lit:literal type="boolean" pos:line="352" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<comment type="line" pos:line="354" pos:column="9">// get both item infos</comment>
	<decl_stmt><decl><type><name pos:line="355" pos:column="9">TCHAR</name></type> <name><name pos:line="355" pos:column="15">textBufferUp</name><index pos:line="355" pos:column="27">[<expr><name pos:line="355" pos:column="28">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="356" pos:column="9">TCHAR</name></type> <name><name pos:line="356" pos:column="15">textBufferDown</name><index pos:line="356" pos:column="29">[<expr><name pos:line="356" pos:column="30">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="357" pos:column="9">TVITEM</name></type> <name pos:line="357" pos:column="16">tvUpItem</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="358" pos:column="9">TVITEM</name></type> <name pos:line="358" pos:column="16">tvDownItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="359" pos:column="9">tvUpItem</name><op:operator pos:line="359" pos:column="17">.</op:operator><name pos:line="359" pos:column="18">mask</name></name> <op:operator pos:line="359" pos:column="23">=</op:operator> <name pos:line="359" pos:column="25">TVIF_TEXT</name> <op:operator pos:line="359" pos:column="35">|</op:operator> <name pos:line="359" pos:column="37">TVIF_PARAM</name> <op:operator pos:line="359" pos:column="48">|</op:operator> <name pos:line="359" pos:column="50">TVIF_IMAGE</name> <op:operator pos:line="359" pos:column="61">|</op:operator> <name pos:line="359" pos:column="63">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="360" pos:column="9">tvDownItem</name><op:operator pos:line="360" pos:column="19">.</op:operator><name pos:line="360" pos:column="20">mask</name></name> <op:operator pos:line="360" pos:column="25">=</op:operator> <name pos:line="360" pos:column="27">TVIF_TEXT</name> <op:operator pos:line="360" pos:column="37">|</op:operator> <name pos:line="360" pos:column="39">TVIF_PARAM</name> <op:operator pos:line="360" pos:column="50">|</op:operator> <name pos:line="360" pos:column="52">TVIF_IMAGE</name> <op:operator pos:line="360" pos:column="63">|</op:operator> <name pos:line="360" pos:column="65">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="361" pos:column="9">tvUpItem</name><op:operator pos:line="361" pos:column="17">.</op:operator><name pos:line="361" pos:column="18">pszText</name></name> <op:operator pos:line="361" pos:column="26">=</op:operator> <name pos:line="361" pos:column="28">textBufferUp</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="362" pos:column="9">tvDownItem</name><op:operator pos:line="362" pos:column="19">.</op:operator><name pos:line="362" pos:column="20">pszText</name></name> <op:operator pos:line="362" pos:column="28">=</op:operator> <name pos:line="362" pos:column="30">textBufferDown</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="363" pos:column="9">tvUpItem</name><op:operator pos:line="363" pos:column="17">.</op:operator><name pos:line="363" pos:column="18">cchTextMax</name></name> <op:operator pos:line="363" pos:column="29">=</op:operator> <name pos:line="363" pos:column="31">MAX_PATH</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="364" pos:column="9">tvDownItem</name><op:operator pos:line="364" pos:column="19">.</op:operator><name pos:line="364" pos:column="20">cchTextMax</name></name> <op:operator pos:line="364" pos:column="31">=</op:operator> <name pos:line="364" pos:column="33">MAX_PATH</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="365" pos:column="9">tvUpItem</name><op:operator pos:line="365" pos:column="17">.</op:operator><name pos:line="365" pos:column="18">hItem</name></name> <op:operator pos:line="365" pos:column="24">=</op:operator> <name pos:line="365" pos:column="26">itemGoUp</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="366" pos:column="9">tvDownItem</name><op:operator pos:line="366" pos:column="19">.</op:operator><name pos:line="366" pos:column="20">hItem</name></name> <op:operator pos:line="366" pos:column="26">=</op:operator> <name pos:line="366" pos:column="28">itemGoDown</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="367" pos:column="9">SendMessage</name><argument_list pos:line="367" pos:column="20">(<argument><expr><name pos:line="367" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="367" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="367" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="367" pos:column="44">(</op:operator><name pos:line="367" pos:column="45">LPARAM</name><op:operator pos:line="367" pos:column="51">)</op:operator><op:operator pos:line="367" pos:column="52">&amp;</op:operator><name pos:line="367" pos:column="53">tvUpItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="368" pos:column="9">SendMessage</name><argument_list pos:line="368" pos:column="20">(<argument><expr><name pos:line="368" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="368" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="368" pos:column="44">(</op:operator><name pos:line="368" pos:column="45">LPARAM</name><op:operator pos:line="368" pos:column="51">)</op:operator><op:operator pos:line="368" pos:column="52">&amp;</op:operator><name pos:line="368" pos:column="53">tvDownItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="370" pos:column="9">// make copy recursively for both items</comment>

	<if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><name><name pos:line="372" pos:column="13">tvUpItem</name><op:operator pos:line="372" pos:column="21">.</op:operator><name pos:line="372" pos:column="22">lParam</name></name></expr>)</condition><then pos:line="372" pos:column="29">
		<expr_stmt><expr><name><name pos:line="373" pos:column="17">tvUpItem</name><op:operator pos:line="373" pos:column="25">.</op:operator><name pos:line="373" pos:column="26">lParam</name></name> <op:operator pos:line="373" pos:column="33">=</op:operator> <call pos:line="373" pos:column="35">(<name pos:line="373" pos:column="36">LPARAM</name>)<argument_list pos:line="373" pos:column="43">(<argument><expr><op:operator pos:line="373" pos:column="44">new</op:operator> <call><name pos:line="373" pos:column="48">generic_string</name><argument_list pos:line="373" pos:column="62">(<argument><expr><op:operator pos:line="373" pos:column="63">*</op:operator><op:operator pos:line="373" pos:column="64">(</op:operator><op:operator pos:line="373" pos:column="65">(</op:operator><name pos:line="373" pos:column="66">generic_string</name> <op:operator pos:line="373" pos:column="81">*</op:operator><op:operator pos:line="373" pos:column="82">)</op:operator><op:operator pos:line="373" pos:column="83">(</op:operator><name><name pos:line="373" pos:column="84">tvUpItem</name><op:operator pos:line="373" pos:column="92">.</op:operator><name pos:line="373" pos:column="93">lParam</name></name><op:operator pos:line="373" pos:column="99">)</op:operator><op:operator pos:line="373" pos:column="100">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="374" pos:column="9">if <condition pos:line="374" pos:column="12">(<expr><name><name pos:line="374" pos:column="13">tvDownItem</name><op:operator pos:line="374" pos:column="23">.</op:operator><name pos:line="374" pos:column="24">lParam</name></name></expr>)</condition><then pos:line="374" pos:column="31">
		<expr_stmt><expr><name><name pos:line="375" pos:column="17">tvDownItem</name><op:operator pos:line="375" pos:column="27">.</op:operator><name pos:line="375" pos:column="28">lParam</name></name> <op:operator pos:line="375" pos:column="35">=</op:operator> <call pos:line="375" pos:column="37">(<name pos:line="375" pos:column="38">LPARAM</name>)<argument_list pos:line="375" pos:column="45">(<argument><expr><op:operator pos:line="375" pos:column="46">new</op:operator> <call><name pos:line="375" pos:column="50">generic_string</name><argument_list pos:line="375" pos:column="64">(<argument><expr><op:operator pos:line="375" pos:column="65">*</op:operator><op:operator pos:line="375" pos:column="66">(</op:operator><op:operator pos:line="375" pos:column="67">(</op:operator><name pos:line="375" pos:column="68">generic_string</name> <op:operator pos:line="375" pos:column="83">*</op:operator><op:operator pos:line="375" pos:column="84">)</op:operator><op:operator pos:line="375" pos:column="85">(</op:operator><name><name pos:line="375" pos:column="86">tvDownItem</name><op:operator pos:line="375" pos:column="96">.</op:operator><name pos:line="375" pos:column="97">lParam</name></name><op:operator pos:line="375" pos:column="103">)</op:operator><op:operator pos:line="375" pos:column="104">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="377" pos:column="9">// add 2 new items</comment>
    <decl_stmt><decl><type><name pos:line="378" pos:column="5">TVINSERTSTRUCT</name></type> <name pos:line="378" pos:column="20">tvInsertUp</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="379" pos:column="9">tvInsertUp</name><op:operator pos:line="379" pos:column="19">.</op:operator><name pos:line="379" pos:column="20">item</name></name> <op:operator pos:line="379" pos:column="25">=</op:operator> <name pos:line="379" pos:column="27">tvUpItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="380" pos:column="9">tvInsertUp</name><op:operator pos:line="380" pos:column="19">.</op:operator><name pos:line="380" pos:column="20">hInsertAfter</name></name> <op:operator pos:line="380" pos:column="33">=</op:operator> <name pos:line="380" pos:column="35">itemTop</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="381" pos:column="9">tvInsertUp</name><op:operator pos:line="381" pos:column="19">.</op:operator><name pos:line="381" pos:column="20">hParent</name></name> <op:operator pos:line="381" pos:column="28">=</op:operator> <name pos:line="381" pos:column="30">parentGoUp</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="382" pos:column="9">HTREEITEM</name></type> <name pos:line="382" pos:column="19">hTreeParent1stInserted</name> <init pos:line="382" pos:column="42">= <expr><op:operator pos:line="382" pos:column="44">(</op:operator><name pos:line="382" pos:column="45">HTREEITEM</name><op:operator pos:line="382" pos:column="54">)</op:operator><call><name><op:operator pos:line="382" pos:column="55">::</op:operator><name pos:line="382" pos:column="57">SendMessage</name></name><argument_list pos:line="382" pos:column="68">(<argument><expr><name pos:line="382" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="382" pos:column="77">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="382" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><call pos:line="382" pos:column="96">(<name pos:line="382" pos:column="97">LPARAM</name>)<argument_list pos:line="382" pos:column="104">(<argument><expr><name pos:line="382" pos:column="105">LPTVINSERTSTRUCT</name></expr></argument>)</argument_list></call><op:operator pos:line="382" pos:column="122">&amp;</op:operator><name pos:line="382" pos:column="123">tvInsertUp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="383" pos:column="9">dupTree</name><argument_list pos:line="383" pos:column="16">(<argument><expr><name pos:line="383" pos:column="17">itemGoUp</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="27">hTreeParent1stInserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="385" pos:column="9">TVINSERTSTRUCT</name></type> <name pos:line="385" pos:column="24">tvInsertDown</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="386" pos:column="9">tvInsertDown</name><op:operator pos:line="386" pos:column="21">.</op:operator><name pos:line="386" pos:column="22">item</name></name> <op:operator pos:line="386" pos:column="27">=</op:operator> <name pos:line="386" pos:column="29">tvDownItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="387" pos:column="9">tvInsertDown</name><op:operator pos:line="387" pos:column="21">.</op:operator><name pos:line="387" pos:column="22">hInsertAfter</name></name> <op:operator pos:line="387" pos:column="35">=</op:operator> <name pos:line="387" pos:column="37">hTreeParent1stInserted</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="388" pos:column="9">tvInsertDown</name><op:operator pos:line="388" pos:column="21">.</op:operator><name pos:line="388" pos:column="22">hParent</name></name> <op:operator pos:line="388" pos:column="30">=</op:operator> <name pos:line="388" pos:column="32">parentGoDown</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="389" pos:column="9">HTREEITEM</name></type> <name pos:line="389" pos:column="19">hTreeParent2ndInserted</name> <init pos:line="389" pos:column="42">= <expr><op:operator pos:line="389" pos:column="44">(</op:operator><name pos:line="389" pos:column="45">HTREEITEM</name><op:operator pos:line="389" pos:column="54">)</op:operator><call><name><op:operator pos:line="389" pos:column="55">::</op:operator><name pos:line="389" pos:column="57">SendMessage</name></name><argument_list pos:line="389" pos:column="68">(<argument><expr><name pos:line="389" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="389" pos:column="77">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="389" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><call pos:line="389" pos:column="96">(<name pos:line="389" pos:column="97">LPARAM</name>)<argument_list pos:line="389" pos:column="104">(<argument><expr><name pos:line="389" pos:column="105">LPTVINSERTSTRUCT</name></expr></argument>)</argument_list></call><op:operator pos:line="389" pos:column="122">&amp;</op:operator><name pos:line="389" pos:column="123">tvInsertDown</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="390" pos:column="9">dupTree</name><argument_list pos:line="390" pos:column="16">(<argument><expr><name pos:line="390" pos:column="17">itemGoDown</name></expr></argument>, <argument><expr><name pos:line="390" pos:column="29">hTreeParent2ndInserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="392" pos:column="9">// remove 2 old items</comment>
	<expr_stmt><expr><call><name pos:line="393" pos:column="9">removeItem</name><argument_list pos:line="393" pos:column="19">(<argument><expr><name pos:line="393" pos:column="20">itemGoUp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="394" pos:column="9">removeItem</name><argument_list pos:line="394" pos:column="19">(<argument><expr><name pos:line="394" pos:column="20">itemGoDown</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="396" pos:column="9">// Restore the selection if needed</comment>
	<if pos:line="397" pos:column="9">if <condition pos:line="397" pos:column="12">(<expr><name pos:line="397" pos:column="13">itemSelected</name> <op:operator pos:line="397" pos:column="26">!=</op:operator> <lit:literal type="number" pos:line="397" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="397" pos:column="31">
	<block pos:line="398" pos:column="9">{
		<if pos:line="399" pos:column="17">if <condition pos:line="399" pos:column="20">(<expr><name pos:line="399" pos:column="21">itemSelected</name> <op:operator pos:line="399" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="399" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="399" pos:column="39">
		<block pos:line="400" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="401" pos:column="25">selectItem</name><argument_list pos:line="401" pos:column="35">(<argument><expr><name pos:line="401" pos:column="36">hTreeParent2ndInserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="403" pos:column="17">else <if pos:line="403" pos:column="22">if <condition pos:line="403" pos:column="25">(<expr><name pos:line="403" pos:column="26">itemSelected</name> <op:operator pos:line="403" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="403" pos:column="42">2</lit:literal></expr>)</condition><then pos:line="403" pos:column="44">
		<block pos:line="404" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="405" pos:column="25">selectItem</name><argument_list pos:line="405" pos:column="35">(<argument><expr><name pos:line="405" pos:column="36">hTreeParent1stInserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if>
	}</block></then></if>
	<return pos:line="408" pos:column="9">return <expr><lit:literal type="boolean" pos:line="408" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="412" pos:column="1">bool</name></type> <name><name pos:line="412" pos:column="6">TreeView</name><op:operator pos:line="412" pos:column="14">::</op:operator><name pos:line="412" pos:column="16">canDropIn</name></name><parameter_list pos:line="412" pos:column="25">(<param><decl><type><name pos:line="412" pos:column="26">HTREEITEM</name></type> <name pos:line="412" pos:column="36">targetItem</name></decl></param>)</parameter_list>
<block pos:line="413" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="414" pos:column="9">TVITEM</name></type> <name pos:line="414" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="415" pos:column="9">tvItem</name><op:operator pos:line="415" pos:column="15">.</op:operator><name pos:line="415" pos:column="16">mask</name></name> <op:operator pos:line="415" pos:column="21">=</op:operator> <name pos:line="415" pos:column="23">TVIF_IMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="416" pos:column="9">tvItem</name><op:operator pos:line="416" pos:column="15">.</op:operator><name pos:line="416" pos:column="16">hItem</name></name> <op:operator pos:line="416" pos:column="22">=</op:operator> <name pos:line="416" pos:column="24">targetItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="417" pos:column="9">SendMessage</name><argument_list pos:line="417" pos:column="20">(<argument><expr><name pos:line="417" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="417" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="417" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="417" pos:column="44">(</op:operator><name pos:line="417" pos:column="45">LPARAM</name><op:operator pos:line="417" pos:column="51">)</op:operator><op:operator pos:line="417" pos:column="52">&amp;</op:operator><name pos:line="417" pos:column="53">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="419" pos:column="9">for (<init><decl><type><name pos:line="419" pos:column="14">size_t</name></type> <name pos:line="419" pos:column="21">i</name> <init pos:line="419" pos:column="23">= <expr><lit:literal type="number" pos:line="419" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="419" pos:column="28">i</name> <op:operator pos:line="419" pos:column="30">&lt;</op:operator> <call><name><name pos:line="419" pos:column="32">_canNotDropInList</name><op:operator pos:line="419" pos:column="49">.</op:operator><name pos:line="419" pos:column="50">size</name></name><argument_list pos:line="419" pos:column="54">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="419" pos:column="58">i</name><op:operator pos:line="419" pos:column="59">++</op:operator></expr></incr>)
	<block pos:line="420" pos:column="9">{
		<if pos:line="421" pos:column="17">if <condition pos:line="421" pos:column="20">(<expr><name><name pos:line="421" pos:column="21">tvItem</name><op:operator pos:line="421" pos:column="27">.</op:operator><name pos:line="421" pos:column="28">iImage</name></name> <op:operator pos:line="421" pos:column="35">==</op:operator> <name><name pos:line="421" pos:column="38">_canNotDropInList</name><index pos:line="421" pos:column="55">[<expr><name pos:line="421" pos:column="56">i</name></expr>]</index></name></expr>)</condition><then pos:line="421" pos:column="59">
			<return pos:line="422" pos:column="25">return <expr><lit:literal type="boolean" pos:line="422" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="424" pos:column="9">return <expr><lit:literal type="boolean" pos:line="424" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="428" pos:column="1">bool</name></type> <name><name pos:line="428" pos:column="6">TreeView</name><op:operator pos:line="428" pos:column="14">::</op:operator><name pos:line="428" pos:column="16">canDragOut</name></name><parameter_list pos:line="428" pos:column="26">(<param><decl><type><name pos:line="428" pos:column="27">HTREEITEM</name></type> <name pos:line="428" pos:column="37">targetItem</name></decl></param>)</parameter_list>
<block pos:line="429" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="430" pos:column="9">TVITEM</name></type> <name pos:line="430" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="431" pos:column="9">tvItem</name><op:operator pos:line="431" pos:column="15">.</op:operator><name pos:line="431" pos:column="16">mask</name></name> <op:operator pos:line="431" pos:column="21">=</op:operator> <name pos:line="431" pos:column="23">TVIF_IMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="432" pos:column="9">tvItem</name><op:operator pos:line="432" pos:column="15">.</op:operator><name pos:line="432" pos:column="16">hItem</name></name> <op:operator pos:line="432" pos:column="22">=</op:operator> <name pos:line="432" pos:column="24">targetItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="433" pos:column="9">SendMessage</name><argument_list pos:line="433" pos:column="20">(<argument><expr><name pos:line="433" pos:column="21">_hSelf</name></expr></argument>, <argument><expr><name pos:line="433" pos:column="29">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="433" pos:column="42">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="433" pos:column="44">(</op:operator><name pos:line="433" pos:column="45">LPARAM</name><op:operator pos:line="433" pos:column="51">)</op:operator><op:operator pos:line="433" pos:column="52">&amp;</op:operator><name pos:line="433" pos:column="53">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="435" pos:column="9">for (<init><decl><type><name pos:line="435" pos:column="14">size_t</name></type> <name pos:line="435" pos:column="21">i</name> <init pos:line="435" pos:column="23">= <expr><lit:literal type="number" pos:line="435" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="435" pos:column="28">i</name> <op:operator pos:line="435" pos:column="30">&lt;</op:operator> <call><name><name pos:line="435" pos:column="32">_canNotDragOutList</name><op:operator pos:line="435" pos:column="50">.</op:operator><name pos:line="435" pos:column="51">size</name></name><argument_list pos:line="435" pos:column="55">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="435" pos:column="59">i</name><op:operator pos:line="435" pos:column="60">++</op:operator></expr></incr>)
	<block pos:line="436" pos:column="9">{
		<if pos:line="437" pos:column="17">if <condition pos:line="437" pos:column="20">(<expr><name><name pos:line="437" pos:column="21">tvItem</name><op:operator pos:line="437" pos:column="27">.</op:operator><name pos:line="437" pos:column="28">iImage</name></name> <op:operator pos:line="437" pos:column="35">==</op:operator> <name><name pos:line="437" pos:column="38">_canNotDragOutList</name><index pos:line="437" pos:column="56">[<expr><name pos:line="437" pos:column="57">i</name></expr>]</index></name></expr>)</condition><then pos:line="437" pos:column="60">
			<return pos:line="438" pos:column="25">return <expr><lit:literal type="boolean" pos:line="438" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="440" pos:column="9">return <expr><lit:literal type="boolean" pos:line="440" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>
</unit>
