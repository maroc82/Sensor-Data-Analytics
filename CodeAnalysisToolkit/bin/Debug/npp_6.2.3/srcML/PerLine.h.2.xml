<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\PerLine.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file PerLine.h
 ** Manages data associated with each line of the document
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2009 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">PERLINE_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">PERLINE_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="15" pos:column="1">/**
 * This holds the marker identifier and the marker type to display.
 * MarkerHandleNumbers are members of lists.
 */</comment>
<struct pos:line="19" pos:column="1">struct <name pos:line="19" pos:column="8">MarkerHandleNumber</name> <block pos:line="19" pos:column="27">{<public type="default" pos:line="19" pos:column="28">
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int</name></type> <name pos:line="20" pos:column="13">handle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int</name></type> <name pos:line="21" pos:column="13">number</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">MarkerHandleNumber</name> <type:modifier pos:line="22" pos:column="28">*</type:modifier></type><name pos:line="22" pos:column="29">next</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<comment type="block" format="doxygen" pos:line="25" pos:column="1">/**
 * A marker handle set contains any number of MarkerHandleNumbers.
 */</comment>
<class pos:line="28" pos:column="1">class <name pos:line="28" pos:column="7">MarkerHandleSet</name> <block pos:line="28" pos:column="23">{<private type="default" pos:line="28" pos:column="24">
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">MarkerHandleNumber</name> <type:modifier pos:line="29" pos:column="28">*</type:modifier></type><name pos:line="29" pos:column="29">root</name></decl>;</decl_stmt>

</private><public pos:line="31" pos:column="1">public:
	<constructor_decl><name pos:line="32" pos:column="9">MarkerHandleSet</name><parameter_list pos:line="32" pos:column="24">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="33" pos:column="9">~<name pos:line="33" pos:column="10">MarkerHandleSet</name></name><parameter_list pos:line="33" pos:column="25">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="34" pos:column="9">int</name></type> <name pos:line="34" pos:column="13">Length</name><parameter_list pos:line="34" pos:column="19">()</parameter_list> <specifier pos:line="34" pos:column="22">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="35" pos:column="9">int</name></type> <name pos:line="35" pos:column="13">NumberFromHandle</name><parameter_list pos:line="35" pos:column="29">(<param><decl><type><name pos:line="35" pos:column="30">int</name></type> <name pos:line="35" pos:column="34">handle</name></decl></param>)</parameter_list> <specifier pos:line="35" pos:column="42">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="36" pos:column="9">int</name></type> <name pos:line="36" pos:column="13">MarkValue</name><parameter_list pos:line="36" pos:column="22">()</parameter_list> <specifier pos:line="36" pos:column="25">const</specifier>;</function_decl>	<comment type="line" format="doxygen" pos:line="36" pos:column="33">///&lt; Bit set of marker numbers.</comment>
	<function_decl><type><name pos:line="37" pos:column="9">bool</name></type> <name pos:line="37" pos:column="14">Contains</name><parameter_list pos:line="37" pos:column="22">(<param><decl><type><name pos:line="37" pos:column="23">int</name></type> <name pos:line="37" pos:column="27">handle</name></decl></param>)</parameter_list> <specifier pos:line="37" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="38" pos:column="9">bool</name></type> <name pos:line="38" pos:column="14">InsertHandle</name><parameter_list pos:line="38" pos:column="26">(<param><decl><type><name pos:line="38" pos:column="27">int</name></type> <name pos:line="38" pos:column="31">handle</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="39">int</name></type> <name pos:line="38" pos:column="43">markerNum</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="39" pos:column="9">void</name></type> <name pos:line="39" pos:column="14">RemoveHandle</name><parameter_list pos:line="39" pos:column="26">(<param><decl><type><name pos:line="39" pos:column="27">int</name></type> <name pos:line="39" pos:column="31">handle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="40" pos:column="9">bool</name></type> <name pos:line="40" pos:column="14">RemoveNumber</name><parameter_list pos:line="40" pos:column="26">(<param><decl><type><name pos:line="40" pos:column="27">int</name></type> <name pos:line="40" pos:column="31">markerNum</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="41" pos:column="9">void</name></type> <name pos:line="41" pos:column="14">CombineWith</name><parameter_list pos:line="41" pos:column="25">(<param><decl><type><name pos:line="41" pos:column="26">MarkerHandleSet</name> <type:modifier pos:line="41" pos:column="42">*</type:modifier></type><name pos:line="41" pos:column="43">other</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="44" pos:column="1">class <name pos:line="44" pos:column="7">LineMarkers</name> <super pos:line="44" pos:column="19">: <specifier pos:line="44" pos:column="21">public</specifier> <name pos:line="44" pos:column="28">PerLine</name></super> <block pos:line="44" pos:column="36">{<private type="default" pos:line="44" pos:column="37">
	<decl_stmt><decl><type><name><name pos:line="45" pos:column="9">SplitVector</name><argument_list pos:line="45" pos:column="20">&lt;<argument><expr><name pos:line="45" pos:column="21">MarkerHandleSet</name> <type:modifier pos:line="45" pos:column="37">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="45" pos:column="40">markers</name></decl>;</decl_stmt>
	<comment type="line" format="doxygen" pos:line="46" pos:column="9">/// Handles are allocated sequentially and should never have to be reused as 32 bit ints are very big.</comment>
	<decl_stmt><decl><type><name pos:line="47" pos:column="9">int</name></type> <name pos:line="47" pos:column="13">handleCurrent</name></decl>;</decl_stmt>
</private><public pos:line="48" pos:column="1">public:
	<constructor><name pos:line="49" pos:column="9">LineMarkers</name><parameter_list pos:line="49" pos:column="20">()</parameter_list> <member_list pos:line="49" pos:column="23">: <call><name pos:line="49" pos:column="25">handleCurrent</name><argument_list pos:line="49" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="49" pos:column="39">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="49" pos:column="42">{
	}</block></constructor>
	<destructor_decl><specifier pos:line="51" pos:column="9">virtual</specifier> <name pos:line="51" pos:column="17">~<name pos:line="51" pos:column="18">LineMarkers</name></name><parameter_list pos:line="51" pos:column="29">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="52" pos:column="9">virtual</specifier> <name pos:line="52" pos:column="17">void</name></type> <name pos:line="52" pos:column="22">Init</name><parameter_list pos:line="52" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="53" pos:column="9">virtual</specifier> <name pos:line="53" pos:column="17">void</name></type> <name pos:line="53" pos:column="22">InsertLine</name><parameter_list pos:line="53" pos:column="32">(<param><decl><type><name pos:line="53" pos:column="33">int</name></type> <name pos:line="53" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="54" pos:column="9">virtual</specifier> <name pos:line="54" pos:column="17">void</name></type> <name pos:line="54" pos:column="22">RemoveLine</name><parameter_list pos:line="54" pos:column="32">(<param><decl><type><name pos:line="54" pos:column="33">int</name></type> <name pos:line="54" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="56" pos:column="9">int</name></type> <name pos:line="56" pos:column="13">MarkValue</name><parameter_list pos:line="56" pos:column="22">(<param><decl><type><name pos:line="56" pos:column="23">int</name></type> <name pos:line="56" pos:column="27">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="57" pos:column="9">int</name></type> <name pos:line="57" pos:column="13">AddMark</name><parameter_list pos:line="57" pos:column="20">(<param><decl><type><name pos:line="57" pos:column="21">int</name></type> <name pos:line="57" pos:column="25">line</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="31">int</name></type> <name pos:line="57" pos:column="35">marker</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="43">int</name></type> <name pos:line="57" pos:column="47">lines</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="58" pos:column="9">void</name></type> <name pos:line="58" pos:column="14">MergeMarkers</name><parameter_list pos:line="58" pos:column="26">(<param><decl><type><name pos:line="58" pos:column="27">int</name></type> <name pos:line="58" pos:column="31">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="59" pos:column="9">bool</name></type> <name pos:line="59" pos:column="14">DeleteMark</name><parameter_list pos:line="59" pos:column="24">(<param><decl><type><name pos:line="59" pos:column="25">int</name></type> <name pos:line="59" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="35">int</name></type> <name pos:line="59" pos:column="39">markerNum</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="50">bool</name></type> <name pos:line="59" pos:column="55">all</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="60" pos:column="9">void</name></type> <name pos:line="60" pos:column="14">DeleteMarkFromHandle</name><parameter_list pos:line="60" pos:column="34">(<param><decl><type><name pos:line="60" pos:column="35">int</name></type> <name pos:line="60" pos:column="39">markerHandle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="61" pos:column="9">int</name></type> <name pos:line="61" pos:column="13">LineFromHandle</name><parameter_list pos:line="61" pos:column="27">(<param><decl><type><name pos:line="61" pos:column="28">int</name></type> <name pos:line="61" pos:column="32">markerHandle</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="64" pos:column="1">class <name pos:line="64" pos:column="7">LineLevels</name> <super pos:line="64" pos:column="18">: <specifier pos:line="64" pos:column="20">public</specifier> <name pos:line="64" pos:column="27">PerLine</name></super> <block pos:line="64" pos:column="35">{<private type="default" pos:line="64" pos:column="36">
	<decl_stmt><decl><type><name><name pos:line="65" pos:column="9">SplitVector</name><argument_list pos:line="65" pos:column="20">&lt;<argument><expr><name pos:line="65" pos:column="21">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="26">levels</name></decl>;</decl_stmt>
</private><public pos:line="66" pos:column="1">public:
	<destructor_decl><specifier pos:line="67" pos:column="9">virtual</specifier> <name pos:line="67" pos:column="17">~<name pos:line="67" pos:column="18">LineLevels</name></name><parameter_list pos:line="67" pos:column="28">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="68" pos:column="9">virtual</specifier> <name pos:line="68" pos:column="17">void</name></type> <name pos:line="68" pos:column="22">Init</name><parameter_list pos:line="68" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="69" pos:column="9">virtual</specifier> <name pos:line="69" pos:column="17">void</name></type> <name pos:line="69" pos:column="22">InsertLine</name><parameter_list pos:line="69" pos:column="32">(<param><decl><type><name pos:line="69" pos:column="33">int</name></type> <name pos:line="69" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="70" pos:column="9">virtual</specifier> <name pos:line="70" pos:column="17">void</name></type> <name pos:line="70" pos:column="22">RemoveLine</name><parameter_list pos:line="70" pos:column="32">(<param><decl><type><name pos:line="70" pos:column="33">int</name></type> <name pos:line="70" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="72" pos:column="9">void</name></type> <name pos:line="72" pos:column="14">ExpandLevels</name><parameter_list pos:line="72" pos:column="26">(<param><decl><type><name pos:line="72" pos:column="27">int</name></type> <name pos:line="72" pos:column="31">sizeNew</name><init pos:line="72" pos:column="38">=<expr><op:operator pos:line="72" pos:column="39">-</op:operator><lit:literal type="number" pos:line="72" pos:column="40">1</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="73" pos:column="9">void</name></type> <name pos:line="73" pos:column="14">ClearLevels</name><parameter_list pos:line="73" pos:column="25">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="74" pos:column="9">int</name></type> <name pos:line="74" pos:column="13">SetLevel</name><parameter_list pos:line="74" pos:column="21">(<param><decl><type><name pos:line="74" pos:column="22">int</name></type> <name pos:line="74" pos:column="26">line</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="32">int</name></type> <name pos:line="74" pos:column="36">level</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="43">int</name></type> <name pos:line="74" pos:column="47">lines</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="75" pos:column="9">int</name></type> <name pos:line="75" pos:column="13">GetLevel</name><parameter_list pos:line="75" pos:column="21">(<param><decl><type><name pos:line="75" pos:column="22">int</name></type> <name pos:line="75" pos:column="26">line</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="78" pos:column="1">class <name pos:line="78" pos:column="7">LineState</name> <super pos:line="78" pos:column="17">: <specifier pos:line="78" pos:column="19">public</specifier> <name pos:line="78" pos:column="26">PerLine</name></super> <block pos:line="78" pos:column="34">{<private type="default" pos:line="78" pos:column="35">
	<decl_stmt><decl><type><name><name pos:line="79" pos:column="9">SplitVector</name><argument_list pos:line="79" pos:column="20">&lt;<argument><expr><name pos:line="79" pos:column="21">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="79" pos:column="26">lineStates</name></decl>;</decl_stmt>
</private><public pos:line="80" pos:column="1">public:
	<constructor><name pos:line="81" pos:column="9">LineState</name><parameter_list pos:line="81" pos:column="18">()</parameter_list> <block pos:line="81" pos:column="21">{
	}</block></constructor>
	<destructor_decl><specifier pos:line="83" pos:column="9">virtual</specifier> <name pos:line="83" pos:column="17">~<name pos:line="83" pos:column="18">LineState</name></name><parameter_list pos:line="83" pos:column="27">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="84" pos:column="9">virtual</specifier> <name pos:line="84" pos:column="17">void</name></type> <name pos:line="84" pos:column="22">Init</name><parameter_list pos:line="84" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="85" pos:column="9">virtual</specifier> <name pos:line="85" pos:column="17">void</name></type> <name pos:line="85" pos:column="22">InsertLine</name><parameter_list pos:line="85" pos:column="32">(<param><decl><type><name pos:line="85" pos:column="33">int</name></type> <name pos:line="85" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="86" pos:column="9">virtual</specifier> <name pos:line="86" pos:column="17">void</name></type> <name pos:line="86" pos:column="22">RemoveLine</name><parameter_list pos:line="86" pos:column="32">(<param><decl><type><name pos:line="86" pos:column="33">int</name></type> <name pos:line="86" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="88" pos:column="9">int</name></type> <name pos:line="88" pos:column="13">SetLineState</name><parameter_list pos:line="88" pos:column="25">(<param><decl><type><name pos:line="88" pos:column="26">int</name></type> <name pos:line="88" pos:column="30">line</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="36">int</name></type> <name pos:line="88" pos:column="40">state</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="89" pos:column="9">int</name></type> <name pos:line="89" pos:column="13">GetLineState</name><parameter_list pos:line="89" pos:column="25">(<param><decl><type><name pos:line="89" pos:column="26">int</name></type> <name pos:line="89" pos:column="30">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="90" pos:column="9">int</name></type> <name pos:line="90" pos:column="13">GetMaxLineState</name><parameter_list pos:line="90" pos:column="28">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="93" pos:column="1">class <name pos:line="93" pos:column="7">LineAnnotation</name> <super pos:line="93" pos:column="22">: <specifier pos:line="93" pos:column="24">public</specifier> <name pos:line="93" pos:column="31">PerLine</name></super> <block pos:line="93" pos:column="39">{<private type="default" pos:line="93" pos:column="40">
	<decl_stmt><decl><type><name><name pos:line="94" pos:column="9">SplitVector</name><argument_list pos:line="94" pos:column="20">&lt;<argument><expr><name pos:line="94" pos:column="21">char</name> <type:modifier pos:line="94" pos:column="26">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="94" pos:column="29">annotations</name></decl>;</decl_stmt>
</private><public pos:line="95" pos:column="1">public:
	<constructor><name pos:line="96" pos:column="9">LineAnnotation</name><parameter_list pos:line="96" pos:column="23">()</parameter_list> <block pos:line="96" pos:column="26">{
	}</block></constructor>
	<destructor_decl><specifier pos:line="98" pos:column="9">virtual</specifier> <name pos:line="98" pos:column="17">~<name pos:line="98" pos:column="18">LineAnnotation</name></name><parameter_list pos:line="98" pos:column="32">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="99" pos:column="9">virtual</specifier> <name pos:line="99" pos:column="17">void</name></type> <name pos:line="99" pos:column="22">Init</name><parameter_list pos:line="99" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="100" pos:column="9">virtual</specifier> <name pos:line="100" pos:column="17">void</name></type> <name pos:line="100" pos:column="22">InsertLine</name><parameter_list pos:line="100" pos:column="32">(<param><decl><type><name pos:line="100" pos:column="33">int</name></type> <name pos:line="100" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="101" pos:column="9">virtual</specifier> <name pos:line="101" pos:column="17">void</name></type> <name pos:line="101" pos:column="22">RemoveLine</name><parameter_list pos:line="101" pos:column="32">(<param><decl><type><name pos:line="101" pos:column="33">int</name></type> <name pos:line="101" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="103" pos:column="9">bool</name></type> <name pos:line="103" pos:column="14">AnySet</name><parameter_list pos:line="103" pos:column="20">()</parameter_list> <specifier pos:line="103" pos:column="23">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="104" pos:column="9">bool</name></type> <name pos:line="104" pos:column="14">MultipleStyles</name><parameter_list pos:line="104" pos:column="28">(<param><decl><type><name pos:line="104" pos:column="29">int</name></type> <name pos:line="104" pos:column="33">line</name></decl></param>)</parameter_list> <specifier pos:line="104" pos:column="39">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="105" pos:column="9">int</name></type> <name pos:line="105" pos:column="13">Style</name><parameter_list pos:line="105" pos:column="18">(<param><decl><type><name pos:line="105" pos:column="19">int</name></type> <name pos:line="105" pos:column="23">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="106" pos:column="9">const</specifier> <name pos:line="106" pos:column="15">char</name> <type:modifier pos:line="106" pos:column="20">*</type:modifier></type><name pos:line="106" pos:column="21">Text</name><parameter_list pos:line="106" pos:column="25">(<param><decl><type><name pos:line="106" pos:column="26">int</name></type> <name pos:line="106" pos:column="30">line</name></decl></param>)</parameter_list> <specifier pos:line="106" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><specifier pos:line="107" pos:column="9">const</specifier> <name pos:line="107" pos:column="15">unsigned</name> <name pos:line="107" pos:column="24">char</name> <type:modifier pos:line="107" pos:column="29">*</type:modifier></type><name pos:line="107" pos:column="30">Styles</name><parameter_list pos:line="107" pos:column="36">(<param><decl><type><name pos:line="107" pos:column="37">int</name></type> <name pos:line="107" pos:column="41">line</name></decl></param>)</parameter_list> <specifier pos:line="107" pos:column="47">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="108" pos:column="9">void</name></type> <name pos:line="108" pos:column="14">SetText</name><parameter_list pos:line="108" pos:column="21">(<param><decl><type><name pos:line="108" pos:column="22">int</name></type> <name pos:line="108" pos:column="26">line</name></decl></param>, <param><decl><type><specifier pos:line="108" pos:column="32">const</specifier> <name pos:line="108" pos:column="38">char</name> <type:modifier pos:line="108" pos:column="43">*</type:modifier></type><name pos:line="108" pos:column="44">text</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="109" pos:column="9">void</name></type> <name pos:line="109" pos:column="14">ClearAll</name><parameter_list pos:line="109" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="110" pos:column="9">void</name></type> <name pos:line="110" pos:column="14">SetStyle</name><parameter_list pos:line="110" pos:column="22">(<param><decl><type><name pos:line="110" pos:column="23">int</name></type> <name pos:line="110" pos:column="27">line</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="33">int</name></type> <name pos:line="110" pos:column="37">style</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="111" pos:column="9">void</name></type> <name pos:line="111" pos:column="14">SetStyles</name><parameter_list pos:line="111" pos:column="23">(<param><decl><type><name pos:line="111" pos:column="24">int</name></type> <name pos:line="111" pos:column="28">line</name></decl></param>, <param><decl><type><specifier pos:line="111" pos:column="34">const</specifier> <name pos:line="111" pos:column="40">unsigned</name> <name pos:line="111" pos:column="49">char</name> <type:modifier pos:line="111" pos:column="54">*</type:modifier></type><name pos:line="111" pos:column="55">styles</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="112" pos:column="9">int</name></type> <name pos:line="112" pos:column="13">Length</name><parameter_list pos:line="112" pos:column="19">(<param><decl><type><name pos:line="112" pos:column="20">int</name></type> <name pos:line="112" pos:column="24">line</name></decl></param>)</parameter_list> <specifier pos:line="112" pos:column="30">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="113" pos:column="9">int</name></type> <name pos:line="113" pos:column="13">Lines</name><parameter_list pos:line="113" pos:column="18">(<param><decl><type><name pos:line="113" pos:column="19">int</name></type> <name pos:line="113" pos:column="23">line</name></decl></param>)</parameter_list> <specifier pos:line="113" pos:column="29">const</specifier>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">ifdef</cpp:directive> <name pos:line="116" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
