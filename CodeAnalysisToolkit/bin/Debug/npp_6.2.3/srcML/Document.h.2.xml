<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\Document.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file Document.h
 ** Text document that handles notifications, DBCS, styling, words and end of line.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2011 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">DOCUMENT_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">DOCUMENT_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="15" pos:column="1">/**
 * A Position is a position within a document between two characters or at the beginning or end.
 * Sometimes used as a character index where it identifies the character after the position.
 */</comment>
<typedef pos:line="19" pos:column="1">typedef <type><name pos:line="19" pos:column="9">int</name></type> <name pos:line="19" pos:column="13">Position</name>;</typedef>
<decl_stmt><decl><type><specifier pos:line="20" pos:column="1">const</specifier> <name pos:line="20" pos:column="7">Position</name></type> <name pos:line="20" pos:column="16">invalidPosition</name> <init pos:line="20" pos:column="32">= <expr><op:operator pos:line="20" pos:column="34">-</op:operator><lit:literal type="number" pos:line="20" pos:column="35">1</lit:literal></expr></init></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="22" pos:column="1">/**
 * The range class represents a range of text in a document.
 * The two values are not sorted as one end may be more significant than the other
 * as is the case for the selection where the end position is the position of the caret.
 * If either position is invalidPosition then the range is invalid and most operations will fail.
 */</comment>
<class pos:line="28" pos:column="1">class <name pos:line="28" pos:column="7">Range</name> <block pos:line="28" pos:column="13">{<private type="default" pos:line="28" pos:column="14">
</private><public pos:line="29" pos:column="1">public:
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">Position</name></type> <name pos:line="30" pos:column="18">start</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="31" pos:column="9">Position</name></type> <name pos:line="31" pos:column="18">end</name></decl>;</decl_stmt>

	<constructor><name pos:line="33" pos:column="9">Range</name><parameter_list pos:line="33" pos:column="14">(<param><decl><type><name pos:line="33" pos:column="15">Position</name></type> <name pos:line="33" pos:column="24">pos</name><init pos:line="33" pos:column="27">=<expr><lit:literal type="number" pos:line="33" pos:column="28">0</lit:literal></expr></init></decl></param>)</parameter_list> <member_list pos:line="33" pos:column="31">:
		<call><name pos:line="34" pos:column="17">start</name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">pos</name></expr></argument>)</argument_list></call><op:operator pos:line="34" pos:column="27">,</op:operator> <call><name pos:line="34" pos:column="29">end</name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">pos</name></expr></argument>)</argument_list></call> </member_list><block pos:line="34" pos:column="38">{
	}</block></constructor>
	<constructor><name pos:line="36" pos:column="9">Range</name><parameter_list pos:line="36" pos:column="14">(<param><decl><type><name pos:line="36" pos:column="15">Position</name></type> <name pos:line="36" pos:column="24">start_</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="32">Position</name></type> <name pos:line="36" pos:column="41">end_</name></decl></param>)</parameter_list> <member_list pos:line="36" pos:column="47">:
		<call><name pos:line="37" pos:column="17">start</name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">start_</name></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="30">,</op:operator> <call><name pos:line="37" pos:column="32">end</name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">end_</name></expr></argument>)</argument_list></call> </member_list><block pos:line="37" pos:column="42">{
	}</block></constructor>

	<function><type><name pos:line="40" pos:column="9">bool</name></type> <name pos:line="40" pos:column="14">Valid</name><parameter_list pos:line="40" pos:column="19">()</parameter_list> <specifier pos:line="40" pos:column="22">const</specifier> <block pos:line="40" pos:column="28">{
		<return pos:line="41" pos:column="17">return <expr><op:operator pos:line="41" pos:column="24">(</op:operator><name pos:line="41" pos:column="25">start</name> <op:operator pos:line="41" pos:column="31">!=</op:operator> <name pos:line="41" pos:column="34">invalidPosition</name><op:operator pos:line="41" pos:column="49">)</op:operator> <op:operator pos:line="41" pos:column="51">&amp;&amp;</op:operator> <op:operator pos:line="41" pos:column="54">(</op:operator><name pos:line="41" pos:column="55">end</name> <op:operator pos:line="41" pos:column="59">!=</op:operator> <name pos:line="41" pos:column="62">invalidPosition</name><op:operator pos:line="41" pos:column="77">)</op:operator></expr>;</return>
	}</block></function>

	<comment type="line" pos:line="44" pos:column="9">// Is the position within the range?</comment>
	<function><type><name pos:line="45" pos:column="9">bool</name></type> <name pos:line="45" pos:column="14">Contains</name><parameter_list pos:line="45" pos:column="22">(<param><decl><type><name pos:line="45" pos:column="23">Position</name></type> <name pos:line="45" pos:column="32">pos</name></decl></param>)</parameter_list> <specifier pos:line="45" pos:column="37">const</specifier> <block pos:line="45" pos:column="43">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">start</name> <op:operator pos:line="46" pos:column="27">&lt;</op:operator> <name pos:line="46" pos:column="29">end</name></expr>)</condition><then pos:line="46" pos:column="33"> <block pos:line="46" pos:column="34">{
			<return pos:line="47" pos:column="25">return <expr><op:operator pos:line="47" pos:column="32">(</op:operator><name pos:line="47" pos:column="33">pos</name> <op:operator pos:line="47" pos:column="37">&gt;=</op:operator> <name pos:line="47" pos:column="40">start</name> <op:operator pos:line="47" pos:column="46">&amp;&amp;</op:operator> <name pos:line="47" pos:column="49">pos</name> <op:operator pos:line="47" pos:column="53">&lt;=</op:operator> <name pos:line="47" pos:column="56">end</name><op:operator pos:line="47" pos:column="59">)</op:operator></expr>;</return>
		}</block></then> <else pos:line="48" pos:column="19">else <block pos:line="48" pos:column="24">{
			<return pos:line="49" pos:column="25">return <expr><op:operator pos:line="49" pos:column="32">(</op:operator><name pos:line="49" pos:column="33">pos</name> <op:operator pos:line="49" pos:column="37">&lt;=</op:operator> <name pos:line="49" pos:column="40">start</name> <op:operator pos:line="49" pos:column="46">&amp;&amp;</op:operator> <name pos:line="49" pos:column="49">pos</name> <op:operator pos:line="49" pos:column="53">&gt;=</op:operator> <name pos:line="49" pos:column="56">end</name><op:operator pos:line="49" pos:column="59">)</op:operator></expr>;</return>
		}</block></else></if>
	}</block></function>

	<comment type="line" pos:line="53" pos:column="9">// Is the character after pos within the range?</comment>
	<function><type><name pos:line="54" pos:column="9">bool</name></type> <name pos:line="54" pos:column="14">ContainsCharacter</name><parameter_list pos:line="54" pos:column="31">(<param><decl><type><name pos:line="54" pos:column="32">Position</name></type> <name pos:line="54" pos:column="41">pos</name></decl></param>)</parameter_list> <specifier pos:line="54" pos:column="46">const</specifier> <block pos:line="54" pos:column="52">{
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">start</name> <op:operator pos:line="55" pos:column="27">&lt;</op:operator> <name pos:line="55" pos:column="29">end</name></expr>)</condition><then pos:line="55" pos:column="33"> <block pos:line="55" pos:column="34">{
			<return pos:line="56" pos:column="25">return <expr><op:operator pos:line="56" pos:column="32">(</op:operator><name pos:line="56" pos:column="33">pos</name> <op:operator pos:line="56" pos:column="37">&gt;=</op:operator> <name pos:line="56" pos:column="40">start</name> <op:operator pos:line="56" pos:column="46">&amp;&amp;</op:operator> <name pos:line="56" pos:column="49">pos</name> <op:operator pos:line="56" pos:column="53">&lt;</op:operator> <name pos:line="56" pos:column="55">end</name><op:operator pos:line="56" pos:column="58">)</op:operator></expr>;</return>
		}</block></then> <else pos:line="57" pos:column="19">else <block pos:line="57" pos:column="24">{
			<return pos:line="58" pos:column="25">return <expr><op:operator pos:line="58" pos:column="32">(</op:operator><name><name pos:line="58" pos:column="33">pos</name> <argument_list pos:line="58" pos:column="37">&lt; <argument><expr><name pos:line="58" pos:column="39">start</name> <op:operator pos:line="58" pos:column="45">&amp;&amp;</op:operator> <name pos:line="58" pos:column="48">pos</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="58" pos:column="53">=</op:operator> <name pos:line="58" pos:column="55">end</name><op:operator pos:line="58" pos:column="58">)</op:operator></expr>;</return>
		}</block></else></if>
	}</block></function>

	<function><type><name pos:line="62" pos:column="9">bool</name></type> <name pos:line="62" pos:column="14">Contains</name><parameter_list pos:line="62" pos:column="22">(<param><decl><type><name pos:line="62" pos:column="23">Range</name></type> <name pos:line="62" pos:column="29">other</name></decl></param>)</parameter_list> <specifier pos:line="62" pos:column="36">const</specifier> <block pos:line="62" pos:column="42">{
		<return pos:line="63" pos:column="17">return <expr><call><name pos:line="63" pos:column="24">Contains</name><argument_list pos:line="63" pos:column="32">(<argument><expr><name><name pos:line="63" pos:column="33">other</name><op:operator pos:line="63" pos:column="38">.</op:operator><name pos:line="63" pos:column="39">start</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="63" pos:column="46">&amp;&amp;</op:operator> <call><name pos:line="63" pos:column="49">Contains</name><argument_list pos:line="63" pos:column="57">(<argument><expr><name><name pos:line="63" pos:column="58">other</name><op:operator pos:line="63" pos:column="63">.</op:operator><name pos:line="63" pos:column="64">end</name></name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

	<function><type><name pos:line="66" pos:column="9">bool</name></type> <name pos:line="66" pos:column="14">Overlaps</name><parameter_list pos:line="66" pos:column="22">(<param><decl><type><name pos:line="66" pos:column="23">Range</name></type> <name pos:line="66" pos:column="29">other</name></decl></param>)</parameter_list> <specifier pos:line="66" pos:column="36">const</specifier> <block pos:line="66" pos:column="42">{
		<return pos:line="67" pos:column="17">return
		<expr><call><name pos:line="68" pos:column="17">Contains</name><argument_list pos:line="68" pos:column="25">(<argument><expr><name><name pos:line="68" pos:column="26">other</name><op:operator pos:line="68" pos:column="31">.</op:operator><name pos:line="68" pos:column="32">start</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="68" pos:column="39">||</op:operator>
		<call><name pos:line="69" pos:column="17">Contains</name><argument_list pos:line="69" pos:column="25">(<argument><expr><name><name pos:line="69" pos:column="26">other</name><op:operator pos:line="69" pos:column="31">.</op:operator><name pos:line="69" pos:column="32">end</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="69" pos:column="37">||</op:operator>
		<call><name><name pos:line="70" pos:column="17">other</name><op:operator pos:line="70" pos:column="22">.</op:operator><name pos:line="70" pos:column="23">Contains</name></name><argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">start</name></expr></argument>)</argument_list></call> <op:operator pos:line="70" pos:column="39">||</op:operator>
		<call><name><name pos:line="71" pos:column="17">other</name><op:operator pos:line="71" pos:column="22">.</op:operator><name pos:line="71" pos:column="23">Contains</name></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">end</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
</public>}</block>;</class>

<class_decl pos:line="75" pos:column="1">class <name pos:line="75" pos:column="7">DocWatcher</name>;</class_decl>
<class_decl pos:line="76" pos:column="1">class <name pos:line="76" pos:column="7">DocModification</name>;</class_decl>
<class_decl pos:line="77" pos:column="1">class <name pos:line="77" pos:column="7">Document</name>;</class_decl>

<comment type="block" format="doxygen" pos:line="79" pos:column="1">/**
 * Interface class for regular expression searching
 */</comment>
<class pos:line="82" pos:column="1">class <name pos:line="82" pos:column="7">RegexSearchBase</name> <block pos:line="82" pos:column="23">{<private type="default" pos:line="82" pos:column="24">
</private><public pos:line="83" pos:column="1">public:
	<destructor><specifier pos:line="84" pos:column="9">virtual</specifier> <name pos:line="84" pos:column="17">~<name pos:line="84" pos:column="18">RegexSearchBase</name></name><parameter_list pos:line="84" pos:column="33">()</parameter_list> <block pos:line="84" pos:column="36">{}</block></destructor>

	<function_decl><type><specifier pos:line="86" pos:column="9">virtual</specifier> <name pos:line="86" pos:column="17">long</name></type> <name pos:line="86" pos:column="22">FindText</name><parameter_list pos:line="86" pos:column="30">(<param><decl><type><name pos:line="86" pos:column="31">Document</name> <type:modifier pos:line="86" pos:column="40">*</type:modifier></type><name pos:line="86" pos:column="41">doc</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="46">int</name></type> <name pos:line="86" pos:column="50">minPos</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="58">int</name></type> <name pos:line="86" pos:column="62">maxPos</name></decl></param>, <param><decl><type><specifier pos:line="86" pos:column="70">const</specifier> <name pos:line="86" pos:column="76">char</name> <type:modifier pos:line="86" pos:column="81">*</type:modifier></type><name pos:line="86" pos:column="82">s</name></decl></param>,
                        <param><decl><type><name pos:line="87" pos:column="25">bool</name></type> <name pos:line="87" pos:column="30">caseSensitive</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="45">bool</name></type> <name pos:line="87" pos:column="50">word</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="56">bool</name></type> <name pos:line="87" pos:column="61">wordStart</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="72">int</name></type> <name pos:line="87" pos:column="76">flags</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="83">int</name> <type:modifier pos:line="87" pos:column="87">*</type:modifier></type><name pos:line="87" pos:column="88">length</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="87" pos:column="98">0</lit:literal>;</function_decl>

	<comment type="line" format="doxygen" pos:line="89" pos:column="9">///@return String with the substitutions, must remain valid until the next call or destruction</comment>
	<function_decl><type><specifier pos:line="90" pos:column="9">virtual</specifier> <specifier pos:line="90" pos:column="17">const</specifier> <name pos:line="90" pos:column="23">char</name> <type:modifier pos:line="90" pos:column="28">*</type:modifier></type><name pos:line="90" pos:column="29">SubstituteByPosition</name><parameter_list pos:line="90" pos:column="49">(<param><decl><type><name pos:line="90" pos:column="50">Document</name> <type:modifier pos:line="90" pos:column="59">*</type:modifier></type><name pos:line="90" pos:column="60">doc</name></decl></param>, <param><decl><type><specifier pos:line="90" pos:column="65">const</specifier> <name pos:line="90" pos:column="71">char</name> <type:modifier pos:line="90" pos:column="76">*</type:modifier></type><name pos:line="90" pos:column="77">text</name></decl></param>, <param><decl><type><name pos:line="90" pos:column="83">int</name> <type:modifier pos:line="90" pos:column="87">*</type:modifier></type><name pos:line="90" pos:column="88">length</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="90" pos:column="98">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<comment type="line" format="doxygen" pos:line="93" pos:column="1">/// Factory function for RegexSearchBase</comment>
<function_decl><type><specifier pos:line="94" pos:column="1">extern</specifier> <name pos:line="94" pos:column="8">RegexSearchBase</name> <type:modifier pos:line="94" pos:column="24">*</type:modifier></type><name pos:line="94" pos:column="25">CreateRegexSearch</name><parameter_list pos:line="94" pos:column="42">(<param><decl><type><name pos:line="94" pos:column="43">CharClassify</name> <type:modifier pos:line="94" pos:column="56">*</type:modifier></type><name pos:line="94" pos:column="57">charClassTable</name></decl></param>)</parameter_list>;</function_decl>

<struct pos:line="96" pos:column="1">struct <name pos:line="96" pos:column="8">StyledText</name> <block pos:line="96" pos:column="19">{<public type="default" pos:line="96" pos:column="20">
	<decl_stmt><decl><type><name pos:line="97" pos:column="9">size_t</name></type> <name pos:line="97" pos:column="16">length</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="98" pos:column="9">const</specifier> <name pos:line="98" pos:column="15">char</name> <type:modifier pos:line="98" pos:column="20">*</type:modifier></type><name pos:line="98" pos:column="21">text</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="99" pos:column="9">bool</name></type> <name pos:line="99" pos:column="14">multipleStyles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="100" pos:column="9">size_t</name></type> <name pos:line="100" pos:column="16">style</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="101" pos:column="9">const</specifier> <name pos:line="101" pos:column="15">unsigned</name> <name pos:line="101" pos:column="24">char</name> <type:modifier pos:line="101" pos:column="29">*</type:modifier></type><name pos:line="101" pos:column="30">styles</name></decl>;</decl_stmt>
	<constructor><name pos:line="102" pos:column="9">StyledText</name><parameter_list pos:line="102" pos:column="19">(<param><decl><type><name pos:line="102" pos:column="20">size_t</name></type> <name pos:line="102" pos:column="27">length_</name></decl></param>, <param><decl><type><specifier pos:line="102" pos:column="36">const</specifier> <name pos:line="102" pos:column="42">char</name> <type:modifier pos:line="102" pos:column="47">*</type:modifier></type><name pos:line="102" pos:column="48">text_</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="55">bool</name></type> <name pos:line="102" pos:column="60">multipleStyles_</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="77">int</name></type> <name pos:line="102" pos:column="81">style_</name></decl></param>, <param><decl><type><specifier pos:line="102" pos:column="89">const</specifier> <name pos:line="102" pos:column="95">unsigned</name> <name pos:line="102" pos:column="104">char</name> <type:modifier pos:line="102" pos:column="109">*</type:modifier></type><name pos:line="102" pos:column="110">styles_</name></decl></param>)</parameter_list> <member_list pos:line="102" pos:column="119">:
		<call><name pos:line="103" pos:column="17">length</name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">length_</name></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="32">,</op:operator> <call><name pos:line="103" pos:column="34">text</name><argument_list pos:line="103" pos:column="38">(<argument><expr><name pos:line="103" pos:column="39">text_</name></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="45">,</op:operator> <call><name pos:line="103" pos:column="47">multipleStyles</name><argument_list pos:line="103" pos:column="61">(<argument><expr><name pos:line="103" pos:column="62">multipleStyles_</name></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="78">,</op:operator> <call><name pos:line="103" pos:column="80">style</name><argument_list pos:line="103" pos:column="85">(<argument><expr><name pos:line="103" pos:column="86">style_</name></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="93">,</op:operator> <call><name pos:line="103" pos:column="95">styles</name><argument_list pos:line="103" pos:column="101">(<argument><expr><name pos:line="103" pos:column="102">styles_</name></expr></argument>)</argument_list></call> </member_list><block pos:line="103" pos:column="111">{
	}</block></constructor>
	<comment type="line" pos:line="105" pos:column="9">// Return number of bytes from start to before '\n' or end of text.</comment>
	<comment type="line" pos:line="106" pos:column="9">// Return 1 when start is outside text</comment>
	<function><type><name pos:line="107" pos:column="9">size_t</name></type> <name pos:line="107" pos:column="16">LineLength</name><parameter_list pos:line="107" pos:column="26">(<param><decl><type><name pos:line="107" pos:column="27">size_t</name></type> <name pos:line="107" pos:column="34">start</name></decl></param>)</parameter_list> <specifier pos:line="107" pos:column="41">const</specifier> <block pos:line="107" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="108" pos:column="17">size_t</name></type> <name pos:line="108" pos:column="24">cur</name> <init pos:line="108" pos:column="28">= <expr><name pos:line="108" pos:column="30">start</name></expr></init></decl>;</decl_stmt>
		<while pos:line="109" pos:column="17">while <condition pos:line="109" pos:column="23">(<expr><op:operator pos:line="109" pos:column="24">(</op:operator><name pos:line="109" pos:column="25">cur</name> <op:operator pos:line="109" pos:column="29">&lt;</op:operator> <name pos:line="109" pos:column="31">length</name><op:operator pos:line="109" pos:column="37">)</op:operator> <op:operator pos:line="109" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="109" pos:column="42">(</op:operator><name><name pos:line="109" pos:column="43">text</name><index pos:line="109" pos:column="47">[<expr><name pos:line="109" pos:column="48">cur</name></expr>]</index></name> <op:operator pos:line="109" pos:column="53">!=</op:operator> <lit:literal type="char" pos:line="109" pos:column="56">'\n'</lit:literal><op:operator pos:line="109" pos:column="60">)</op:operator></expr>)</condition>
			<expr_stmt><expr><name pos:line="110" pos:column="25">cur</name><op:operator pos:line="110" pos:column="28">++</op:operator></expr>;</expr_stmt></while>
		<return pos:line="111" pos:column="17">return <expr><name pos:line="111" pos:column="24">cur</name><op:operator pos:line="111" pos:column="27">-</op:operator><name pos:line="111" pos:column="28">start</name></expr>;</return>
	}</block></function>
	<function><type><name pos:line="113" pos:column="9">size_t</name></type> <name pos:line="113" pos:column="16">StyleAt</name><parameter_list pos:line="113" pos:column="23">(<param><decl><type><name pos:line="113" pos:column="24">size_t</name></type> <name pos:line="113" pos:column="31">i</name></decl></param>)</parameter_list> <specifier pos:line="113" pos:column="34">const</specifier> <block pos:line="113" pos:column="40">{
		<return pos:line="114" pos:column="17">return <expr><name pos:line="114" pos:column="24">multipleStyles</name> <op:operator pos:line="114" pos:column="39">?</op:operator> <name><name pos:line="114" pos:column="41">styles</name><index pos:line="114" pos:column="47">[<expr><name pos:line="114" pos:column="48">i</name></expr>]</index></name> <op:operator pos:line="114" pos:column="51">:</op:operator> <name pos:line="114" pos:column="53">style</name></expr>;</return>
	}</block></function>
</public>}</block>;</struct>

<class pos:line="118" pos:column="1">class <name pos:line="118" pos:column="7">HighlightDelimiter</name> <block pos:line="118" pos:column="26">{<private type="default" pos:line="118" pos:column="27">
</private><public pos:line="119" pos:column="1">public:
	<constructor><name pos:line="120" pos:column="9">HighlightDelimiter</name><parameter_list pos:line="120" pos:column="27">()</parameter_list> <block pos:line="120" pos:column="30">{
		<expr_stmt><expr><name pos:line="121" pos:column="17">beginFoldBlock</name> <op:operator pos:line="121" pos:column="32">=</op:operator> <op:operator pos:line="121" pos:column="34">-</op:operator><lit:literal type="number" pos:line="121" pos:column="35">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="122" pos:column="17">endFoldBlock</name> <op:operator pos:line="122" pos:column="30">=</op:operator> <op:operator pos:line="122" pos:column="32">-</op:operator><lit:literal type="number" pos:line="122" pos:column="33">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="123" pos:column="17">beginMarginCorrectlyDrawnZone</name> <op:operator pos:line="123" pos:column="47">=</op:operator> <op:operator pos:line="123" pos:column="49">-</op:operator><lit:literal type="number" pos:line="123" pos:column="50">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="124" pos:column="17">endMarginCorrectlyDrawnZone</name> <op:operator pos:line="124" pos:column="45">=</op:operator> <op:operator pos:line="124" pos:column="47">-</op:operator><lit:literal type="number" pos:line="124" pos:column="48">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="125" pos:column="17">isEnabled</name> <op:operator pos:line="125" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="125" pos:column="29">false</lit:literal></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><name pos:line="128" pos:column="9">bool</name></type> <name pos:line="128" pos:column="14">NeedsDrawing</name><parameter_list pos:line="128" pos:column="26">(<param><decl><type><name pos:line="128" pos:column="27">int</name></type> <name pos:line="128" pos:column="31">line</name></decl></param>)</parameter_list> <block pos:line="128" pos:column="37">{
		<return pos:line="129" pos:column="17">return <expr><name pos:line="129" pos:column="24">isEnabled</name> <op:operator pos:line="129" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="129" pos:column="37">(</op:operator><name pos:line="129" pos:column="38">line</name> <op:operator pos:line="129" pos:column="43">&lt;=</op:operator> <name pos:line="129" pos:column="46">beginMarginCorrectlyDrawnZone</name> <op:operator pos:line="129" pos:column="76">||</op:operator> <name pos:line="129" pos:column="79">endMarginCorrectlyDrawnZone</name> <op:operator pos:line="129" pos:column="107">&lt;=</op:operator> <name pos:line="129" pos:column="110">line</name><op:operator pos:line="129" pos:column="114">)</op:operator></expr>;</return>
	}</block></function>

	<function><type><name pos:line="132" pos:column="9">bool</name></type> <name pos:line="132" pos:column="14">isCurrentBlockHighlight</name><parameter_list pos:line="132" pos:column="37">(<param><decl><type><name pos:line="132" pos:column="38">int</name></type> <name pos:line="132" pos:column="42">line</name></decl></param>)</parameter_list> <block pos:line="132" pos:column="48">{
		<return pos:line="133" pos:column="17">return <expr><name pos:line="133" pos:column="24">isEnabled</name> <op:operator pos:line="133" pos:column="34">&amp;&amp;</op:operator> <name pos:line="133" pos:column="37">beginFoldBlock</name> <op:operator pos:line="133" pos:column="52">!=</op:operator> <op:operator pos:line="133" pos:column="55">-</op:operator><lit:literal type="number" pos:line="133" pos:column="56">1</lit:literal> <op:operator pos:line="133" pos:column="58">&amp;&amp;</op:operator> <name pos:line="133" pos:column="61">beginFoldBlock</name> <op:operator pos:line="133" pos:column="76">&lt;=</op:operator> <name pos:line="133" pos:column="79">line</name> <op:operator pos:line="133" pos:column="84">&amp;&amp;</op:operator> <name pos:line="133" pos:column="87">line</name> <op:operator pos:line="133" pos:column="92">&lt;=</op:operator> <name pos:line="133" pos:column="95">endFoldBlock</name></expr>;</return>
	}</block></function>

	<function><type><name pos:line="136" pos:column="9">bool</name></type> <name pos:line="136" pos:column="14">isHeadBlockFold</name><parameter_list pos:line="136" pos:column="29">(<param><decl><type><name pos:line="136" pos:column="30">int</name></type> <name pos:line="136" pos:column="34">line</name></decl></param>)</parameter_list> <block pos:line="136" pos:column="40">{
		<return pos:line="137" pos:column="17">return <expr><name pos:line="137" pos:column="24">beginFoldBlock</name> <op:operator pos:line="137" pos:column="39">==</op:operator> <name pos:line="137" pos:column="42">line</name> <op:operator pos:line="137" pos:column="47">&amp;&amp;</op:operator> <name pos:line="137" pos:column="50">line</name> <op:operator pos:line="137" pos:column="55">&lt;</op:operator> <name pos:line="137" pos:column="57">endFoldBlock</name></expr>;</return>
	}</block></function>

	<function><type><name pos:line="140" pos:column="9">bool</name></type> <name pos:line="140" pos:column="14">isBodyBlockFold</name><parameter_list pos:line="140" pos:column="29">(<param><decl><type><name pos:line="140" pos:column="30">int</name></type> <name pos:line="140" pos:column="34">line</name></decl></param>)</parameter_list> <block pos:line="140" pos:column="40">{
		<return pos:line="141" pos:column="17">return <expr><name pos:line="141" pos:column="24">beginFoldBlock</name> <op:operator pos:line="141" pos:column="39">!=</op:operator> <op:operator pos:line="141" pos:column="42">-</op:operator><lit:literal type="number" pos:line="141" pos:column="43">1</lit:literal> <op:operator pos:line="141" pos:column="45">&amp;&amp;</op:operator> <name pos:line="141" pos:column="48">beginFoldBlock</name> <op:operator pos:line="141" pos:column="63">&lt;</op:operator> <name pos:line="141" pos:column="65">line</name> <op:operator pos:line="141" pos:column="70">&amp;&amp;</op:operator> <name pos:line="141" pos:column="73">line</name> <op:operator pos:line="141" pos:column="78">&lt;</op:operator> <name pos:line="141" pos:column="80">endFoldBlock</name></expr>;</return>
	}</block></function>

	<function><type><name pos:line="144" pos:column="9">bool</name></type> <name pos:line="144" pos:column="14">isTailBlockFold</name><parameter_list pos:line="144" pos:column="29">(<param><decl><type><name pos:line="144" pos:column="30">int</name></type> <name pos:line="144" pos:column="34">line</name></decl></param>)</parameter_list> <block pos:line="144" pos:column="40">{
		<return pos:line="145" pos:column="17">return <expr><name pos:line="145" pos:column="24">beginFoldBlock</name> <op:operator pos:line="145" pos:column="39">!=</op:operator> <op:operator pos:line="145" pos:column="42">-</op:operator><lit:literal type="number" pos:line="145" pos:column="43">1</lit:literal> <op:operator pos:line="145" pos:column="45">&amp;&amp;</op:operator> <name pos:line="145" pos:column="48">beginFoldBlock</name> <op:operator pos:line="145" pos:column="63">&lt;</op:operator> <name pos:line="145" pos:column="65">line</name> <op:operator pos:line="145" pos:column="70">&amp;&amp;</op:operator> <name pos:line="145" pos:column="73">line</name> <op:operator pos:line="145" pos:column="78">==</op:operator> <name pos:line="145" pos:column="81">endFoldBlock</name></expr>;</return>
	}</block></function>

	<comment type="line" pos:line="148" pos:column="9">// beginFoldBlock : Begin of current fold block.</comment>
	<comment type="line" pos:line="149" pos:column="9">// endStartBlock : End of current fold block.</comment>
	<comment type="line" pos:line="150" pos:column="9">// beginMarginCorrectlyDrawnZone : Begin of zone where margin is correctly drawn.</comment>
	<comment type="line" pos:line="151" pos:column="9">// endMarginCorrectlyDrawnZone : End of zone where margin is correctly drawn.</comment>
	<decl_stmt><decl><type><name pos:line="152" pos:column="9">int</name></type> <name pos:line="152" pos:column="13">beginFoldBlock</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">int</name></type> <name pos:line="153" pos:column="13">endFoldBlock</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="154" pos:column="9">int</name></type> <name pos:line="154" pos:column="13">beginMarginCorrectlyDrawnZone</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="155" pos:column="9">int</name></type> <name pos:line="155" pos:column="13">endMarginCorrectlyDrawnZone</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">bool</name></type> <name pos:line="156" pos:column="14">isEnabled</name></decl>;</decl_stmt>
</public>}</block>;</class>

<class pos:line="159" pos:column="1">class <name pos:line="159" pos:column="7">CaseFolder</name> <block pos:line="159" pos:column="18">{<private type="default" pos:line="159" pos:column="19">
</private><public pos:line="160" pos:column="1">public:
	<destructor><specifier pos:line="161" pos:column="9">virtual</specifier> <name pos:line="161" pos:column="17">~<name pos:line="161" pos:column="18">CaseFolder</name></name><parameter_list pos:line="161" pos:column="28">()</parameter_list> <block pos:line="161" pos:column="31">{
	}</block></destructor>
	<function_decl><type><specifier pos:line="163" pos:column="9">virtual</specifier> <name pos:line="163" pos:column="17">size_t</name></type> <name pos:line="163" pos:column="24">Fold</name><parameter_list pos:line="163" pos:column="28">(<param><decl><type><name pos:line="163" pos:column="29">char</name> <type:modifier pos:line="163" pos:column="34">*</type:modifier></type><name pos:line="163" pos:column="35">folded</name></decl></param>, <param><decl><type><name pos:line="163" pos:column="43">size_t</name></type> <name pos:line="163" pos:column="50">sizeFolded</name></decl></param>, <param><decl><type><specifier pos:line="163" pos:column="62">const</specifier> <name pos:line="163" pos:column="68">char</name> <type:modifier pos:line="163" pos:column="73">*</type:modifier></type><name pos:line="163" pos:column="74">mixed</name></decl></param>, <param><decl><type><name pos:line="163" pos:column="81">size_t</name></type> <name pos:line="163" pos:column="88">lenMixed</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="163" pos:column="100">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<class pos:line="166" pos:column="1">class <name pos:line="166" pos:column="7">CaseFolderTable</name> <super pos:line="166" pos:column="23">: <specifier pos:line="166" pos:column="25">public</specifier> <name pos:line="166" pos:column="32">CaseFolder</name></super> <block pos:line="166" pos:column="43">{<private type="default" pos:line="166" pos:column="44">
</private><protected pos:line="167" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="168" pos:column="9">char</name></type> <name><name pos:line="168" pos:column="14">mapping</name><index pos:line="168" pos:column="21">[<expr><lit:literal type="number" pos:line="168" pos:column="22">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
</protected><public pos:line="169" pos:column="1">public:
	<constructor_decl><name pos:line="170" pos:column="9">CaseFolderTable</name><parameter_list pos:line="170" pos:column="24">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="171" pos:column="9">virtual</specifier> <name pos:line="171" pos:column="17">~<name pos:line="171" pos:column="18">CaseFolderTable</name></name><parameter_list pos:line="171" pos:column="33">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="172" pos:column="9">virtual</specifier> <name pos:line="172" pos:column="17">size_t</name></type> <name pos:line="172" pos:column="24">Fold</name><parameter_list pos:line="172" pos:column="28">(<param><decl><type><name pos:line="172" pos:column="29">char</name> <type:modifier pos:line="172" pos:column="34">*</type:modifier></type><name pos:line="172" pos:column="35">folded</name></decl></param>, <param><decl><type><name pos:line="172" pos:column="43">size_t</name></type> <name pos:line="172" pos:column="50">sizeFolded</name></decl></param>, <param><decl><type><specifier pos:line="172" pos:column="62">const</specifier> <name pos:line="172" pos:column="68">char</name> <type:modifier pos:line="172" pos:column="73">*</type:modifier></type><name pos:line="172" pos:column="74">mixed</name></decl></param>, <param><decl><type><name pos:line="172" pos:column="81">size_t</name></type> <name pos:line="172" pos:column="88">lenMixed</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="173" pos:column="9">void</name></type> <name pos:line="173" pos:column="14">SetTranslation</name><parameter_list pos:line="173" pos:column="28">(<param><decl><type><name pos:line="173" pos:column="29">char</name></type> <name pos:line="173" pos:column="34">ch</name></decl></param>, <param><decl><type><name pos:line="173" pos:column="38">char</name></type> <name pos:line="173" pos:column="43">chTranslation</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="174" pos:column="9">void</name></type> <name pos:line="174" pos:column="14">StandardASCII</name><parameter_list pos:line="174" pos:column="27">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<class_decl pos:line="177" pos:column="1">class <name pos:line="177" pos:column="7">Document</name>;</class_decl>

<class pos:line="179" pos:column="1">class <name pos:line="179" pos:column="7">LexInterface</name> <block pos:line="179" pos:column="20">{<private type="default" pos:line="179" pos:column="21">
</private><protected pos:line="180" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="181" pos:column="9">Document</name> <type:modifier pos:line="181" pos:column="18">*</type:modifier></type><name pos:line="181" pos:column="19">pdoc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="182" pos:column="9">ILexer</name> <type:modifier pos:line="182" pos:column="16">*</type:modifier></type><name pos:line="182" pos:column="17">instance</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="183" pos:column="9">bool</name></type> <name pos:line="183" pos:column="14">performingStyle</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="183" pos:column="33">///&lt; Prevent reentrance</comment>
</protected><public pos:line="184" pos:column="1">public:
	<constructor><name pos:line="185" pos:column="9">LexInterface</name><parameter_list pos:line="185" pos:column="21">(<param><decl><type><name pos:line="185" pos:column="22">Document</name> <type:modifier pos:line="185" pos:column="31">*</type:modifier></type><name pos:line="185" pos:column="32">pdoc_</name></decl></param>)</parameter_list> <member_list pos:line="185" pos:column="39">: <call><name pos:line="185" pos:column="41">pdoc</name><argument_list pos:line="185" pos:column="45">(<argument><expr><name pos:line="185" pos:column="46">pdoc_</name></expr></argument>)</argument_list></call><op:operator pos:line="185" pos:column="52">,</op:operator> <call><name pos:line="185" pos:column="54">instance</name><argument_list pos:line="185" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="185" pos:column="63">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="185" pos:column="65">,</op:operator> <call><name pos:line="185" pos:column="67">performingStyle</name><argument_list pos:line="185" pos:column="82">(<argument><expr><lit:literal type="boolean" pos:line="185" pos:column="83">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="185" pos:column="90">{
	}</block></constructor>
	<destructor><specifier pos:line="187" pos:column="9">virtual</specifier> <name pos:line="187" pos:column="17">~<name pos:line="187" pos:column="18">LexInterface</name></name><parameter_list pos:line="187" pos:column="30">()</parameter_list> <block pos:line="187" pos:column="33">{
	}</block></destructor>
	<function_decl><type><name pos:line="189" pos:column="9">void</name></type> <name pos:line="189" pos:column="14">Colourise</name><parameter_list pos:line="189" pos:column="23">(<param><decl><type><name pos:line="189" pos:column="24">int</name></type> <name pos:line="189" pos:column="28">start</name></decl></param>, <param><decl><type><name pos:line="189" pos:column="35">int</name></type> <name pos:line="189" pos:column="39">end</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="190" pos:column="9">bool</name></type> <name pos:line="190" pos:column="14">UseContainerLexing</name><parameter_list pos:line="190" pos:column="32">()</parameter_list> <specifier pos:line="190" pos:column="35">const</specifier> <block pos:line="190" pos:column="41">{
		<return pos:line="191" pos:column="17">return <expr><name pos:line="191" pos:column="24">instance</name> <op:operator pos:line="191" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="191" pos:column="36">0</lit:literal></expr>;</return>
	}</block></function>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="195" pos:column="1">/**
 */</comment>
<class pos:line="197" pos:column="1">class <name pos:line="197" pos:column="7">Document</name> <super pos:line="197" pos:column="16">: <name pos:line="197" pos:column="18">PerLine</name>, <specifier pos:line="197" pos:column="27">public</specifier> <name pos:line="197" pos:column="34">IDocument</name></super> <block pos:line="197" pos:column="44">{<private type="default" pos:line="197" pos:column="45">

</private><public pos:line="199" pos:column="1">public:
	<comment type="block" format="doxygen" pos:line="200" pos:column="9">/** Used to pair watcher pointer with user data. */</comment>
	<class pos:line="201" pos:column="9">class <name pos:line="201" pos:column="15">WatcherWithUserData</name> <block pos:line="201" pos:column="35">{<private type="default" pos:line="201" pos:column="36">
	</private><public pos:line="202" pos:column="9">public:
		<decl_stmt><decl><type><name pos:line="203" pos:column="17">DocWatcher</name> <type:modifier pos:line="203" pos:column="28">*</type:modifier></type><name pos:line="203" pos:column="29">watcher</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="204" pos:column="17">void</name> <type:modifier pos:line="204" pos:column="22">*</type:modifier></type><name pos:line="204" pos:column="23">userData</name></decl>;</decl_stmt>
		<constructor><name pos:line="205" pos:column="17">WatcherWithUserData</name><parameter_list pos:line="205" pos:column="36">()</parameter_list> <block pos:line="205" pos:column="39">{
			<expr_stmt><expr><name pos:line="206" pos:column="25">watcher</name> <op:operator pos:line="206" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="206" pos:column="35">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="207" pos:column="25">userData</name> <op:operator pos:line="207" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="207" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		}</block></constructor>
	</public>}</block>;</class>

	<enum pos:line="211" pos:column="9">enum <name pos:line="211" pos:column="14">charClassification</name> <block pos:line="211" pos:column="33">{ <decl><name pos:line="211" pos:column="35">ccSpace</name></decl><op:operator pos:line="211" pos:column="42">,</op:operator> <decl><name pos:line="211" pos:column="44">ccNewLine</name></decl><op:operator pos:line="211" pos:column="53">,</op:operator> <decl><name pos:line="211" pos:column="55">ccWord</name></decl><op:operator pos:line="211" pos:column="61">,</op:operator> <decl><name pos:line="211" pos:column="63">ccPunctuation</name></decl> }</block>;</enum>
</public><private pos:line="212" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="213" pos:column="9">int</name></type> <name pos:line="213" pos:column="13">refCount</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="214" pos:column="9">CellBuffer</name></type> <name pos:line="214" pos:column="20">cb</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="215" pos:column="9">CharClassify</name></type> <name pos:line="215" pos:column="22">charClass</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="216" pos:column="9">char</name></type> <name pos:line="216" pos:column="14">stylingMask</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="217" pos:column="9">int</name></type> <name pos:line="217" pos:column="13">endStyled</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="218" pos:column="9">int</name></type> <name pos:line="218" pos:column="13">styleClock</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="219" pos:column="9">int</name></type> <name pos:line="219" pos:column="13">enteredModification</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="220" pos:column="9">int</name></type> <name pos:line="220" pos:column="13">enteredStyling</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="221" pos:column="9">int</name></type> <name pos:line="221" pos:column="13">enteredReadOnlyCount</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="223" pos:column="9">WatcherWithUserData</name> <type:modifier pos:line="223" pos:column="29">*</type:modifier></type><name pos:line="223" pos:column="30">watchers</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="224" pos:column="9">int</name></type> <name pos:line="224" pos:column="13">lenWatchers</name></decl>;</decl_stmt>

	<comment type="line" pos:line="226" pos:column="9">// ldSize is not real data - it is for dimensions and loops</comment>
	<enum pos:line="227" pos:column="9">enum <name pos:line="227" pos:column="14">lineData</name> <block pos:line="227" pos:column="23">{ <decl><name pos:line="227" pos:column="25">ldMarkers</name></decl><op:operator pos:line="227" pos:column="34">,</op:operator> <decl><name pos:line="227" pos:column="36">ldLevels</name></decl><op:operator pos:line="227" pos:column="44">,</op:operator> <decl><name pos:line="227" pos:column="46">ldState</name></decl><op:operator pos:line="227" pos:column="53">,</op:operator> <decl><name pos:line="227" pos:column="55">ldMargin</name></decl><op:operator pos:line="227" pos:column="63">,</op:operator> <decl><name pos:line="227" pos:column="65">ldAnnotation</name></decl><op:operator pos:line="227" pos:column="77">,</op:operator> <decl><name pos:line="227" pos:column="79">ldSize</name></decl> }</block>;</enum>
	<decl_stmt><decl><type><name pos:line="228" pos:column="9">PerLine</name> <type:modifier pos:line="228" pos:column="17">*</type:modifier></type><name><name pos:line="228" pos:column="18">perLineData</name><index pos:line="228" pos:column="29">[<expr><name pos:line="228" pos:column="30">ldSize</name></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="230" pos:column="9">bool</name></type> <name pos:line="230" pos:column="14">matchesValid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="231" pos:column="9">RegexSearchBase</name> <type:modifier pos:line="231" pos:column="25">*</type:modifier></type><name pos:line="231" pos:column="26">regex</name></decl>;</decl_stmt>

</private><public pos:line="233" pos:column="1">public:

	<decl_stmt><decl><type><name pos:line="235" pos:column="9">LexInterface</name> <type:modifier pos:line="235" pos:column="22">*</type:modifier></type><name pos:line="235" pos:column="23">pli</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="237" pos:column="9">int</name></type> <name pos:line="237" pos:column="13">stylingBits</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="238" pos:column="9">int</name></type> <name pos:line="238" pos:column="13">stylingBitsMask</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="240" pos:column="9">int</name></type> <name pos:line="240" pos:column="13">eolMode</name></decl>;</decl_stmt>
	<comment type="line" format="doxygen" pos:line="241" pos:column="9">/// Can also be SC_CP_UTF8 to enable UTF-8 mode</comment>
	<decl_stmt><decl><type><name pos:line="242" pos:column="9">int</name></type> <name pos:line="242" pos:column="13">dbcsCodePage</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="243" pos:column="9">int</name></type> <name pos:line="243" pos:column="13">tabInChars</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="244" pos:column="9">int</name></type> <name pos:line="244" pos:column="13">indentInChars</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="245" pos:column="9">int</name></type> <name pos:line="245" pos:column="13">actualIndentInChars</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="246" pos:column="9">bool</name></type> <name pos:line="246" pos:column="14">useTabs</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="247" pos:column="9">bool</name></type> <name pos:line="247" pos:column="14">tabIndents</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="248" pos:column="9">bool</name></type> <name pos:line="248" pos:column="14">backspaceUnindents</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="250" pos:column="9">DecorationList</name></type> <name pos:line="250" pos:column="24">decorations</name></decl>;</decl_stmt>

	<constructor_decl><name pos:line="252" pos:column="9">Document</name><parameter_list pos:line="252" pos:column="17">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="253" pos:column="9">virtual</specifier> <name pos:line="253" pos:column="17">~<name pos:line="253" pos:column="18">Document</name></name><parameter_list pos:line="253" pos:column="26">()</parameter_list>;</destructor_decl>

	<function_decl><type><name pos:line="255" pos:column="9">int</name></type> <name pos:line="255" pos:column="13">AddRef</name><parameter_list pos:line="255" pos:column="19">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="256" pos:column="9">int</name></type> <name pos:line="256" pos:column="13">Release</name><parameter_list pos:line="256" pos:column="20">()</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="258" pos:column="9">virtual</specifier> <name pos:line="258" pos:column="17">void</name></type> <name pos:line="258" pos:column="22">Init</name><parameter_list pos:line="258" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="259" pos:column="9">virtual</specifier> <name pos:line="259" pos:column="17">void</name></type> <name pos:line="259" pos:column="22">InsertLine</name><parameter_list pos:line="259" pos:column="32">(<param><decl><type><name pos:line="259" pos:column="33">int</name></type> <name pos:line="259" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="260" pos:column="9">virtual</specifier> <name pos:line="260" pos:column="17">void</name></type> <name pos:line="260" pos:column="22">RemoveLine</name><parameter_list pos:line="260" pos:column="32">(<param><decl><type><name pos:line="260" pos:column="33">int</name></type> <name pos:line="260" pos:column="37">line</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="262" pos:column="9">int</name> <name pos:line="262" pos:column="13">SCI_METHOD</name></type> <name pos:line="262" pos:column="24">Version</name><parameter_list pos:line="262" pos:column="31">()</parameter_list> <specifier pos:line="262" pos:column="34">const</specifier> <block pos:line="262" pos:column="40">{
		<return pos:line="263" pos:column="17">return <expr><name pos:line="263" pos:column="24">dvOriginal</name></expr>;</return>
	}</block></function>

	<function_decl><type><name pos:line="266" pos:column="9">void</name> <name pos:line="266" pos:column="14">SCI_METHOD</name></type> <name pos:line="266" pos:column="25">SetErrorStatus</name><parameter_list pos:line="266" pos:column="39">(<param><decl><type><name pos:line="266" pos:column="40">int</name></type> <name pos:line="266" pos:column="44">status</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="268" pos:column="9">int</name> <name pos:line="268" pos:column="13">SCI_METHOD</name></type> <name pos:line="268" pos:column="24">LineFromPosition</name><parameter_list pos:line="268" pos:column="40">(<param><decl><type><name pos:line="268" pos:column="41">int</name></type> <name pos:line="268" pos:column="45">pos</name></decl></param>)</parameter_list> <specifier pos:line="268" pos:column="50">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="269" pos:column="9">int</name></type> <name pos:line="269" pos:column="13">ClampPositionIntoDocument</name><parameter_list pos:line="269" pos:column="38">(<param><decl><type><name pos:line="269" pos:column="39">int</name></type> <name pos:line="269" pos:column="43">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="270" pos:column="9">bool</name></type> <name pos:line="270" pos:column="14">IsCrLf</name><parameter_list pos:line="270" pos:column="20">(<param><decl><type><name pos:line="270" pos:column="21">int</name></type> <name pos:line="270" pos:column="25">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="271" pos:column="9">int</name></type> <name pos:line="271" pos:column="13">LenChar</name><parameter_list pos:line="271" pos:column="20">(<param><decl><type><name pos:line="271" pos:column="21">int</name></type> <name pos:line="271" pos:column="25">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="272" pos:column="9">bool</name></type> <name pos:line="272" pos:column="14">InGoodUTF8</name><parameter_list pos:line="272" pos:column="24">(<param><decl><type><name pos:line="272" pos:column="25">int</name></type> <name pos:line="272" pos:column="29">pos</name></decl></param>, <param><decl><type><name pos:line="272" pos:column="34">int</name> <type:modifier pos:line="272" pos:column="38">&amp;</type:modifier></type><name pos:line="272" pos:column="39">start</name></decl></param>, <param><decl><type><name pos:line="272" pos:column="46">int</name> <type:modifier pos:line="272" pos:column="50">&amp;</type:modifier></type><name pos:line="272" pos:column="51">end</name></decl></param>)</parameter_list> <specifier pos:line="272" pos:column="56">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="273" pos:column="9">int</name></type> <name pos:line="273" pos:column="13">MovePositionOutsideChar</name><parameter_list pos:line="273" pos:column="36">(<param><decl><type><name pos:line="273" pos:column="37">int</name></type> <name pos:line="273" pos:column="41">pos</name></decl></param>, <param><decl><type><name pos:line="273" pos:column="46">int</name></type> <name pos:line="273" pos:column="50">moveDir</name></decl></param>, <param><decl><type><name pos:line="273" pos:column="59">bool</name></type> <name pos:line="273" pos:column="64">checkLineEnd</name><init pos:line="273" pos:column="76">=<expr><lit:literal type="boolean" pos:line="273" pos:column="77">true</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="274" pos:column="9">int</name></type> <name pos:line="274" pos:column="13">NextPosition</name><parameter_list pos:line="274" pos:column="25">(<param><decl><type><name pos:line="274" pos:column="26">int</name></type> <name pos:line="274" pos:column="30">pos</name></decl></param>, <param><decl><type><name pos:line="274" pos:column="35">int</name></type> <name pos:line="274" pos:column="39">moveDir</name></decl></param>)</parameter_list> <specifier pos:line="274" pos:column="48">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="275" pos:column="9">bool</name></type> <name pos:line="275" pos:column="14">NextCharacter</name><parameter_list pos:line="275" pos:column="27">(<param><decl><type><name pos:line="275" pos:column="28">int</name> <type:modifier pos:line="275" pos:column="32">&amp;</type:modifier></type><name pos:line="275" pos:column="33">pos</name></decl></param>, <param><decl><type><name pos:line="275" pos:column="38">int</name></type> <name pos:line="275" pos:column="42">moveDir</name></decl></param>)</parameter_list>;</function_decl>	<comment type="line" pos:line="275" pos:column="57">// Returns true if pos changed</comment>
	<function_decl><type><name pos:line="276" pos:column="9">int</name> <name pos:line="276" pos:column="13">SCI_METHOD</name></type> <name pos:line="276" pos:column="24">CodePage</name><parameter_list pos:line="276" pos:column="32">()</parameter_list> <specifier pos:line="276" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="277" pos:column="9">bool</name> <name pos:line="277" pos:column="14">SCI_METHOD</name></type> <name pos:line="277" pos:column="25">IsDBCSLeadByte</name><parameter_list pos:line="277" pos:column="39">(<param><decl><type><name pos:line="277" pos:column="40">char</name></type> <name pos:line="277" pos:column="45">ch</name></decl></param>)</parameter_list> <specifier pos:line="277" pos:column="49">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="278" pos:column="9">int</name></type> <name pos:line="278" pos:column="13">SafeSegment</name><parameter_list pos:line="278" pos:column="24">(<param><decl><type><specifier pos:line="278" pos:column="25">const</specifier> <name pos:line="278" pos:column="31">char</name> <type:modifier pos:line="278" pos:column="36">*</type:modifier></type><name pos:line="278" pos:column="37">text</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="43">int</name></type> <name pos:line="278" pos:column="47">length</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="55">int</name></type> <name pos:line="278" pos:column="59">lengthSegment</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="280" pos:column="9">// Gateways to modifying document</comment>
	<function_decl><type><name pos:line="281" pos:column="9">void</name></type> <name pos:line="281" pos:column="14">ModifiedAt</name><parameter_list pos:line="281" pos:column="24">(<param><decl><type><name pos:line="281" pos:column="25">int</name></type> <name pos:line="281" pos:column="29">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="282" pos:column="9">void</name></type> <name pos:line="282" pos:column="14">CheckReadOnly</name><parameter_list pos:line="282" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="283" pos:column="9">bool</name></type> <name pos:line="283" pos:column="14">DeleteChars</name><parameter_list pos:line="283" pos:column="25">(<param><decl><type><name pos:line="283" pos:column="26">int</name></type> <name pos:line="283" pos:column="30">pos</name></decl></param>, <param><decl><type><name pos:line="283" pos:column="35">int</name></type> <name pos:line="283" pos:column="39">len</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="284" pos:column="9">bool</name></type> <name pos:line="284" pos:column="14">InsertString</name><parameter_list pos:line="284" pos:column="26">(<param><decl><type><name pos:line="284" pos:column="27">int</name></type> <name pos:line="284" pos:column="31">position</name></decl></param>, <param><decl><type><specifier pos:line="284" pos:column="41">const</specifier> <name pos:line="284" pos:column="47">char</name> <type:modifier pos:line="284" pos:column="52">*</type:modifier></type><name pos:line="284" pos:column="53">s</name></decl></param>, <param><decl><type><name pos:line="284" pos:column="56">int</name></type> <name pos:line="284" pos:column="60">insertLength</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="285" pos:column="9">int</name></type> <name pos:line="285" pos:column="13">Undo</name><parameter_list pos:line="285" pos:column="17">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="286" pos:column="9">int</name></type> <name pos:line="286" pos:column="13">Redo</name><parameter_list pos:line="286" pos:column="17">()</parameter_list>;</function_decl>
	<function><type><name pos:line="287" pos:column="9">bool</name></type> <name pos:line="287" pos:column="14">CanUndo</name><parameter_list pos:line="287" pos:column="21">()</parameter_list> <block pos:line="287" pos:column="24">{ <return pos:line="287" pos:column="26">return <expr><call><name><name pos:line="287" pos:column="33">cb</name><op:operator pos:line="287" pos:column="35">.</op:operator><name pos:line="287" pos:column="36">CanUndo</name></name><argument_list pos:line="287" pos:column="43">()</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="288" pos:column="9">bool</name></type> <name pos:line="288" pos:column="14">CanRedo</name><parameter_list pos:line="288" pos:column="21">()</parameter_list> <block pos:line="288" pos:column="24">{ <return pos:line="288" pos:column="26">return <expr><call><name><name pos:line="288" pos:column="33">cb</name><op:operator pos:line="288" pos:column="35">.</op:operator><name pos:line="288" pos:column="36">CanRedo</name></name><argument_list pos:line="288" pos:column="43">()</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="289" pos:column="9">void</name></type> <name pos:line="289" pos:column="14">DeleteUndoHistory</name><parameter_list pos:line="289" pos:column="31">()</parameter_list> <block pos:line="289" pos:column="34">{ <expr_stmt><expr><call><name><name pos:line="289" pos:column="36">cb</name><op:operator pos:line="289" pos:column="38">.</op:operator><name pos:line="289" pos:column="39">DeleteUndoHistory</name></name><argument_list pos:line="289" pos:column="56">()</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function><type><name pos:line="290" pos:column="9">bool</name></type> <name pos:line="290" pos:column="14">SetUndoCollection</name><parameter_list pos:line="290" pos:column="31">(<param><decl><type><name pos:line="290" pos:column="32">bool</name></type> <name pos:line="290" pos:column="37">collectUndo</name></decl></param>)</parameter_list> <block pos:line="290" pos:column="50">{
		<return pos:line="291" pos:column="17">return <expr><call><name><name pos:line="291" pos:column="24">cb</name><op:operator pos:line="291" pos:column="26">.</op:operator><name pos:line="291" pos:column="27">SetUndoCollection</name></name><argument_list pos:line="291" pos:column="44">(<argument><expr><name pos:line="291" pos:column="45">collectUndo</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
	<function><type><name pos:line="293" pos:column="9">bool</name></type> <name pos:line="293" pos:column="14">IsCollectingUndo</name><parameter_list pos:line="293" pos:column="30">()</parameter_list> <block pos:line="293" pos:column="33">{ <return pos:line="293" pos:column="35">return <expr><call><name><name pos:line="293" pos:column="42">cb</name><op:operator pos:line="293" pos:column="44">.</op:operator><name pos:line="293" pos:column="45">IsCollectingUndo</name></name><argument_list pos:line="293" pos:column="61">()</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="294" pos:column="9">void</name></type> <name pos:line="294" pos:column="14">BeginUndoAction</name><parameter_list pos:line="294" pos:column="29">()</parameter_list> <block pos:line="294" pos:column="32">{ <expr_stmt><expr><call><name><name pos:line="294" pos:column="34">cb</name><op:operator pos:line="294" pos:column="36">.</op:operator><name pos:line="294" pos:column="37">BeginUndoAction</name></name><argument_list pos:line="294" pos:column="52">()</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function><type><name pos:line="295" pos:column="9">void</name></type> <name pos:line="295" pos:column="14">EndUndoAction</name><parameter_list pos:line="295" pos:column="27">()</parameter_list> <block pos:line="295" pos:column="30">{ <expr_stmt><expr><call><name><name pos:line="295" pos:column="32">cb</name><op:operator pos:line="295" pos:column="34">.</op:operator><name pos:line="295" pos:column="35">EndUndoAction</name></name><argument_list pos:line="295" pos:column="48">()</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function><type><name pos:line="296" pos:column="9">void</name></type> <name pos:line="296" pos:column="14">AddUndoAction</name><parameter_list pos:line="296" pos:column="27">(<param><decl><type><name pos:line="296" pos:column="28">int</name></type> <name pos:line="296" pos:column="32">token</name></decl></param>, <param><decl><type><name pos:line="296" pos:column="39">bool</name></type> <name pos:line="296" pos:column="44">mayCoalesce</name></decl></param>)</parameter_list> <block pos:line="296" pos:column="57">{ <expr_stmt><expr><call><name><name pos:line="296" pos:column="59">cb</name><op:operator pos:line="296" pos:column="61">.</op:operator><name pos:line="296" pos:column="62">AddUndoAction</name></name><argument_list pos:line="296" pos:column="75">(<argument><expr><name pos:line="296" pos:column="76">token</name></expr></argument>, <argument><expr><name pos:line="296" pos:column="83">mayCoalesce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function_decl><type><name pos:line="297" pos:column="9">void</name></type> <name pos:line="297" pos:column="14">SetSavePoint</name><parameter_list pos:line="297" pos:column="26">()</parameter_list>;</function_decl>
	<function><type><name pos:line="298" pos:column="9">bool</name></type> <name pos:line="298" pos:column="14">IsSavePoint</name><parameter_list pos:line="298" pos:column="25">()</parameter_list> <block pos:line="298" pos:column="28">{ <return pos:line="298" pos:column="30">return <expr><call><name><name pos:line="298" pos:column="37">cb</name><op:operator pos:line="298" pos:column="39">.</op:operator><name pos:line="298" pos:column="40">IsSavePoint</name></name><argument_list pos:line="298" pos:column="51">()</argument_list></call></expr>;</return> }</block></function>
	<function><type><specifier pos:line="299" pos:column="9">const</specifier> <name pos:line="299" pos:column="15">char</name> <type:modifier pos:line="299" pos:column="20">*</type:modifier> <name pos:line="299" pos:column="22">SCI_METHOD</name></type> <name pos:line="299" pos:column="33">BufferPointer</name><parameter_list pos:line="299" pos:column="46">()</parameter_list> <block pos:line="299" pos:column="49">{ <return pos:line="299" pos:column="51">return <expr><call><name><name pos:line="299" pos:column="58">cb</name><op:operator pos:line="299" pos:column="60">.</op:operator><name pos:line="299" pos:column="61">BufferPointer</name></name><argument_list pos:line="299" pos:column="74">()</argument_list></call></expr>;</return> }</block></function>

	<function_decl><type><name pos:line="301" pos:column="9">int</name> <name pos:line="301" pos:column="13">SCI_METHOD</name></type> <name pos:line="301" pos:column="24">GetLineIndentation</name><parameter_list pos:line="301" pos:column="42">(<param><decl><type><name pos:line="301" pos:column="43">int</name></type> <name pos:line="301" pos:column="47">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="302" pos:column="9">void</name></type> <name pos:line="302" pos:column="14">SetLineIndentation</name><parameter_list pos:line="302" pos:column="32">(<param><decl><type><name pos:line="302" pos:column="33">int</name></type> <name pos:line="302" pos:column="37">line</name></decl></param>, <param><decl><type><name pos:line="302" pos:column="43">int</name></type> <name pos:line="302" pos:column="47">indent</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="303" pos:column="9">int</name></type> <name pos:line="303" pos:column="13">GetLineIndentPosition</name><parameter_list pos:line="303" pos:column="34">(<param><decl><type><name pos:line="303" pos:column="35">int</name></type> <name pos:line="303" pos:column="39">line</name></decl></param>)</parameter_list> <specifier pos:line="303" pos:column="45">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="304" pos:column="9">int</name></type> <name pos:line="304" pos:column="13">GetColumn</name><parameter_list pos:line="304" pos:column="22">(<param><decl><type><name pos:line="304" pos:column="23">int</name></type> <name pos:line="304" pos:column="27">position</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="305" pos:column="9">int</name></type> <name pos:line="305" pos:column="13">FindColumn</name><parameter_list pos:line="305" pos:column="23">(<param><decl><type><name pos:line="305" pos:column="24">int</name></type> <name pos:line="305" pos:column="28">line</name></decl></param>, <param><decl><type><name pos:line="305" pos:column="34">int</name></type> <name pos:line="305" pos:column="38">column</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="306" pos:column="9">void</name></type> <name pos:line="306" pos:column="14">Indent</name><parameter_list pos:line="306" pos:column="20">(<param><decl><type><name pos:line="306" pos:column="21">bool</name></type> <name pos:line="306" pos:column="26">forwards</name></decl></param>, <param><decl><type><name pos:line="306" pos:column="36">int</name></type> <name pos:line="306" pos:column="40">lineBottom</name></decl></param>, <param><decl><type><name pos:line="306" pos:column="52">int</name></type> <name pos:line="306" pos:column="56">lineTop</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="307" pos:column="9">static</specifier> <name pos:line="307" pos:column="16">char</name> <type:modifier pos:line="307" pos:column="21">*</type:modifier></type><name pos:line="307" pos:column="22">TransformLineEnds</name><parameter_list pos:line="307" pos:column="39">(<param><decl><type><name pos:line="307" pos:column="40">int</name> <type:modifier pos:line="307" pos:column="44">*</type:modifier></type><name pos:line="307" pos:column="45">pLenOut</name></decl></param>, <param><decl><type><specifier pos:line="307" pos:column="54">const</specifier> <name pos:line="307" pos:column="60">char</name> <type:modifier pos:line="307" pos:column="65">*</type:modifier></type><name pos:line="307" pos:column="66">s</name></decl></param>, <param><decl><type><name pos:line="307" pos:column="69">size_t</name></type> <name pos:line="307" pos:column="76">len</name></decl></param>, <param><decl><type><name pos:line="307" pos:column="81">int</name></type> <name pos:line="307" pos:column="85">eolMode</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="308" pos:column="9">void</name></type> <name pos:line="308" pos:column="14">ConvertLineEnds</name><parameter_list pos:line="308" pos:column="29">(<param><decl><type><name pos:line="308" pos:column="30">int</name></type> <name pos:line="308" pos:column="34">eolModeSet</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="309" pos:column="9">void</name></type> <name pos:line="309" pos:column="14">SetReadOnly</name><parameter_list pos:line="309" pos:column="25">(<param><decl><type><name pos:line="309" pos:column="26">bool</name></type> <name pos:line="309" pos:column="31">set</name></decl></param>)</parameter_list> <block pos:line="309" pos:column="36">{ <expr_stmt><expr><call><name><name pos:line="309" pos:column="38">cb</name><op:operator pos:line="309" pos:column="40">.</op:operator><name pos:line="309" pos:column="41">SetReadOnly</name></name><argument_list pos:line="309" pos:column="52">(<argument><expr><name pos:line="309" pos:column="53">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function><type><name pos:line="310" pos:column="9">bool</name></type> <name pos:line="310" pos:column="14">IsReadOnly</name><parameter_list pos:line="310" pos:column="24">()</parameter_list> <block pos:line="310" pos:column="27">{ <return pos:line="310" pos:column="29">return <expr><call><name><name pos:line="310" pos:column="36">cb</name><op:operator pos:line="310" pos:column="38">.</op:operator><name pos:line="310" pos:column="39">IsReadOnly</name></name><argument_list pos:line="310" pos:column="49">()</argument_list></call></expr>;</return> }</block></function>

	<function_decl><type><name pos:line="312" pos:column="9">bool</name></type> <name pos:line="312" pos:column="14">InsertChar</name><parameter_list pos:line="312" pos:column="24">(<param><decl><type><name pos:line="312" pos:column="25">int</name></type> <name pos:line="312" pos:column="29">pos</name></decl></param>, <param><decl><type><name pos:line="312" pos:column="34">char</name></type> <name pos:line="312" pos:column="39">ch</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="313" pos:column="9">bool</name></type> <name pos:line="313" pos:column="14">InsertCString</name><parameter_list pos:line="313" pos:column="27">(<param><decl><type><name pos:line="313" pos:column="28">int</name></type> <name pos:line="313" pos:column="32">position</name></decl></param>, <param><decl><type><specifier pos:line="313" pos:column="42">const</specifier> <name pos:line="313" pos:column="48">char</name> <type:modifier pos:line="313" pos:column="53">*</type:modifier></type><name pos:line="313" pos:column="54">s</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="314" pos:column="9">void</name></type> <name pos:line="314" pos:column="14">ChangeChar</name><parameter_list pos:line="314" pos:column="24">(<param><decl><type><name pos:line="314" pos:column="25">int</name></type> <name pos:line="314" pos:column="29">pos</name></decl></param>, <param><decl><type><name pos:line="314" pos:column="34">char</name></type> <name pos:line="314" pos:column="39">ch</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="315" pos:column="9">void</name></type> <name pos:line="315" pos:column="14">DelChar</name><parameter_list pos:line="315" pos:column="21">(<param><decl><type><name pos:line="315" pos:column="22">int</name></type> <name pos:line="315" pos:column="26">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="316" pos:column="9">void</name></type> <name pos:line="316" pos:column="14">DelCharBack</name><parameter_list pos:line="316" pos:column="25">(<param><decl><type><name pos:line="316" pos:column="26">int</name></type> <name pos:line="316" pos:column="30">pos</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="318" pos:column="9">char</name></type> <name pos:line="318" pos:column="14">CharAt</name><parameter_list pos:line="318" pos:column="20">(<param><decl><type><name pos:line="318" pos:column="21">int</name></type> <name pos:line="318" pos:column="25">position</name></decl></param>)</parameter_list> <block pos:line="318" pos:column="35">{ <return pos:line="318" pos:column="37">return <expr><call><name><name pos:line="318" pos:column="44">cb</name><op:operator pos:line="318" pos:column="46">.</op:operator><name pos:line="318" pos:column="47">CharAt</name></name><argument_list pos:line="318" pos:column="53">(<argument><expr><name pos:line="318" pos:column="54">position</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="319" pos:column="9">void</name> <name pos:line="319" pos:column="14">SCI_METHOD</name></type> <name pos:line="319" pos:column="25">GetCharRange</name><parameter_list pos:line="319" pos:column="37">(<param><decl><type><name pos:line="319" pos:column="38">char</name> <type:modifier pos:line="319" pos:column="43">*</type:modifier></type><name pos:line="319" pos:column="44">buffer</name></decl></param>, <param><decl><type><name pos:line="319" pos:column="52">int</name></type> <name pos:line="319" pos:column="56">position</name></decl></param>, <param><decl><type><name pos:line="319" pos:column="66">int</name></type> <name pos:line="319" pos:column="70">lengthRetrieve</name></decl></param>)</parameter_list> <specifier pos:line="319" pos:column="86">const</specifier> <block pos:line="319" pos:column="92">{
		<expr_stmt><expr><call><name><name pos:line="320" pos:column="17">cb</name><op:operator pos:line="320" pos:column="19">.</op:operator><name pos:line="320" pos:column="20">GetCharRange</name></name><argument_list pos:line="320" pos:column="32">(<argument><expr><name pos:line="320" pos:column="33">buffer</name></expr></argument>, <argument><expr><name pos:line="320" pos:column="41">position</name></expr></argument>, <argument><expr><name pos:line="320" pos:column="51">lengthRetrieve</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	<function><type><name pos:line="322" pos:column="9">char</name> <name pos:line="322" pos:column="14">SCI_METHOD</name></type> <name pos:line="322" pos:column="25">StyleAt</name><parameter_list pos:line="322" pos:column="32">(<param><decl><type><name pos:line="322" pos:column="33">int</name></type> <name pos:line="322" pos:column="37">position</name></decl></param>)</parameter_list> <specifier pos:line="322" pos:column="47">const</specifier> <block pos:line="322" pos:column="53">{ <return pos:line="322" pos:column="55">return <expr><call><name><name pos:line="322" pos:column="62">cb</name><op:operator pos:line="322" pos:column="64">.</op:operator><name pos:line="322" pos:column="65">StyleAt</name></name><argument_list pos:line="322" pos:column="72">(<argument><expr><name pos:line="322" pos:column="73">position</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="323" pos:column="9">void</name></type> <name pos:line="323" pos:column="14">GetStyleRange</name><parameter_list pos:line="323" pos:column="27">(<param><decl><type><name pos:line="323" pos:column="28">unsigned</name> <name pos:line="323" pos:column="37">char</name> <type:modifier pos:line="323" pos:column="42">*</type:modifier></type><name pos:line="323" pos:column="43">buffer</name></decl></param>, <param><decl><type><name pos:line="323" pos:column="51">int</name></type> <name pos:line="323" pos:column="55">position</name></decl></param>, <param><decl><type><name pos:line="323" pos:column="65">int</name></type> <name pos:line="323" pos:column="69">lengthRetrieve</name></decl></param>)</parameter_list> <specifier pos:line="323" pos:column="85">const</specifier> <block pos:line="323" pos:column="91">{
		<expr_stmt><expr><call><name><name pos:line="324" pos:column="17">cb</name><op:operator pos:line="324" pos:column="19">.</op:operator><name pos:line="324" pos:column="20">GetStyleRange</name></name><argument_list pos:line="324" pos:column="33">(<argument><expr><name pos:line="324" pos:column="34">buffer</name></expr></argument>, <argument><expr><name pos:line="324" pos:column="42">position</name></expr></argument>, <argument><expr><name pos:line="324" pos:column="52">lengthRetrieve</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	<function_decl><type><name pos:line="326" pos:column="9">int</name></type> <name pos:line="326" pos:column="13">GetMark</name><parameter_list pos:line="326" pos:column="20">(<param><decl><type><name pos:line="326" pos:column="21">int</name></type> <name pos:line="326" pos:column="25">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="327" pos:column="9">int</name></type> <name pos:line="327" pos:column="13">AddMark</name><parameter_list pos:line="327" pos:column="20">(<param><decl><type><name pos:line="327" pos:column="21">int</name></type> <name pos:line="327" pos:column="25">line</name></decl></param>, <param><decl><type><name pos:line="327" pos:column="31">int</name></type> <name pos:line="327" pos:column="35">markerNum</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="328" pos:column="9">void</name></type> <name pos:line="328" pos:column="14">AddMarkSet</name><parameter_list pos:line="328" pos:column="24">(<param><decl><type><name pos:line="328" pos:column="25">int</name></type> <name pos:line="328" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="328" pos:column="35">int</name></type> <name pos:line="328" pos:column="39">valueSet</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="329" pos:column="9">void</name></type> <name pos:line="329" pos:column="14">DeleteMark</name><parameter_list pos:line="329" pos:column="24">(<param><decl><type><name pos:line="329" pos:column="25">int</name></type> <name pos:line="329" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="329" pos:column="35">int</name></type> <name pos:line="329" pos:column="39">markerNum</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="330" pos:column="9">void</name></type> <name pos:line="330" pos:column="14">DeleteMarkFromHandle</name><parameter_list pos:line="330" pos:column="34">(<param><decl><type><name pos:line="330" pos:column="35">int</name></type> <name pos:line="330" pos:column="39">markerHandle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="331" pos:column="9">void</name></type> <name pos:line="331" pos:column="14">DeleteAllMarks</name><parameter_list pos:line="331" pos:column="28">(<param><decl><type><name pos:line="331" pos:column="29">int</name></type> <name pos:line="331" pos:column="33">markerNum</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="332" pos:column="9">int</name></type> <name pos:line="332" pos:column="13">LineFromHandle</name><parameter_list pos:line="332" pos:column="27">(<param><decl><type><name pos:line="332" pos:column="28">int</name></type> <name pos:line="332" pos:column="32">markerHandle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="333" pos:column="9">int</name> <name pos:line="333" pos:column="13">SCI_METHOD</name></type> <name pos:line="333" pos:column="24">LineStart</name><parameter_list pos:line="333" pos:column="33">(<param><decl><type><name pos:line="333" pos:column="34">int</name></type> <name pos:line="333" pos:column="38">line</name></decl></param>)</parameter_list> <specifier pos:line="333" pos:column="44">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="334" pos:column="9">int</name></type> <name pos:line="334" pos:column="13">LineEnd</name><parameter_list pos:line="334" pos:column="20">(<param><decl><type><name pos:line="334" pos:column="21">int</name></type> <name pos:line="334" pos:column="25">line</name></decl></param>)</parameter_list> <specifier pos:line="334" pos:column="31">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="335" pos:column="9">int</name></type> <name pos:line="335" pos:column="13">LineEndPosition</name><parameter_list pos:line="335" pos:column="28">(<param><decl><type><name pos:line="335" pos:column="29">int</name></type> <name pos:line="335" pos:column="33">position</name></decl></param>)</parameter_list> <specifier pos:line="335" pos:column="43">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="336" pos:column="9">bool</name></type> <name pos:line="336" pos:column="14">IsLineEndPosition</name><parameter_list pos:line="336" pos:column="31">(<param><decl><type><name pos:line="336" pos:column="32">int</name></type> <name pos:line="336" pos:column="36">position</name></decl></param>)</parameter_list> <specifier pos:line="336" pos:column="46">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="337" pos:column="9">int</name></type> <name pos:line="337" pos:column="13">VCHomePosition</name><parameter_list pos:line="337" pos:column="27">(<param><decl><type><name pos:line="337" pos:column="28">int</name></type> <name pos:line="337" pos:column="32">position</name></decl></param>)</parameter_list> <specifier pos:line="337" pos:column="42">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="339" pos:column="9">int</name> <name pos:line="339" pos:column="13">SCI_METHOD</name></type> <name pos:line="339" pos:column="24">SetLevel</name><parameter_list pos:line="339" pos:column="32">(<param><decl><type><name pos:line="339" pos:column="33">int</name></type> <name pos:line="339" pos:column="37">line</name></decl></param>, <param><decl><type><name pos:line="339" pos:column="43">int</name></type> <name pos:line="339" pos:column="47">level</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="340" pos:column="9">int</name> <name pos:line="340" pos:column="13">SCI_METHOD</name></type> <name pos:line="340" pos:column="24">GetLevel</name><parameter_list pos:line="340" pos:column="32">(<param><decl><type><name pos:line="340" pos:column="33">int</name></type> <name pos:line="340" pos:column="37">line</name></decl></param>)</parameter_list> <specifier pos:line="340" pos:column="43">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="341" pos:column="9">void</name></type> <name pos:line="341" pos:column="14">ClearLevels</name><parameter_list pos:line="341" pos:column="25">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="342" pos:column="9">int</name></type> <name pos:line="342" pos:column="13">GetLastChild</name><parameter_list pos:line="342" pos:column="25">(<param><decl><type><name pos:line="342" pos:column="26">int</name></type> <name pos:line="342" pos:column="30">lineParent</name></decl></param>, <param><decl><type><name pos:line="342" pos:column="42">int</name></type> <name pos:line="342" pos:column="46">level</name><init pos:line="342" pos:column="51">=<expr><op:operator pos:line="342" pos:column="52">-</op:operator><lit:literal type="number" pos:line="342" pos:column="53">1</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="343" pos:column="9">int</name></type> <name pos:line="343" pos:column="13">GetFoldParent</name><parameter_list pos:line="343" pos:column="26">(<param><decl><type><name pos:line="343" pos:column="27">int</name></type> <name pos:line="343" pos:column="31">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="344" pos:column="9">void</name></type> <name pos:line="344" pos:column="14">GetHighlightDelimiters</name><parameter_list pos:line="344" pos:column="36">(<param><decl><type><name pos:line="344" pos:column="37">HighlightDelimiter</name> <type:modifier pos:line="344" pos:column="56">&amp;</type:modifier></type><name pos:line="344" pos:column="57">hDelimiter</name></decl></param>, <param><decl><type><name pos:line="344" pos:column="69">int</name></type> <name pos:line="344" pos:column="73">line</name></decl></param>, <param><decl><type><name pos:line="344" pos:column="79">int</name></type> <name pos:line="344" pos:column="83">topLine</name></decl></param>, <param><decl><type><name pos:line="344" pos:column="92">int</name></type> <name pos:line="344" pos:column="96">bottomLine</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="346" pos:column="9">void</name></type> <name pos:line="346" pos:column="14">Indent</name><parameter_list pos:line="346" pos:column="20">(<param><decl><type><name pos:line="346" pos:column="21">bool</name></type> <name pos:line="346" pos:column="26">forwards</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="347" pos:column="9">int</name></type> <name pos:line="347" pos:column="13">ExtendWordSelect</name><parameter_list pos:line="347" pos:column="29">(<param><decl><type><name pos:line="347" pos:column="30">int</name></type> <name pos:line="347" pos:column="34">pos</name></decl></param>, <param><decl><type><name pos:line="347" pos:column="39">int</name></type> <name pos:line="347" pos:column="43">delta</name></decl></param>, <param><decl><type><name pos:line="347" pos:column="50">bool</name></type> <name pos:line="347" pos:column="55">onlyWordCharacters</name><init pos:line="347" pos:column="73">=<expr><lit:literal type="boolean" pos:line="347" pos:column="74">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="348" pos:column="9">int</name></type> <name pos:line="348" pos:column="13">NextWordStart</name><parameter_list pos:line="348" pos:column="26">(<param><decl><type><name pos:line="348" pos:column="27">int</name></type> <name pos:line="348" pos:column="31">pos</name></decl></param>, <param><decl><type><name pos:line="348" pos:column="36">int</name></type> <name pos:line="348" pos:column="40">delta</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="349" pos:column="9">int</name></type> <name pos:line="349" pos:column="13">NextWordEnd</name><parameter_list pos:line="349" pos:column="24">(<param><decl><type><name pos:line="349" pos:column="25">int</name></type> <name pos:line="349" pos:column="29">pos</name></decl></param>, <param><decl><type><name pos:line="349" pos:column="34">int</name></type> <name pos:line="349" pos:column="38">delta</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="350" pos:column="9">int</name> <name pos:line="350" pos:column="13">SCI_METHOD</name></type> <name pos:line="350" pos:column="24">Length</name><parameter_list pos:line="350" pos:column="30">()</parameter_list> <specifier pos:line="350" pos:column="33">const</specifier> <block pos:line="350" pos:column="39">{ <return pos:line="350" pos:column="41">return <expr><call><name><name pos:line="350" pos:column="48">cb</name><op:operator pos:line="350" pos:column="50">.</op:operator><name pos:line="350" pos:column="51">Length</name></name><argument_list pos:line="350" pos:column="57">()</argument_list></call></expr>;</return> }</block></function>
	<function><type><name pos:line="351" pos:column="9">void</name></type> <name pos:line="351" pos:column="14">Allocate</name><parameter_list pos:line="351" pos:column="22">(<param><decl><type><name pos:line="351" pos:column="23">int</name></type> <name pos:line="351" pos:column="27">newSize</name></decl></param>)</parameter_list> <block pos:line="351" pos:column="36">{ <expr_stmt><expr><call><name><name pos:line="351" pos:column="38">cb</name><op:operator pos:line="351" pos:column="40">.</op:operator><name pos:line="351" pos:column="41">Allocate</name></name><argument_list pos:line="351" pos:column="49">(<argument><expr><name pos:line="351" pos:column="50">newSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
	<function_decl><type><name pos:line="352" pos:column="9">size_t</name></type> <name pos:line="352" pos:column="16">ExtractChar</name><parameter_list pos:line="352" pos:column="27">(<param><decl><type><name pos:line="352" pos:column="28">int</name></type> <name pos:line="352" pos:column="32">pos</name></decl></param>, <param><decl><type><name pos:line="352" pos:column="37">char</name> <type:modifier pos:line="352" pos:column="42">*</type:modifier></type><name pos:line="352" pos:column="43">bytes</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="353" pos:column="9">bool</name></type> <name pos:line="353" pos:column="14">MatchesWordOptions</name><parameter_list pos:line="353" pos:column="32">(<param><decl><type><name pos:line="353" pos:column="33">bool</name></type> <name pos:line="353" pos:column="38">word</name></decl></param>, <param><decl><type><name pos:line="353" pos:column="44">bool</name></type> <name pos:line="353" pos:column="49">wordStart</name></decl></param>, <param><decl><type><name pos:line="353" pos:column="60">int</name></type> <name pos:line="353" pos:column="64">pos</name></decl></param>, <param><decl><type><name pos:line="353" pos:column="69">int</name></type> <name pos:line="353" pos:column="73">length</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="354" pos:column="9">long</name></type> <name pos:line="354" pos:column="14">FindText</name><parameter_list pos:line="354" pos:column="22">(<param><decl><type><name pos:line="354" pos:column="23">int</name></type> <name pos:line="354" pos:column="27">minPos</name></decl></param>, <param><decl><type><name pos:line="354" pos:column="35">int</name></type> <name pos:line="354" pos:column="39">maxPos</name></decl></param>, <param><decl><type><specifier pos:line="354" pos:column="47">const</specifier> <name pos:line="354" pos:column="53">char</name> <type:modifier pos:line="354" pos:column="58">*</type:modifier></type><name pos:line="354" pos:column="59">search</name></decl></param>, <param><decl><type><name pos:line="354" pos:column="67">bool</name></type> <name pos:line="354" pos:column="72">caseSensitive</name></decl></param>, <param><decl><type><name pos:line="354" pos:column="87">bool</name></type> <name pos:line="354" pos:column="92">word</name></decl></param>,
		<param><decl><type><name pos:line="355" pos:column="17">bool</name></type> <name pos:line="355" pos:column="22">wordStart</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="33">bool</name></type> <name pos:line="355" pos:column="38">regExp</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="46">int</name></type> <name pos:line="355" pos:column="50">flags</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="57">int</name> <type:modifier pos:line="355" pos:column="61">*</type:modifier></type><name pos:line="355" pos:column="62">length</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="70">CaseFolder</name> <type:modifier pos:line="355" pos:column="81">*</type:modifier></type><name pos:line="355" pos:column="82">pcf</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="356" pos:column="9">const</specifier> <name pos:line="356" pos:column="15">char</name> <type:modifier pos:line="356" pos:column="20">*</type:modifier></type><name pos:line="356" pos:column="21">SubstituteByPosition</name><parameter_list pos:line="356" pos:column="41">(<param><decl><type><specifier pos:line="356" pos:column="42">const</specifier> <name pos:line="356" pos:column="48">char</name> <type:modifier pos:line="356" pos:column="53">*</type:modifier></type><name pos:line="356" pos:column="54">text</name></decl></param>, <param><decl><type><name pos:line="356" pos:column="60">int</name> <type:modifier pos:line="356" pos:column="64">*</type:modifier></type><name pos:line="356" pos:column="65">length</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="357" pos:column="9">int</name></type> <name pos:line="357" pos:column="13">LinesTotal</name><parameter_list pos:line="357" pos:column="23">()</parameter_list> <specifier pos:line="357" pos:column="26">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="359" pos:column="9">void</name></type> <name pos:line="359" pos:column="14">ChangeCase</name><parameter_list pos:line="359" pos:column="24">(<param><decl><type><name pos:line="359" pos:column="25">Range</name></type> <name pos:line="359" pos:column="31">r</name></decl></param>, <param><decl><type><name pos:line="359" pos:column="34">bool</name></type> <name pos:line="359" pos:column="39">makeUpperCase</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="361" pos:column="9">void</name></type> <name pos:line="361" pos:column="14">SetDefaultCharClasses</name><parameter_list pos:line="361" pos:column="35">(<param><decl><type><name pos:line="361" pos:column="36">bool</name></type> <name pos:line="361" pos:column="41">includeWordClass</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="362" pos:column="9">void</name></type> <name pos:line="362" pos:column="14">SetCharClasses</name><parameter_list pos:line="362" pos:column="28">(<param><decl><type><specifier pos:line="362" pos:column="29">const</specifier> <name pos:line="362" pos:column="35">unsigned</name> <name pos:line="362" pos:column="44">char</name> <type:modifier pos:line="362" pos:column="49">*</type:modifier></type><name pos:line="362" pos:column="50">chars</name></decl></param>, <param><decl><type><name><name pos:line="362" pos:column="57">CharClassify</name><op:operator pos:line="362" pos:column="69">::</op:operator><name pos:line="362" pos:column="71">cc</name></name></type> <name pos:line="362" pos:column="74">newCharClass</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="363" pos:column="9">void</name></type> <name pos:line="363" pos:column="14">SetStylingBits</name><parameter_list pos:line="363" pos:column="28">(<param><decl><type><name pos:line="363" pos:column="29">int</name></type> <name pos:line="363" pos:column="33">bits</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="364" pos:column="9">void</name> <name pos:line="364" pos:column="14">SCI_METHOD</name></type> <name pos:line="364" pos:column="25">StartStyling</name><parameter_list pos:line="364" pos:column="37">(<param><decl><type><name pos:line="364" pos:column="38">int</name></type> <name pos:line="364" pos:column="42">position</name></decl></param>, <param><decl><type><name pos:line="364" pos:column="52">char</name></type> <name pos:line="364" pos:column="57">mask</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="365" pos:column="9">bool</name> <name pos:line="365" pos:column="14">SCI_METHOD</name></type> <name pos:line="365" pos:column="25">SetStyleFor</name><parameter_list pos:line="365" pos:column="36">(<param><decl><type><name pos:line="365" pos:column="37">int</name></type> <name pos:line="365" pos:column="41">length</name></decl></param>, <param><decl><type><name pos:line="365" pos:column="49">char</name></type> <name pos:line="365" pos:column="54">style</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="366" pos:column="9">bool</name> <name pos:line="366" pos:column="14">SCI_METHOD</name></type> <name pos:line="366" pos:column="25">SetStyles</name><parameter_list pos:line="366" pos:column="34">(<param><decl><type><name pos:line="366" pos:column="35">int</name></type> <name pos:line="366" pos:column="39">length</name></decl></param>, <param><decl><type><specifier pos:line="366" pos:column="47">const</specifier> <name pos:line="366" pos:column="53">char</name> <type:modifier pos:line="366" pos:column="58">*</type:modifier></type><name pos:line="366" pos:column="59">styles</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="367" pos:column="9">int</name></type> <name pos:line="367" pos:column="13">GetEndStyled</name><parameter_list pos:line="367" pos:column="25">()</parameter_list> <block pos:line="367" pos:column="28">{ <return pos:line="367" pos:column="30">return <expr><name pos:line="367" pos:column="37">endStyled</name></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="368" pos:column="9">void</name></type> <name pos:line="368" pos:column="14">EnsureStyledTo</name><parameter_list pos:line="368" pos:column="28">(<param><decl><type><name pos:line="368" pos:column="29">int</name></type> <name pos:line="368" pos:column="33">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="369" pos:column="9">void</name></type> <name pos:line="369" pos:column="14">LexerChanged</name><parameter_list pos:line="369" pos:column="26">()</parameter_list>;</function_decl>
	<function><type><name pos:line="370" pos:column="9">int</name></type> <name pos:line="370" pos:column="13">GetStyleClock</name><parameter_list pos:line="370" pos:column="26">()</parameter_list> <block pos:line="370" pos:column="29">{ <return pos:line="370" pos:column="31">return <expr><name pos:line="370" pos:column="38">styleClock</name></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="371" pos:column="9">void</name></type> <name pos:line="371" pos:column="14">IncrementStyleClock</name><parameter_list pos:line="371" pos:column="33">()</parameter_list>;</function_decl>
	<function><type><name pos:line="372" pos:column="9">void</name> <name pos:line="372" pos:column="14">SCI_METHOD</name></type> <name pos:line="372" pos:column="25">DecorationSetCurrentIndicator</name><parameter_list pos:line="372" pos:column="54">(<param><decl><type><name pos:line="372" pos:column="55">int</name></type> <name pos:line="372" pos:column="59">indicator</name></decl></param>)</parameter_list> <block pos:line="372" pos:column="70">{
		<expr_stmt><expr><call><name><name pos:line="373" pos:column="17">decorations</name><op:operator pos:line="373" pos:column="28">.</op:operator><name pos:line="373" pos:column="29">SetCurrentIndicator</name></name><argument_list pos:line="373" pos:column="48">(<argument><expr><name pos:line="373" pos:column="49">indicator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	<function_decl><type><name pos:line="375" pos:column="9">void</name> <name pos:line="375" pos:column="14">SCI_METHOD</name></type> <name pos:line="375" pos:column="25">DecorationFillRange</name><parameter_list pos:line="375" pos:column="44">(<param><decl><type><name pos:line="375" pos:column="45">int</name></type> <name pos:line="375" pos:column="49">position</name></decl></param>, <param><decl><type><name pos:line="375" pos:column="59">int</name></type> <name pos:line="375" pos:column="63">value</name></decl></param>, <param><decl><type><name pos:line="375" pos:column="70">int</name></type> <name pos:line="375" pos:column="74">fillLength</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="377" pos:column="9">int</name> <name pos:line="377" pos:column="13">SCI_METHOD</name></type> <name pos:line="377" pos:column="24">SetLineState</name><parameter_list pos:line="377" pos:column="36">(<param><decl><type><name pos:line="377" pos:column="37">int</name></type> <name pos:line="377" pos:column="41">line</name></decl></param>, <param><decl><type><name pos:line="377" pos:column="47">int</name></type> <name pos:line="377" pos:column="51">state</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="378" pos:column="9">int</name> <name pos:line="378" pos:column="13">SCI_METHOD</name></type> <name pos:line="378" pos:column="24">GetLineState</name><parameter_list pos:line="378" pos:column="36">(<param><decl><type><name pos:line="378" pos:column="37">int</name></type> <name pos:line="378" pos:column="41">line</name></decl></param>)</parameter_list> <specifier pos:line="378" pos:column="47">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="379" pos:column="9">int</name></type> <name pos:line="379" pos:column="13">GetMaxLineState</name><parameter_list pos:line="379" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="380" pos:column="9">void</name> <name pos:line="380" pos:column="14">SCI_METHOD</name></type> <name pos:line="380" pos:column="25">ChangeLexerState</name><parameter_list pos:line="380" pos:column="41">(<param><decl><type><name pos:line="380" pos:column="42">int</name></type> <name pos:line="380" pos:column="46">start</name></decl></param>, <param><decl><type><name pos:line="380" pos:column="53">int</name></type> <name pos:line="380" pos:column="57">end</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="382" pos:column="9">StyledText</name></type> <name pos:line="382" pos:column="20">MarginStyledText</name><parameter_list pos:line="382" pos:column="36">(<param><decl><type><name pos:line="382" pos:column="37">int</name></type> <name pos:line="382" pos:column="41">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="383" pos:column="9">void</name></type> <name pos:line="383" pos:column="14">MarginSetStyle</name><parameter_list pos:line="383" pos:column="28">(<param><decl><type><name pos:line="383" pos:column="29">int</name></type> <name pos:line="383" pos:column="33">line</name></decl></param>, <param><decl><type><name pos:line="383" pos:column="39">int</name></type> <name pos:line="383" pos:column="43">style</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="384" pos:column="9">void</name></type> <name pos:line="384" pos:column="14">MarginSetStyles</name><parameter_list pos:line="384" pos:column="29">(<param><decl><type><name pos:line="384" pos:column="30">int</name></type> <name pos:line="384" pos:column="34">line</name></decl></param>, <param><decl><type><specifier pos:line="384" pos:column="40">const</specifier> <name pos:line="384" pos:column="46">unsigned</name> <name pos:line="384" pos:column="55">char</name> <type:modifier pos:line="384" pos:column="60">*</type:modifier></type><name pos:line="384" pos:column="61">styles</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="385" pos:column="9">void</name></type> <name pos:line="385" pos:column="14">MarginSetText</name><parameter_list pos:line="385" pos:column="27">(<param><decl><type><name pos:line="385" pos:column="28">int</name></type> <name pos:line="385" pos:column="32">line</name></decl></param>, <param><decl><type><specifier pos:line="385" pos:column="38">const</specifier> <name pos:line="385" pos:column="44">char</name> <type:modifier pos:line="385" pos:column="49">*</type:modifier></type><name pos:line="385" pos:column="50">text</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="386" pos:column="9">int</name></type> <name pos:line="386" pos:column="13">MarginLength</name><parameter_list pos:line="386" pos:column="25">(<param><decl><type><name pos:line="386" pos:column="26">int</name></type> <name pos:line="386" pos:column="30">line</name></decl></param>)</parameter_list> <specifier pos:line="386" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="387" pos:column="9">void</name></type> <name pos:line="387" pos:column="14">MarginClearAll</name><parameter_list pos:line="387" pos:column="28">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="389" pos:column="9">bool</name></type> <name pos:line="389" pos:column="14">AnnotationAny</name><parameter_list pos:line="389" pos:column="27">()</parameter_list> <specifier pos:line="389" pos:column="30">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="390" pos:column="9">StyledText</name></type> <name pos:line="390" pos:column="20">AnnotationStyledText</name><parameter_list pos:line="390" pos:column="40">(<param><decl><type><name pos:line="390" pos:column="41">int</name></type> <name pos:line="390" pos:column="45">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="391" pos:column="9">void</name></type> <name pos:line="391" pos:column="14">AnnotationSetText</name><parameter_list pos:line="391" pos:column="31">(<param><decl><type><name pos:line="391" pos:column="32">int</name></type> <name pos:line="391" pos:column="36">line</name></decl></param>, <param><decl><type><specifier pos:line="391" pos:column="42">const</specifier> <name pos:line="391" pos:column="48">char</name> <type:modifier pos:line="391" pos:column="53">*</type:modifier></type><name pos:line="391" pos:column="54">text</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="392" pos:column="9">void</name></type> <name pos:line="392" pos:column="14">AnnotationSetStyle</name><parameter_list pos:line="392" pos:column="32">(<param><decl><type><name pos:line="392" pos:column="33">int</name></type> <name pos:line="392" pos:column="37">line</name></decl></param>, <param><decl><type><name pos:line="392" pos:column="43">int</name></type> <name pos:line="392" pos:column="47">style</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="393" pos:column="9">void</name></type> <name pos:line="393" pos:column="14">AnnotationSetStyles</name><parameter_list pos:line="393" pos:column="33">(<param><decl><type><name pos:line="393" pos:column="34">int</name></type> <name pos:line="393" pos:column="38">line</name></decl></param>, <param><decl><type><specifier pos:line="393" pos:column="44">const</specifier> <name pos:line="393" pos:column="50">unsigned</name> <name pos:line="393" pos:column="59">char</name> <type:modifier pos:line="393" pos:column="64">*</type:modifier></type><name pos:line="393" pos:column="65">styles</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="394" pos:column="9">int</name></type> <name pos:line="394" pos:column="13">AnnotationLength</name><parameter_list pos:line="394" pos:column="29">(<param><decl><type><name pos:line="394" pos:column="30">int</name></type> <name pos:line="394" pos:column="34">line</name></decl></param>)</parameter_list> <specifier pos:line="394" pos:column="40">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="395" pos:column="9">int</name></type> <name pos:line="395" pos:column="13">AnnotationLines</name><parameter_list pos:line="395" pos:column="28">(<param><decl><type><name pos:line="395" pos:column="29">int</name></type> <name pos:line="395" pos:column="33">line</name></decl></param>)</parameter_list> <specifier pos:line="395" pos:column="39">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="396" pos:column="9">void</name></type> <name pos:line="396" pos:column="14">AnnotationClearAll</name><parameter_list pos:line="396" pos:column="32">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="398" pos:column="9">bool</name></type> <name pos:line="398" pos:column="14">AddWatcher</name><parameter_list pos:line="398" pos:column="24">(<param><decl><type><name pos:line="398" pos:column="25">DocWatcher</name> <type:modifier pos:line="398" pos:column="36">*</type:modifier></type><name pos:line="398" pos:column="37">watcher</name></decl></param>, <param><decl><type><name pos:line="398" pos:column="46">void</name> <type:modifier pos:line="398" pos:column="51">*</type:modifier></type><name pos:line="398" pos:column="52">userData</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="399" pos:column="9">bool</name></type> <name pos:line="399" pos:column="14">RemoveWatcher</name><parameter_list pos:line="399" pos:column="27">(<param><decl><type><name pos:line="399" pos:column="28">DocWatcher</name> <type:modifier pos:line="399" pos:column="39">*</type:modifier></type><name pos:line="399" pos:column="40">watcher</name></decl></param>, <param><decl><type><name pos:line="399" pos:column="49">void</name> <type:modifier pos:line="399" pos:column="54">*</type:modifier></type><name pos:line="399" pos:column="55">userData</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><specifier pos:line="400" pos:column="9">const</specifier> <name pos:line="400" pos:column="15">WatcherWithUserData</name> <type:modifier pos:line="400" pos:column="35">*</type:modifier></type><name pos:line="400" pos:column="36">GetWatchers</name><parameter_list pos:line="400" pos:column="47">()</parameter_list> <specifier pos:line="400" pos:column="50">const</specifier> <block pos:line="400" pos:column="56">{ <return pos:line="400" pos:column="58">return <expr><name pos:line="400" pos:column="65">watchers</name></expr>;</return> }</block></function>
	<function><type><name pos:line="401" pos:column="9">int</name></type> <name pos:line="401" pos:column="13">GetLenWatchers</name><parameter_list pos:line="401" pos:column="27">()</parameter_list> <specifier pos:line="401" pos:column="30">const</specifier> <block pos:line="401" pos:column="36">{ <return pos:line="401" pos:column="38">return <expr><name pos:line="401" pos:column="45">lenWatchers</name></expr>;</return> }</block></function>

	<function_decl><type><name><name pos:line="403" pos:column="9">CharClassify</name><op:operator pos:line="403" pos:column="21">::</op:operator><name pos:line="403" pos:column="23">cc</name></name></type> <name pos:line="403" pos:column="26">WordCharClass</name><parameter_list pos:line="403" pos:column="39">(<param><decl><type><name pos:line="403" pos:column="40">unsigned</name> <name pos:line="403" pos:column="49">char</name></type> <name pos:line="403" pos:column="54">ch</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="404" pos:column="9">bool</name></type> <name pos:line="404" pos:column="14">IsWordPartSeparator</name><parameter_list pos:line="404" pos:column="33">(<param><decl><type><name pos:line="404" pos:column="34">char</name></type> <name pos:line="404" pos:column="39">ch</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="405" pos:column="9">int</name></type> <name pos:line="405" pos:column="13">WordPartLeft</name><parameter_list pos:line="405" pos:column="25">(<param><decl><type><name pos:line="405" pos:column="26">int</name></type> <name pos:line="405" pos:column="30">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="406" pos:column="9">int</name></type> <name pos:line="406" pos:column="13">WordPartRight</name><parameter_list pos:line="406" pos:column="26">(<param><decl><type><name pos:line="406" pos:column="27">int</name></type> <name pos:line="406" pos:column="31">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="407" pos:column="9">int</name></type> <name pos:line="407" pos:column="13">ExtendStyleRange</name><parameter_list pos:line="407" pos:column="29">(<param><decl><type><name pos:line="407" pos:column="30">int</name></type> <name pos:line="407" pos:column="34">pos</name></decl></param>, <param><decl><type><name pos:line="407" pos:column="39">int</name></type> <name pos:line="407" pos:column="43">delta</name></decl></param>, <param><decl><type><name pos:line="407" pos:column="50">bool</name></type> <name pos:line="407" pos:column="55">singleLine</name> <init pos:line="407" pos:column="66">= <expr><lit:literal type="boolean" pos:line="407" pos:column="68">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="408" pos:column="9">bool</name></type> <name pos:line="408" pos:column="14">IsWhiteLine</name><parameter_list pos:line="408" pos:column="25">(<param><decl><type><name pos:line="408" pos:column="26">int</name></type> <name pos:line="408" pos:column="30">line</name></decl></param>)</parameter_list> <specifier pos:line="408" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="409" pos:column="9">int</name></type> <name pos:line="409" pos:column="13">ParaUp</name><parameter_list pos:line="409" pos:column="19">(<param><decl><type><name pos:line="409" pos:column="20">int</name></type> <name pos:line="409" pos:column="24">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="410" pos:column="9">int</name></type> <name pos:line="410" pos:column="13">ParaDown</name><parameter_list pos:line="410" pos:column="21">(<param><decl><type><name pos:line="410" pos:column="22">int</name></type> <name pos:line="410" pos:column="26">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="411" pos:column="9">int</name></type> <name pos:line="411" pos:column="13">IndentSize</name><parameter_list pos:line="411" pos:column="23">()</parameter_list> <block pos:line="411" pos:column="26">{ <return pos:line="411" pos:column="28">return <expr><name pos:line="411" pos:column="35">actualIndentInChars</name></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="412" pos:column="9">int</name></type> <name pos:line="412" pos:column="13">BraceMatch</name><parameter_list pos:line="412" pos:column="23">(<param><decl><type><name pos:line="412" pos:column="24">int</name></type> <name pos:line="412" pos:column="28">position</name></decl></param>, <param><decl><type><name pos:line="412" pos:column="38">int</name></type> <name pos:line="412" pos:column="42">maxReStyle</name></decl></param>)</parameter_list>;</function_decl>

</public><private pos:line="414" pos:column="1">private:
	<function_decl><type><name pos:line="415" pos:column="9">bool</name></type> <name pos:line="415" pos:column="14">IsWordStartAt</name><parameter_list pos:line="415" pos:column="27">(<param><decl><type><name pos:line="415" pos:column="28">int</name></type> <name pos:line="415" pos:column="32">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="416" pos:column="9">bool</name></type> <name pos:line="416" pos:column="14">IsWordEndAt</name><parameter_list pos:line="416" pos:column="25">(<param><decl><type><name pos:line="416" pos:column="26">int</name></type> <name pos:line="416" pos:column="30">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="417" pos:column="9">bool</name></type> <name pos:line="417" pos:column="14">IsWordAt</name><parameter_list pos:line="417" pos:column="22">(<param><decl><type><name pos:line="417" pos:column="23">int</name></type> <name pos:line="417" pos:column="27">start</name></decl></param>, <param><decl><type><name pos:line="417" pos:column="34">int</name></type> <name pos:line="417" pos:column="38">end</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="419" pos:column="9">void</name></type> <name pos:line="419" pos:column="14">NotifyModifyAttempt</name><parameter_list pos:line="419" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="420" pos:column="9">void</name></type> <name pos:line="420" pos:column="14">NotifySavePoint</name><parameter_list pos:line="420" pos:column="29">(<param><decl><type><name pos:line="420" pos:column="30">bool</name></type> <name pos:line="420" pos:column="35">atSavePoint</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="421" pos:column="9">void</name></type> <name pos:line="421" pos:column="14">NotifyModified</name><parameter_list pos:line="421" pos:column="28">(<param><decl><type><name pos:line="421" pos:column="29">DocModification</name></type> <name pos:line="421" pos:column="45">mh</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<class pos:line="424" pos:column="1">class <name pos:line="424" pos:column="7">UndoGroup</name> <block pos:line="424" pos:column="17">{<private type="default" pos:line="424" pos:column="18">
	<decl_stmt><decl><type><name pos:line="425" pos:column="9">Document</name> <type:modifier pos:line="425" pos:column="18">*</type:modifier></type><name pos:line="425" pos:column="19">pdoc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="426" pos:column="9">bool</name></type> <name pos:line="426" pos:column="14">groupNeeded</name></decl>;</decl_stmt>
</private><public pos:line="427" pos:column="1">public:
	<constructor><name pos:line="428" pos:column="9">UndoGroup</name><parameter_list pos:line="428" pos:column="18">(<param><decl><type><name pos:line="428" pos:column="19">Document</name> <type:modifier pos:line="428" pos:column="28">*</type:modifier></type><name pos:line="428" pos:column="29">pdoc_</name></decl></param>, <param><decl><type><name pos:line="428" pos:column="36">bool</name></type> <name pos:line="428" pos:column="41">groupNeeded_</name><init pos:line="428" pos:column="53">=<expr><lit:literal type="boolean" pos:line="428" pos:column="54">true</lit:literal></expr></init></decl></param>)</parameter_list> <member_list pos:line="428" pos:column="60">:
		<call><name pos:line="429" pos:column="17">pdoc</name><argument_list pos:line="429" pos:column="21">(<argument><expr><name pos:line="429" pos:column="22">pdoc_</name></expr></argument>)</argument_list></call><op:operator pos:line="429" pos:column="28">,</op:operator> <call><name pos:line="429" pos:column="30">groupNeeded</name><argument_list pos:line="429" pos:column="41">(<argument><expr><name pos:line="429" pos:column="42">groupNeeded_</name></expr></argument>)</argument_list></call> </member_list><block pos:line="429" pos:column="56">{
		<if pos:line="430" pos:column="17">if <condition pos:line="430" pos:column="20">(<expr><name pos:line="430" pos:column="21">groupNeeded</name></expr>)</condition><then pos:line="430" pos:column="33"> <block pos:line="430" pos:column="34">{
			<expr_stmt><expr><call><name><name pos:line="431" pos:column="25">pdoc</name><op:operator pos:line="431" pos:column="29">-&gt;</op:operator><name pos:line="431" pos:column="31">BeginUndoAction</name></name><argument_list pos:line="431" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></constructor>
	<destructor><name pos:line="434" pos:column="9">~<name pos:line="434" pos:column="10">UndoGroup</name></name><parameter_list pos:line="434" pos:column="19">()</parameter_list> <block pos:line="434" pos:column="22">{
		<if pos:line="435" pos:column="17">if <condition pos:line="435" pos:column="20">(<expr><name pos:line="435" pos:column="21">groupNeeded</name></expr>)</condition><then pos:line="435" pos:column="33"> <block pos:line="435" pos:column="34">{
			<expr_stmt><expr><call><name><name pos:line="436" pos:column="25">pdoc</name><op:operator pos:line="436" pos:column="29">-&gt;</op:operator><name pos:line="436" pos:column="31">EndUndoAction</name></name><argument_list pos:line="436" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></destructor>
	<function><type><name pos:line="439" pos:column="9">bool</name></type> <name pos:line="439" pos:column="14">Needed</name><parameter_list pos:line="439" pos:column="20">()</parameter_list> <specifier pos:line="439" pos:column="23">const</specifier> <block pos:line="439" pos:column="29">{
		<return pos:line="440" pos:column="17">return <expr><name pos:line="440" pos:column="24">groupNeeded</name></expr>;</return>
	}</block></function>
</public>}</block>;</class>


<comment type="block" format="doxygen" pos:line="445" pos:column="1">/**
 * To optimise processing of document modifications by DocWatchers, a hint is passed indicating the
 * scope of the change.
 * If the DocWatcher is a document view then this can be used to optimise screen updating.
 */</comment>
<class pos:line="450" pos:column="1">class <name pos:line="450" pos:column="7">DocModification</name> <block pos:line="450" pos:column="23">{<private type="default" pos:line="450" pos:column="24">
</private><public pos:line="451" pos:column="1">public:
  	<decl_stmt><decl><type><name pos:line="452" pos:column="9">int</name></type> <name pos:line="452" pos:column="13">modificationType</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="453" pos:column="9">int</name></type> <name pos:line="453" pos:column="13">position</name></decl>;</decl_stmt>
 	<decl_stmt><decl><type><name pos:line="454" pos:column="9">int</name></type> <name pos:line="454" pos:column="13">length</name></decl>;</decl_stmt>
 	<decl_stmt><decl><type><name pos:line="455" pos:column="9">int</name></type> <name pos:line="455" pos:column="13">linesAdded</name></decl>;</decl_stmt>	<comment type="block" format="doxygen" pos:line="455" pos:column="25">/**&lt; Negative if lines deleted. */</comment>
 	<decl_stmt><decl><type><specifier pos:line="456" pos:column="9">const</specifier> <name pos:line="456" pos:column="15">char</name> <type:modifier pos:line="456" pos:column="20">*</type:modifier></type><name pos:line="456" pos:column="21">text</name></decl>;</decl_stmt>	<comment type="block" format="doxygen" pos:line="456" pos:column="33">/**&lt; Only valid for changes to text, not for changes to style. */</comment>
 	<decl_stmt><decl><type><name pos:line="457" pos:column="9">int</name></type> <name pos:line="457" pos:column="13">line</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="458" pos:column="9">int</name></type> <name pos:line="458" pos:column="13">foldLevelNow</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="459" pos:column="9">int</name></type> <name pos:line="459" pos:column="13">foldLevelPrev</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="460" pos:column="9">int</name></type> <name pos:line="460" pos:column="13">annotationLinesAdded</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="461" pos:column="9">int</name></type> <name pos:line="461" pos:column="13">token</name></decl>;</decl_stmt>

	<macro><name pos:line="463" pos:column="9">DocModification</name><argument_list pos:line="463" pos:column="24">(<argument pos:line="463" pos:column="25">int modificationType_</argument>, <argument pos:line="463" pos:column="48">int position_=0</argument>, <argument pos:line="463" pos:column="65">int length_=0</argument>,
		<argument pos:line="464" pos:column="17">int linesAdded_=0</argument>, <argument pos:line="464" pos:column="36">const char *text_=0</argument>, <argument pos:line="464" pos:column="57">int line_=0</argument>)</argument_list></macro> :
		<constructor><name pos:line="465" pos:column="17">modificationType</name><parameter_list pos:line="465" pos:column="33">(<param><decl><type><name pos:line="465" pos:column="34">modificationType_</name></type></decl></param>)</parameter_list><op:operator pos:line="465" pos:column="52">,</op:operator>
		<name pos:line="466" pos:column="17">position</name>(<name pos:line="466" pos:column="26">position_</name></constructor></public>)</block><op:operator pos:line="466" pos:column="36">,</op:operator>
		<expr_stmt><expr><call><name pos:line="467" pos:column="17">length</name><argument_list pos:line="467" pos:column="23">(<argument><expr><name pos:line="467" pos:column="24">length_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="467" pos:column="32">,</op:operator>
		<expr><call><name pos:line="468" pos:column="17">linesAdded</name><argument_list pos:line="468" pos:column="27">(<argument><expr><name pos:line="468" pos:column="28">linesAdded_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="468" pos:column="40">,</op:operator>
		<expr><call><name pos:line="469" pos:column="17">text</name><argument_list pos:line="469" pos:column="21">(<argument><expr><name pos:line="469" pos:column="22">text_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="469" pos:column="28">,</op:operator>
		<expr><call><name pos:line="470" pos:column="17">line</name><argument_list pos:line="470" pos:column="21">(<argument><expr><name pos:line="470" pos:column="22">line_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="470" pos:column="28">,</op:operator>
		<expr><call><name pos:line="471" pos:column="17">foldLevelNow</name><argument_list pos:line="471" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="471" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="471" pos:column="32">,</op:operator>
		<expr><call><name pos:line="472" pos:column="17">foldLevelPrev</name><argument_list pos:line="472" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="472" pos:column="31">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="472" pos:column="33">,</op:operator>
		<expr><call><name pos:line="473" pos:column="17">annotationLinesAdded</name><argument_list pos:line="473" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="473" pos:column="38">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="473" pos:column="40">,</op:operator>
		<macro><name pos:line="474" pos:column="17">token</name><argument_list pos:line="474" pos:column="22">(<argument pos:line="474" pos:column="23">0</argument>)</argument_list></macro> <expr><block pos:line="474" pos:column="26">{}</block>

	<macro><name pos:line="476" pos:column="9">DocModification</name><argument_list pos:line="476" pos:column="24">(<argument pos:line="476" pos:column="25">int modificationType_</argument>, <argument pos:line="476" pos:column="48">const Action &amp;act</argument>, <argument pos:line="476" pos:column="67">int linesAdded_=0</argument>)</argument_list></macro> <op:operator pos:line="476" pos:column="86">:</op:operator>
		<call><name pos:line="477" pos:column="17">modificationType</name><argument_list pos:line="477" pos:column="33">(<argument><expr><name pos:line="477" pos:column="34">modificationType_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="477" pos:column="52">,</op:operator>
		<expr><call><name pos:line="478" pos:column="17">position</name><argument_list pos:line="478" pos:column="25">(<argument><expr><name><name pos:line="478" pos:column="26">act</name><op:operator pos:line="478" pos:column="29">.</op:operator><name pos:line="478" pos:column="30">position</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="478" pos:column="39">,</op:operator>
		<expr><call><name pos:line="479" pos:column="17">length</name><argument_list pos:line="479" pos:column="23">(<argument><expr><name><name pos:line="479" pos:column="24">act</name><op:operator pos:line="479" pos:column="27">.</op:operator><name pos:line="479" pos:column="28">lenData</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="479" pos:column="36">,</op:operator>
		<expr><call><name pos:line="480" pos:column="17">linesAdded</name><argument_list pos:line="480" pos:column="27">(<argument><expr><name pos:line="480" pos:column="28">linesAdded_</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="480" pos:column="40">,</op:operator>
		<expr><call><name pos:line="481" pos:column="17">text</name><argument_list pos:line="481" pos:column="21">(<argument><expr><name><name pos:line="481" pos:column="22">act</name><op:operator pos:line="481" pos:column="25">.</op:operator><name pos:line="481" pos:column="26">data</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="481" pos:column="31">,</op:operator>
		<expr><call><name pos:line="482" pos:column="17">line</name><argument_list pos:line="482" pos:column="21">(<argument><expr><lit:literal type="number" pos:line="482" pos:column="22">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="482" pos:column="24">,</op:operator>
		<expr><call><name pos:line="483" pos:column="17">foldLevelNow</name><argument_list pos:line="483" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="483" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="483" pos:column="32">,</op:operator>
		<expr><call><name pos:line="484" pos:column="17">foldLevelPrev</name><argument_list pos:line="484" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="484" pos:column="31">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="484" pos:column="33">,</op:operator>
		<expr><call><name pos:line="485" pos:column="17">annotationLinesAdded</name><argument_list pos:line="485" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="485" pos:column="38">0</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="485" pos:column="40">,</op:operator>
		<macro><name pos:line="486" pos:column="17">token</name><argument_list pos:line="486" pos:column="22">(<argument pos:line="486" pos:column="23">0</argument>)</argument_list></macro> <expr><block pos:line="486" pos:column="26">{}</block></expr></expr_stmt></class>
}</block></namespace><empty_stmt pos:line="487" pos:column="2">;</empty_stmt>

<comment type="block" format="doxygen" pos:line="489" pos:column="1">/**
 * A class that wants to receive notifications from a Document must be derived from DocWatcher
 * and implement the notification methods. It can then be added to the watcher list with AddWatcher.
 */</comment>
<class pos:line="493" pos:column="1">class <name pos:line="493" pos:column="7">DocWatcher</name> <block pos:line="493" pos:column="18">{<private type="default" pos:line="493" pos:column="19">
</private><public pos:line="494" pos:column="1">public:
	<destructor><specifier pos:line="495" pos:column="9">virtual</specifier> <name pos:line="495" pos:column="17">~<name pos:line="495" pos:column="18">DocWatcher</name></name><parameter_list pos:line="495" pos:column="28">()</parameter_list> <block pos:line="495" pos:column="31">{}</block></destructor>

	<function_decl><type><specifier pos:line="497" pos:column="9">virtual</specifier> <name pos:line="497" pos:column="17">void</name></type> <name pos:line="497" pos:column="22">NotifyModifyAttempt</name><parameter_list pos:line="497" pos:column="41">(<param><decl><type><name pos:line="497" pos:column="42">Document</name> <type:modifier pos:line="497" pos:column="51">*</type:modifier></type><name pos:line="497" pos:column="52">doc</name></decl></param>, <param><decl><type><name pos:line="497" pos:column="57">void</name> <type:modifier pos:line="497" pos:column="62">*</type:modifier></type><name pos:line="497" pos:column="63">userData</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="497" pos:column="75">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="498" pos:column="9">virtual</specifier> <name pos:line="498" pos:column="17">void</name></type> <name pos:line="498" pos:column="22">NotifySavePoint</name><parameter_list pos:line="498" pos:column="37">(<param><decl><type><name pos:line="498" pos:column="38">Document</name> <type:modifier pos:line="498" pos:column="47">*</type:modifier></type><name pos:line="498" pos:column="48">doc</name></decl></param>, <param><decl><type><name pos:line="498" pos:column="53">void</name> <type:modifier pos:line="498" pos:column="58">*</type:modifier></type><name pos:line="498" pos:column="59">userData</name></decl></param>, <param><decl><type><name pos:line="498" pos:column="69">bool</name></type> <name pos:line="498" pos:column="74">atSavePoint</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="498" pos:column="89">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="499" pos:column="9">virtual</specifier> <name pos:line="499" pos:column="17">void</name></type> <name pos:line="499" pos:column="22">NotifyModified</name><parameter_list pos:line="499" pos:column="36">(<param><decl><type><name pos:line="499" pos:column="37">Document</name> <type:modifier pos:line="499" pos:column="46">*</type:modifier></type><name pos:line="499" pos:column="47">doc</name></decl></param>, <param><decl><type><name pos:line="499" pos:column="52">DocModification</name></type> <name pos:line="499" pos:column="68">mh</name></decl></param>, <param><decl><type><name pos:line="499" pos:column="72">void</name> <type:modifier pos:line="499" pos:column="77">*</type:modifier></type><name pos:line="499" pos:column="78">userData</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="499" pos:column="90">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="500" pos:column="9">virtual</specifier> <name pos:line="500" pos:column="17">void</name></type> <name pos:line="500" pos:column="22">NotifyDeleted</name><parameter_list pos:line="500" pos:column="35">(<param><decl><type><name pos:line="500" pos:column="36">Document</name> <type:modifier pos:line="500" pos:column="45">*</type:modifier></type><name pos:line="500" pos:column="46">doc</name></decl></param>, <param><decl><type><name pos:line="500" pos:column="51">void</name> <type:modifier pos:line="500" pos:column="56">*</type:modifier></type><name pos:line="500" pos:column="57">userData</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="500" pos:column="69">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="501" pos:column="9">virtual</specifier> <name pos:line="501" pos:column="17">void</name></type> <name pos:line="501" pos:column="22">NotifyStyleNeeded</name><parameter_list pos:line="501" pos:column="39">(<param><decl><type><name pos:line="501" pos:column="40">Document</name> <type:modifier pos:line="501" pos:column="49">*</type:modifier></type><name pos:line="501" pos:column="50">doc</name></decl></param>, <param><decl><type><name pos:line="501" pos:column="55">void</name> <type:modifier pos:line="501" pos:column="60">*</type:modifier></type><name pos:line="501" pos:column="61">userData</name></decl></param>, <param><decl><type><name pos:line="501" pos:column="71">int</name></type> <name pos:line="501" pos:column="75">endPos</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="501" pos:column="85">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="502" pos:column="9">virtual</specifier> <name pos:line="502" pos:column="17">void</name></type> <name pos:line="502" pos:column="22">NotifyLexerChanged</name><parameter_list pos:line="502" pos:column="40">(<param><decl><type><name pos:line="502" pos:column="41">Document</name> <type:modifier pos:line="502" pos:column="50">*</type:modifier></type><name pos:line="502" pos:column="51">doc</name></decl></param>, <param><decl><type><name pos:line="502" pos:column="56">void</name> <type:modifier pos:line="502" pos:column="61">*</type:modifier></type><name pos:line="502" pos:column="62">userData</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="502" pos:column="74">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="503" pos:column="9">virtual</specifier> <name pos:line="503" pos:column="17">void</name></type> <name pos:line="503" pos:column="22">NotifyErrorOccurred</name><parameter_list pos:line="503" pos:column="41">(<param><decl><type><name pos:line="503" pos:column="42">Document</name> <type:modifier pos:line="503" pos:column="51">*</type:modifier></type><name pos:line="503" pos:column="52">doc</name></decl></param>, <param><decl><type><name pos:line="503" pos:column="57">void</name> <type:modifier pos:line="503" pos:column="62">*</type:modifier></type><name pos:line="503" pos:column="63">userData</name></decl></param>, <param><decl><type><name pos:line="503" pos:column="73">int</name></type> <name pos:line="503" pos:column="77">status</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="503" pos:column="87">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">ifdef</cpp:directive> <name pos:line="506" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}
<cpp:endif pos:line="508" pos:column="1">#<cpp:directive pos:line="508" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="510" pos:column="1">#<cpp:directive pos:line="510" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
