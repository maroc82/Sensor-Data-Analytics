<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\WindowsDlg\SizeableDlg.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"WindowsDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"WindowsDlgRc.h"</lit:literal></cpp:file></cpp:include>

<constructor><name><name pos:line="34" pos:column="1">SizeableDlg</name><op:operator pos:line="34" pos:column="12">::</op:operator><name pos:line="34" pos:column="14">SizeableDlg</name></name><parameter_list pos:line="34" pos:column="25">(<param><decl><type><name pos:line="34" pos:column="26">WINRECT</name><type:modifier pos:line="34" pos:column="33">*</type:modifier></type> <name pos:line="34" pos:column="35">pWinMap</name></decl></param>)</parameter_list>
	<member_list pos:line="35" pos:column="9">: <call><name pos:line="35" pos:column="11">MyBaseClass</name><argument_list pos:line="35" pos:column="22">()</argument_list></call><op:operator pos:line="35" pos:column="24">,</op:operator> <call><name pos:line="35" pos:column="26">_winMgr</name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">pWinMap</name></expr></argument>)</argument_list></call>
</member_list><block pos:line="36" pos:column="1">{
}</block></constructor>

<function><type><name pos:line="39" pos:column="1">BOOL</name></type> <name><name pos:line="39" pos:column="6">SizeableDlg</name><op:operator pos:line="39" pos:column="17">::</op:operator><name pos:line="39" pos:column="19">onInitDialog</name></name><parameter_list pos:line="39" pos:column="31">()</parameter_list>
<block pos:line="40" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="41" pos:column="9">_winMgr</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">InitToFitSizeFromCurrent</name></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name pos:line="41" pos:column="42">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="42" pos:column="9">_winMgr</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">CalcLayout</name></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="43" pos:column="9">_winMgr</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">SetWindowPositions</name></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="44" pos:column="9">//getClientRect(_rc);</comment>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">TRUE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="48" pos:column="1">void</name></type> <name><name pos:line="48" pos:column="6">SizeableDlg</name><op:operator pos:line="48" pos:column="17">::</op:operator><name pos:line="48" pos:column="19">onSize</name></name><parameter_list pos:line="48" pos:column="25">(<param><decl><type><name pos:line="48" pos:column="26">UINT</name></type></decl></param>, <param><decl><type><name pos:line="48" pos:column="32">int</name></type> <name pos:line="48" pos:column="36">cx</name></decl></param>, <param><decl><type><name pos:line="48" pos:column="40">int</name></type> <name pos:line="48" pos:column="44">cy</name></decl></param>)</parameter_list>
<block pos:line="49" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="50" pos:column="9">_winMgr</name><op:operator pos:line="50" pos:column="16">.</op:operator><name pos:line="50" pos:column="17">CalcLayout</name></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">cx</name></expr></argument>,<argument><expr><name pos:line="50" pos:column="31">cy</name></expr></argument>,<argument><expr><name pos:line="50" pos:column="34">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="51" pos:column="9">_winMgr</name><op:operator pos:line="51" pos:column="16">.</op:operator><name pos:line="51" pos:column="17">SetWindowPositions</name></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="54" pos:column="1">void</name></type> <name><name pos:line="54" pos:column="6">SizeableDlg</name><op:operator pos:line="54" pos:column="17">::</op:operator><name pos:line="54" pos:column="19">onGetMinMaxInfo</name></name><parameter_list pos:line="54" pos:column="34">(<param><decl><type><name pos:line="54" pos:column="35">MINMAXINFO</name><type:modifier pos:line="54" pos:column="45">*</type:modifier></type> <name pos:line="54" pos:column="47">lpMMI</name></decl></param>)</parameter_list>
<block pos:line="55" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="56" pos:column="9">_winMgr</name><op:operator pos:line="56" pos:column="16">.</op:operator><name pos:line="56" pos:column="17">GetMinMaxInfo</name></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">lpMMI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="59" pos:column="1">LRESULT</name></type> <name><name pos:line="59" pos:column="9">SizeableDlg</name><op:operator pos:line="59" pos:column="20">::</op:operator><name pos:line="59" pos:column="22">onWinMgr</name></name><parameter_list pos:line="59" pos:column="30">(<param><decl><type><name pos:line="59" pos:column="31">WPARAM</name></type></decl></param>, <param><decl><type><name pos:line="59" pos:column="39">LPARAM</name></type></decl></param>)</parameter_list>
<block pos:line="60" pos:column="1">{
	<return pos:line="61" pos:column="9">return <expr><lit:literal type="number" pos:line="61" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="64" pos:column="1">BOOL</name> <name pos:line="64" pos:column="6">CALLBACK</name></type> <name><name pos:line="64" pos:column="15">SizeableDlg</name><op:operator pos:line="64" pos:column="26">::</op:operator><name pos:line="64" pos:column="28">run_dlgProc</name></name><parameter_list pos:line="64" pos:column="39">(<param><decl><type><name pos:line="64" pos:column="40">UINT</name></type> <name pos:line="64" pos:column="45">message</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="54">WPARAM</name></type> <name pos:line="64" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="69">LPARAM</name></type> <name pos:line="64" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="65" pos:column="1">{
	<switch pos:line="66" pos:column="9">switch <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="67" pos:column="9">{
	<case pos:line="68" pos:column="9">case <expr><name pos:line="68" pos:column="14">WM_INITDIALOG</name></expr> :
		<return pos:line="69" pos:column="17">return <expr><call><name pos:line="69" pos:column="24">onInitDialog</name><argument_list pos:line="69" pos:column="36">()</argument_list></call></expr>;</return>

	</case><case pos:line="71" pos:column="9">case <expr><name pos:line="71" pos:column="14">WM_GETMINMAXINFO</name></expr> :
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">onGetMinMaxInfo</name><argument_list pos:line="72" pos:column="32">(<argument><expr><op:operator pos:line="72" pos:column="33">(</op:operator><name pos:line="72" pos:column="34">MINMAXINFO</name><op:operator pos:line="72" pos:column="44">*</op:operator><op:operator pos:line="72" pos:column="45">)</op:operator><name pos:line="72" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">TRUE</name></expr>;</return>

	</case><case pos:line="75" pos:column="9">case <expr><name pos:line="75" pos:column="14">WM_SIZE</name></expr>:
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">onSize</name><argument_list pos:line="76" pos:column="23">(<argument><expr><name pos:line="76" pos:column="24">wParam</name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="32">LOWORD</name><argument_list pos:line="76" pos:column="38">(<argument><expr><name pos:line="76" pos:column="39">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="48">HIWORD</name><argument_list pos:line="76" pos:column="54">(<argument><expr><name pos:line="76" pos:column="55">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="77" pos:column="17">return <expr><name pos:line="77" pos:column="24">TRUE</name></expr>;</return>
	
	</case><default pos:line="79" pos:column="9">default:
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">message</name> <op:operator pos:line="80" pos:column="29">==</op:operator> <name pos:line="80" pos:column="32">WM_WINMGR</name></expr>)</condition><then pos:line="80" pos:column="42">
		<block pos:line="81" pos:column="17">{
			<return pos:line="82" pos:column="25">return <expr><op:operator pos:line="82" pos:column="32">(</op:operator><name pos:line="82" pos:column="33">BOOL</name><op:operator pos:line="82" pos:column="37">)</op:operator><call><name pos:line="82" pos:column="38">onWinMgr</name><argument_list pos:line="82" pos:column="46">(<argument><expr><name pos:line="82" pos:column="47">wParam</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="55">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></then></if>
		<break pos:line="84" pos:column="17">break;</break>
	</default>}</block></switch>
	<return pos:line="86" pos:column="9">return <expr><name pos:line="86" pos:column="16">FALSE</name></expr>;</return>
}</block></function></unit>
