<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\lexlib\LexerNoExceptions.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file LexerNoExceptions.h
 ** A simple lexer with no state.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2010 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">LexerNoExceptions_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">LexerNoExceptions_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="line" pos:line="15" pos:column="1">// A simple lexer with no state</comment>
<class pos:line="16" pos:column="1">class <name pos:line="16" pos:column="7">LexerNoExceptions</name> <super pos:line="16" pos:column="25">: <specifier pos:line="16" pos:column="27">public</specifier> <name pos:line="16" pos:column="34">LexerBase</name></super> <block pos:line="16" pos:column="44">{<private type="default" pos:line="16" pos:column="45">
</private><public pos:line="17" pos:column="1">public:
	<comment type="line" pos:line="18" pos:column="9">// TODO Also need to prevent exceptions in constructor and destructor</comment>
	<function_decl><type><name pos:line="19" pos:column="9">int</name> <name pos:line="19" pos:column="13">SCI_METHOD</name></type> <name pos:line="19" pos:column="24">PropertySet</name><parameter_list pos:line="19" pos:column="35">(<param><decl><type><specifier pos:line="19" pos:column="36">const</specifier> <name pos:line="19" pos:column="42">char</name> <type:modifier pos:line="19" pos:column="47">*</type:modifier></type><name pos:line="19" pos:column="48">key</name></decl></param>, <param><decl><type><specifier pos:line="19" pos:column="53">const</specifier> <name pos:line="19" pos:column="59">char</name> <type:modifier pos:line="19" pos:column="64">*</type:modifier></type><name pos:line="19" pos:column="65">val</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="20" pos:column="9">int</name> <name pos:line="20" pos:column="13">SCI_METHOD</name></type> <name pos:line="20" pos:column="24">WordListSet</name><parameter_list pos:line="20" pos:column="35">(<param><decl><type><name pos:line="20" pos:column="36">int</name></type> <name pos:line="20" pos:column="40">n</name></decl></param>, <param><decl><type><specifier pos:line="20" pos:column="43">const</specifier> <name pos:line="20" pos:column="49">char</name> <type:modifier pos:line="20" pos:column="54">*</type:modifier></type><name pos:line="20" pos:column="55">wl</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="21" pos:column="9">void</name> <name pos:line="21" pos:column="14">SCI_METHOD</name></type> <name pos:line="21" pos:column="25">Lex</name><parameter_list pos:line="21" pos:column="28">(<param><decl><type><name pos:line="21" pos:column="29">unsigned</name> <name pos:line="21" pos:column="38">int</name></type> <name pos:line="21" pos:column="42">startPos</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="52">int</name></type> <name pos:line="21" pos:column="56">lengthDoc</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="67">int</name></type> <name pos:line="21" pos:column="71">initStyle</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="82">IDocument</name> <type:modifier pos:line="21" pos:column="92">*</type:modifier></type><name pos:line="21" pos:column="93">pAccess</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="22" pos:column="9">void</name> <name pos:line="22" pos:column="14">SCI_METHOD</name></type> <name pos:line="22" pos:column="25">Fold</name><parameter_list pos:line="22" pos:column="29">(<param><decl><type><name pos:line="22" pos:column="30">unsigned</name> <name pos:line="22" pos:column="39">int</name></type> <name pos:line="22" pos:column="43">startPos</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="53">int</name></type> <name pos:line="22" pos:column="57">lengthDoc</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="68">int</name></type> <name pos:line="22" pos:column="72">initStyle</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="83">IDocument</name> <type:modifier pos:line="22" pos:column="93">*</type:modifier></type></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="24" pos:column="9">virtual</specifier> <name pos:line="24" pos:column="17">void</name></type> <name pos:line="24" pos:column="22">Lexer</name><parameter_list pos:line="24" pos:column="27">(<param><decl><type><name pos:line="24" pos:column="28">unsigned</name> <name pos:line="24" pos:column="37">int</name></type> <name pos:line="24" pos:column="41">startPos</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="51">int</name></type> <name pos:line="24" pos:column="55">length</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="63">int</name></type> <name pos:line="24" pos:column="67">initStyle</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="78">IDocument</name> <type:modifier pos:line="24" pos:column="88">*</type:modifier></type><name pos:line="24" pos:column="89">pAccess</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="98">Accessor</name> <type:modifier pos:line="24" pos:column="107">&amp;</type:modifier></type><name pos:line="24" pos:column="108">styler</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="24" pos:column="118">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="25" pos:column="9">virtual</specifier> <name pos:line="25" pos:column="17">void</name></type> <name pos:line="25" pos:column="22">Folder</name><parameter_list pos:line="25" pos:column="28">(<param><decl><type><name pos:line="25" pos:column="29">unsigned</name> <name pos:line="25" pos:column="38">int</name></type> <name pos:line="25" pos:column="42">startPos</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="52">int</name></type> <name pos:line="25" pos:column="56">length</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="64">int</name></type> <name pos:line="25" pos:column="68">initStyle</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="79">IDocument</name> <type:modifier pos:line="25" pos:column="89">*</type:modifier></type><name pos:line="25" pos:column="90">pAccess</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="99">Accessor</name> <type:modifier pos:line="25" pos:column="108">&amp;</type:modifier></type><name pos:line="25" pos:column="109">styler</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="25" pos:column="119">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef</cpp:directive> <name pos:line="28" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
