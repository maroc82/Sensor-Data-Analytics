<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\Indicator.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file Indicator.h
 ** Defines the style of indicators which are text decorations such as underlining.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2001 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">INDICATOR_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">INDICATOR_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="15" pos:column="1">/**
 */</comment>
<class pos:line="17" pos:column="1">class <name pos:line="17" pos:column="7">Indicator</name> <block pos:line="17" pos:column="17">{<private type="default" pos:line="17" pos:column="18">
</private><public pos:line="18" pos:column="1">public:
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int</name></type> <name pos:line="19" pos:column="13">style</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">bool</name></type> <name pos:line="20" pos:column="14">under</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">ColourPair</name></type> <name pos:line="21" pos:column="20">fore</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int</name></type> <name pos:line="22" pos:column="13">fillAlpha</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int</name></type> <name pos:line="23" pos:column="13">outlineAlpha</name></decl>;</decl_stmt>
	<constructor><name pos:line="24" pos:column="9">Indicator</name><parameter_list pos:line="24" pos:column="18">()</parameter_list> <member_list pos:line="24" pos:column="21">: <call><name pos:line="24" pos:column="23">style</name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">INDIC_PLAIN</name></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="41">,</op:operator> <call><name pos:line="24" pos:column="43">under</name><argument_list pos:line="24" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="24" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="55">,</op:operator> <call><name pos:line="24" pos:column="57">fore</name><argument_list pos:line="24" pos:column="61">(<argument><expr><call><name pos:line="24" pos:column="62">ColourDesired</name><argument_list pos:line="24" pos:column="75">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="76">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="78">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="24" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="83">,</op:operator> <call><name pos:line="24" pos:column="85">fillAlpha</name><argument_list pos:line="24" pos:column="94">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="95">30</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="98">,</op:operator> <call><name pos:line="24" pos:column="100">outlineAlpha</name><argument_list pos:line="24" pos:column="112">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="113">50</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="24" pos:column="117">{
	}</block></constructor>
	<function_decl><type><name pos:line="26" pos:column="9">void</name></type> <name pos:line="26" pos:column="14">Draw</name><parameter_list pos:line="26" pos:column="18">(<param><decl><type><name pos:line="26" pos:column="19">Surface</name> <type:modifier pos:line="26" pos:column="27">*</type:modifier></type><name pos:line="26" pos:column="28">surface</name></decl></param>, <param><decl><type><specifier pos:line="26" pos:column="37">const</specifier> <name pos:line="26" pos:column="43">PRectangle</name> <type:modifier pos:line="26" pos:column="54">&amp;</type:modifier></type><name pos:line="26" pos:column="55">rc</name></decl></param>, <param><decl><type><specifier pos:line="26" pos:column="59">const</specifier> <name pos:line="26" pos:column="65">PRectangle</name> <type:modifier pos:line="26" pos:column="76">&amp;</type:modifier></type><name pos:line="26" pos:column="77">rcLine</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef</cpp:directive> <name pos:line="29" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
