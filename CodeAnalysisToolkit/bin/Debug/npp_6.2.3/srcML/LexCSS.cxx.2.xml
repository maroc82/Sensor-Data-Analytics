<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\lexers\LexCSS.cxx" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file LexCSS.cxx
 ** Lexer for Cascading Style Sheets
 ** Written by Jakub Vr√°na
 ** Improved by Philippe Lhoste (CSS2)
 **/</comment>
<comment type="line" pos:line="7" pos:column="1">// Copyright 1998-2002 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="8" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include</cpp:directive> <cpp:file pos:line="10" pos:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include</cpp:directive> <cpp:file pos:line="11" pos:column="10">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include</cpp:directive> <cpp:file pos:line="12" pos:column="10">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include</cpp:directive> <cpp:file pos:line="13" pos:column="10">&lt;stdarg.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include</cpp:directive> <cpp:file pos:line="15" pos:column="10">&lt;ctype.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="17" pos:column="10">"ILexer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="18" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="19" pos:column="10">"SciLexer.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="21" pos:column="10">"WordList.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="22" pos:column="10">"LexAccessor.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="23" pos:column="10">"Accessor.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="24" pos:column="10">"StyleContext.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="25" pos:column="10">"CharacterSet.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="26" pos:column="10">"LexerModule.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef</cpp:directive> <name pos:line="28" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<using pos:line="29" pos:column="1">using namespace <name pos:line="29" pos:column="17">Scintilla</name>;</using>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif</cpp:directive></cpp:endif>


<function><type><specifier pos:line="33" pos:column="1">static</specifier> <specifier pos:line="33" pos:column="8">inline</specifier> <name pos:line="33" pos:column="15">bool</name></type> <name pos:line="33" pos:column="20">IsAWordChar</name><parameter_list pos:line="33" pos:column="31">(<param><decl><type><specifier pos:line="33" pos:column="32">const</specifier> <name pos:line="33" pos:column="38">unsigned</name> <name pos:line="33" pos:column="47">int</name></type> <name pos:line="33" pos:column="51">ch</name></decl></param>)</parameter_list> <block pos:line="33" pos:column="55">{
	<comment type="block" pos:line="34" pos:column="9">/* FIXME:
	 * The CSS spec allows "ISO 10646 characters U+00A1 and higher" to be treated as word chars.
	 * Unfortunately, we are only getting string bytes here, and not full unicode characters. We cannot guarantee
	 * that our byte is between U+0080 - U+00A0 (to return false), so we have to allow all characters U+0080 and higher
	 */</comment>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">ch</name> <op:operator pos:line="39" pos:column="19">&gt;=</op:operator> <lit:literal type="number" pos:line="39" pos:column="22">0x80</lit:literal> <op:operator pos:line="39" pos:column="27">||</op:operator> <call><name pos:line="39" pos:column="30">isalnum</name><argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">ch</name></expr></argument>)</argument_list></call> <op:operator pos:line="39" pos:column="42">||</op:operator> <name pos:line="39" pos:column="45">ch</name> <op:operator pos:line="39" pos:column="48">==</op:operator> <lit:literal type="char" pos:line="39" pos:column="51">'-'</lit:literal> <op:operator pos:line="39" pos:column="55">||</op:operator> <name pos:line="39" pos:column="58">ch</name> <op:operator pos:line="39" pos:column="61">==</op:operator> <lit:literal type="char" pos:line="39" pos:column="64">'_'</lit:literal></expr>;</return>
}</block></function>

<function><type><specifier pos:line="42" pos:column="1">inline</specifier> <name pos:line="42" pos:column="8">bool</name></type> <name pos:line="42" pos:column="13">IsCssOperator</name><parameter_list pos:line="42" pos:column="26">(<param><decl><type><specifier pos:line="42" pos:column="27">const</specifier> <name pos:line="42" pos:column="33">int</name></type> <name pos:line="42" pos:column="37">ch</name></decl></param>)</parameter_list> <block pos:line="42" pos:column="41">{
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><op:operator pos:line="43" pos:column="13">!</op:operator><op:operator pos:line="43" pos:column="14">(</op:operator><op:operator pos:line="43" pos:column="15">(</op:operator><name pos:line="43" pos:column="16">ch</name> <op:operator pos:line="43" pos:column="19">&lt;</op:operator> <lit:literal type="number" pos:line="43" pos:column="21">0x80</lit:literal><op:operator pos:line="43" pos:column="25">)</op:operator> <op:operator pos:line="43" pos:column="27">&amp;&amp;</op:operator> <call><name pos:line="43" pos:column="30">isalnum</name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">ch</name></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="41">)</op:operator> <op:operator pos:line="43" pos:column="43">&amp;&amp;</op:operator>
		<op:operator pos:line="44" pos:column="17">(</op:operator><name pos:line="44" pos:column="18">ch</name> <op:operator pos:line="44" pos:column="21">==</op:operator> <lit:literal type="char" pos:line="44" pos:column="24">'{'</lit:literal> <op:operator pos:line="44" pos:column="28">||</op:operator> <name pos:line="44" pos:column="31">ch</name> <op:operator pos:line="44" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="44" pos:column="37">'}'</lit:literal> <op:operator pos:line="44" pos:column="41">||</op:operator> <name pos:line="44" pos:column="44">ch</name> <op:operator pos:line="44" pos:column="47">==</op:operator> <lit:literal type="char" pos:line="44" pos:column="50">':'</lit:literal> <op:operator pos:line="44" pos:column="54">||</op:operator> <name pos:line="44" pos:column="57">ch</name> <op:operator pos:line="44" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="44" pos:column="63">','</lit:literal> <op:operator pos:line="44" pos:column="67">||</op:operator> <name pos:line="44" pos:column="70">ch</name> <op:operator pos:line="44" pos:column="73">==</op:operator> <lit:literal type="char" pos:line="44" pos:column="76">';'</lit:literal> <op:operator pos:line="44" pos:column="80">||</op:operator>
		 <name pos:line="45" pos:column="18">ch</name> <op:operator pos:line="45" pos:column="21">==</op:operator> <lit:literal type="char" pos:line="45" pos:column="24">'.'</lit:literal> <op:operator pos:line="45" pos:column="28">||</op:operator> <name pos:line="45" pos:column="31">ch</name> <op:operator pos:line="45" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="45" pos:column="37">'#'</lit:literal> <op:operator pos:line="45" pos:column="41">||</op:operator> <name pos:line="45" pos:column="44">ch</name> <op:operator pos:line="45" pos:column="47">==</op:operator> <lit:literal type="char" pos:line="45" pos:column="50">'!'</lit:literal> <op:operator pos:line="45" pos:column="54">||</op:operator> <name pos:line="45" pos:column="57">ch</name> <op:operator pos:line="45" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="45" pos:column="63">'@'</lit:literal> <op:operator pos:line="45" pos:column="67">||</op:operator>
		 <comment type="block" pos:line="46" pos:column="18">/* CSS2 */</comment>
		 <name pos:line="47" pos:column="18">ch</name> <op:operator pos:line="47" pos:column="21">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="24">'*'</lit:literal> <op:operator pos:line="47" pos:column="28">||</op:operator> <name pos:line="47" pos:column="31">ch</name> <op:operator pos:line="47" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="37">'&gt;'</lit:literal> <op:operator pos:line="47" pos:column="41">||</op:operator> <name pos:line="47" pos:column="44">ch</name> <op:operator pos:line="47" pos:column="47">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="50">'+'</lit:literal> <op:operator pos:line="47" pos:column="54">||</op:operator> <name pos:line="47" pos:column="57">ch</name> <op:operator pos:line="47" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="63">'='</lit:literal> <op:operator pos:line="47" pos:column="67">||</op:operator> <name pos:line="47" pos:column="70">ch</name> <op:operator pos:line="47" pos:column="73">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="76">'~'</lit:literal> <op:operator pos:line="47" pos:column="80">||</op:operator> <name pos:line="47" pos:column="83">ch</name> <op:operator pos:line="47" pos:column="86">==</op:operator> <lit:literal type="char" pos:line="47" pos:column="89">'|'</lit:literal> <op:operator pos:line="47" pos:column="93">||</op:operator>
		 <name pos:line="48" pos:column="18">ch</name> <op:operator pos:line="48" pos:column="21">==</op:operator> <lit:literal type="char" pos:line="48" pos:column="24">'['</lit:literal> <op:operator pos:line="48" pos:column="28">||</op:operator> <name pos:line="48" pos:column="31">ch</name> <op:operator pos:line="48" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="48" pos:column="37">']'</lit:literal> <op:operator pos:line="48" pos:column="41">||</op:operator> <name pos:line="48" pos:column="44">ch</name> <op:operator pos:line="48" pos:column="47">==</op:operator> <lit:literal type="char" pos:line="48" pos:column="50">'('</lit:literal> <op:operator pos:line="48" pos:column="54">||</op:operator> <name pos:line="48" pos:column="57">ch</name> <op:operator pos:line="48" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="48" pos:column="63">')'</lit:literal><op:operator pos:line="48" pos:column="66">)</op:operator></expr>)</condition><then pos:line="48" pos:column="68"> <block pos:line="48" pos:column="69">{
		<return pos:line="49" pos:column="17">return <expr><lit:literal type="boolean" pos:line="49" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="51" pos:column="9">return <expr><lit:literal type="boolean" pos:line="51" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><specifier pos:line="54" pos:column="1">static</specifier> <name pos:line="54" pos:column="8">void</name></type> <name pos:line="54" pos:column="13">ColouriseCssDoc</name><parameter_list pos:line="54" pos:column="28">(<param><decl><type><name pos:line="54" pos:column="29">unsigned</name> <name pos:line="54" pos:column="38">int</name></type> <name pos:line="54" pos:column="42">startPos</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="52">int</name></type> <name pos:line="54" pos:column="56">length</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="64">int</name></type> <name pos:line="54" pos:column="68">initStyle</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="79">WordList</name> <type:modifier pos:line="54" pos:column="88">*</type:modifier></type><name><name pos:line="54" pos:column="89">keywordlists</name><index pos:line="54" pos:column="101">[]</index></name></decl></param>, <param><decl><type><name pos:line="54" pos:column="105">Accessor</name> <type:modifier pos:line="54" pos:column="114">&amp;</type:modifier></type><name pos:line="54" pos:column="115">styler</name></decl></param>)</parameter_list> <block pos:line="54" pos:column="123">{
	<decl_stmt><decl><type><name pos:line="55" pos:column="9">WordList</name> <type:modifier pos:line="55" pos:column="18">&amp;</type:modifier></type><name pos:line="55" pos:column="19">css1Props</name> <init pos:line="55" pos:column="29">= <expr><op:operator pos:line="55" pos:column="31">*</op:operator><name><name pos:line="55" pos:column="32">keywordlists</name><index pos:line="55" pos:column="44">[<expr><lit:literal type="number" pos:line="55" pos:column="45">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="56" pos:column="9">WordList</name> <type:modifier pos:line="56" pos:column="18">&amp;</type:modifier></type><name pos:line="56" pos:column="19">pseudoClasses</name> <init pos:line="56" pos:column="33">= <expr><op:operator pos:line="56" pos:column="35">*</op:operator><name><name pos:line="56" pos:column="36">keywordlists</name><index pos:line="56" pos:column="48">[<expr><lit:literal type="number" pos:line="56" pos:column="49">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="57" pos:column="9">WordList</name> <type:modifier pos:line="57" pos:column="18">&amp;</type:modifier></type><name pos:line="57" pos:column="19">css2Props</name> <init pos:line="57" pos:column="29">= <expr><op:operator pos:line="57" pos:column="31">*</op:operator><name><name pos:line="57" pos:column="32">keywordlists</name><index pos:line="57" pos:column="44">[<expr><lit:literal type="number" pos:line="57" pos:column="45">2</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="58" pos:column="9">WordList</name> <type:modifier pos:line="58" pos:column="18">&amp;</type:modifier></type><name pos:line="58" pos:column="19">css3Props</name> <init pos:line="58" pos:column="29">= <expr><op:operator pos:line="58" pos:column="31">*</op:operator><name><name pos:line="58" pos:column="32">keywordlists</name><index pos:line="58" pos:column="44">[<expr><lit:literal type="number" pos:line="58" pos:column="45">3</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">WordList</name> <type:modifier pos:line="59" pos:column="18">&amp;</type:modifier></type><name pos:line="59" pos:column="19">pseudoElements</name> <init pos:line="59" pos:column="34">= <expr><op:operator pos:line="59" pos:column="36">*</op:operator><name><name pos:line="59" pos:column="37">keywordlists</name><index pos:line="59" pos:column="49">[<expr><lit:literal type="number" pos:line="59" pos:column="50">4</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">WordList</name> <type:modifier pos:line="60" pos:column="18">&amp;</type:modifier></type><name pos:line="60" pos:column="19">exProps</name> <init pos:line="60" pos:column="27">= <expr><op:operator pos:line="60" pos:column="29">*</op:operator><name><name pos:line="60" pos:column="30">keywordlists</name><index pos:line="60" pos:column="42">[<expr><lit:literal type="number" pos:line="60" pos:column="43">5</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">WordList</name> <type:modifier pos:line="61" pos:column="18">&amp;</type:modifier></type><name pos:line="61" pos:column="19">exPseudoClasses</name> <init pos:line="61" pos:column="35">= <expr><op:operator pos:line="61" pos:column="37">*</op:operator><name><name pos:line="61" pos:column="38">keywordlists</name><index pos:line="61" pos:column="50">[<expr><lit:literal type="number" pos:line="61" pos:column="51">6</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">WordList</name> <type:modifier pos:line="62" pos:column="18">&amp;</type:modifier></type><name pos:line="62" pos:column="19">exPseudoElements</name> <init pos:line="62" pos:column="36">= <expr><op:operator pos:line="62" pos:column="38">*</op:operator><name><name pos:line="62" pos:column="39">keywordlists</name><index pos:line="62" pos:column="51">[<expr><lit:literal type="number" pos:line="62" pos:column="52">7</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<function_decl><type><name pos:line="64" pos:column="9">StyleContext</name></type> <name pos:line="64" pos:column="22">sc</name><parameter_list pos:line="64" pos:column="24">(<param><decl><type><name pos:line="64" pos:column="25">startPos</name></type></decl></param>, <param><decl><type><name pos:line="64" pos:column="35">length</name></type></decl></param>, <param><decl><type><name pos:line="64" pos:column="43">initStyle</name></type></decl></param>, <param><decl><type><name pos:line="64" pos:column="54">styler</name></type></decl></param>)</parameter_list>;</function_decl>

	<decl_stmt><decl><type><name pos:line="66" pos:column="9">int</name></type> <name pos:line="66" pos:column="13">lastState</name> <init pos:line="66" pos:column="23">= <expr><op:operator pos:line="66" pos:column="25">-</op:operator><lit:literal type="number" pos:line="66" pos:column="26">1</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="66" pos:column="29">// before operator</comment>
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">int</name></type> <name pos:line="67" pos:column="13">lastStateC</name> <init pos:line="67" pos:column="24">= <expr><op:operator pos:line="67" pos:column="26">-</op:operator><lit:literal type="number" pos:line="67" pos:column="27">1</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="67" pos:column="30">// before comment</comment>
	<decl_stmt><decl><type><name pos:line="68" pos:column="9">int</name></type> <name pos:line="68" pos:column="13">lastStateS</name> <init pos:line="68" pos:column="24">= <expr><op:operator pos:line="68" pos:column="26">-</op:operator><lit:literal type="number" pos:line="68" pos:column="27">1</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="68" pos:column="30">// before single-quoted/double-quoted string</comment>
	<decl_stmt><decl><type><name pos:line="69" pos:column="9">int</name></type> <name pos:line="69" pos:column="13">op</name> <init pos:line="69" pos:column="16">= <expr><lit:literal type="char" pos:line="69" pos:column="18">' '</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="69" pos:column="23">// last operator</comment>
	<decl_stmt><decl><type><name pos:line="70" pos:column="9">int</name></type> <name pos:line="70" pos:column="13">opPrev</name> <init pos:line="70" pos:column="20">= <expr><lit:literal type="char" pos:line="70" pos:column="22">' '</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="70" pos:column="27">// last operator</comment>

	<for pos:line="72" pos:column="9">for (<init pos:line="72" pos:column="14">;</init> <condition><expr><call><name><name pos:line="72" pos:column="16">sc</name><op:operator pos:line="72" pos:column="18">.</op:operator><name pos:line="72" pos:column="19">More</name></name><argument_list pos:line="72" pos:column="23">()</argument_list></call></expr>;</condition> <incr><expr><call><name><name pos:line="72" pos:column="27">sc</name><op:operator pos:line="72" pos:column="29">.</op:operator><name pos:line="72" pos:column="30">Forward</name></name><argument_list pos:line="72" pos:column="37">()</argument_list></call></expr></incr>) <block pos:line="72" pos:column="41">{
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name><name pos:line="73" pos:column="21">sc</name><op:operator pos:line="73" pos:column="23">.</op:operator><name pos:line="73" pos:column="24">state</name></name> <op:operator pos:line="73" pos:column="30">==</op:operator> <name pos:line="73" pos:column="33">SCE_CSS_COMMENT</name> <op:operator pos:line="73" pos:column="49">&amp;&amp;</op:operator> <call><name><name pos:line="73" pos:column="52">sc</name><op:operator pos:line="73" pos:column="54">.</op:operator><name pos:line="73" pos:column="55">Match</name></name><argument_list pos:line="73" pos:column="60">(<argument><expr><lit:literal type="char" pos:line="73" pos:column="61">'*'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="73" pos:column="66">'/'</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="73" pos:column="71"> <block pos:line="73" pos:column="72">{
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">lastStateC</name> <op:operator pos:line="74" pos:column="40">==</op:operator> <op:operator pos:line="74" pos:column="43">-</op:operator><lit:literal type="number" pos:line="74" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="74" pos:column="46"> <block pos:line="74" pos:column="47">{
				<comment type="line" pos:line="75" pos:column="33">// backtrack to get last state:</comment>
				<comment type="line" pos:line="76" pos:column="33">// comments are like whitespace, so we must return to the previous state</comment>
				<decl_stmt><decl><type><name pos:line="77" pos:column="33">unsigned</name> <name pos:line="77" pos:column="42">int</name></type> <name pos:line="77" pos:column="46">i</name> <init pos:line="77" pos:column="48">= <expr><name pos:line="77" pos:column="50">startPos</name></expr></init></decl>;</decl_stmt>
				<for pos:line="78" pos:column="33">for (<init pos:line="78" pos:column="38">;</init> <condition><expr><name pos:line="78" pos:column="40">i</name> <op:operator pos:line="78" pos:column="42">&gt;</op:operator> <lit:literal type="number" pos:line="78" pos:column="44">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="78" pos:column="47">i</name><op:operator pos:line="78" pos:column="48">--</op:operator></expr></incr>) <block pos:line="78" pos:column="52">{
					<if pos:line="79" pos:column="41">if <condition pos:line="79" pos:column="44">(<expr><op:operator pos:line="79" pos:column="45">(</op:operator><name pos:line="79" pos:column="46">lastStateC</name> <op:operator pos:line="79" pos:column="57">=</op:operator> <call><name><name pos:line="79" pos:column="59">styler</name><op:operator pos:line="79" pos:column="65">.</op:operator><name pos:line="79" pos:column="66">StyleAt</name></name><argument_list pos:line="79" pos:column="73">(<argument><expr><name pos:line="79" pos:column="74">i</name><op:operator pos:line="79" pos:column="75">-</op:operator><lit:literal type="number" pos:line="79" pos:column="76">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="78">)</op:operator> <op:operator pos:line="79" pos:column="80">!=</op:operator> <name pos:line="79" pos:column="83">SCE_CSS_COMMENT</name></expr>)</condition><then pos:line="79" pos:column="99"> <block pos:line="79" pos:column="100">{
						<if pos:line="80" pos:column="49">if <condition pos:line="80" pos:column="52">(<expr><name pos:line="80" pos:column="53">lastStateC</name> <op:operator pos:line="80" pos:column="64">==</op:operator> <name pos:line="80" pos:column="67">SCE_CSS_OPERATOR</name></expr>)</condition><then pos:line="80" pos:column="84"> <block pos:line="80" pos:column="85">{
							<expr_stmt><expr><name pos:line="81" pos:column="57">op</name> <op:operator pos:line="81" pos:column="60">=</op:operator> <call><name><name pos:line="81" pos:column="62">styler</name><op:operator pos:line="81" pos:column="68">.</op:operator><name pos:line="81" pos:column="69">SafeGetCharAt</name></name><argument_list pos:line="81" pos:column="82">(<argument><expr><name pos:line="81" pos:column="83">i</name><op:operator pos:line="81" pos:column="84">-</op:operator><lit:literal type="number" pos:line="81" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="82" pos:column="57">opPrev</name> <op:operator pos:line="82" pos:column="64">=</op:operator> <call><name><name pos:line="82" pos:column="66">styler</name><op:operator pos:line="82" pos:column="72">.</op:operator><name pos:line="82" pos:column="73">SafeGetCharAt</name></name><argument_list pos:line="82" pos:column="86">(<argument><expr><name pos:line="82" pos:column="87">i</name><op:operator pos:line="82" pos:column="88">-</op:operator><lit:literal type="number" pos:line="82" pos:column="89">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<while pos:line="83" pos:column="57">while <condition pos:line="83" pos:column="63">(<expr><op:operator pos:line="83" pos:column="64">--</op:operator><name pos:line="83" pos:column="66">i</name></expr>)</condition> <block pos:line="83" pos:column="69">{
								<expr_stmt><expr><name pos:line="84" pos:column="65">lastState</name> <op:operator pos:line="84" pos:column="75">=</op:operator> <call><name><name pos:line="84" pos:column="77">styler</name><op:operator pos:line="84" pos:column="83">.</op:operator><name pos:line="84" pos:column="84">StyleAt</name></name><argument_list pos:line="84" pos:column="91">(<argument><expr><name pos:line="84" pos:column="92">i</name><op:operator pos:line="84" pos:column="93">-</op:operator><lit:literal type="number" pos:line="84" pos:column="94">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<if pos:line="85" pos:column="65">if <condition pos:line="85" pos:column="68">(<expr><name pos:line="85" pos:column="69">lastState</name> <op:operator pos:line="85" pos:column="79">!=</op:operator> <name pos:line="85" pos:column="82">SCE_CSS_OPERATOR</name> <op:operator pos:line="85" pos:column="99">&amp;&amp;</op:operator> <name pos:line="85" pos:column="102">lastState</name> <op:operator pos:line="85" pos:column="112">!=</op:operator> <name pos:line="85" pos:column="115">SCE_CSS_COMMENT</name></expr>)</condition><then pos:line="85" pos:column="131">
									<break pos:line="86" pos:column="73">break;</break></then></if>
							}</block></while>
							<if pos:line="88" pos:column="57">if <condition pos:line="88" pos:column="60">(<expr><name pos:line="88" pos:column="61">i</name> <op:operator pos:line="88" pos:column="63">==</op:operator> <lit:literal type="number" pos:line="88" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="88" pos:column="68">
								<expr_stmt><expr><name pos:line="89" pos:column="65">lastState</name> <op:operator pos:line="89" pos:column="75">=</op:operator> <name pos:line="89" pos:column="77">SCE_CSS_DEFAULT</name></expr>;</expr_stmt></then></if>
						}</block></then></if>
						<break pos:line="91" pos:column="49">break;</break>
					}</block></then></if>
				}</block></for>
				<if pos:line="94" pos:column="33">if <condition pos:line="94" pos:column="36">(<expr><name pos:line="94" pos:column="37">i</name> <op:operator pos:line="94" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="94" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="94" pos:column="44">
					<expr_stmt><expr><name pos:line="95" pos:column="41">lastStateC</name> <op:operator pos:line="95" pos:column="52">=</op:operator> <name pos:line="95" pos:column="54">SCE_CSS_DEFAULT</name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="97" pos:column="25">sc</name><op:operator pos:line="97" pos:column="27">.</op:operator><name pos:line="97" pos:column="28">Forward</name></name><argument_list pos:line="97" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="98" pos:column="25">sc</name><op:operator pos:line="98" pos:column="27">.</op:operator><name pos:line="98" pos:column="28">ForwardSetState</name></name><argument_list pos:line="98" pos:column="43">(<argument><expr><name pos:line="98" pos:column="44">lastStateC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><name><name pos:line="101" pos:column="21">sc</name><op:operator pos:line="101" pos:column="23">.</op:operator><name pos:line="101" pos:column="24">state</name></name> <op:operator pos:line="101" pos:column="30">==</op:operator> <name pos:line="101" pos:column="33">SCE_CSS_COMMENT</name></expr>)</condition><then pos:line="101" pos:column="49">
			<continue pos:line="102" pos:column="25">continue;</continue></then></if>

		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name><name pos:line="104" pos:column="21">sc</name><op:operator pos:line="104" pos:column="23">.</op:operator><name pos:line="104" pos:column="24">state</name></name> <op:operator pos:line="104" pos:column="30">==</op:operator> <name pos:line="104" pos:column="33">SCE_CSS_DOUBLESTRING</name> <op:operator pos:line="104" pos:column="54">||</op:operator> <name><name pos:line="104" pos:column="57">sc</name><op:operator pos:line="104" pos:column="59">.</op:operator><name pos:line="104" pos:column="60">state</name></name> <op:operator pos:line="104" pos:column="66">==</op:operator> <name pos:line="104" pos:column="69">SCE_CSS_SINGLESTRING</name></expr>)</condition><then pos:line="104" pos:column="90"> <block pos:line="104" pos:column="91">{
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><name><name pos:line="105" pos:column="29">sc</name><op:operator pos:line="105" pos:column="31">.</op:operator><name pos:line="105" pos:column="32">ch</name></name> <op:operator pos:line="105" pos:column="35">!=</op:operator> <op:operator pos:line="105" pos:column="38">(</op:operator><name><name pos:line="105" pos:column="39">sc</name><op:operator pos:line="105" pos:column="41">.</op:operator><name pos:line="105" pos:column="42">state</name></name> <op:operator pos:line="105" pos:column="48">==</op:operator> <name pos:line="105" pos:column="51">SCE_CSS_DOUBLESTRING</name> <op:operator pos:line="105" pos:column="72">?</op:operator> <lit:literal type="char" pos:line="105" pos:column="74">'\"'</lit:literal> <op:operator pos:line="105" pos:column="79">:</op:operator> <lit:literal type="char" pos:line="105" pos:column="81">'\''</lit:literal><op:operator pos:line="105" pos:column="85">)</op:operator></expr>)</condition><then pos:line="105" pos:column="87">
				<continue pos:line="106" pos:column="33">continue;</continue></then></if>
			<decl_stmt><decl><type><name pos:line="107" pos:column="25">unsigned</name> <name pos:line="107" pos:column="34">int</name></type> <name pos:line="107" pos:column="38">i</name> <init pos:line="107" pos:column="40">= <expr><name><name pos:line="107" pos:column="42">sc</name><op:operator pos:line="107" pos:column="44">.</op:operator><name pos:line="107" pos:column="45">currentPos</name></name></expr></init></decl>;</decl_stmt>
			<while pos:line="108" pos:column="25">while <condition pos:line="108" pos:column="31">(<expr><name pos:line="108" pos:column="32">i</name> <op:operator pos:line="108" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="108" pos:column="37">styler</name><index pos:line="108" pos:column="43">[<expr><name pos:line="108" pos:column="44">i</name><op:operator pos:line="108" pos:column="45">-</op:operator><lit:literal type="number" pos:line="108" pos:column="46">1</lit:literal></expr>]</index></name> <op:operator pos:line="108" pos:column="49">==</op:operator> <lit:literal type="char" pos:line="108" pos:column="52">'\\'</lit:literal></expr>)</condition>
				<expr_stmt><expr><name pos:line="109" pos:column="33">i</name><op:operator pos:line="109" pos:column="34">--</op:operator></expr>;</expr_stmt></while>
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><op:operator pos:line="110" pos:column="29">(</op:operator><name><name pos:line="110" pos:column="30">sc</name><op:operator pos:line="110" pos:column="32">.</op:operator><name pos:line="110" pos:column="33">currentPos</name></name> <op:operator pos:line="110" pos:column="44">-</op:operator> <name pos:line="110" pos:column="46">i</name><op:operator pos:line="110" pos:column="47">)</op:operator> <op:operator pos:line="110" pos:column="49">%</op:operator> <lit:literal type="number" pos:line="110" pos:column="51">2</lit:literal> <op:operator pos:line="110" pos:column="53">==</op:operator> <lit:literal type="number" pos:line="110" pos:column="56">1</lit:literal></expr>)</condition><then pos:line="110" pos:column="58">
				<continue pos:line="111" pos:column="33">continue;</continue></then></if>
			<expr_stmt><expr><call><name><name pos:line="112" pos:column="25">sc</name><op:operator pos:line="112" pos:column="27">.</op:operator><name pos:line="112" pos:column="28">ForwardSetState</name></name><argument_list pos:line="112" pos:column="43">(<argument><expr><name pos:line="112" pos:column="44">lastStateS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name><name pos:line="115" pos:column="21">sc</name><op:operator pos:line="115" pos:column="23">.</op:operator><name pos:line="115" pos:column="24">state</name></name> <op:operator pos:line="115" pos:column="30">==</op:operator> <name pos:line="115" pos:column="33">SCE_CSS_OPERATOR</name></expr>)</condition><then pos:line="115" pos:column="50"> <block pos:line="115" pos:column="51">{
			<if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><name pos:line="116" pos:column="29">op</name> <op:operator pos:line="116" pos:column="32">==</op:operator> <lit:literal type="char" pos:line="116" pos:column="35">' '</lit:literal></expr>)</condition><then pos:line="116" pos:column="39"> <block pos:line="116" pos:column="40">{
				<decl_stmt><decl><type><name pos:line="117" pos:column="33">unsigned</name> <name pos:line="117" pos:column="42">int</name></type> <name pos:line="117" pos:column="46">i</name> <init pos:line="117" pos:column="48">= <expr><name pos:line="117" pos:column="50">startPos</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="118" pos:column="33">op</name> <op:operator pos:line="118" pos:column="36">=</op:operator> <call><name><name pos:line="118" pos:column="38">styler</name><op:operator pos:line="118" pos:column="44">.</op:operator><name pos:line="118" pos:column="45">SafeGetCharAt</name></name><argument_list pos:line="118" pos:column="58">(<argument><expr><name pos:line="118" pos:column="59">i</name><op:operator pos:line="118" pos:column="60">-</op:operator><lit:literal type="number" pos:line="118" pos:column="61">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="119" pos:column="33">opPrev</name> <op:operator pos:line="119" pos:column="40">=</op:operator> <call><name><name pos:line="119" pos:column="42">styler</name><op:operator pos:line="119" pos:column="48">.</op:operator><name pos:line="119" pos:column="49">SafeGetCharAt</name></name><argument_list pos:line="119" pos:column="62">(<argument><expr><name pos:line="119" pos:column="63">i</name><op:operator pos:line="119" pos:column="64">-</op:operator><lit:literal type="number" pos:line="119" pos:column="65">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<while pos:line="120" pos:column="33">while <condition pos:line="120" pos:column="39">(<expr><op:operator pos:line="120" pos:column="40">--</op:operator><name pos:line="120" pos:column="42">i</name></expr>)</condition> <block pos:line="120" pos:column="45">{
					<expr_stmt><expr><name pos:line="121" pos:column="41">lastState</name> <op:operator pos:line="121" pos:column="51">=</op:operator> <call><name><name pos:line="121" pos:column="53">styler</name><op:operator pos:line="121" pos:column="59">.</op:operator><name pos:line="121" pos:column="60">StyleAt</name></name><argument_list pos:line="121" pos:column="67">(<argument><expr><name pos:line="121" pos:column="68">i</name><op:operator pos:line="121" pos:column="69">-</op:operator><lit:literal type="number" pos:line="121" pos:column="70">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="122" pos:column="41">if <condition pos:line="122" pos:column="44">(<expr><name pos:line="122" pos:column="45">lastState</name> <op:operator pos:line="122" pos:column="55">!=</op:operator> <name pos:line="122" pos:column="58">SCE_CSS_OPERATOR</name> <op:operator pos:line="122" pos:column="75">&amp;&amp;</op:operator> <name pos:line="122" pos:column="78">lastState</name> <op:operator pos:line="122" pos:column="88">!=</op:operator> <name pos:line="122" pos:column="91">SCE_CSS_COMMENT</name></expr>)</condition><then pos:line="122" pos:column="107">
						<break pos:line="123" pos:column="49">break;</break></then></if>
				}</block></while>
			}</block></then></if>
			<switch pos:line="126" pos:column="25">switch <condition pos:line="126" pos:column="32">(<expr><name pos:line="126" pos:column="33">op</name></expr>)</condition> <block pos:line="126" pos:column="37">{
			<case pos:line="127" pos:column="25">case <expr><lit:literal type="char" pos:line="127" pos:column="30">'@'</lit:literal></expr>:
				<if pos:line="128" pos:column="33">if <condition pos:line="128" pos:column="36">(<expr><name pos:line="128" pos:column="37">lastState</name> <op:operator pos:line="128" pos:column="47">==</op:operator> <name pos:line="128" pos:column="50">SCE_CSS_DEFAULT</name></expr>)</condition><then pos:line="128" pos:column="66">
					<expr_stmt><expr><call><name><name pos:line="129" pos:column="41">sc</name><op:operator pos:line="129" pos:column="43">.</op:operator><name pos:line="129" pos:column="44">SetState</name></name><argument_list pos:line="129" pos:column="52">(<argument><expr><name pos:line="129" pos:column="53">SCE_CSS_DIRECTIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="130" pos:column="33">break;</break>
			</case><case pos:line="131" pos:column="25">case <expr><lit:literal type="char" pos:line="131" pos:column="30">'&gt;'</lit:literal></expr>:
			</case><case pos:line="132" pos:column="25">case <expr><lit:literal type="char" pos:line="132" pos:column="30">'+'</lit:literal></expr>:
				<if pos:line="133" pos:column="33">if <condition pos:line="133" pos:column="36">(<expr><name pos:line="133" pos:column="37">lastState</name> <op:operator pos:line="133" pos:column="47">==</op:operator> <name pos:line="133" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="133" pos:column="62">||</op:operator> <name pos:line="133" pos:column="65">lastState</name> <op:operator pos:line="133" pos:column="75">==</op:operator> <name pos:line="133" pos:column="78">SCE_CSS_CLASS</name> <op:operator pos:line="133" pos:column="92">||</op:operator> <name pos:line="133" pos:column="95">lastState</name> <op:operator pos:line="133" pos:column="105">==</op:operator> <name pos:line="133" pos:column="108">SCE_CSS_ID</name> <op:operator pos:line="133" pos:column="119">||</op:operator>
					<name pos:line="134" pos:column="41">lastState</name> <op:operator pos:line="134" pos:column="51">==</op:operator> <name pos:line="134" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="134" pos:column="74">||</op:operator> <name pos:line="134" pos:column="77">lastState</name> <op:operator pos:line="134" pos:column="87">==</op:operator> <name pos:line="134" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="134" pos:column="119">||</op:operator> <name pos:line="134" pos:column="122">lastState</name> <op:operator pos:line="134" pos:column="132">==</op:operator> <name pos:line="134" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr>)</condition><then pos:line="134" pos:column="163">
					<expr_stmt><expr><call><name><name pos:line="135" pos:column="41">sc</name><op:operator pos:line="135" pos:column="43">.</op:operator><name pos:line="135" pos:column="44">SetState</name></name><argument_list pos:line="135" pos:column="52">(<argument><expr><name pos:line="135" pos:column="53">SCE_CSS_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="136" pos:column="33">break;</break>
			</case><case pos:line="137" pos:column="25">case <expr><lit:literal type="char" pos:line="137" pos:column="30">'['</lit:literal></expr>:
				<if pos:line="138" pos:column="33">if <condition pos:line="138" pos:column="36">(<expr><name pos:line="138" pos:column="37">lastState</name> <op:operator pos:line="138" pos:column="47">==</op:operator> <name pos:line="138" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="138" pos:column="62">||</op:operator> <name pos:line="138" pos:column="65">lastState</name> <op:operator pos:line="138" pos:column="75">==</op:operator> <name pos:line="138" pos:column="78">SCE_CSS_DEFAULT</name> <op:operator pos:line="138" pos:column="94">||</op:operator> <name pos:line="138" pos:column="97">lastState</name> <op:operator pos:line="138" pos:column="107">==</op:operator> <name pos:line="138" pos:column="110">SCE_CSS_CLASS</name> <op:operator pos:line="138" pos:column="124">||</op:operator> <name pos:line="138" pos:column="127">lastState</name> <op:operator pos:line="138" pos:column="137">==</op:operator> <name pos:line="138" pos:column="140">SCE_CSS_ID</name> <op:operator pos:line="138" pos:column="151">||</op:operator>
					<name pos:line="139" pos:column="41">lastState</name> <op:operator pos:line="139" pos:column="51">==</op:operator> <name pos:line="139" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="139" pos:column="74">||</op:operator> <name pos:line="139" pos:column="77">lastState</name> <op:operator pos:line="139" pos:column="87">==</op:operator> <name pos:line="139" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="139" pos:column="119">||</op:operator> <name pos:line="139" pos:column="122">lastState</name> <op:operator pos:line="139" pos:column="132">==</op:operator> <name pos:line="139" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr>)</condition><then pos:line="139" pos:column="163">
					<expr_stmt><expr><call><name><name pos:line="140" pos:column="41">sc</name><op:operator pos:line="140" pos:column="43">.</op:operator><name pos:line="140" pos:column="44">SetState</name></name><argument_list pos:line="140" pos:column="52">(<argument><expr><name pos:line="140" pos:column="53">SCE_CSS_ATTRIBUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="141" pos:column="33">break;</break>
			</case><case pos:line="142" pos:column="25">case <expr><lit:literal type="char" pos:line="142" pos:column="30">']'</lit:literal></expr>:
				<if pos:line="143" pos:column="33">if <condition pos:line="143" pos:column="36">(<expr><name pos:line="143" pos:column="37">lastState</name> <op:operator pos:line="143" pos:column="47">==</op:operator> <name pos:line="143" pos:column="50">SCE_CSS_ATTRIBUTE</name></expr>)</condition><then pos:line="143" pos:column="68">
					<expr_stmt><expr><call><name><name pos:line="144" pos:column="41">sc</name><op:operator pos:line="144" pos:column="43">.</op:operator><name pos:line="144" pos:column="44">SetState</name></name><argument_list pos:line="144" pos:column="52">(<argument><expr><name pos:line="144" pos:column="53">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="145" pos:column="33">break;</break>
			</case><case pos:line="146" pos:column="25">case <expr><lit:literal type="char" pos:line="146" pos:column="30">'{'</lit:literal></expr>:
				<if pos:line="147" pos:column="33">if <condition pos:line="147" pos:column="36">(<expr><name pos:line="147" pos:column="37">lastState</name> <op:operator pos:line="147" pos:column="47">==</op:operator> <name pos:line="147" pos:column="50">SCE_CSS_MEDIA</name></expr>)</condition><then pos:line="147" pos:column="64">
					<expr_stmt><expr><call><name><name pos:line="148" pos:column="41">sc</name><op:operator pos:line="148" pos:column="43">.</op:operator><name pos:line="148" pos:column="44">SetState</name></name><argument_list pos:line="148" pos:column="52">(<argument><expr><name pos:line="148" pos:column="53">SCE_CSS_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="149" pos:column="33">else <if pos:line="149" pos:column="38">if <condition pos:line="149" pos:column="41">(<expr><name pos:line="149" pos:column="42">lastState</name> <op:operator pos:line="149" pos:column="52">==</op:operator> <name pos:line="149" pos:column="55">SCE_CSS_TAG</name> <op:operator pos:line="149" pos:column="67">||</op:operator> <name pos:line="149" pos:column="70">lastState</name> <op:operator pos:line="149" pos:column="80">==</op:operator> <name pos:line="149" pos:column="83">SCE_CSS_DIRECTIVE</name></expr>)</condition><then pos:line="149" pos:column="101">
					<expr_stmt><expr><call><name><name pos:line="150" pos:column="41">sc</name><op:operator pos:line="150" pos:column="43">.</op:operator><name pos:line="150" pos:column="44">SetState</name></name><argument_list pos:line="150" pos:column="52">(<argument><expr><name pos:line="150" pos:column="53">SCE_CSS_IDENTIFIER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
				<break pos:line="151" pos:column="33">break;</break>
			</case><case pos:line="152" pos:column="25">case <expr><lit:literal type="char" pos:line="152" pos:column="30">'}'</lit:literal></expr>:
				<if pos:line="153" pos:column="33">if <condition pos:line="153" pos:column="36">(<expr><name pos:line="153" pos:column="37">lastState</name> <op:operator pos:line="153" pos:column="47">==</op:operator> <name pos:line="153" pos:column="50">SCE_CSS_DEFAULT</name> <op:operator pos:line="153" pos:column="66">||</op:operator> <name pos:line="153" pos:column="69">lastState</name> <op:operator pos:line="153" pos:column="79">==</op:operator> <name pos:line="153" pos:column="82">SCE_CSS_VALUE</name> <op:operator pos:line="153" pos:column="96">||</op:operator> <name pos:line="153" pos:column="99">lastState</name> <op:operator pos:line="153" pos:column="109">==</op:operator> <name pos:line="153" pos:column="112">SCE_CSS_IMPORTANT</name> <op:operator pos:line="153" pos:column="130">||</op:operator>
					<name pos:line="154" pos:column="41">lastState</name> <op:operator pos:line="154" pos:column="51">==</op:operator> <name pos:line="154" pos:column="54">SCE_CSS_IDENTIFIER</name> <op:operator pos:line="154" pos:column="73">||</op:operator> <name pos:line="154" pos:column="76">lastState</name> <op:operator pos:line="154" pos:column="86">==</op:operator> <name pos:line="154" pos:column="89">SCE_CSS_IDENTIFIER2</name> <op:operator pos:line="154" pos:column="109">||</op:operator> <name pos:line="154" pos:column="112">lastState</name> <op:operator pos:line="154" pos:column="122">==</op:operator> <name pos:line="154" pos:column="125">SCE_CSS_IDENTIFIER3</name></expr>)</condition><then pos:line="154" pos:column="145">
					<expr_stmt><expr><call><name><name pos:line="155" pos:column="41">sc</name><op:operator pos:line="155" pos:column="43">.</op:operator><name pos:line="155" pos:column="44">SetState</name></name><argument_list pos:line="155" pos:column="52">(<argument><expr><name pos:line="155" pos:column="53">SCE_CSS_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="156" pos:column="33">break;</break>
			</case><case pos:line="157" pos:column="25">case <expr><lit:literal type="char" pos:line="157" pos:column="30">'('</lit:literal></expr>:
				<if pos:line="158" pos:column="33">if <condition pos:line="158" pos:column="36">(<expr><name pos:line="158" pos:column="37">lastState</name> <op:operator pos:line="158" pos:column="47">==</op:operator> <name pos:line="158" pos:column="50">SCE_CSS_PSEUDOCLASS</name></expr>)</condition><then pos:line="158" pos:column="70">
					<expr_stmt><expr><call><name><name pos:line="159" pos:column="41">sc</name><op:operator pos:line="159" pos:column="43">.</op:operator><name pos:line="159" pos:column="44">SetState</name></name><argument_list pos:line="159" pos:column="52">(<argument><expr><name pos:line="159" pos:column="53">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="160" pos:column="33">else <if pos:line="160" pos:column="38">if <condition pos:line="160" pos:column="41">(<expr><name pos:line="160" pos:column="42">lastState</name> <op:operator pos:line="160" pos:column="52">==</op:operator> <name pos:line="160" pos:column="55">SCE_CSS_EXTENDED_PSEUDOCLASS</name></expr>)</condition><then pos:line="160" pos:column="84">
					<expr_stmt><expr><call><name><name pos:line="161" pos:column="41">sc</name><op:operator pos:line="161" pos:column="43">.</op:operator><name pos:line="161" pos:column="44">SetState</name></name><argument_list pos:line="161" pos:column="52">(<argument><expr><name pos:line="161" pos:column="53">SCE_CSS_EXTENDED_PSEUDOCLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
				<break pos:line="162" pos:column="33">break;</break>
			</case><case pos:line="163" pos:column="25">case <expr><lit:literal type="char" pos:line="163" pos:column="30">')'</lit:literal></expr>:
				<if pos:line="164" pos:column="33">if <condition pos:line="164" pos:column="36">(<expr><name pos:line="164" pos:column="37">lastState</name> <op:operator pos:line="164" pos:column="47">==</op:operator> <name pos:line="164" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="164" pos:column="62">||</op:operator> <name pos:line="164" pos:column="65">lastState</name> <op:operator pos:line="164" pos:column="75">==</op:operator> <name pos:line="164" pos:column="78">SCE_CSS_DEFAULT</name> <op:operator pos:line="164" pos:column="94">||</op:operator> <name pos:line="164" pos:column="97">lastState</name> <op:operator pos:line="164" pos:column="107">==</op:operator> <name pos:line="164" pos:column="110">SCE_CSS_CLASS</name> <op:operator pos:line="164" pos:column="124">||</op:operator> <name pos:line="164" pos:column="127">lastState</name> <op:operator pos:line="164" pos:column="137">==</op:operator> <name pos:line="164" pos:column="140">SCE_CSS_ID</name> <op:operator pos:line="164" pos:column="151">||</op:operator>
					<name pos:line="165" pos:column="41">lastState</name> <op:operator pos:line="165" pos:column="51">==</op:operator> <name pos:line="165" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="165" pos:column="74">||</op:operator> <name pos:line="165" pos:column="77">lastState</name> <op:operator pos:line="165" pos:column="87">==</op:operator> <name pos:line="165" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="165" pos:column="119">||</op:operator> <name pos:line="165" pos:column="122">lastState</name> <op:operator pos:line="165" pos:column="132">==</op:operator> <name pos:line="165" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name> <op:operator pos:line="165" pos:column="163">||</op:operator>
					<name pos:line="166" pos:column="41">lastState</name> <op:operator pos:line="166" pos:column="51">==</op:operator> <name pos:line="166" pos:column="54">SCE_CSS_PSEUDOELEMENT</name> <op:operator pos:line="166" pos:column="76">||</op:operator> <name pos:line="166" pos:column="79">lastState</name> <op:operator pos:line="166" pos:column="89">==</op:operator> <name pos:line="166" pos:column="92">SCE_CSS_EXTENDED_PSEUDOELEMENT</name></expr>)</condition><then pos:line="166" pos:column="123">
					<expr_stmt><expr><call><name><name pos:line="167" pos:column="41">sc</name><op:operator pos:line="167" pos:column="43">.</op:operator><name pos:line="167" pos:column="44">SetState</name></name><argument_list pos:line="167" pos:column="52">(<argument><expr><name pos:line="167" pos:column="53">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="168" pos:column="33">break;</break>
			</case><case pos:line="169" pos:column="25">case <expr><lit:literal type="char" pos:line="169" pos:column="30">':'</lit:literal></expr>:
				<if pos:line="170" pos:column="33">if <condition pos:line="170" pos:column="36">(<expr><name pos:line="170" pos:column="37">lastState</name> <op:operator pos:line="170" pos:column="47">==</op:operator> <name pos:line="170" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="170" pos:column="62">||</op:operator> <name pos:line="170" pos:column="65">lastState</name> <op:operator pos:line="170" pos:column="75">==</op:operator> <name pos:line="170" pos:column="78">SCE_CSS_DEFAULT</name> <op:operator pos:line="170" pos:column="94">||</op:operator> <name pos:line="170" pos:column="97">lastState</name> <op:operator pos:line="170" pos:column="107">==</op:operator> <name pos:line="170" pos:column="110">SCE_CSS_CLASS</name> <op:operator pos:line="170" pos:column="124">||</op:operator> <name pos:line="170" pos:column="127">lastState</name> <op:operator pos:line="170" pos:column="137">==</op:operator> <name pos:line="170" pos:column="140">SCE_CSS_ID</name> <op:operator pos:line="170" pos:column="151">||</op:operator>
					<name pos:line="171" pos:column="41">lastState</name> <op:operator pos:line="171" pos:column="51">==</op:operator> <name pos:line="171" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="171" pos:column="74">||</op:operator> <name pos:line="171" pos:column="77">lastState</name> <op:operator pos:line="171" pos:column="87">==</op:operator> <name pos:line="171" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="171" pos:column="119">||</op:operator> <name pos:line="171" pos:column="122">lastState</name> <op:operator pos:line="171" pos:column="132">==</op:operator> <name pos:line="171" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name> <op:operator pos:line="171" pos:column="163">||</op:operator>
					<name pos:line="172" pos:column="41">lastState</name> <op:operator pos:line="172" pos:column="51">==</op:operator> <name pos:line="172" pos:column="54">SCE_CSS_PSEUDOELEMENT</name> <op:operator pos:line="172" pos:column="76">||</op:operator> <name pos:line="172" pos:column="79">lastState</name> <op:operator pos:line="172" pos:column="89">==</op:operator> <name pos:line="172" pos:column="92">SCE_CSS_EXTENDED_PSEUDOELEMENT</name></expr>)</condition><then pos:line="172" pos:column="123">
					<expr_stmt><expr><call><name><name pos:line="173" pos:column="41">sc</name><op:operator pos:line="173" pos:column="43">.</op:operator><name pos:line="173" pos:column="44">SetState</name></name><argument_list pos:line="173" pos:column="52">(<argument><expr><name pos:line="173" pos:column="53">SCE_CSS_PSEUDOCLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="174" pos:column="33">else <if pos:line="174" pos:column="38">if <condition pos:line="174" pos:column="41">(<expr><name pos:line="174" pos:column="42">lastState</name> <op:operator pos:line="174" pos:column="52">==</op:operator> <name pos:line="174" pos:column="55">SCE_CSS_IDENTIFIER</name> <op:operator pos:line="174" pos:column="74">||</op:operator> <name pos:line="174" pos:column="77">lastState</name> <op:operator pos:line="174" pos:column="87">==</op:operator> <name pos:line="174" pos:column="90">SCE_CSS_IDENTIFIER2</name> <op:operator pos:line="174" pos:column="110">||</op:operator>
					<name pos:line="175" pos:column="41">lastState</name> <op:operator pos:line="175" pos:column="51">==</op:operator> <name pos:line="175" pos:column="54">SCE_CSS_IDENTIFIER3</name> <op:operator pos:line="175" pos:column="74">||</op:operator> <name pos:line="175" pos:column="77">lastState</name> <op:operator pos:line="175" pos:column="87">==</op:operator> <name pos:line="175" pos:column="90">SCE_CSS_EXTENDED_IDENTIFIER</name> <op:operator pos:line="175" pos:column="118">||</op:operator>
					<name pos:line="176" pos:column="41">lastState</name> <op:operator pos:line="176" pos:column="51">==</op:operator> <name pos:line="176" pos:column="54">SCE_CSS_UNKNOWN_IDENTIFIER</name></expr>)</condition><then pos:line="176" pos:column="81">
					<expr_stmt><expr><call><name><name pos:line="177" pos:column="41">sc</name><op:operator pos:line="177" pos:column="43">.</op:operator><name pos:line="177" pos:column="44">SetState</name></name><argument_list pos:line="177" pos:column="52">(<argument><expr><name pos:line="177" pos:column="53">SCE_CSS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
				<break pos:line="178" pos:column="33">break;</break>
			</case><case pos:line="179" pos:column="25">case <expr><lit:literal type="char" pos:line="179" pos:column="30">'.'</lit:literal></expr>:
				<if pos:line="180" pos:column="33">if <condition pos:line="180" pos:column="36">(<expr><name pos:line="180" pos:column="37">lastState</name> <op:operator pos:line="180" pos:column="47">==</op:operator> <name pos:line="180" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="180" pos:column="62">||</op:operator> <name pos:line="180" pos:column="65">lastState</name> <op:operator pos:line="180" pos:column="75">==</op:operator> <name pos:line="180" pos:column="78">SCE_CSS_DEFAULT</name> <op:operator pos:line="180" pos:column="94">||</op:operator> <name pos:line="180" pos:column="97">lastState</name> <op:operator pos:line="180" pos:column="107">==</op:operator> <name pos:line="180" pos:column="110">SCE_CSS_CLASS</name> <op:operator pos:line="180" pos:column="124">||</op:operator> <name pos:line="180" pos:column="127">lastState</name> <op:operator pos:line="180" pos:column="137">==</op:operator> <name pos:line="180" pos:column="140">SCE_CSS_ID</name> <op:operator pos:line="180" pos:column="151">||</op:operator>
					<name pos:line="181" pos:column="41">lastState</name> <op:operator pos:line="181" pos:column="51">==</op:operator> <name pos:line="181" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="181" pos:column="74">||</op:operator> <name pos:line="181" pos:column="77">lastState</name> <op:operator pos:line="181" pos:column="87">==</op:operator> <name pos:line="181" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="181" pos:column="119">||</op:operator> <name pos:line="181" pos:column="122">lastState</name> <op:operator pos:line="181" pos:column="132">==</op:operator> <name pos:line="181" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr>)</condition><then pos:line="181" pos:column="163">
					<expr_stmt><expr><call><name><name pos:line="182" pos:column="41">sc</name><op:operator pos:line="182" pos:column="43">.</op:operator><name pos:line="182" pos:column="44">SetState</name></name><argument_list pos:line="182" pos:column="52">(<argument><expr><name pos:line="182" pos:column="53">SCE_CSS_CLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="183" pos:column="33">break;</break>
			</case><case pos:line="184" pos:column="25">case <expr><lit:literal type="char" pos:line="184" pos:column="30">'#'</lit:literal></expr>:
				<if pos:line="185" pos:column="33">if <condition pos:line="185" pos:column="36">(<expr><name pos:line="185" pos:column="37">lastState</name> <op:operator pos:line="185" pos:column="47">==</op:operator> <name pos:line="185" pos:column="50">SCE_CSS_TAG</name> <op:operator pos:line="185" pos:column="62">||</op:operator> <name pos:line="185" pos:column="65">lastState</name> <op:operator pos:line="185" pos:column="75">==</op:operator> <name pos:line="185" pos:column="78">SCE_CSS_DEFAULT</name> <op:operator pos:line="185" pos:column="94">||</op:operator> <name pos:line="185" pos:column="97">lastState</name> <op:operator pos:line="185" pos:column="107">==</op:operator> <name pos:line="185" pos:column="110">SCE_CSS_CLASS</name> <op:operator pos:line="185" pos:column="124">||</op:operator> <name pos:line="185" pos:column="127">lastState</name> <op:operator pos:line="185" pos:column="137">==</op:operator> <name pos:line="185" pos:column="140">SCE_CSS_ID</name> <op:operator pos:line="185" pos:column="151">||</op:operator>
					<name pos:line="186" pos:column="41">lastState</name> <op:operator pos:line="186" pos:column="51">==</op:operator> <name pos:line="186" pos:column="54">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="186" pos:column="74">||</op:operator> <name pos:line="186" pos:column="77">lastState</name> <op:operator pos:line="186" pos:column="87">==</op:operator> <name pos:line="186" pos:column="90">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="186" pos:column="119">||</op:operator> <name pos:line="186" pos:column="122">lastState</name> <op:operator pos:line="186" pos:column="132">==</op:operator> <name pos:line="186" pos:column="135">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr>)</condition><then pos:line="186" pos:column="163">
					<expr_stmt><expr><call><name><name pos:line="187" pos:column="41">sc</name><op:operator pos:line="187" pos:column="43">.</op:operator><name pos:line="187" pos:column="44">SetState</name></name><argument_list pos:line="187" pos:column="52">(<argument><expr><name pos:line="187" pos:column="53">SCE_CSS_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="188" pos:column="33">break;</break>
			</case><case pos:line="189" pos:column="25">case <expr><lit:literal type="char" pos:line="189" pos:column="30">','</lit:literal></expr>:
			</case><case pos:line="190" pos:column="25">case <expr><lit:literal type="char" pos:line="190" pos:column="30">'|'</lit:literal></expr>:
			</case><case pos:line="191" pos:column="25">case <expr><lit:literal type="char" pos:line="191" pos:column="30">'~'</lit:literal></expr>:
				<if pos:line="192" pos:column="33">if <condition pos:line="192" pos:column="36">(<expr><name pos:line="192" pos:column="37">lastState</name> <op:operator pos:line="192" pos:column="47">==</op:operator> <name pos:line="192" pos:column="50">SCE_CSS_TAG</name></expr>)</condition><then pos:line="192" pos:column="62">
					<expr_stmt><expr><call><name><name pos:line="193" pos:column="41">sc</name><op:operator pos:line="193" pos:column="43">.</op:operator><name pos:line="193" pos:column="44">SetState</name></name><argument_list pos:line="193" pos:column="52">(<argument><expr><name pos:line="193" pos:column="53">SCE_CSS_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="194" pos:column="33">break;</break>
			</case><case pos:line="195" pos:column="25">case <expr><lit:literal type="char" pos:line="195" pos:column="30">';'</lit:literal></expr>:
				<if pos:line="196" pos:column="33">if <condition pos:line="196" pos:column="36">(<expr><name pos:line="196" pos:column="37">lastState</name> <op:operator pos:line="196" pos:column="47">==</op:operator> <name pos:line="196" pos:column="50">SCE_CSS_DIRECTIVE</name></expr>)</condition><then pos:line="196" pos:column="68">
					<expr_stmt><expr><call><name><name pos:line="197" pos:column="41">sc</name><op:operator pos:line="197" pos:column="43">.</op:operator><name pos:line="197" pos:column="44">SetState</name></name><argument_list pos:line="197" pos:column="52">(<argument><expr><name pos:line="197" pos:column="53">SCE_CSS_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="198" pos:column="33">else <if pos:line="198" pos:column="38">if <condition pos:line="198" pos:column="41">(<expr><name pos:line="198" pos:column="42">lastState</name> <op:operator pos:line="198" pos:column="52">==</op:operator> <name pos:line="198" pos:column="55">SCE_CSS_VALUE</name> <op:operator pos:line="198" pos:column="69">||</op:operator> <name pos:line="198" pos:column="72">lastState</name> <op:operator pos:line="198" pos:column="82">==</op:operator> <name pos:line="198" pos:column="85">SCE_CSS_IMPORTANT</name></expr>)</condition><then pos:line="198" pos:column="103">
					<expr_stmt><expr><call><name><name pos:line="199" pos:column="41">sc</name><op:operator pos:line="199" pos:column="43">.</op:operator><name pos:line="199" pos:column="44">SetState</name></name><argument_list pos:line="199" pos:column="52">(<argument><expr><name pos:line="199" pos:column="53">SCE_CSS_IDENTIFIER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
				<break pos:line="200" pos:column="33">break;</break>
			</case><case pos:line="201" pos:column="25">case <expr><lit:literal type="char" pos:line="201" pos:column="30">'!'</lit:literal></expr>:
				<if pos:line="202" pos:column="33">if <condition pos:line="202" pos:column="36">(<expr><name pos:line="202" pos:column="37">lastState</name> <op:operator pos:line="202" pos:column="47">==</op:operator> <name pos:line="202" pos:column="50">SCE_CSS_VALUE</name></expr>)</condition><then pos:line="202" pos:column="64">
					<expr_stmt><expr><call><name><name pos:line="203" pos:column="41">sc</name><op:operator pos:line="203" pos:column="43">.</op:operator><name pos:line="203" pos:column="44">SetState</name></name><argument_list pos:line="203" pos:column="52">(<argument><expr><name pos:line="203" pos:column="53">SCE_CSS_IMPORTANT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="204" pos:column="33">break;</break>
			</case>}</block></switch>
		}</block></then></if>

		<if pos:line="208" pos:column="17">if <condition pos:line="208" pos:column="20">(<expr><call><name pos:line="208" pos:column="21">IsAWordChar</name><argument_list pos:line="208" pos:column="32">(<argument><expr><name><name pos:line="208" pos:column="33">sc</name><op:operator pos:line="208" pos:column="35">.</op:operator><name pos:line="208" pos:column="36">ch</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="208" pos:column="40"> <block pos:line="208" pos:column="41">{
			<if pos:line="209" pos:column="25">if <condition pos:line="209" pos:column="28">(<expr><name><name pos:line="209" pos:column="29">sc</name><op:operator pos:line="209" pos:column="31">.</op:operator><name pos:line="209" pos:column="32">state</name></name> <op:operator pos:line="209" pos:column="38">==</op:operator> <name pos:line="209" pos:column="41">SCE_CSS_DEFAULT</name></expr>)</condition><then pos:line="209" pos:column="57">
				<expr_stmt><expr><call><name><name pos:line="210" pos:column="33">sc</name><op:operator pos:line="210" pos:column="35">.</op:operator><name pos:line="210" pos:column="36">SetState</name></name><argument_list pos:line="210" pos:column="44">(<argument><expr><name pos:line="210" pos:column="45">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<continue pos:line="211" pos:column="25">continue;</continue>
		}</block></then></if>

		<if pos:line="214" pos:column="17">if <condition pos:line="214" pos:column="20">(<expr><name><name pos:line="214" pos:column="21">sc</name><op:operator pos:line="214" pos:column="23">.</op:operator><name pos:line="214" pos:column="24">ch</name></name> <op:operator pos:line="214" pos:column="27">==</op:operator> <lit:literal type="char" pos:line="214" pos:column="30">'*'</lit:literal> <op:operator pos:line="214" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="214" pos:column="37">sc</name><op:operator pos:line="214" pos:column="39">.</op:operator><name pos:line="214" pos:column="40">state</name></name> <op:operator pos:line="214" pos:column="46">==</op:operator> <name pos:line="214" pos:column="49">SCE_CSS_DEFAULT</name></expr>)</condition><then pos:line="214" pos:column="65"> <block pos:line="214" pos:column="66">{
			<expr_stmt><expr><call><name><name pos:line="215" pos:column="25">sc</name><op:operator pos:line="215" pos:column="27">.</op:operator><name pos:line="215" pos:column="28">SetState</name></name><argument_list pos:line="215" pos:column="36">(<argument><expr><name pos:line="215" pos:column="37">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<continue pos:line="216" pos:column="25">continue;</continue>
		}</block></then></if>

		<if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><call><name pos:line="219" pos:column="21">IsAWordChar</name><argument_list pos:line="219" pos:column="32">(<argument><expr><name><name pos:line="219" pos:column="33">sc</name><op:operator pos:line="219" pos:column="35">.</op:operator><name pos:line="219" pos:column="36">chPrev</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="219" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="219" pos:column="47">(</op:operator>
			<name><name pos:line="220" pos:column="25">sc</name><op:operator pos:line="220" pos:column="27">.</op:operator><name pos:line="220" pos:column="28">state</name></name> <op:operator pos:line="220" pos:column="34">==</op:operator> <name pos:line="220" pos:column="37">SCE_CSS_IDENTIFIER</name> <op:operator pos:line="220" pos:column="56">||</op:operator> <name><name pos:line="220" pos:column="59">sc</name><op:operator pos:line="220" pos:column="61">.</op:operator><name pos:line="220" pos:column="62">state</name></name> <op:operator pos:line="220" pos:column="68">==</op:operator> <name pos:line="220" pos:column="71">SCE_CSS_IDENTIFIER2</name> <op:operator pos:line="220" pos:column="91">||</op:operator>
			<name><name pos:line="221" pos:column="25">sc</name><op:operator pos:line="221" pos:column="27">.</op:operator><name pos:line="221" pos:column="28">state</name></name> <op:operator pos:line="221" pos:column="34">==</op:operator> <name pos:line="221" pos:column="37">SCE_CSS_IDENTIFIER3</name> <op:operator pos:line="221" pos:column="57">||</op:operator> <name><name pos:line="221" pos:column="60">sc</name><op:operator pos:line="221" pos:column="62">.</op:operator><name pos:line="221" pos:column="63">state</name></name> <op:operator pos:line="221" pos:column="69">==</op:operator> <name pos:line="221" pos:column="72">SCE_CSS_EXTENDED_IDENTIFIER</name> <op:operator pos:line="221" pos:column="100">||</op:operator>
			<name><name pos:line="222" pos:column="25">sc</name><op:operator pos:line="222" pos:column="27">.</op:operator><name pos:line="222" pos:column="28">state</name></name> <op:operator pos:line="222" pos:column="34">==</op:operator> <name pos:line="222" pos:column="37">SCE_CSS_UNKNOWN_IDENTIFIER</name> <op:operator pos:line="222" pos:column="64">||</op:operator>
			<name><name pos:line="223" pos:column="25">sc</name><op:operator pos:line="223" pos:column="27">.</op:operator><name pos:line="223" pos:column="28">state</name></name> <op:operator pos:line="223" pos:column="34">==</op:operator> <name pos:line="223" pos:column="37">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="223" pos:column="57">||</op:operator> <name><name pos:line="223" pos:column="60">sc</name><op:operator pos:line="223" pos:column="62">.</op:operator><name pos:line="223" pos:column="63">state</name></name> <op:operator pos:line="223" pos:column="69">==</op:operator> <name pos:line="223" pos:column="72">SCE_CSS_PSEUDOELEMENT</name> <op:operator pos:line="223" pos:column="94">||</op:operator>
			<name><name pos:line="224" pos:column="25">sc</name><op:operator pos:line="224" pos:column="27">.</op:operator><name pos:line="224" pos:column="28">state</name></name> <op:operator pos:line="224" pos:column="34">==</op:operator> <name pos:line="224" pos:column="37">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="224" pos:column="66">||</op:operator> <name><name pos:line="224" pos:column="69">sc</name><op:operator pos:line="224" pos:column="71">.</op:operator><name pos:line="224" pos:column="72">state</name></name> <op:operator pos:line="224" pos:column="78">==</op:operator> <name pos:line="224" pos:column="81">SCE_CSS_EXTENDED_PSEUDOELEMENT</name> <op:operator pos:line="224" pos:column="112">||</op:operator>
			<name><name pos:line="225" pos:column="25">sc</name><op:operator pos:line="225" pos:column="27">.</op:operator><name pos:line="225" pos:column="28">state</name></name> <op:operator pos:line="225" pos:column="34">==</op:operator> <name pos:line="225" pos:column="37">SCE_CSS_UNKNOWN_PSEUDOCLASS</name> <op:operator pos:line="225" pos:column="65">||</op:operator>
			<name><name pos:line="226" pos:column="25">sc</name><op:operator pos:line="226" pos:column="27">.</op:operator><name pos:line="226" pos:column="28">state</name></name> <op:operator pos:line="226" pos:column="34">==</op:operator> <name pos:line="226" pos:column="37">SCE_CSS_IMPORTANT</name> <op:operator pos:line="226" pos:column="55">||</op:operator>
			<name><name pos:line="227" pos:column="25">sc</name><op:operator pos:line="227" pos:column="27">.</op:operator><name pos:line="227" pos:column="28">state</name></name> <op:operator pos:line="227" pos:column="34">==</op:operator> <name pos:line="227" pos:column="37">SCE_CSS_DIRECTIVE</name>
		<op:operator pos:line="228" pos:column="17">)</op:operator></expr>)</condition><then pos:line="228" pos:column="19"> <block pos:line="228" pos:column="20">{
			<decl_stmt><decl><type><name pos:line="229" pos:column="25">char</name></type> <name><name pos:line="229" pos:column="30">s</name><index pos:line="229" pos:column="31">[<expr><lit:literal type="number" pos:line="229" pos:column="32">100</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="230" pos:column="25">sc</name><op:operator pos:line="230" pos:column="27">.</op:operator><name pos:line="230" pos:column="28">GetCurrentLowered</name></name><argument_list pos:line="230" pos:column="45">(<argument><expr><name pos:line="230" pos:column="46">s</name></expr></argument>, <argument><expr><sizeof pos:line="230" pos:column="49">sizeof<argument_list pos:line="230" pos:column="55">(<argument><expr><name pos:line="230" pos:column="56">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="231" pos:column="25">char</name> <type:modifier pos:line="231" pos:column="30">*</type:modifier></type><name pos:line="231" pos:column="31">s2</name> <init pos:line="231" pos:column="34">= <expr><name pos:line="231" pos:column="36">s</name></expr></init></decl>;</decl_stmt>
			<while pos:line="232" pos:column="25">while <condition pos:line="232" pos:column="31">(<expr><op:operator pos:line="232" pos:column="32">*</op:operator><name pos:line="232" pos:column="33">s2</name> <op:operator pos:line="232" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="232" pos:column="39">!</op:operator><call><name pos:line="232" pos:column="40">IsAWordChar</name><argument_list pos:line="232" pos:column="51">(<argument><expr><op:operator pos:line="232" pos:column="52">*</op:operator><name pos:line="232" pos:column="53">s2</name></expr></argument>)</argument_list></call></expr>)</condition>
				<expr_stmt><expr><name pos:line="233" pos:column="33">s2</name><op:operator pos:line="233" pos:column="35">++</op:operator></expr>;</expr_stmt></while>
			<switch pos:line="234" pos:column="25">switch <condition pos:line="234" pos:column="32">(<expr><name><name pos:line="234" pos:column="33">sc</name><op:operator pos:line="234" pos:column="35">.</op:operator><name pos:line="234" pos:column="36">state</name></name></expr>)</condition> <block pos:line="234" pos:column="43">{
			<case pos:line="235" pos:column="25">case <expr><name pos:line="235" pos:column="30">SCE_CSS_IDENTIFIER</name></expr>:
			</case><case pos:line="236" pos:column="25">case <expr><name pos:line="236" pos:column="30">SCE_CSS_IDENTIFIER2</name></expr>:
			</case><case pos:line="237" pos:column="25">case <expr><name pos:line="237" pos:column="30">SCE_CSS_IDENTIFIER3</name></expr>:
			</case><case pos:line="238" pos:column="25">case <expr><name pos:line="238" pos:column="30">SCE_CSS_EXTENDED_IDENTIFIER</name></expr>:
			</case><case pos:line="239" pos:column="25">case <expr><name pos:line="239" pos:column="30">SCE_CSS_UNKNOWN_IDENTIFIER</name></expr>:
				<if pos:line="240" pos:column="33">if <condition pos:line="240" pos:column="36">(<expr><call><name><name pos:line="240" pos:column="37">css1Props</name><op:operator pos:line="240" pos:column="46">.</op:operator><name pos:line="240" pos:column="47">InList</name></name><argument_list pos:line="240" pos:column="53">(<argument><expr><name pos:line="240" pos:column="54">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="240" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="241" pos:column="41">sc</name><op:operator pos:line="241" pos:column="43">.</op:operator><name pos:line="241" pos:column="44">ChangeState</name></name><argument_list pos:line="241" pos:column="55">(<argument><expr><name pos:line="241" pos:column="56">SCE_CSS_IDENTIFIER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="242" pos:column="33">else <if pos:line="242" pos:column="38">if <condition pos:line="242" pos:column="41">(<expr><call><name><name pos:line="242" pos:column="42">css2Props</name><op:operator pos:line="242" pos:column="51">.</op:operator><name pos:line="242" pos:column="52">InList</name></name><argument_list pos:line="242" pos:column="58">(<argument><expr><name pos:line="242" pos:column="59">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="242" pos:column="63">
					<expr_stmt><expr><call><name><name pos:line="243" pos:column="41">sc</name><op:operator pos:line="243" pos:column="43">.</op:operator><name pos:line="243" pos:column="44">ChangeState</name></name><argument_list pos:line="243" pos:column="55">(<argument><expr><name pos:line="243" pos:column="56">SCE_CSS_IDENTIFIER2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="244" pos:column="33">else <if pos:line="244" pos:column="38">if <condition pos:line="244" pos:column="41">(<expr><call><name><name pos:line="244" pos:column="42">css3Props</name><op:operator pos:line="244" pos:column="51">.</op:operator><name pos:line="244" pos:column="52">InList</name></name><argument_list pos:line="244" pos:column="58">(<argument><expr><name pos:line="244" pos:column="59">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="244" pos:column="63">
					<expr_stmt><expr><call><name><name pos:line="245" pos:column="41">sc</name><op:operator pos:line="245" pos:column="43">.</op:operator><name pos:line="245" pos:column="44">ChangeState</name></name><argument_list pos:line="245" pos:column="55">(<argument><expr><name pos:line="245" pos:column="56">SCE_CSS_IDENTIFIER3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="246" pos:column="33">else <if pos:line="246" pos:column="38">if <condition pos:line="246" pos:column="41">(<expr><call><name><name pos:line="246" pos:column="42">exProps</name><op:operator pos:line="246" pos:column="49">.</op:operator><name pos:line="246" pos:column="50">InList</name></name><argument_list pos:line="246" pos:column="56">(<argument><expr><name pos:line="246" pos:column="57">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="246" pos:column="61">
					<expr_stmt><expr><call><name><name pos:line="247" pos:column="41">sc</name><op:operator pos:line="247" pos:column="43">.</op:operator><name pos:line="247" pos:column="44">ChangeState</name></name><argument_list pos:line="247" pos:column="55">(<argument><expr><name pos:line="247" pos:column="56">SCE_CSS_EXTENDED_IDENTIFIER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="248" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="249" pos:column="41">sc</name><op:operator pos:line="249" pos:column="43">.</op:operator><name pos:line="249" pos:column="44">ChangeState</name></name><argument_list pos:line="249" pos:column="55">(<argument><expr><name pos:line="249" pos:column="56">SCE_CSS_UNKNOWN_IDENTIFIER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if></else></if></else></if>
				<break pos:line="250" pos:column="33">break;</break>
			</case><case pos:line="251" pos:column="25">case <expr><name pos:line="251" pos:column="30">SCE_CSS_PSEUDOCLASS</name></expr>:
			</case><case pos:line="252" pos:column="25">case <expr><name pos:line="252" pos:column="30">SCE_CSS_PSEUDOELEMENT</name></expr>:
			</case><case pos:line="253" pos:column="25">case <expr><name pos:line="253" pos:column="30">SCE_CSS_EXTENDED_PSEUDOCLASS</name></expr>:
			</case><case pos:line="254" pos:column="25">case <expr><name pos:line="254" pos:column="30">SCE_CSS_EXTENDED_PSEUDOELEMENT</name></expr>:
			</case><case pos:line="255" pos:column="25">case <expr><name pos:line="255" pos:column="30">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr>:
				<if pos:line="256" pos:column="33">if <condition pos:line="256" pos:column="36">(<expr><name pos:line="256" pos:column="37">op</name> <op:operator pos:line="256" pos:column="40">==</op:operator> <lit:literal type="char" pos:line="256" pos:column="43">':'</lit:literal> <op:operator pos:line="256" pos:column="47">&amp;&amp;</op:operator> <name pos:line="256" pos:column="50">opPrev</name> <op:operator pos:line="256" pos:column="57">!=</op:operator> <lit:literal type="char" pos:line="256" pos:column="60">':'</lit:literal> <op:operator pos:line="256" pos:column="64">&amp;&amp;</op:operator> <call><name><name pos:line="256" pos:column="67">pseudoClasses</name><op:operator pos:line="256" pos:column="80">.</op:operator><name pos:line="256" pos:column="81">InList</name></name><argument_list pos:line="256" pos:column="87">(<argument><expr><name pos:line="256" pos:column="88">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="256" pos:column="92">
					<expr_stmt><expr><call><name><name pos:line="257" pos:column="41">sc</name><op:operator pos:line="257" pos:column="43">.</op:operator><name pos:line="257" pos:column="44">ChangeState</name></name><argument_list pos:line="257" pos:column="55">(<argument><expr><name pos:line="257" pos:column="56">SCE_CSS_PSEUDOCLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="258" pos:column="33">else <if pos:line="258" pos:column="38">if <condition pos:line="258" pos:column="41">(<expr><name pos:line="258" pos:column="42">opPrev</name> <op:operator pos:line="258" pos:column="49">==</op:operator> <lit:literal type="char" pos:line="258" pos:column="52">':'</lit:literal> <op:operator pos:line="258" pos:column="56">&amp;&amp;</op:operator> <call><name><name pos:line="258" pos:column="59">pseudoElements</name><op:operator pos:line="258" pos:column="73">.</op:operator><name pos:line="258" pos:column="74">InList</name></name><argument_list pos:line="258" pos:column="80">(<argument><expr><name pos:line="258" pos:column="81">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="258" pos:column="85">
					<expr_stmt><expr><call><name><name pos:line="259" pos:column="41">sc</name><op:operator pos:line="259" pos:column="43">.</op:operator><name pos:line="259" pos:column="44">ChangeState</name></name><argument_list pos:line="259" pos:column="55">(<argument><expr><name pos:line="259" pos:column="56">SCE_CSS_PSEUDOELEMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="260" pos:column="33">else <if pos:line="260" pos:column="38">if <condition pos:line="260" pos:column="41">(<expr><op:operator pos:line="260" pos:column="42">(</op:operator><name pos:line="260" pos:column="43">op</name> <op:operator pos:line="260" pos:column="46">==</op:operator> <lit:literal type="char" pos:line="260" pos:column="49">':'</lit:literal> <op:operator pos:line="260" pos:column="53">||</op:operator> <op:operator pos:line="260" pos:column="56">(</op:operator><name pos:line="260" pos:column="57">op</name> <op:operator pos:line="260" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="260" pos:column="63">'('</lit:literal> <op:operator pos:line="260" pos:column="67">&amp;&amp;</op:operator> <name pos:line="260" pos:column="70">lastState</name> <op:operator pos:line="260" pos:column="80">==</op:operator> <name pos:line="260" pos:column="83">SCE_CSS_EXTENDED_PSEUDOCLASS</name><op:operator pos:line="260" pos:column="111">)</op:operator><op:operator pos:line="260" pos:column="112">)</op:operator> <op:operator pos:line="260" pos:column="114">&amp;&amp;</op:operator> <name pos:line="260" pos:column="117">opPrev</name> <op:operator pos:line="260" pos:column="124">!=</op:operator> <lit:literal type="char" pos:line="260" pos:column="127">':'</lit:literal> <op:operator pos:line="260" pos:column="131">&amp;&amp;</op:operator> <call><name><name pos:line="260" pos:column="134">exPseudoClasses</name><op:operator pos:line="260" pos:column="149">.</op:operator><name pos:line="260" pos:column="150">InList</name></name><argument_list pos:line="260" pos:column="156">(<argument><expr><name pos:line="260" pos:column="157">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="260" pos:column="161">
					<expr_stmt><expr><call><name><name pos:line="261" pos:column="41">sc</name><op:operator pos:line="261" pos:column="43">.</op:operator><name pos:line="261" pos:column="44">ChangeState</name></name><argument_list pos:line="261" pos:column="55">(<argument><expr><name pos:line="261" pos:column="56">SCE_CSS_EXTENDED_PSEUDOCLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="262" pos:column="33">else <if pos:line="262" pos:column="38">if <condition pos:line="262" pos:column="41">(<expr><name pos:line="262" pos:column="42">opPrev</name> <op:operator pos:line="262" pos:column="49">==</op:operator> <lit:literal type="char" pos:line="262" pos:column="52">':'</lit:literal> <op:operator pos:line="262" pos:column="56">&amp;&amp;</op:operator> <call><name><name pos:line="262" pos:column="59">exPseudoElements</name><op:operator pos:line="262" pos:column="75">.</op:operator><name pos:line="262" pos:column="76">InList</name></name><argument_list pos:line="262" pos:column="82">(<argument><expr><name pos:line="262" pos:column="83">s2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="262" pos:column="87">
					<expr_stmt><expr><call><name><name pos:line="263" pos:column="41">sc</name><op:operator pos:line="263" pos:column="43">.</op:operator><name pos:line="263" pos:column="44">ChangeState</name></name><argument_list pos:line="263" pos:column="55">(<argument><expr><name pos:line="263" pos:column="56">SCE_CSS_EXTENDED_PSEUDOELEMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="264" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="265" pos:column="41">sc</name><op:operator pos:line="265" pos:column="43">.</op:operator><name pos:line="265" pos:column="44">ChangeState</name></name><argument_list pos:line="265" pos:column="55">(<argument><expr><name pos:line="265" pos:column="56">SCE_CSS_UNKNOWN_PSEUDOCLASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if></else></if></else></if>
				<break pos:line="266" pos:column="33">break;</break>
			</case><case pos:line="267" pos:column="25">case <expr><name pos:line="267" pos:column="30">SCE_CSS_IMPORTANT</name></expr>:
				<if pos:line="268" pos:column="33">if <condition pos:line="268" pos:column="36">(<expr><call><name pos:line="268" pos:column="37">strcmp</name><argument_list pos:line="268" pos:column="43">(<argument><expr><name pos:line="268" pos:column="44">s2</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="268" pos:column="48">"important"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="268" pos:column="61">!=</op:operator> <lit:literal type="number" pos:line="268" pos:column="64">0</lit:literal></expr>)</condition><then pos:line="268" pos:column="66">
					<expr_stmt><expr><call><name><name pos:line="269" pos:column="41">sc</name><op:operator pos:line="269" pos:column="43">.</op:operator><name pos:line="269" pos:column="44">ChangeState</name></name><argument_list pos:line="269" pos:column="55">(<argument><expr><name pos:line="269" pos:column="56">SCE_CSS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="270" pos:column="33">break;</break>
			</case><case pos:line="271" pos:column="25">case <expr><name pos:line="271" pos:column="30">SCE_CSS_DIRECTIVE</name></expr>:
				<if pos:line="272" pos:column="33">if <condition pos:line="272" pos:column="36">(<expr><name pos:line="272" pos:column="37">op</name> <op:operator pos:line="272" pos:column="40">==</op:operator> <lit:literal type="char" pos:line="272" pos:column="43">'@'</lit:literal> <op:operator pos:line="272" pos:column="47">&amp;&amp;</op:operator> <call><name pos:line="272" pos:column="50">strcmp</name><argument_list pos:line="272" pos:column="56">(<argument><expr><name pos:line="272" pos:column="57">s2</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="272" pos:column="61">"media"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="272" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="272" pos:column="73">0</lit:literal></expr>)</condition><then pos:line="272" pos:column="75">
					<expr_stmt><expr><call><name><name pos:line="273" pos:column="41">sc</name><op:operator pos:line="273" pos:column="43">.</op:operator><name pos:line="273" pos:column="44">ChangeState</name></name><argument_list pos:line="273" pos:column="55">(<argument><expr><name pos:line="273" pos:column="56">SCE_CSS_MEDIA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="274" pos:column="33">break;</break>
			</case>}</block></switch>
		}</block></then></if>

		<if pos:line="278" pos:column="17">if <condition pos:line="278" pos:column="20">(<expr><name><name pos:line="278" pos:column="21">sc</name><op:operator pos:line="278" pos:column="23">.</op:operator><name pos:line="278" pos:column="24">ch</name></name> <op:operator pos:line="278" pos:column="27">!=</op:operator> <lit:literal type="char" pos:line="278" pos:column="30">'.'</lit:literal> <op:operator pos:line="278" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="278" pos:column="37">sc</name><op:operator pos:line="278" pos:column="39">.</op:operator><name pos:line="278" pos:column="40">ch</name></name> <op:operator pos:line="278" pos:column="43">!=</op:operator> <lit:literal type="char" pos:line="278" pos:column="46">':'</lit:literal> <op:operator pos:line="278" pos:column="50">&amp;&amp;</op:operator> <name><name pos:line="278" pos:column="53">sc</name><op:operator pos:line="278" pos:column="55">.</op:operator><name pos:line="278" pos:column="56">ch</name></name> <op:operator pos:line="278" pos:column="59">!=</op:operator> <lit:literal type="char" pos:line="278" pos:column="62">'#'</lit:literal> <op:operator pos:line="278" pos:column="66">&amp;&amp;</op:operator> <op:operator pos:line="278" pos:column="69">(</op:operator>
			<name><name pos:line="279" pos:column="25">sc</name><op:operator pos:line="279" pos:column="27">.</op:operator><name pos:line="279" pos:column="28">state</name></name> <op:operator pos:line="279" pos:column="34">==</op:operator> <name pos:line="279" pos:column="37">SCE_CSS_CLASS</name> <op:operator pos:line="279" pos:column="51">||</op:operator> <name><name pos:line="279" pos:column="54">sc</name><op:operator pos:line="279" pos:column="56">.</op:operator><name pos:line="279" pos:column="57">state</name></name> <op:operator pos:line="279" pos:column="63">==</op:operator> <name pos:line="279" pos:column="66">SCE_CSS_ID</name> <op:operator pos:line="279" pos:column="77">||</op:operator>
			<op:operator pos:line="280" pos:column="25">(</op:operator><name><name pos:line="280" pos:column="26">sc</name><op:operator pos:line="280" pos:column="28">.</op:operator><name pos:line="280" pos:column="29">ch</name></name> <op:operator pos:line="280" pos:column="32">!=</op:operator> <lit:literal type="char" pos:line="280" pos:column="35">'('</lit:literal> <op:operator pos:line="280" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="280" pos:column="42">sc</name><op:operator pos:line="280" pos:column="44">.</op:operator><name pos:line="280" pos:column="45">ch</name></name> <op:operator pos:line="280" pos:column="48">!=</op:operator> <lit:literal type="char" pos:line="280" pos:column="51">')'</lit:literal> <op:operator pos:line="280" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="280" pos:column="58">(</op:operator> <comment type="block" pos:line="280" pos:column="60">/* This line of the condition makes it possible to extend pseudo-classes with parentheses */</comment>
				<name><name pos:line="281" pos:column="33">sc</name><op:operator pos:line="281" pos:column="35">.</op:operator><name pos:line="281" pos:column="36">state</name></name> <op:operator pos:line="281" pos:column="42">==</op:operator> <name pos:line="281" pos:column="45">SCE_CSS_PSEUDOCLASS</name> <op:operator pos:line="281" pos:column="65">||</op:operator> <name><name pos:line="281" pos:column="68">sc</name><op:operator pos:line="281" pos:column="70">.</op:operator><name pos:line="281" pos:column="71">state</name></name> <op:operator pos:line="281" pos:column="77">==</op:operator> <name pos:line="281" pos:column="80">SCE_CSS_PSEUDOELEMENT</name> <op:operator pos:line="281" pos:column="102">||</op:operator>
				<name><name pos:line="282" pos:column="33">sc</name><op:operator pos:line="282" pos:column="35">.</op:operator><name pos:line="282" pos:column="36">state</name></name> <op:operator pos:line="282" pos:column="42">==</op:operator> <name pos:line="282" pos:column="45">SCE_CSS_EXTENDED_PSEUDOCLASS</name> <op:operator pos:line="282" pos:column="74">||</op:operator> <name><name pos:line="282" pos:column="77">sc</name><op:operator pos:line="282" pos:column="79">.</op:operator><name pos:line="282" pos:column="80">state</name></name> <op:operator pos:line="282" pos:column="86">==</op:operator> <name pos:line="282" pos:column="89">SCE_CSS_EXTENDED_PSEUDOELEMENT</name> <op:operator pos:line="282" pos:column="120">||</op:operator>
				<name><name pos:line="283" pos:column="33">sc</name><op:operator pos:line="283" pos:column="35">.</op:operator><name pos:line="283" pos:column="36">state</name></name> <op:operator pos:line="283" pos:column="42">==</op:operator> <name pos:line="283" pos:column="45">SCE_CSS_UNKNOWN_PSEUDOCLASS</name>
			<op:operator pos:line="284" pos:column="25">)</op:operator><op:operator pos:line="284" pos:column="26">)</op:operator>
		<op:operator pos:line="285" pos:column="17">)</op:operator></expr>)</condition><then pos:line="285" pos:column="19">
			<expr_stmt><expr><call><name><name pos:line="286" pos:column="25">sc</name><op:operator pos:line="286" pos:column="27">.</op:operator><name pos:line="286" pos:column="28">SetState</name></name><argument_list pos:line="286" pos:column="36">(<argument><expr><name pos:line="286" pos:column="37">SCE_CSS_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<if pos:line="288" pos:column="17">if <condition pos:line="288" pos:column="20">(<expr><call><name><name pos:line="288" pos:column="21">sc</name><op:operator pos:line="288" pos:column="23">.</op:operator><name pos:line="288" pos:column="24">Match</name></name><argument_list pos:line="288" pos:column="29">(<argument><expr><lit:literal type="char" pos:line="288" pos:column="30">'/'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="288" pos:column="35">'*'</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="288" pos:column="40"> <block pos:line="288" pos:column="41">{
			<expr_stmt><expr><name pos:line="289" pos:column="25">lastStateC</name> <op:operator pos:line="289" pos:column="36">=</op:operator> <name><name pos:line="289" pos:column="38">sc</name><op:operator pos:line="289" pos:column="40">.</op:operator><name pos:line="289" pos:column="41">state</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="290" pos:column="25">sc</name><op:operator pos:line="290" pos:column="27">.</op:operator><name pos:line="290" pos:column="28">SetState</name></name><argument_list pos:line="290" pos:column="36">(<argument><expr><name pos:line="290" pos:column="37">SCE_CSS_COMMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="291" pos:column="25">sc</name><op:operator pos:line="291" pos:column="27">.</op:operator><name pos:line="291" pos:column="28">Forward</name></name><argument_list pos:line="291" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="292" pos:column="19">else <if pos:line="292" pos:column="24">if <condition pos:line="292" pos:column="27">(<expr><op:operator pos:line="292" pos:column="28">(</op:operator><name><name pos:line="292" pos:column="29">sc</name><op:operator pos:line="292" pos:column="31">.</op:operator><name pos:line="292" pos:column="32">state</name></name> <op:operator pos:line="292" pos:column="38">==</op:operator> <name pos:line="292" pos:column="41">SCE_CSS_VALUE</name> <op:operator pos:line="292" pos:column="55">||</op:operator> <name><name pos:line="292" pos:column="58">sc</name><op:operator pos:line="292" pos:column="60">.</op:operator><name pos:line="292" pos:column="61">state</name></name> <op:operator pos:line="292" pos:column="67">==</op:operator> <name pos:line="292" pos:column="70">SCE_CSS_ATTRIBUTE</name><op:operator pos:line="292" pos:column="87">)</op:operator>
			<op:operator pos:line="293" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="293" pos:column="28">(</op:operator><name><name pos:line="293" pos:column="29">sc</name><op:operator pos:line="293" pos:column="31">.</op:operator><name pos:line="293" pos:column="32">ch</name></name> <op:operator pos:line="293" pos:column="35">==</op:operator> <lit:literal type="char" pos:line="293" pos:column="38">'\"'</lit:literal> <op:operator pos:line="293" pos:column="43">||</op:operator> <name><name pos:line="293" pos:column="46">sc</name><op:operator pos:line="293" pos:column="48">.</op:operator><name pos:line="293" pos:column="49">ch</name></name> <op:operator pos:line="293" pos:column="52">==</op:operator> <lit:literal type="char" pos:line="293" pos:column="55">'\''</lit:literal><op:operator pos:line="293" pos:column="59">)</op:operator></expr>)</condition><then pos:line="293" pos:column="61"> <block pos:line="293" pos:column="62">{
			<expr_stmt><expr><name pos:line="294" pos:column="25">lastStateS</name> <op:operator pos:line="294" pos:column="36">=</op:operator> <name><name pos:line="294" pos:column="38">sc</name><op:operator pos:line="294" pos:column="40">.</op:operator><name pos:line="294" pos:column="41">state</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="295" pos:column="25">sc</name><op:operator pos:line="295" pos:column="27">.</op:operator><name pos:line="295" pos:column="28">SetState</name></name><argument_list pos:line="295" pos:column="36">(<argument><expr><op:operator pos:line="295" pos:column="37">(</op:operator><name><name pos:line="295" pos:column="38">sc</name><op:operator pos:line="295" pos:column="40">.</op:operator><name pos:line="295" pos:column="41">ch</name></name> <op:operator pos:line="295" pos:column="44">==</op:operator> <lit:literal type="char" pos:line="295" pos:column="47">'\"'</lit:literal> <op:operator pos:line="295" pos:column="52">?</op:operator> <name pos:line="295" pos:column="54">SCE_CSS_DOUBLESTRING</name> <op:operator pos:line="295" pos:column="75">:</op:operator> <name pos:line="295" pos:column="77">SCE_CSS_SINGLESTRING</name><op:operator pos:line="295" pos:column="97">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="296" pos:column="19">else <if pos:line="296" pos:column="24">if <condition pos:line="296" pos:column="27">(<expr><call><name pos:line="296" pos:column="28">IsCssOperator</name><argument_list pos:line="296" pos:column="41">(<argument><expr><name><name pos:line="296" pos:column="42">sc</name><op:operator pos:line="296" pos:column="44">.</op:operator><name pos:line="296" pos:column="45">ch</name></name></expr></argument>)</argument_list></call>
			<op:operator pos:line="297" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="297" pos:column="28">(</op:operator><name><name pos:line="297" pos:column="29">sc</name><op:operator pos:line="297" pos:column="31">.</op:operator><name pos:line="297" pos:column="32">state</name></name> <op:operator pos:line="297" pos:column="38">!=</op:operator> <name pos:line="297" pos:column="41">SCE_CSS_ATTRIBUTE</name> <op:operator pos:line="297" pos:column="59">||</op:operator> <name><name pos:line="297" pos:column="62">sc</name><op:operator pos:line="297" pos:column="64">.</op:operator><name pos:line="297" pos:column="65">ch</name></name> <op:operator pos:line="297" pos:column="68">==</op:operator> <lit:literal type="char" pos:line="297" pos:column="71">']'</lit:literal><op:operator pos:line="297" pos:column="74">)</op:operator>
			<op:operator pos:line="298" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="298" pos:column="28">(</op:operator><name><name pos:line="298" pos:column="29">sc</name><op:operator pos:line="298" pos:column="31">.</op:operator><name pos:line="298" pos:column="32">state</name></name> <op:operator pos:line="298" pos:column="38">!=</op:operator> <name pos:line="298" pos:column="41">SCE_CSS_VALUE</name> <op:operator pos:line="298" pos:column="55">||</op:operator> <name><name pos:line="298" pos:column="58">sc</name><op:operator pos:line="298" pos:column="60">.</op:operator><name pos:line="298" pos:column="61">ch</name></name> <op:operator pos:line="298" pos:column="64">==</op:operator> <lit:literal type="char" pos:line="298" pos:column="67">';'</lit:literal> <op:operator pos:line="298" pos:column="71">||</op:operator> <name><name pos:line="298" pos:column="74">sc</name><op:operator pos:line="298" pos:column="76">.</op:operator><name pos:line="298" pos:column="77">ch</name></name> <op:operator pos:line="298" pos:column="80">==</op:operator> <lit:literal type="char" pos:line="298" pos:column="83">'}'</lit:literal> <op:operator pos:line="298" pos:column="87">||</op:operator> <name><name pos:line="298" pos:column="90">sc</name><op:operator pos:line="298" pos:column="92">.</op:operator><name pos:line="298" pos:column="93">ch</name></name> <op:operator pos:line="298" pos:column="96">==</op:operator> <lit:literal type="char" pos:line="298" pos:column="99">'!'</lit:literal><op:operator pos:line="298" pos:column="102">)</op:operator>
			<op:operator pos:line="299" pos:column="25">&amp;&amp;</op:operator> <op:operator pos:line="299" pos:column="28">(</op:operator><op:operator pos:line="299" pos:column="29">(</op:operator><name><name pos:line="299" pos:column="30">sc</name><op:operator pos:line="299" pos:column="32">.</op:operator><name pos:line="299" pos:column="33">state</name></name> <op:operator pos:line="299" pos:column="39">!=</op:operator> <name pos:line="299" pos:column="42">SCE_CSS_DIRECTIVE</name> <op:operator pos:line="299" pos:column="60">&amp;&amp;</op:operator> <name><name pos:line="299" pos:column="63">sc</name><op:operator pos:line="299" pos:column="65">.</op:operator><name pos:line="299" pos:column="66">state</name></name> <op:operator pos:line="299" pos:column="72">!=</op:operator> <name pos:line="299" pos:column="75">SCE_CSS_MEDIA</name><op:operator pos:line="299" pos:column="88">)</op:operator> <op:operator pos:line="299" pos:column="90">||</op:operator> <name><name pos:line="299" pos:column="93">sc</name><op:operator pos:line="299" pos:column="95">.</op:operator><name pos:line="299" pos:column="96">ch</name></name> <op:operator pos:line="299" pos:column="99">==</op:operator> <lit:literal type="char" pos:line="299" pos:column="102">';'</lit:literal> <op:operator pos:line="299" pos:column="106">||</op:operator> <name><name pos:line="299" pos:column="109">sc</name><op:operator pos:line="299" pos:column="111">.</op:operator><name pos:line="299" pos:column="112">ch</name></name> <op:operator pos:line="299" pos:column="115">==</op:operator> <lit:literal type="char" pos:line="299" pos:column="118">'{'</lit:literal><op:operator pos:line="299" pos:column="121">)</op:operator></expr>
		)</condition><then pos:line="300" pos:column="18"> <block pos:line="300" pos:column="19">{
			<if pos:line="301" pos:column="25">if <condition pos:line="301" pos:column="28">(<expr><name><name pos:line="301" pos:column="29">sc</name><op:operator pos:line="301" pos:column="31">.</op:operator><name pos:line="301" pos:column="32">state</name></name> <op:operator pos:line="301" pos:column="38">!=</op:operator> <name pos:line="301" pos:column="41">SCE_CSS_OPERATOR</name></expr>)</condition><then pos:line="301" pos:column="58">
				<expr_stmt><expr><name pos:line="302" pos:column="33">lastState</name> <op:operator pos:line="302" pos:column="43">=</op:operator> <name><name pos:line="302" pos:column="45">sc</name><op:operator pos:line="302" pos:column="47">.</op:operator><name pos:line="302" pos:column="48">state</name></name></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="303" pos:column="25">sc</name><op:operator pos:line="303" pos:column="27">.</op:operator><name pos:line="303" pos:column="28">SetState</name></name><argument_list pos:line="303" pos:column="36">(<argument><expr><name pos:line="303" pos:column="37">SCE_CSS_OPERATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="304" pos:column="25">op</name> <op:operator pos:line="304" pos:column="28">=</op:operator> <name><name pos:line="304" pos:column="30">sc</name><op:operator pos:line="304" pos:column="32">.</op:operator><name pos:line="304" pos:column="33">ch</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="305" pos:column="25">opPrev</name> <op:operator pos:line="305" pos:column="32">=</op:operator> <name><name pos:line="305" pos:column="34">sc</name><op:operator pos:line="305" pos:column="36">.</op:operator><name pos:line="305" pos:column="37">chPrev</name></name></expr>;</expr_stmt>
		}</block></then></if></else></if></else></if>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="309" pos:column="9">sc</name><op:operator pos:line="309" pos:column="11">.</op:operator><name pos:line="309" pos:column="12">Complete</name></name><argument_list pos:line="309" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="312" pos:column="1">static</specifier> <name pos:line="312" pos:column="8">void</name></type> <name pos:line="312" pos:column="13">FoldCSSDoc</name><parameter_list pos:line="312" pos:column="23">(<param><decl><type><name pos:line="312" pos:column="24">unsigned</name> <name pos:line="312" pos:column="33">int</name></type> <name pos:line="312" pos:column="37">startPos</name></decl></param>, <param><decl><type><name pos:line="312" pos:column="47">int</name></type> <name pos:line="312" pos:column="51">length</name></decl></param>, <param><decl><type><name pos:line="312" pos:column="59">int</name></type></decl></param>, <param><decl><type><name><name pos:line="312" pos:column="64">WordList</name> <type:modifier pos:line="312" pos:column="73">*</type:modifier><index pos:line="312" pos:column="74">[]</index></name></type></decl></param>, <param><decl><type><name pos:line="312" pos:column="78">Accessor</name> <type:modifier pos:line="312" pos:column="87">&amp;</type:modifier></type><name pos:line="312" pos:column="88">styler</name></decl></param>)</parameter_list> <block pos:line="312" pos:column="96">{
	<decl_stmt><decl><type><name pos:line="313" pos:column="9">bool</name></type> <name pos:line="313" pos:column="14">foldComment</name> <init pos:line="313" pos:column="26">= <expr><call><name><name pos:line="313" pos:column="28">styler</name><op:operator pos:line="313" pos:column="34">.</op:operator><name pos:line="313" pos:column="35">GetPropertyInt</name></name><argument_list pos:line="313" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="50">"fold.comment"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="313" pos:column="66">!=</op:operator> <lit:literal type="number" pos:line="313" pos:column="69">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="314" pos:column="9">bool</name></type> <name pos:line="314" pos:column="14">foldCompact</name> <init pos:line="314" pos:column="26">= <expr><call><name><name pos:line="314" pos:column="28">styler</name><op:operator pos:line="314" pos:column="34">.</op:operator><name pos:line="314" pos:column="35">GetPropertyInt</name></name><argument_list pos:line="314" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="50">"fold.compact"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="314" pos:column="66">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="314" pos:column="69">!=</op:operator> <lit:literal type="number" pos:line="314" pos:column="72">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="315" pos:column="9">unsigned</name> <name pos:line="315" pos:column="18">int</name></type> <name pos:line="315" pos:column="22">endPos</name> <init pos:line="315" pos:column="29">= <expr><name pos:line="315" pos:column="31">startPos</name> <op:operator pos:line="315" pos:column="40">+</op:operator> <name pos:line="315" pos:column="42">length</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="316" pos:column="9">int</name></type> <name pos:line="316" pos:column="13">visibleChars</name> <init pos:line="316" pos:column="26">= <expr><lit:literal type="number" pos:line="316" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="317" pos:column="9">int</name></type> <name pos:line="317" pos:column="13">lineCurrent</name> <init pos:line="317" pos:column="25">= <expr><call><name><name pos:line="317" pos:column="27">styler</name><op:operator pos:line="317" pos:column="33">.</op:operator><name pos:line="317" pos:column="34">GetLine</name></name><argument_list pos:line="317" pos:column="41">(<argument><expr><name pos:line="317" pos:column="42">startPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="318" pos:column="9">int</name></type> <name pos:line="318" pos:column="13">levelPrev</name> <init pos:line="318" pos:column="23">= <expr><call><name><name pos:line="318" pos:column="25">styler</name><op:operator pos:line="318" pos:column="31">.</op:operator><name pos:line="318" pos:column="32">LevelAt</name></name><argument_list pos:line="318" pos:column="39">(<argument><expr><name pos:line="318" pos:column="40">lineCurrent</name></expr></argument>)</argument_list></call> <op:operator pos:line="318" pos:column="53">&amp;</op:operator> <name pos:line="318" pos:column="55">SC_FOLDLEVELNUMBERMASK</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="319" pos:column="9">int</name></type> <name pos:line="319" pos:column="13">levelCurrent</name> <init pos:line="319" pos:column="26">= <expr><name pos:line="319" pos:column="28">levelPrev</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="320" pos:column="9">char</name></type> <name pos:line="320" pos:column="14">chNext</name> <init pos:line="320" pos:column="21">= <expr><name><name pos:line="320" pos:column="23">styler</name><index pos:line="320" pos:column="29">[<expr><name pos:line="320" pos:column="30">startPos</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="321" pos:column="9">bool</name></type> <name pos:line="321" pos:column="14">inComment</name> <init pos:line="321" pos:column="24">= <expr><op:operator pos:line="321" pos:column="26">(</op:operator><call><name><name pos:line="321" pos:column="27">styler</name><op:operator pos:line="321" pos:column="33">.</op:operator><name pos:line="321" pos:column="34">StyleAt</name></name><argument_list pos:line="321" pos:column="41">(<argument><expr><name pos:line="321" pos:column="42">startPos</name><op:operator pos:line="321" pos:column="50">-</op:operator><lit:literal type="number" pos:line="321" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="321" pos:column="54">==</op:operator> <name pos:line="321" pos:column="57">SCE_CSS_COMMENT</name><op:operator pos:line="321" pos:column="72">)</op:operator></expr></init></decl>;</decl_stmt>
	<for pos:line="322" pos:column="9">for (<init><decl><type><name pos:line="322" pos:column="14">unsigned</name> <name pos:line="322" pos:column="23">int</name></type> <name pos:line="322" pos:column="27">i</name> <init pos:line="322" pos:column="29">= <expr><name pos:line="322" pos:column="31">startPos</name></expr></init></decl>;</init> <condition><expr><name pos:line="322" pos:column="41">i</name> <op:operator pos:line="322" pos:column="43">&lt;</op:operator> <name pos:line="322" pos:column="45">endPos</name></expr>;</condition> <incr><expr><name pos:line="322" pos:column="53">i</name><op:operator pos:line="322" pos:column="54">++</op:operator></expr></incr>) <block pos:line="322" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="323" pos:column="17">char</name></type> <name pos:line="323" pos:column="22">ch</name> <init pos:line="323" pos:column="25">= <expr><name pos:line="323" pos:column="27">chNext</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="324" pos:column="17">chNext</name> <op:operator pos:line="324" pos:column="24">=</op:operator> <call><name><name pos:line="324" pos:column="26">styler</name><op:operator pos:line="324" pos:column="32">.</op:operator><name pos:line="324" pos:column="33">SafeGetCharAt</name></name><argument_list pos:line="324" pos:column="46">(<argument><expr><name pos:line="324" pos:column="47">i</name> <op:operator pos:line="324" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="324" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="325" pos:column="17">int</name></type> <name pos:line="325" pos:column="21">style</name> <init pos:line="325" pos:column="27">= <expr><call><name><name pos:line="325" pos:column="29">styler</name><op:operator pos:line="325" pos:column="35">.</op:operator><name pos:line="325" pos:column="36">StyleAt</name></name><argument_list pos:line="325" pos:column="43">(<argument><expr><name pos:line="325" pos:column="44">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="326" pos:column="17">bool</name></type> <name pos:line="326" pos:column="22">atEOL</name> <init pos:line="326" pos:column="28">= <expr><op:operator pos:line="326" pos:column="30">(</op:operator><name pos:line="326" pos:column="31">ch</name> <op:operator pos:line="326" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="326" pos:column="37">'\r'</lit:literal> <op:operator pos:line="326" pos:column="42">&amp;&amp;</op:operator> <name pos:line="326" pos:column="45">chNext</name> <op:operator pos:line="326" pos:column="52">!=</op:operator> <lit:literal type="char" pos:line="326" pos:column="55">'\n'</lit:literal><op:operator pos:line="326" pos:column="59">)</op:operator> <op:operator pos:line="326" pos:column="61">||</op:operator> <op:operator pos:line="326" pos:column="64">(</op:operator><name pos:line="326" pos:column="65">ch</name> <op:operator pos:line="326" pos:column="68">==</op:operator> <lit:literal type="char" pos:line="326" pos:column="71">'\n'</lit:literal><op:operator pos:line="326" pos:column="75">)</op:operator></expr></init></decl>;</decl_stmt>
		<if pos:line="327" pos:column="17">if <condition pos:line="327" pos:column="20">(<expr><name pos:line="327" pos:column="21">foldComment</name></expr>)</condition><then pos:line="327" pos:column="33"> <block pos:line="327" pos:column="34">{
			<if pos:line="328" pos:column="25">if <condition pos:line="328" pos:column="28">(<expr><op:operator pos:line="328" pos:column="29">!</op:operator><name pos:line="328" pos:column="30">inComment</name> <op:operator pos:line="328" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="328" pos:column="43">(</op:operator><name pos:line="328" pos:column="44">style</name> <op:operator pos:line="328" pos:column="50">==</op:operator> <name pos:line="328" pos:column="53">SCE_CSS_COMMENT</name><op:operator pos:line="328" pos:column="68">)</op:operator></expr>)</condition><then pos:line="328" pos:column="70">
				<expr_stmt><expr><name pos:line="329" pos:column="33">levelCurrent</name><op:operator pos:line="329" pos:column="45">++</op:operator></expr>;</expr_stmt></then>
			<else pos:line="330" pos:column="25">else <if pos:line="330" pos:column="30">if <condition pos:line="330" pos:column="33">(<expr><name pos:line="330" pos:column="34">inComment</name> <op:operator pos:line="330" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="330" pos:column="47">(</op:operator><name pos:line="330" pos:column="48">style</name> <op:operator pos:line="330" pos:column="54">!=</op:operator> <name pos:line="330" pos:column="57">SCE_CSS_COMMENT</name><op:operator pos:line="330" pos:column="72">)</op:operator></expr>)</condition><then pos:line="330" pos:column="74">
				<expr_stmt><expr><name pos:line="331" pos:column="33">levelCurrent</name><op:operator pos:line="331" pos:column="45">--</op:operator></expr>;</expr_stmt></then></if></else></if>
			<expr_stmt><expr><name pos:line="332" pos:column="25">inComment</name> <op:operator pos:line="332" pos:column="35">=</op:operator> <op:operator pos:line="332" pos:column="37">(</op:operator><name pos:line="332" pos:column="38">style</name> <op:operator pos:line="332" pos:column="44">==</op:operator> <name pos:line="332" pos:column="47">SCE_CSS_COMMENT</name><op:operator pos:line="332" pos:column="62">)</op:operator></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><name pos:line="334" pos:column="21">style</name> <op:operator pos:line="334" pos:column="27">==</op:operator> <name pos:line="334" pos:column="30">SCE_CSS_OPERATOR</name></expr>)</condition><then pos:line="334" pos:column="47"> <block pos:line="334" pos:column="48">{
			<if pos:line="335" pos:column="25">if <condition pos:line="335" pos:column="28">(<expr><name pos:line="335" pos:column="29">ch</name> <op:operator pos:line="335" pos:column="32">==</op:operator> <lit:literal type="char" pos:line="335" pos:column="35">'{'</lit:literal></expr>)</condition><then pos:line="335" pos:column="39"> <block pos:line="335" pos:column="40">{
				<expr_stmt><expr><name pos:line="336" pos:column="33">levelCurrent</name><op:operator pos:line="336" pos:column="45">++</op:operator></expr>;</expr_stmt>
			}</block></then> <else pos:line="337" pos:column="27">else <if pos:line="337" pos:column="32">if <condition pos:line="337" pos:column="35">(<expr><name pos:line="337" pos:column="36">ch</name> <op:operator pos:line="337" pos:column="39">==</op:operator> <lit:literal type="char" pos:line="337" pos:column="42">'}'</lit:literal></expr>)</condition><then pos:line="337" pos:column="46"> <block pos:line="337" pos:column="47">{
				<expr_stmt><expr><name pos:line="338" pos:column="33">levelCurrent</name><op:operator pos:line="338" pos:column="45">--</op:operator></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></then></if>
		<if pos:line="341" pos:column="17">if <condition pos:line="341" pos:column="20">(<expr><name pos:line="341" pos:column="21">atEOL</name></expr>)</condition><then pos:line="341" pos:column="27"> <block pos:line="341" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="342" pos:column="25">int</name></type> <name pos:line="342" pos:column="29">lev</name> <init pos:line="342" pos:column="33">= <expr><name pos:line="342" pos:column="35">levelPrev</name></expr></init></decl>;</decl_stmt>
			<if pos:line="343" pos:column="25">if <condition pos:line="343" pos:column="28">(<expr><name pos:line="343" pos:column="29">visibleChars</name> <op:operator pos:line="343" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="343" pos:column="45">0</lit:literal> <op:operator pos:line="343" pos:column="47">&amp;&amp;</op:operator> <name pos:line="343" pos:column="50">foldCompact</name></expr>)</condition><then pos:line="343" pos:column="62">
				<expr_stmt><expr><name pos:line="344" pos:column="33">lev</name> <op:operator pos:line="344" pos:column="37">|=</op:operator> <name pos:line="344" pos:column="40">SC_FOLDLEVELWHITEFLAG</name></expr>;</expr_stmt></then></if>
			<if pos:line="345" pos:column="25">if <condition pos:line="345" pos:column="28">(<expr><op:operator pos:line="345" pos:column="29">(</op:operator><name pos:line="345" pos:column="30">levelCurrent</name> <op:operator pos:line="345" pos:column="43">&gt;</op:operator> <name pos:line="345" pos:column="45">levelPrev</name><op:operator pos:line="345" pos:column="54">)</op:operator> <op:operator pos:line="345" pos:column="56">&amp;&amp;</op:operator> <op:operator pos:line="345" pos:column="59">(</op:operator><name pos:line="345" pos:column="60">visibleChars</name> <op:operator pos:line="345" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="345" pos:column="75">0</lit:literal><op:operator pos:line="345" pos:column="76">)</op:operator></expr>)</condition><then pos:line="345" pos:column="78">
				<expr_stmt><expr><name pos:line="346" pos:column="33">lev</name> <op:operator pos:line="346" pos:column="37">|=</op:operator> <name pos:line="346" pos:column="40">SC_FOLDLEVELHEADERFLAG</name></expr>;</expr_stmt></then></if>
			<if pos:line="347" pos:column="25">if <condition pos:line="347" pos:column="28">(<expr><name pos:line="347" pos:column="29">lev</name> <op:operator pos:line="347" pos:column="33">!=</op:operator> <call><name><name pos:line="347" pos:column="36">styler</name><op:operator pos:line="347" pos:column="42">.</op:operator><name pos:line="347" pos:column="43">LevelAt</name></name><argument_list pos:line="347" pos:column="50">(<argument><expr><name pos:line="347" pos:column="51">lineCurrent</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="347" pos:column="64"> <block pos:line="347" pos:column="65">{
				<expr_stmt><expr><call><name><name pos:line="348" pos:column="33">styler</name><op:operator pos:line="348" pos:column="39">.</op:operator><name pos:line="348" pos:column="40">SetLevel</name></name><argument_list pos:line="348" pos:column="48">(<argument><expr><name pos:line="348" pos:column="49">lineCurrent</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="62">lev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="350" pos:column="25">lineCurrent</name><op:operator pos:line="350" pos:column="36">++</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="351" pos:column="25">levelPrev</name> <op:operator pos:line="351" pos:column="35">=</op:operator> <name pos:line="351" pos:column="37">levelCurrent</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="352" pos:column="25">visibleChars</name> <op:operator pos:line="352" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="352" pos:column="40">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="354" pos:column="17">if <condition pos:line="354" pos:column="20">(<expr><op:operator pos:line="354" pos:column="21">!</op:operator><call><name pos:line="354" pos:column="22">isspacechar</name><argument_list pos:line="354" pos:column="33">(<argument><expr><name pos:line="354" pos:column="34">ch</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="354" pos:column="38">
			<expr_stmt><expr><name pos:line="355" pos:column="25">visibleChars</name><op:operator pos:line="355" pos:column="37">++</op:operator></expr>;</expr_stmt></then></if>
	}</block></for>
	<comment type="line" pos:line="357" pos:column="9">// Fill in the real level of the next line, keeping the current flags as they will be filled in later</comment>
	<decl_stmt><decl><type><name pos:line="358" pos:column="9">int</name></type> <name pos:line="358" pos:column="13">flagsNext</name> <init pos:line="358" pos:column="23">= <expr><call><name><name pos:line="358" pos:column="25">styler</name><op:operator pos:line="358" pos:column="31">.</op:operator><name pos:line="358" pos:column="32">LevelAt</name></name><argument_list pos:line="358" pos:column="39">(<argument><expr><name pos:line="358" pos:column="40">lineCurrent</name></expr></argument>)</argument_list></call> <op:operator pos:line="358" pos:column="53">&amp;</op:operator> <op:operator pos:line="358" pos:column="55">~</op:operator><name pos:line="358" pos:column="56">SC_FOLDLEVELNUMBERMASK</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="359" pos:column="9">styler</name><op:operator pos:line="359" pos:column="15">.</op:operator><name pos:line="359" pos:column="16">SetLevel</name></name><argument_list pos:line="359" pos:column="24">(<argument><expr><name pos:line="359" pos:column="25">lineCurrent</name></expr></argument>, <argument><expr><name pos:line="359" pos:column="38">levelPrev</name> <op:operator pos:line="359" pos:column="48">|</op:operator> <name pos:line="359" pos:column="50">flagsNext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<decl_stmt><decl><type><specifier pos:line="362" pos:column="1">static</specifier> <specifier pos:line="362" pos:column="8">const</specifier> <name pos:line="362" pos:column="14">char</name> <type:modifier pos:line="362" pos:column="19">*</type:modifier> <specifier pos:line="362" pos:column="21">const</specifier></type> <name><name pos:line="362" pos:column="27">cssWordListDesc</name><index pos:line="362" pos:column="42">[]</index></name> <init pos:line="362" pos:column="45">= <expr><block pos:line="362" pos:column="47">{
	<expr><lit:literal type="string" pos:line="363" pos:column="9">"CSS1 Properties"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="364" pos:column="9">"Pseudo-classes"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="365" pos:column="9">"CSS2 Properties"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="366" pos:column="9">"CSS3 Properties"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="367" pos:column="9">"Pseudo-elements"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="368" pos:column="9">"Browser-Specific CSS Properties"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="369" pos:column="9">"Browser-Specific Pseudo-classes"</lit:literal></expr>,
	<expr><lit:literal type="string" pos:line="370" pos:column="9">"Browser-Specific Pseudo-elements"</lit:literal></expr>,
	<expr><lit:literal type="number" pos:line="371" pos:column="9">0</lit:literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="374" pos:column="1">LexerModule</name></type> <name pos:line="374" pos:column="13">lmCss</name><argument_list pos:line="374" pos:column="18">(<argument><expr><name pos:line="374" pos:column="19">SCLEX_CSS</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="30">ColouriseCssDoc</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="374" pos:column="47">"css"</lit:literal></expr></argument>, <argument><expr><name pos:line="374" pos:column="54">FoldCSSDoc</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="66">cssWordListDesc</name></expr></argument>)</argument_list></decl>;</decl_stmt>
</unit>
