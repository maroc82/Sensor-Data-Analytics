<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\Grid\ShortcutMapper.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ShortcutMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Notepad_plus.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">void</name></type> <name><name pos:line="33" pos:column="6">ShortcutMapper</name><op:operator pos:line="33" pos:column="20">::</op:operator><name pos:line="33" pos:column="22">initTabs</name></name><parameter_list pos:line="33" pos:column="30">()</parameter_list> <block pos:line="33" pos:column="33">{
	<decl_stmt><decl><type><name pos:line="34" pos:column="9">HWND</name></type> <name pos:line="34" pos:column="14">hTab</name> <init pos:line="34" pos:column="19">= <expr><name pos:line="34" pos:column="21">_hTabCtrl</name> <op:operator pos:line="34" pos:column="31">=</op:operator> <call><name><op:operator pos:line="34" pos:column="33">::</op:operator><name pos:line="34" pos:column="35">GetDlgItem</name></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">IDC_BABYGRID_TABBAR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="35" pos:column="9">TCITEM</name></type> <name pos:line="35" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">tie</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">mask</name></name> <op:operator pos:line="36" pos:column="18">=</op:operator> <name pos:line="36" pos:column="20">TCIF_TEXT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="37" pos:column="9">tie</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">pszText</name></name> <op:operator pos:line="37" pos:column="21">=</op:operator> <name><name pos:line="37" pos:column="23">tabNames</name><index pos:line="37" pos:column="31">[<expr><lit:literal type="number" pos:line="37" pos:column="32">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="38" pos:column="9">::</op:operator><name pos:line="38" pos:column="11">SendMessage</name></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">hTab</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">TCM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><call pos:line="38" pos:column="48">(<name pos:line="38" pos:column="49">LPARAM</name>)<argument_list pos:line="38" pos:column="56">(<argument><expr><op:operator pos:line="38" pos:column="57">&amp;</op:operator><name pos:line="38" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">tie</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">pszText</name></name> <op:operator pos:line="39" pos:column="21">=</op:operator> <name><name pos:line="39" pos:column="23">tabNames</name><index pos:line="39" pos:column="31">[<expr><lit:literal type="number" pos:line="39" pos:column="32">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="40" pos:column="9">::</op:operator><name pos:line="40" pos:column="11">SendMessage</name></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">hTab</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">TCM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="40" pos:column="45">1</lit:literal></expr></argument>, <argument><expr><call pos:line="40" pos:column="48">(<name pos:line="40" pos:column="49">LPARAM</name>)<argument_list pos:line="40" pos:column="56">(<argument><expr><op:operator pos:line="40" pos:column="57">&amp;</op:operator><name pos:line="40" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">tie</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">pszText</name></name> <op:operator pos:line="41" pos:column="21">=</op:operator> <name><name pos:line="41" pos:column="23">tabNames</name><index pos:line="41" pos:column="31">[<expr><lit:literal type="number" pos:line="41" pos:column="32">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="42" pos:column="9">::</op:operator><name pos:line="42" pos:column="11">SendMessage</name></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">hTab</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="29">TCM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="45">2</lit:literal></expr></argument>, <argument><expr><call pos:line="42" pos:column="48">(<name pos:line="42" pos:column="49">LPARAM</name>)<argument_list pos:line="42" pos:column="56">(<argument><expr><op:operator pos:line="42" pos:column="57">&amp;</op:operator><name pos:line="42" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">tie</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">pszText</name></name> <op:operator pos:line="43" pos:column="21">=</op:operator> <name><name pos:line="43" pos:column="23">tabNames</name><index pos:line="43" pos:column="31">[<expr><lit:literal type="number" pos:line="43" pos:column="32">3</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="44" pos:column="9">::</op:operator><name pos:line="44" pos:column="11">SendMessage</name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">hTab</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="29">TCM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="44" pos:column="45">3</lit:literal></expr></argument>, <argument><expr><call pos:line="44" pos:column="48">(<name pos:line="44" pos:column="49">LPARAM</name>)<argument_list pos:line="44" pos:column="56">(<argument><expr><op:operator pos:line="44" pos:column="57">&amp;</op:operator><name pos:line="44" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">tie</name><op:operator pos:line="45" pos:column="12">.</op:operator><name pos:line="45" pos:column="13">pszText</name></name> <op:operator pos:line="45" pos:column="21">=</op:operator> <name><name pos:line="45" pos:column="23">tabNames</name><index pos:line="45" pos:column="31">[<expr><lit:literal type="number" pos:line="45" pos:column="32">4</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="46" pos:column="9">::</op:operator><name pos:line="46" pos:column="11">SendMessage</name></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">hTab</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="29">TCM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="46" pos:column="45">4</lit:literal></expr></argument>, <argument><expr><call pos:line="46" pos:column="48">(<name pos:line="46" pos:column="49">LPARAM</name>)<argument_list pos:line="46" pos:column="56">(<argument><expr><op:operator pos:line="46" pos:column="57">&amp;</op:operator><name pos:line="46" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">TabCtrl_SetCurSel</name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">_hTabCtrl</name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="34">int</name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">_currentState</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="51" pos:column="1">void</name></type> <name><name pos:line="51" pos:column="6">ShortcutMapper</name><op:operator pos:line="51" pos:column="20">::</op:operator><name pos:line="51" pos:column="22">translateTab</name></name><parameter_list pos:line="51" pos:column="34">(<param><decl><type><name pos:line="51" pos:column="35">int</name></type> <name pos:line="51" pos:column="39">index</name></decl></param>, <param><decl><type><specifier pos:line="51" pos:column="46">const</specifier> <name pos:line="51" pos:column="52">TCHAR</name> <type:modifier pos:line="51" pos:column="58">*</type:modifier></type> <name pos:line="51" pos:column="60">newname</name></decl></param>)</parameter_list> <block pos:line="51" pos:column="69">{
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">index</name> <argument_list pos:line="52" pos:column="19">&lt; <argument><expr><lit:literal type="number" pos:line="52" pos:column="21">0</lit:literal> <op:operator pos:line="52" pos:column="23">||</op:operator> <name pos:line="52" pos:column="26">index</name></expr></argument> &gt;</argument_list></name> <lit:literal type="number" pos:line="52" pos:column="34">4</lit:literal></expr>)</condition><then pos:line="52" pos:column="36">
		<return pos:line="53" pos:column="17">return;</return></then></if>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">generic_strncpy</name><argument_list pos:line="54" pos:column="24">(<argument><expr><name><name pos:line="54" pos:column="25">tabNames</name><index pos:line="54" pos:column="33">[<expr><name pos:line="54" pos:column="34">index</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">newname</name></expr></argument>, <argument><expr><name pos:line="54" pos:column="51">maxTabName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="57" pos:column="1">void</name></type> <name><name pos:line="57" pos:column="6">ShortcutMapper</name><op:operator pos:line="57" pos:column="20">::</op:operator><name pos:line="57" pos:column="22">initBabyGrid</name></name><parameter_list pos:line="57" pos:column="34">()</parameter_list> <block pos:line="57" pos:column="37">{
	<decl_stmt><decl><type><name pos:line="58" pos:column="9">RECT</name></type> <name pos:line="58" pos:column="14">rect</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">getClientRect</name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name><name pos:line="61" pos:column="9">_babygrid</name><op:operator pos:line="61" pos:column="18">.</op:operator><name pos:line="61" pos:column="19">init</name></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">_hInst</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">IDD_BABYGRID_ID1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="62" pos:column="9">//_babygrid.reSizeTo(rect);</comment>
	<expr_stmt><expr><call><name><name pos:line="63" pos:column="9">_babygrid</name><op:operator pos:line="63" pos:column="18">.</op:operator><name pos:line="63" pos:column="19">reSizeToWH</name></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="64" pos:column="9">_babygrid</name><op:operator pos:line="64" pos:column="18">.</op:operator><name pos:line="64" pos:column="19">hideCursor</name></name><argument_list pos:line="64" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="65" pos:column="9">_babygrid</name><op:operator pos:line="65" pos:column="18">.</op:operator><name pos:line="65" pos:column="19">makeColAutoWidth</name></name><argument_list pos:line="65" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="66" pos:column="9">_babygrid</name><op:operator pos:line="66" pos:column="18">.</op:operator><name pos:line="66" pos:column="19">setColsNumbered</name></name><argument_list pos:line="66" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="66" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="67" pos:column="9">_babygrid</name><op:operator pos:line="67" pos:column="18">.</op:operator><name pos:line="67" pos:column="19">setColWidth</name></name><argument_list pos:line="67" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="67" pos:column="31">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="67" pos:column="34">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="68" pos:column="9">_babygrid</name><op:operator pos:line="68" pos:column="18">.</op:operator><name pos:line="68" pos:column="19">setColWidth</name></name><argument_list pos:line="68" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="68" pos:column="31">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="68" pos:column="34">250</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="71" pos:column="1">void</name></type> <name><name pos:line="71" pos:column="6">ShortcutMapper</name><op:operator pos:line="71" pos:column="20">::</op:operator><name pos:line="71" pos:column="22">fillOutBabyGrid</name></name><parameter_list pos:line="71" pos:column="37">()</parameter_list>
<block pos:line="72" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="73" pos:column="9">NppParameters</name> <type:modifier pos:line="73" pos:column="23">*</type:modifier></type><name pos:line="73" pos:column="24">nppParam</name> <init pos:line="73" pos:column="33">= <expr><call><name><name pos:line="73" pos:column="35">NppParameters</name><op:operator pos:line="73" pos:column="48">::</op:operator><name pos:line="73" pos:column="50">getInstance</name></name><argument_list pos:line="73" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="74" pos:column="9">_babygrid</name><op:operator pos:line="74" pos:column="18">.</op:operator><name pos:line="74" pos:column="19">clear</name></name><argument_list pos:line="74" pos:column="24">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="76" pos:column="9">size_t</name></type> <name pos:line="76" pos:column="16">nrItems</name> <init pos:line="76" pos:column="24">= <expr><lit:literal type="number" pos:line="76" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>

	<switch pos:line="78" pos:column="9">switch<condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">_currentState</name></expr>)</condition> <block pos:line="78" pos:column="31">{
		<case pos:line="79" pos:column="17">case <expr><name pos:line="79" pos:column="22">STATE_MENU</name></expr>: <block pos:line="79" pos:column="34">{
			<expr_stmt><expr><name pos:line="80" pos:column="25">nrItems</name> <op:operator pos:line="80" pos:column="33">=</op:operator> <call><name><name pos:line="80" pos:column="35">nppParam</name><op:operator pos:line="80" pos:column="43">-&gt;</op:operator><name pos:line="80" pos:column="45">getUserShortcuts</name></name><argument_list pos:line="80" pos:column="61">()</argument_list></call><op:operator pos:line="80" pos:column="63">.</op:operator><call><name pos:line="80" pos:column="64">size</name><argument_list pos:line="80" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="81" pos:column="25">_babygrid</name><op:operator pos:line="81" pos:column="34">.</op:operator><name pos:line="81" pos:column="35">setLineColNumber</name></name><argument_list pos:line="81" pos:column="51">(<argument><expr><name pos:line="81" pos:column="52">nrItems</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="61">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="82" pos:column="25">break;</break> }</block>
		</case><case pos:line="83" pos:column="17">case <expr><name pos:line="83" pos:column="22">STATE_MACRO</name></expr>: <block pos:line="83" pos:column="35">{
			<expr_stmt><expr><name pos:line="84" pos:column="25">nrItems</name> <op:operator pos:line="84" pos:column="33">=</op:operator> <call><name><name pos:line="84" pos:column="35">nppParam</name><op:operator pos:line="84" pos:column="43">-&gt;</op:operator><name pos:line="84" pos:column="45">getMacroList</name></name><argument_list pos:line="84" pos:column="57">()</argument_list></call><op:operator pos:line="84" pos:column="59">.</op:operator><call><name pos:line="84" pos:column="60">size</name><argument_list pos:line="84" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="85" pos:column="25">_babygrid</name><op:operator pos:line="85" pos:column="34">.</op:operator><name pos:line="85" pos:column="35">setLineColNumber</name></name><argument_list pos:line="85" pos:column="51">(<argument><expr><name pos:line="85" pos:column="52">nrItems</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="85" pos:column="61">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="86" pos:column="25">break;</break> }</block>
		</case><case pos:line="87" pos:column="17">case <expr><name pos:line="87" pos:column="22">STATE_USER</name></expr>: <block pos:line="87" pos:column="34">{
			<expr_stmt><expr><name pos:line="88" pos:column="25">nrItems</name> <op:operator pos:line="88" pos:column="33">=</op:operator> <call><name><name pos:line="88" pos:column="35">nppParam</name><op:operator pos:line="88" pos:column="43">-&gt;</op:operator><name pos:line="88" pos:column="45">getUserCommandList</name></name><argument_list pos:line="88" pos:column="63">()</argument_list></call><op:operator pos:line="88" pos:column="65">.</op:operator><call><name pos:line="88" pos:column="66">size</name><argument_list pos:line="88" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="89" pos:column="25">_babygrid</name><op:operator pos:line="89" pos:column="34">.</op:operator><name pos:line="89" pos:column="35">setLineColNumber</name></name><argument_list pos:line="89" pos:column="51">(<argument><expr><name pos:line="89" pos:column="52">nrItems</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="89" pos:column="61">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="90" pos:column="25">break;</break> }</block>
		</case><case pos:line="91" pos:column="17">case <expr><name pos:line="91" pos:column="22">STATE_PLUGIN</name></expr>: <block pos:line="91" pos:column="36">{
			<expr_stmt><expr><name pos:line="92" pos:column="25">nrItems</name> <op:operator pos:line="92" pos:column="33">=</op:operator> <call><name><name pos:line="92" pos:column="35">nppParam</name><op:operator pos:line="92" pos:column="43">-&gt;</op:operator><name pos:line="92" pos:column="45">getPluginCommandList</name></name><argument_list pos:line="92" pos:column="65">()</argument_list></call><op:operator pos:line="92" pos:column="67">.</op:operator><call><name pos:line="92" pos:column="68">size</name><argument_list pos:line="92" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="93" pos:column="25">_babygrid</name><op:operator pos:line="93" pos:column="34">.</op:operator><name pos:line="93" pos:column="35">setLineColNumber</name></name><argument_list pos:line="93" pos:column="51">(<argument><expr><name pos:line="93" pos:column="52">nrItems</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="93" pos:column="61">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="94" pos:column="25">break;</break> }</block>
		</case><case pos:line="95" pos:column="17">case <expr><name pos:line="95" pos:column="22">STATE_SCINTILLA</name></expr>: <block pos:line="95" pos:column="39">{
			<expr_stmt><expr><name pos:line="96" pos:column="25">nrItems</name> <op:operator pos:line="96" pos:column="33">=</op:operator> <call><name><name pos:line="96" pos:column="35">nppParam</name><op:operator pos:line="96" pos:column="43">-&gt;</op:operator><name pos:line="96" pos:column="45">getScintillaKeyList</name></name><argument_list pos:line="96" pos:column="64">()</argument_list></call><op:operator pos:line="96" pos:column="66">.</op:operator><call><name pos:line="96" pos:column="67">size</name><argument_list pos:line="96" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="97" pos:column="25">_babygrid</name><op:operator pos:line="97" pos:column="34">.</op:operator><name pos:line="97" pos:column="35">setLineColNumber</name></name><argument_list pos:line="97" pos:column="51">(<argument><expr><name pos:line="97" pos:column="52">nrItems</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="61">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="98" pos:column="25">break;</break> }</block>
	</case>}</block></switch>

	<expr_stmt><expr><call><name><name pos:line="101" pos:column="9">_babygrid</name><op:operator pos:line="101" pos:column="18">.</op:operator><name pos:line="101" pos:column="19">setText</name></name><argument_list pos:line="101" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="101" pos:column="27">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="101" pos:column="30">1</lit:literal></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="33">TEXT</name><argument_list pos:line="101" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="38">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="102" pos:column="9">_babygrid</name><op:operator pos:line="102" pos:column="18">.</op:operator><name pos:line="102" pos:column="19">setText</name></name><argument_list pos:line="102" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="102" pos:column="27">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="102" pos:column="30">2</lit:literal></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="33">TEXT</name><argument_list pos:line="102" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="38">"Shortcut"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<switch pos:line="104" pos:column="9">switch<condition pos:line="104" pos:column="15">(<expr><name pos:line="104" pos:column="16">_currentState</name></expr>)</condition> <block pos:line="104" pos:column="31">{
		<case pos:line="105" pos:column="17">case <expr><name pos:line="105" pos:column="22">STATE_MENU</name></expr>: <block pos:line="105" pos:column="34">{
			<decl_stmt><decl><type><name><name pos:line="106" pos:column="25">vector</name><argument_list pos:line="106" pos:column="31">&lt;<argument><expr><name pos:line="106" pos:column="32">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="106" pos:column="49">&amp;</type:modifier></type> <name pos:line="106" pos:column="51">cshortcuts</name> <init pos:line="106" pos:column="62">= <expr><call><name><name pos:line="106" pos:column="64">nppParam</name><op:operator pos:line="106" pos:column="72">-&gt;</op:operator><name pos:line="106" pos:column="74">getUserShortcuts</name></name><argument_list pos:line="106" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="107" pos:column="25">for(<init><decl><type><name pos:line="107" pos:column="29">size_t</name></type> <name pos:line="107" pos:column="36">i</name> <init pos:line="107" pos:column="38">= <expr><lit:literal type="number" pos:line="107" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="107" pos:column="43">i</name> <op:operator pos:line="107" pos:column="45">&lt;</op:operator> <name pos:line="107" pos:column="47">nrItems</name></expr>;</condition> <incr><expr><name pos:line="107" pos:column="56">i</name><op:operator pos:line="107" pos:column="57">++</op:operator></expr></incr>) <block pos:line="107" pos:column="61">{
				<expr_stmt><expr><call><name><name pos:line="108" pos:column="33">_babygrid</name><op:operator pos:line="108" pos:column="42">.</op:operator><name pos:line="108" pos:column="43">setText</name></name><argument_list pos:line="108" pos:column="50">(<argument><expr><name pos:line="108" pos:column="51">i</name><op:operator pos:line="108" pos:column="52">+</op:operator><lit:literal type="number" pos:line="108" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="108" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="59">cshortcuts</name><index pos:line="108" pos:column="69">[<expr><name pos:line="108" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="108" pos:column="72">.</op:operator><call><name pos:line="108" pos:column="73">getName</name><argument_list pos:line="108" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="109" pos:column="33">_babygrid</name><op:operator pos:line="109" pos:column="42">.</op:operator><name pos:line="109" pos:column="43">setText</name></name><argument_list pos:line="109" pos:column="50">(<argument><expr><name pos:line="109" pos:column="51">i</name><op:operator pos:line="109" pos:column="52">+</op:operator><lit:literal type="number" pos:line="109" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="109" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="59">cshortcuts</name><index pos:line="109" pos:column="69">[<expr><name pos:line="109" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="109" pos:column="72">.</op:operator><call><name pos:line="109" pos:column="73">toString</name><argument_list pos:line="109" pos:column="81">()</argument_list></call><op:operator pos:line="109" pos:column="83">.</op:operator><call><name pos:line="109" pos:column="84">c_str</name><argument_list pos:line="109" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
            <expr_stmt><expr><call><name><op:operator pos:line="111" pos:column="13">::</op:operator><name pos:line="111" pos:column="15">EnableWindow</name></name><argument_list pos:line="111" pos:column="27">(<argument><expr><call><name><op:operator pos:line="111" pos:column="28">::</op:operator><name pos:line="111" pos:column="30">GetDlgItem</name></name><argument_list pos:line="111" pos:column="40">(<argument><expr><name pos:line="111" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="111" pos:column="49">IDM_BABYGRID_MODIFY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="111" pos:column="71">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="112" pos:column="13">::</op:operator><name pos:line="112" pos:column="15">EnableWindow</name></name><argument_list pos:line="112" pos:column="27">(<argument><expr><call><name><op:operator pos:line="112" pos:column="28">::</op:operator><name pos:line="112" pos:column="30">GetDlgItem</name></name><argument_list pos:line="112" pos:column="40">(<argument><expr><name pos:line="112" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="49">IDM_BABYGRID_DELETE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="112" pos:column="71">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="113" pos:column="25">break;</break> }</block>
		</case><case pos:line="114" pos:column="17">case <expr><name pos:line="114" pos:column="22">STATE_MACRO</name></expr>: <block pos:line="114" pos:column="35">{
			<decl_stmt><decl><type><name><name pos:line="115" pos:column="25">vector</name><argument_list pos:line="115" pos:column="31">&lt;<argument><expr><name pos:line="115" pos:column="32">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="115" pos:column="47">&amp;</type:modifier></type> <name pos:line="115" pos:column="49">cshortcuts</name> <init pos:line="115" pos:column="60">= <expr><call><name><name pos:line="115" pos:column="62">nppParam</name><op:operator pos:line="115" pos:column="70">-&gt;</op:operator><name pos:line="115" pos:column="72">getMacroList</name></name><argument_list pos:line="115" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="116" pos:column="25">for(<init><decl><type><name pos:line="116" pos:column="29">size_t</name></type> <name pos:line="116" pos:column="36">i</name> <init pos:line="116" pos:column="38">= <expr><lit:literal type="number" pos:line="116" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="116" pos:column="43">i</name> <op:operator pos:line="116" pos:column="45">&lt;</op:operator> <name pos:line="116" pos:column="47">nrItems</name></expr>;</condition> <incr><expr><name pos:line="116" pos:column="56">i</name><op:operator pos:line="116" pos:column="57">++</op:operator></expr></incr>) <block pos:line="116" pos:column="61">{
				<expr_stmt><expr><call><name><name pos:line="117" pos:column="33">_babygrid</name><op:operator pos:line="117" pos:column="42">.</op:operator><name pos:line="117" pos:column="43">setText</name></name><argument_list pos:line="117" pos:column="50">(<argument><expr><name pos:line="117" pos:column="51">i</name><op:operator pos:line="117" pos:column="52">+</op:operator><lit:literal type="number" pos:line="117" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="117" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="59">cshortcuts</name><index pos:line="117" pos:column="69">[<expr><name pos:line="117" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="117" pos:column="72">.</op:operator><call><name pos:line="117" pos:column="73">getName</name><argument_list pos:line="117" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="118" pos:column="33">_babygrid</name><op:operator pos:line="118" pos:column="42">.</op:operator><name pos:line="118" pos:column="43">setText</name></name><argument_list pos:line="118" pos:column="50">(<argument><expr><name pos:line="118" pos:column="51">i</name><op:operator pos:line="118" pos:column="52">+</op:operator><lit:literal type="number" pos:line="118" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="118" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="59">cshortcuts</name><index pos:line="118" pos:column="69">[<expr><name pos:line="118" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="118" pos:column="72">.</op:operator><call><name pos:line="118" pos:column="73">toString</name><argument_list pos:line="118" pos:column="81">()</argument_list></call><op:operator pos:line="118" pos:column="83">.</op:operator><call><name pos:line="118" pos:column="84">c_str</name><argument_list pos:line="118" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
            <decl_stmt><decl><type><name pos:line="120" pos:column="13">bool</name></type> <name pos:line="120" pos:column="18">shouldBeEnabled</name> <init pos:line="120" pos:column="34">= <expr><name pos:line="120" pos:column="36">nrItems</name> <op:operator pos:line="120" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="120" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="121" pos:column="13">::</op:operator><name pos:line="121" pos:column="15">EnableWindow</name></name><argument_list pos:line="121" pos:column="27">(<argument><expr><call><name><op:operator pos:line="121" pos:column="28">::</op:operator><name pos:line="121" pos:column="30">GetDlgItem</name></name><argument_list pos:line="121" pos:column="40">(<argument><expr><name pos:line="121" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="49">IDM_BABYGRID_MODIFY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="121" pos:column="71">shouldBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="122" pos:column="13">::</op:operator><name pos:line="122" pos:column="15">EnableWindow</name></name><argument_list pos:line="122" pos:column="27">(<argument><expr><call><name><op:operator pos:line="122" pos:column="28">::</op:operator><name pos:line="122" pos:column="30">GetDlgItem</name></name><argument_list pos:line="122" pos:column="40">(<argument><expr><name pos:line="122" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="122" pos:column="49">IDM_BABYGRID_DELETE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="122" pos:column="71">shouldBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="123" pos:column="25">break;</break> }</block>
		</case><case pos:line="124" pos:column="17">case <expr><name pos:line="124" pos:column="22">STATE_USER</name></expr>: <block pos:line="124" pos:column="34">{
			<decl_stmt><decl><type><name><name pos:line="125" pos:column="25">vector</name><argument_list pos:line="125" pos:column="31">&lt;<argument><expr><name pos:line="125" pos:column="32">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="125" pos:column="45">&amp;</type:modifier></type> <name pos:line="125" pos:column="47">cshortcuts</name> <init pos:line="125" pos:column="58">= <expr><call><name><name pos:line="125" pos:column="60">nppParam</name><op:operator pos:line="125" pos:column="68">-&gt;</op:operator><name pos:line="125" pos:column="70">getUserCommandList</name></name><argument_list pos:line="125" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="126" pos:column="25">for(<init><decl><type><name pos:line="126" pos:column="29">size_t</name></type> <name pos:line="126" pos:column="36">i</name> <init pos:line="126" pos:column="38">= <expr><lit:literal type="number" pos:line="126" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="126" pos:column="43">i</name> <op:operator pos:line="126" pos:column="45">&lt;</op:operator> <name pos:line="126" pos:column="47">nrItems</name></expr>;</condition> <incr><expr><name pos:line="126" pos:column="56">i</name><op:operator pos:line="126" pos:column="57">++</op:operator></expr></incr>) <block pos:line="126" pos:column="61">{
				<expr_stmt><expr><call><name><name pos:line="127" pos:column="33">_babygrid</name><op:operator pos:line="127" pos:column="42">.</op:operator><name pos:line="127" pos:column="43">setText</name></name><argument_list pos:line="127" pos:column="50">(<argument><expr><name pos:line="127" pos:column="51">i</name><op:operator pos:line="127" pos:column="52">+</op:operator><lit:literal type="number" pos:line="127" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="127" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="59">cshortcuts</name><index pos:line="127" pos:column="69">[<expr><name pos:line="127" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="127" pos:column="72">.</op:operator><call><name pos:line="127" pos:column="73">getName</name><argument_list pos:line="127" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="128" pos:column="33">_babygrid</name><op:operator pos:line="128" pos:column="42">.</op:operator><name pos:line="128" pos:column="43">setText</name></name><argument_list pos:line="128" pos:column="50">(<argument><expr><name pos:line="128" pos:column="51">i</name><op:operator pos:line="128" pos:column="52">+</op:operator><lit:literal type="number" pos:line="128" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="59">cshortcuts</name><index pos:line="128" pos:column="69">[<expr><name pos:line="128" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="128" pos:column="72">.</op:operator><call><name pos:line="128" pos:column="73">toString</name><argument_list pos:line="128" pos:column="81">()</argument_list></call><op:operator pos:line="128" pos:column="83">.</op:operator><call><name pos:line="128" pos:column="84">c_str</name><argument_list pos:line="128" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
            <decl_stmt><decl><type><name pos:line="130" pos:column="13">bool</name></type> <name pos:line="130" pos:column="18">shouldBeEnabled</name> <init pos:line="130" pos:column="34">= <expr><name pos:line="130" pos:column="36">nrItems</name> <op:operator pos:line="130" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="130" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="131" pos:column="13">::</op:operator><name pos:line="131" pos:column="15">EnableWindow</name></name><argument_list pos:line="131" pos:column="27">(<argument><expr><call><name><op:operator pos:line="131" pos:column="28">::</op:operator><name pos:line="131" pos:column="30">GetDlgItem</name></name><argument_list pos:line="131" pos:column="40">(<argument><expr><name pos:line="131" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="49">IDM_BABYGRID_MODIFY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="131" pos:column="71">shouldBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="132" pos:column="13">::</op:operator><name pos:line="132" pos:column="15">EnableWindow</name></name><argument_list pos:line="132" pos:column="27">(<argument><expr><call><name><op:operator pos:line="132" pos:column="28">::</op:operator><name pos:line="132" pos:column="30">GetDlgItem</name></name><argument_list pos:line="132" pos:column="40">(<argument><expr><name pos:line="132" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="132" pos:column="49">IDM_BABYGRID_DELETE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="132" pos:column="71">shouldBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="133" pos:column="25">break;</break> }</block>
		</case><case pos:line="134" pos:column="17">case <expr><name pos:line="134" pos:column="22">STATE_PLUGIN</name></expr>: <block pos:line="134" pos:column="36">{
			<decl_stmt><decl><type><name><name pos:line="135" pos:column="25">vector</name><argument_list pos:line="135" pos:column="31">&lt;<argument><expr><name pos:line="135" pos:column="32">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="135" pos:column="51">&amp;</type:modifier></type> <name pos:line="135" pos:column="53">cshortcuts</name> <init pos:line="135" pos:column="64">= <expr><call><name><name pos:line="135" pos:column="66">nppParam</name><op:operator pos:line="135" pos:column="74">-&gt;</op:operator><name pos:line="135" pos:column="76">getPluginCommandList</name></name><argument_list pos:line="135" pos:column="96">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="136" pos:column="25">for(<init><decl><type><name pos:line="136" pos:column="29">size_t</name></type> <name pos:line="136" pos:column="36">i</name> <init pos:line="136" pos:column="38">= <expr><lit:literal type="number" pos:line="136" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="136" pos:column="43">i</name> <op:operator pos:line="136" pos:column="45">&lt;</op:operator> <name pos:line="136" pos:column="47">nrItems</name></expr>;</condition> <incr><expr><name pos:line="136" pos:column="56">i</name><op:operator pos:line="136" pos:column="57">++</op:operator></expr></incr>) <block pos:line="136" pos:column="61">{
				<expr_stmt><expr><call><name><name pos:line="137" pos:column="33">_babygrid</name><op:operator pos:line="137" pos:column="42">.</op:operator><name pos:line="137" pos:column="43">setText</name></name><argument_list pos:line="137" pos:column="50">(<argument><expr><name pos:line="137" pos:column="51">i</name><op:operator pos:line="137" pos:column="52">+</op:operator><lit:literal type="number" pos:line="137" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="137" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="59">cshortcuts</name><index pos:line="137" pos:column="69">[<expr><name pos:line="137" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="137" pos:column="72">.</op:operator><call><name pos:line="137" pos:column="73">getName</name><argument_list pos:line="137" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="138" pos:column="33">_babygrid</name><op:operator pos:line="138" pos:column="42">.</op:operator><name pos:line="138" pos:column="43">setText</name></name><argument_list pos:line="138" pos:column="50">(<argument><expr><name pos:line="138" pos:column="51">i</name><op:operator pos:line="138" pos:column="52">+</op:operator><lit:literal type="number" pos:line="138" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="138" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="59">cshortcuts</name><index pos:line="138" pos:column="69">[<expr><name pos:line="138" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="138" pos:column="72">.</op:operator><call><name pos:line="138" pos:column="73">toString</name><argument_list pos:line="138" pos:column="81">()</argument_list></call><op:operator pos:line="138" pos:column="83">.</op:operator><call><name pos:line="138" pos:column="84">c_str</name><argument_list pos:line="138" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
            <decl_stmt><decl><type><name pos:line="140" pos:column="13">bool</name></type> <name pos:line="140" pos:column="18">shouldBeEnabled</name> <init pos:line="140" pos:column="34">= <expr><name pos:line="140" pos:column="36">nrItems</name> <op:operator pos:line="140" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="140" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="141" pos:column="13">::</op:operator><name pos:line="141" pos:column="15">EnableWindow</name></name><argument_list pos:line="141" pos:column="27">(<argument><expr><call><name><op:operator pos:line="141" pos:column="28">::</op:operator><name pos:line="141" pos:column="30">GetDlgItem</name></name><argument_list pos:line="141" pos:column="40">(<argument><expr><name pos:line="141" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="141" pos:column="49">IDM_BABYGRID_MODIFY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="71">shouldBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="142" pos:column="13">::</op:operator><name pos:line="142" pos:column="15">EnableWindow</name></name><argument_list pos:line="142" pos:column="27">(<argument><expr><call><name><op:operator pos:line="142" pos:column="28">::</op:operator><name pos:line="142" pos:column="30">GetDlgItem</name></name><argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">IDM_BABYGRID_DELETE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="142" pos:column="71">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="143" pos:column="25">break;</break> }</block>
		</case><case pos:line="144" pos:column="17">case <expr><name pos:line="144" pos:column="22">STATE_SCINTILLA</name></expr>: <block pos:line="144" pos:column="39">{
			<decl_stmt><decl><type><name><name pos:line="145" pos:column="25">vector</name><argument_list pos:line="145" pos:column="31">&lt;<argument><expr><name pos:line="145" pos:column="32">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="145" pos:column="49">&amp;</type:modifier></type> <name pos:line="145" pos:column="51">cshortcuts</name> <init pos:line="145" pos:column="62">= <expr><call><name><name pos:line="145" pos:column="64">nppParam</name><op:operator pos:line="145" pos:column="72">-&gt;</op:operator><name pos:line="145" pos:column="74">getScintillaKeyList</name></name><argument_list pos:line="145" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="146" pos:column="25">for(<init><decl><type><name pos:line="146" pos:column="29">size_t</name></type> <name pos:line="146" pos:column="36">i</name> <init pos:line="146" pos:column="38">= <expr><lit:literal type="number" pos:line="146" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="146" pos:column="43">i</name> <op:operator pos:line="146" pos:column="45">&lt;</op:operator> <name pos:line="146" pos:column="47">nrItems</name></expr>;</condition> <incr><expr><name pos:line="146" pos:column="56">i</name><op:operator pos:line="146" pos:column="57">++</op:operator></expr></incr>) <block pos:line="146" pos:column="61">{
				<expr_stmt><expr><call><name><name pos:line="147" pos:column="33">_babygrid</name><op:operator pos:line="147" pos:column="42">.</op:operator><name pos:line="147" pos:column="43">setText</name></name><argument_list pos:line="147" pos:column="50">(<argument><expr><name pos:line="147" pos:column="51">i</name><op:operator pos:line="147" pos:column="52">+</op:operator><lit:literal type="number" pos:line="147" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="147" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="59">cshortcuts</name><index pos:line="147" pos:column="69">[<expr><name pos:line="147" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="147" pos:column="72">.</op:operator><call><name pos:line="147" pos:column="73">getName</name><argument_list pos:line="147" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="148" pos:column="33">_babygrid</name><op:operator pos:line="148" pos:column="42">.</op:operator><name pos:line="148" pos:column="43">setText</name></name><argument_list pos:line="148" pos:column="50">(<argument><expr><name pos:line="148" pos:column="51">i</name><op:operator pos:line="148" pos:column="52">+</op:operator><lit:literal type="number" pos:line="148" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="59">cshortcuts</name><index pos:line="148" pos:column="69">[<expr><name pos:line="148" pos:column="70">i</name></expr>]</index></name><op:operator pos:line="148" pos:column="72">.</op:operator><call><name pos:line="148" pos:column="73">toString</name><argument_list pos:line="148" pos:column="81">()</argument_list></call><op:operator pos:line="148" pos:column="83">.</op:operator><call><name pos:line="148" pos:column="84">c_str</name><argument_list pos:line="148" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
            <expr_stmt><expr><call><name><op:operator pos:line="150" pos:column="13">::</op:operator><name pos:line="150" pos:column="15">EnableWindow</name></name><argument_list pos:line="150" pos:column="27">(<argument><expr><call><name><op:operator pos:line="150" pos:column="28">::</op:operator><name pos:line="150" pos:column="30">GetDlgItem</name></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="49">IDM_BABYGRID_MODIFY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="150" pos:column="71">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="151" pos:column="13">::</op:operator><name pos:line="151" pos:column="15">EnableWindow</name></name><argument_list pos:line="151" pos:column="27">(<argument><expr><call><name><op:operator pos:line="151" pos:column="28">::</op:operator><name pos:line="151" pos:column="30">GetDlgItem</name></name><argument_list pos:line="151" pos:column="40">(<argument><expr><name pos:line="151" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="49">IDM_BABYGRID_DELETE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="151" pos:column="71">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="152" pos:column="25">break;</break> }</block>
	</case>}</block></switch>
}</block></function>

<function><type><name pos:line="156" pos:column="1">BOOL</name> <name pos:line="156" pos:column="6">CALLBACK</name></type> <name><name pos:line="156" pos:column="15">ShortcutMapper</name><op:operator pos:line="156" pos:column="29">::</op:operator><name pos:line="156" pos:column="31">run_dlgProc</name></name><parameter_list pos:line="156" pos:column="42">(<param><decl><type><name pos:line="156" pos:column="43">UINT</name></type> <name pos:line="156" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="57">WPARAM</name></type> <name pos:line="156" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="72">LPARAM</name></type> <name pos:line="156" pos:column="79">lParam</name></decl></param>)</parameter_list>
<block pos:line="157" pos:column="1">{
	<switch pos:line="158" pos:column="9">switch <condition pos:line="158" pos:column="16">(<expr><name pos:line="158" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="159" pos:column="9">{
		<case pos:line="160" pos:column="17">case <expr><name pos:line="160" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="161" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="162" pos:column="25">initBabyGrid</name><argument_list pos:line="162" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="163" pos:column="25">initTabs</name><argument_list pos:line="163" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="164" pos:column="25">fillOutBabyGrid</name><argument_list pos:line="164" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="165" pos:column="25">_babygrid</name><op:operator pos:line="165" pos:column="34">.</op:operator><name pos:line="165" pos:column="35">display</name></name><argument_list pos:line="165" pos:column="42">()</argument_list></call></expr>;</expr_stmt>	
			<expr_stmt><expr><call><name pos:line="166" pos:column="25">goToCenter</name><argument_list pos:line="166" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="167" pos:column="25">return <expr><name pos:line="167" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="170" pos:column="17">case <expr><name pos:line="170" pos:column="22">WM_NOTIFY</name></expr>: <block pos:line="170" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="171" pos:column="25">NMHDR</name></type> <name pos:line="171" pos:column="31">nmh</name> <init pos:line="171" pos:column="35">= <expr><op:operator pos:line="171" pos:column="37">*</op:operator><op:operator pos:line="171" pos:column="38">(</op:operator><op:operator pos:line="171" pos:column="39">(</op:operator><name pos:line="171" pos:column="40">NMHDR</name><op:operator pos:line="171" pos:column="45">*</op:operator><op:operator pos:line="171" pos:column="46">)</op:operator><name pos:line="171" pos:column="47">lParam</name><op:operator pos:line="171" pos:column="53">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="172" pos:column="25">if <condition pos:line="172" pos:column="28">(<expr><name><name pos:line="172" pos:column="29">nmh</name><op:operator pos:line="172" pos:column="32">.</op:operator><name pos:line="172" pos:column="33">hwndFrom</name></name> <op:operator pos:line="172" pos:column="42">==</op:operator> <name pos:line="172" pos:column="45">_hTabCtrl</name></expr>)</condition><then pos:line="172" pos:column="55"> <block pos:line="172" pos:column="56">{
				<if pos:line="173" pos:column="33">if <condition pos:line="173" pos:column="36">(<expr><name><name pos:line="173" pos:column="37">nmh</name><op:operator pos:line="173" pos:column="40">.</op:operator><name pos:line="173" pos:column="41">code</name></name> <op:operator pos:line="173" pos:column="46">==</op:operator> <name pos:line="173" pos:column="49">TCN_SELCHANGE</name></expr>)</condition><then pos:line="173" pos:column="63"> <block pos:line="173" pos:column="64">{
					<decl_stmt><decl><type><name pos:line="174" pos:column="41">int</name></type> <name pos:line="174" pos:column="45">index</name> <init pos:line="174" pos:column="51">= <expr><call><name pos:line="174" pos:column="53">TabCtrl_GetCurSel</name><argument_list pos:line="174" pos:column="70">(<argument><expr><name pos:line="174" pos:column="71">_hTabCtrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<switch pos:line="175" pos:column="41">switch <condition pos:line="175" pos:column="48">(<expr><name pos:line="175" pos:column="49">index</name></expr>)</condition> <block pos:line="175" pos:column="56">{
						<case pos:line="176" pos:column="49">case <expr><lit:literal type="number" pos:line="176" pos:column="54">0</lit:literal></expr>:
							<expr_stmt><expr><name pos:line="177" pos:column="57">_currentState</name> <op:operator pos:line="177" pos:column="71">=</op:operator> <name pos:line="177" pos:column="73">STATE_MENU</name></expr>;</expr_stmt>
							<break pos:line="178" pos:column="57">break;</break>
						</case><case pos:line="179" pos:column="49">case <expr><lit:literal type="number" pos:line="179" pos:column="54">1</lit:literal></expr>:
							<expr_stmt><expr><name pos:line="180" pos:column="57">_currentState</name> <op:operator pos:line="180" pos:column="71">=</op:operator> <name pos:line="180" pos:column="73">STATE_MACRO</name></expr>;</expr_stmt>
							<break pos:line="181" pos:column="57">break;</break>
						</case><case pos:line="182" pos:column="49">case <expr><lit:literal type="number" pos:line="182" pos:column="54">2</lit:literal></expr>:
							<expr_stmt><expr><name pos:line="183" pos:column="57">_currentState</name> <op:operator pos:line="183" pos:column="71">=</op:operator> <name pos:line="183" pos:column="73">STATE_USER</name></expr>;</expr_stmt>
							<break pos:line="184" pos:column="57">break;</break>
						</case><case pos:line="185" pos:column="49">case <expr><lit:literal type="number" pos:line="185" pos:column="54">3</lit:literal></expr>:
							<expr_stmt><expr><name pos:line="186" pos:column="57">_currentState</name> <op:operator pos:line="186" pos:column="71">=</op:operator> <name pos:line="186" pos:column="73">STATE_PLUGIN</name></expr>;</expr_stmt>
							<break pos:line="187" pos:column="57">break;</break>
						</case><case pos:line="188" pos:column="49">case <expr><lit:literal type="number" pos:line="188" pos:column="54">4</lit:literal></expr>:
							<expr_stmt><expr><name pos:line="189" pos:column="57">_currentState</name> <op:operator pos:line="189" pos:column="71">=</op:operator> <name pos:line="189" pos:column="73">STATE_SCINTILLA</name></expr>;</expr_stmt>
							<break pos:line="190" pos:column="57">break;</break>
					</case>}</block></switch>
					<expr_stmt><expr><call><name pos:line="192" pos:column="41">fillOutBabyGrid</name><argument_list pos:line="192" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<break pos:line="195" pos:column="25">break;</break> }</block>

		</case><case pos:line="197" pos:column="17">case <expr><name pos:line="197" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="198" pos:column="17">{
			<switch pos:line="199" pos:column="25">switch <condition pos:line="199" pos:column="32">(<expr><call><name pos:line="199" pos:column="33">LOWORD</name><argument_list pos:line="199" pos:column="39">(<argument><expr><name pos:line="199" pos:column="40">wParam</name></expr></argument>)</argument_list></call></expr>)</condition>
			<block pos:line="200" pos:column="25">{
				<case pos:line="201" pos:column="33">case <expr><name pos:line="201" pos:column="38">IDCANCEL</name></expr> :
				<block pos:line="202" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="203" pos:column="41">::</op:operator><name pos:line="203" pos:column="43">EndDialog</name></name><argument_list pos:line="203" pos:column="52">(<argument><expr><name pos:line="203" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="203" pos:column="61">-</op:operator><lit:literal type="number" pos:line="203" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="204" pos:column="41">return <expr><name pos:line="204" pos:column="48">TRUE</name></expr>;</return>
				}</block>
				</case><case pos:line="206" pos:column="33">case <expr><name pos:line="206" pos:column="38">IDOK</name></expr> :
				<block pos:line="207" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="208" pos:column="41">::</op:operator><name pos:line="208" pos:column="43">EndDialog</name></name><argument_list pos:line="208" pos:column="52">(<argument><expr><name pos:line="208" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="208" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="209" pos:column="41">return <expr><name pos:line="209" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="212" pos:column="33">case <expr><name pos:line="212" pos:column="38">IDM_BABYGRID_MODIFY</name></expr> :
				<block pos:line="213" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="214" pos:column="41">NppParameters</name> <type:modifier pos:line="214" pos:column="55">*</type:modifier></type><name pos:line="214" pos:column="56">nppParam</name> <init pos:line="214" pos:column="65">= <expr><call><name><name pos:line="214" pos:column="67">NppParameters</name><op:operator pos:line="214" pos:column="80">::</op:operator><name pos:line="214" pos:column="82">getInstance</name></name><argument_list pos:line="214" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="215" pos:column="41">int</name></type> <name pos:line="215" pos:column="45">row</name> <init pos:line="215" pos:column="49">= <expr><call><name><name pos:line="215" pos:column="51">_babygrid</name><op:operator pos:line="215" pos:column="60">.</op:operator><name pos:line="215" pos:column="61">getSelectedRow</name></name><argument_list pos:line="215" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>

					<switch pos:line="217" pos:column="41">switch<condition pos:line="217" pos:column="47">(<expr><name pos:line="217" pos:column="48">_currentState</name></expr>)</condition> <block pos:line="217" pos:column="63">{
						<case pos:line="218" pos:column="49">case <expr><name pos:line="218" pos:column="54">STATE_MENU</name></expr>: <block pos:line="218" pos:column="66">{
							<comment type="line" pos:line="219" pos:column="57">//Get CommandShortcut corresponding to row</comment>
							<decl_stmt><decl><type><name><name pos:line="220" pos:column="57">vector</name><argument_list pos:line="220" pos:column="63">&lt;<argument><expr><name pos:line="220" pos:column="64">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="220" pos:column="81">&amp;</type:modifier></type> <name pos:line="220" pos:column="83">shortcuts</name> <init pos:line="220" pos:column="93">= <expr><call><name><name pos:line="220" pos:column="95">nppParam</name><op:operator pos:line="220" pos:column="103">-&gt;</op:operator><name pos:line="220" pos:column="105">getUserShortcuts</name></name><argument_list pos:line="220" pos:column="121">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="221" pos:column="57">CommandShortcut</name></type> <name pos:line="221" pos:column="73">csc</name> <init pos:line="221" pos:column="77">= <expr><name><name pos:line="221" pos:column="79">shortcuts</name><index pos:line="221" pos:column="88">[<expr><name pos:line="221" pos:column="89">row</name> <op:operator pos:line="221" pos:column="93">-</op:operator> <lit:literal type="number" pos:line="221" pos:column="95">1</lit:literal></expr>]</index></name></expr></init><op:operator pos:line="221" pos:column="97">,</op:operator> <name pos:line="221" pos:column="99">prevcsc</name> <init pos:line="221" pos:column="107">= <expr><name><name pos:line="221" pos:column="109">shortcuts</name><index pos:line="221" pos:column="118">[<expr><name pos:line="221" pos:column="119">row</name> <op:operator pos:line="221" pos:column="123">-</op:operator> <lit:literal type="number" pos:line="221" pos:column="125">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="222" pos:column="57">csc</name><op:operator pos:line="222" pos:column="60">.</op:operator><name pos:line="222" pos:column="61">init</name></name><argument_list pos:line="222" pos:column="65">(<argument><expr><name pos:line="222" pos:column="66">_hInst</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="74">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="223" pos:column="57">if <condition pos:line="223" pos:column="60">(<expr><call><name><name pos:line="223" pos:column="61">csc</name><op:operator pos:line="223" pos:column="64">.</op:operator><name pos:line="223" pos:column="65">doDialog</name></name><argument_list pos:line="223" pos:column="73">()</argument_list></call> <op:operator pos:line="223" pos:column="76">!=</op:operator> <op:operator pos:line="223" pos:column="79">-</op:operator><lit:literal type="number" pos:line="223" pos:column="80">1</lit:literal> <op:operator pos:line="223" pos:column="82">&amp;&amp;</op:operator> <name pos:line="223" pos:column="85">prevcsc</name> <op:operator pos:line="223" pos:column="93">!=</op:operator> <name pos:line="223" pos:column="96">csc</name></expr>)</condition><then pos:line="223" pos:column="100"> <block pos:line="223" pos:column="101">{	<comment type="line" pos:line="223" pos:column="105">//shortcut was altered</comment>
								<expr_stmt><expr><call><name><name pos:line="224" pos:column="65">nppParam</name><op:operator pos:line="224" pos:column="73">-&gt;</op:operator><name pos:line="224" pos:column="75">addUserModifiedIndex</name></name><argument_list pos:line="224" pos:column="95">(<argument><expr><name pos:line="224" pos:column="96">row</name><op:operator pos:line="224" pos:column="99">-</op:operator><lit:literal type="number" pos:line="224" pos:column="100">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="225" pos:column="65">shortcuts</name><index pos:line="225" pos:column="74">[<expr><name pos:line="225" pos:column="75">row</name> <op:operator pos:line="225" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="225" pos:column="81">1</lit:literal></expr>]</index></name> <op:operator pos:line="225" pos:column="84">=</op:operator> <name pos:line="225" pos:column="86">csc</name></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="226" pos:column="65">_babygrid</name><op:operator pos:line="226" pos:column="74">.</op:operator><name pos:line="226" pos:column="75">setText</name></name><argument_list pos:line="226" pos:column="82">(<argument><expr><name pos:line="226" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="226" pos:column="88">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="226" pos:column="91">csc</name><op:operator pos:line="226" pos:column="94">.</op:operator><name pos:line="226" pos:column="95">toString</name></name><argument_list pos:line="226" pos:column="103">()</argument_list></call><op:operator pos:line="226" pos:column="105">.</op:operator><call><name pos:line="226" pos:column="106">c_str</name><argument_list pos:line="226" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<comment type="line" pos:line="227" pos:column="65">//Notify current Accelerator class to update everything</comment>
								<expr_stmt><expr><call><name><name pos:line="228" pos:column="65">nppParam</name><op:operator pos:line="228" pos:column="73">-&gt;</op:operator><name pos:line="228" pos:column="75">getAccelerator</name></name><argument_list pos:line="228" pos:column="89">()</argument_list></call><op:operator pos:line="228" pos:column="91">-&gt;</op:operator><call><name pos:line="228" pos:column="93">updateShortcuts</name><argument_list pos:line="228" pos:column="108">()</argument_list></call></expr>;</expr_stmt>
								
							}</block></then></if>
							<break pos:line="231" pos:column="57">break;</break> }</block>
						</case><case pos:line="232" pos:column="49">case <expr><name pos:line="232" pos:column="54">STATE_MACRO</name></expr>: <block pos:line="232" pos:column="67">{
							<comment type="line" pos:line="233" pos:column="57">//Get MacroShortcut corresponding to row</comment>
							<decl_stmt><decl><type><name><name pos:line="234" pos:column="57">vector</name><argument_list pos:line="234" pos:column="63">&lt;<argument><expr><name pos:line="234" pos:column="64">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="234" pos:column="79">&amp;</type:modifier></type> <name pos:line="234" pos:column="81">shortcuts</name> <init pos:line="234" pos:column="91">= <expr><call><name><name pos:line="234" pos:column="93">nppParam</name><op:operator pos:line="234" pos:column="101">-&gt;</op:operator><name pos:line="234" pos:column="103">getMacroList</name></name><argument_list pos:line="234" pos:column="115">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="235" pos:column="57">MacroShortcut</name></type> <name pos:line="235" pos:column="71">msc</name> <init pos:line="235" pos:column="75">= <expr><name><name pos:line="235" pos:column="77">shortcuts</name><index pos:line="235" pos:column="86">[<expr><name pos:line="235" pos:column="87">row</name> <op:operator pos:line="235" pos:column="91">-</op:operator> <lit:literal type="number" pos:line="235" pos:column="93">1</lit:literal></expr>]</index></name></expr></init><op:operator pos:line="235" pos:column="95">,</op:operator> <name pos:line="235" pos:column="97">prevmsc</name> <init pos:line="235" pos:column="105">= <expr><name><name pos:line="235" pos:column="107">shortcuts</name><index pos:line="235" pos:column="116">[<expr><name pos:line="235" pos:column="117">row</name> <op:operator pos:line="235" pos:column="121">-</op:operator> <lit:literal type="number" pos:line="235" pos:column="123">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="236" pos:column="57">msc</name><op:operator pos:line="236" pos:column="60">.</op:operator><name pos:line="236" pos:column="61">init</name></name><argument_list pos:line="236" pos:column="65">(<argument><expr><name pos:line="236" pos:column="66">_hInst</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="74">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="237" pos:column="57">if <condition pos:line="237" pos:column="60">(<expr><call><name><name pos:line="237" pos:column="61">msc</name><op:operator pos:line="237" pos:column="64">.</op:operator><name pos:line="237" pos:column="65">doDialog</name></name><argument_list pos:line="237" pos:column="73">()</argument_list></call> <op:operator pos:line="237" pos:column="76">!=</op:operator> <op:operator pos:line="237" pos:column="79">-</op:operator><lit:literal type="number" pos:line="237" pos:column="80">1</lit:literal> <op:operator pos:line="237" pos:column="82">&amp;&amp;</op:operator> <name pos:line="237" pos:column="85">prevmsc</name> <op:operator pos:line="237" pos:column="93">!=</op:operator> <name pos:line="237" pos:column="96">msc</name></expr>)</condition><then pos:line="237" pos:column="100"> <block pos:line="237" pos:column="101">{	<comment type="line" pos:line="237" pos:column="105">//shortcut was altered</comment>
								<expr_stmt><expr><name><name pos:line="238" pos:column="65">shortcuts</name><index pos:line="238" pos:column="74">[<expr><name pos:line="238" pos:column="75">row</name> <op:operator pos:line="238" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="238" pos:column="81">1</lit:literal></expr>]</index></name> <op:operator pos:line="238" pos:column="84">=</op:operator> <name pos:line="238" pos:column="86">msc</name></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="239" pos:column="65">_babygrid</name><op:operator pos:line="239" pos:column="74">.</op:operator><name pos:line="239" pos:column="75">setText</name></name><argument_list pos:line="239" pos:column="82">(<argument><expr><name pos:line="239" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="239" pos:column="88">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="239" pos:column="91">msc</name><op:operator pos:line="239" pos:column="94">.</op:operator><name pos:line="239" pos:column="95">getName</name></name><argument_list pos:line="239" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="240" pos:column="65">_babygrid</name><op:operator pos:line="240" pos:column="74">.</op:operator><name pos:line="240" pos:column="75">setText</name></name><argument_list pos:line="240" pos:column="82">(<argument><expr><name pos:line="240" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="240" pos:column="88">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="240" pos:column="91">msc</name><op:operator pos:line="240" pos:column="94">.</op:operator><name pos:line="240" pos:column="95">toString</name></name><argument_list pos:line="240" pos:column="103">()</argument_list></call><op:operator pos:line="240" pos:column="105">.</op:operator><call><name pos:line="240" pos:column="106">c_str</name><argument_list pos:line="240" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

								<comment type="line" pos:line="242" pos:column="65">//Notify current Accelerator class to update everything</comment>
								<expr_stmt><expr><call><name><name pos:line="243" pos:column="65">nppParam</name><op:operator pos:line="243" pos:column="73">-&gt;</op:operator><name pos:line="243" pos:column="75">getAccelerator</name></name><argument_list pos:line="243" pos:column="89">()</argument_list></call><op:operator pos:line="243" pos:column="91">-&gt;</op:operator><call><name pos:line="243" pos:column="93">updateShortcuts</name><argument_list pos:line="243" pos:column="108">()</argument_list></call></expr>;</expr_stmt>
								
							}</block></then></if>
							<break pos:line="246" pos:column="57">break;</break> }</block>
						</case><case pos:line="247" pos:column="49">case <expr><name pos:line="247" pos:column="54">STATE_USER</name></expr>: <block pos:line="247" pos:column="66">{
							<comment type="line" pos:line="248" pos:column="57">//Get UserCommand corresponding to row</comment>
							<decl_stmt><decl><type><name><name pos:line="249" pos:column="57">vector</name><argument_list pos:line="249" pos:column="63">&lt;<argument><expr><name pos:line="249" pos:column="64">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="249" pos:column="77">&amp;</type:modifier></type> <name pos:line="249" pos:column="79">shortcuts</name> <init pos:line="249" pos:column="89">= <expr><call><name><name pos:line="249" pos:column="91">nppParam</name><op:operator pos:line="249" pos:column="99">-&gt;</op:operator><name pos:line="249" pos:column="101">getUserCommandList</name></name><argument_list pos:line="249" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="250" pos:column="57">UserCommand</name></type> <name pos:line="250" pos:column="69">ucmd</name> <init pos:line="250" pos:column="74">= <expr><name><name pos:line="250" pos:column="76">shortcuts</name><index pos:line="250" pos:column="85">[<expr><name pos:line="250" pos:column="86">row</name> <op:operator pos:line="250" pos:column="90">-</op:operator> <lit:literal type="number" pos:line="250" pos:column="92">1</lit:literal></expr>]</index></name></expr></init><op:operator pos:line="250" pos:column="94">,</op:operator> <name pos:line="250" pos:column="96">prevucmd</name> <init pos:line="250" pos:column="105">= <expr><name><name pos:line="250" pos:column="107">shortcuts</name><index pos:line="250" pos:column="116">[<expr><name pos:line="250" pos:column="117">row</name> <op:operator pos:line="250" pos:column="121">-</op:operator> <lit:literal type="number" pos:line="250" pos:column="123">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="251" pos:column="57">ucmd</name><op:operator pos:line="251" pos:column="61">.</op:operator><name pos:line="251" pos:column="62">init</name></name><argument_list pos:line="251" pos:column="66">(<argument><expr><name pos:line="251" pos:column="67">_hInst</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="75">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="252" pos:column="57">prevucmd</name> <op:operator pos:line="252" pos:column="66">=</op:operator> <name pos:line="252" pos:column="68">ucmd</name></expr>;</expr_stmt>
							<if pos:line="253" pos:column="57">if <condition pos:line="253" pos:column="60">(<expr><call><name><name pos:line="253" pos:column="61">ucmd</name><op:operator pos:line="253" pos:column="65">.</op:operator><name pos:line="253" pos:column="66">doDialog</name></name><argument_list pos:line="253" pos:column="74">()</argument_list></call> <op:operator pos:line="253" pos:column="77">!=</op:operator> <op:operator pos:line="253" pos:column="80">-</op:operator><lit:literal type="number" pos:line="253" pos:column="81">1</lit:literal> <op:operator pos:line="253" pos:column="83">&amp;&amp;</op:operator> <name pos:line="253" pos:column="86">prevucmd</name> <op:operator pos:line="253" pos:column="95">!=</op:operator> <name pos:line="253" pos:column="98">ucmd</name></expr>)</condition><then pos:line="253" pos:column="103"> <block pos:line="253" pos:column="104">{	<comment type="line" pos:line="253" pos:column="113">//shortcut was altered</comment>
								<expr_stmt><expr><name><name pos:line="254" pos:column="65">shortcuts</name><index pos:line="254" pos:column="74">[<expr><name pos:line="254" pos:column="75">row</name> <op:operator pos:line="254" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="254" pos:column="81">1</lit:literal></expr>]</index></name> <op:operator pos:line="254" pos:column="84">=</op:operator> <name pos:line="254" pos:column="86">ucmd</name></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="255" pos:column="65">_babygrid</name><op:operator pos:line="255" pos:column="74">.</op:operator><name pos:line="255" pos:column="75">setText</name></name><argument_list pos:line="255" pos:column="82">(<argument><expr><name pos:line="255" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="255" pos:column="88">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="255" pos:column="91">ucmd</name><op:operator pos:line="255" pos:column="95">.</op:operator><name pos:line="255" pos:column="96">getName</name></name><argument_list pos:line="255" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="256" pos:column="65">_babygrid</name><op:operator pos:line="256" pos:column="74">.</op:operator><name pos:line="256" pos:column="75">setText</name></name><argument_list pos:line="256" pos:column="82">(<argument><expr><name pos:line="256" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="88">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="256" pos:column="91">ucmd</name><op:operator pos:line="256" pos:column="95">.</op:operator><name pos:line="256" pos:column="96">toString</name></name><argument_list pos:line="256" pos:column="104">()</argument_list></call><op:operator pos:line="256" pos:column="106">.</op:operator><call><name pos:line="256" pos:column="107">c_str</name><argument_list pos:line="256" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

								<comment type="line" pos:line="258" pos:column="65">//Notify current Accelerator class to update everything</comment>
								<expr_stmt><expr><call><name><name pos:line="259" pos:column="65">nppParam</name><op:operator pos:line="259" pos:column="73">-&gt;</op:operator><name pos:line="259" pos:column="75">getAccelerator</name></name><argument_list pos:line="259" pos:column="89">()</argument_list></call><op:operator pos:line="259" pos:column="91">-&gt;</op:operator><call><name pos:line="259" pos:column="93">updateShortcuts</name><argument_list pos:line="259" pos:column="108">()</argument_list></call></expr>;</expr_stmt>
								
							}</block></then></if>
							<break pos:line="262" pos:column="57">break;</break> }</block>
						</case><case pos:line="263" pos:column="49">case <expr><name pos:line="263" pos:column="54">STATE_PLUGIN</name></expr>: <block pos:line="263" pos:column="68">{
							<comment type="line" pos:line="264" pos:column="57">//Get PluginCmdShortcut corresponding to row</comment>
							<decl_stmt><decl><type><name><name pos:line="265" pos:column="57">vector</name><argument_list pos:line="265" pos:column="63">&lt;<argument><expr><name pos:line="265" pos:column="64">PluginCmdShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="265" pos:column="83">&amp;</type:modifier></type> <name pos:line="265" pos:column="85">shortcuts</name> <init pos:line="265" pos:column="95">= <expr><call><name><name pos:line="265" pos:column="97">nppParam</name><op:operator pos:line="265" pos:column="105">-&gt;</op:operator><name pos:line="265" pos:column="107">getPluginCommandList</name></name><argument_list pos:line="265" pos:column="127">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="266" pos:column="57">PluginCmdShortcut</name></type> <name pos:line="266" pos:column="75">pcsc</name> <init pos:line="266" pos:column="80">= <expr><name><name pos:line="266" pos:column="82">shortcuts</name><index pos:line="266" pos:column="91">[<expr><name pos:line="266" pos:column="92">row</name> <op:operator pos:line="266" pos:column="96">-</op:operator> <lit:literal type="number" pos:line="266" pos:column="98">1</lit:literal></expr>]</index></name></expr></init><op:operator pos:line="266" pos:column="100">,</op:operator> <name pos:line="266" pos:column="102">prevpcsc</name> <init pos:line="266" pos:column="111">= <expr><name><name pos:line="266" pos:column="113">shortcuts</name><index pos:line="266" pos:column="122">[<expr><name pos:line="266" pos:column="123">row</name> <op:operator pos:line="266" pos:column="127">-</op:operator> <lit:literal type="number" pos:line="266" pos:column="129">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="267" pos:column="57">pcsc</name><op:operator pos:line="267" pos:column="61">.</op:operator><name pos:line="267" pos:column="62">init</name></name><argument_list pos:line="267" pos:column="66">(<argument><expr><name pos:line="267" pos:column="67">_hInst</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="75">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="268" pos:column="57">prevpcsc</name> <op:operator pos:line="268" pos:column="66">=</op:operator> <name pos:line="268" pos:column="68">pcsc</name></expr>;</expr_stmt>
							<if pos:line="269" pos:column="57">if <condition pos:line="269" pos:column="60">(<expr><call><name><name pos:line="269" pos:column="61">pcsc</name><op:operator pos:line="269" pos:column="65">.</op:operator><name pos:line="269" pos:column="66">doDialog</name></name><argument_list pos:line="269" pos:column="74">()</argument_list></call> <op:operator pos:line="269" pos:column="77">!=</op:operator> <op:operator pos:line="269" pos:column="80">-</op:operator><lit:literal type="number" pos:line="269" pos:column="81">1</lit:literal> <op:operator pos:line="269" pos:column="83">&amp;&amp;</op:operator> <name pos:line="269" pos:column="86">prevpcsc</name> <op:operator pos:line="269" pos:column="95">!=</op:operator> <name pos:line="269" pos:column="98">pcsc</name></expr>)</condition><then pos:line="269" pos:column="103"> <block pos:line="269" pos:column="104">{	<comment type="line" pos:line="269" pos:column="113">//shortcut was altered</comment>
								<expr_stmt><expr><call><name><name pos:line="270" pos:column="65">nppParam</name><op:operator pos:line="270" pos:column="73">-&gt;</op:operator><name pos:line="270" pos:column="75">addPluginModifiedIndex</name></name><argument_list pos:line="270" pos:column="97">(<argument><expr><name pos:line="270" pos:column="98">row</name><op:operator pos:line="270" pos:column="101">-</op:operator><lit:literal type="number" pos:line="270" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="271" pos:column="65">shortcuts</name><index pos:line="271" pos:column="74">[<expr><name pos:line="271" pos:column="75">row</name> <op:operator pos:line="271" pos:column="79">-</op:operator> <lit:literal type="number" pos:line="271" pos:column="81">1</lit:literal></expr>]</index></name> <op:operator pos:line="271" pos:column="84">=</op:operator> <name pos:line="271" pos:column="86">pcsc</name></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="272" pos:column="65">_babygrid</name><op:operator pos:line="272" pos:column="74">.</op:operator><name pos:line="272" pos:column="75">setText</name></name><argument_list pos:line="272" pos:column="82">(<argument><expr><name pos:line="272" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="88">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="272" pos:column="91">pcsc</name><op:operator pos:line="272" pos:column="95">.</op:operator><name pos:line="272" pos:column="96">toString</name></name><argument_list pos:line="272" pos:column="104">()</argument_list></call><op:operator pos:line="272" pos:column="106">.</op:operator><call><name pos:line="272" pos:column="107">c_str</name><argument_list pos:line="272" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

								<comment type="line" pos:line="274" pos:column="65">//Notify current Accelerator class to update everything</comment>
								<expr_stmt><expr><call><name><name pos:line="275" pos:column="65">nppParam</name><op:operator pos:line="275" pos:column="73">-&gt;</op:operator><name pos:line="275" pos:column="75">getAccelerator</name></name><argument_list pos:line="275" pos:column="89">()</argument_list></call><op:operator pos:line="275" pos:column="91">-&gt;</op:operator><call><name pos:line="275" pos:column="93">updateShortcuts</name><argument_list pos:line="275" pos:column="108">()</argument_list></call></expr>;</expr_stmt>
								<decl_stmt><decl><type><name pos:line="276" pos:column="65">unsigned</name> <name pos:line="276" pos:column="74">long</name></type> <name pos:line="276" pos:column="79">cmdID</name> <init pos:line="276" pos:column="85">= <expr><call><name><name pos:line="276" pos:column="87">pcsc</name><op:operator pos:line="276" pos:column="91">.</op:operator><name pos:line="276" pos:column="92">getID</name></name><argument_list pos:line="276" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="277" pos:column="65">ShortcutKey</name></type> <name pos:line="277" pos:column="77">shortcut</name></decl>;</decl_stmt>
								<expr_stmt><expr><name><name pos:line="278" pos:column="65">shortcut</name><op:operator pos:line="278" pos:column="73">.</op:operator><name pos:line="278" pos:column="74">_isAlt</name></name> <op:operator pos:line="278" pos:column="81">=</op:operator> <call><name><name pos:line="278" pos:column="83">pcsc</name><op:operator pos:line="278" pos:column="87">.</op:operator><name pos:line="278" pos:column="88">getKeyCombo</name></name><argument_list pos:line="278" pos:column="99">()</argument_list></call><op:operator pos:line="278" pos:column="101">.</op:operator><name pos:line="278" pos:column="102">_isAlt</name></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="279" pos:column="65">shortcut</name><op:operator pos:line="279" pos:column="73">.</op:operator><name pos:line="279" pos:column="74">_isCtrl</name></name> <op:operator pos:line="279" pos:column="82">=</op:operator> <call><name><name pos:line="279" pos:column="84">pcsc</name><op:operator pos:line="279" pos:column="88">.</op:operator><name pos:line="279" pos:column="89">getKeyCombo</name></name><argument_list pos:line="279" pos:column="100">()</argument_list></call><op:operator pos:line="279" pos:column="102">.</op:operator><name pos:line="279" pos:column="103">_isCtrl</name></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="280" pos:column="65">shortcut</name><op:operator pos:line="280" pos:column="73">.</op:operator><name pos:line="280" pos:column="74">_isShift</name></name> <op:operator pos:line="280" pos:column="83">=</op:operator> <call><name><name pos:line="280" pos:column="85">pcsc</name><op:operator pos:line="280" pos:column="89">.</op:operator><name pos:line="280" pos:column="90">getKeyCombo</name></name><argument_list pos:line="280" pos:column="101">()</argument_list></call><op:operator pos:line="280" pos:column="103">.</op:operator><name pos:line="280" pos:column="104">_isShift</name></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="281" pos:column="65">shortcut</name><op:operator pos:line="281" pos:column="73">.</op:operator><name pos:line="281" pos:column="74">_key</name></name> <op:operator pos:line="281" pos:column="79">=</op:operator> <call><name><name pos:line="281" pos:column="81">pcsc</name><op:operator pos:line="281" pos:column="85">.</op:operator><name pos:line="281" pos:column="86">getKeyCombo</name></name><argument_list pos:line="281" pos:column="97">()</argument_list></call><op:operator pos:line="281" pos:column="99">.</op:operator><name pos:line="281" pos:column="100">_key</name></expr>;</expr_stmt>

								<expr_stmt><expr><call><name><op:operator pos:line="283" pos:column="65">::</op:operator><name pos:line="283" pos:column="67">SendMessage</name></name><argument_list pos:line="283" pos:column="78">(<argument><expr><name pos:line="283" pos:column="79">_hParent</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="89">NPPM_INTERNAL_PLUGINSHORTCUTMOTIFIED</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="127">cmdID</name></expr></argument>, <argument><expr><op:operator pos:line="283" pos:column="134">(</op:operator><name pos:line="283" pos:column="135">LPARAM</name><op:operator pos:line="283" pos:column="141">)</op:operator><op:operator pos:line="283" pos:column="142">&amp;</op:operator><name pos:line="283" pos:column="143">shortcut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="285" pos:column="57">break;</break> }</block>
						</case><case pos:line="286" pos:column="49">case <expr><name pos:line="286" pos:column="54">STATE_SCINTILLA</name></expr>: <block pos:line="286" pos:column="71">{
							<comment type="line" pos:line="287" pos:column="57">//Get ScintillaKeyMap corresponding to row</comment>
							<decl_stmt><decl><type><name><name pos:line="288" pos:column="57">vector</name><argument_list pos:line="288" pos:column="63">&lt;<argument><expr><name pos:line="288" pos:column="64">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="288" pos:column="81">&amp;</type:modifier></type> <name pos:line="288" pos:column="83">shortcuts</name> <init pos:line="288" pos:column="93">= <expr><call><name><name pos:line="288" pos:column="95">nppParam</name><op:operator pos:line="288" pos:column="103">-&gt;</op:operator><name pos:line="288" pos:column="105">getScintillaKeyList</name></name><argument_list pos:line="288" pos:column="124">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="289" pos:column="57">ScintillaKeyMap</name></type> <name pos:line="289" pos:column="73">skm</name> <init pos:line="289" pos:column="77">= <expr><name><name pos:line="289" pos:column="79">shortcuts</name><index pos:line="289" pos:column="88">[<expr><name pos:line="289" pos:column="89">row</name> <op:operator pos:line="289" pos:column="93">-</op:operator> <lit:literal type="number" pos:line="289" pos:column="95">1</lit:literal></expr>]</index></name></expr></init><op:operator pos:line="289" pos:column="97">,</op:operator> <name pos:line="289" pos:column="99">prevskm</name> <init pos:line="289" pos:column="107">= <expr><name><name pos:line="289" pos:column="109">shortcuts</name><index pos:line="289" pos:column="118">[<expr><name pos:line="289" pos:column="119">row</name><op:operator pos:line="289" pos:column="122">-</op:operator><lit:literal type="number" pos:line="289" pos:column="123">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="290" pos:column="57">skm</name><op:operator pos:line="290" pos:column="60">.</op:operator><name pos:line="290" pos:column="61">init</name></name><argument_list pos:line="290" pos:column="65">(<argument><expr><name pos:line="290" pos:column="66">_hInst</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="74">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="291" pos:column="57">if <condition pos:line="291" pos:column="60">(<expr><call><name><name pos:line="291" pos:column="61">skm</name><op:operator pos:line="291" pos:column="64">.</op:operator><name pos:line="291" pos:column="65">doDialog</name></name><argument_list pos:line="291" pos:column="73">()</argument_list></call> <op:operator pos:line="291" pos:column="76">!=</op:operator> <op:operator pos:line="291" pos:column="79">-</op:operator><lit:literal type="number" pos:line="291" pos:column="80">1</lit:literal> <op:operator pos:line="291" pos:column="82">&amp;&amp;</op:operator> <name pos:line="291" pos:column="85">prevskm</name> <op:operator pos:line="291" pos:column="93">!=</op:operator> <name pos:line="291" pos:column="96">skm</name></expr>)</condition><then pos:line="291" pos:column="100"> 
							<block pos:line="292" pos:column="57">{
								<comment type="line" pos:line="293" pos:column="65">//shortcut was altered</comment>
								<expr_stmt><expr><call><name><name pos:line="294" pos:column="65">nppParam</name><op:operator pos:line="294" pos:column="73">-&gt;</op:operator><name pos:line="294" pos:column="75">addScintillaModifiedIndex</name></name><argument_list pos:line="294" pos:column="100">(<argument><expr><name pos:line="294" pos:column="101">row</name><op:operator pos:line="294" pos:column="104">-</op:operator><lit:literal type="number" pos:line="294" pos:column="105">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name><name pos:line="295" pos:column="65">shortcuts</name><index pos:line="295" pos:column="74">[<expr><name pos:line="295" pos:column="75">row</name><op:operator pos:line="295" pos:column="78">-</op:operator><lit:literal type="number" pos:line="295" pos:column="79">1</lit:literal></expr>]</index></name> <op:operator pos:line="295" pos:column="82">=</op:operator> <name pos:line="295" pos:column="84">skm</name></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="296" pos:column="65">_babygrid</name><op:operator pos:line="296" pos:column="74">.</op:operator><name pos:line="296" pos:column="75">setText</name></name><argument_list pos:line="296" pos:column="82">(<argument><expr><name pos:line="296" pos:column="83">row</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="296" pos:column="88">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="296" pos:column="91">skm</name><op:operator pos:line="296" pos:column="94">.</op:operator><name pos:line="296" pos:column="95">toString</name></name><argument_list pos:line="296" pos:column="103">()</argument_list></call><op:operator pos:line="296" pos:column="105">.</op:operator><call><name pos:line="296" pos:column="106">c_str</name><argument_list pos:line="296" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

								<comment type="line" pos:line="298" pos:column="65">//Notify current Accelerator class to update key</comment>
								<expr_stmt><expr><call><name><name pos:line="299" pos:column="65">nppParam</name><op:operator pos:line="299" pos:column="73">-&gt;</op:operator><name pos:line="299" pos:column="75">getScintillaAccelerator</name></name><argument_list pos:line="299" pos:column="98">()</argument_list></call><op:operator pos:line="299" pos:column="100">-&gt;</op:operator><call><name pos:line="299" pos:column="102">updateKeys</name><argument_list pos:line="299" pos:column="112">()</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="301" pos:column="57">break;</break> 
						}</block>
					</case>}</block></switch>
					<return pos:line="304" pos:column="41">return <expr><name pos:line="304" pos:column="48">TRUE</name></expr>;</return>
				}</block>
				</case><case pos:line="306" pos:column="33">case <expr><name pos:line="306" pos:column="38">IDM_BABYGRID_DELETE</name></expr> :
				<block pos:line="307" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="308" pos:column="41">NppParameters</name> <type:modifier pos:line="308" pos:column="55">*</type:modifier></type><name pos:line="308" pos:column="56">nppParam</name> <init pos:line="308" pos:column="65">= <expr><call><name><name pos:line="308" pos:column="67">NppParameters</name><op:operator pos:line="308" pos:column="80">::</op:operator><name pos:line="308" pos:column="82">getInstance</name></name><argument_list pos:line="308" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="309" pos:column="41">if <condition pos:line="309" pos:column="44">(<expr><call><name><op:operator pos:line="309" pos:column="45">::</op:operator><name pos:line="309" pos:column="47">MessageBox</name></name><argument_list pos:line="309" pos:column="57">(<argument><expr><name pos:line="309" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="309" pos:column="66">TEXT</name><argument_list pos:line="309" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="71">"Are you sure you want to delete this shortcut?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="309" pos:column="122">TEXT</name><argument_list pos:line="309" pos:column="126">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="127">"Are you sure?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="309" pos:column="145">MB_OKCANCEL</name></expr></argument>)</argument_list></call> <op:operator pos:line="309" pos:column="158">==</op:operator> <name pos:line="309" pos:column="161">IDOK</name></expr>)</condition><then pos:line="309" pos:column="166">
					<block pos:line="310" pos:column="41">{
						<decl_stmt><decl><type><specifier pos:line="311" pos:column="49">const</specifier> <name pos:line="311" pos:column="55">int</name></type> <name pos:line="311" pos:column="59">row</name> <init pos:line="311" pos:column="63">= <expr><call><name><name pos:line="311" pos:column="65">_babygrid</name><op:operator pos:line="311" pos:column="74">.</op:operator><name pos:line="311" pos:column="75">getSelectedRow</name></name><argument_list pos:line="311" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="312" pos:column="49">int</name></type> <name pos:line="312" pos:column="53">shortcutIndex</name> <init pos:line="312" pos:column="67">= <expr><name pos:line="312" pos:column="69">row</name><op:operator pos:line="312" pos:column="72">-</op:operator><lit:literal type="number" pos:line="312" pos:column="73">1</lit:literal></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="313" pos:column="49">DWORD</name></type> <name pos:line="313" pos:column="55">cmdID</name> <init pos:line="313" pos:column="61">= <expr><lit:literal type="number" pos:line="313" pos:column="63">0</lit:literal></expr></init></decl>;</decl_stmt>
						
						<comment type="line" pos:line="315" pos:column="49">// Menu data</comment>
						<decl_stmt><decl><type><name pos:line="316" pos:column="49">size_t</name></type> <name pos:line="316" pos:column="56">posBase</name> <init pos:line="316" pos:column="64">= <expr><lit:literal type="number" pos:line="316" pos:column="66">0</lit:literal></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="317" pos:column="49">size_t</name></type> <name pos:line="317" pos:column="56">nbElem</name> <init pos:line="317" pos:column="63">= <expr><lit:literal type="number" pos:line="317" pos:column="65">0</lit:literal></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="318" pos:column="49">HMENU</name></type> <name pos:line="318" pos:column="55">hMenu</name> <init pos:line="318" pos:column="61">= <expr><name pos:line="318" pos:column="63">NULL</name></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="319" pos:column="25">int</name></type> <name pos:line="319" pos:column="29">modifCmd</name> <init pos:line="319" pos:column="38">= <expr><name pos:line="319" pos:column="40">IDM_SETTING_SHORTCUT_MAPPER_RUN</name></expr></init></decl>;</decl_stmt>
						<switch pos:line="320" pos:column="49">switch<condition pos:line="320" pos:column="55">(<expr><name pos:line="320" pos:column="56">_currentState</name></expr>)</condition> 
						<block pos:line="321" pos:column="49">{
							<case pos:line="322" pos:column="57">case <expr><name pos:line="322" pos:column="62">STATE_MENU</name></expr>:
							</case><case pos:line="323" pos:column="57">case <expr><name pos:line="323" pos:column="62">STATE_PLUGIN</name></expr>:
							</case><case pos:line="324" pos:column="57">case <expr><name pos:line="324" pos:column="62">STATE_SCINTILLA</name></expr>: 
							<block pos:line="325" pos:column="57">{
								<return pos:line="326" pos:column="65">return <expr><name pos:line="326" pos:column="72">FALSE</name></expr>;</return>			<comment type="line" pos:line="326" pos:column="97">//this is bad</comment>
							}</block>
							</case><case pos:line="328" pos:column="57">case <expr><name pos:line="328" pos:column="62">STATE_MACRO</name></expr>: 
							<block pos:line="329" pos:column="57">{
								<decl_stmt><decl><type><name><name pos:line="330" pos:column="65">vector</name><argument_list pos:line="330" pos:column="71">&lt;<argument><expr><name pos:line="330" pos:column="72">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="330" pos:column="87">&amp;</type:modifier></type> <name pos:line="330" pos:column="89">theMacros</name> <init pos:line="330" pos:column="99">= <expr><call><name><name pos:line="330" pos:column="101">nppParam</name><op:operator pos:line="330" pos:column="109">-&gt;</op:operator><name pos:line="330" pos:column="111">getMacroList</name></name><argument_list pos:line="330" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name><name><name pos:line="331" pos:column="65">vector</name><argument_list pos:line="331" pos:column="71">&lt;<argument><expr><name pos:line="331" pos:column="72">MacroShortcut</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="331" pos:column="86">::</op:operator><name pos:line="331" pos:column="88">iterator</name></name></type> <name pos:line="331" pos:column="97">it</name> <init pos:line="331" pos:column="100">= <expr><call><name><name pos:line="331" pos:column="102">theMacros</name><op:operator pos:line="331" pos:column="111">.</op:operator><name pos:line="331" pos:column="112">begin</name></name><argument_list pos:line="331" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
								<expr_stmt><expr><name pos:line="332" pos:column="65">cmdID</name> <op:operator pos:line="332" pos:column="71">=</op:operator> <name><name pos:line="332" pos:column="73">theMacros</name><index pos:line="332" pos:column="82">[<expr><name pos:line="332" pos:column="83">shortcutIndex</name></expr>]</index></name><op:operator pos:line="332" pos:column="97">.</op:operator><call><name pos:line="332" pos:column="98">getID</name><argument_list pos:line="332" pos:column="103">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="333" pos:column="65">theMacros</name><op:operator pos:line="333" pos:column="74">.</op:operator><name pos:line="333" pos:column="75">erase</name></name><argument_list pos:line="333" pos:column="80">(<argument><expr><name pos:line="333" pos:column="81">it</name> <op:operator pos:line="333" pos:column="84">+</op:operator> <name pos:line="333" pos:column="86">shortcutIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name pos:line="334" pos:column="65">fillOutBabyGrid</name><argument_list pos:line="334" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
								
								<comment type="line" pos:line="336" pos:column="65">// preparing to remove from menu</comment>
								<expr_stmt><expr><name pos:line="337" pos:column="65">posBase</name> <op:operator pos:line="337" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="337" pos:column="75">6</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="338" pos:column="65">nbElem</name> <op:operator pos:line="338" pos:column="72">=</op:operator> <call><name><name pos:line="338" pos:column="74">theMacros</name><op:operator pos:line="338" pos:column="83">.</op:operator><name pos:line="338" pos:column="84">size</name></name><argument_list pos:line="338" pos:column="88">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="339" pos:column="65">hMenu</name> <op:operator pos:line="339" pos:column="71">=</op:operator> <call><name><op:operator pos:line="339" pos:column="73">::</op:operator><name pos:line="339" pos:column="75">GetSubMenu</name></name><argument_list pos:line="339" pos:column="85">(<argument><expr><op:operator pos:line="339" pos:column="86">(</op:operator><name pos:line="339" pos:column="87">HMENU</name><op:operator pos:line="339" pos:column="92">)</op:operator><call><name><op:operator pos:line="339" pos:column="93">::</op:operator><name pos:line="339" pos:column="95">SendMessage</name></name><argument_list pos:line="339" pos:column="106">(<argument><expr><name pos:line="339" pos:column="107">_hParent</name></expr></argument>, <argument><expr><name pos:line="339" pos:column="117">NPPM_INTERNAL_GETMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="339" pos:column="140">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="339" pos:column="143">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="339" pos:column="147">MENUINDEX_MACRO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><name pos:line="340" pos:column="33">modifCmd</name> <op:operator pos:line="340" pos:column="42">=</op:operator> <name pos:line="340" pos:column="44">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name></expr>;</expr_stmt>
								<for pos:line="341" pos:column="65">for (<init><decl><type><name pos:line="341" pos:column="70">size_t</name></type> <name pos:line="341" pos:column="77">i</name> <init pos:line="341" pos:column="79">= <expr><name pos:line="341" pos:column="81">shortcutIndex</name></expr></init></decl> ;</init> <condition><expr><name pos:line="341" pos:column="97">i</name> <op:operator pos:line="341" pos:column="99">&lt;</op:operator> <name pos:line="341" pos:column="101">nbElem</name></expr> ;</condition> <incr><expr><name pos:line="341" pos:column="110">i</name><op:operator pos:line="341" pos:column="111">++</op:operator></expr></incr>)	<comment type="line" pos:line="341" pos:column="121">//lower the IDs of the remaining items so there are no gaps</comment>
								<block pos:line="342" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="343" pos:column="73">MacroShortcut</name></type> <name pos:line="343" pos:column="87">ms</name> <init pos:line="343" pos:column="90">= <expr><name><name pos:line="343" pos:column="92">theMacros</name><index pos:line="343" pos:column="101">[<expr><name pos:line="343" pos:column="102">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="344" pos:column="73">ms</name><op:operator pos:line="344" pos:column="75">.</op:operator><name pos:line="344" pos:column="76">setID</name></name><argument_list pos:line="344" pos:column="81">(<argument><expr><call><name><name pos:line="344" pos:column="82">ms</name><op:operator pos:line="344" pos:column="84">.</op:operator><name pos:line="344" pos:column="85">getID</name></name><argument_list pos:line="344" pos:column="90">()</argument_list></call> <op:operator pos:line="344" pos:column="93">-</op:operator> <lit:literal type="number" pos:line="344" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="344" pos:column="105">//shift all IDs</comment>
									<expr_stmt><expr><name><name pos:line="345" pos:column="73">theMacros</name><index pos:line="345" pos:column="82">[<expr><name pos:line="345" pos:column="83">i</name></expr>]</index></name> <op:operator pos:line="345" pos:column="86">=</op:operator> <name pos:line="345" pos:column="88">ms</name></expr>;</expr_stmt>
								}</block></for>
								<break pos:line="347" pos:column="65">break;</break> 
							}</block>
							</case><case pos:line="349" pos:column="57">case <expr><name pos:line="349" pos:column="62">STATE_USER</name></expr>: 
							<block pos:line="350" pos:column="57">{
								<decl_stmt><decl><type><name><name pos:line="351" pos:column="65">vector</name><argument_list pos:line="351" pos:column="71">&lt;<argument><expr><name pos:line="351" pos:column="72">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="351" pos:column="85">&amp;</type:modifier></type> <name pos:line="351" pos:column="87">theUserCmds</name> <init pos:line="351" pos:column="99">= <expr><call><name><name pos:line="351" pos:column="101">nppParam</name><op:operator pos:line="351" pos:column="109">-&gt;</op:operator><name pos:line="351" pos:column="111">getUserCommandList</name></name><argument_list pos:line="351" pos:column="129">()</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name><name><name pos:line="352" pos:column="65">vector</name><argument_list pos:line="352" pos:column="71">&lt;<argument><expr><name pos:line="352" pos:column="72">UserCommand</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="352" pos:column="84">::</op:operator><name pos:line="352" pos:column="86">iterator</name></name></type> <name pos:line="352" pos:column="95">it</name> <init pos:line="352" pos:column="98">= <expr><call><name><name pos:line="352" pos:column="100">theUserCmds</name><op:operator pos:line="352" pos:column="111">.</op:operator><name pos:line="352" pos:column="112">begin</name></name><argument_list pos:line="352" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
								<expr_stmt><expr><name pos:line="353" pos:column="65">cmdID</name> <op:operator pos:line="353" pos:column="71">=</op:operator> <name><name pos:line="353" pos:column="73">theUserCmds</name><index pos:line="353" pos:column="84">[<expr><name pos:line="353" pos:column="85">shortcutIndex</name></expr>]</index></name><op:operator pos:line="353" pos:column="99">.</op:operator><call><name pos:line="353" pos:column="100">getID</name><argument_list pos:line="353" pos:column="105">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="354" pos:column="65">theUserCmds</name><op:operator pos:line="354" pos:column="76">.</op:operator><name pos:line="354" pos:column="77">erase</name></name><argument_list pos:line="354" pos:column="82">(<argument><expr><name pos:line="354" pos:column="83">it</name> <op:operator pos:line="354" pos:column="86">+</op:operator> <name pos:line="354" pos:column="88">shortcutIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name pos:line="355" pos:column="65">fillOutBabyGrid</name><argument_list pos:line="355" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
							
								<comment type="line" pos:line="357" pos:column="65">// preparing to remove from menu</comment>
								<expr_stmt><expr><name pos:line="358" pos:column="65">posBase</name> <op:operator pos:line="358" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="358" pos:column="75">2</lit:literal></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="359" pos:column="65">nbElem</name> <op:operator pos:line="359" pos:column="72">=</op:operator> <call><name><name pos:line="359" pos:column="74">theUserCmds</name><op:operator pos:line="359" pos:column="85">.</op:operator><name pos:line="359" pos:column="86">size</name></name><argument_list pos:line="359" pos:column="90">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="360" pos:column="65">hMenu</name> <op:operator pos:line="360" pos:column="71">=</op:operator> <call><name><op:operator pos:line="360" pos:column="73">::</op:operator><name pos:line="360" pos:column="75">GetSubMenu</name></name><argument_list pos:line="360" pos:column="85">(<argument><expr><op:operator pos:line="360" pos:column="86">(</op:operator><name pos:line="360" pos:column="87">HMENU</name><op:operator pos:line="360" pos:column="92">)</op:operator><call><name><op:operator pos:line="360" pos:column="93">::</op:operator><name pos:line="360" pos:column="95">SendMessage</name></name><argument_list pos:line="360" pos:column="106">(<argument><expr><name pos:line="360" pos:column="107">_hParent</name></expr></argument>, <argument><expr><name pos:line="360" pos:column="117">NPPM_INTERNAL_GETMENU</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="360" pos:column="140">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="360" pos:column="143">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="360" pos:column="147">MENUINDEX_RUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><name pos:line="361" pos:column="33">modifCmd</name> <op:operator pos:line="361" pos:column="42">=</op:operator> <name pos:line="361" pos:column="44">IDM_SETTING_SHORTCUT_MAPPER_RUN</name></expr>;</expr_stmt>
								<for pos:line="362" pos:column="65">for (<init><decl><type><name pos:line="362" pos:column="70">size_t</name></type> <name pos:line="362" pos:column="77">i</name> <init pos:line="362" pos:column="79">= <expr><name pos:line="362" pos:column="81">shortcutIndex</name></expr></init></decl> ;</init> <condition><expr><name pos:line="362" pos:column="97">i</name> <op:operator pos:line="362" pos:column="99">&lt;</op:operator> <name pos:line="362" pos:column="101">nbElem</name></expr> ;</condition> <incr><expr><name pos:line="362" pos:column="110">i</name><op:operator pos:line="362" pos:column="111">++</op:operator></expr></incr>)	<comment type="line" pos:line="362" pos:column="121">//lower the IDs of the remaining items so there are no gaps</comment>
								<block pos:line="363" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="364" pos:column="73">UserCommand</name></type> <name pos:line="364" pos:column="85">uc</name> <init pos:line="364" pos:column="88">= <expr><name><name pos:line="364" pos:column="90">theUserCmds</name><index pos:line="364" pos:column="101">[<expr><name pos:line="364" pos:column="102">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><name pos:line="365" pos:column="73">uc</name><op:operator pos:line="365" pos:column="75">.</op:operator><name pos:line="365" pos:column="76">setID</name></name><argument_list pos:line="365" pos:column="81">(<argument><expr><call><name><name pos:line="365" pos:column="82">uc</name><op:operator pos:line="365" pos:column="84">.</op:operator><name pos:line="365" pos:column="85">getID</name></name><argument_list pos:line="365" pos:column="90">()</argument_list></call> <op:operator pos:line="365" pos:column="93">-</op:operator> <lit:literal type="number" pos:line="365" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="365" pos:column="105">//shift all IDs</comment>
									<expr_stmt><expr><name><name pos:line="366" pos:column="73">theUserCmds</name><index pos:line="366" pos:column="84">[<expr><name pos:line="366" pos:column="85">i</name></expr>]</index></name> <op:operator pos:line="366" pos:column="88">=</op:operator> <name pos:line="366" pos:column="90">uc</name></expr>;</expr_stmt>
								}</block></for>
								<break pos:line="368" pos:column="65">break;</break>
							}</block>
						</case>}</block></switch>

                        <comment type="line" pos:line="372" pos:column="25">// updateShortcuts() will update all menu item - the menu items will be shifted</comment>
						<expr_stmt><expr><call><name><name pos:line="373" pos:column="49">nppParam</name><op:operator pos:line="373" pos:column="57">-&gt;</op:operator><name pos:line="373" pos:column="59">getAccelerator</name></name><argument_list pos:line="373" pos:column="73">()</argument_list></call><op:operator pos:line="373" pos:column="75">-&gt;</op:operator><call><name pos:line="373" pos:column="77">updateShortcuts</name><argument_list pos:line="373" pos:column="92">()</argument_list></call></expr>;</expr_stmt>

                        <comment type="line" pos:line="375" pos:column="25">// All menu items are shifted up. So we delete the last item</comment>
                        <expr_stmt><expr><call><name><op:operator pos:line="376" pos:column="25">::</op:operator><name pos:line="376" pos:column="27">RemoveMenu</name></name><argument_list pos:line="376" pos:column="37">(<argument><expr><name pos:line="376" pos:column="38">hMenu</name></expr></argument>, <argument><expr><name pos:line="376" pos:column="45">posBase</name> <op:operator pos:line="376" pos:column="53">+</op:operator> <name pos:line="376" pos:column="55">nbElem</name> <op:operator pos:line="376" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="376" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="376" pos:column="67">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if pos:line="378" pos:column="25">if <condition pos:line="378" pos:column="28">(<expr><name pos:line="378" pos:column="29">nbElem</name> <op:operator pos:line="378" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="378" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="378" pos:column="41"> 
                        <block pos:line="379" pos:column="25">{
                            <expr_stmt><expr><call><name><op:operator pos:line="380" pos:column="29">::</op:operator><name pos:line="380" pos:column="31">RemoveMenu</name></name><argument_list pos:line="380" pos:column="41">(<argument><expr><name pos:line="380" pos:column="42">hMenu</name></expr></argument>, <argument><expr><name pos:line="380" pos:column="49">modifCmd</name></expr></argument>, <argument><expr><name pos:line="380" pos:column="59">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            
                            <comment type="line" pos:line="382" pos:column="29">//remove separator</comment>
							<expr_stmt><expr><call><name><op:operator pos:line="383" pos:column="57">::</op:operator><name pos:line="383" pos:column="59">RemoveMenu</name></name><argument_list pos:line="383" pos:column="69">(<argument><expr><name pos:line="383" pos:column="70">hMenu</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="77">posBase</name><op:operator pos:line="383" pos:column="84">-</op:operator><lit:literal type="number" pos:line="383" pos:column="85">1</lit:literal></expr></argument>, <argument><expr><name pos:line="383" pos:column="88">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><op:operator pos:line="384" pos:column="29">::</op:operator><name pos:line="384" pos:column="31">RemoveMenu</name></name><argument_list pos:line="384" pos:column="41">(<argument><expr><name pos:line="384" pos:column="42">hMenu</name></expr></argument>, <argument><expr><name pos:line="384" pos:column="49">posBase</name><op:operator pos:line="384" pos:column="56">-</op:operator><lit:literal type="number" pos:line="384" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><name pos:line="384" pos:column="60">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
					<return pos:line="387" pos:column="41">return <expr><name pos:line="387" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="390" pos:column="33">case <expr><name pos:line="390" pos:column="38">IDD_BABYGRID_ID1</name></expr>: <block pos:line="390" pos:column="56">{
					<if pos:line="391" pos:column="41">if<condition pos:line="391" pos:column="43">(<expr><call><name pos:line="391" pos:column="44">HIWORD</name><argument_list pos:line="391" pos:column="50">(<argument><expr><name pos:line="391" pos:column="51">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="391" pos:column="59">==</op:operator> <name pos:line="391" pos:column="62">BGN_CELLDBCLICKED</name></expr>)</condition><then pos:line="391" pos:column="80"> <comment type="line" pos:line="391" pos:column="81">//a cell was clicked in the properties grid</comment>
					<block pos:line="392" pos:column="41">{
						<return pos:line="393" pos:column="49">return <expr><call><name><op:operator pos:line="393" pos:column="56">::</op:operator><name pos:line="393" pos:column="58">SendMessage</name></name><argument_list pos:line="393" pos:column="69">(<argument><expr><name pos:line="393" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="393" pos:column="78">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="393" pos:column="90">IDM_BABYGRID_MODIFY</name></expr></argument>, <argument><expr><call><name pos:line="393" pos:column="111">LOWORD</name><argument_list pos:line="393" pos:column="117">(<argument><expr><name pos:line="393" pos:column="118">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
					}</block></then>
					<else pos:line="395" pos:column="41">else <if pos:line="395" pos:column="46">if<condition pos:line="395" pos:column="48">(<expr><call><name pos:line="395" pos:column="49">HIWORD</name><argument_list pos:line="395" pos:column="55">(<argument><expr><name pos:line="395" pos:column="56">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="395" pos:column="64">==</op:operator> <name pos:line="395" pos:column="67">BGN_CELLRCLICKED</name></expr>)</condition><then pos:line="395" pos:column="84"> <comment type="line" pos:line="395" pos:column="85">//a cell was clicked in the properties grid</comment>
					<block pos:line="396" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="397" pos:column="49">POINT</name></type> <name pos:line="397" pos:column="55">p</name></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="398" pos:column="49">::</op:operator><name pos:line="398" pos:column="51">GetCursorPos</name></name><argument_list pos:line="398" pos:column="63">(<argument><expr><op:operator pos:line="398" pos:column="64">&amp;</op:operator><name pos:line="398" pos:column="65">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="399" pos:column="49">if <condition pos:line="399" pos:column="52">(<expr><op:operator pos:line="399" pos:column="53">!</op:operator><call><name><name pos:line="399" pos:column="54">_rightClickMenu</name><op:operator pos:line="399" pos:column="69">.</op:operator><name pos:line="399" pos:column="70">isCreated</name></name><argument_list pos:line="399" pos:column="79">()</argument_list></call></expr>)</condition><then pos:line="399" pos:column="82">
						<block pos:line="400" pos:column="49">{
							<decl_stmt><decl><type><name><name pos:line="401" pos:column="57">vector</name><argument_list pos:line="401" pos:column="63">&lt;<argument><expr><name pos:line="401" pos:column="64">MenuItemUnit</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="401" pos:column="78">itemUnitArray</name></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="402" pos:column="57">itemUnitArray</name><op:operator pos:line="402" pos:column="70">.</op:operator><name pos:line="402" pos:column="71">push_back</name></name><argument_list pos:line="402" pos:column="80">(<argument><expr><call><name pos:line="402" pos:column="81">MenuItemUnit</name><argument_list pos:line="402" pos:column="93">(<argument><expr><name pos:line="402" pos:column="94">IDM_BABYGRID_MODIFY</name></expr></argument>, <argument><expr><call><name pos:line="402" pos:column="115">TEXT</name><argument_list pos:line="402" pos:column="119">(<argument><expr><lit:literal type="string" pos:line="402" pos:column="120">"Modify"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="403" pos:column="57">itemUnitArray</name><op:operator pos:line="403" pos:column="70">.</op:operator><name pos:line="403" pos:column="71">push_back</name></name><argument_list pos:line="403" pos:column="80">(<argument><expr><call><name pos:line="403" pos:column="81">MenuItemUnit</name><argument_list pos:line="403" pos:column="93">(<argument><expr><name pos:line="403" pos:column="94">IDM_BABYGRID_DELETE</name></expr></argument>, <argument><expr><call><name pos:line="403" pos:column="115">TEXT</name><argument_list pos:line="403" pos:column="119">(<argument><expr><lit:literal type="string" pos:line="403" pos:column="120">"Delete"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="404" pos:column="57">_rightClickMenu</name><op:operator pos:line="404" pos:column="72">.</op:operator><name pos:line="404" pos:column="73">create</name></name><argument_list pos:line="404" pos:column="79">(<argument><expr><name pos:line="404" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="404" pos:column="88">itemUnitArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
						<switch pos:line="406" pos:column="49">switch<condition pos:line="406" pos:column="55">(<expr><name pos:line="406" pos:column="56">_currentState</name></expr>)</condition> <block pos:line="406" pos:column="71">{
							<case pos:line="407" pos:column="57">case <expr><name pos:line="407" pos:column="62">STATE_MACRO</name></expr>:
							</case><case pos:line="408" pos:column="57">case <expr><name pos:line="408" pos:column="62">STATE_USER</name></expr>: <block pos:line="408" pos:column="74">{
								<expr_stmt><expr><call><name><name pos:line="409" pos:column="65">_rightClickMenu</name><op:operator pos:line="409" pos:column="80">.</op:operator><name pos:line="409" pos:column="81">enableItem</name></name><argument_list pos:line="409" pos:column="91">(<argument><expr><name pos:line="409" pos:column="92">IDM_BABYGRID_DELETE</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="409" pos:column="113">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<break pos:line="410" pos:column="65">break;</break> }</block>
							</case><case pos:line="411" pos:column="57">case <expr><name pos:line="411" pos:column="62">STATE_MENU</name></expr>:
							</case><case pos:line="412" pos:column="57">case <expr><name pos:line="412" pos:column="62">STATE_PLUGIN</name></expr>:
							</case><case pos:line="413" pos:column="57">case <expr><name pos:line="413" pos:column="62">STATE_SCINTILLA</name></expr>: <block pos:line="413" pos:column="79">{
								<expr_stmt><expr><call><name><name pos:line="414" pos:column="65">_rightClickMenu</name><op:operator pos:line="414" pos:column="80">.</op:operator><name pos:line="414" pos:column="81">enableItem</name></name><argument_list pos:line="414" pos:column="91">(<argument><expr><name pos:line="414" pos:column="92">IDM_BABYGRID_DELETE</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="414" pos:column="113">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<break pos:line="415" pos:column="65">break;</break> }</block>
						</case>}</block></switch>
						
						<expr_stmt><expr><call><name><name pos:line="418" pos:column="49">_rightClickMenu</name><op:operator pos:line="418" pos:column="64">.</op:operator><name pos:line="418" pos:column="65">display</name></name><argument_list pos:line="418" pos:column="72">(<argument><expr><name pos:line="418" pos:column="73">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="419" pos:column="49">return <expr><name pos:line="419" pos:column="56">TRUE</name></expr>;</return>
					}</block></then></if></else></if>
				}</block>
			</case>}</block></switch>
		}</block>
		</case><default pos:line="424" pos:column="17">default:
			<return pos:line="425" pos:column="25">return <expr><name pos:line="425" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
	<return pos:line="427" pos:column="9">return <expr><name pos:line="427" pos:column="16">FALSE</name></expr>;</return>
}</block></function>
</unit>
