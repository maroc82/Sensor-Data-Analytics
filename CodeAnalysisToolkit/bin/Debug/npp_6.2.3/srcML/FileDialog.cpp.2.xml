<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\OpenSaveFileDialog\FileDialog.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"FileDialog.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>


<decl_stmt><decl><type><name pos:line="34" pos:column="1">FileDialog</name> <type:modifier pos:line="34" pos:column="12">*</type:modifier></type><name><name pos:line="34" pos:column="13">FileDialog</name><op:operator pos:line="34" pos:column="23">::</op:operator><name pos:line="34" pos:column="25">staticThis</name></name> <init pos:line="34" pos:column="36">= <expr><name pos:line="34" pos:column="38">NULL</name></expr></init></decl>;</decl_stmt>
<comment type="line" pos:line="35" pos:column="1">//int FileDialog::_dialogFileBoxId = (NppParameters::getInstance())-&gt;getWinVersion() &lt; WV_W2K?edt1:cmb13;</comment>

<constructor><name><name pos:line="37" pos:column="1">FileDialog</name><op:operator pos:line="37" pos:column="11">::</op:operator><name pos:line="37" pos:column="13">FileDialog</name></name><parameter_list pos:line="37" pos:column="23">(<param><decl><type><name pos:line="37" pos:column="24">HWND</name></type> <name pos:line="37" pos:column="29">hwnd</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="35">HINSTANCE</name></type> <name pos:line="37" pos:column="45">hInst</name></decl></param>)</parameter_list> 
	<member_list pos:line="38" pos:column="9">: <call><name pos:line="38" pos:column="11">_nbCharFileExt</name><argument_list pos:line="38" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="26">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="28">,</op:operator> <call><name pos:line="38" pos:column="30">_nbExt</name><argument_list pos:line="38" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="37">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="39">,</op:operator> <call><name pos:line="38" pos:column="41">_fileExt</name><argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="55">,</op:operator> <call><name pos:line="38" pos:column="57">_extTypeIndex</name><argument_list pos:line="38" pos:column="70">(<argument><expr><op:operator pos:line="38" pos:column="71">-</op:operator><lit:literal type="number" pos:line="38" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call>
</member_list><block pos:line="39" pos:column="1">{
	<expr_stmt><expr><name pos:line="40" pos:column="9">staticThis</name> <op:operator pos:line="40" pos:column="20">=</op:operator> <name pos:line="40" pos:column="22">this</name></expr>;</expr_stmt>
    <comment type="line" pos:line="41" pos:column="5">//for (int i = 0 ; i &lt; nbExtMax ; i++)</comment>
    <comment type="line" pos:line="42" pos:column="5">//    _extArray[i][0] = '\0';</comment>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">_fileName</name><index pos:line="44" pos:column="18">[<expr><lit:literal type="number" pos:line="44" pos:column="19">0</lit:literal></expr>]</index></name> <op:operator pos:line="44" pos:column="22">=</op:operator> <lit:literal type="char" pos:line="44" pos:column="24">'\0'</lit:literal></expr>;</expr_stmt>
 
	<expr_stmt><expr><name pos:line="46" pos:column="9">_winVersion</name> <op:operator pos:line="46" pos:column="21">=</op:operator> <op:operator pos:line="46" pos:column="23">(</op:operator><call><name><name pos:line="46" pos:column="24">NppParameters</name><op:operator pos:line="46" pos:column="37">::</op:operator><name pos:line="46" pos:column="39">getInstance</name></name><argument_list pos:line="46" pos:column="50">()</argument_list></call><op:operator pos:line="46" pos:column="52">)</op:operator><op:operator pos:line="46" pos:column="53">-&gt;</op:operator><call><name pos:line="46" pos:column="55">getWinVersion</name><argument_list pos:line="46" pos:column="68">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="48" pos:column="9">_ofn</name><op:operator pos:line="48" pos:column="13">.</op:operator><name pos:line="48" pos:column="14">lStructSize</name></name> <op:operator pos:line="48" pos:column="26">=</op:operator> <sizeof pos:line="48" pos:column="28">sizeof<argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">_ofn</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">_winVersion</name> <op:operator pos:line="49" pos:column="25">&lt;</op:operator> <name pos:line="49" pos:column="27">WV_W2K</name></expr>)</condition><then pos:line="49" pos:column="34">
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">_ofn</name><op:operator pos:line="50" pos:column="21">.</op:operator><name pos:line="50" pos:column="22">lStructSize</name></name> <op:operator pos:line="50" pos:column="34">=</op:operator> <sizeof pos:line="50" pos:column="36">sizeof<argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">OPENFILENAME</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">_ofn</name><op:operator pos:line="51" pos:column="13">.</op:operator><name pos:line="51" pos:column="14">hwndOwner</name></name> <op:operator pos:line="51" pos:column="24">=</op:operator> <name pos:line="51" pos:column="26">hwnd</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">_ofn</name><op:operator pos:line="52" pos:column="13">.</op:operator><name pos:line="52" pos:column="14">hInstance</name></name> <op:operator pos:line="52" pos:column="24">=</op:operator> <name pos:line="52" pos:column="26">hInst</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">_ofn</name><op:operator pos:line="53" pos:column="13">.</op:operator><name pos:line="53" pos:column="14">lpstrCustomFilter</name></name> <op:operator pos:line="53" pos:column="32">=</op:operator> <op:operator pos:line="53" pos:column="34">(</op:operator><name pos:line="53" pos:column="35">LPTSTR</name><op:operator pos:line="53" pos:column="41">)</op:operator> <name pos:line="53" pos:column="43">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">_ofn</name><op:operator pos:line="54" pos:column="13">.</op:operator><name pos:line="54" pos:column="14">nMaxCustFilter</name></name> <op:operator pos:line="54" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="54" pos:column="31">0L</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">_ofn</name><op:operator pos:line="55" pos:column="13">.</op:operator><name pos:line="55" pos:column="14">nFilterIndex</name></name> <op:operator pos:line="55" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="55" pos:column="29">1L</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">_ofn</name><op:operator pos:line="56" pos:column="13">.</op:operator><name pos:line="56" pos:column="14">lpstrFile</name></name> <op:operator pos:line="56" pos:column="24">=</op:operator> <name pos:line="56" pos:column="26">_fileName</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">_ofn</name><op:operator pos:line="57" pos:column="13">.</op:operator><name pos:line="57" pos:column="14">nMaxFile</name></name> <op:operator pos:line="57" pos:column="23">=</op:operator> <sizeof pos:line="57" pos:column="25">sizeof<argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">_fileName</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="57" pos:column="42">/</op:operator><sizeof pos:line="57" pos:column="43">sizeof<argument_list pos:line="57" pos:column="49">(<argument><expr><name pos:line="57" pos:column="50">TCHAR</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="58" pos:column="9">_ofn</name><op:operator pos:line="58" pos:column="13">.</op:operator><name pos:line="58" pos:column="14">lpstrFileTitle</name></name> <op:operator pos:line="58" pos:column="29">=</op:operator> <name pos:line="58" pos:column="31">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">_ofn</name><op:operator pos:line="59" pos:column="13">.</op:operator><name pos:line="59" pos:column="14">nMaxFileTitle</name></name> <op:operator pos:line="59" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="59" pos:column="30">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="60" pos:column="9">_ofn</name><op:operator pos:line="60" pos:column="13">.</op:operator><name pos:line="60" pos:column="14">lpstrInitialDir</name></name> <op:operator pos:line="60" pos:column="30">=</op:operator> <name pos:line="60" pos:column="32">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">_ofn</name><op:operator pos:line="61" pos:column="13">.</op:operator><name pos:line="61" pos:column="14">lpstrTitle</name></name> <op:operator pos:line="61" pos:column="25">=</op:operator> <name pos:line="61" pos:column="27">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">_ofn</name><op:operator pos:line="62" pos:column="13">.</op:operator><name pos:line="62" pos:column="14">nFileOffset</name></name>  <op:operator pos:line="62" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="62" pos:column="29">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="63" pos:column="9">_ofn</name><op:operator pos:line="63" pos:column="13">.</op:operator><name pos:line="63" pos:column="14">nFileExtension</name></name> <op:operator pos:line="63" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="63" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">_ofn</name><op:operator pos:line="64" pos:column="13">.</op:operator><name pos:line="64" pos:column="14">lpfnHook</name></name> <op:operator pos:line="64" pos:column="23">=</op:operator> <name pos:line="64" pos:column="25">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="65" pos:column="9">_ofn</name><op:operator pos:line="65" pos:column="13">.</op:operator><name pos:line="65" pos:column="14">lpstrDefExt</name></name> <op:operator pos:line="65" pos:column="26">=</op:operator> <name pos:line="65" pos:column="28">NULL</name></expr>;</expr_stmt>  <comment type="line" pos:line="65" pos:column="35">// No default extension</comment>
	<expr_stmt><expr><name><name pos:line="66" pos:column="9">_ofn</name><op:operator pos:line="66" pos:column="13">.</op:operator><name pos:line="66" pos:column="14">lCustData</name></name> <op:operator pos:line="66" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="66" pos:column="26">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">_ofn</name><op:operator pos:line="67" pos:column="13">.</op:operator><name pos:line="67" pos:column="14">Flags</name></name> <op:operator pos:line="67" pos:column="20">=</op:operator> <name pos:line="67" pos:column="22">OFN_PATHMUSTEXIST</name> <op:operator pos:line="67" pos:column="40">|</op:operator> <name pos:line="67" pos:column="42">OFN_EXPLORER</name> <op:operator pos:line="67" pos:column="55">|</op:operator> <name pos:line="67" pos:column="57">OFN_LONGNAMES</name> <op:operator pos:line="67" pos:column="71">|</op:operator> <name pos:line="67" pos:column="73">DS_CENTER</name> <op:operator pos:line="67" pos:column="83">|</op:operator> <name pos:line="67" pos:column="85">OFN_HIDEREADONLY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">_ofn</name><op:operator pos:line="68" pos:column="13">.</op:operator><name pos:line="68" pos:column="14">pvReserved</name></name> <op:operator pos:line="68" pos:column="25">=</op:operator> <name pos:line="68" pos:column="27">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">_ofn</name><op:operator pos:line="69" pos:column="13">.</op:operator><name pos:line="69" pos:column="14">dwReserved</name></name> <op:operator pos:line="69" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="69" pos:column="27">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">_ofn</name><op:operator pos:line="70" pos:column="13">.</op:operator><name pos:line="70" pos:column="14">FlagsEx</name></name> <op:operator pos:line="70" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="70" pos:column="24">0</lit:literal></expr>;</expr_stmt>
}</block></constructor>

<destructor><name><name pos:line="73" pos:column="1">FileDialog</name><op:operator pos:line="73" pos:column="11">::</op:operator>~<name pos:line="73" pos:column="14">FileDialog</name></name><parameter_list pos:line="73" pos:column="24">()</parameter_list>
<block pos:line="74" pos:column="1">{
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">_fileExt</name></expr>)</condition><then pos:line="75" pos:column="22">
	<block pos:line="76" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="77" pos:column="17">delete</op:operator><index pos:line="77" pos:column="23">[]</index> <name pos:line="77" pos:column="26">_fileExt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="78" pos:column="17">_fileExt</name> <op:operator pos:line="78" pos:column="26">=</op:operator> <name pos:line="78" pos:column="28">NULL</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></destructor>

<comment type="line" pos:line="82" pos:column="1">// This function set and concatenate the filter into the list box of FileDialog.</comment>
<comment type="line" pos:line="83" pos:column="1">// The 1st parameter is the description of the file type, the 2nd .. Nth parameter(s) is (are)</comment>
<comment type="line" pos:line="84" pos:column="1">// the file extension which should be ".WHATEVER", otherwise it (they) will be considered as</comment>
<comment type="line" pos:line="85" pos:column="1">// a file name to filter. Since the nb of arguments is variable, you have to add NULL at the end.</comment>
<comment type="line" pos:line="86" pos:column="1">// example : </comment>
<comment type="line" pos:line="87" pos:column="1">// FileDialog.setExtFilter(TEXT("c/c++ src file"), TEXT(".c"), TEXT(".cpp"), TEXT(".cxx"), TEXT(".h"), NULL);</comment>
<comment type="line" pos:line="88" pos:column="1">// FileDialog.setExtFilter(TEXT("Makefile"), TEXT("makefile"), TEXT("GNUmakefile"), NULL);</comment>
<function><type><name pos:line="89" pos:column="1">void</name></type> <name><name pos:line="89" pos:column="6">FileDialog</name><op:operator pos:line="89" pos:column="16">::</op:operator><name pos:line="89" pos:column="18">setExtFilter</name></name><parameter_list pos:line="89" pos:column="30">(<param><decl><type><specifier pos:line="89" pos:column="31">const</specifier> <name pos:line="89" pos:column="37">TCHAR</name> <type:modifier pos:line="89" pos:column="43">*</type:modifier></type><name pos:line="89" pos:column="44">extText</name></decl></param>, <param><decl><type><specifier pos:line="89" pos:column="53">const</specifier> <name pos:line="89" pos:column="59">TCHAR</name> <type:modifier pos:line="89" pos:column="65">*</type:modifier></type><name pos:line="89" pos:column="66">ext</name></decl></param>, <param><decl><type><type:modifier pos:line="89" pos:column="71">...</type:modifier></type></decl></param>)</parameter_list>
<block pos:line="90" pos:column="1">{
    <comment type="line" pos:line="91" pos:column="5">// fill out the ext array for save as file dialog</comment>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">generic_string</name></type> <name pos:line="92" pos:column="24">exts</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="94" pos:column="5">va_list</name></type> <name pos:line="94" pos:column="13">pArg</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">va_start</name><argument_list pos:line="95" pos:column="13">(<argument><expr><name pos:line="95" pos:column="14">pArg</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="20">ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="97" pos:column="5">const</specifier> <name pos:line="97" pos:column="11">TCHAR</name> <type:modifier pos:line="97" pos:column="17">*</type:modifier></type><name pos:line="97" pos:column="18">ext2Concat</name></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="98" pos:column="9">ext2Concat</name> <op:operator pos:line="98" pos:column="20">=</op:operator> <name pos:line="98" pos:column="22">ext</name></expr>;</expr_stmt>
    <do pos:line="99" pos:column="5">do
	<block pos:line="100" pos:column="9">{
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name><name pos:line="101" pos:column="13">ext2Concat</name><index pos:line="101" pos:column="23">[<expr><lit:literal type="number" pos:line="101" pos:column="24">0</lit:literal></expr>]</index></name> <op:operator pos:line="101" pos:column="27">==</op:operator> <call><name pos:line="101" pos:column="30">TEXT</name><argument_list pos:line="101" pos:column="34">(<argument><expr><lit:literal type="char" pos:line="101" pos:column="35">'.'</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="101" pos:column="40">
            <expr_stmt><expr><name pos:line="102" pos:column="13">exts</name> <op:operator pos:line="102" pos:column="18">+=</op:operator> <call><name pos:line="102" pos:column="21">TEXT</name><argument_list pos:line="102" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="26">"*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="103" pos:column="9">exts</name> <op:operator pos:line="103" pos:column="14">+=</op:operator> <name pos:line="103" pos:column="17">ext2Concat</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="104" pos:column="9">exts</name> <op:operator pos:line="104" pos:column="14">+=</op:operator> <call><name pos:line="104" pos:column="17">TEXT</name><argument_list pos:line="104" pos:column="21">(<argument><expr><lit:literal type="string" pos:line="104" pos:column="22">";"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block>
	while <condition pos:line="106" pos:column="15">( <expr><op:operator pos:line="106" pos:column="17">(</op:operator><name pos:line="106" pos:column="18">ext2Concat</name> <op:operator pos:line="106" pos:column="29">=</op:operator> <call><name pos:line="106" pos:column="31">va_arg</name><argument_list pos:line="106" pos:column="37">(<argument><expr><name pos:line="106" pos:column="38">pArg</name></expr></argument>, <argument><expr pos:line="106" pos:column="44">const <name pos:line="106" pos:column="50">TCHAR</name> <op:operator pos:line="106" pos:column="56">*</op:operator></expr></argument>)</argument_list></call><op:operator pos:line="106" pos:column="58">)</op:operator> <op:operator pos:line="106" pos:column="60">!=</op:operator> <name pos:line="106" pos:column="63">NULL</name></expr> )</condition>;</do>

	<expr_stmt><expr><call><name pos:line="108" pos:column="9">va_end</name><argument_list pos:line="108" pos:column="15">(<argument><expr><name pos:line="108" pos:column="16">pArg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="110" pos:column="9">// remove the last ';'</comment>
    <expr_stmt><expr><name pos:line="111" pos:column="5">exts</name> <op:operator pos:line="111" pos:column="10">=</op:operator> <call><name><name pos:line="111" pos:column="12">exts</name><op:operator pos:line="111" pos:column="16">.</op:operator><name pos:line="111" pos:column="17">substr</name></name><argument_list pos:line="111" pos:column="23">(<argument><expr><lit:literal type="number" pos:line="111" pos:column="24">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="27">exts</name><op:operator pos:line="111" pos:column="31">.</op:operator><name pos:line="111" pos:column="32">length</name></name><argument_list pos:line="111" pos:column="38">()</argument_list></call><op:operator pos:line="111" pos:column="40">-</op:operator><lit:literal type="number" pos:line="111" pos:column="41">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="113" pos:column="9">setExtsFilter</name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">extText</name></expr></argument>, <argument><expr><call><name><name pos:line="113" pos:column="32">exts</name><op:operator pos:line="113" pos:column="36">.</op:operator><name pos:line="113" pos:column="37">c_str</name></name><argument_list pos:line="113" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="116" pos:column="1">int</name></type> <name><name pos:line="116" pos:column="5">FileDialog</name><op:operator pos:line="116" pos:column="15">::</op:operator><name pos:line="116" pos:column="17">setExtsFilter</name></name><parameter_list pos:line="116" pos:column="30">(<param><decl><type><specifier pos:line="116" pos:column="31">const</specifier> <name pos:line="116" pos:column="37">TCHAR</name> <type:modifier pos:line="116" pos:column="43">*</type:modifier></type><name pos:line="116" pos:column="44">extText</name></decl></param>, <param><decl><type><specifier pos:line="116" pos:column="53">const</specifier> <name pos:line="116" pos:column="59">TCHAR</name> <type:modifier pos:line="116" pos:column="65">*</type:modifier></type><name pos:line="116" pos:column="66">exts</name></decl></param>)</parameter_list>
<block pos:line="117" pos:column="1">{
    <comment type="line" pos:line="118" pos:column="5">// fill out the ext array for save as file dialog</comment>
    <decl_stmt><decl><type><name pos:line="119" pos:column="5">generic_string</name></type> <name pos:line="119" pos:column="20">extFilter</name> <init pos:line="119" pos:column="30">= <expr><name pos:line="119" pos:column="32">extText</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">TCHAR</name> <type:modifier pos:line="120" pos:column="15">*</type:modifier></type><name pos:line="120" pos:column="16">oldFilter</name> <init pos:line="120" pos:column="26">= <expr><name pos:line="120" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name pos:line="122" pos:column="5">extFilter</name> <op:operator pos:line="122" pos:column="15">+=</op:operator> <call><name pos:line="122" pos:column="18">TEXT</name><argument_list pos:line="122" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="23">" ("</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="123" pos:column="5">extFilter</name> <op:operator pos:line="123" pos:column="15">+=</op:operator> <name pos:line="123" pos:column="18">exts</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="124" pos:column="9">extFilter</name> <op:operator pos:line="124" pos:column="19">+=</op:operator> <call><name pos:line="124" pos:column="22">TEXT</name><argument_list pos:line="124" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="27">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
	
	<comment type="line" pos:line="126" pos:column="9">// Resize filter buffer</comment>
	<decl_stmt><decl><type><name pos:line="127" pos:column="9">int</name></type> <name pos:line="127" pos:column="13">nbCharAdditional</name> <init pos:line="127" pos:column="30">= <expr><call><name><name pos:line="127" pos:column="32">extFilter</name><op:operator pos:line="127" pos:column="41">.</op:operator><name pos:line="127" pos:column="42">length</name></name><argument_list pos:line="127" pos:column="48">()</argument_list></call> <op:operator pos:line="127" pos:column="51">+</op:operator> <call><name pos:line="127" pos:column="53">lstrlen</name><argument_list pos:line="127" pos:column="60">(<argument><expr><name pos:line="127" pos:column="61">exts</name></expr></argument>)</argument_list></call> <op:operator pos:line="127" pos:column="67">+</op:operator> <lit:literal type="number" pos:line="127" pos:column="69">3</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="127" pos:column="72">// 3 additional for nulls</comment>
	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name pos:line="128" pos:column="13">_fileExt</name></expr>)</condition><then pos:line="128" pos:column="22">
	<block pos:line="129" pos:column="9">{
		<expr_stmt><expr><name pos:line="130" pos:column="17">oldFilter</name> <op:operator pos:line="130" pos:column="27">=</op:operator> <op:operator pos:line="130" pos:column="29">new</op:operator> <name><name pos:line="130" pos:column="33">TCHAR</name><index pos:line="130" pos:column="38">[<expr><name pos:line="130" pos:column="39">_nbCharFileExt</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="131" pos:column="17">memcpy</name><argument_list pos:line="131" pos:column="23">(<argument><expr><name pos:line="131" pos:column="24">oldFilter</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="35">_fileExt</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="45">_nbCharFileExt</name> <op:operator pos:line="131" pos:column="60">*</op:operator> <sizeof pos:line="131" pos:column="62">sizeof<argument_list pos:line="131" pos:column="68">(<argument><expr><name pos:line="131" pos:column="69">TCHAR</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><op:operator pos:line="133" pos:column="17">delete</op:operator><index pos:line="133" pos:column="23">[]</index> <name pos:line="133" pos:column="26">_fileExt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="134" pos:column="17">_fileExt</name> <op:operator pos:line="134" pos:column="26">=</op:operator> <name pos:line="134" pos:column="28">NULL</name></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="137" pos:column="9">int</name></type> <name pos:line="137" pos:column="13">nbCharNewFileExt</name> <init pos:line="137" pos:column="30">= <expr><name pos:line="137" pos:column="32">_nbCharFileExt</name> <op:operator pos:line="137" pos:column="47">+</op:operator> <name pos:line="137" pos:column="49">nbCharAdditional</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="138" pos:column="9">_fileExt</name> <op:operator pos:line="138" pos:column="18">=</op:operator> <op:operator pos:line="138" pos:column="20">new</op:operator> <name><name pos:line="138" pos:column="24">TCHAR</name><index pos:line="138" pos:column="29">[<expr><name pos:line="138" pos:column="30">nbCharNewFileExt</name></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="139" pos:column="9">memset</name><argument_list pos:line="139" pos:column="15">(<argument><expr><name pos:line="139" pos:column="16">_fileExt</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="139" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="29">nbCharNewFileExt</name> <op:operator pos:line="139" pos:column="46">*</op:operator> <sizeof pos:line="139" pos:column="48">sizeof<argument_list pos:line="139" pos:column="54">(<argument><expr><name pos:line="139" pos:column="55">TCHAR</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="141" pos:column="9">// Restore previous filters</comment>
	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">oldFilter</name></expr>)</condition><then pos:line="142" pos:column="23">
	<block pos:line="143" pos:column="9">{		
		<expr_stmt><expr><call><name pos:line="144" pos:column="17">memcpy</name><argument_list pos:line="144" pos:column="23">(<argument><expr><name pos:line="144" pos:column="24">_fileExt</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="34">oldFilter</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="45">_nbCharFileExt</name> <op:operator pos:line="144" pos:column="60">*</op:operator> <sizeof pos:line="144" pos:column="62">sizeof<argument_list pos:line="144" pos:column="68">(<argument><expr><name pos:line="144" pos:column="69">TCHAR</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="145" pos:column="17">delete</op:operator><index pos:line="145" pos:column="23">[]</index> <name pos:line="145" pos:column="26">oldFilter</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="146" pos:column="17">oldFilter</name> <op:operator pos:line="146" pos:column="27">=</op:operator> <name pos:line="146" pos:column="29">NULL</name></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="149" pos:column="9">// Append new filter    </comment>
    <decl_stmt><decl><type><name pos:line="150" pos:column="5">TCHAR</name> <type:modifier pos:line="150" pos:column="11">*</type:modifier></type><name pos:line="150" pos:column="12">pFileExt</name> <init pos:line="150" pos:column="21">= <expr><name pos:line="150" pos:column="23">_fileExt</name> <op:operator pos:line="150" pos:column="32">+</op:operator> <name pos:line="150" pos:column="34">_nbCharFileExt</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="151" pos:column="9">lstrcpy</name><argument_list pos:line="151" pos:column="16">(<argument><expr><name pos:line="151" pos:column="17">pFileExt</name></expr></argument>, <argument><expr><call><name><name pos:line="151" pos:column="27">extFilter</name><op:operator pos:line="151" pos:column="36">.</op:operator><name pos:line="151" pos:column="37">c_str</name></name><argument_list pos:line="151" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="152" pos:column="5">_nbCharFileExt</name> <op:operator pos:line="152" pos:column="20">+=</op:operator> <call><name><name pos:line="152" pos:column="23">extFilter</name><op:operator pos:line="152" pos:column="32">.</op:operator><name pos:line="152" pos:column="33">length</name></name><argument_list pos:line="152" pos:column="39">()</argument_list></call> <op:operator pos:line="152" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="152" pos:column="44">1</lit:literal></expr>;</expr_stmt>
    
    <expr_stmt><expr><name pos:line="154" pos:column="5">pFileExt</name> <op:operator pos:line="154" pos:column="14">=</op:operator> <name pos:line="154" pos:column="16">_fileExt</name> <op:operator pos:line="154" pos:column="25">+</op:operator> <name pos:line="154" pos:column="27">_nbCharFileExt</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="155" pos:column="9">lstrcpy</name><argument_list pos:line="155" pos:column="16">(<argument><expr><name pos:line="155" pos:column="17">pFileExt</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="27">exts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="156" pos:column="5">_nbCharFileExt</name> <op:operator pos:line="156" pos:column="20">+=</op:operator> <call><name pos:line="156" pos:column="23">lstrlen</name><argument_list pos:line="156" pos:column="30">(<argument><expr><name pos:line="156" pos:column="31">exts</name></expr></argument>)</argument_list></call> <op:operator pos:line="156" pos:column="37">+</op:operator> <lit:literal type="number" pos:line="156" pos:column="39">1</lit:literal></expr>;</expr_stmt>

	<comment type="line" pos:line="158" pos:column="9">// Set file dialog pointer</comment>
	<expr_stmt><expr><name><name pos:line="159" pos:column="9">_ofn</name><op:operator pos:line="159" pos:column="13">.</op:operator><name pos:line="159" pos:column="14">lpstrFilter</name></name> <op:operator pos:line="159" pos:column="26">=</op:operator> <name pos:line="159" pos:column="28">_fileExt</name></expr>;</expr_stmt>

	<return pos:line="161" pos:column="9">return <expr><name pos:line="161" pos:column="16">_nbExt</name></expr>;</return>
}</block></function>

<function><type><name pos:line="164" pos:column="1">TCHAR</name> <type:modifier pos:line="164" pos:column="7">*</type:modifier></type> <name><name pos:line="164" pos:column="9">FileDialog</name><op:operator pos:line="164" pos:column="19">::</op:operator><name pos:line="164" pos:column="21">doOpenSingleFileDlg</name></name><parameter_list pos:line="164" pos:column="40">()</parameter_list> 
<block pos:line="165" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="166" pos:column="9">TCHAR</name></type> <name><name pos:line="166" pos:column="15">dir</name><index pos:line="166" pos:column="18">[<expr><name pos:line="166" pos:column="19">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="167" pos:column="9">::</op:operator><name pos:line="167" pos:column="11">GetCurrentDirectory</name></name><argument_list pos:line="167" pos:column="30">(<argument><expr><name pos:line="167" pos:column="31">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="167" pos:column="41">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="168" pos:column="9">NppParameters</name> <type:modifier pos:line="168" pos:column="23">*</type:modifier></type> <name pos:line="168" pos:column="25">params</name> <init pos:line="168" pos:column="32">= <expr><call><name><name pos:line="168" pos:column="34">NppParameters</name><op:operator pos:line="168" pos:column="47">::</op:operator><name pos:line="168" pos:column="49">getInstance</name></name><argument_list pos:line="168" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="169" pos:column="9">_ofn</name><op:operator pos:line="169" pos:column="13">.</op:operator><name pos:line="169" pos:column="14">lpstrInitialDir</name></name> <op:operator pos:line="169" pos:column="30">=</op:operator> <call><name><name pos:line="169" pos:column="32">params</name><op:operator pos:line="169" pos:column="38">-&gt;</op:operator><name pos:line="169" pos:column="40">getWorkingDir</name></name><argument_list pos:line="169" pos:column="53">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="171" pos:column="9">_ofn</name><op:operator pos:line="171" pos:column="13">.</op:operator><name pos:line="171" pos:column="14">Flags</name></name> <op:operator pos:line="171" pos:column="20">|=</op:operator> <name pos:line="171" pos:column="23">OFN_FILEMUSTEXIST</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="173" pos:column="9">TCHAR</name> <type:modifier pos:line="173" pos:column="15">*</type:modifier></type><name pos:line="173" pos:column="16">fn</name> <init pos:line="173" pos:column="19">= <expr><name pos:line="173" pos:column="21">NULL</name></expr></init></decl>;</decl_stmt>
	<try pos:line="174" pos:column="9">try <block pos:line="174" pos:column="13">{
		<expr_stmt><expr><name pos:line="175" pos:column="17">fn</name> <op:operator pos:line="175" pos:column="20">=</op:operator> <call><name><op:operator pos:line="175" pos:column="22">::</op:operator><name pos:line="175" pos:column="24">GetOpenFileName</name></name><argument_list pos:line="175" pos:column="39">(<argument><expr><op:operator pos:line="175" pos:column="40">(</op:operator><name pos:line="175" pos:column="41">OPENFILENAME</name><op:operator pos:line="175" pos:column="53">*</op:operator><op:operator pos:line="175" pos:column="54">)</op:operator><op:operator pos:line="175" pos:column="55">&amp;</op:operator><name pos:line="175" pos:column="56">_ofn</name></expr></argument>)</argument_list></call><op:operator pos:line="175" pos:column="61">?</op:operator><name pos:line="175" pos:column="62">_fileName</name><op:operator pos:line="175" pos:column="71">:</op:operator><name pos:line="175" pos:column="72">NULL</name></expr>;</expr_stmt>
		
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><call><name><name pos:line="177" pos:column="21">params</name><op:operator pos:line="177" pos:column="27">-&gt;</op:operator><name pos:line="177" pos:column="29">getNppGUI</name></name><argument_list pos:line="177" pos:column="38">()</argument_list></call><op:operator pos:line="177" pos:column="40">.</op:operator><name pos:line="177" pos:column="41">_openSaveDir</name> <op:operator pos:line="177" pos:column="54">==</op:operator> <name pos:line="177" pos:column="57">dir_last</name></expr>)</condition><then pos:line="177" pos:column="66">
		<block pos:line="178" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="179" pos:column="25">::</op:operator><name pos:line="179" pos:column="27">GetCurrentDirectory</name></name><argument_list pos:line="179" pos:column="46">(<argument><expr><name pos:line="179" pos:column="47">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="179" pos:column="57">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="180" pos:column="25">params</name><op:operator pos:line="180" pos:column="31">-&gt;</op:operator><name pos:line="180" pos:column="33">setWorkingDir</name></name><argument_list pos:line="180" pos:column="46">(<argument><expr><name pos:line="180" pos:column="47">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block> <catch pos:line="182" pos:column="11">catch<parameter_list pos:line="182" pos:column="16">(<param><decl><type><name><name pos:line="182" pos:column="17">std</name><op:operator pos:line="182" pos:column="20">::</op:operator><name pos:line="182" pos:column="22">exception</name></name></type> <name pos:line="182" pos:column="32">e</name></decl></param>)</parameter_list> <block pos:line="182" pos:column="35">{
		<expr_stmt><expr><call><name><op:operator pos:line="183" pos:column="17">::</op:operator><name pos:line="183" pos:column="19">MessageBoxA</name></name><argument_list pos:line="183" pos:column="30">(<argument><expr><name pos:line="183" pos:column="31">NULL</name></expr></argument>, <argument><expr><call><name><name pos:line="183" pos:column="37">e</name><op:operator pos:line="183" pos:column="38">.</op:operator><name pos:line="183" pos:column="39">what</name></name><argument_list pos:line="183" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="183" pos:column="47">"Exception"</lit:literal></expr></argument>, <argument><expr><name pos:line="183" pos:column="60">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></catch> <catch pos:line="184" pos:column="11">catch<parameter_list pos:line="184" pos:column="16">(<param><decl><type><type:modifier pos:line="184" pos:column="17">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="184" pos:column="22">{
		<expr_stmt><expr><call><name><op:operator pos:line="185" pos:column="17">::</op:operator><name pos:line="185" pos:column="19">MessageBox</name></name><argument_list pos:line="185" pos:column="29">(<argument><expr><name pos:line="185" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="185" pos:column="36">TEXT</name><argument_list pos:line="185" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="41">"GetSaveFileName crashes!!!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="185" pos:column="72">TEXT</name><argument_list pos:line="185" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="77">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="185" pos:column="82">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></catch></try>

	<expr_stmt><expr><call><name><op:operator pos:line="188" pos:column="9">::</op:operator><name pos:line="188" pos:column="11">SetCurrentDirectory</name></name><argument_list pos:line="188" pos:column="30">(<argument><expr><name pos:line="188" pos:column="31">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

	<return pos:line="190" pos:column="9">return <expr><op:operator pos:line="190" pos:column="16">(</op:operator><name pos:line="190" pos:column="17">fn</name><op:operator pos:line="190" pos:column="19">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="193" pos:column="1">stringVector</name> <type:modifier pos:line="193" pos:column="14">*</type:modifier></type> <name><name pos:line="193" pos:column="16">FileDialog</name><op:operator pos:line="193" pos:column="26">::</op:operator><name pos:line="193" pos:column="28">doOpenMultiFilesDlg</name></name><parameter_list pos:line="193" pos:column="47">()</parameter_list>
<block pos:line="194" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="195" pos:column="9">TCHAR</name></type> <name><name pos:line="195" pos:column="15">dir</name><index pos:line="195" pos:column="18">[<expr><name pos:line="195" pos:column="19">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="196" pos:column="9">::</op:operator><name pos:line="196" pos:column="11">GetCurrentDirectory</name></name><argument_list pos:line="196" pos:column="30">(<argument><expr><name pos:line="196" pos:column="31">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="41">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="197" pos:column="9">//_ofn.lpstrInitialDir = dir;</comment>

	<decl_stmt><decl><type><name pos:line="199" pos:column="9">NppParameters</name> <type:modifier pos:line="199" pos:column="23">*</type:modifier></type> <name pos:line="199" pos:column="25">params</name> <init pos:line="199" pos:column="32">= <expr><call><name><name pos:line="199" pos:column="34">NppParameters</name><op:operator pos:line="199" pos:column="47">::</op:operator><name pos:line="199" pos:column="49">getInstance</name></name><argument_list pos:line="199" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="200" pos:column="9">_ofn</name><op:operator pos:line="200" pos:column="13">.</op:operator><name pos:line="200" pos:column="14">lpstrInitialDir</name></name> <op:operator pos:line="200" pos:column="30">=</op:operator> <call><name><name pos:line="200" pos:column="32">params</name><op:operator pos:line="200" pos:column="38">-&gt;</op:operator><name pos:line="200" pos:column="40">getWorkingDir</name></name><argument_list pos:line="200" pos:column="53">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="202" pos:column="9">_ofn</name><op:operator pos:line="202" pos:column="13">.</op:operator><name pos:line="202" pos:column="14">Flags</name></name> <op:operator pos:line="202" pos:column="20">|=</op:operator> <name pos:line="202" pos:column="23">OFN_FILEMUSTEXIST</name> <op:operator pos:line="202" pos:column="41">|</op:operator> <name pos:line="202" pos:column="43">OFN_ALLOWMULTISELECT</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="204" pos:column="9">BOOL</name></type> <name pos:line="204" pos:column="14">res</name> <init pos:line="204" pos:column="18">= <expr><call><name><op:operator pos:line="204" pos:column="20">::</op:operator><name pos:line="204" pos:column="22">GetOpenFileName</name></name><argument_list pos:line="204" pos:column="37">(<argument><expr><op:operator pos:line="204" pos:column="38">(</op:operator><name pos:line="204" pos:column="39">OPENFILENAME</name><op:operator pos:line="204" pos:column="51">*</op:operator><op:operator pos:line="204" pos:column="52">)</op:operator><op:operator pos:line="204" pos:column="53">&amp;</op:operator><name pos:line="204" pos:column="54">_ofn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><call><name><name pos:line="205" pos:column="13">params</name><op:operator pos:line="205" pos:column="19">-&gt;</op:operator><name pos:line="205" pos:column="21">getNppGUI</name></name><argument_list pos:line="205" pos:column="30">()</argument_list></call><op:operator pos:line="205" pos:column="32">.</op:operator><name pos:line="205" pos:column="33">_openSaveDir</name> <op:operator pos:line="205" pos:column="46">==</op:operator> <name pos:line="205" pos:column="49">dir_last</name></expr>)</condition><then pos:line="205" pos:column="58">
	<block pos:line="206" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="207" pos:column="17">::</op:operator><name pos:line="207" pos:column="19">GetCurrentDirectory</name></name><argument_list pos:line="207" pos:column="38">(<argument><expr><name pos:line="207" pos:column="39">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="207" pos:column="49">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="208" pos:column="17">params</name><op:operator pos:line="208" pos:column="23">-&gt;</op:operator><name pos:line="208" pos:column="25">setWorkingDir</name></name><argument_list pos:line="208" pos:column="38">(<argument><expr><name pos:line="208" pos:column="39">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="210" pos:column="9">::</op:operator><name pos:line="210" pos:column="11">SetCurrentDirectory</name></name><argument_list pos:line="210" pos:column="30">(<argument><expr><name pos:line="210" pos:column="31">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

	<if pos:line="212" pos:column="9">if <condition pos:line="212" pos:column="12">(<expr><name pos:line="212" pos:column="13">res</name></expr>)</condition><then pos:line="212" pos:column="17">
	<block pos:line="213" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="214" pos:column="17">TCHAR</name></type> <name><name pos:line="214" pos:column="23">fn</name><index pos:line="214" pos:column="25">[<expr><name pos:line="214" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="215" pos:column="17">TCHAR</name> <type:modifier pos:line="215" pos:column="23">*</type:modifier></type><name pos:line="215" pos:column="24">pFn</name> <init pos:line="215" pos:column="28">= <expr><name pos:line="215" pos:column="30">_fileName</name> <op:operator pos:line="215" pos:column="40">+</op:operator> <call><name pos:line="215" pos:column="42">lstrlen</name><argument_list pos:line="215" pos:column="49">(<argument><expr><name pos:line="215" pos:column="50">_fileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="215" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="215" pos:column="63">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="216" pos:column="17">if <condition pos:line="216" pos:column="20">(<expr><op:operator pos:line="216" pos:column="21">!</op:operator><op:operator pos:line="216" pos:column="22">(</op:operator><op:operator pos:line="216" pos:column="23">*</op:operator><name pos:line="216" pos:column="24">pFn</name><op:operator pos:line="216" pos:column="27">)</op:operator></expr>)</condition><then pos:line="216" pos:column="29">
			<expr_stmt><expr><call><name><name pos:line="217" pos:column="25">_fileNames</name><op:operator pos:line="217" pos:column="35">.</op:operator><name pos:line="217" pos:column="36">push_back</name></name><argument_list pos:line="217" pos:column="45">(<argument><expr><call><name pos:line="217" pos:column="46">generic_string</name><argument_list pos:line="217" pos:column="60">(<argument><expr><name pos:line="217" pos:column="61">_fileName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="218" pos:column="17">else
		<block pos:line="219" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="220" pos:column="25">lstrcpy</name><argument_list pos:line="220" pos:column="32">(<argument><expr><name pos:line="220" pos:column="33">fn</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="37">_fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="221" pos:column="25">if <condition pos:line="221" pos:column="28">(<expr><name><name pos:line="221" pos:column="29">fn</name><index pos:line="221" pos:column="31">[<expr><call><name pos:line="221" pos:column="32">lstrlen</name><argument_list pos:line="221" pos:column="39">(<argument><expr><name pos:line="221" pos:column="40">fn</name></expr></argument>)</argument_list></call><op:operator pos:line="221" pos:column="43">-</op:operator><lit:literal type="number" pos:line="221" pos:column="44">1</lit:literal></expr>]</index></name> <op:operator pos:line="221" pos:column="47">!=</op:operator> <lit:literal type="char" pos:line="221" pos:column="50">'\\'</lit:literal></expr>)</condition><then pos:line="221" pos:column="55">
				<expr_stmt><expr><call><name pos:line="222" pos:column="33">lstrcat</name><argument_list pos:line="222" pos:column="40">(<argument><expr><name pos:line="222" pos:column="41">fn</name></expr></argument>, <argument><expr><call><name pos:line="222" pos:column="45">TEXT</name><argument_list pos:line="222" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="50">"\\"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></else></if>
		<decl_stmt><decl><type><name pos:line="224" pos:column="17">int</name></type> <name pos:line="224" pos:column="21">term</name> <init pos:line="224" pos:column="26">= <expr><call><name pos:line="224" pos:column="28">int</name><argument_list pos:line="224" pos:column="31">(<argument><expr><call><name pos:line="224" pos:column="32">lstrlen</name><argument_list pos:line="224" pos:column="39">(<argument><expr><name pos:line="224" pos:column="40">fn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<while pos:line="226" pos:column="17">while <condition pos:line="226" pos:column="23">(<expr><op:operator pos:line="226" pos:column="24">*</op:operator><name pos:line="226" pos:column="25">pFn</name></expr>)</condition>
		<block pos:line="227" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="228" pos:column="25">fn</name><index pos:line="228" pos:column="27">[<expr><name pos:line="228" pos:column="28">term</name></expr>]</index></name> <op:operator pos:line="228" pos:column="34">=</op:operator> <lit:literal type="char" pos:line="228" pos:column="36">'\0'</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="229" pos:column="25">lstrcat</name><argument_list pos:line="229" pos:column="32">(<argument><expr><name pos:line="229" pos:column="33">fn</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="37">pFn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="230" pos:column="25">_fileNames</name><op:operator pos:line="230" pos:column="35">.</op:operator><name pos:line="230" pos:column="36">push_back</name></name><argument_list pos:line="230" pos:column="45">(<argument><expr><call><name pos:line="230" pos:column="46">generic_string</name><argument_list pos:line="230" pos:column="60">(<argument><expr><name pos:line="230" pos:column="61">fn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="231" pos:column="25">pFn</name> <op:operator pos:line="231" pos:column="29">+=</op:operator> <call><name pos:line="231" pos:column="32">lstrlen</name><argument_list pos:line="231" pos:column="39">(<argument><expr><name pos:line="231" pos:column="40">pFn</name></expr></argument>)</argument_list></call> <op:operator pos:line="231" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="231" pos:column="47">1</lit:literal></expr>;</expr_stmt>
		}</block></while>

		<return pos:line="234" pos:column="17">return <expr><op:operator pos:line="234" pos:column="24">&amp;</op:operator><name pos:line="234" pos:column="25">_fileNames</name></expr>;</return>
	}</block></then>
	<else pos:line="236" pos:column="9">else
		<return pos:line="237" pos:column="17">return <expr><name pos:line="237" pos:column="24">NULL</name></expr>;</return></else></if>
}</block></function>

<function><type><name pos:line="240" pos:column="1">TCHAR</name> <type:modifier pos:line="240" pos:column="7">*</type:modifier></type> <name><name pos:line="240" pos:column="9">FileDialog</name><op:operator pos:line="240" pos:column="19">::</op:operator><name pos:line="240" pos:column="21">doSaveDlg</name></name><parameter_list pos:line="240" pos:column="30">()</parameter_list> 
<block pos:line="241" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="242" pos:column="9">TCHAR</name></type> <name><name pos:line="242" pos:column="15">dir</name><index pos:line="242" pos:column="18">[<expr><name pos:line="242" pos:column="19">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="243" pos:column="9">::</op:operator><name pos:line="243" pos:column="11">GetCurrentDirectory</name></name><argument_list pos:line="243" pos:column="30">(<argument><expr><name pos:line="243" pos:column="31">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="41">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	<comment type="line" pos:line="244" pos:column="9">//_ofn.lpstrInitialDir = dir;</comment>

	<decl_stmt><decl><type><name pos:line="246" pos:column="9">NppParameters</name> <type:modifier pos:line="246" pos:column="23">*</type:modifier></type> <name pos:line="246" pos:column="25">params</name> <init pos:line="246" pos:column="32">= <expr><call><name><name pos:line="246" pos:column="34">NppParameters</name><op:operator pos:line="246" pos:column="47">::</op:operator><name pos:line="246" pos:column="49">getInstance</name></name><argument_list pos:line="246" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="247" pos:column="9">_ofn</name><op:operator pos:line="247" pos:column="13">.</op:operator><name pos:line="247" pos:column="14">lpstrInitialDir</name></name> <op:operator pos:line="247" pos:column="30">=</op:operator> <call><name><name pos:line="247" pos:column="32">params</name><op:operator pos:line="247" pos:column="38">-&gt;</op:operator><name pos:line="247" pos:column="40">getWorkingDir</name></name><argument_list pos:line="247" pos:column="53">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="249" pos:column="9">_ofn</name><op:operator pos:line="249" pos:column="13">.</op:operator><name pos:line="249" pos:column="14">Flags</name></name> <op:operator pos:line="249" pos:column="20">|=</op:operator> <name pos:line="249" pos:column="23">OFN_OVERWRITEPROMPT</name> <op:operator pos:line="249" pos:column="43">|</op:operator> <name pos:line="249" pos:column="45">OFN_HIDEREADONLY</name> <op:operator pos:line="249" pos:column="62">|</op:operator> <name pos:line="249" pos:column="64">OFN_ENABLESIZING</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="251" pos:column="9">_ofn</name><op:operator pos:line="251" pos:column="13">.</op:operator><name pos:line="251" pos:column="14">Flags</name></name> <op:operator pos:line="251" pos:column="20">|=</op:operator> <name pos:line="251" pos:column="23">OFN_ENABLEHOOK</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="252" pos:column="9">_ofn</name><op:operator pos:line="252" pos:column="13">.</op:operator><name pos:line="252" pos:column="14">lpfnHook</name></name> <op:operator pos:line="252" pos:column="23">=</op:operator> <name pos:line="252" pos:column="25">OFNHookProc</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="254" pos:column="9">TCHAR</name> <type:modifier pos:line="254" pos:column="15">*</type:modifier></type><name pos:line="254" pos:column="16">fn</name> <init pos:line="254" pos:column="19">= <expr><name pos:line="254" pos:column="21">NULL</name></expr></init></decl>;</decl_stmt>
	<try pos:line="255" pos:column="9">try <block pos:line="255" pos:column="13">{
		<expr_stmt><expr><name pos:line="256" pos:column="17">fn</name> <op:operator pos:line="256" pos:column="20">=</op:operator> <call><name><op:operator pos:line="256" pos:column="22">::</op:operator><name pos:line="256" pos:column="24">GetSaveFileName</name></name><argument_list pos:line="256" pos:column="39">(<argument><expr><op:operator pos:line="256" pos:column="40">(</op:operator><name pos:line="256" pos:column="41">OPENFILENAME</name><op:operator pos:line="256" pos:column="53">*</op:operator><op:operator pos:line="256" pos:column="54">)</op:operator><op:operator pos:line="256" pos:column="55">&amp;</op:operator><name pos:line="256" pos:column="56">_ofn</name></expr></argument>)</argument_list></call><op:operator pos:line="256" pos:column="61">?</op:operator><name pos:line="256" pos:column="62">_fileName</name><op:operator pos:line="256" pos:column="71">:</op:operator><name pos:line="256" pos:column="72">NULL</name></expr>;</expr_stmt>
		<if pos:line="257" pos:column="17">if <condition pos:line="257" pos:column="20">(<expr><call><name><name pos:line="257" pos:column="21">params</name><op:operator pos:line="257" pos:column="27">-&gt;</op:operator><name pos:line="257" pos:column="29">getNppGUI</name></name><argument_list pos:line="257" pos:column="38">()</argument_list></call><op:operator pos:line="257" pos:column="40">.</op:operator><name pos:line="257" pos:column="41">_openSaveDir</name> <op:operator pos:line="257" pos:column="54">==</op:operator> <name pos:line="257" pos:column="57">dir_last</name></expr>)</condition><then pos:line="257" pos:column="66">
		<block pos:line="258" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="259" pos:column="25">::</op:operator><name pos:line="259" pos:column="27">GetCurrentDirectory</name></name><argument_list pos:line="259" pos:column="46">(<argument><expr><name pos:line="259" pos:column="47">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="259" pos:column="57">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="260" pos:column="25">params</name><op:operator pos:line="260" pos:column="31">-&gt;</op:operator><name pos:line="260" pos:column="33">setWorkingDir</name></name><argument_list pos:line="260" pos:column="46">(<argument><expr><name pos:line="260" pos:column="47">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block> <catch pos:line="262" pos:column="11">catch<parameter_list pos:line="262" pos:column="16">(<param><decl><type><name><name pos:line="262" pos:column="17">std</name><op:operator pos:line="262" pos:column="20">::</op:operator><name pos:line="262" pos:column="22">exception</name></name></type> <name pos:line="262" pos:column="32">e</name></decl></param>)</parameter_list> <block pos:line="262" pos:column="35">{
		<expr_stmt><expr><call><name><op:operator pos:line="263" pos:column="17">::</op:operator><name pos:line="263" pos:column="19">MessageBoxA</name></name><argument_list pos:line="263" pos:column="30">(<argument><expr><name pos:line="263" pos:column="31">NULL</name></expr></argument>, <argument><expr><call><name><name pos:line="263" pos:column="37">e</name><op:operator pos:line="263" pos:column="38">.</op:operator><name pos:line="263" pos:column="39">what</name></name><argument_list pos:line="263" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="263" pos:column="47">"Exception"</lit:literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="60">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></catch> <catch pos:line="264" pos:column="11">catch<parameter_list pos:line="264" pos:column="16">(<param><decl><type><type:modifier pos:line="264" pos:column="17">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="264" pos:column="22">{
		<expr_stmt><expr><call><name><op:operator pos:line="265" pos:column="17">::</op:operator><name pos:line="265" pos:column="19">MessageBox</name></name><argument_list pos:line="265" pos:column="29">(<argument><expr><name pos:line="265" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="265" pos:column="36">TEXT</name><argument_list pos:line="265" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="265" pos:column="41">"GetSaveFileName crashes!!!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="265" pos:column="72">TEXT</name><argument_list pos:line="265" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="265" pos:column="77">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="265" pos:column="82">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></catch></try>

	<expr_stmt><expr><call><name><op:operator pos:line="268" pos:column="9">::</op:operator><name pos:line="268" pos:column="11">SetCurrentDirectory</name></name><argument_list pos:line="268" pos:column="30">(<argument><expr><name pos:line="268" pos:column="31">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

	<return pos:line="270" pos:column="9">return <expr><op:operator pos:line="270" pos:column="16">(</op:operator><name pos:line="270" pos:column="17">fn</name><op:operator pos:line="270" pos:column="19">)</op:operator></expr>;</return>
}</block></function>

<decl_stmt><decl><type><specifier pos:line="273" pos:column="1">static</specifier> <name pos:line="273" pos:column="8">HWND</name></type> <name pos:line="273" pos:column="13">hFileDlg</name> <init pos:line="273" pos:column="22">= <expr><name pos:line="273" pos:column="24">NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="274" pos:column="1">static</specifier> <name pos:line="274" pos:column="8">WNDPROC</name></type> <name pos:line="274" pos:column="16">oldProc</name> <init pos:line="274" pos:column="24">= <expr><name pos:line="274" pos:column="26">NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="275" pos:column="1">static</specifier> <name pos:line="275" pos:column="8">generic_string</name></type> <name pos:line="275" pos:column="23">currentExt</name> <init pos:line="275" pos:column="34">= <expr><call><name pos:line="275" pos:column="36">TEXT</name><argument_list pos:line="275" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="275" pos:column="41">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<function><type><specifier pos:line="278" pos:column="1">static</specifier> <name pos:line="278" pos:column="8">BOOL</name> <name pos:line="278" pos:column="13">CALLBACK</name></type> <name pos:line="278" pos:column="22">fileDlgProc</name><parameter_list pos:line="278" pos:column="33">(<param><decl><type><name pos:line="278" pos:column="34">HWND</name></type> <name pos:line="278" pos:column="39">hwnd</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="45">UINT</name></type> <name pos:line="278" pos:column="50">message</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="59">WPARAM</name></type> <name pos:line="278" pos:column="66">wParam</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="74">LPARAM</name></type> <name pos:line="278" pos:column="81">lParam</name></decl></param>)</parameter_list> <block pos:line="278" pos:column="89">{
	<switch pos:line="279" pos:column="9">switch <condition pos:line="279" pos:column="16">(<expr><name pos:line="279" pos:column="17">message</name></expr>)</condition>
    <block pos:line="280" pos:column="5">{
		<case pos:line="281" pos:column="17">case <expr><name pos:line="281" pos:column="22">WM_COMMAND</name></expr> :
		<block pos:line="282" pos:column="17">{
			<switch pos:line="283" pos:column="25">switch <condition pos:line="283" pos:column="32">(<expr><name pos:line="283" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="284" pos:column="25">{	
				<case pos:line="285" pos:column="33">case <expr><name pos:line="285" pos:column="38">IDOK</name></expr> :
				<block pos:line="286" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="287" pos:column="41">HWND</name></type> <name pos:line="287" pos:column="46">fnControl</name> <init pos:line="287" pos:column="56">= <expr><call><name><op:operator pos:line="287" pos:column="58">::</op:operator><name pos:line="287" pos:column="60">GetDlgItem</name></name><argument_list pos:line="287" pos:column="70">(<argument><expr><name pos:line="287" pos:column="71">hwnd</name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="77">FileDialog</name><op:operator pos:line="287" pos:column="87">::</op:operator><name pos:line="287" pos:column="89">_dialogFileBoxId</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="288" pos:column="41">TCHAR</name></type> <name><name pos:line="288" pos:column="47">fn</name><index pos:line="288" pos:column="49">[<expr><name pos:line="288" pos:column="50">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="289" pos:column="41">::</op:operator><name pos:line="289" pos:column="43">GetWindowText</name></name><argument_list pos:line="289" pos:column="56">(<argument><expr><name pos:line="289" pos:column="57">fnControl</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="68">fn</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="72">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<comment type="line" pos:line="291" pos:column="41">// Check condition to have the compability of default behaviour </comment>
					<if pos:line="292" pos:column="41">if <condition pos:line="292" pos:column="44">(<expr><op:operator pos:line="292" pos:column="45">*</op:operator><name pos:line="292" pos:column="46">fn</name> <op:operator pos:line="292" pos:column="49">==</op:operator> <lit:literal type="char" pos:line="292" pos:column="52">'\0'</lit:literal></expr>)</condition><then pos:line="292" pos:column="57">
						<return pos:line="293" pos:column="49">return <expr><call><name pos:line="293" pos:column="56">oldProc</name><argument_list pos:line="293" pos:column="63">(<argument><expr><name pos:line="293" pos:column="64">hwnd</name></expr></argument>, <argument><expr><name pos:line="293" pos:column="70">message</name></expr></argument>, <argument><expr><name pos:line="293" pos:column="79">wParam</name></expr></argument>, <argument><expr><name pos:line="293" pos:column="87">lParam</name></expr></argument>)</argument_list></call></expr>;</return></then>
					<else pos:line="294" pos:column="41">else <if pos:line="294" pos:column="46">if <condition pos:line="294" pos:column="49">(<expr><call><name><op:operator pos:line="294" pos:column="50">::</op:operator><name pos:line="294" pos:column="52">PathIsDirectory</name></name><argument_list pos:line="294" pos:column="67">(<argument><expr><name pos:line="294" pos:column="68">fn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="294" pos:column="72">
						<return pos:line="295" pos:column="49">return <expr><call><name pos:line="295" pos:column="56">oldProc</name><argument_list pos:line="295" pos:column="63">(<argument><expr><name pos:line="295" pos:column="64">hwnd</name></expr></argument>, <argument><expr><name pos:line="295" pos:column="70">message</name></expr></argument>, <argument><expr><name pos:line="295" pos:column="79">wParam</name></expr></argument>, <argument><expr><name pos:line="295" pos:column="87">lParam</name></expr></argument>)</argument_list></call></expr>;</return></then></if></else></if>

					<comment type="line" pos:line="297" pos:column="41">// Process</comment>
					<if pos:line="298" pos:column="41">if <condition pos:line="298" pos:column="44">(<expr><name pos:line="298" pos:column="45">currentExt</name> <op:operator pos:line="298" pos:column="56">!=</op:operator> <call><name pos:line="298" pos:column="59">TEXT</name><argument_list pos:line="298" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="298" pos:column="64">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="298" pos:column="68">
					<block pos:line="299" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="300" pos:column="49">generic_string</name></type> <name pos:line="300" pos:column="64">fnExt</name> <init pos:line="300" pos:column="70">= <expr><call><name pos:line="300" pos:column="72">changeExt</name><argument_list pos:line="300" pos:column="81">(<argument><expr><name pos:line="300" pos:column="82">fn</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="86">currentExt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="300" pos:column="98">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="301" pos:column="49">::</op:operator><name pos:line="301" pos:column="51">SetWindowText</name></name><argument_list pos:line="301" pos:column="64">(<argument><expr><name pos:line="301" pos:column="65">fnControl</name></expr></argument>, <argument><expr><call><name><name pos:line="301" pos:column="76">fnExt</name><op:operator pos:line="301" pos:column="81">.</op:operator><name pos:line="301" pos:column="82">c_str</name></name><argument_list pos:line="301" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<return pos:line="303" pos:column="41">return <expr><call><name pos:line="303" pos:column="48">oldProc</name><argument_list pos:line="303" pos:column="55">(<argument><expr><name pos:line="303" pos:column="56">hwnd</name></expr></argument>, <argument><expr><name pos:line="303" pos:column="62">message</name></expr></argument>, <argument><expr><name pos:line="303" pos:column="71">wParam</name></expr></argument>, <argument><expr><name pos:line="303" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
				}</block>

				</case><default pos:line="306" pos:column="33">default :
					<break pos:line="307" pos:column="41">break;</break>
			</default>}</block></switch>
		}</block>
	</case>}</block></switch>
	<return pos:line="311" pos:column="9">return <expr><call><name pos:line="311" pos:column="16">oldProc</name><argument_list pos:line="311" pos:column="23">(<argument><expr><name pos:line="311" pos:column="24">hwnd</name></expr></argument>, <argument><expr><name pos:line="311" pos:column="30">message</name></expr></argument>, <argument><expr><name pos:line="311" pos:column="39">wParam</name></expr></argument>, <argument><expr><name pos:line="311" pos:column="47">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function><empty_stmt pos:line="312" pos:column="2">;</empty_stmt>


<function><type><specifier pos:line="315" pos:column="1">static</specifier> <name pos:line="315" pos:column="8">TCHAR</name> <type:modifier pos:line="315" pos:column="14">*</type:modifier></type> <name pos:line="315" pos:column="16">get1stExt</name><parameter_list pos:line="315" pos:column="25">(<param><decl><type><name pos:line="315" pos:column="26">TCHAR</name> <type:modifier pos:line="315" pos:column="32">*</type:modifier></type><name pos:line="315" pos:column="33">ext</name></decl></param>)</parameter_list> <block pos:line="315" pos:column="38">{ <comment type="line" pos:line="315" pos:column="40">// precondition : ext should be under the format : Batch (*.bat;*.cmd;*.nt)</comment>
	<decl_stmt><decl><type><name pos:line="316" pos:column="9">TCHAR</name> <type:modifier pos:line="316" pos:column="15">*</type:modifier></type><name pos:line="316" pos:column="16">begin</name> <init pos:line="316" pos:column="22">= <expr><name pos:line="316" pos:column="24">ext</name></expr></init></decl>;</decl_stmt>
	<for pos:line="317" pos:column="9">for ( <init pos:line="317" pos:column="15">;</init> <condition><expr><op:operator pos:line="317" pos:column="17">*</op:operator><name pos:line="317" pos:column="18">begin</name> <op:operator pos:line="317" pos:column="24">!=</op:operator> <lit:literal type="char" pos:line="317" pos:column="27">'.'</lit:literal></expr> ;</condition> <incr><expr><name pos:line="317" pos:column="33">begin</name><op:operator pos:line="317" pos:column="38">++</op:operator></expr></incr>)<empty_stmt pos:line="317" pos:column="41">;</empty_stmt></for>
	<decl_stmt><decl><type><name pos:line="318" pos:column="9">TCHAR</name> <type:modifier pos:line="318" pos:column="15">*</type:modifier></type><name pos:line="318" pos:column="16">end</name> <init pos:line="318" pos:column="20">= <expr><op:operator pos:line="318" pos:column="22">++</op:operator><name pos:line="318" pos:column="24">begin</name></expr></init></decl>;</decl_stmt>
	<for pos:line="319" pos:column="9">for ( <init pos:line="319" pos:column="15">;</init> <condition><expr><op:operator pos:line="319" pos:column="17">*</op:operator><name pos:line="319" pos:column="18">end</name> <op:operator pos:line="319" pos:column="22">!=</op:operator> <lit:literal type="char" pos:line="319" pos:column="25">';'</lit:literal> <op:operator pos:line="319" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="319" pos:column="32">*</op:operator><name pos:line="319" pos:column="33">end</name> <op:operator pos:line="319" pos:column="37">!=</op:operator> <lit:literal type="char" pos:line="319" pos:column="40">')'</lit:literal></expr> ;</condition> <incr><expr><name pos:line="319" pos:column="46">end</name><op:operator pos:line="319" pos:column="49">++</op:operator></expr></incr>)<empty_stmt pos:line="319" pos:column="52">;</empty_stmt></for>
	<expr_stmt><expr><op:operator pos:line="320" pos:column="9">*</op:operator><name pos:line="320" pos:column="10">end</name> <op:operator pos:line="320" pos:column="14">=</op:operator> <lit:literal type="char" pos:line="320" pos:column="16">'\0'</lit:literal></expr>;</expr_stmt>
	<if pos:line="321" pos:column="9">if <condition pos:line="321" pos:column="12">(<expr><op:operator pos:line="321" pos:column="13">*</op:operator><name pos:line="321" pos:column="14">begin</name> <op:operator pos:line="321" pos:column="20">==</op:operator> <lit:literal type="char" pos:line="321" pos:column="23">'*'</lit:literal></expr>)</condition><then pos:line="321" pos:column="27">
		<expr_stmt><expr><op:operator pos:line="322" pos:column="17">*</op:operator><name pos:line="322" pos:column="18">begin</name> <op:operator pos:line="322" pos:column="24">=</op:operator> <lit:literal type="char" pos:line="322" pos:column="26">'\0'</lit:literal></expr>;</expr_stmt></then></if>
	<return pos:line="323" pos:column="9">return <expr><name pos:line="323" pos:column="16">begin</name></expr>;</return>
}</block></function><empty_stmt pos:line="324" pos:column="2">;</empty_stmt>

<function><type><specifier pos:line="326" pos:column="1">static</specifier> <name pos:line="326" pos:column="8">generic_string</name></type> <name pos:line="326" pos:column="23">addExt</name><parameter_list pos:line="326" pos:column="29">(<param><decl><type><name pos:line="326" pos:column="30">HWND</name></type> <name pos:line="326" pos:column="35">textCtrl</name></decl></param>, <param><decl><type><name pos:line="326" pos:column="45">HWND</name></type> <name pos:line="326" pos:column="50">typeCtrl</name></decl></param>)</parameter_list> <block pos:line="326" pos:column="60">{
	<decl_stmt><decl><type><name pos:line="327" pos:column="9">TCHAR</name></type> <name><name pos:line="327" pos:column="15">fn</name><index pos:line="327" pos:column="17">[<expr><name pos:line="327" pos:column="18">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="328" pos:column="9">::</op:operator><name pos:line="328" pos:column="11">GetWindowText</name></name><argument_list pos:line="328" pos:column="24">(<argument><expr><name pos:line="328" pos:column="25">textCtrl</name></expr></argument>, <argument><expr><name pos:line="328" pos:column="35">fn</name></expr></argument>, <argument><expr><name pos:line="328" pos:column="39">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="330" pos:column="9">int</name></type> <name pos:line="330" pos:column="13">i</name> <init pos:line="330" pos:column="15">= <expr><call><name><op:operator pos:line="330" pos:column="17">::</op:operator><name pos:line="330" pos:column="19">SendMessage</name></name><argument_list pos:line="330" pos:column="30">(<argument><expr><name pos:line="330" pos:column="31">typeCtrl</name></expr></argument>, <argument><expr><name pos:line="330" pos:column="41">CB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="332" pos:column="9">int</name></type> <name pos:line="332" pos:column="13">cbTextLen</name> <init pos:line="332" pos:column="23">= <expr><call><name><op:operator pos:line="332" pos:column="25">::</op:operator><name pos:line="332" pos:column="27">SendMessage</name></name><argument_list pos:line="332" pos:column="38">(<argument><expr><name pos:line="332" pos:column="39">typeCtrl</name></expr></argument>, <argument><expr><name pos:line="332" pos:column="49">CB_GETLBTEXTLEN</name></expr></argument>, <argument><expr><name pos:line="332" pos:column="66">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="332" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="333" pos:column="9">TCHAR</name> <type:modifier pos:line="333" pos:column="15">*</type:modifier></type> <name pos:line="333" pos:column="17">ext</name> <init pos:line="333" pos:column="21">= <expr><op:operator pos:line="333" pos:column="23">new</op:operator> <name><name pos:line="333" pos:column="27">TCHAR</name><index pos:line="333" pos:column="32">[<expr><name pos:line="333" pos:column="33">cbTextLen</name> <op:operator pos:line="333" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="333" pos:column="45">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="334" pos:column="9">::</op:operator><name pos:line="334" pos:column="11">SendMessage</name></name><argument_list pos:line="334" pos:column="22">(<argument><expr><name pos:line="334" pos:column="23">typeCtrl</name></expr></argument>, <argument><expr><name pos:line="334" pos:column="33">CB_GETLBTEXT</name></expr></argument>, <argument><expr><name pos:line="334" pos:column="47">i</name></expr></argument>, <argument><expr><op:operator pos:line="334" pos:column="50">(</op:operator><name pos:line="334" pos:column="51">LPARAM</name><op:operator pos:line="334" pos:column="57">)</op:operator><name pos:line="334" pos:column="58">ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="336" pos:column="9">TCHAR</name> <type:modifier pos:line="336" pos:column="15">*</type:modifier></type><name pos:line="336" pos:column="16">pExt</name> <init pos:line="336" pos:column="21">= <expr><call><name pos:line="336" pos:column="23">get1stExt</name><argument_list pos:line="336" pos:column="32">(<argument><expr><name pos:line="336" pos:column="33">ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="337" pos:column="9">if <condition pos:line="337" pos:column="12">(<expr><op:operator pos:line="337" pos:column="13">*</op:operator><name pos:line="337" pos:column="14">fn</name> <op:operator pos:line="337" pos:column="17">!=</op:operator> <lit:literal type="char" pos:line="337" pos:column="20">'\0'</lit:literal></expr>)</condition><then pos:line="337" pos:column="25">
	<block pos:line="338" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="339" pos:column="17">generic_string</name></type> <name pos:line="339" pos:column="32">fnExt</name> <init pos:line="339" pos:column="38">= <expr><call><name pos:line="339" pos:column="40">changeExt</name><argument_list pos:line="339" pos:column="49">(<argument><expr><name pos:line="339" pos:column="50">fn</name></expr></argument>, <argument><expr><name pos:line="339" pos:column="54">pExt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="340" pos:column="17">::</op:operator><name pos:line="340" pos:column="19">SetWindowText</name></name><argument_list pos:line="340" pos:column="32">(<argument><expr><name pos:line="340" pos:column="33">textCtrl</name></expr></argument>, <argument><expr><call><name><name pos:line="340" pos:column="43">fnExt</name><op:operator pos:line="340" pos:column="48">.</op:operator><name pos:line="340" pos:column="49">c_str</name></name><argument_list pos:line="340" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="343" pos:column="9">generic_string</name></type> <name pos:line="343" pos:column="24">returnExt</name> <init pos:line="343" pos:column="34">= <expr><name pos:line="343" pos:column="36">pExt</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="344" pos:column="9">delete</op:operator><index pos:line="344" pos:column="15">[]</index> <name pos:line="344" pos:column="18">ext</name></expr>;</expr_stmt>
	<return pos:line="345" pos:column="9">return <expr><name pos:line="345" pos:column="16">returnExt</name></expr>;</return>
}</block></function><empty_stmt pos:line="346" pos:column="2">;</empty_stmt>


<function><type><name pos:line="349" pos:column="1">UINT_PTR</name> <name pos:line="349" pos:column="10">CALLBACK</name></type> <name><name pos:line="349" pos:column="19">FileDialog</name><op:operator pos:line="349" pos:column="29">::</op:operator><name pos:line="349" pos:column="31">OFNHookProc</name></name><parameter_list pos:line="349" pos:column="42">(<param><decl><type><name pos:line="349" pos:column="43">HWND</name></type> <name pos:line="349" pos:column="48">hWnd</name></decl></param>, <param><decl><type><name pos:line="349" pos:column="54">UINT</name></type> <name pos:line="349" pos:column="59">uMsg</name></decl></param>, <param><decl><type><name pos:line="349" pos:column="65">WPARAM</name></type> <name pos:line="349" pos:column="72">wParam</name></decl></param>, <param><decl><type><name pos:line="349" pos:column="80">LPARAM</name></type> <name pos:line="349" pos:column="87">lParam</name></decl></param>)</parameter_list>
<block pos:line="350" pos:column="1">{
    <switch pos:line="351" pos:column="5">switch<condition pos:line="351" pos:column="11">(<expr><name pos:line="351" pos:column="12">uMsg</name></expr>)</condition>
    <block pos:line="352" pos:column="5">{
        <case pos:line="353" pos:column="9">case <expr><name pos:line="353" pos:column="14">WM_INITDIALOG</name></expr> :
        <block pos:line="354" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="355" pos:column="25">NppParameters</name> <type:modifier pos:line="355" pos:column="39">*</type:modifier></type><name pos:line="355" pos:column="40">pNppParam</name> <init pos:line="355" pos:column="50">= <expr><call><name><name pos:line="355" pos:column="52">NppParameters</name><op:operator pos:line="355" pos:column="65">::</op:operator><name pos:line="355" pos:column="67">getInstance</name></name><argument_list pos:line="355" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="356" pos:column="25">int</name></type> <name pos:line="356" pos:column="29">index</name> <init pos:line="356" pos:column="35">= <expr><call><name><name pos:line="356" pos:column="37">pNppParam</name><op:operator pos:line="356" pos:column="46">-&gt;</op:operator><name pos:line="356" pos:column="48">getFileSaveDlgFilterIndex</name></name><argument_list pos:line="356" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="358" pos:column="25">::</op:operator><name pos:line="358" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="358" pos:column="43">(<argument><expr><name pos:line="358" pos:column="44">hWnd</name></expr></argument>, <argument><expr><name pos:line="358" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="358" pos:column="65">(</op:operator><name pos:line="358" pos:column="66">LONG_PTR</name><op:operator pos:line="358" pos:column="74">)</op:operator><name pos:line="358" pos:column="75">staticThis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="359" pos:column="25">hFileDlg</name> <op:operator pos:line="359" pos:column="34">=</op:operator> <call><name><op:operator pos:line="359" pos:column="36">::</op:operator><name pos:line="359" pos:column="38">GetParent</name></name><argument_list pos:line="359" pos:column="47">(<argument><expr><name pos:line="359" pos:column="48">hWnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="360" pos:column="25">goToCenter</name><argument_list pos:line="360" pos:column="35">(<argument><expr><name pos:line="360" pos:column="36">hFileDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="362" pos:column="25">if <condition pos:line="362" pos:column="28">(<expr><name pos:line="362" pos:column="29">index</name> <op:operator pos:line="362" pos:column="35">!=</op:operator> <op:operator pos:line="362" pos:column="38">-</op:operator><lit:literal type="number" pos:line="362" pos:column="39">1</lit:literal></expr>)</condition><then pos:line="362" pos:column="41">
			<block pos:line="363" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="364" pos:column="33">HWND</name></type> <name pos:line="364" pos:column="38">typeControl</name> <init pos:line="364" pos:column="50">= <expr><call><name><op:operator pos:line="364" pos:column="52">::</op:operator><name pos:line="364" pos:column="54">GetDlgItem</name></name><argument_list pos:line="364" pos:column="64">(<argument><expr><name pos:line="364" pos:column="65">hFileDlg</name></expr></argument>, <argument><expr><name pos:line="364" pos:column="75">cmb1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="365" pos:column="33">::</op:operator><name pos:line="365" pos:column="35">SendMessage</name></name><argument_list pos:line="365" pos:column="46">(<argument><expr><name pos:line="365" pos:column="47">typeControl</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="60">CB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="74">index</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="365" pos:column="81">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="368" pos:column="25">// Don't touch the following 3 lines, they are cursed !!!</comment>
			<expr_stmt><expr><name pos:line="369" pos:column="25">oldProc</name> <op:operator pos:line="369" pos:column="33">=</op:operator> <op:operator pos:line="369" pos:column="35">(</op:operator><name pos:line="369" pos:column="36">WNDPROC</name><op:operator pos:line="369" pos:column="43">)</op:operator><call><name><op:operator pos:line="369" pos:column="44">::</op:operator><name pos:line="369" pos:column="46">GetWindowLongPtr</name></name><argument_list pos:line="369" pos:column="62">(<argument><expr><name pos:line="369" pos:column="63">hFileDlg</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="73">GWL_WNDPROC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="370" pos:column="25">if <condition pos:line="370" pos:column="28">(<expr><op:operator pos:line="370" pos:column="29">(</op:operator><name pos:line="370" pos:column="30">long</name><op:operator pos:line="370" pos:column="34">)</op:operator><name pos:line="370" pos:column="35">oldProc</name> <op:operator pos:line="370" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="370" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="370" pos:column="47">
				<expr_stmt><expr><call><name><op:operator pos:line="371" pos:column="33">::</op:operator><name pos:line="371" pos:column="35">SetWindowLongPtr</name></name><argument_list pos:line="371" pos:column="51">(<argument><expr><name pos:line="371" pos:column="52">hFileDlg</name></expr></argument>, <argument><expr><name pos:line="371" pos:column="62">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="371" pos:column="76">(</op:operator><name pos:line="371" pos:column="77">LONG_PTR</name><op:operator pos:line="371" pos:column="85">)</op:operator><name pos:line="371" pos:column="86">fileDlgProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<return pos:line="373" pos:column="25">return <expr><name pos:line="373" pos:column="32">FALSE</name></expr>;</return>
		}</block>

		</case><default pos:line="376" pos:column="17">default :
		<block pos:line="377" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="378" pos:column="25">FileDialog</name> <type:modifier pos:line="378" pos:column="36">*</type:modifier></type><name pos:line="378" pos:column="37">pFileDialog</name> <init pos:line="378" pos:column="49">= <expr><call><name><name pos:line="378" pos:column="51">reinterpret_cast</name><argument_list pos:line="378" pos:column="67">&lt;<argument><expr><name pos:line="378" pos:column="68">FileDialog</name> <op:operator pos:line="378" pos:column="79">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="378" pos:column="81">(<argument><expr><call><name><op:operator pos:line="378" pos:column="82">::</op:operator><name pos:line="378" pos:column="84">GetWindowLongPtr</name></name><argument_list pos:line="378" pos:column="100">(<argument><expr><name pos:line="378" pos:column="101">hWnd</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="107">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="379" pos:column="25">if <condition pos:line="379" pos:column="28">(<expr><op:operator pos:line="379" pos:column="29">!</op:operator><name pos:line="379" pos:column="30">pFileDialog</name></expr>)</condition><then pos:line="379" pos:column="42">
			<block pos:line="380" pos:column="25">{
				<return pos:line="381" pos:column="33">return <expr><name pos:line="381" pos:column="40">FALSE</name></expr>;</return>
			}</block></then></if>
			<return pos:line="383" pos:column="25">return <expr><call><name><name pos:line="383" pos:column="32">pFileDialog</name><op:operator pos:line="383" pos:column="43">-&gt;</op:operator><name pos:line="383" pos:column="45">run</name></name><argument_list pos:line="383" pos:column="48">(<argument><expr><name pos:line="383" pos:column="49">hWnd</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="55">uMsg</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="61">wParam</name></expr></argument>, <argument><expr><name pos:line="383" pos:column="69">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
    </default>}</block></switch>
}</block></function>

<function><type><name pos:line="388" pos:column="1">BOOL</name> <name pos:line="388" pos:column="6">APIENTRY</name></type> <name><name pos:line="388" pos:column="15">FileDialog</name><op:operator pos:line="388" pos:column="25">::</op:operator><name pos:line="388" pos:column="27">run</name></name><parameter_list pos:line="388" pos:column="30">(<param><decl><type><name pos:line="388" pos:column="31">HWND</name></type> <name pos:line="388" pos:column="36">hWnd</name></decl></param>, <param><decl><type><name pos:line="388" pos:column="42">UINT</name></type> <name pos:line="388" pos:column="47">uMsg</name></decl></param>, <param><decl><type><name pos:line="388" pos:column="53">WPARAM</name></type></decl></param>, <param><decl><type><name pos:line="388" pos:column="61">LPARAM</name></type> <name pos:line="388" pos:column="68">lParam</name></decl></param>)</parameter_list>
<block pos:line="389" pos:column="1">{
    <switch pos:line="390" pos:column="5">switch <condition pos:line="390" pos:column="12">(<expr><name pos:line="390" pos:column="13">uMsg</name></expr>)</condition>
    <block pos:line="391" pos:column="5">{
        <case pos:line="392" pos:column="9">case <expr><name pos:line="392" pos:column="14">WM_NOTIFY</name></expr> :
		<block pos:line="393" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="394" pos:column="25">LPNMHDR</name></type> <name pos:line="394" pos:column="33">pNmhdr</name> <init pos:line="394" pos:column="40">= <expr><op:operator pos:line="394" pos:column="42">(</op:operator><name pos:line="394" pos:column="43">LPNMHDR</name><op:operator pos:line="394" pos:column="50">)</op:operator><name pos:line="394" pos:column="51">lParam</name></expr></init></decl>;</decl_stmt>
			<switch pos:line="395" pos:column="25">switch<condition pos:line="395" pos:column="31">(<expr><name><name pos:line="395" pos:column="32">pNmhdr</name><op:operator pos:line="395" pos:column="38">-&gt;</op:operator><name pos:line="395" pos:column="40">code</name></name></expr>)</condition>
			<block pos:line="396" pos:column="25">{
                <case pos:line="397" pos:column="17">case <expr><name pos:line="397" pos:column="22">CDN_INITDONE</name></expr> :
                <block pos:line="398" pos:column="17">{
                    <if pos:line="399" pos:column="21">if <condition pos:line="399" pos:column="24">(<expr><name pos:line="399" pos:column="25">_extTypeIndex</name> <op:operator pos:line="399" pos:column="39">==</op:operator> <op:operator pos:line="399" pos:column="42">-</op:operator><lit:literal type="number" pos:line="399" pos:column="43">1</lit:literal></expr>)</condition><then pos:line="399" pos:column="45">
                        <return pos:line="400" pos:column="25">return <expr><name pos:line="400" pos:column="32">TRUE</name></expr>;</return></then></if>

                    <decl_stmt><decl><type><name pos:line="402" pos:column="21">HWND</name></type> <name pos:line="402" pos:column="26">fnControl</name> <init pos:line="402" pos:column="36">= <expr><call><name><op:operator pos:line="402" pos:column="38">::</op:operator><name pos:line="402" pos:column="40">GetDlgItem</name></name><argument_list pos:line="402" pos:column="50">(<argument><expr><call><name><op:operator pos:line="402" pos:column="51">::</op:operator><name pos:line="402" pos:column="53">GetParent</name></name><argument_list pos:line="402" pos:column="62">(<argument><expr><name pos:line="402" pos:column="63">hWnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="402" pos:column="70">_dialogFileBoxId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="403" pos:column="21">HWND</name></type> <name pos:line="403" pos:column="26">typeControl</name> <init pos:line="403" pos:column="38">= <expr><call><name><op:operator pos:line="403" pos:column="40">::</op:operator><name pos:line="403" pos:column="42">GetDlgItem</name></name><argument_list pos:line="403" pos:column="52">(<argument><expr><call><name><op:operator pos:line="403" pos:column="53">::</op:operator><name pos:line="403" pos:column="55">GetParent</name></name><argument_list pos:line="403" pos:column="64">(<argument><expr><name pos:line="403" pos:column="65">hWnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="403" pos:column="72">cmb1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><op:operator pos:line="404" pos:column="21">::</op:operator><name pos:line="404" pos:column="23">SendMessage</name></name><argument_list pos:line="404" pos:column="34">(<argument><expr><name pos:line="404" pos:column="35">typeControl</name></expr></argument>, <argument><expr><name pos:line="404" pos:column="48">CB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="404" pos:column="62">_extTypeIndex</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="404" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><name pos:line="406" pos:column="21">currentExt</name> <op:operator pos:line="406" pos:column="32">=</op:operator> <call><name pos:line="406" pos:column="34">addExt</name><argument_list pos:line="406" pos:column="40">(<argument><expr><name pos:line="406" pos:column="41">fnControl</name></expr></argument>, <argument><expr><name pos:line="406" pos:column="52">typeControl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="407" pos:column="21">return <expr><name pos:line="407" pos:column="28">TRUE</name></expr>;</return>
                }</block>

				</case><case pos:line="410" pos:column="33">case <expr><name pos:line="410" pos:column="38">CDN_TYPECHANGE</name></expr> :
				<block pos:line="411" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="412" pos:column="41">HWND</name></type> <name pos:line="412" pos:column="46">fnControl</name> <init pos:line="412" pos:column="56">= <expr><call><name><op:operator pos:line="412" pos:column="58">::</op:operator><name pos:line="412" pos:column="60">GetDlgItem</name></name><argument_list pos:line="412" pos:column="70">(<argument><expr><call><name><op:operator pos:line="412" pos:column="71">::</op:operator><name pos:line="412" pos:column="73">GetParent</name></name><argument_list pos:line="412" pos:column="82">(<argument><expr><name pos:line="412" pos:column="83">hWnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="412" pos:column="90">_dialogFileBoxId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="413" pos:column="41">HWND</name></type> <name pos:line="413" pos:column="46">typeControl</name> <init pos:line="413" pos:column="58">= <expr><call><name><op:operator pos:line="413" pos:column="60">::</op:operator><name pos:line="413" pos:column="62">GetDlgItem</name></name><argument_list pos:line="413" pos:column="72">(<argument><expr><call><name><op:operator pos:line="413" pos:column="73">::</op:operator><name pos:line="413" pos:column="75">GetParent</name></name><argument_list pos:line="413" pos:column="84">(<argument><expr><name pos:line="413" pos:column="85">hWnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="413" pos:column="92">cmb1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="414" pos:column="41">currentExt</name> <op:operator pos:line="414" pos:column="52">=</op:operator> <call><name pos:line="414" pos:column="54">addExt</name><argument_list pos:line="414" pos:column="60">(<argument><expr><name pos:line="414" pos:column="61">fnControl</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="72">typeControl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="415" pos:column="41">return <expr><name pos:line="415" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="418" pos:column="33">case <expr><name pos:line="418" pos:column="38">CDN_FILEOK</name></expr> :
				<block pos:line="419" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="420" pos:column="41">HWND</name></type> <name pos:line="420" pos:column="46">typeControl</name> <init pos:line="420" pos:column="58">= <expr><call><name><op:operator pos:line="420" pos:column="60">::</op:operator><name pos:line="420" pos:column="62">GetDlgItem</name></name><argument_list pos:line="420" pos:column="72">(<argument><expr><call><name><op:operator pos:line="420" pos:column="73">::</op:operator><name pos:line="420" pos:column="75">GetParent</name></name><argument_list pos:line="420" pos:column="84">(<argument><expr><name pos:line="420" pos:column="85">hWnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="420" pos:column="92">cmb1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="421" pos:column="41">int</name></type> <name pos:line="421" pos:column="45">index</name> <init pos:line="421" pos:column="51">= <expr><call><name><op:operator pos:line="421" pos:column="53">::</op:operator><name pos:line="421" pos:column="55">SendMessage</name></name><argument_list pos:line="421" pos:column="66">(<argument><expr><name pos:line="421" pos:column="67">typeControl</name></expr></argument>, <argument><expr><name pos:line="421" pos:column="80">CB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="421" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="421" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="422" pos:column="41">NppParameters</name> <type:modifier pos:line="422" pos:column="55">*</type:modifier></type><name pos:line="422" pos:column="56">pNppParam</name> <init pos:line="422" pos:column="66">= <expr><call><name><name pos:line="422" pos:column="68">NppParameters</name><op:operator pos:line="422" pos:column="81">::</op:operator><name pos:line="422" pos:column="83">getInstance</name></name><argument_list pos:line="422" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="423" pos:column="41">pNppParam</name><op:operator pos:line="423" pos:column="50">-&gt;</op:operator><name pos:line="423" pos:column="52">setFileSaveDlgFilterIndex</name></name><argument_list pos:line="423" pos:column="77">(<argument><expr><name pos:line="423" pos:column="78">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="424" pos:column="41">return <expr><name pos:line="424" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="427" pos:column="33">default :
					<return pos:line="428" pos:column="41">return <expr><name pos:line="428" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
			
		}</block>
		</case><default pos:line="432" pos:column="17">default :
			<return pos:line="433" pos:column="25">return <expr><name pos:line="433" pos:column="32">FALSE</name></expr>;</return>
    </default>}</block></switch>
}</block></function>

<function><type><name pos:line="437" pos:column="1">void</name></type> <name pos:line="437" pos:column="6">goToCenter</name><parameter_list pos:line="437" pos:column="16">(<param><decl><type><name pos:line="437" pos:column="17">HWND</name></type> <name pos:line="437" pos:column="22">hwnd</name></decl></param>)</parameter_list>
<block pos:line="438" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="439" pos:column="5">RECT</name></type> <name pos:line="439" pos:column="10">rc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="440" pos:column="9">HWND</name></type> <name pos:line="440" pos:column="14">hParent</name> <init pos:line="440" pos:column="22">= <expr><call><name><op:operator pos:line="440" pos:column="24">::</op:operator><name pos:line="440" pos:column="26">GetParent</name></name><argument_list pos:line="440" pos:column="35">(<argument><expr><name pos:line="440" pos:column="36">hwnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="441" pos:column="9">::</op:operator><name pos:line="441" pos:column="11">GetClientRect</name></name><argument_list pos:line="441" pos:column="24">(<argument><expr><name pos:line="441" pos:column="25">hParent</name></expr></argument>, <argument><expr><op:operator pos:line="441" pos:column="34">&amp;</op:operator><name pos:line="441" pos:column="35">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<comment type="line" pos:line="443" pos:column="9">//If window coordinates are all zero(ie,window is minimised),then assign desktop as the parent window.</comment>
 	<if pos:line="444" pos:column="9">if<condition pos:line="444" pos:column="11">(<expr><name><name pos:line="444" pos:column="12">rc</name><op:operator pos:line="444" pos:column="14">.</op:operator><name pos:line="444" pos:column="15">left</name></name> <op:operator pos:line="444" pos:column="20">==</op:operator> <lit:literal type="number" pos:line="444" pos:column="23">0</lit:literal> <op:operator pos:line="444" pos:column="25">&amp;&amp;</op:operator> <name><name pos:line="444" pos:column="28">rc</name><op:operator pos:line="444" pos:column="30">.</op:operator><name pos:line="444" pos:column="31">right</name></name> <op:operator pos:line="444" pos:column="37">==</op:operator> <lit:literal type="number" pos:line="444" pos:column="40">0</lit:literal> <op:operator pos:line="444" pos:column="42">&amp;&amp;</op:operator> <name><name pos:line="444" pos:column="45">rc</name><op:operator pos:line="444" pos:column="47">.</op:operator><name pos:line="444" pos:column="48">top</name></name> <op:operator pos:line="444" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="444" pos:column="55">0</lit:literal> <op:operator pos:line="444" pos:column="57">&amp;&amp;</op:operator> <name><name pos:line="444" pos:column="60">rc</name><op:operator pos:line="444" pos:column="62">.</op:operator><name pos:line="444" pos:column="63">bottom</name></name> <op:operator pos:line="444" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="444" pos:column="73">0</lit:literal></expr>)</condition><then pos:line="444" pos:column="75">
 	<block pos:line="445" pos:column="9">{
 		<comment type="line" pos:line="446" pos:column="17">//hParent = ::GetDesktopWindow();</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="447" pos:column="17">::</op:operator><name pos:line="447" pos:column="19">ShowWindow</name></name><argument_list pos:line="447" pos:column="29">(<argument><expr><name pos:line="447" pos:column="30">hParent</name></expr></argument>, <argument><expr><name pos:line="447" pos:column="39">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 		<expr_stmt><expr><call><name><op:operator pos:line="448" pos:column="17">::</op:operator><name pos:line="448" pos:column="19">GetClientRect</name></name><argument_list pos:line="448" pos:column="32">(<argument><expr><name pos:line="448" pos:column="33">hParent</name></expr></argument>,<argument><expr><op:operator pos:line="448" pos:column="41">&amp;</op:operator><name pos:line="448" pos:column="42">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 	}</block></then></if>
	
    <decl_stmt><decl><type><name pos:line="451" pos:column="5">POINT</name></type> <name pos:line="451" pos:column="11">center</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="452" pos:column="5">center</name><op:operator pos:line="452" pos:column="11">.</op:operator><name pos:line="452" pos:column="12">x</name></name> <op:operator pos:line="452" pos:column="14">=</op:operator> <name><name pos:line="452" pos:column="16">rc</name><op:operator pos:line="452" pos:column="18">.</op:operator><name pos:line="452" pos:column="19">left</name></name> <op:operator pos:line="452" pos:column="24">+</op:operator> <op:operator pos:line="452" pos:column="26">(</op:operator><name><name pos:line="452" pos:column="27">rc</name><op:operator pos:line="452" pos:column="29">.</op:operator><name pos:line="452" pos:column="30">right</name></name> <op:operator pos:line="452" pos:column="36">-</op:operator> <name><name pos:line="452" pos:column="38">rc</name><op:operator pos:line="452" pos:column="40">.</op:operator><name pos:line="452" pos:column="41">left</name></name><op:operator pos:line="452" pos:column="45">)</op:operator><op:operator pos:line="452" pos:column="46">/</op:operator><lit:literal type="number" pos:line="452" pos:column="47">2</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="453" pos:column="5">center</name><op:operator pos:line="453" pos:column="11">.</op:operator><name pos:line="453" pos:column="12">y</name></name> <op:operator pos:line="453" pos:column="14">=</op:operator> <name><name pos:line="453" pos:column="16">rc</name><op:operator pos:line="453" pos:column="18">.</op:operator><name pos:line="453" pos:column="19">top</name></name> <op:operator pos:line="453" pos:column="23">+</op:operator> <op:operator pos:line="453" pos:column="25">(</op:operator><name><name pos:line="453" pos:column="26">rc</name><op:operator pos:line="453" pos:column="28">.</op:operator><name pos:line="453" pos:column="29">bottom</name></name> <op:operator pos:line="453" pos:column="36">-</op:operator> <name><name pos:line="453" pos:column="38">rc</name><op:operator pos:line="453" pos:column="40">.</op:operator><name pos:line="453" pos:column="41">top</name></name><op:operator pos:line="453" pos:column="44">)</op:operator><op:operator pos:line="453" pos:column="45">/</op:operator><lit:literal type="number" pos:line="453" pos:column="46">2</lit:literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="454" pos:column="5">::</op:operator><name pos:line="454" pos:column="7">ClientToScreen</name></name><argument_list pos:line="454" pos:column="21">(<argument><expr><name pos:line="454" pos:column="22">hParent</name></expr></argument>, <argument><expr><op:operator pos:line="454" pos:column="31">&amp;</op:operator><name pos:line="454" pos:column="32">center</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="456" pos:column="9">RECT</name></type> <name pos:line="456" pos:column="14">_rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="457" pos:column="9">::</op:operator><name pos:line="457" pos:column="11">GetWindowRect</name></name><argument_list pos:line="457" pos:column="24">(<argument><expr><name pos:line="457" pos:column="25">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="457" pos:column="31">&amp;</op:operator><name pos:line="457" pos:column="32">_rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="458" pos:column="9">int</name></type> <name pos:line="458" pos:column="13">x</name> <init pos:line="458" pos:column="15">= <expr><name><name pos:line="458" pos:column="17">center</name><op:operator pos:line="458" pos:column="23">.</op:operator><name pos:line="458" pos:column="24">x</name></name> <op:operator pos:line="458" pos:column="26">-</op:operator> <op:operator pos:line="458" pos:column="28">(</op:operator><name><name pos:line="458" pos:column="29">_rc</name><op:operator pos:line="458" pos:column="32">.</op:operator><name pos:line="458" pos:column="33">right</name></name> <op:operator pos:line="458" pos:column="39">-</op:operator> <name><name pos:line="458" pos:column="41">_rc</name><op:operator pos:line="458" pos:column="44">.</op:operator><name pos:line="458" pos:column="45">left</name></name><op:operator pos:line="458" pos:column="49">)</op:operator><op:operator pos:line="458" pos:column="50">/</op:operator><lit:literal type="number" pos:line="458" pos:column="51">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="459" pos:column="9">int</name></type> <name pos:line="459" pos:column="13">y</name> <init pos:line="459" pos:column="15">= <expr><name><name pos:line="459" pos:column="17">center</name><op:operator pos:line="459" pos:column="23">.</op:operator><name pos:line="459" pos:column="24">y</name></name> <op:operator pos:line="459" pos:column="26">-</op:operator> <op:operator pos:line="459" pos:column="28">(</op:operator><name><name pos:line="459" pos:column="29">_rc</name><op:operator pos:line="459" pos:column="32">.</op:operator><name pos:line="459" pos:column="33">bottom</name></name> <op:operator pos:line="459" pos:column="40">-</op:operator> <name><name pos:line="459" pos:column="42">_rc</name><op:operator pos:line="459" pos:column="45">.</op:operator><name pos:line="459" pos:column="46">top</name></name><op:operator pos:line="459" pos:column="49">)</op:operator><op:operator pos:line="459" pos:column="50">/</op:operator><lit:literal type="number" pos:line="459" pos:column="51">2</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="461" pos:column="9">::</op:operator><name pos:line="461" pos:column="11">SetWindowPos</name></name><argument_list pos:line="461" pos:column="23">(<argument><expr><name pos:line="461" pos:column="24">hwnd</name></expr></argument>, <argument><expr><name pos:line="461" pos:column="30">HWND_TOP</name></expr></argument>, <argument><expr><name pos:line="461" pos:column="40">x</name></expr></argument>, <argument><expr><name pos:line="461" pos:column="43">y</name></expr></argument>, <argument><expr><name><name pos:line="461" pos:column="46">_rc</name><op:operator pos:line="461" pos:column="49">.</op:operator><name pos:line="461" pos:column="50">right</name></name> <op:operator pos:line="461" pos:column="56">-</op:operator> <name><name pos:line="461" pos:column="58">_rc</name><op:operator pos:line="461" pos:column="61">.</op:operator><name pos:line="461" pos:column="62">left</name></name></expr></argument>, <argument><expr><name><name pos:line="461" pos:column="68">_rc</name><op:operator pos:line="461" pos:column="71">.</op:operator><name pos:line="461" pos:column="72">bottom</name></name> <op:operator pos:line="461" pos:column="79">-</op:operator> <name><name pos:line="461" pos:column="81">_rc</name><op:operator pos:line="461" pos:column="84">.</op:operator><name pos:line="461" pos:column="85">top</name></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="90">SWP_SHOWWINDOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="464" pos:column="1">generic_string</name></type> <name pos:line="464" pos:column="16">changeExt</name><parameter_list pos:line="464" pos:column="25">(<param><decl><type><name pos:line="464" pos:column="26">generic_string</name></type> <name pos:line="464" pos:column="41">fn</name></decl></param>, <param><decl><type><name pos:line="464" pos:column="45">generic_string</name></type> <name pos:line="464" pos:column="60">ext</name></decl></param>, <param><decl><type><name pos:line="464" pos:column="65">bool</name></type> <name pos:line="464" pos:column="70">forceReplaced</name></decl></param>)</parameter_list>
<block pos:line="465" pos:column="1">{
	<if pos:line="466" pos:column="9">if <condition pos:line="466" pos:column="12">(<expr><name pos:line="466" pos:column="13">ext</name> <op:operator pos:line="466" pos:column="17">==</op:operator> <call><name pos:line="466" pos:column="20">TEXT</name><argument_list pos:line="466" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="466" pos:column="25">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="466" pos:column="29">
		<return pos:line="467" pos:column="17">return <expr><name pos:line="467" pos:column="24">fn</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="469" pos:column="9">generic_string</name></type> <name pos:line="469" pos:column="24">fnExt</name> <init pos:line="469" pos:column="30">= <expr><name pos:line="469" pos:column="32">fn</name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="471" pos:column="9">int</name></type> <name pos:line="471" pos:column="13">index</name> <init pos:line="471" pos:column="19">= <expr><call><name><name pos:line="471" pos:column="21">fnExt</name><op:operator pos:line="471" pos:column="26">.</op:operator><name pos:line="471" pos:column="27">find_last_of</name></name><argument_list pos:line="471" pos:column="39">(<argument><expr><call><name pos:line="471" pos:column="40">TEXT</name><argument_list pos:line="471" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="471" pos:column="45">"."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="472" pos:column="9">generic_string</name></type> <name pos:line="472" pos:column="24">extension</name> <init pos:line="472" pos:column="34">= <expr><call><name pos:line="472" pos:column="36">TEXT</name><argument_list pos:line="472" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="472" pos:column="41">"."</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="473" pos:column="9">extension</name> <op:operator pos:line="473" pos:column="19">+=</op:operator> <name pos:line="473" pos:column="22">ext</name></expr>;</expr_stmt>
	<if pos:line="474" pos:column="9">if <condition pos:line="474" pos:column="12">(<expr><call><name pos:line="474" pos:column="13">size_t</name><argument_list pos:line="474" pos:column="19">(<argument><expr><name pos:line="474" pos:column="20">index</name></expr></argument>)</argument_list></call> <op:operator pos:line="474" pos:column="27">==</op:operator> <name><name pos:line="474" pos:column="30">generic_string</name><op:operator pos:line="474" pos:column="44">::</op:operator><name pos:line="474" pos:column="46">npos</name></name></expr>)</condition><then pos:line="474" pos:column="51">
	<block pos:line="475" pos:column="9">{
		<expr_stmt><expr><name pos:line="476" pos:column="17">fnExt</name> <op:operator pos:line="476" pos:column="23">+=</op:operator> <name pos:line="476" pos:column="26">extension</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="478" pos:column="9">else <if pos:line="478" pos:column="14">if <condition pos:line="478" pos:column="17">(<expr><name pos:line="478" pos:column="18">forceReplaced</name></expr>)</condition><then pos:line="478" pos:column="32">
	<block pos:line="479" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="480" pos:column="17">int</name></type> <name pos:line="480" pos:column="21">len</name> <init pos:line="480" pos:column="25">= <expr><op:operator pos:line="480" pos:column="27">(</op:operator><call><name><name pos:line="480" pos:column="28">extension</name><op:operator pos:line="480" pos:column="37">.</op:operator><name pos:line="480" pos:column="38">length</name></name><argument_list pos:line="480" pos:column="44">()</argument_list></call> <op:operator pos:line="480" pos:column="47">&gt;</op:operator> <call><name><name pos:line="480" pos:column="49">fnExt</name><op:operator pos:line="480" pos:column="54">.</op:operator><name pos:line="480" pos:column="55">length</name></name><argument_list pos:line="480" pos:column="61">()</argument_list></call> <op:operator pos:line="480" pos:column="64">-</op:operator> <name pos:line="480" pos:column="66">index</name> <op:operator pos:line="480" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="480" pos:column="74">1</lit:literal><op:operator pos:line="480" pos:column="75">)</op:operator><op:operator pos:line="480" pos:column="76">?</op:operator><call><name><name pos:line="480" pos:column="77">extension</name><op:operator pos:line="480" pos:column="86">.</op:operator><name pos:line="480" pos:column="87">length</name></name><argument_list pos:line="480" pos:column="93">()</argument_list></call><op:operator pos:line="480" pos:column="95">:</op:operator><call><name><name pos:line="480" pos:column="96">fnExt</name><op:operator pos:line="480" pos:column="101">.</op:operator><name pos:line="480" pos:column="102">length</name></name><argument_list pos:line="480" pos:column="108">()</argument_list></call> <op:operator pos:line="480" pos:column="111">-</op:operator> <name pos:line="480" pos:column="113">index</name> <op:operator pos:line="480" pos:column="119">+</op:operator> <lit:literal type="number" pos:line="480" pos:column="121">1</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="481" pos:column="17">fnExt</name><op:operator pos:line="481" pos:column="22">.</op:operator><name pos:line="481" pos:column="23">replace</name></name><argument_list pos:line="481" pos:column="30">(<argument><expr><name pos:line="481" pos:column="31">index</name></expr></argument>, <argument><expr><name pos:line="481" pos:column="38">len</name></expr></argument>, <argument><expr><name pos:line="481" pos:column="43">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>
	<return pos:line="483" pos:column="9">return <expr><name pos:line="483" pos:column="16">fnExt</name></expr>;</return>
}</block></function>
</unit>
