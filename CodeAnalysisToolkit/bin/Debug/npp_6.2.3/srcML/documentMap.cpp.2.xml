<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\DocumentMap\documentMap.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"documentMap.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>


<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">DocumentMap</name><op:operator pos:line="34" pos:column="17">::</op:operator><name pos:line="34" pos:column="19">reloadMap</name></name><parameter_list pos:line="34" pos:column="28">()</parameter_list>
<block pos:line="35" pos:column="1">{
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">_pScintillaEditView</name> <op:operator pos:line="36" pos:column="33">&amp;&amp;</op:operator> <name pos:line="36" pos:column="36">_ppEditView</name></expr>)</condition><then pos:line="36" pos:column="48">
	<block pos:line="37" pos:column="9">{
		
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">Document</name></type> <name pos:line="39" pos:column="26">currentDoc</name> <init pos:line="39" pos:column="37">= <expr><call><name pos:line="39" pos:column="39">(<type:modifier pos:line="39" pos:column="40">*</type:modifier><name pos:line="39" pos:column="41">_ppEditView</name>)<op:operator pos:line="39" pos:column="53">-&gt;</op:operator><name pos:line="39" pos:column="55">execute</name></name><argument_list pos:line="39" pos:column="62">(<argument><expr><name pos:line="39" pos:column="63">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="40" pos:column="17">_pScintillaEditView</name><op:operator pos:line="40" pos:column="36">-&gt;</op:operator><name pos:line="40" pos:column="38">execute</name></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="40" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="40" pos:column="68">(</op:operator><name pos:line="40" pos:column="69">LPARAM</name><op:operator pos:line="40" pos:column="75">)</op:operator><name pos:line="40" pos:column="76">currentDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="42" pos:column="17">//</comment>
		<comment type="line" pos:line="43" pos:column="17">// sync with the current document</comment>
		<comment type="line" pos:line="44" pos:column="17">//</comment>

		<decl_stmt><decl><type><name pos:line="46" pos:column="17">Buffer</name> <type:modifier pos:line="46" pos:column="24">*</type:modifier></type><name pos:line="46" pos:column="25">editBuf</name> <init pos:line="46" pos:column="33">= <expr><call><name pos:line="46" pos:column="35">(<type:modifier pos:line="46" pos:column="36">*</type:modifier><name pos:line="46" pos:column="37">_ppEditView</name>)<op:operator pos:line="46" pos:column="49">-&gt;</op:operator><name pos:line="46" pos:column="51">getCurrentBuffer</name></name><argument_list pos:line="46" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="47" pos:column="17">_pScintillaEditView</name><op:operator pos:line="47" pos:column="36">-&gt;</op:operator><name pos:line="47" pos:column="38">setCurrentBuffer</name></name><argument_list pos:line="47" pos:column="54">(<argument><expr><name pos:line="47" pos:column="55">editBuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="49" pos:column="17">// folding</comment>
		<decl_stmt><decl><type><name><name pos:line="50" pos:column="17">std</name><op:operator pos:line="50" pos:column="20">::</op:operator><name><name pos:line="50" pos:column="22">vector</name><argument_list pos:line="50" pos:column="28">&lt;<argument><expr><name pos:line="50" pos:column="29">HeaderLineState</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="50" pos:column="46">lineStateVector</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">(<type:modifier pos:line="51" pos:column="18">*</type:modifier><name pos:line="51" pos:column="19">_ppEditView</name>)<op:operator pos:line="51" pos:column="31">-&gt;</op:operator><name pos:line="51" pos:column="33">getCurrentFoldStates</name></name><argument_list pos:line="51" pos:column="53">(<argument><expr><name pos:line="51" pos:column="54">lineStateVector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="52" pos:column="17">_pScintillaEditView</name><op:operator pos:line="52" pos:column="36">-&gt;</op:operator><name pos:line="52" pos:column="38">syncFoldStateWith</name></name><argument_list pos:line="52" pos:column="55">(<argument><expr><name pos:line="52" pos:column="56">lineStateVector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="54" pos:column="17">// Wrapping</comment>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><call><name pos:line="55" pos:column="21">(<type:modifier pos:line="55" pos:column="22">*</type:modifier><name pos:line="55" pos:column="23">_ppEditView</name>)<op:operator pos:line="55" pos:column="35">-&gt;</op:operator><name pos:line="55" pos:column="37">isWrap</name></name><argument_list pos:line="55" pos:column="43">()</argument_list></call> <op:operator pos:line="55" pos:column="46">&amp;&amp;</op:operator> <call><name pos:line="55" pos:column="49">needToRecomputeWith</name><argument_list pos:line="55" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="55" pos:column="71">
		<block pos:line="56" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">wrapMap</name><argument_list pos:line="57" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<expr_stmt><expr><call><name pos:line="60" pos:column="17">scrollMap</name><argument_list pos:line="60" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="64" pos:column="1">void</name></type> <name><name pos:line="64" pos:column="6">DocumentMap</name><op:operator pos:line="64" pos:column="17">::</op:operator><name pos:line="64" pos:column="19">setSyntaxLiliting</name></name><parameter_list pos:line="64" pos:column="36">()</parameter_list>
<block pos:line="65" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="66" pos:column="9">Buffer</name> <type:modifier pos:line="66" pos:column="16">*</type:modifier></type><name pos:line="66" pos:column="17">buf</name> <init pos:line="66" pos:column="21">= <expr><call><name><name pos:line="66" pos:column="23">_pScintillaEditView</name><op:operator pos:line="66" pos:column="42">-&gt;</op:operator><name pos:line="66" pos:column="44">getCurrentBuffer</name></name><argument_list pos:line="66" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="67" pos:column="9">_pScintillaEditView</name><op:operator pos:line="67" pos:column="28">-&gt;</op:operator><name pos:line="67" pos:column="30">defineDocType</name></name><argument_list pos:line="67" pos:column="43">(<argument><expr><call><name><name pos:line="67" pos:column="44">buf</name><op:operator pos:line="67" pos:column="47">-&gt;</op:operator><name pos:line="67" pos:column="49">getLangType</name></name><argument_list pos:line="67" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="68" pos:column="9">_pScintillaEditView</name><op:operator pos:line="68" pos:column="28">-&gt;</op:operator><name pos:line="68" pos:column="30">showMargin</name></name><argument_list pos:line="68" pos:column="40">(<argument><expr><name><name pos:line="68" pos:column="41">ScintillaEditView</name><op:operator pos:line="68" pos:column="58">::</op:operator><name pos:line="68" pos:column="60">_SC_MARGE_FOLDER</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="68" pos:column="78">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="71" pos:column="1">bool</name></type> <name><name pos:line="71" pos:column="6">DocumentMap</name><op:operator pos:line="71" pos:column="17">::</op:operator><name pos:line="71" pos:column="19">needToRecomputeWith</name></name><parameter_list pos:line="71" pos:column="38">()</parameter_list>
<block pos:line="72" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="73" pos:column="9">int</name></type> <name pos:line="73" pos:column="13">currentZoom</name> <init pos:line="73" pos:column="25">= <expr><call><name pos:line="73" pos:column="27">(<type:modifier pos:line="73" pos:column="28">*</type:modifier><name pos:line="73" pos:column="29">_ppEditView</name>)<op:operator pos:line="73" pos:column="41">-&gt;</op:operator><name pos:line="73" pos:column="43">execute</name></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">SCI_GETZOOM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">_displayZoom</name> <op:operator pos:line="74" pos:column="26">!=</op:operator> <name pos:line="74" pos:column="29">currentZoom</name></expr>)</condition><then pos:line="74" pos:column="41">
		<return pos:line="75" pos:column="17">return <expr><lit:literal type="boolean" pos:line="75" pos:column="24">true</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">currentTextZoneWidth</name> <init pos:line="77" pos:column="34">= <expr><call><name pos:line="77" pos:column="36">getEditorTextZoneWidth</name><argument_list pos:line="77" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">_displayWidth</name> <op:operator pos:line="78" pos:column="27">!=</op:operator> <name pos:line="78" pos:column="30">currentTextZoneWidth</name></expr>)</condition><then pos:line="78" pos:column="51">
		<return pos:line="79" pos:column="17">return <expr><lit:literal type="boolean" pos:line="79" pos:column="24">true</lit:literal></expr>;</return></then></if>

	<return pos:line="81" pos:column="9">return <expr><lit:literal type="boolean" pos:line="81" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="84" pos:column="1">void</name></type> <name><name pos:line="84" pos:column="6">DocumentMap</name><op:operator pos:line="84" pos:column="17">::</op:operator><name pos:line="84" pos:column="19">initWrapMap</name></name><parameter_list pos:line="84" pos:column="30">()</parameter_list>
<block pos:line="85" pos:column="1">{
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">_pScintillaEditView</name> <op:operator pos:line="86" pos:column="33">&amp;&amp;</op:operator> <name pos:line="86" pos:column="36">_ppEditView</name></expr>)</condition><then pos:line="86" pos:column="48">
	<block pos:line="87" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">RECT</name></type> <name pos:line="88" pos:column="22">rect</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">getClientRect</name><argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="90" pos:column="17">::</op:operator><name pos:line="90" pos:column="19">MoveWindow</name></name><argument_list pos:line="90" pos:column="29">(<argument><expr><call><name><name pos:line="90" pos:column="30">_pScintillaEditView</name><op:operator pos:line="90" pos:column="49">-&gt;</op:operator><name pos:line="90" pos:column="51">getHSelf</name></name><argument_list pos:line="90" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="90" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="90" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="69">rect</name><op:operator pos:line="90" pos:column="73">.</op:operator><name pos:line="90" pos:column="74">right</name></name> <op:operator pos:line="90" pos:column="80">-</op:operator> <name><name pos:line="90" pos:column="82">rect</name><op:operator pos:line="90" pos:column="86">.</op:operator><name pos:line="90" pos:column="87">left</name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="93">rect</name><op:operator pos:line="90" pos:column="97">.</op:operator><name pos:line="90" pos:column="98">bottom</name></name><op:operator pos:line="90" pos:column="104">-</op:operator><name><name pos:line="90" pos:column="105">rect</name><op:operator pos:line="90" pos:column="109">.</op:operator><name pos:line="90" pos:column="110">top</name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="115">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="91" pos:column="17">_pScintillaEditView</name><op:operator pos:line="91" pos:column="36">-&gt;</op:operator><name pos:line="91" pos:column="38">wrap</name></name><argument_list pos:line="91" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="91" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="92" pos:column="17">_pScintillaEditView</name><op:operator pos:line="92" pos:column="36">-&gt;</op:operator><name pos:line="92" pos:column="38">redraw</name></name><argument_list pos:line="92" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="92" pos:column="45">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<comment type="block" pos:line="96" pos:column="1">/*
double ddd = (double)Xlength1/(double)Xlength2;
char dchar[256];
sprintf(dchar, "%f", ddd);
::MessageBoxA(NULL, dchar, "", MB_OK);
		
		// -10    =&gt; 1
		// -9     =&gt; 1
		// -8     =&gt; 1
		// -7     =&gt; 1
		// -6     =&gt; 1.5
		// -5     =&gt; 2
		// -4     =&gt; 2.5
		// -3     =&gt; 2.5
		// -2     =&gt; 3.5
		// -1     =&gt; 3.5
		// 0: -10 =&gt; 4
		// 1      =&gt; 4.5
		// 2      =&gt; 5
		// 3      =&gt; 5
		// 4      =&gt; 5.5
		// 5      =&gt; 6
		// 6      =&gt; 6.5
		// 7      =&gt; 7
		// 8      =&gt; 7
		// 9      =&gt; 7.5
		// 10     =&gt; 8
		// 11     =&gt; 8.5
		// 12     =&gt; 8.5
		// 13     =&gt; 9.5
		// 14     =&gt; 9.5
		// 15     =&gt; 10
		// 16     =&gt; 10.5
		// 17     =&gt; 11
		// 18     =&gt; 11
		// 19     =&gt; 11.5
		// 20     =&gt; 12
*/</comment>
<decl_stmt><decl><type><name pos:line="134" pos:column="1">double</name></type> <name><name pos:line="134" pos:column="8">zoomRatio</name><index pos:line="134" pos:column="17">[]</index></name> <init pos:line="134" pos:column="20">= <expr><block pos:line="134" pos:column="22">{<expr><lit:literal type="number" pos:line="134" pos:column="23">1</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="26">1</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="29">1</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="32">1</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="35">1.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="40">2</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="43">2.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="48">2.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="53">3.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="134" pos:column="58">3.5</lit:literal></expr>,\
<expr><lit:literal type="number" pos:line="135" pos:column="1">4</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="4">4.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="9">5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="12">5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="15">5.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="20">6</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="23">6.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="28">7</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="31">7</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="34">7.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="39">8</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="42">8.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="47">8.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="52">9.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="57">9.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="62">10</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="66">10.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="72">11</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="76">11</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="80">11.5</lit:literal></expr>, <expr><lit:literal type="number" pos:line="135" pos:column="86">12</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="137" pos:column="1">void</name></type> <name><name pos:line="137" pos:column="6">DocumentMap</name><op:operator pos:line="137" pos:column="17">::</op:operator><name pos:line="137" pos:column="19">wrapMap</name></name><parameter_list pos:line="137" pos:column="26">()</parameter_list>
<block pos:line="138" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="139" pos:column="9">RECT</name></type> <name pos:line="139" pos:column="14">rect</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="140" pos:column="9">getClientRect</name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">(<type:modifier pos:line="141" pos:column="14">*</type:modifier><name pos:line="141" pos:column="15">_ppEditView</name>)<op:operator pos:line="141" pos:column="27">-&gt;</op:operator><name pos:line="141" pos:column="29">isWrap</name></name><argument_list pos:line="141" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="141" pos:column="38">
	<block pos:line="142" pos:column="9">{
		<comment type="line" pos:line="143" pos:column="17">// get current scintilla width W1</comment>
		<decl_stmt><decl><type><name pos:line="144" pos:column="17">int</name></type> <name pos:line="144" pos:column="21">editZoneWidth</name> <init pos:line="144" pos:column="35">= <expr><call><name pos:line="144" pos:column="37">getEditorTextZoneWidth</name><argument_list pos:line="144" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="146" pos:column="17">// update the wrap needed data</comment>
		<expr_stmt><expr><name pos:line="147" pos:column="17">_displayWidth</name> <op:operator pos:line="147" pos:column="31">=</op:operator> <name pos:line="147" pos:column="33">editZoneWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="148" pos:column="17">_displayZoom</name> <op:operator pos:line="148" pos:column="30">=</op:operator> <call><name pos:line="148" pos:column="32">(<type:modifier pos:line="148" pos:column="33">*</type:modifier><name pos:line="148" pos:column="34">_ppEditView</name>)<op:operator pos:line="148" pos:column="46">-&gt;</op:operator><name pos:line="148" pos:column="48">execute</name></name><argument_list pos:line="148" pos:column="55">(<argument><expr><name pos:line="148" pos:column="56">SCI_GETZOOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="149" pos:column="17">double</name></type> <name pos:line="149" pos:column="24">zr</name> <init pos:line="149" pos:column="27">= <expr><name><name pos:line="149" pos:column="29">zoomRatio</name><index pos:line="149" pos:column="38">[<expr><name pos:line="149" pos:column="39">_displayZoom</name> <op:operator pos:line="149" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="149" pos:column="54">10</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="151" pos:column="17">// compute doc map width: dzw/ezw = 1/zoomRatio</comment>
		<decl_stmt><decl><type><name pos:line="152" pos:column="17">double</name></type> <name pos:line="152" pos:column="24">docMapWidth</name> <init pos:line="152" pos:column="36">= <expr><name pos:line="152" pos:column="38">editZoneWidth</name> <op:operator pos:line="152" pos:column="52">/</op:operator> <name pos:line="152" pos:column="54">zr</name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="154" pos:column="17">::</op:operator><name pos:line="154" pos:column="19">MoveWindow</name></name><argument_list pos:line="154" pos:column="29">(<argument><expr><call><name><name pos:line="154" pos:column="30">_pScintillaEditView</name><op:operator pos:line="154" pos:column="49">-&gt;</op:operator><name pos:line="154" pos:column="51">getHSelf</name></name><argument_list pos:line="154" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="154" pos:column="69">int</name><argument_list pos:line="154" pos:column="72">(<argument><expr><name pos:line="154" pos:column="73">docMapWidth</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="87">rect</name><op:operator pos:line="154" pos:column="91">.</op:operator><name pos:line="154" pos:column="92">bottom</name></name><op:operator pos:line="154" pos:column="98">-</op:operator><name><name pos:line="154" pos:column="99">rect</name><op:operator pos:line="154" pos:column="103">.</op:operator><name pos:line="154" pos:column="104">top</name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="109">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="155" pos:column="17">_pScintillaEditView</name><op:operator pos:line="155" pos:column="36">-&gt;</op:operator><name pos:line="155" pos:column="38">wrap</name></name><argument_list pos:line="155" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="155" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="157" pos:column="17">// sync wrapping indent mode</comment>
		<expr_stmt><expr><call><name><name pos:line="158" pos:column="17">_pScintillaEditView</name><op:operator pos:line="158" pos:column="36">-&gt;</op:operator><name pos:line="158" pos:column="38">execute</name></name><argument_list pos:line="158" pos:column="45">(<argument><expr><name pos:line="158" pos:column="46">SCI_SETWRAPINDENTMODE</name></expr></argument>, <argument><expr><call><name pos:line="158" pos:column="69">(<type:modifier pos:line="158" pos:column="70">*</type:modifier><name pos:line="158" pos:column="71">_ppEditView</name>)<op:operator pos:line="158" pos:column="83">-&gt;</op:operator><name pos:line="158" pos:column="85">execute</name></name><argument_list pos:line="158" pos:column="92">(<argument><expr><name pos:line="158" pos:column="93">SCI_GETWRAPINDENTMODE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then></if>
}</block></function>

<function><type><name pos:line="163" pos:column="1">int</name></type> <name><name pos:line="163" pos:column="5">DocumentMap</name><op:operator pos:line="163" pos:column="16">::</op:operator><name pos:line="163" pos:column="18">getEditorTextZoneWidth</name></name><parameter_list pos:line="163" pos:column="40">()</parameter_list>
<block pos:line="164" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">RECT</name></type> <name pos:line="165" pos:column="14">editorRect</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="166" pos:column="9">(<type:modifier pos:line="166" pos:column="10">*</type:modifier><name pos:line="166" pos:column="11">_ppEditView</name>)<op:operator pos:line="166" pos:column="23">-&gt;</op:operator><name pos:line="166" pos:column="25">getClientRect</name></name><argument_list pos:line="166" pos:column="38">(<argument><expr><name pos:line="166" pos:column="39">editorRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="168" pos:column="9">int</name></type> <name pos:line="168" pos:column="13">marginWidths</name> <init pos:line="168" pos:column="26">= <expr><lit:literal type="number" pos:line="168" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="169" pos:column="9">for (<init><decl><type><name pos:line="169" pos:column="14">int</name></type> <name pos:line="169" pos:column="18">m</name> <init pos:line="169" pos:column="20">= <expr><lit:literal type="number" pos:line="169" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="169" pos:column="25">m</name> <op:operator pos:line="169" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="169" pos:column="29">4</lit:literal></expr>;</condition> <incr><expr><name pos:line="169" pos:column="32">m</name><op:operator pos:line="169" pos:column="33">++</op:operator></expr></incr>)
	<block pos:line="170" pos:column="9">{
		<expr_stmt><expr><name pos:line="171" pos:column="17">marginWidths</name> <op:operator pos:line="171" pos:column="30">+=</op:operator> <call><name pos:line="171" pos:column="33">(<type:modifier pos:line="171" pos:column="34">*</type:modifier><name pos:line="171" pos:column="35">_ppEditView</name>)<op:operator pos:line="171" pos:column="47">-&gt;</op:operator><name pos:line="171" pos:column="49">execute</name></name><argument_list pos:line="171" pos:column="56">(<argument><expr><name pos:line="171" pos:column="57">SCI_GETMARGINWIDTHN</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="78">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="173" pos:column="9">return <expr><name><name pos:line="173" pos:column="16">editorRect</name><op:operator pos:line="173" pos:column="26">.</op:operator><name pos:line="173" pos:column="27">right</name></name> <op:operator pos:line="173" pos:column="33">-</op:operator> <name><name pos:line="173" pos:column="35">editorRect</name><op:operator pos:line="173" pos:column="45">.</op:operator><name pos:line="173" pos:column="46">left</name></name> <op:operator pos:line="173" pos:column="51">-</op:operator> <name pos:line="173" pos:column="53">marginWidths</name></expr>;</return>
}</block></function>

<function><type><name pos:line="176" pos:column="1">void</name></type> <name><name pos:line="176" pos:column="6">DocumentMap</name><op:operator pos:line="176" pos:column="17">::</op:operator><name pos:line="176" pos:column="19">scrollMap</name></name><parameter_list pos:line="176" pos:column="28">()</parameter_list>
<block pos:line="177" pos:column="1">{
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">_pScintillaEditView</name> <op:operator pos:line="178" pos:column="33">&amp;&amp;</op:operator> <name pos:line="178" pos:column="36">_ppEditView</name></expr>)</condition><then pos:line="178" pos:column="48">
	<block pos:line="179" pos:column="9">{
		<comment type="line" pos:line="180" pos:column="17">// Visible document line for the code view (but not displayed line)</comment>
		<decl_stmt><decl><type><name pos:line="181" pos:column="17">int</name></type> <name pos:line="181" pos:column="21">firstVisibleDisplayLine</name> <init pos:line="181" pos:column="45">= <expr><call><name pos:line="181" pos:column="47">(<type:modifier pos:line="181" pos:column="48">*</type:modifier><name pos:line="181" pos:column="49">_ppEditView</name>)<op:operator pos:line="181" pos:column="61">-&gt;</op:operator><name pos:line="181" pos:column="63">execute</name></name><argument_list pos:line="181" pos:column="70">(<argument><expr><name pos:line="181" pos:column="71">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="182" pos:column="17">int</name></type> <name pos:line="182" pos:column="21">firstVisibleDocLine</name> <init pos:line="182" pos:column="41">= <expr><call><name pos:line="182" pos:column="43">(<type:modifier pos:line="182" pos:column="44">*</type:modifier><name pos:line="182" pos:column="45">_ppEditView</name>)<op:operator pos:line="182" pos:column="57">-&gt;</op:operator><name pos:line="182" pos:column="59">execute</name></name><argument_list pos:line="182" pos:column="66">(<argument><expr><name pos:line="182" pos:column="67">SCI_DOCLINEFROMVISIBLE</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="91">firstVisibleDisplayLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="183" pos:column="17">int</name></type> <name pos:line="183" pos:column="21">nbLine</name> <init pos:line="183" pos:column="28">= <expr><call><name pos:line="183" pos:column="30">(<type:modifier pos:line="183" pos:column="31">*</type:modifier><name pos:line="183" pos:column="32">_ppEditView</name>)<op:operator pos:line="183" pos:column="44">-&gt;</op:operator><name pos:line="183" pos:column="46">execute</name></name><argument_list pos:line="183" pos:column="53">(<argument><expr><name pos:line="183" pos:column="54">SCI_LINESONSCREEN</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="73">firstVisibleDisplayLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="184" pos:column="17">int</name></type> <name pos:line="184" pos:column="21">lastVisibleDocLine</name> <init pos:line="184" pos:column="40">= <expr><call><name pos:line="184" pos:column="42">(<type:modifier pos:line="184" pos:column="43">*</type:modifier><name pos:line="184" pos:column="44">_ppEditView</name>)<op:operator pos:line="184" pos:column="56">-&gt;</op:operator><name pos:line="184" pos:column="58">execute</name></name><argument_list pos:line="184" pos:column="65">(<argument><expr><name pos:line="184" pos:column="66">SCI_DOCLINEFROMVISIBLE</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="90">firstVisibleDisplayLine</name> <op:operator pos:line="184" pos:column="114">+</op:operator> <name pos:line="184" pos:column="116">nbLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="186" pos:column="17">// Visible document line for the map view</comment>
		<decl_stmt><decl><type><name pos:line="187" pos:column="17">int</name></type> <name pos:line="187" pos:column="21">firstVisibleDisplayLineMap</name> <init pos:line="187" pos:column="48">= <expr><call><name><name pos:line="187" pos:column="50">_pScintillaEditView</name><op:operator pos:line="187" pos:column="69">-&gt;</op:operator><name pos:line="187" pos:column="71">execute</name></name><argument_list pos:line="187" pos:column="78">(<argument><expr><name pos:line="187" pos:column="79">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="188" pos:column="17">int</name></type> <name pos:line="188" pos:column="21">firstVisibleDocLineMap</name> <init pos:line="188" pos:column="44">= <expr><call><name><name pos:line="188" pos:column="46">_pScintillaEditView</name><op:operator pos:line="188" pos:column="65">-&gt;</op:operator><name pos:line="188" pos:column="67">execute</name></name><argument_list pos:line="188" pos:column="74">(<argument><expr><name pos:line="188" pos:column="75">SCI_DOCLINEFROMVISIBLE</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="99">firstVisibleDisplayLineMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="189" pos:column="17">int</name></type> <name pos:line="189" pos:column="21">nbLineMap</name> <init pos:line="189" pos:column="31">= <expr><call><name><name pos:line="189" pos:column="33">_pScintillaEditView</name><op:operator pos:line="189" pos:column="52">-&gt;</op:operator><name pos:line="189" pos:column="54">execute</name></name><argument_list pos:line="189" pos:column="61">(<argument><expr><name pos:line="189" pos:column="62">SCI_LINESONSCREEN</name></expr></argument>, <argument><expr><name pos:line="189" pos:column="81">firstVisibleDocLineMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="190" pos:column="17">int</name></type> <name pos:line="190" pos:column="21">lastVisibleDocLineMap</name> <init pos:line="190" pos:column="43">= <expr><call><name pos:line="190" pos:column="45">(<type:modifier pos:line="190" pos:column="46">*</type:modifier><name pos:line="190" pos:column="47">_ppEditView</name>)<op:operator pos:line="190" pos:column="59">-&gt;</op:operator><name pos:line="190" pos:column="61">execute</name></name><argument_list pos:line="190" pos:column="68">(<argument><expr><name pos:line="190" pos:column="69">SCI_DOCLINEFROMVISIBLE</name></expr></argument>, <argument><expr><name pos:line="190" pos:column="93">firstVisibleDisplayLineMap</name> <op:operator pos:line="190" pos:column="120">+</op:operator> <name pos:line="190" pos:column="122">nbLineMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="192" pos:column="17">// If part of editor view is out of map, then scroll map</comment>
		<if pos:line="193" pos:column="17">if <condition pos:line="193" pos:column="20">(<expr><name pos:line="193" pos:column="21">lastVisibleDocLineMap</name> <op:operator pos:line="193" pos:column="43">&lt;</op:operator> <name pos:line="193" pos:column="45">lastVisibleDocLine</name></expr>)</condition><then pos:line="193" pos:column="64">
			<expr_stmt><expr><call><name><name pos:line="194" pos:column="25">_pScintillaEditView</name><op:operator pos:line="194" pos:column="44">-&gt;</op:operator><name pos:line="194" pos:column="46">execute</name></name><argument_list pos:line="194" pos:column="53">(<argument><expr><name pos:line="194" pos:column="54">SCI_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="194" pos:column="68">lastVisibleDocLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="195" pos:column="17">else
			<expr_stmt><expr><call><name><name pos:line="196" pos:column="25">_pScintillaEditView</name><op:operator pos:line="196" pos:column="44">-&gt;</op:operator><name pos:line="196" pos:column="46">execute</name></name><argument_list pos:line="196" pos:column="53">(<argument><expr><name pos:line="196" pos:column="54">SCI_GOTOLINE</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="68">firstVisibleDocLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

		<comment type="line" pos:line="198" pos:column="17">// Get the editor's higher/lower Y, then compute the map's higher/lower Y</comment>
		<decl_stmt><decl><type><name pos:line="199" pos:column="17">int</name></type> <name pos:line="199" pos:column="21">higherY</name> <init pos:line="199" pos:column="29">= <expr><lit:literal type="number" pos:line="199" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="200" pos:column="17">int</name></type> <name pos:line="200" pos:column="21">lowerY</name> <init pos:line="200" pos:column="28">= <expr><lit:literal type="number" pos:line="200" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><op:operator pos:line="201" pos:column="21">!</op:operator><call><name pos:line="201" pos:column="22">(<type:modifier pos:line="201" pos:column="23">*</type:modifier><name pos:line="201" pos:column="24">_ppEditView</name>)<op:operator pos:line="201" pos:column="36">-&gt;</op:operator><name pos:line="201" pos:column="38">isWrap</name></name><argument_list pos:line="201" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="201" pos:column="47">
		<block pos:line="202" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="203" pos:column="25">int</name></type> <name pos:line="203" pos:column="29">higherPos</name> <init pos:line="203" pos:column="39">= <expr><call><name><name pos:line="203" pos:column="41">_pScintillaEditView</name><op:operator pos:line="203" pos:column="60">-&gt;</op:operator><name pos:line="203" pos:column="62">execute</name></name><argument_list pos:line="203" pos:column="69">(<argument><expr><name pos:line="203" pos:column="70">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="92">firstVisibleDocLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="204" pos:column="25">int</name></type> <name pos:line="204" pos:column="29">lowerPos</name> <init pos:line="204" pos:column="38">= <expr><call><name><name pos:line="204" pos:column="40">_pScintillaEditView</name><op:operator pos:line="204" pos:column="59">-&gt;</op:operator><name pos:line="204" pos:column="61">execute</name></name><argument_list pos:line="204" pos:column="68">(<argument><expr><name pos:line="204" pos:column="69">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="91">lastVisibleDocLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="205" pos:column="25">higherY</name> <op:operator pos:line="205" pos:column="33">=</op:operator> <call><name><name pos:line="205" pos:column="35">_pScintillaEditView</name><op:operator pos:line="205" pos:column="54">-&gt;</op:operator><name pos:line="205" pos:column="56">execute</name></name><argument_list pos:line="205" pos:column="63">(<argument><expr><name pos:line="205" pos:column="64">SCI_POINTYFROMPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="205" pos:column="88">0</lit:literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="91">higherPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="206" pos:column="25">lowerY</name> <op:operator pos:line="206" pos:column="32">=</op:operator> <call><name><name pos:line="206" pos:column="34">_pScintillaEditView</name><op:operator pos:line="206" pos:column="53">-&gt;</op:operator><name pos:line="206" pos:column="55">execute</name></name><argument_list pos:line="206" pos:column="62">(<argument><expr><name pos:line="206" pos:column="63">SCI_POINTYFROMPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="206" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="90">lowerPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="207" pos:column="25">if <condition pos:line="207" pos:column="28">(<expr><name pos:line="207" pos:column="29">lowerY</name> <op:operator pos:line="207" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="207" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="207" pos:column="41">
			<block pos:line="208" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="209" pos:column="33">int</name></type> <name pos:line="209" pos:column="37">lineHeight</name> <init pos:line="209" pos:column="48">= <expr><call><name><name pos:line="209" pos:column="50">_pScintillaEditView</name><op:operator pos:line="209" pos:column="69">-&gt;</op:operator><name pos:line="209" pos:column="71">execute</name></name><argument_list pos:line="209" pos:column="78">(<argument><expr><name pos:line="209" pos:column="79">SCI_TEXTHEIGHT</name></expr></argument>, <argument><expr><name pos:line="209" pos:column="95">firstVisibleDocLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="210" pos:column="33">lowerY</name> <op:operator pos:line="210" pos:column="40">=</op:operator> <name pos:line="210" pos:column="42">nbLine</name> <op:operator pos:line="210" pos:column="49">*</op:operator> <name pos:line="210" pos:column="51">lineHeight</name> <op:operator pos:line="210" pos:column="62">+</op:operator> <name pos:line="210" pos:column="64">firstVisibleDocLine</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="213" pos:column="17">else
		<block pos:line="214" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="215" pos:column="25">int</name></type> <name pos:line="215" pos:column="29">higherPos</name> <init pos:line="215" pos:column="39">= <expr><call><name pos:line="215" pos:column="41">(<type:modifier pos:line="215" pos:column="42">*</type:modifier><name pos:line="215" pos:column="43">_ppEditView</name>)<op:operator pos:line="215" pos:column="55">-&gt;</op:operator><name pos:line="215" pos:column="57">execute</name></name><argument_list pos:line="215" pos:column="64">(<argument><expr><name pos:line="215" pos:column="65">SCI_POSITIONFROMPOINT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="88">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="91">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="216" pos:column="25">higherY</name> <op:operator pos:line="216" pos:column="33">=</op:operator> <call><name><name pos:line="216" pos:column="35">_pScintillaEditView</name><op:operator pos:line="216" pos:column="54">-&gt;</op:operator><name pos:line="216" pos:column="56">execute</name></name><argument_list pos:line="216" pos:column="63">(<argument><expr><name pos:line="216" pos:column="64">SCI_POINTYFROMPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="216" pos:column="88">0</lit:literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="91">higherPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="217" pos:column="25">int</name></type> <name pos:line="217" pos:column="29">lineHeight</name> <init pos:line="217" pos:column="40">= <expr><call><name><name pos:line="217" pos:column="42">_pScintillaEditView</name><op:operator pos:line="217" pos:column="61">-&gt;</op:operator><name pos:line="217" pos:column="63">execute</name></name><argument_list pos:line="217" pos:column="70">(<argument><expr><name pos:line="217" pos:column="71">SCI_TEXTHEIGHT</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="87">firstVisibleDocLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="218" pos:column="25">lowerY</name> <op:operator pos:line="218" pos:column="32">=</op:operator> <name pos:line="218" pos:column="34">nbLine</name> <op:operator pos:line="218" pos:column="41">*</op:operator> <name pos:line="218" pos:column="43">lineHeight</name> <op:operator pos:line="218" pos:column="54">+</op:operator> <name pos:line="218" pos:column="56">higherY</name></expr>;</expr_stmt>
		}</block></else></if>

		<comment type="line" pos:line="221" pos:column="17">// Update view zone in map</comment>
		<expr_stmt><expr><call><name><name pos:line="222" pos:column="17">_vzDlg</name><op:operator pos:line="222" pos:column="23">.</op:operator><name pos:line="222" pos:column="24">drawZone</name></name><argument_list pos:line="222" pos:column="32">(<argument><expr><name pos:line="222" pos:column="33">higherY</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="42">lowerY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
	}</block></then></if>
}</block></function>

<function><type><name pos:line="226" pos:column="1">void</name></type> <name><name pos:line="226" pos:column="6">DocumentMap</name><op:operator pos:line="226" pos:column="17">::</op:operator><name pos:line="226" pos:column="19">doMove</name></name><parameter_list pos:line="226" pos:column="25">()</parameter_list>
<block pos:line="227" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="228" pos:column="9">RECT</name></type> <name pos:line="228" pos:column="14">rc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="229" pos:column="9">POINT</name></type> <name pos:line="229" pos:column="15">pt</name> <init pos:line="229" pos:column="18">= <expr><block pos:line="229" pos:column="20">{<expr><lit:literal type="number" pos:line="229" pos:column="21">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="229" pos:column="23">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="230" pos:column="9">::</op:operator><name pos:line="230" pos:column="11">ClientToScreen</name></name><argument_list pos:line="230" pos:column="25">(<argument><expr><name pos:line="230" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="230" pos:column="34">&amp;</op:operator><name pos:line="230" pos:column="35">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="231" pos:column="9">getClientRect</name><argument_list pos:line="231" pos:column="22">(<argument><expr><name pos:line="231" pos:column="23">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="232" pos:column="9">::</op:operator><name pos:line="232" pos:column="11">MoveWindow</name></name><argument_list pos:line="232" pos:column="21">(<argument><expr><call><name><name pos:line="232" pos:column="22">_vzDlg</name><op:operator pos:line="232" pos:column="28">.</op:operator><name pos:line="232" pos:column="29">getHSelf</name></name><argument_list pos:line="232" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="232" pos:column="41">pt</name><op:operator pos:line="232" pos:column="43">.</op:operator><name pos:line="232" pos:column="44">x</name></name></expr></argument>, <argument><expr><name><name pos:line="232" pos:column="47">pt</name><op:operator pos:line="232" pos:column="49">.</op:operator><name pos:line="232" pos:column="50">y</name></name></expr></argument>, <argument><expr><op:operator pos:line="232" pos:column="53">(</op:operator><name><name pos:line="232" pos:column="54">rc</name><op:operator pos:line="232" pos:column="56">.</op:operator><name pos:line="232" pos:column="57">right</name></name> <op:operator pos:line="232" pos:column="63">-</op:operator> <name><name pos:line="232" pos:column="65">rc</name><op:operator pos:line="232" pos:column="67">.</op:operator><name pos:line="232" pos:column="68">left</name></name><op:operator pos:line="232" pos:column="72">)</op:operator></expr></argument>, <argument><expr><op:operator pos:line="232" pos:column="75">(</op:operator><name><name pos:line="232" pos:column="76">rc</name><op:operator pos:line="232" pos:column="78">.</op:operator><name pos:line="232" pos:column="79">bottom</name></name> <op:operator pos:line="232" pos:column="86">-</op:operator> <name><name pos:line="232" pos:column="88">rc</name><op:operator pos:line="232" pos:column="90">.</op:operator><name pos:line="232" pos:column="91">top</name></name><op:operator pos:line="232" pos:column="94">)</op:operator></expr></argument>, <argument><expr><name pos:line="232" pos:column="97">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="235" pos:column="1">void</name></type> <name><name pos:line="235" pos:column="6">DocumentMap</name><op:operator pos:line="235" pos:column="17">::</op:operator><name pos:line="235" pos:column="19">fold</name></name><parameter_list pos:line="235" pos:column="23">(<param><decl><type><name pos:line="235" pos:column="24">int</name></type> <name pos:line="235" pos:column="28">line</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="34">bool</name></type> <name pos:line="235" pos:column="39">foldOrNot</name></decl></param>)</parameter_list>
<block pos:line="236" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="237" pos:column="9">_pScintillaEditView</name><op:operator pos:line="237" pos:column="28">-&gt;</op:operator><name pos:line="237" pos:column="30">fold</name></name><argument_list pos:line="237" pos:column="34">(<argument><expr><name pos:line="237" pos:column="35">line</name></expr></argument>, <argument><expr><name pos:line="237" pos:column="41">foldOrNot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="240" pos:column="1">void</name></type> <name><name pos:line="240" pos:column="6">DocumentMap</name><op:operator pos:line="240" pos:column="17">::</op:operator><name pos:line="240" pos:column="19">foldAll</name></name><parameter_list pos:line="240" pos:column="26">(<param><decl><type><name pos:line="240" pos:column="27">bool</name></type> <name pos:line="240" pos:column="32">mode</name></decl></param>)</parameter_list>
<block pos:line="241" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="242" pos:column="9">_pScintillaEditView</name><op:operator pos:line="242" pos:column="28">-&gt;</op:operator><name pos:line="242" pos:column="30">foldAll</name></name><argument_list pos:line="242" pos:column="37">(<argument><expr><name pos:line="242" pos:column="38">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="245" pos:column="1">void</name></type> <name><name pos:line="245" pos:column="6">DocumentMap</name><op:operator pos:line="245" pos:column="17">::</op:operator><name pos:line="245" pos:column="19">scrollMap</name></name><parameter_list pos:line="245" pos:column="28">(<param><decl><type><name pos:line="245" pos:column="29">bool</name></type> <name pos:line="245" pos:column="34">direction</name></decl></param>, <param><decl><type><name pos:line="245" pos:column="45">moveMode</name></type> <name pos:line="245" pos:column="54">whichMode</name></decl></param>)</parameter_list>
<block pos:line="246" pos:column="1">{
	<comment type="line" pos:line="247" pos:column="9">// Visible line for the code view</comment>
	<decl_stmt><decl><type><name pos:line="248" pos:column="9">int</name></type> <name pos:line="248" pos:column="13">firstVisibleDisplayLine</name> <init pos:line="248" pos:column="37">= <expr><call><name pos:line="248" pos:column="39">(<type:modifier pos:line="248" pos:column="40">*</type:modifier><name pos:line="248" pos:column="41">_ppEditView</name>)<op:operator pos:line="248" pos:column="53">-&gt;</op:operator><name pos:line="248" pos:column="55">execute</name></name><argument_list pos:line="248" pos:column="62">(<argument><expr><name pos:line="248" pos:column="63">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="249" pos:column="9">int</name></type> <name pos:line="249" pos:column="13">nbLine</name> <init pos:line="249" pos:column="20">= <expr><call><name pos:line="249" pos:column="22">(<type:modifier pos:line="249" pos:column="23">*</type:modifier><name pos:line="249" pos:column="24">_ppEditView</name>)<op:operator pos:line="249" pos:column="36">-&gt;</op:operator><name pos:line="249" pos:column="38">execute</name></name><argument_list pos:line="249" pos:column="45">(<argument><expr><name pos:line="249" pos:column="46">SCI_LINESONSCREEN</name></expr></argument>, <argument><expr><name pos:line="249" pos:column="65">firstVisibleDisplayLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="250" pos:column="9">int</name></type> <name pos:line="250" pos:column="13">nbLine2go</name> <init pos:line="250" pos:column="23">= <expr><op:operator pos:line="250" pos:column="25">(</op:operator><name pos:line="250" pos:column="26">whichMode</name> <op:operator pos:line="250" pos:column="36">==</op:operator> <name pos:line="250" pos:column="39">perLine</name><op:operator pos:line="250" pos:column="46">?</op:operator><lit:literal type="number" pos:line="250" pos:column="47">1</lit:literal><op:operator pos:line="250" pos:column="48">:</op:operator><name pos:line="250" pos:column="49">nbLine</name><op:operator pos:line="250" pos:column="55">)</op:operator></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="251" pos:column="9">(<type:modifier pos:line="251" pos:column="10">*</type:modifier><name pos:line="251" pos:column="11">_ppEditView</name>)<op:operator pos:line="251" pos:column="23">-&gt;</op:operator><name pos:line="251" pos:column="25">execute</name></name><argument_list pos:line="251" pos:column="32">(<argument><expr><name pos:line="251" pos:column="33">SCI_LINESCROLL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="251" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="251" pos:column="52">(</op:operator><name pos:line="251" pos:column="53">direction</name> <op:operator pos:line="251" pos:column="63">==</op:operator> <name pos:line="251" pos:column="66">moveDown</name><op:operator pos:line="251" pos:column="74">)</op:operator><op:operator pos:line="251" pos:column="75">?</op:operator><name pos:line="251" pos:column="76">nbLine2go</name><op:operator pos:line="251" pos:column="85">:</op:operator><op:operator pos:line="251" pos:column="86">-</op:operator><name pos:line="251" pos:column="87">nbLine2go</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="253" pos:column="9">scrollMap</name><argument_list pos:line="253" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="257" pos:column="1">BOOL</name> <name pos:line="257" pos:column="6">CALLBACK</name></type> <name><name pos:line="257" pos:column="15">DocumentMap</name><op:operator pos:line="257" pos:column="26">::</op:operator><name pos:line="257" pos:column="28">run_dlgProc</name></name><parameter_list pos:line="257" pos:column="39">(<param><decl><type><name pos:line="257" pos:column="40">UINT</name></type> <name pos:line="257" pos:column="45">message</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="54">WPARAM</name></type> <name pos:line="257" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="69">LPARAM</name></type> <name pos:line="257" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="258" pos:column="1">{
    <switch pos:line="259" pos:column="5">switch <condition pos:line="259" pos:column="12">(<expr><name pos:line="259" pos:column="13">message</name></expr>)</condition>
    <block pos:line="260" pos:column="5">{
        <case pos:line="261" pos:column="9">case <expr><name pos:line="261" pos:column="14">WM_INITDIALOG</name></expr> :
        <block pos:line="262" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="263" pos:column="25">HWND</name></type> <name pos:line="263" pos:column="30">hwndScintilla</name> <init pos:line="263" pos:column="44">= <expr><op:operator pos:line="263" pos:column="46">(</op:operator><name pos:line="263" pos:column="47">HWND</name><op:operator pos:line="263" pos:column="51">)</op:operator><call><name><op:operator pos:line="263" pos:column="52">::</op:operator><name pos:line="263" pos:column="54">SendMessage</name></name><argument_list pos:line="263" pos:column="65">(<argument><expr><name pos:line="263" pos:column="66">_hParent</name></expr></argument>, <argument><expr><name pos:line="263" pos:column="76">NPPM_CREATESCINTILLAHANDLE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="263" pos:column="104">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="263" pos:column="107">(</op:operator><name pos:line="263" pos:column="108">LPARAM</name><op:operator pos:line="263" pos:column="114">)</op:operator><name pos:line="263" pos:column="115">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="264" pos:column="25">_pScintillaEditView</name> <op:operator pos:line="264" pos:column="45">=</op:operator> <op:operator pos:line="264" pos:column="47">(</op:operator><name pos:line="264" pos:column="48">ScintillaEditView</name> <op:operator pos:line="264" pos:column="66">*</op:operator><op:operator pos:line="264" pos:column="67">)</op:operator><call><name><op:operator pos:line="264" pos:column="68">::</op:operator><name pos:line="264" pos:column="70">SendMessage</name></name><argument_list pos:line="264" pos:column="81">(<argument><expr><name pos:line="264" pos:column="82">_hParent</name></expr></argument>, <argument><expr><name pos:line="264" pos:column="92">NPPM_INTERNAL_GETSCINTEDTVIEW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="264" pos:column="123">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="264" pos:column="126">(</op:operator><name pos:line="264" pos:column="127">LPARAM</name><op:operator pos:line="264" pos:column="133">)</op:operator><name pos:line="264" pos:column="134">hwndScintilla</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="265" pos:column="25">_pScintillaEditView</name><op:operator pos:line="265" pos:column="44">-&gt;</op:operator><name pos:line="265" pos:column="46">execute</name></name><argument_list pos:line="265" pos:column="53">(<argument><expr><name pos:line="265" pos:column="54">SCI_SETZOOM</name></expr></argument>, <argument><expr><op:operator pos:line="265" pos:column="67">(</op:operator><name pos:line="265" pos:column="68">WPARAM</name><op:operator pos:line="265" pos:column="74">)</op:operator><op:operator pos:line="265" pos:column="75">-</op:operator><lit:literal type="number" pos:line="265" pos:column="76">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="265" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="266" pos:column="25">_pScintillaEditView</name><op:operator pos:line="266" pos:column="44">-&gt;</op:operator><name pos:line="266" pos:column="46">execute</name></name><argument_list pos:line="266" pos:column="53">(<argument><expr><name pos:line="266" pos:column="54">SCI_SETVSCROLLBAR</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="73">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="266" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="267" pos:column="25">_pScintillaEditView</name><op:operator pos:line="267" pos:column="44">-&gt;</op:operator><name pos:line="267" pos:column="46">execute</name></name><argument_list pos:line="267" pos:column="53">(<argument><expr><name pos:line="267" pos:column="54">SCI_SETHSCROLLBAR</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="73">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="267" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="269" pos:column="25">_pScintillaEditView</name><op:operator pos:line="269" pos:column="44">-&gt;</op:operator><name pos:line="269" pos:column="46">showIndentGuideLine</name></name><argument_list pos:line="269" pos:column="65">(<argument><expr><lit:literal type="boolean" pos:line="269" pos:column="66">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="270" pos:column="25">_pScintillaEditView</name><op:operator pos:line="270" pos:column="44">-&gt;</op:operator><name pos:line="270" pos:column="46">display</name></name><argument_list pos:line="270" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="272" pos:column="25">reloadMap</name><argument_list pos:line="272" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="274" pos:column="25">_vzDlg</name><op:operator pos:line="274" pos:column="31">.</op:operator><name pos:line="274" pos:column="32">init</name></name><argument_list pos:line="274" pos:column="36">(<argument><expr><call><name><op:operator pos:line="274" pos:column="37">::</op:operator><name pos:line="274" pos:column="39">GetModuleHandle</name></name><argument_list pos:line="274" pos:column="54">(<argument><expr><name pos:line="274" pos:column="55">NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="274" pos:column="62">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="275" pos:column="25">_vzDlg</name><op:operator pos:line="275" pos:column="31">.</op:operator><name pos:line="275" pos:column="32">doDialog</name></name><argument_list pos:line="275" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="276" pos:column="25">(</op:operator><call><name><name pos:line="276" pos:column="26">NppParameters</name><op:operator pos:line="276" pos:column="39">::</op:operator><name pos:line="276" pos:column="41">getInstance</name></name><argument_list pos:line="276" pos:column="52">()</argument_list></call><op:operator pos:line="276" pos:column="54">)</op:operator><op:operator pos:line="276" pos:column="55">-&gt;</op:operator><call><name pos:line="276" pos:column="57">SetTransparent</name><argument_list pos:line="276" pos:column="71">(<argument><expr><call><name><name pos:line="276" pos:column="72">_vzDlg</name><op:operator pos:line="276" pos:column="78">.</op:operator><name pos:line="276" pos:column="79">getHSelf</name></name><argument_list pos:line="276" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="276" pos:column="91">50</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="276" pos:column="96">// 0 &lt;= transparancy &lt; 256</comment>

			<expr_stmt><expr><call><name pos:line="278" pos:column="25">setSyntaxLiliting</name><argument_list pos:line="278" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name><name pos:line="280" pos:column="25">_pScintillaEditView</name><op:operator pos:line="280" pos:column="44">-&gt;</op:operator><name pos:line="280" pos:column="46">showMargin</name></name><argument_list pos:line="280" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="280" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="280" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="281" pos:column="25">_pScintillaEditView</name><op:operator pos:line="281" pos:column="44">-&gt;</op:operator><name pos:line="281" pos:column="46">showMargin</name></name><argument_list pos:line="281" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="281" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="281" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="282" pos:column="25">_pScintillaEditView</name><op:operator pos:line="282" pos:column="44">-&gt;</op:operator><name pos:line="282" pos:column="46">showMargin</name></name><argument_list pos:line="282" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="282" pos:column="57">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="282" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="283" pos:column="25">_pScintillaEditView</name><op:operator pos:line="283" pos:column="44">-&gt;</op:operator><name pos:line="283" pos:column="46">showMargin</name></name><argument_list pos:line="283" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="283" pos:column="57">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="283" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
            <return pos:line="285" pos:column="13">return <expr><name pos:line="285" pos:column="20">TRUE</name></expr>;</return>
        }</block>

        </case><case pos:line="288" pos:column="9">case <expr><name pos:line="288" pos:column="14">WM_SIZE</name></expr>:
        <block pos:line="289" pos:column="9">{
			<if pos:line="290" pos:column="25">if <condition pos:line="290" pos:column="28">(<expr><name pos:line="290" pos:column="29">_pScintillaEditView</name></expr>)</condition><then pos:line="290" pos:column="49">
			<block pos:line="291" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="292" pos:column="33">int</name></type> <name pos:line="292" pos:column="37">width</name> <init pos:line="292" pos:column="43">= <expr><call><name pos:line="292" pos:column="45">LOWORD</name><argument_list pos:line="292" pos:column="51">(<argument><expr><name pos:line="292" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="293" pos:column="33">int</name></type> <name pos:line="293" pos:column="37">height</name> <init pos:line="293" pos:column="44">= <expr><call><name pos:line="293" pos:column="46">HIWORD</name><argument_list pos:line="293" pos:column="52">(<argument><expr><name pos:line="293" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<if pos:line="295" pos:column="33">if <condition pos:line="295" pos:column="36">(<expr><call><name><name pos:line="295" pos:column="37">_vzDlg</name><op:operator pos:line="295" pos:column="43">.</op:operator><name pos:line="295" pos:column="44">isCreated</name></name><argument_list pos:line="295" pos:column="53">()</argument_list></call></expr>)</condition><then pos:line="295" pos:column="56">
				<block pos:line="296" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="297" pos:column="41">POINT</name></type> <name pos:line="297" pos:column="47">pt</name> <init pos:line="297" pos:column="50">= <expr><block pos:line="297" pos:column="52">{<expr><lit:literal type="number" pos:line="297" pos:column="53">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="297" pos:column="55">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="298" pos:column="41">::</op:operator><name pos:line="298" pos:column="43">ClientToScreen</name></name><argument_list pos:line="298" pos:column="57">(<argument><expr><name pos:line="298" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="298" pos:column="66">&amp;</op:operator><name pos:line="298" pos:column="67">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="299" pos:column="41">if <condition pos:line="299" pos:column="44">(<expr><op:operator pos:line="299" pos:column="45">!</op:operator><call><name><name pos:line="299" pos:column="46">_pScintillaEditView</name><op:operator pos:line="299" pos:column="65">-&gt;</op:operator><name pos:line="299" pos:column="67">isWrap</name></name><argument_list pos:line="299" pos:column="73">()</argument_list></call></expr>)</condition><then pos:line="299" pos:column="76">
						<expr_stmt><expr><call><name><op:operator pos:line="300" pos:column="49">::</op:operator><name pos:line="300" pos:column="51">MoveWindow</name></name><argument_list pos:line="300" pos:column="61">(<argument><expr><call><name><name pos:line="300" pos:column="62">_pScintillaEditView</name><op:operator pos:line="300" pos:column="81">-&gt;</op:operator><name pos:line="300" pos:column="83">getHSelf</name></name><argument_list pos:line="300" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="300" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="300" pos:column="98">0</lit:literal></expr></argument>, <argument><expr><name pos:line="300" pos:column="101">width</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="108">height</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="116">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						
					<expr_stmt><expr><call><name><op:operator pos:line="302" pos:column="41">::</op:operator><name pos:line="302" pos:column="43">MoveWindow</name></name><argument_list pos:line="302" pos:column="53">(<argument><expr><call><name><name pos:line="302" pos:column="54">_vzDlg</name><op:operator pos:line="302" pos:column="60">.</op:operator><name pos:line="302" pos:column="61">getHSelf</name></name><argument_list pos:line="302" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="302" pos:column="73">pt</name><op:operator pos:line="302" pos:column="75">.</op:operator><name pos:line="302" pos:column="76">x</name></name></expr></argument>, <argument><expr><name><name pos:line="302" pos:column="79">pt</name><op:operator pos:line="302" pos:column="81">.</op:operator><name pos:line="302" pos:column="82">y</name></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="85">width</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="92">height</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="100">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
            <break pos:line="305" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="308" pos:column="17">case <expr><name pos:line="308" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="309" pos:column="17">{
			<switch pos:line="310" pos:column="25">switch <condition pos:line="310" pos:column="32">(<expr><op:operator pos:line="310" pos:column="33">(</op:operator><op:operator pos:line="310" pos:column="34">(</op:operator><name pos:line="310" pos:column="35">LPNMHDR</name><op:operator pos:line="310" pos:column="42">)</op:operator><name pos:line="310" pos:column="43">lParam</name><op:operator pos:line="310" pos:column="49">)</op:operator><op:operator pos:line="310" pos:column="50">-&gt;</op:operator><name pos:line="310" pos:column="52">code</name></expr>)</condition>
			<block pos:line="311" pos:column="25">{
				<case pos:line="312" pos:column="33">case <expr><name pos:line="312" pos:column="38">DMN_CLOSE</name></expr>:
				<block pos:line="313" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="314" pos:column="41">::</op:operator><name pos:line="314" pos:column="43">SendMessage</name></name><argument_list pos:line="314" pos:column="54">(<argument><expr><name pos:line="314" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="314" pos:column="65">NPPM_INTERNAL_SETDOCMAPCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="314" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><name pos:line="314" pos:column="98">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="315" pos:column="41">_vzDlg</name><op:operator pos:line="315" pos:column="47">.</op:operator><name pos:line="315" pos:column="48">display</name></name><argument_list pos:line="315" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="315" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="316" pos:column="41">return <expr><name pos:line="316" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="319" pos:column="33">case <expr><name pos:line="319" pos:column="38">DMN_SWITCHIN</name></expr>:
				<block pos:line="320" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="321" pos:column="41">_vzDlg</name><op:operator pos:line="321" pos:column="47">.</op:operator><name pos:line="321" pos:column="48">display</name></name><argument_list pos:line="321" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="322" pos:column="41">reloadMap</name><argument_list pos:line="322" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="323" pos:column="41">return <expr><name pos:line="323" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="326" pos:column="33">case <expr><name pos:line="326" pos:column="38">DMN_SWITCHOFF</name></expr>:
				<block pos:line="327" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="328" pos:column="41">::</op:operator><name pos:line="328" pos:column="43">SendMessage</name></name><argument_list pos:line="328" pos:column="54">(<argument><expr><name pos:line="328" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="328" pos:column="65">NPPM_INTERNAL_SETDOCMAPCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="328" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><name pos:line="328" pos:column="98">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="329" pos:column="41">_vzDlg</name><op:operator pos:line="329" pos:column="47">.</op:operator><name pos:line="329" pos:column="48">display</name></name><argument_list pos:line="329" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="329" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="330" pos:column="41">return <expr><name pos:line="330" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="333" pos:column="33">case <expr><name pos:line="333" pos:column="38">DMN_FLOATDROPPED</name></expr>:
				<block pos:line="334" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="335" pos:column="41">RECT</name></type> <name pos:line="335" pos:column="46">rc</name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="336" pos:column="41">getClientRect</name><argument_list pos:line="336" pos:column="54">(<argument><expr><name pos:line="336" pos:column="55">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="337" pos:column="41">int</name></type> <name pos:line="337" pos:column="45">width</name> <init pos:line="337" pos:column="51">= <expr><name><name pos:line="337" pos:column="53">rc</name><op:operator pos:line="337" pos:column="55">.</op:operator><name pos:line="337" pos:column="56">right</name></name> <op:operator pos:line="337" pos:column="62">-</op:operator> <name><name pos:line="337" pos:column="64">rc</name><op:operator pos:line="337" pos:column="66">.</op:operator><name pos:line="337" pos:column="67">left</name></name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="338" pos:column="41">int</name></type> <name pos:line="338" pos:column="45">height</name> <init pos:line="338" pos:column="52">= <expr><name><name pos:line="338" pos:column="54">rc</name><op:operator pos:line="338" pos:column="56">.</op:operator><name pos:line="338" pos:column="57">bottom</name></name> <op:operator pos:line="338" pos:column="64">-</op:operator> <name><name pos:line="338" pos:column="66">rc</name><op:operator pos:line="338" pos:column="68">.</op:operator><name pos:line="338" pos:column="69">top</name></name></expr></init></decl>;</decl_stmt>

					<comment type="line" pos:line="340" pos:column="41">//RECT scinrc;</comment>
					<comment type="line" pos:line="341" pos:column="41">//_pScintillaEditView-&gt;getClientRect(scinrc);</comment>
					<comment type="line" pos:line="342" pos:column="41">//int scinrcWidth = scinrc.right - scinrc.left;</comment>
					<comment type="line" pos:line="343" pos:column="41">//::MoveWindow(_pScintillaEditView-&gt;getHSelf(), 0, 0, scinrcWidth, height, TRUE);</comment>

					<decl_stmt><decl><type><name pos:line="345" pos:column="41">POINT</name></type> <name pos:line="345" pos:column="47">pt</name> <init pos:line="345" pos:column="50">= <expr><block pos:line="345" pos:column="52">{<expr><lit:literal type="number" pos:line="345" pos:column="53">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="345" pos:column="55">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="346" pos:column="41">::</op:operator><name pos:line="346" pos:column="43">ClientToScreen</name></name><argument_list pos:line="346" pos:column="57">(<argument><expr><name pos:line="346" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="346" pos:column="66">&amp;</op:operator><name pos:line="346" pos:column="67">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="347" pos:column="41">::</op:operator><name pos:line="347" pos:column="43">MoveWindow</name></name><argument_list pos:line="347" pos:column="53">(<argument><expr><call><name><name pos:line="347" pos:column="54">_vzDlg</name><op:operator pos:line="347" pos:column="60">.</op:operator><name pos:line="347" pos:column="61">getHSelf</name></name><argument_list pos:line="347" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="347" pos:column="73">pt</name><op:operator pos:line="347" pos:column="75">.</op:operator><name pos:line="347" pos:column="76">x</name></name></expr></argument>, <argument><expr><name><name pos:line="347" pos:column="79">pt</name><op:operator pos:line="347" pos:column="81">.</op:operator><name pos:line="347" pos:column="82">y</name></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="85">width</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="92">height</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="100">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="348" pos:column="41">scrollMap</name><argument_list pos:line="348" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="349" pos:column="41">return <expr><name pos:line="349" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="352" pos:column="33">case <expr><name pos:line="352" pos:column="38">NM_DBLCLK</name></expr>:
				<block pos:line="353" pos:column="33">{
					<return pos:line="354" pos:column="41">return <expr><name pos:line="354" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="357" pos:column="33">default:
					<break pos:line="358" pos:column="41">break;</break>
				
			</default>}</block></switch>
	
		}</block>
		<return pos:line="363" pos:column="17">return <expr><name pos:line="363" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="365" pos:column="17">case <expr><name pos:line="365" pos:column="22">DOCUMENTMAP_SCROLL</name></expr>:
		<block pos:line="366" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="367" pos:column="25">bool</name></type> <name pos:line="367" pos:column="30">dir</name> <init pos:line="367" pos:column="34">= <expr><op:operator pos:line="367" pos:column="36">(</op:operator><name pos:line="367" pos:column="37">wParam</name> <op:operator pos:line="367" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="367" pos:column="47">0</lit:literal><op:operator pos:line="367" pos:column="48">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="368" pos:column="25">moveMode</name></type> <name pos:line="368" pos:column="34">mode</name> <init pos:line="368" pos:column="39">= <expr><op:operator pos:line="368" pos:column="41">(</op:operator><name pos:line="368" pos:column="42">lParam</name> <op:operator pos:line="368" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="368" pos:column="52">0</lit:literal><op:operator pos:line="368" pos:column="53">)</op:operator><op:operator pos:line="368" pos:column="54">?</op:operator><name pos:line="368" pos:column="55">perLine</name><op:operator pos:line="368" pos:column="62">:</op:operator><name pos:line="368" pos:column="63">perPage</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="369" pos:column="25">scrollMap</name><argument_list pos:line="369" pos:column="34">(<argument><expr><name pos:line="369" pos:column="35">dir</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="40">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="371" pos:column="17">return <expr><name pos:line="371" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="373" pos:column="17">case <expr><name pos:line="373" pos:column="22">DOCUMENTMAP_MOUSECLICKED</name></expr>:
		<block pos:line="374" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="375" pos:column="25">int</name></type> <name pos:line="375" pos:column="29">newPosY</name> <init pos:line="375" pos:column="37">= <expr><call><name pos:line="375" pos:column="39">HIWORD</name><argument_list pos:line="375" pos:column="45">(<argument><expr><name pos:line="375" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="376" pos:column="25">int</name></type> <name pos:line="376" pos:column="29">currentCenterPosY</name> <init pos:line="376" pos:column="47">= <expr><call><name><name pos:line="376" pos:column="49">_vzDlg</name><op:operator pos:line="376" pos:column="55">.</op:operator><name pos:line="376" pos:column="56">getCurrentCenterPosY</name></name><argument_list pos:line="376" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="377" pos:column="25">int</name></type> <name pos:line="377" pos:column="29">pixelPerLine</name> <init pos:line="377" pos:column="42">= <expr><call><name><name pos:line="377" pos:column="44">_pScintillaEditView</name><op:operator pos:line="377" pos:column="63">-&gt;</op:operator><name pos:line="377" pos:column="65">execute</name></name><argument_list pos:line="377" pos:column="72">(<argument><expr><name pos:line="377" pos:column="73">SCI_TEXTHEIGHT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="377" pos:column="89">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			<decl_stmt><decl><type><name pos:line="378" pos:column="25">int</name></type> <name pos:line="378" pos:column="29">jumpDistance</name> <init pos:line="378" pos:column="42">= <expr><name pos:line="378" pos:column="44">newPosY</name> <op:operator pos:line="378" pos:column="52">-</op:operator> <name pos:line="378" pos:column="54">currentCenterPosY</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="379" pos:column="25">int</name></type> <name pos:line="379" pos:column="29">nbLine2jump</name> <init pos:line="379" pos:column="41">= <expr><name pos:line="379" pos:column="43">jumpDistance</name><op:operator pos:line="379" pos:column="55">/</op:operator><name pos:line="379" pos:column="56">pixelPerLine</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="380" pos:column="25">(<type:modifier pos:line="380" pos:column="26">*</type:modifier><name pos:line="380" pos:column="27">_ppEditView</name>)<op:operator pos:line="380" pos:column="39">-&gt;</op:operator><name pos:line="380" pos:column="41">execute</name></name><argument_list pos:line="380" pos:column="48">(<argument><expr><name pos:line="380" pos:column="49">SCI_LINESCROLL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="380" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><name pos:line="380" pos:column="68">nbLine2jump</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="382" pos:column="25">scrollMap</name><argument_list pos:line="382" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="384" pos:column="17">return <expr><name pos:line="384" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="386" pos:column="17">case <expr><name pos:line="386" pos:column="22">DOCUMENTMAP_MOUSEWHEEL</name></expr>:
		<block pos:line="387" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="388" pos:column="25">(<type:modifier pos:line="388" pos:column="26">*</type:modifier><name pos:line="388" pos:column="27">_ppEditView</name>)<op:operator pos:line="388" pos:column="39">-&gt;</op:operator><name pos:line="388" pos:column="41">mouseWheel</name></name><argument_list pos:line="388" pos:column="51">(<argument><expr><name pos:line="388" pos:column="52">wParam</name></expr></argument>, <argument><expr><name pos:line="388" pos:column="60">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="390" pos:column="17">return <expr><name pos:line="390" pos:column="24">TRUE</name></expr>;</return>



        </case><default pos:line="394" pos:column="9">default :
            <return pos:line="395" pos:column="13">return <expr><call><name><name pos:line="395" pos:column="20">DockingDlgInterface</name><op:operator pos:line="395" pos:column="39">::</op:operator><name pos:line="395" pos:column="41">run_dlgProc</name></name><argument_list pos:line="395" pos:column="52">(<argument><expr><name pos:line="395" pos:column="53">message</name></expr></argument>, <argument><expr><name pos:line="395" pos:column="62">wParam</name></expr></argument>, <argument><expr><name pos:line="395" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
    </default>}</block></switch>
	<return pos:line="397" pos:column="9">return <expr><call><name><name pos:line="397" pos:column="16">DockingDlgInterface</name><op:operator pos:line="397" pos:column="35">::</op:operator><name pos:line="397" pos:column="37">run_dlgProc</name></name><argument_list pos:line="397" pos:column="48">(<argument><expr><name pos:line="397" pos:column="49">message</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="58">wParam</name></expr></argument>, <argument><expr><name pos:line="397" pos:column="66">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="400" pos:column="1">void</name></type> <name><name pos:line="400" pos:column="6">ViewZoneDlg</name><op:operator pos:line="400" pos:column="17">::</op:operator><name pos:line="400" pos:column="19">drawPreviewZone</name></name><parameter_list pos:line="400" pos:column="34">(<param><decl><type><name pos:line="400" pos:column="35">DRAWITEMSTRUCT</name> <type:modifier pos:line="400" pos:column="50">*</type:modifier></type><name pos:line="400" pos:column="51">pdis</name></decl></param>)</parameter_list>
<block pos:line="401" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="402" pos:column="9">RECT</name></type> <name pos:line="402" pos:column="14">rc</name> <init pos:line="402" pos:column="17">= <expr><name><name pos:line="402" pos:column="19">pdis</name><op:operator pos:line="402" pos:column="23">-&gt;</op:operator><name pos:line="402" pos:column="25">rcItem</name></name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><specifier pos:line="404" pos:column="9">const</specifier> <name pos:line="404" pos:column="15">COLORREF</name></type> <name pos:line="404" pos:column="24">orange</name> <init pos:line="404" pos:column="31">= <expr><call><name pos:line="404" pos:column="33">RGB</name><argument_list pos:line="404" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="404" pos:column="37">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="404" pos:column="43">0x80</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="404" pos:column="49">0x00</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="405" pos:column="9">const</specifier> <name pos:line="405" pos:column="15">COLORREF</name></type> <name pos:line="405" pos:column="24">white</name> <init pos:line="405" pos:column="30">= <expr><call><name pos:line="405" pos:column="32">RGB</name><argument_list pos:line="405" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="405" pos:column="36">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="42">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="48">0xFF</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="406" pos:column="9">HBRUSH</name></type> <name pos:line="406" pos:column="16">hbrushFg</name> <init pos:line="406" pos:column="25">= <expr><call><name pos:line="406" pos:column="27">CreateSolidBrush</name><argument_list pos:line="406" pos:column="43">(<argument><expr><name pos:line="406" pos:column="44">orange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="407" pos:column="9">HBRUSH</name></type> <name pos:line="407" pos:column="16">hbrushBg</name> <init pos:line="407" pos:column="25">= <expr><call><name pos:line="407" pos:column="27">CreateSolidBrush</name><argument_list pos:line="407" pos:column="43">(<argument><expr><name pos:line="407" pos:column="44">white</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>					
	<expr_stmt><expr><call><name pos:line="408" pos:column="9">FillRect</name><argument_list pos:line="408" pos:column="17">(<argument><expr><name><name pos:line="408" pos:column="18">pdis</name><op:operator pos:line="408" pos:column="22">-&gt;</op:operator><name pos:line="408" pos:column="24">hDC</name></name></expr></argument>, <argument><expr><op:operator pos:line="408" pos:column="29">&amp;</op:operator><name pos:line="408" pos:column="30">rc</name></expr></argument>, <argument><expr><name pos:line="408" pos:column="34">hbrushBg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="410" pos:column="9">rc</name><op:operator pos:line="410" pos:column="11">.</op:operator><name pos:line="410" pos:column="12">top</name></name> <op:operator pos:line="410" pos:column="16">=</op:operator> <name pos:line="410" pos:column="18">_higherY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="411" pos:column="9">rc</name><op:operator pos:line="411" pos:column="11">.</op:operator><name pos:line="411" pos:column="12">bottom</name></name> <op:operator pos:line="411" pos:column="19">=</op:operator> <name pos:line="411" pos:column="21">_lowerY</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="412" pos:column="9">FillRect</name><argument_list pos:line="412" pos:column="17">(<argument><expr><name><name pos:line="412" pos:column="18">pdis</name><op:operator pos:line="412" pos:column="22">-&gt;</op:operator><name pos:line="412" pos:column="24">hDC</name></name></expr></argument>, <argument><expr><op:operator pos:line="412" pos:column="29">&amp;</op:operator><name pos:line="412" pos:column="30">rc</name></expr></argument>, <argument><expr><name pos:line="412" pos:column="34">hbrushFg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="414" pos:column="9">DeleteObject</name><argument_list pos:line="414" pos:column="21">(<argument><expr><name pos:line="414" pos:column="22">hbrushFg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="415" pos:column="9">DeleteObject</name><argument_list pos:line="415" pos:column="21">(<argument><expr><name pos:line="415" pos:column="22">hbrushBg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="418" pos:column="1">void</name></type> <name><name pos:line="418" pos:column="6">ViewZoneDlg</name><op:operator pos:line="418" pos:column="17">::</op:operator><name pos:line="418" pos:column="19">doDialog</name></name><parameter_list pos:line="418" pos:column="27">()</parameter_list>
<block pos:line="419" pos:column="1">{
	<if pos:line="420" pos:column="9">if <condition pos:line="420" pos:column="12">(<expr><op:operator pos:line="420" pos:column="13">!</op:operator><call><name pos:line="420" pos:column="14">isCreated</name><argument_list pos:line="420" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="420" pos:column="26">
		<expr_stmt><expr><call><name pos:line="421" pos:column="17">create</name><argument_list pos:line="421" pos:column="23">(<argument><expr><name pos:line="421" pos:column="24">IDD_VIEWZONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="422" pos:column="9">display</name><argument_list pos:line="422" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
}</block></function><empty_stmt pos:line="423" pos:column="2">;</empty_stmt>

<function><type><name pos:line="425" pos:column="1">BOOL</name> <name pos:line="425" pos:column="6">CALLBACK</name></type> <name><name pos:line="425" pos:column="15">ViewZoneDlg</name><op:operator pos:line="425" pos:column="26">::</op:operator><name pos:line="425" pos:column="28">run_dlgProc</name></name><parameter_list pos:line="425" pos:column="39">(<param><decl><type><name pos:line="425" pos:column="40">UINT</name></type> <name pos:line="425" pos:column="45">message</name></decl></param>, <param><decl><type><name pos:line="425" pos:column="54">WPARAM</name></type> <name pos:line="425" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="425" pos:column="69">LPARAM</name></type> <name pos:line="425" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="426" pos:column="1">{
	<switch pos:line="427" pos:column="9">switch <condition pos:line="427" pos:column="16">(<expr><name pos:line="427" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="428" pos:column="9">{
        <case pos:line="429" pos:column="9">case <expr><name pos:line="429" pos:column="14">WM_INITDIALOG</name></expr> :
		<block pos:line="430" pos:column="17">{
			<expr_stmt><expr><name pos:line="431" pos:column="25">_viewZoneCanvas</name> <op:operator pos:line="431" pos:column="41">=</op:operator> <call><name><op:operator pos:line="431" pos:column="43">::</op:operator><name pos:line="431" pos:column="45">GetDlgItem</name></name><argument_list pos:line="431" pos:column="55">(<argument><expr><name pos:line="431" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><name pos:line="431" pos:column="64">IDC_VIEWZONECANVAS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="432" pos:column="25">::</op:operator><name pos:line="432" pos:column="27">SetWindowLongPtrW</name></name><argument_list pos:line="432" pos:column="44">(<argument><expr><name pos:line="432" pos:column="45">_viewZoneCanvas</name></expr></argument>, <argument><expr><name pos:line="432" pos:column="62">GWL_USERDATA</name></expr></argument>, <argument><expr><call><name><name pos:line="432" pos:column="76">reinterpret_cast</name><argument_list pos:line="432" pos:column="92">&lt;<argument><expr><name pos:line="432" pos:column="93">LONG</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="432" pos:column="98">(<argument><expr><name pos:line="432" pos:column="99">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="433" pos:column="25">_canvasDefaultProc</name> <op:operator pos:line="433" pos:column="44">=</op:operator> <call><name><name pos:line="433" pos:column="46">reinterpret_cast</name><argument_list pos:line="433" pos:column="62">&lt;<argument><expr><name pos:line="433" pos:column="63">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="433" pos:column="71">(<argument><expr><call><name><op:operator pos:line="433" pos:column="72">::</op:operator><name pos:line="433" pos:column="74">SetWindowLongPtr</name></name><argument_list pos:line="433" pos:column="90">(<argument><expr><name pos:line="433" pos:column="91">_viewZoneCanvas</name></expr></argument>, <argument><expr><name pos:line="433" pos:column="108">GWL_WNDPROC</name></expr></argument>, <argument><expr><call><name><name pos:line="433" pos:column="121">reinterpret_cast</name><argument_list pos:line="433" pos:column="137">&lt;<argument><expr><name pos:line="433" pos:column="138">LONG</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="433" pos:column="143">(<argument><expr><name pos:line="433" pos:column="144">canvasStaticProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="434" pos:column="25">return <expr><name pos:line="434" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="437" pos:column="17">case <expr><name pos:line="437" pos:column="22">WM_LBUTTONDOWN</name></expr>:
		<block pos:line="438" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="439" pos:column="25">::</op:operator><name pos:line="439" pos:column="27">SendMessage</name></name><argument_list pos:line="439" pos:column="38">(<argument><expr><name pos:line="439" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="439" pos:column="49">DOCUMENTMAP_MOUSECLICKED</name></expr></argument>, <argument><expr><name pos:line="439" pos:column="75">wParam</name></expr></argument>, <argument><expr><name pos:line="439" pos:column="83">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="440" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="443" pos:column="17">case <expr><name pos:line="443" pos:column="22">WM_MOUSEMOVE</name></expr>:
		<block pos:line="444" pos:column="17">{
			<if pos:line="445" pos:column="25">if <condition pos:line="445" pos:column="28">(<expr><name pos:line="445" pos:column="29">wParam</name> <op:operator pos:line="445" pos:column="36">&amp;</op:operator> <name pos:line="445" pos:column="38">MK_LBUTTON</name></expr>)</condition><then pos:line="445" pos:column="49">
				<expr_stmt><expr><call><name><op:operator pos:line="446" pos:column="33">::</op:operator><name pos:line="446" pos:column="35">SendMessage</name></name><argument_list pos:line="446" pos:column="46">(<argument><expr><name pos:line="446" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="57">DOCUMENTMAP_MOUSECLICKED</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="446" pos:column="91">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="447" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="450" pos:column="17">case <expr><name pos:line="450" pos:column="22">WM_DRAWITEM</name></expr> :
		<block pos:line="451" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="452" pos:column="25">drawPreviewZone</name><argument_list pos:line="452" pos:column="40">(<argument><expr><op:operator pos:line="452" pos:column="41">(</op:operator><name pos:line="452" pos:column="42">DRAWITEMSTRUCT</name> <op:operator pos:line="452" pos:column="57">*</op:operator><op:operator pos:line="452" pos:column="58">)</op:operator><name pos:line="452" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="453" pos:column="25">return <expr><name pos:line="453" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="456" pos:column="17">case <expr><name pos:line="456" pos:column="22">WM_SIZE</name></expr>:
        <block pos:line="457" pos:column="9">{
			<if pos:line="458" pos:column="25">if <condition pos:line="458" pos:column="28">(<expr><name pos:line="458" pos:column="29">_viewZoneCanvas</name></expr>)</condition><then pos:line="458" pos:column="45">
			<block pos:line="459" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="460" pos:column="33">int</name></type> <name pos:line="460" pos:column="37">width</name> <init pos:line="460" pos:column="43">= <expr><call><name pos:line="460" pos:column="45">LOWORD</name><argument_list pos:line="460" pos:column="51">(<argument><expr><name pos:line="460" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="461" pos:column="33">int</name></type> <name pos:line="461" pos:column="37">height</name> <init pos:line="461" pos:column="44">= <expr><call><name pos:line="461" pos:column="46">HIWORD</name><argument_list pos:line="461" pos:column="52">(<argument><expr><name pos:line="461" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="462" pos:column="33">::</op:operator><name pos:line="462" pos:column="35">MoveWindow</name></name><argument_list pos:line="462" pos:column="45">(<argument><expr><name pos:line="462" pos:column="46">_viewZoneCanvas</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="462" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="462" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><name pos:line="462" pos:column="69">width</name></expr></argument> , <argument><expr><name pos:line="462" pos:column="77">height</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="85">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
            <break pos:line="464" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="467" pos:column="17">case <expr><name pos:line="467" pos:column="22">WM_MOUSEWHEEL</name></expr> :
		<block pos:line="468" pos:column="17">{
			<comment type="line" pos:line="469" pos:column="25">//Have to perform the scroll first, because the first/last line do not get updated untill after the scroll has been parsed</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="470" pos:column="25">::</op:operator><name pos:line="470" pos:column="27">SendMessage</name></name><argument_list pos:line="470" pos:column="38">(<argument><expr><name pos:line="470" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="470" pos:column="49">DOCUMENTMAP_MOUSEWHEEL</name></expr></argument>, <argument><expr><name pos:line="470" pos:column="73">wParam</name></expr></argument>, <argument><expr><name pos:line="470" pos:column="81">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="472" pos:column="17">return <expr><name pos:line="472" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="474" pos:column="17">case <expr><name pos:line="474" pos:column="22">WM_DESTROY</name></expr> :
		<block pos:line="475" pos:column="17">{
			<return pos:line="476" pos:column="25">return <expr><name pos:line="476" pos:column="32">TRUE</name></expr>;</return>
		}</block>
	</case>}</block></switch>
	<return pos:line="479" pos:column="9">return <expr><name pos:line="479" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="482" pos:column="1">BOOL</name> <name pos:line="482" pos:column="6">CALLBACK</name></type> <name><name pos:line="482" pos:column="15">ViewZoneDlg</name><op:operator pos:line="482" pos:column="26">::</op:operator><name pos:line="482" pos:column="28">canvasStaticProc</name></name><parameter_list pos:line="482" pos:column="44">(<param><decl><type><name pos:line="482" pos:column="45">HWND</name></type> <name pos:line="482" pos:column="50">hwnd</name></decl></param>, <param><decl><type><name pos:line="482" pos:column="56">UINT</name></type> <name pos:line="482" pos:column="61">message</name></decl></param>, <param><decl><type><name pos:line="482" pos:column="70">WPARAM</name></type> <name pos:line="482" pos:column="77">wParam</name></decl></param>, <param><decl><type><name pos:line="482" pos:column="85">LPARAM</name></type> <name pos:line="482" pos:column="92">lParam</name></decl></param>)</parameter_list> 
<block pos:line="483" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="484" pos:column="9">ViewZoneDlg</name> <type:modifier pos:line="484" pos:column="21">*</type:modifier></type><name pos:line="484" pos:column="22">pViewZoneDlg</name> <init pos:line="484" pos:column="35">= <expr><call><name><name pos:line="484" pos:column="37">reinterpret_cast</name><argument_list pos:line="484" pos:column="53">&lt;<argument><expr><name pos:line="484" pos:column="54">ViewZoneDlg</name> <op:operator pos:line="484" pos:column="66">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="484" pos:column="68">(<argument><expr><call><name><op:operator pos:line="484" pos:column="69">::</op:operator><name pos:line="484" pos:column="71">GetWindowLongPtr</name></name><argument_list pos:line="484" pos:column="87">(<argument><expr><name pos:line="484" pos:column="88">hwnd</name></expr></argument>, <argument><expr><name pos:line="484" pos:column="94">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="485" pos:column="9">if <condition pos:line="485" pos:column="12">(<expr><op:operator pos:line="485" pos:column="13">!</op:operator><name pos:line="485" pos:column="14">pViewZoneDlg</name></expr>)</condition><then pos:line="485" pos:column="27">
		<return pos:line="486" pos:column="17">return <expr><name pos:line="486" pos:column="24">FALSE</name></expr>;</return></then></if>
	<return pos:line="487" pos:column="9">return <expr><call><name><name pos:line="487" pos:column="16">pViewZoneDlg</name><op:operator pos:line="487" pos:column="28">-&gt;</op:operator><name pos:line="487" pos:column="30">canvas_runProc</name></name><argument_list pos:line="487" pos:column="44">(<argument><expr><name pos:line="487" pos:column="45">hwnd</name></expr></argument>, <argument><expr><name pos:line="487" pos:column="51">message</name></expr></argument>, <argument><expr><name pos:line="487" pos:column="60">wParam</name></expr></argument>, <argument><expr><name pos:line="487" pos:column="68">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="490" pos:column="1">BOOL</name> <name pos:line="490" pos:column="6">CALLBACK</name></type> <name><name pos:line="490" pos:column="15">ViewZoneDlg</name><op:operator pos:line="490" pos:column="26">::</op:operator><name pos:line="490" pos:column="28">canvas_runProc</name></name><parameter_list pos:line="490" pos:column="42">(<param><decl><type><name pos:line="490" pos:column="43">HWND</name></type> <name pos:line="490" pos:column="48">hwnd</name></decl></param>, <param><decl><type><name pos:line="490" pos:column="54">UINT</name></type> <name pos:line="490" pos:column="59">message</name></decl></param>, <param><decl><type><name pos:line="490" pos:column="68">WPARAM</name></type> <name pos:line="490" pos:column="75">wParam</name></decl></param>, <param><decl><type><name pos:line="490" pos:column="83">LPARAM</name></type> <name pos:line="490" pos:column="90">lParam</name></decl></param>)</parameter_list>
<block pos:line="491" pos:column="1">{
	<switch pos:line="492" pos:column="9">switch <condition pos:line="492" pos:column="16">(<expr><name pos:line="492" pos:column="17">message</name></expr>)</condition>
    <block pos:line="493" pos:column="5">{
		<case pos:line="494" pos:column="17">case <expr><name pos:line="494" pos:column="22">WM_DESTROY</name></expr>:
		<block pos:line="495" pos:column="17">{
			<comment type="line" pos:line="496" pos:column="25">//::MessageBoxA(NULL,"Destroy","",MB_OK);</comment>
		}</block>
		<return pos:line="498" pos:column="17">return <expr><name pos:line="498" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="500" pos:column="17">case <expr><name pos:line="500" pos:column="22">WM_KEYDOWN</name></expr>:
			<if pos:line="501" pos:column="25">if <condition pos:line="501" pos:column="28">(<expr><name pos:line="501" pos:column="29">wParam</name> <op:operator pos:line="501" pos:column="36">==</op:operator> <name pos:line="501" pos:column="39">VK_UP</name></expr>)</condition><then pos:line="501" pos:column="45">
			<block pos:line="502" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="503" pos:column="33">::</op:operator><name pos:line="503" pos:column="35">SendMessage</name></name><argument_list pos:line="503" pos:column="46">(<argument><expr><name pos:line="503" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="503" pos:column="57">DOCUMENTMAP_SCROLL</name></expr></argument>, <argument><expr><op:operator pos:line="503" pos:column="77">(</op:operator><name pos:line="503" pos:column="78">WPARAM</name><op:operator pos:line="503" pos:column="84">)</op:operator><name pos:line="503" pos:column="85">moveUp</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="503" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="505" pos:column="25">if <condition pos:line="505" pos:column="28">(<expr><name pos:line="505" pos:column="29">wParam</name> <op:operator pos:line="505" pos:column="36">==</op:operator> <name pos:line="505" pos:column="39">VK_DOWN</name></expr>)</condition><then pos:line="505" pos:column="47">
			<block pos:line="506" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="507" pos:column="33">::</op:operator><name pos:line="507" pos:column="35">SendMessage</name></name><argument_list pos:line="507" pos:column="46">(<argument><expr><name pos:line="507" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="507" pos:column="57">DOCUMENTMAP_SCROLL</name></expr></argument>, <argument><expr><op:operator pos:line="507" pos:column="77">(</op:operator><name pos:line="507" pos:column="78">WPARAM</name><op:operator pos:line="507" pos:column="84">)</op:operator><name pos:line="507" pos:column="85">moveDown</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="507" pos:column="95">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="509" pos:column="25">if <condition pos:line="509" pos:column="28">(<expr><name pos:line="509" pos:column="29">wParam</name> <op:operator pos:line="509" pos:column="36">==</op:operator> <name pos:line="509" pos:column="39">VK_PRIOR</name></expr>)</condition><then pos:line="509" pos:column="48">
			<block pos:line="510" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="511" pos:column="33">::</op:operator><name pos:line="511" pos:column="35">SendMessage</name></name><argument_list pos:line="511" pos:column="46">(<argument><expr><name pos:line="511" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="511" pos:column="57">DOCUMENTMAP_SCROLL</name></expr></argument>, <argument><expr><op:operator pos:line="511" pos:column="77">(</op:operator><name pos:line="511" pos:column="78">WPARAM</name><op:operator pos:line="511" pos:column="84">)</op:operator><name pos:line="511" pos:column="85">moveUp</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="511" pos:column="93">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="513" pos:column="25">if <condition pos:line="513" pos:column="28">(<expr><name pos:line="513" pos:column="29">wParam</name> <op:operator pos:line="513" pos:column="36">==</op:operator> <name pos:line="513" pos:column="39">VK_NEXT</name></expr>)</condition><then pos:line="513" pos:column="47">
			<block pos:line="514" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="515" pos:column="33">::</op:operator><name pos:line="515" pos:column="35">SendMessage</name></name><argument_list pos:line="515" pos:column="46">(<argument><expr><name pos:line="515" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="515" pos:column="57">DOCUMENTMAP_SCROLL</name></expr></argument>, <argument><expr><op:operator pos:line="515" pos:column="77">(</op:operator><name pos:line="515" pos:column="78">WPARAM</name><op:operator pos:line="515" pos:column="84">)</op:operator><name pos:line="515" pos:column="85">moveDown</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="515" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="517" pos:column="25">break;</break>

        </case><case pos:line="519" pos:column="9">case <expr><name pos:line="519" pos:column="14">WM_SIZE</name></expr>:
        <block pos:line="520" pos:column="9">{
            <break pos:line="521" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="524" pos:column="17">case <expr><name pos:line="524" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="525" pos:column="17">{
		}</block>
		<return pos:line="527" pos:column="17">return <expr><name pos:line="527" pos:column="24">TRUE</name></expr>;</return>

        </case><default pos:line="529" pos:column="9">default :
            <return pos:line="530" pos:column="13">return <expr><call><name pos:line="530" pos:column="20">_canvasDefaultProc</name><argument_list pos:line="530" pos:column="38">(<argument><expr><name pos:line="530" pos:column="39">hwnd</name></expr></argument>, <argument><expr><name pos:line="530" pos:column="45">message</name></expr></argument>, <argument><expr><name pos:line="530" pos:column="54">wParam</name></expr></argument>, <argument><expr><name pos:line="530" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
    </default>}</block></switch>
	<return pos:line="532" pos:column="9">return <expr><call><name pos:line="532" pos:column="16">_canvasDefaultProc</name><argument_list pos:line="532" pos:column="34">(<argument><expr><name pos:line="532" pos:column="35">hwnd</name></expr></argument>, <argument><expr><name pos:line="532" pos:column="41">message</name></expr></argument>, <argument><expr><name pos:line="532" pos:column="50">wParam</name></expr></argument>, <argument><expr><name pos:line="532" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function></unit>
