<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\Grid\BabyGridWrapper.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">BABYGRIDWRAPPER</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">BABYGRIDWRAPPER</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">BABYGRID_H</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"babygrid.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif><comment type="line" pos:line="34" pos:column="7">// BABYGRID_H</comment>

<class pos:line="36" pos:column="1">class <name pos:line="36" pos:column="7">BabyGridWrapper</name> <super pos:line="36" pos:column="23">: <specifier pos:line="36" pos:column="25">public</specifier> <name pos:line="36" pos:column="32">Window</name></super>
<block pos:line="37" pos:column="1">{<private type="default" pos:line="37" pos:column="2">
</private><public pos:line="38" pos:column="1">public :
	<constructor><name pos:line="39" pos:column="9">BabyGridWrapper</name><parameter_list pos:line="39" pos:column="24">()</parameter_list> <member_list pos:line="39" pos:column="27">: <call><name pos:line="39" pos:column="29">Window</name><argument_list pos:line="39" pos:column="35">()</argument_list></call></member_list><block pos:line="39" pos:column="37">{}</block></constructor><empty_stmt pos:line="39" pos:column="39">;</empty_stmt>
    <destructor><name pos:line="40" pos:column="5">~<name pos:line="40" pos:column="6">BabyGridWrapper</name></name><parameter_list pos:line="40" pos:column="21">()</parameter_list><block pos:line="40" pos:column="23">{}</block></destructor><empty_stmt pos:line="40" pos:column="25">;</empty_stmt>
	<function_decl><type><specifier pos:line="41" pos:column="9">virtual</specifier> <name pos:line="41" pos:column="17">void</name></type> <name pos:line="41" pos:column="22">init</name><parameter_list pos:line="41" pos:column="26">(<param><decl><type><name pos:line="41" pos:column="27">HINSTANCE</name></type> <name pos:line="41" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="44">HWND</name></type> <name pos:line="41" pos:column="49">parent</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="57">int</name></type> <name pos:line="41" pos:column="61">id</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><specifier pos:line="42" pos:column="9">virtual</specifier> <name pos:line="42" pos:column="17">void</name></type> <name pos:line="42" pos:column="22">destroy</name><parameter_list pos:line="42" pos:column="29">()</parameter_list> <block pos:line="42" pos:column="32">{
		<expr_stmt><expr><call><name><op:operator pos:line="43" pos:column="17">::</op:operator><name pos:line="43" pos:column="19">DestroyWindow</name></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="44" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="45" pos:column="9">void</name></type> <name pos:line="45" pos:column="14">setLineColNumber</name><parameter_list pos:line="45" pos:column="30">(<param><decl><type><name pos:line="45" pos:column="31">size_t</name></type> <name pos:line="45" pos:column="38">nbRow</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="45">size_t</name></type> <name pos:line="45" pos:column="52">nbCol</name></decl></param>)</parameter_list> <block pos:line="45" pos:column="59">{
		<expr_stmt><expr><call><name><op:operator pos:line="46" pos:column="17">::</op:operator><name pos:line="46" pos:column="19">SendMessage</name></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">BGM_SETGRIDDIM</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">nbRow</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">nbCol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="47" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="49" pos:column="9">void</name></type> <name pos:line="49" pos:column="14">setCursorColour</name><parameter_list pos:line="49" pos:column="29">(<param><decl><type><name pos:line="49" pos:column="30">COLORREF</name></type> <name pos:line="49" pos:column="39">coulour</name></decl></param>)</parameter_list> <block pos:line="49" pos:column="48">{
		<expr_stmt><expr><call><name><op:operator pos:line="50" pos:column="17">::</op:operator><name pos:line="50" pos:column="19">SendMessage</name></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">BGM_SETCURSORCOLOR</name></expr></argument>, <argument><expr><op:operator pos:line="50" pos:column="59">(</op:operator><name pos:line="50" pos:column="60">UINT</name><op:operator pos:line="50" pos:column="64">)</op:operator><name pos:line="50" pos:column="65">coulour</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="50" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="51" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="53" pos:column="9">void</name></type> <name pos:line="53" pos:column="14">hideCursor</name><parameter_list pos:line="53" pos:column="24">()</parameter_list> <block pos:line="53" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">setCursorColour</name><argument_list pos:line="54" pos:column="32">(<argument><expr><call><name pos:line="54" pos:column="33">RGB</name><argument_list pos:line="54" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="54" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="54" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="54" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="55" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="57" pos:column="9">void</name></type> <name pos:line="57" pos:column="14">setColsNumbered</name><parameter_list pos:line="57" pos:column="29">(<param><decl><type><name pos:line="57" pos:column="30">bool</name></type> <name pos:line="57" pos:column="35">isNumbered</name> <init pos:line="57" pos:column="46">= <expr><lit:literal type="boolean" pos:line="57" pos:column="48">true</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="57" pos:column="54">{
		<expr_stmt><expr><call><name><op:operator pos:line="58" pos:column="17">::</op:operator><name pos:line="58" pos:column="19">SendMessage</name></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">BGM_SETCOLSNUMBERED</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">isNumbered</name><op:operator pos:line="58" pos:column="70">?</op:operator><name pos:line="58" pos:column="71">TRUE</name><op:operator pos:line="58" pos:column="75">:</op:operator><name pos:line="58" pos:column="76">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="58" pos:column="83">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><name pos:line="61" pos:column="9">void</name></type> <name pos:line="61" pos:column="14">setText</name><parameter_list pos:line="61" pos:column="21">(<param><decl><type><name pos:line="61" pos:column="22">size_t</name></type> <name pos:line="61" pos:column="29">row</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="34">size_t</name></type> <name pos:line="61" pos:column="41">col</name></decl></param>, <param><decl><type><specifier pos:line="61" pos:column="46">const</specifier> <name pos:line="61" pos:column="52">TCHAR</name> <type:modifier pos:line="61" pos:column="58">*</type:modifier></type><name pos:line="61" pos:column="59">text</name></decl></param>)</parameter_list> <block pos:line="61" pos:column="65">{
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">_BGCELL</name></type> <name pos:line="62" pos:column="25">cell</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="63" pos:column="17">cell</name><op:operator pos:line="63" pos:column="21">.</op:operator><name pos:line="63" pos:column="22">row</name></name> <op:operator pos:line="63" pos:column="26">=</op:operator> <name pos:line="63" pos:column="28">row</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">cell</name><op:operator pos:line="64" pos:column="21">.</op:operator><name pos:line="64" pos:column="22">col</name></name> <op:operator pos:line="64" pos:column="26">=</op:operator> <name pos:line="64" pos:column="28">col</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="65" pos:column="17">::</op:operator><name pos:line="65" pos:column="19">SendMessage</name></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">BGM_SETCELLDATA</name></expr></argument>, <argument><expr><op:operator pos:line="65" pos:column="56">(</op:operator><name pos:line="65" pos:column="57">UINT</name><op:operator pos:line="65" pos:column="61">)</op:operator><op:operator pos:line="65" pos:column="62">&amp;</op:operator><name pos:line="65" pos:column="63">cell</name></expr></argument>, <argument><expr><op:operator pos:line="65" pos:column="69">(</op:operator><name pos:line="65" pos:column="70">long</name><op:operator pos:line="65" pos:column="74">)</op:operator><name pos:line="65" pos:column="75">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="66" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="68" pos:column="9">void</name></type> <name pos:line="68" pos:column="14">makeColAutoWidth</name><parameter_list pos:line="68" pos:column="30">(<param><decl><type><name pos:line="68" pos:column="31">bool</name></type> <name pos:line="68" pos:column="36">autoWidth</name> <init pos:line="68" pos:column="46">= <expr><lit:literal type="boolean" pos:line="68" pos:column="48">true</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="68" pos:column="54">{
		<expr_stmt><expr><call><name><op:operator pos:line="69" pos:column="17">::</op:operator><name pos:line="69" pos:column="19">SendMessage</name></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">BGM_SETCOLAUTOWIDTH</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="60">autoWidth</name><op:operator pos:line="69" pos:column="69">?</op:operator><name pos:line="69" pos:column="70">TRUE</name><op:operator pos:line="69" pos:column="74">:</op:operator><name pos:line="69" pos:column="75">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="69" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="70" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="72" pos:column="9">int</name></type> <name pos:line="72" pos:column="13">getSelectedRow</name><parameter_list pos:line="72" pos:column="27">()</parameter_list> <block pos:line="72" pos:column="30">{
		<return pos:line="73" pos:column="17">return <expr><call><name><op:operator pos:line="73" pos:column="24">::</op:operator><name pos:line="73" pos:column="26">SendMessage</name></name><argument_list pos:line="73" pos:column="37">(<argument><expr><name pos:line="73" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">BGM_GETROW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="74" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="76" pos:column="9">void</name></type> <name pos:line="76" pos:column="14">deleteCell</name><parameter_list pos:line="76" pos:column="24">(<param><decl><type><name pos:line="76" pos:column="25">int</name></type> <name pos:line="76" pos:column="29">row</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="34">int</name></type> <name pos:line="76" pos:column="38">col</name></decl></param>)</parameter_list> <block pos:line="76" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="77" pos:column="17">_BGCELL</name></type> <name pos:line="77" pos:column="25">cell</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">cell</name><op:operator pos:line="78" pos:column="21">.</op:operator><name pos:line="78" pos:column="22">row</name></name> <op:operator pos:line="78" pos:column="26">=</op:operator> <name pos:line="78" pos:column="28">row</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">cell</name><op:operator pos:line="79" pos:column="21">.</op:operator><name pos:line="79" pos:column="22">col</name></name> <op:operator pos:line="79" pos:column="26">=</op:operator> <name pos:line="79" pos:column="28">col</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="80" pos:column="17">::</op:operator><name pos:line="80" pos:column="19">SendMessage</name></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="39">BGM_DELETECELL</name></expr></argument>, <argument><expr><op:operator pos:line="80" pos:column="55">(</op:operator><name pos:line="80" pos:column="56">UINT</name><op:operator pos:line="80" pos:column="60">)</op:operator><op:operator pos:line="80" pos:column="61">&amp;</op:operator><name pos:line="80" pos:column="62">cell</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="80" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="81" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="83" pos:column="9">void</name></type> <name pos:line="83" pos:column="14">setColWidth</name><parameter_list pos:line="83" pos:column="25">(<param><decl><type><name pos:line="83" pos:column="26">unsigned</name> <name pos:line="83" pos:column="35">int</name></type> <name pos:line="83" pos:column="39">col</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="44">unsigned</name> <name pos:line="83" pos:column="53">int</name></type> <name pos:line="83" pos:column="57">width</name></decl></param>)</parameter_list> <block pos:line="83" pos:column="64">{
		<expr_stmt><expr><call><name><op:operator pos:line="84" pos:column="17">::</op:operator><name pos:line="84" pos:column="19">SendMessage</name></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="84" pos:column="39">BGM_SETCOLWIDTH</name></expr></argument>, <argument><expr><name pos:line="84" pos:column="56">col</name></expr></argument>, <argument><expr><name pos:line="84" pos:column="61">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="85" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="87" pos:column="9">void</name></type> <name pos:line="87" pos:column="14">clear</name><parameter_list pos:line="87" pos:column="19">()</parameter_list> <block pos:line="87" pos:column="22">{
		<expr_stmt><expr><call><name><op:operator pos:line="88" pos:column="17">::</op:operator><name pos:line="88" pos:column="19">SendMessage</name></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name pos:line="88" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">BGM_CLEARGRID</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="88" pos:column="54">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="88" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="89" pos:column="10">;</empty_stmt>

</public><private pos:line="91" pos:column="1">private :
	<decl_stmt><decl><type><specifier pos:line="92" pos:column="9">static</specifier> <name pos:line="92" pos:column="16">bool</name></type> <name pos:line="92" pos:column="21">_isRegistered</name></decl>;</decl_stmt>
</private>}</block>;</class>

<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="95" pos:column="8">//BABYGRIDWRAPPER</comment>

</unit>
