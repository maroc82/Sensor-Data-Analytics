<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ToolTip\ToolTip.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ToolTip.h"</lit:literal></cpp:file></cpp:include>



<function_decl><type><name pos:line="34" pos:column="1">LRESULT</name> <name pos:line="34" pos:column="9">CALLBACK</name></type> <name pos:line="34" pos:column="18">dlgProc</name><parameter_list pos:line="34" pos:column="25">(<param><decl><type><name pos:line="34" pos:column="26">HWND</name></type> <name pos:line="34" pos:column="31">hWnd</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="37">UINT</name></type> <name pos:line="34" pos:column="42">message</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="51">WPARAM</name></type> <name pos:line="34" pos:column="58">wParam</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="66">LPARAM</name></type> <name pos:line="34" pos:column="73">lParam</name></decl></param>)</parameter_list>;</function_decl>


<function><type><name pos:line="37" pos:column="1">void</name></type> <name><name pos:line="37" pos:column="6">ToolTip</name><op:operator pos:line="37" pos:column="13">::</op:operator><name pos:line="37" pos:column="15">init</name></name><parameter_list pos:line="37" pos:column="19">(<param><decl><type><name pos:line="37" pos:column="20">HINSTANCE</name></type> <name pos:line="37" pos:column="30">hInst</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="37">HWND</name></type> <name pos:line="37" pos:column="42">hParent</name></decl></param>)</parameter_list>
<block pos:line="38" pos:column="1">{
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">_hSelf</name> <op:operator pos:line="39" pos:column="20">==</op:operator> <name pos:line="39" pos:column="23">NULL</name></expr>)</condition><then pos:line="39" pos:column="28">
	<block pos:line="40" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="41" pos:column="17">Window</name><op:operator pos:line="41" pos:column="23">::</op:operator><name pos:line="41" pos:column="25">init</name></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">hInst</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="37">hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="43" pos:column="17">_hSelf</name> <op:operator pos:line="43" pos:column="24">=</op:operator> <call><name pos:line="43" pos:column="26">CreateWindowEx</name><argument_list pos:line="43" pos:column="40">( <argument><expr><lit:literal type="number" pos:line="43" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">TOOLTIPS_CLASS</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="61">NULL</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="67">WS_POPUP</name> <op:operator pos:line="43" pos:column="76">|</op:operator> <name pos:line="43" pos:column="78">TTS_NOPREFIX</name> <op:operator pos:line="43" pos:column="91">|</op:operator> <name pos:line="43" pos:column="93">TTS_ALWAYSTIP</name></expr></argument>, 
             <argument><expr><name pos:line="44" pos:column="14">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="29">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="59">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="74">NULL</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="80">NULL</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="86">NULL</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="92">NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><op:operator pos:line="45" pos:column="21">!</op:operator><name pos:line="45" pos:column="22">_hSelf</name></expr>)</condition><then pos:line="45" pos:column="29">
		<block pos:line="46" pos:column="17">{
			<throw pos:line="47" pos:column="25">throw <expr><call><name><name pos:line="47" pos:column="31">std</name><op:operator pos:line="47" pos:column="34">::</op:operator><name pos:line="47" pos:column="36">runtime_error</name></name><argument_list pos:line="47" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="50">"ToolTip::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
		}</block></then></if>

		<expr_stmt><expr><call><name><op:operator pos:line="50" pos:column="17">::</op:operator><name pos:line="50" pos:column="19">SetWindowLongPtr</name></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="50" pos:column="59">(</op:operator><name pos:line="50" pos:column="60">LONG_PTR</name><op:operator pos:line="50" pos:column="68">)</op:operator><name pos:line="50" pos:column="69">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="51" pos:column="17">_defaultProc</name> <op:operator pos:line="51" pos:column="30">=</op:operator> <call><name><name pos:line="51" pos:column="32">reinterpret_cast</name><argument_list pos:line="51" pos:column="48">&lt;<argument><expr><name pos:line="51" pos:column="49">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="51" pos:column="57">(<argument><expr><call><name><op:operator pos:line="51" pos:column="58">::</op:operator><name pos:line="51" pos:column="60">SetWindowLongPtr</name></name><argument_list pos:line="51" pos:column="76">(<argument><expr><name pos:line="51" pos:column="77">_hSelf</name></expr></argument>, <argument><expr><name pos:line="51" pos:column="85">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="51" pos:column="99">(</op:operator><name pos:line="51" pos:column="100">LONG_PTR</name><op:operator pos:line="51" pos:column="108">)</op:operator><name pos:line="51" pos:column="109">staticWinProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>


<function><type><name pos:line="56" pos:column="1">void</name></type> <name><name pos:line="56" pos:column="6">ToolTip</name><op:operator pos:line="56" pos:column="13">::</op:operator><name pos:line="56" pos:column="15">Show</name></name><parameter_list pos:line="56" pos:column="19">(<param><decl><type><name pos:line="56" pos:column="20">RECT</name></type> <name pos:line="56" pos:column="25">rectTitle</name></decl></param>, <param><decl><type><specifier pos:line="56" pos:column="36">const</specifier> <name pos:line="56" pos:column="42">TCHAR</name> <type:modifier pos:line="56" pos:column="48">*</type:modifier></type> <name pos:line="56" pos:column="50">pszTitle</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="60">int</name></type> <name pos:line="56" pos:column="64">iXOff</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="71">int</name></type> <name pos:line="56" pos:column="75">iWidthOff</name></decl></param>)</parameter_list>
<block pos:line="57" pos:column="1">{
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><call><name pos:line="58" pos:column="13">isVisible</name><argument_list pos:line="58" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="58" pos:column="25">
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">destroy</name><argument_list pos:line="59" pos:column="24">()</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">lstrlen</name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">pszTitle</name></expr></argument>)</argument_list></call> <op:operator pos:line="61" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="61" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="61" pos:column="36">
		<return pos:line="62" pos:column="17">return;</return></then></if>

	<comment type="line" pos:line="64" pos:column="9">// INITIALIZE MEMBERS OF THE TOOLINFO STRUCTURE</comment>
	<expr_stmt><expr><name><name pos:line="65" pos:column="9">_ti</name><op:operator pos:line="65" pos:column="12">.</op:operator><name pos:line="65" pos:column="13">cbSize</name></name>		<op:operator pos:line="65" pos:column="33">=</op:operator> <sizeof pos:line="65" pos:column="35">sizeof<argument_list pos:line="65" pos:column="41">(<argument><expr><name pos:line="65" pos:column="42">TOOLINFO</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="66" pos:column="9">_ti</name><op:operator pos:line="66" pos:column="12">.</op:operator><name pos:line="66" pos:column="13">uFlags</name></name>		<op:operator pos:line="66" pos:column="33">=</op:operator> <name pos:line="66" pos:column="35">TTF_TRACK</name> <op:operator pos:line="66" pos:column="45">|</op:operator> <name pos:line="66" pos:column="47">TTF_ABSOLUTE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">_ti</name><op:operator pos:line="67" pos:column="12">.</op:operator><name pos:line="67" pos:column="13">hwnd</name></name>		<op:operator pos:line="67" pos:column="33">=</op:operator> <call><name><op:operator pos:line="67" pos:column="35">::</op:operator><name pos:line="67" pos:column="37">GetParent</name></name><argument_list pos:line="67" pos:column="46">(<argument><expr><name pos:line="67" pos:column="47">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">_ti</name><op:operator pos:line="68" pos:column="12">.</op:operator><name pos:line="68" pos:column="13">hinst</name></name>		<op:operator pos:line="68" pos:column="33">=</op:operator> <name pos:line="68" pos:column="35">_hInst</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">_ti</name><op:operator pos:line="69" pos:column="12">.</op:operator><name pos:line="69" pos:column="13">uId</name></name>			<op:operator pos:line="69" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="69" pos:column="35">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="71" pos:column="9">_ti</name><op:operator pos:line="71" pos:column="12">.</op:operator><name pos:line="71" pos:column="13">rect</name><op:operator pos:line="71" pos:column="17">.</op:operator><name pos:line="71" pos:column="18">left</name></name>	<op:operator pos:line="71" pos:column="25">=</op:operator> <name><name pos:line="71" pos:column="27">rectTitle</name><op:operator pos:line="71" pos:column="36">.</op:operator><name pos:line="71" pos:column="37">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="72" pos:column="9">_ti</name><op:operator pos:line="72" pos:column="12">.</op:operator><name pos:line="72" pos:column="13">rect</name><op:operator pos:line="72" pos:column="17">.</op:operator><name pos:line="72" pos:column="18">top</name></name>	<op:operator pos:line="72" pos:column="25">=</op:operator> <name><name pos:line="72" pos:column="27">rectTitle</name><op:operator pos:line="72" pos:column="36">.</op:operator><name pos:line="72" pos:column="37">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">_ti</name><op:operator pos:line="73" pos:column="12">.</op:operator><name pos:line="73" pos:column="13">rect</name><op:operator pos:line="73" pos:column="17">.</op:operator><name pos:line="73" pos:column="18">right</name></name>	<op:operator pos:line="73" pos:column="25">=</op:operator> <name><name pos:line="73" pos:column="27">rectTitle</name><op:operator pos:line="73" pos:column="36">.</op:operator><name pos:line="73" pos:column="37">right</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">_ti</name><op:operator pos:line="74" pos:column="12">.</op:operator><name pos:line="74" pos:column="13">rect</name><op:operator pos:line="74" pos:column="17">.</op:operator><name pos:line="74" pos:column="18">bottom</name></name>	<op:operator pos:line="74" pos:column="25">=</op:operator> <name><name pos:line="74" pos:column="27">rectTitle</name><op:operator pos:line="74" pos:column="36">.</op:operator><name pos:line="74" pos:column="37">bottom</name></name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="76" pos:column="9">HFONT</name></type>	<name pos:line="76" pos:column="17">_hFont</name> <init pos:line="76" pos:column="24">= <expr><op:operator pos:line="76" pos:column="26">(</op:operator><name pos:line="76" pos:column="27">HFONT</name><op:operator pos:line="76" pos:column="32">)</op:operator><call><name><op:operator pos:line="76" pos:column="33">::</op:operator><name pos:line="76" pos:column="35">SendMessage</name></name><argument_list pos:line="76" pos:column="46">(<argument><expr><name pos:line="76" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="76" pos:column="57">WM_GETFONT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>	
	<expr_stmt><expr><call><name><op:operator pos:line="77" pos:column="9">::</op:operator><name pos:line="77" pos:column="11">SendMessage</name></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="31">WM_SETFONT</name></expr></argument>, <argument><expr><call><name><name pos:line="77" pos:column="43">reinterpret_cast</name><argument_list pos:line="77" pos:column="59">&lt;<argument><expr><name pos:line="77" pos:column="60">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="77" pos:column="67">(<argument><expr><name pos:line="77" pos:column="68">_hFont</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="77">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="79" pos:column="9">// Bleuargh...  const_cast.  Will have to do for now.</comment>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">_ti</name><op:operator pos:line="80" pos:column="12">.</op:operator><name pos:line="80" pos:column="13">lpszText</name></name>  <op:operator pos:line="80" pos:column="23">=</op:operator> <call><name><name pos:line="80" pos:column="25">const_cast</name><argument_list pos:line="80" pos:column="35">&lt;<argument><expr><name pos:line="80" pos:column="36">TCHAR</name> <op:operator pos:line="80" pos:column="42">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="80" pos:column="44">(<argument><expr><name pos:line="80" pos:column="45">pszTitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="81" pos:column="9">::</op:operator><name pos:line="81" pos:column="11">SendMessage</name></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="81" pos:column="31">TTM_ADDTOOL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><call pos:line="81" pos:column="47">(<name pos:line="81" pos:column="48">LPARAM</name>) <argument_list pos:line="81" pos:column="56">(<argument><expr><name pos:line="81" pos:column="57">LPTOOLINFO</name></expr></argument>)</argument_list></call> <op:operator pos:line="81" pos:column="69">&amp;</op:operator><name pos:line="81" pos:column="70">_ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="82" pos:column="9">::</op:operator><name pos:line="82" pos:column="11">SendMessage</name></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name pos:line="82" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="31">TTM_TRACKPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="50">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="82" pos:column="53">(</op:operator><name pos:line="82" pos:column="54">LPARAM</name><op:operator pos:line="82" pos:column="60">)</op:operator><op:operator pos:line="82" pos:column="61">(</op:operator><name pos:line="82" pos:column="62">DWORD</name><op:operator pos:line="82" pos:column="67">)</op:operator> <call><name pos:line="82" pos:column="69">MAKELONG</name><argument_list pos:line="82" pos:column="77">(<argument><expr><name><name pos:line="82" pos:column="78">_ti</name><op:operator pos:line="82" pos:column="81">.</op:operator><name pos:line="82" pos:column="82">rect</name><op:operator pos:line="82" pos:column="86">.</op:operator><name pos:line="82" pos:column="87">left</name></name> <op:operator pos:line="82" pos:column="92">+</op:operator> <name pos:line="82" pos:column="94">iXOff</name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="101">_ti</name><op:operator pos:line="82" pos:column="104">.</op:operator><name pos:line="82" pos:column="105">rect</name><op:operator pos:line="82" pos:column="109">.</op:operator><name pos:line="82" pos:column="110">top</name></name> <op:operator pos:line="82" pos:column="114">+</op:operator> <name pos:line="82" pos:column="116">iWidthOff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="83" pos:column="9">::</op:operator><name pos:line="83" pos:column="11">SendMessage</name></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="31">TTM_TRACKACTIVATE</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="83" pos:column="50">true</lit:literal></expr></argument>, <argument><expr><call pos:line="83" pos:column="56">(<name pos:line="83" pos:column="57">LPARAM</name>)<argument_list pos:line="83" pos:column="64">(<argument><expr><name pos:line="83" pos:column="65">LPTOOLINFO</name></expr></argument>)</argument_list></call> <op:operator pos:line="83" pos:column="77">&amp;</op:operator><name pos:line="83" pos:column="78">_ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="87" pos:column="1">LRESULT</name></type> <name><name pos:line="87" pos:column="9">ToolTip</name><op:operator pos:line="87" pos:column="16">::</op:operator><name pos:line="87" pos:column="18">runProc</name></name><parameter_list pos:line="87" pos:column="25">(<param><decl><type><name pos:line="87" pos:column="26">UINT</name></type> <name pos:line="87" pos:column="31">message</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="40">WPARAM</name></type> <name pos:line="87" pos:column="47">wParam</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="55">LPARAM</name></type> <name pos:line="87" pos:column="62">lParam</name></decl></param>)</parameter_list>
<block pos:line="88" pos:column="1">{
	<return pos:line="89" pos:column="9">return <expr><call><name><op:operator pos:line="89" pos:column="16">::</op:operator><name pos:line="89" pos:column="18">CallWindowProc</name></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">_defaultProc</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="55">message</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="64">wParam</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="72">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

</unit>
