<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\LineMarker.cxx" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file LineMarker.cxx
 ** Defines the look of a line marker in the margin .
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2011 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include</cpp:directive> <cpp:file pos:line="8" pos:column="10">&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="10" pos:column="10">"Platform.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="12" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="13" pos:column="10">"XPM.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="14" pos:column="10">"LineMarker.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef</cpp:directive> <name pos:line="16" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<using pos:line="17" pos:column="1">using namespace <name pos:line="17" pos:column="17">Scintilla</name>;</using>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><name pos:line="20" pos:column="1">void</name></type> <name><name pos:line="20" pos:column="6">LineMarker</name><op:operator pos:line="20" pos:column="16">::</op:operator><name pos:line="20" pos:column="18">RefreshColourPalette</name></name><parameter_list pos:line="20" pos:column="38">(<param><decl><type><name pos:line="20" pos:column="39">Palette</name> <type:modifier pos:line="20" pos:column="47">&amp;</type:modifier></type><name pos:line="20" pos:column="48">pal</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="53">bool</name></type> <name pos:line="20" pos:column="58">want</name></decl></param>)</parameter_list> <block pos:line="20" pos:column="64">{
	<expr_stmt><expr><call><name><name pos:line="21" pos:column="9">pal</name><op:operator pos:line="21" pos:column="12">.</op:operator><name pos:line="21" pos:column="13">WantFind</name></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">fore</name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="22" pos:column="9">pal</name><op:operator pos:line="22" pos:column="12">.</op:operator><name pos:line="22" pos:column="13">WantFind</name></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">back</name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="23" pos:column="9">pal</name><op:operator pos:line="23" pos:column="12">.</op:operator><name pos:line="23" pos:column="13">WantFind</name></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">backSelected</name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">pxpm</name></expr>)</condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
		<expr_stmt><expr><call><name><name pos:line="25" pos:column="17">pxpm</name><op:operator pos:line="25" pos:column="21">-&gt;</op:operator><name pos:line="25" pos:column="23">RefreshColourPalette</name></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">pal</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="29" pos:column="1">void</name></type> <name><name pos:line="29" pos:column="6">LineMarker</name><op:operator pos:line="29" pos:column="16">::</op:operator><name pos:line="29" pos:column="18">SetXPM</name></name><parameter_list pos:line="29" pos:column="24">(<param><decl><type><specifier pos:line="29" pos:column="25">const</specifier> <name pos:line="29" pos:column="31">char</name> <type:modifier pos:line="29" pos:column="36">*</type:modifier></type><name pos:line="29" pos:column="37">textForm</name></decl></param>)</parameter_list> <block pos:line="29" pos:column="47">{
	<expr_stmt><expr><op:operator pos:line="30" pos:column="9">delete</op:operator> <name pos:line="30" pos:column="16">pxpm</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">pxpm</name> <op:operator pos:line="31" pos:column="14">=</op:operator> <op:operator pos:line="31" pos:column="16">new</op:operator> <call><name pos:line="31" pos:column="20">XPM</name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">textForm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">markType</name> <op:operator pos:line="32" pos:column="18">=</op:operator> <name pos:line="32" pos:column="20">SC_MARK_PIXMAP</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="35" pos:column="1">void</name></type> <name><name pos:line="35" pos:column="6">LineMarker</name><op:operator pos:line="35" pos:column="16">::</op:operator><name pos:line="35" pos:column="18">SetXPM</name></name><parameter_list pos:line="35" pos:column="24">(<param><decl><type><specifier pos:line="35" pos:column="25">const</specifier> <name pos:line="35" pos:column="31">char</name> <type:modifier pos:line="35" pos:column="36">*</type:modifier><specifier pos:line="35" pos:column="37">const</specifier> <type:modifier pos:line="35" pos:column="43">*</type:modifier></type><name pos:line="35" pos:column="44">linesForm</name></decl></param>)</parameter_list> <block pos:line="35" pos:column="55">{
	<expr_stmt><expr><op:operator pos:line="36" pos:column="9">delete</op:operator> <name pos:line="36" pos:column="16">pxpm</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">pxpm</name> <op:operator pos:line="37" pos:column="14">=</op:operator> <op:operator pos:line="37" pos:column="16">new</op:operator> <call><name pos:line="37" pos:column="20">XPM</name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">linesForm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">markType</name> <op:operator pos:line="38" pos:column="18">=</op:operator> <name pos:line="38" pos:column="20">SC_MARK_PIXMAP</name></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="41" pos:column="1">static</specifier> <name pos:line="41" pos:column="8">void</name></type> <name pos:line="41" pos:column="13">DrawBox</name><parameter_list pos:line="41" pos:column="20">(<param><decl><type><name pos:line="41" pos:column="21">Surface</name> <type:modifier pos:line="41" pos:column="29">*</type:modifier></type><name pos:line="41" pos:column="30">surface</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="39">int</name></type> <name pos:line="41" pos:column="43">centreX</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="52">int</name></type> <name pos:line="41" pos:column="56">centreY</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="65">int</name></type> <name pos:line="41" pos:column="69">armSize</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="78">ColourAllocated</name></type> <name pos:line="41" pos:column="94">fore</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="100">ColourAllocated</name></type> <name pos:line="41" pos:column="116">back</name></decl></param>)</parameter_list> <block pos:line="41" pos:column="122">{
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">PRectangle</name></type> <name pos:line="42" pos:column="20">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">rc</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">left</name></name> <op:operator pos:line="43" pos:column="17">=</op:operator> <name pos:line="43" pos:column="19">centreX</name> <op:operator pos:line="43" pos:column="27">-</op:operator> <name pos:line="43" pos:column="29">armSize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">rc</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">top</name></name> <op:operator pos:line="44" pos:column="16">=</op:operator> <name pos:line="44" pos:column="18">centreY</name> <op:operator pos:line="44" pos:column="26">-</op:operator> <name pos:line="44" pos:column="28">armSize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">rc</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">right</name></name> <op:operator pos:line="45" pos:column="18">=</op:operator> <name pos:line="45" pos:column="20">centreX</name> <op:operator pos:line="45" pos:column="28">+</op:operator> <name pos:line="45" pos:column="30">armSize</name> <op:operator pos:line="45" pos:column="38">+</op:operator> <lit:literal type="number" pos:line="45" pos:column="40">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">rc</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">bottom</name></name> <op:operator pos:line="46" pos:column="19">=</op:operator> <name pos:line="46" pos:column="21">centreY</name> <op:operator pos:line="46" pos:column="29">+</op:operator> <name pos:line="46" pos:column="31">armSize</name> <op:operator pos:line="46" pos:column="39">+</op:operator> <lit:literal type="number" pos:line="46" pos:column="41">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="47" pos:column="9">surface</name><op:operator pos:line="47" pos:column="16">-&gt;</op:operator><name pos:line="47" pos:column="18">RectangleDraw</name></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">rc</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">back</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">fore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="50" pos:column="1">static</specifier> <name pos:line="50" pos:column="8">void</name></type> <name pos:line="50" pos:column="13">DrawCircle</name><parameter_list pos:line="50" pos:column="23">(<param><decl><type><name pos:line="50" pos:column="24">Surface</name> <type:modifier pos:line="50" pos:column="32">*</type:modifier></type><name pos:line="50" pos:column="33">surface</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="42">int</name></type> <name pos:line="50" pos:column="46">centreX</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="55">int</name></type> <name pos:line="50" pos:column="59">centreY</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="68">int</name></type> <name pos:line="50" pos:column="72">armSize</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="81">ColourAllocated</name></type> <name pos:line="50" pos:column="97">fore</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="103">ColourAllocated</name></type> <name pos:line="50" pos:column="119">back</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="125">{
	<decl_stmt><decl><type><name pos:line="51" pos:column="9">PRectangle</name></type> <name pos:line="51" pos:column="20">rcCircle</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">rcCircle</name><op:operator pos:line="52" pos:column="17">.</op:operator><name pos:line="52" pos:column="18">left</name></name> <op:operator pos:line="52" pos:column="23">=</op:operator> <name pos:line="52" pos:column="25">centreX</name> <op:operator pos:line="52" pos:column="33">-</op:operator> <name pos:line="52" pos:column="35">armSize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">rcCircle</name><op:operator pos:line="53" pos:column="17">.</op:operator><name pos:line="53" pos:column="18">top</name></name> <op:operator pos:line="53" pos:column="22">=</op:operator> <name pos:line="53" pos:column="24">centreY</name> <op:operator pos:line="53" pos:column="32">-</op:operator> <name pos:line="53" pos:column="34">armSize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">rcCircle</name><op:operator pos:line="54" pos:column="17">.</op:operator><name pos:line="54" pos:column="18">right</name></name> <op:operator pos:line="54" pos:column="24">=</op:operator> <name pos:line="54" pos:column="26">centreX</name> <op:operator pos:line="54" pos:column="34">+</op:operator> <name pos:line="54" pos:column="36">armSize</name> <op:operator pos:line="54" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="54" pos:column="46">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">rcCircle</name><op:operator pos:line="55" pos:column="17">.</op:operator><name pos:line="55" pos:column="18">bottom</name></name> <op:operator pos:line="55" pos:column="25">=</op:operator> <name pos:line="55" pos:column="27">centreY</name> <op:operator pos:line="55" pos:column="35">+</op:operator> <name pos:line="55" pos:column="37">armSize</name> <op:operator pos:line="55" pos:column="45">+</op:operator> <lit:literal type="number" pos:line="55" pos:column="47">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="56" pos:column="9">surface</name><op:operator pos:line="56" pos:column="16">-&gt;</op:operator><name pos:line="56" pos:column="18">Ellipse</name></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">rcCircle</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">back</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">fore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="59" pos:column="1">static</specifier> <name pos:line="59" pos:column="8">void</name></type> <name pos:line="59" pos:column="13">DrawPlus</name><parameter_list pos:line="59" pos:column="21">(<param><decl><type><name pos:line="59" pos:column="22">Surface</name> <type:modifier pos:line="59" pos:column="30">*</type:modifier></type><name pos:line="59" pos:column="31">surface</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="40">int</name></type> <name pos:line="59" pos:column="44">centreX</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="53">int</name></type> <name pos:line="59" pos:column="57">centreY</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="66">int</name></type> <name pos:line="59" pos:column="70">armSize</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="79">ColourAllocated</name></type> <name pos:line="59" pos:column="95">fore</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="101">{
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">PRectangle</name></type> <name pos:line="60" pos:column="20">rcV</name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">centreX</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">centreY</name> <op:operator pos:line="60" pos:column="41">-</op:operator> <name pos:line="60" pos:column="43">armSize</name> <op:operator pos:line="60" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="60" pos:column="53">2</lit:literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="56">centreX</name> <op:operator pos:line="60" pos:column="64">+</op:operator> <lit:literal type="number" pos:line="60" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="69">centreY</name> <op:operator pos:line="60" pos:column="77">+</op:operator> <name pos:line="60" pos:column="79">armSize</name> <op:operator pos:line="60" pos:column="87">-</op:operator> <lit:literal type="number" pos:line="60" pos:column="89">2</lit:literal> <op:operator pos:line="60" pos:column="91">+</op:operator> <lit:literal type="number" pos:line="60" pos:column="93">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="61" pos:column="9">surface</name><op:operator pos:line="61" pos:column="16">-&gt;</op:operator><name pos:line="61" pos:column="18">FillRectangle</name></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">rcV</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">fore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">PRectangle</name></type> <name pos:line="62" pos:column="20">rcH</name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">centreX</name> <op:operator pos:line="62" pos:column="32">-</op:operator> <name pos:line="62" pos:column="34">armSize</name> <op:operator pos:line="62" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="62" pos:column="44">2</lit:literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">centreY</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">centreX</name> <op:operator pos:line="62" pos:column="64">+</op:operator> <name pos:line="62" pos:column="66">armSize</name> <op:operator pos:line="62" pos:column="74">-</op:operator> <lit:literal type="number" pos:line="62" pos:column="76">2</lit:literal> <op:operator pos:line="62" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="62" pos:column="80">1</lit:literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="83">centreY</name><op:operator pos:line="62" pos:column="90">+</op:operator><lit:literal type="number" pos:line="62" pos:column="91">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="63" pos:column="9">surface</name><op:operator pos:line="63" pos:column="16">-&gt;</op:operator><name pos:line="63" pos:column="18">FillRectangle</name></name><argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">rcH</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">fore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="66" pos:column="1">static</specifier> <name pos:line="66" pos:column="8">void</name></type> <name pos:line="66" pos:column="13">DrawMinus</name><parameter_list pos:line="66" pos:column="22">(<param><decl><type><name pos:line="66" pos:column="23">Surface</name> <type:modifier pos:line="66" pos:column="31">*</type:modifier></type><name pos:line="66" pos:column="32">surface</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="41">int</name></type> <name pos:line="66" pos:column="45">centreX</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="54">int</name></type> <name pos:line="66" pos:column="58">centreY</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="67">int</name></type> <name pos:line="66" pos:column="71">armSize</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="80">ColourAllocated</name></type> <name pos:line="66" pos:column="96">fore</name></decl></param>)</parameter_list> <block pos:line="66" pos:column="102">{
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">PRectangle</name></type> <name pos:line="67" pos:column="20">rcH</name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">centreX</name> <op:operator pos:line="67" pos:column="32">-</op:operator> <name pos:line="67" pos:column="34">armSize</name> <op:operator pos:line="67" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="67" pos:column="44">2</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">centreY</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">centreX</name> <op:operator pos:line="67" pos:column="64">+</op:operator> <name pos:line="67" pos:column="66">armSize</name> <op:operator pos:line="67" pos:column="74">-</op:operator> <lit:literal type="number" pos:line="67" pos:column="76">2</lit:literal> <op:operator pos:line="67" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="67" pos:column="80">1</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="83">centreY</name><op:operator pos:line="67" pos:column="90">+</op:operator><lit:literal type="number" pos:line="67" pos:column="91">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="68" pos:column="9">surface</name><op:operator pos:line="68" pos:column="16">-&gt;</op:operator><name pos:line="68" pos:column="18">FillRectangle</name></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">rcH</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">fore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="71" pos:column="1">void</name></type> <name><name pos:line="71" pos:column="6">LineMarker</name><op:operator pos:line="71" pos:column="16">::</op:operator><name pos:line="71" pos:column="18">Draw</name></name><parameter_list pos:line="71" pos:column="22">(<param><decl><type><name pos:line="71" pos:column="23">Surface</name> <type:modifier pos:line="71" pos:column="31">*</type:modifier></type><name pos:line="71" pos:column="32">surface</name></decl></param>, <param><decl><type><name pos:line="71" pos:column="41">PRectangle</name> <type:modifier pos:line="71" pos:column="52">&amp;</type:modifier></type><name pos:line="71" pos:column="53">rcWhole</name></decl></param>, <param><decl><type><name pos:line="71" pos:column="62">Font</name> <type:modifier pos:line="71" pos:column="67">&amp;</type:modifier></type><name pos:line="71" pos:column="68">fontForCharacter</name></decl></param>, <param><decl><type><name pos:line="71" pos:column="86">typeOfFold</name></type> <name pos:line="71" pos:column="97">tFold</name></decl></param>)</parameter_list> <block pos:line="71" pos:column="104">{
	<decl_stmt><decl><type><name pos:line="72" pos:column="9">ColourPair</name></type> <name pos:line="72" pos:column="20">head</name> <init pos:line="72" pos:column="25">= <expr><name pos:line="72" pos:column="27">back</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="73" pos:column="9">ColourPair</name></type> <name pos:line="73" pos:column="20">body</name> <init pos:line="73" pos:column="25">= <expr><name pos:line="73" pos:column="27">back</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="74" pos:column="9">ColourPair</name></type> <name pos:line="74" pos:column="20">tail</name> <init pos:line="74" pos:column="25">= <expr><name pos:line="74" pos:column="27">back</name></expr></init></decl>;</decl_stmt>

	<switch pos:line="76" pos:column="9">switch <condition pos:line="76" pos:column="16">(<expr><name pos:line="76" pos:column="17">tFold</name></expr>)</condition> <block pos:line="76" pos:column="24">{
	<case pos:line="77" pos:column="9">case <expr><name><name pos:line="77" pos:column="14">LineMarker</name><op:operator pos:line="77" pos:column="24">::</op:operator><name pos:line="77" pos:column="26">head</name></name></expr> :
		<expr_stmt><expr><name pos:line="78" pos:column="17">head</name> <op:operator pos:line="78" pos:column="22">=</op:operator> <name pos:line="78" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">tail</name> <op:operator pos:line="79" pos:column="22">=</op:operator> <name pos:line="79" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">markType</name> <op:operator pos:line="80" pos:column="30">==</op:operator> <name pos:line="80" pos:column="33">SC_MARK_VLINE</name></expr>)</condition><then pos:line="80" pos:column="47">
			<expr_stmt><expr><name pos:line="81" pos:column="25">body</name> <op:operator pos:line="81" pos:column="30">=</op:operator> <name pos:line="81" pos:column="32">backSelected</name></expr>;</expr_stmt></then></if>
		<break pos:line="82" pos:column="17">break;</break>
	</case><case pos:line="83" pos:column="9">case <expr><name><name pos:line="83" pos:column="14">LineMarker</name><op:operator pos:line="83" pos:column="24">::</op:operator><name pos:line="83" pos:column="26">body</name></name></expr> :
		<expr_stmt><expr><name pos:line="84" pos:column="17">head</name> <op:operator pos:line="84" pos:column="22">=</op:operator> <name pos:line="84" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="85" pos:column="17">body</name> <op:operator pos:line="85" pos:column="22">=</op:operator> <name pos:line="85" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<break pos:line="86" pos:column="17">break;</break>
	</case><case pos:line="87" pos:column="9">case <expr><name><name pos:line="87" pos:column="14">LineMarker</name><op:operator pos:line="87" pos:column="24">::</op:operator><name pos:line="87" pos:column="26">tail</name></name></expr> :
		<expr_stmt><expr><name pos:line="88" pos:column="17">body</name> <op:operator pos:line="88" pos:column="22">=</op:operator> <name pos:line="88" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="89" pos:column="17">tail</name> <op:operator pos:line="89" pos:column="22">=</op:operator> <name pos:line="89" pos:column="24">backSelected</name></expr>;</expr_stmt>
		<break pos:line="90" pos:column="17">break;</break>
	</case><default pos:line="91" pos:column="9">default :
		<comment type="line" pos:line="92" pos:column="17">// LineMarker::undefined</comment>
		<break pos:line="93" pos:column="17">break;</break>
	</default>}</block></switch>


	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><op:operator pos:line="97" pos:column="13">(</op:operator><name pos:line="97" pos:column="14">markType</name> <op:operator pos:line="97" pos:column="23">==</op:operator> <name pos:line="97" pos:column="26">SC_MARK_PIXMAP</name><op:operator pos:line="97" pos:column="40">)</op:operator> <op:operator pos:line="97" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="97" pos:column="45">(</op:operator><name pos:line="97" pos:column="46">pxpm</name><op:operator pos:line="97" pos:column="50">)</op:operator></expr>)</condition><then pos:line="97" pos:column="52"> <block pos:line="97" pos:column="53">{
		<expr_stmt><expr><call><name><name pos:line="98" pos:column="17">pxpm</name><op:operator pos:line="98" pos:column="21">-&gt;</op:operator><name pos:line="98" pos:column="23">Draw</name></name><argument_list pos:line="98" pos:column="27">(<argument><expr><name pos:line="98" pos:column="28">surface</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="37">rcWhole</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="99" pos:column="17">return;</return>
	}</block></then></if>
	<comment type="line" pos:line="101" pos:column="9">// Restrict most shapes a bit</comment>
	<decl_stmt><decl><type><name pos:line="102" pos:column="9">PRectangle</name></type> <name pos:line="102" pos:column="20">rc</name> <init pos:line="102" pos:column="23">= <expr><name pos:line="102" pos:column="25">rcWhole</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="103" pos:column="9">rc</name><op:operator pos:line="103" pos:column="11">.</op:operator><name pos:line="103" pos:column="12">top</name></name><op:operator pos:line="103" pos:column="15">++</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="104" pos:column="9">rc</name><op:operator pos:line="104" pos:column="11">.</op:operator><name pos:line="104" pos:column="12">bottom</name></name><op:operator pos:line="104" pos:column="18">--</op:operator></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="105" pos:column="9">int</name></type> <name pos:line="105" pos:column="13">minDim</name> <init pos:line="105" pos:column="20">= <expr><call><name><name pos:line="105" pos:column="22">Platform</name><op:operator pos:line="105" pos:column="30">::</op:operator><name pos:line="105" pos:column="32">Minimum</name></name><argument_list pos:line="105" pos:column="39">(<argument><expr><call><name><name pos:line="105" pos:column="40">rc</name><op:operator pos:line="105" pos:column="42">.</op:operator><name pos:line="105" pos:column="43">Width</name></name><argument_list pos:line="105" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="105" pos:column="52">rc</name><op:operator pos:line="105" pos:column="54">.</op:operator><name pos:line="105" pos:column="55">Height</name></name><argument_list pos:line="105" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="106" pos:column="9">minDim</name><op:operator pos:line="106" pos:column="15">--</op:operator></expr>;</expr_stmt>	<comment type="line" pos:line="106" pos:column="25">// Ensure does not go beyond edge</comment>
	<decl_stmt><decl><type><name pos:line="107" pos:column="9">int</name></type> <name pos:line="107" pos:column="13">centreX</name> <init pos:line="107" pos:column="21">= <expr><op:operator pos:line="107" pos:column="23">(</op:operator><name><name pos:line="107" pos:column="24">rc</name><op:operator pos:line="107" pos:column="26">.</op:operator><name pos:line="107" pos:column="27">right</name></name> <op:operator pos:line="107" pos:column="33">+</op:operator> <name><name pos:line="107" pos:column="35">rc</name><op:operator pos:line="107" pos:column="37">.</op:operator><name pos:line="107" pos:column="38">left</name></name><op:operator pos:line="107" pos:column="42">)</op:operator> <op:operator pos:line="107" pos:column="44">/</op:operator> <lit:literal type="number" pos:line="107" pos:column="46">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="108" pos:column="9">int</name></type> <name pos:line="108" pos:column="13">centreY</name> <init pos:line="108" pos:column="21">= <expr><op:operator pos:line="108" pos:column="23">(</op:operator><name><name pos:line="108" pos:column="24">rc</name><op:operator pos:line="108" pos:column="26">.</op:operator><name pos:line="108" pos:column="27">bottom</name></name> <op:operator pos:line="108" pos:column="34">+</op:operator> <name><name pos:line="108" pos:column="36">rc</name><op:operator pos:line="108" pos:column="38">.</op:operator><name pos:line="108" pos:column="39">top</name></name><op:operator pos:line="108" pos:column="42">)</op:operator> <op:operator pos:line="108" pos:column="44">/</op:operator> <lit:literal type="number" pos:line="108" pos:column="46">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="109" pos:column="9">int</name></type> <name pos:line="109" pos:column="13">dimOn2</name> <init pos:line="109" pos:column="20">= <expr><name pos:line="109" pos:column="22">minDim</name> <op:operator pos:line="109" pos:column="29">/</op:operator> <lit:literal type="number" pos:line="109" pos:column="31">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">int</name></type> <name pos:line="110" pos:column="13">dimOn4</name> <init pos:line="110" pos:column="20">= <expr><name pos:line="110" pos:column="22">minDim</name> <op:operator pos:line="110" pos:column="29">/</op:operator> <lit:literal type="number" pos:line="110" pos:column="31">4</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="111" pos:column="9">int</name></type> <name pos:line="111" pos:column="13">blobSize</name> <init pos:line="111" pos:column="22">= <expr><name pos:line="111" pos:column="24">dimOn2</name><op:operator pos:line="111" pos:column="30">-</op:operator><lit:literal type="number" pos:line="111" pos:column="31">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="112" pos:column="9">int</name></type> <name pos:line="112" pos:column="13">armSize</name> <init pos:line="112" pos:column="21">= <expr><name pos:line="112" pos:column="23">dimOn2</name><op:operator pos:line="112" pos:column="29">-</op:operator><lit:literal type="number" pos:line="112" pos:column="30">2</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><call><name><name pos:line="113" pos:column="13">rc</name><op:operator pos:line="113" pos:column="15">.</op:operator><name pos:line="113" pos:column="16">Width</name></name><argument_list pos:line="113" pos:column="21">()</argument_list></call> <op:operator pos:line="113" pos:column="24">&gt;</op:operator> <op:operator pos:line="113" pos:column="26">(</op:operator><call><name><name pos:line="113" pos:column="27">rc</name><op:operator pos:line="113" pos:column="29">.</op:operator><name pos:line="113" pos:column="30">Height</name></name><argument_list pos:line="113" pos:column="36">()</argument_list></call> <op:operator pos:line="113" pos:column="39">*</op:operator> <lit:literal type="number" pos:line="113" pos:column="41">2</lit:literal><op:operator pos:line="113" pos:column="42">)</op:operator></expr>)</condition><then pos:line="113" pos:column="44"> <block pos:line="113" pos:column="45">{
		<comment type="line" pos:line="114" pos:column="17">// Wide column is line number so move to left to try to avoid overlapping number</comment>
		<expr_stmt><expr><name pos:line="115" pos:column="17">centreX</name> <op:operator pos:line="115" pos:column="25">=</op:operator> <name><name pos:line="115" pos:column="27">rc</name><op:operator pos:line="115" pos:column="29">.</op:operator><name pos:line="115" pos:column="30">left</name></name> <op:operator pos:line="115" pos:column="35">+</op:operator> <name pos:line="115" pos:column="37">dimOn2</name> <op:operator pos:line="115" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="115" pos:column="46">1</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">markType</name> <op:operator pos:line="117" pos:column="22">==</op:operator> <name pos:line="117" pos:column="25">SC_MARK_ROUNDRECT</name></expr>)</condition><then pos:line="117" pos:column="43"> <block pos:line="117" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="118" pos:column="17">PRectangle</name></type> <name pos:line="118" pos:column="28">rcRounded</name> <init pos:line="118" pos:column="38">= <expr><name pos:line="118" pos:column="40">rc</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="119" pos:column="17">rcRounded</name><op:operator pos:line="119" pos:column="26">.</op:operator><name pos:line="119" pos:column="27">left</name></name> <op:operator pos:line="119" pos:column="32">=</op:operator> <name><name pos:line="119" pos:column="34">rc</name><op:operator pos:line="119" pos:column="36">.</op:operator><name pos:line="119" pos:column="37">left</name></name> <op:operator pos:line="119" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="119" pos:column="44">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="120" pos:column="17">rcRounded</name><op:operator pos:line="120" pos:column="26">.</op:operator><name pos:line="120" pos:column="27">right</name></name> <op:operator pos:line="120" pos:column="33">=</op:operator> <name><name pos:line="120" pos:column="35">rc</name><op:operator pos:line="120" pos:column="37">.</op:operator><name pos:line="120" pos:column="38">right</name></name> <op:operator pos:line="120" pos:column="44">-</op:operator> <lit:literal type="number" pos:line="120" pos:column="46">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="121" pos:column="17">surface</name><op:operator pos:line="121" pos:column="24">-&gt;</op:operator><name pos:line="121" pos:column="26">RoundedRectangle</name></name><argument_list pos:line="121" pos:column="42">(<argument><expr><name pos:line="121" pos:column="43">rcRounded</name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="54">fore</name><op:operator pos:line="121" pos:column="58">.</op:operator><name pos:line="121" pos:column="59">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="70">back</name><op:operator pos:line="121" pos:column="74">.</op:operator><name pos:line="121" pos:column="75">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="122" pos:column="11">else <if pos:line="122" pos:column="16">if <condition pos:line="122" pos:column="19">(<expr><name pos:line="122" pos:column="20">markType</name> <op:operator pos:line="122" pos:column="29">==</op:operator> <name pos:line="122" pos:column="32">SC_MARK_CIRCLE</name></expr>)</condition><then pos:line="122" pos:column="47"> <block pos:line="122" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="123" pos:column="17">PRectangle</name></type> <name pos:line="123" pos:column="28">rcCircle</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="124" pos:column="17">rcCircle</name><op:operator pos:line="124" pos:column="25">.</op:operator><name pos:line="124" pos:column="26">left</name></name> <op:operator pos:line="124" pos:column="31">=</op:operator> <name pos:line="124" pos:column="33">centreX</name> <op:operator pos:line="124" pos:column="41">-</op:operator> <name pos:line="124" pos:column="43">dimOn2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="125" pos:column="17">rcCircle</name><op:operator pos:line="125" pos:column="25">.</op:operator><name pos:line="125" pos:column="26">top</name></name> <op:operator pos:line="125" pos:column="30">=</op:operator> <name pos:line="125" pos:column="32">centreY</name> <op:operator pos:line="125" pos:column="40">-</op:operator> <name pos:line="125" pos:column="42">dimOn2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="126" pos:column="17">rcCircle</name><op:operator pos:line="126" pos:column="25">.</op:operator><name pos:line="126" pos:column="26">right</name></name> <op:operator pos:line="126" pos:column="32">=</op:operator> <name pos:line="126" pos:column="34">centreX</name> <op:operator pos:line="126" pos:column="42">+</op:operator> <name pos:line="126" pos:column="44">dimOn2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="127" pos:column="17">rcCircle</name><op:operator pos:line="127" pos:column="25">.</op:operator><name pos:line="127" pos:column="26">bottom</name></name> <op:operator pos:line="127" pos:column="33">=</op:operator> <name pos:line="127" pos:column="35">centreY</name> <op:operator pos:line="127" pos:column="43">+</op:operator> <name pos:line="127" pos:column="45">dimOn2</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="128" pos:column="17">surface</name><op:operator pos:line="128" pos:column="24">-&gt;</op:operator><name pos:line="128" pos:column="26">Ellipse</name></name><argument_list pos:line="128" pos:column="33">(<argument><expr><name pos:line="128" pos:column="34">rcCircle</name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="44">fore</name><op:operator pos:line="128" pos:column="48">.</op:operator><name pos:line="128" pos:column="49">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="60">back</name><op:operator pos:line="128" pos:column="64">.</op:operator><name pos:line="128" pos:column="65">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="129" pos:column="11">else <if pos:line="129" pos:column="16">if <condition pos:line="129" pos:column="19">(<expr><name pos:line="129" pos:column="20">markType</name> <op:operator pos:line="129" pos:column="29">==</op:operator> <name pos:line="129" pos:column="32">SC_MARK_ARROW</name></expr>)</condition><then pos:line="129" pos:column="46"> <block pos:line="129" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="130" pos:column="17">Point</name></type> <name><name pos:line="130" pos:column="23">pts</name><index pos:line="130" pos:column="26">[]</index></name> <init pos:line="130" pos:column="29">= <expr><block pos:line="130" pos:column="31">{
    		<expr><call><name pos:line="131" pos:column="17">Point</name><argument_list pos:line="131" pos:column="22">(<argument><expr><name pos:line="131" pos:column="23">centreX</name> <op:operator pos:line="131" pos:column="31">-</op:operator> <name pos:line="131" pos:column="33">dimOn4</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="41">centreY</name> <op:operator pos:line="131" pos:column="49">-</op:operator> <name pos:line="131" pos:column="51">dimOn2</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="132" pos:column="17">Point</name><argument_list pos:line="132" pos:column="22">(<argument><expr><name pos:line="132" pos:column="23">centreX</name> <op:operator pos:line="132" pos:column="31">-</op:operator> <name pos:line="132" pos:column="33">dimOn4</name></expr></argument>, <argument><expr><name pos:line="132" pos:column="41">centreY</name> <op:operator pos:line="132" pos:column="49">+</op:operator> <name pos:line="132" pos:column="51">dimOn2</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="133" pos:column="17">Point</name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">centreX</name> <op:operator pos:line="133" pos:column="31">+</op:operator> <name pos:line="133" pos:column="33">dimOn2</name> <op:operator pos:line="133" pos:column="40">-</op:operator> <name pos:line="133" pos:column="42">dimOn4</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="50">centreY</name></expr></argument>)</argument_list></call></expr>,
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="135" pos:column="17">surface</name><op:operator pos:line="135" pos:column="24">-&gt;</op:operator><name pos:line="135" pos:column="26">Polygon</name></name><argument_list pos:line="135" pos:column="33">(<argument><expr><name pos:line="135" pos:column="34">pts</name></expr></argument>, <argument><expr><sizeof pos:line="135" pos:column="39">sizeof<argument_list pos:line="135" pos:column="45">(<argument><expr><name pos:line="135" pos:column="46">pts</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="135" pos:column="51">/</op:operator> <sizeof pos:line="135" pos:column="53">sizeof<argument_list pos:line="135" pos:column="59">(<argument><expr><name><name pos:line="135" pos:column="60">pts</name><index pos:line="135" pos:column="63">[<expr><lit:literal type="number" pos:line="135" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
                 		<argument><expr><name><name pos:line="136" pos:column="33">fore</name><op:operator pos:line="136" pos:column="37">.</op:operator><name pos:line="136" pos:column="38">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="49">back</name><op:operator pos:line="136" pos:column="53">.</op:operator><name pos:line="136" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="138" pos:column="11">else <if pos:line="138" pos:column="16">if <condition pos:line="138" pos:column="19">(<expr><name pos:line="138" pos:column="20">markType</name> <op:operator pos:line="138" pos:column="29">==</op:operator> <name pos:line="138" pos:column="32">SC_MARK_ARROWDOWN</name></expr>)</condition><then pos:line="138" pos:column="50"> <block pos:line="138" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="139" pos:column="17">Point</name></type> <name><name pos:line="139" pos:column="23">pts</name><index pos:line="139" pos:column="26">[]</index></name> <init pos:line="139" pos:column="29">= <expr><block pos:line="139" pos:column="31">{
    		<expr><call><name pos:line="140" pos:column="17">Point</name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">centreX</name> <op:operator pos:line="140" pos:column="31">-</op:operator> <name pos:line="140" pos:column="33">dimOn2</name></expr></argument>, <argument><expr><name pos:line="140" pos:column="41">centreY</name> <op:operator pos:line="140" pos:column="49">-</op:operator> <name pos:line="140" pos:column="51">dimOn4</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="141" pos:column="17">Point</name><argument_list pos:line="141" pos:column="22">(<argument><expr><name pos:line="141" pos:column="23">centreX</name> <op:operator pos:line="141" pos:column="31">+</op:operator> <name pos:line="141" pos:column="33">dimOn2</name></expr></argument>, <argument><expr><name pos:line="141" pos:column="41">centreY</name> <op:operator pos:line="141" pos:column="49">-</op:operator> <name pos:line="141" pos:column="51">dimOn4</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="142" pos:column="17">Point</name><argument_list pos:line="142" pos:column="22">(<argument><expr><name pos:line="142" pos:column="23">centreX</name></expr></argument>, <argument><expr><name pos:line="142" pos:column="32">centreY</name> <op:operator pos:line="142" pos:column="40">+</op:operator> <name pos:line="142" pos:column="42">dimOn2</name> <op:operator pos:line="142" pos:column="49">-</op:operator> <name pos:line="142" pos:column="51">dimOn4</name></expr></argument>)</argument_list></call></expr>,
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="144" pos:column="17">surface</name><op:operator pos:line="144" pos:column="24">-&gt;</op:operator><name pos:line="144" pos:column="26">Polygon</name></name><argument_list pos:line="144" pos:column="33">(<argument><expr><name pos:line="144" pos:column="34">pts</name></expr></argument>, <argument><expr><sizeof pos:line="144" pos:column="39">sizeof<argument_list pos:line="144" pos:column="45">(<argument><expr><name pos:line="144" pos:column="46">pts</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="144" pos:column="51">/</op:operator> <sizeof pos:line="144" pos:column="53">sizeof<argument_list pos:line="144" pos:column="59">(<argument><expr><name><name pos:line="144" pos:column="60">pts</name><index pos:line="144" pos:column="63">[<expr><lit:literal type="number" pos:line="144" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
                 		<argument><expr><name><name pos:line="145" pos:column="33">fore</name><op:operator pos:line="145" pos:column="37">.</op:operator><name pos:line="145" pos:column="38">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="49">back</name><op:operator pos:line="145" pos:column="53">.</op:operator><name pos:line="145" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="147" pos:column="11">else <if pos:line="147" pos:column="16">if <condition pos:line="147" pos:column="19">(<expr><name pos:line="147" pos:column="20">markType</name> <op:operator pos:line="147" pos:column="29">==</op:operator> <name pos:line="147" pos:column="32">SC_MARK_PLUS</name></expr>)</condition><then pos:line="147" pos:column="45"> <block pos:line="147" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="148" pos:column="17">Point</name></type> <name><name pos:line="148" pos:column="23">pts</name><index pos:line="148" pos:column="26">[]</index></name> <init pos:line="148" pos:column="29">= <expr><block pos:line="148" pos:column="31">{
    		<expr><call><name pos:line="149" pos:column="17">Point</name><argument_list pos:line="149" pos:column="22">(<argument><expr><name pos:line="149" pos:column="23">centreX</name> <op:operator pos:line="149" pos:column="31">-</op:operator> <name pos:line="149" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="149" pos:column="42">centreY</name> <op:operator pos:line="149" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="149" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="150" pos:column="17">Point</name><argument_list pos:line="150" pos:column="22">(<argument><expr><name pos:line="150" pos:column="23">centreX</name> <op:operator pos:line="150" pos:column="31">-</op:operator> <lit:literal type="number" pos:line="150" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="36">centreY</name> <op:operator pos:line="150" pos:column="44">-</op:operator> <lit:literal type="number" pos:line="150" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="151" pos:column="17">Point</name><argument_list pos:line="151" pos:column="22">(<argument><expr><name pos:line="151" pos:column="23">centreX</name> <op:operator pos:line="151" pos:column="31">-</op:operator> <lit:literal type="number" pos:line="151" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="36">centreY</name> <op:operator pos:line="151" pos:column="44">-</op:operator> <name pos:line="151" pos:column="46">armSize</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="152" pos:column="17">Point</name><argument_list pos:line="152" pos:column="22">(<argument><expr><name pos:line="152" pos:column="23">centreX</name> <op:operator pos:line="152" pos:column="31">+</op:operator> <lit:literal type="number" pos:line="152" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="36">centreY</name> <op:operator pos:line="152" pos:column="44">-</op:operator> <name pos:line="152" pos:column="46">armSize</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="153" pos:column="17">Point</name><argument_list pos:line="153" pos:column="22">(<argument><expr><name pos:line="153" pos:column="23">centreX</name> <op:operator pos:line="153" pos:column="31">+</op:operator> <lit:literal type="number" pos:line="153" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="36">centreY</name> <op:operator pos:line="153" pos:column="44">-</op:operator> <lit:literal type="number" pos:line="153" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="154" pos:column="17">Point</name><argument_list pos:line="154" pos:column="22">(<argument><expr><name pos:line="154" pos:column="23">centreX</name> <op:operator pos:line="154" pos:column="31">+</op:operator> <name pos:line="154" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="154" pos:column="42">centreY</name> <op:operator pos:line="154" pos:column="50">-</op:operator><lit:literal type="number" pos:line="154" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="155" pos:column="17">Point</name><argument_list pos:line="155" pos:column="22">(<argument><expr><name pos:line="155" pos:column="23">centreX</name> <op:operator pos:line="155" pos:column="31">+</op:operator> <name pos:line="155" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="42">centreY</name> <op:operator pos:line="155" pos:column="50">+</op:operator><lit:literal type="number" pos:line="155" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="156" pos:column="17">Point</name><argument_list pos:line="156" pos:column="22">(<argument><expr><name pos:line="156" pos:column="23">centreX</name> <op:operator pos:line="156" pos:column="31">+</op:operator> <lit:literal type="number" pos:line="156" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="36">centreY</name> <op:operator pos:line="156" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="156" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="157" pos:column="17">Point</name><argument_list pos:line="157" pos:column="22">(<argument><expr><name pos:line="157" pos:column="23">centreX</name> <op:operator pos:line="157" pos:column="31">+</op:operator> <lit:literal type="number" pos:line="157" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="36">centreY</name> <op:operator pos:line="157" pos:column="44">+</op:operator> <name pos:line="157" pos:column="46">armSize</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="158" pos:column="17">Point</name><argument_list pos:line="158" pos:column="22">(<argument><expr><name pos:line="158" pos:column="23">centreX</name> <op:operator pos:line="158" pos:column="31">-</op:operator> <lit:literal type="number" pos:line="158" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="36">centreY</name> <op:operator pos:line="158" pos:column="44">+</op:operator> <name pos:line="158" pos:column="46">armSize</name></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="159" pos:column="17">Point</name><argument_list pos:line="159" pos:column="22">(<argument><expr><name pos:line="159" pos:column="23">centreX</name> <op:operator pos:line="159" pos:column="31">-</op:operator> <lit:literal type="number" pos:line="159" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="36">centreY</name> <op:operator pos:line="159" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="159" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="160" pos:column="17">Point</name><argument_list pos:line="160" pos:column="22">(<argument><expr><name pos:line="160" pos:column="23">centreX</name> <op:operator pos:line="160" pos:column="31">-</op:operator> <name pos:line="160" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="160" pos:column="42">centreY</name> <op:operator pos:line="160" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="160" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr>,
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="162" pos:column="17">surface</name><op:operator pos:line="162" pos:column="24">-&gt;</op:operator><name pos:line="162" pos:column="26">Polygon</name></name><argument_list pos:line="162" pos:column="33">(<argument><expr><name pos:line="162" pos:column="34">pts</name></expr></argument>, <argument><expr><sizeof pos:line="162" pos:column="39">sizeof<argument_list pos:line="162" pos:column="45">(<argument><expr><name pos:line="162" pos:column="46">pts</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="162" pos:column="51">/</op:operator> <sizeof pos:line="162" pos:column="53">sizeof<argument_list pos:line="162" pos:column="59">(<argument><expr><name><name pos:line="162" pos:column="60">pts</name><index pos:line="162" pos:column="63">[<expr><lit:literal type="number" pos:line="162" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
                 		<argument><expr><name><name pos:line="163" pos:column="33">fore</name><op:operator pos:line="163" pos:column="37">.</op:operator><name pos:line="163" pos:column="38">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="49">back</name><op:operator pos:line="163" pos:column="53">.</op:operator><name pos:line="163" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="165" pos:column="11">else <if pos:line="165" pos:column="16">if <condition pos:line="165" pos:column="19">(<expr><name pos:line="165" pos:column="20">markType</name> <op:operator pos:line="165" pos:column="29">==</op:operator> <name pos:line="165" pos:column="32">SC_MARK_MINUS</name></expr>)</condition><then pos:line="165" pos:column="46"> <block pos:line="165" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="166" pos:column="17">Point</name></type> <name><name pos:line="166" pos:column="23">pts</name><index pos:line="166" pos:column="26">[]</index></name> <init pos:line="166" pos:column="29">= <expr><block pos:line="166" pos:column="31">{
    		<expr><call><name pos:line="167" pos:column="17">Point</name><argument_list pos:line="167" pos:column="22">(<argument><expr><name pos:line="167" pos:column="23">centreX</name> <op:operator pos:line="167" pos:column="31">-</op:operator> <name pos:line="167" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="167" pos:column="42">centreY</name> <op:operator pos:line="167" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="167" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="168" pos:column="17">Point</name><argument_list pos:line="168" pos:column="22">(<argument><expr><name pos:line="168" pos:column="23">centreX</name> <op:operator pos:line="168" pos:column="31">+</op:operator> <name pos:line="168" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="168" pos:column="42">centreY</name> <op:operator pos:line="168" pos:column="50">-</op:operator><lit:literal type="number" pos:line="168" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="169" pos:column="17">Point</name><argument_list pos:line="169" pos:column="22">(<argument><expr><name pos:line="169" pos:column="23">centreX</name> <op:operator pos:line="169" pos:column="31">+</op:operator> <name pos:line="169" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="42">centreY</name> <op:operator pos:line="169" pos:column="50">+</op:operator><lit:literal type="number" pos:line="169" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>,
    		<expr><call><name pos:line="170" pos:column="17">Point</name><argument_list pos:line="170" pos:column="22">(<argument><expr><name pos:line="170" pos:column="23">centreX</name> <op:operator pos:line="170" pos:column="31">-</op:operator> <name pos:line="170" pos:column="33">armSize</name></expr></argument>, <argument><expr><name pos:line="170" pos:column="42">centreY</name> <op:operator pos:line="170" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="170" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr>,
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="172" pos:column="17">surface</name><op:operator pos:line="172" pos:column="24">-&gt;</op:operator><name pos:line="172" pos:column="26">Polygon</name></name><argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">pts</name></expr></argument>, <argument><expr><sizeof pos:line="172" pos:column="39">sizeof<argument_list pos:line="172" pos:column="45">(<argument><expr><name pos:line="172" pos:column="46">pts</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="172" pos:column="51">/</op:operator> <sizeof pos:line="172" pos:column="53">sizeof<argument_list pos:line="172" pos:column="59">(<argument><expr><name><name pos:line="172" pos:column="60">pts</name><index pos:line="172" pos:column="63">[<expr><lit:literal type="number" pos:line="172" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
                 		<argument><expr><name><name pos:line="173" pos:column="33">fore</name><op:operator pos:line="173" pos:column="37">.</op:operator><name pos:line="173" pos:column="38">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="49">back</name><op:operator pos:line="173" pos:column="53">.</op:operator><name pos:line="173" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="175" pos:column="11">else <if pos:line="175" pos:column="16">if <condition pos:line="175" pos:column="19">(<expr><name pos:line="175" pos:column="20">markType</name> <op:operator pos:line="175" pos:column="29">==</op:operator> <name pos:line="175" pos:column="32">SC_MARK_SMALLRECT</name></expr>)</condition><then pos:line="175" pos:column="50"> <block pos:line="175" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="176" pos:column="17">PRectangle</name></type> <name pos:line="176" pos:column="28">rcSmall</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="177" pos:column="17">rcSmall</name><op:operator pos:line="177" pos:column="24">.</op:operator><name pos:line="177" pos:column="25">left</name></name> <op:operator pos:line="177" pos:column="30">=</op:operator> <name><name pos:line="177" pos:column="32">rc</name><op:operator pos:line="177" pos:column="34">.</op:operator><name pos:line="177" pos:column="35">left</name></name> <op:operator pos:line="177" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="177" pos:column="42">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="178" pos:column="17">rcSmall</name><op:operator pos:line="178" pos:column="24">.</op:operator><name pos:line="178" pos:column="25">top</name></name> <op:operator pos:line="178" pos:column="29">=</op:operator> <name><name pos:line="178" pos:column="31">rc</name><op:operator pos:line="178" pos:column="33">.</op:operator><name pos:line="178" pos:column="34">top</name></name> <op:operator pos:line="178" pos:column="38">+</op:operator> <lit:literal type="number" pos:line="178" pos:column="40">2</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="179" pos:column="17">rcSmall</name><op:operator pos:line="179" pos:column="24">.</op:operator><name pos:line="179" pos:column="25">right</name></name> <op:operator pos:line="179" pos:column="31">=</op:operator> <name><name pos:line="179" pos:column="33">rc</name><op:operator pos:line="179" pos:column="35">.</op:operator><name pos:line="179" pos:column="36">right</name></name> <op:operator pos:line="179" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="179" pos:column="44">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="180" pos:column="17">rcSmall</name><op:operator pos:line="180" pos:column="24">.</op:operator><name pos:line="180" pos:column="25">bottom</name></name> <op:operator pos:line="180" pos:column="32">=</op:operator> <name><name pos:line="180" pos:column="34">rc</name><op:operator pos:line="180" pos:column="36">.</op:operator><name pos:line="180" pos:column="37">bottom</name></name> <op:operator pos:line="180" pos:column="44">-</op:operator> <lit:literal type="number" pos:line="180" pos:column="46">2</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="181" pos:column="17">surface</name><op:operator pos:line="181" pos:column="24">-&gt;</op:operator><name pos:line="181" pos:column="26">RectangleDraw</name></name><argument_list pos:line="181" pos:column="39">(<argument><expr><name pos:line="181" pos:column="40">rcSmall</name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="49">fore</name><op:operator pos:line="181" pos:column="53">.</op:operator><name pos:line="181" pos:column="54">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="65">back</name><op:operator pos:line="181" pos:column="69">.</op:operator><name pos:line="181" pos:column="70">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="183" pos:column="11">else <if pos:line="183" pos:column="16">if <condition pos:line="183" pos:column="19">(<expr><name pos:line="183" pos:column="20">markType</name> <op:operator pos:line="183" pos:column="29">==</op:operator> <name pos:line="183" pos:column="32">SC_MARK_EMPTY</name> <op:operator pos:line="183" pos:column="46">||</op:operator> <name pos:line="183" pos:column="49">markType</name> <op:operator pos:line="183" pos:column="58">==</op:operator> <name pos:line="183" pos:column="61">SC_MARK_BACKGROUND</name> <op:operator pos:line="183" pos:column="80">||</op:operator>
		<name pos:line="184" pos:column="17">markType</name> <op:operator pos:line="184" pos:column="26">==</op:operator> <name pos:line="184" pos:column="29">SC_MARK_UNDERLINE</name> <op:operator pos:line="184" pos:column="47">||</op:operator> <name pos:line="184" pos:column="50">markType</name> <op:operator pos:line="184" pos:column="59">==</op:operator> <name pos:line="184" pos:column="62">SC_MARK_AVAILABLE</name></expr>)</condition><then pos:line="184" pos:column="80"> <block pos:line="184" pos:column="81">{
		<comment type="line" pos:line="185" pos:column="17">// An invisible marker so don't draw anything</comment>

	}</block></then> <else pos:line="187" pos:column="11">else <if pos:line="187" pos:column="16">if <condition pos:line="187" pos:column="19">(<expr><name pos:line="187" pos:column="20">markType</name> <op:operator pos:line="187" pos:column="29">==</op:operator> <name pos:line="187" pos:column="32">SC_MARK_VLINE</name></expr>)</condition><then pos:line="187" pos:column="46"> <block pos:line="187" pos:column="47">{
		<expr_stmt><expr><call><name><name pos:line="188" pos:column="17">surface</name><op:operator pos:line="188" pos:column="24">-&gt;</op:operator><name pos:line="188" pos:column="26">PenColour</name></name><argument_list pos:line="188" pos:column="35">(<argument><expr><name><name pos:line="188" pos:column="36">body</name><op:operator pos:line="188" pos:column="40">.</op:operator><name pos:line="188" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="189" pos:column="17">surface</name><op:operator pos:line="189" pos:column="24">-&gt;</op:operator><name pos:line="189" pos:column="26">MoveTo</name></name><argument_list pos:line="189" pos:column="32">(<argument><expr><name pos:line="189" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="42">rcWhole</name><op:operator pos:line="189" pos:column="49">.</op:operator><name pos:line="189" pos:column="50">top</name></name> <op:operator pos:line="189" pos:column="54">+</op:operator> <name pos:line="189" pos:column="56">blobSize</name> <op:operator pos:line="189" pos:column="65">-</op:operator> <op:operator pos:line="189" pos:column="67">(</op:operator><name><name pos:line="189" pos:column="68">rcWhole</name><op:operator pos:line="189" pos:column="75">.</op:operator><name pos:line="189" pos:column="76">bottom</name></name> <op:operator pos:line="189" pos:column="83">-</op:operator> <name><name pos:line="189" pos:column="85">rcWhole</name><op:operator pos:line="189" pos:column="92">.</op:operator><name pos:line="189" pos:column="93">top</name></name><op:operator pos:line="189" pos:column="96">)</op:operator><op:operator pos:line="189" pos:column="97">/</op:operator><lit:literal type="number" pos:line="189" pos:column="98">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="190" pos:column="17">surface</name><op:operator pos:line="190" pos:column="24">-&gt;</op:operator><name pos:line="190" pos:column="26">LineTo</name></name><argument_list pos:line="190" pos:column="32">(<argument><expr><name pos:line="190" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="42">rcWhole</name><op:operator pos:line="190" pos:column="49">.</op:operator><name pos:line="190" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="192" pos:column="11">else <if pos:line="192" pos:column="16">if <condition pos:line="192" pos:column="19">(<expr><name pos:line="192" pos:column="20">markType</name> <op:operator pos:line="192" pos:column="29">==</op:operator> <name pos:line="192" pos:column="32">SC_MARK_LCORNER</name></expr>)</condition><then pos:line="192" pos:column="48"> <block pos:line="192" pos:column="49">{
		<expr_stmt><expr><call><name><name pos:line="193" pos:column="17">surface</name><op:operator pos:line="193" pos:column="24">-&gt;</op:operator><name pos:line="193" pos:column="26">PenColour</name></name><argument_list pos:line="193" pos:column="35">(<argument><expr><name><name pos:line="193" pos:column="36">tail</name><op:operator pos:line="193" pos:column="40">.</op:operator><name pos:line="193" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="194" pos:column="17">surface</name><op:operator pos:line="194" pos:column="24">-&gt;</op:operator><name pos:line="194" pos:column="26">MoveTo</name></name><argument_list pos:line="194" pos:column="32">(<argument><expr><name pos:line="194" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="42">rcWhole</name><op:operator pos:line="194" pos:column="49">.</op:operator><name pos:line="194" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="195" pos:column="17">surface</name><op:operator pos:line="195" pos:column="24">-&gt;</op:operator><name pos:line="195" pos:column="26">LineTo</name></name><argument_list pos:line="195" pos:column="32">(<argument><expr><name pos:line="195" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="42">rc</name><op:operator pos:line="195" pos:column="44">.</op:operator><name pos:line="195" pos:column="45">top</name></name> <op:operator pos:line="195" pos:column="49">+</op:operator> <name pos:line="195" pos:column="51">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="196" pos:column="17">surface</name><op:operator pos:line="196" pos:column="24">-&gt;</op:operator><name pos:line="196" pos:column="26">LineTo</name></name><argument_list pos:line="196" pos:column="32">(<argument><expr><name><name pos:line="196" pos:column="33">rc</name><op:operator pos:line="196" pos:column="35">.</op:operator><name pos:line="196" pos:column="36">right</name></name> <op:operator pos:line="196" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="196" pos:column="44">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="47">rc</name><op:operator pos:line="196" pos:column="49">.</op:operator><name pos:line="196" pos:column="50">top</name></name> <op:operator pos:line="196" pos:column="54">+</op:operator> <name pos:line="196" pos:column="56">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="198" pos:column="11">else <if pos:line="198" pos:column="16">if <condition pos:line="198" pos:column="19">(<expr><name pos:line="198" pos:column="20">markType</name> <op:operator pos:line="198" pos:column="29">==</op:operator> <name pos:line="198" pos:column="32">SC_MARK_TCORNER</name></expr>)</condition><then pos:line="198" pos:column="48"> <block pos:line="198" pos:column="49">{
		<expr_stmt><expr><call><name><name pos:line="199" pos:column="17">surface</name><op:operator pos:line="199" pos:column="24">-&gt;</op:operator><name pos:line="199" pos:column="26">PenColour</name></name><argument_list pos:line="199" pos:column="35">(<argument><expr><name><name pos:line="199" pos:column="36">tail</name><op:operator pos:line="199" pos:column="40">.</op:operator><name pos:line="199" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="200" pos:column="17">surface</name><op:operator pos:line="200" pos:column="24">-&gt;</op:operator><name pos:line="200" pos:column="26">MoveTo</name></name><argument_list pos:line="200" pos:column="32">(<argument><expr><name pos:line="200" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="42">rc</name><op:operator pos:line="200" pos:column="44">.</op:operator><name pos:line="200" pos:column="45">top</name></name> <op:operator pos:line="200" pos:column="49">+</op:operator> <name pos:line="200" pos:column="51">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="201" pos:column="17">surface</name><op:operator pos:line="201" pos:column="24">-&gt;</op:operator><name pos:line="201" pos:column="26">LineTo</name></name><argument_list pos:line="201" pos:column="32">(<argument><expr><name><name pos:line="201" pos:column="33">rc</name><op:operator pos:line="201" pos:column="35">.</op:operator><name pos:line="201" pos:column="36">right</name></name> <op:operator pos:line="201" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="201" pos:column="44">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="47">rc</name><op:operator pos:line="201" pos:column="49">.</op:operator><name pos:line="201" pos:column="50">top</name></name> <op:operator pos:line="201" pos:column="54">+</op:operator> <name pos:line="201" pos:column="56">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="203" pos:column="17">surface</name><op:operator pos:line="203" pos:column="24">-&gt;</op:operator><name pos:line="203" pos:column="26">PenColour</name></name><argument_list pos:line="203" pos:column="35">(<argument><expr><name><name pos:line="203" pos:column="36">body</name><op:operator pos:line="203" pos:column="40">.</op:operator><name pos:line="203" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="204" pos:column="17">surface</name><op:operator pos:line="204" pos:column="24">-&gt;</op:operator><name pos:line="204" pos:column="26">MoveTo</name></name><argument_list pos:line="204" pos:column="32">(<argument><expr><name pos:line="204" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="42">rcWhole</name><op:operator pos:line="204" pos:column="49">.</op:operator><name pos:line="204" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="205" pos:column="17">surface</name><op:operator pos:line="205" pos:column="24">-&gt;</op:operator><name pos:line="205" pos:column="26">LineTo</name></name><argument_list pos:line="205" pos:column="32">(<argument><expr><name pos:line="205" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="42">rc</name><op:operator pos:line="205" pos:column="44">.</op:operator><name pos:line="205" pos:column="45">top</name></name> <op:operator pos:line="205" pos:column="49">+</op:operator> <name pos:line="205" pos:column="51">dimOn2</name> <op:operator pos:line="205" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="205" pos:column="60">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="207" pos:column="17">surface</name><op:operator pos:line="207" pos:column="24">-&gt;</op:operator><name pos:line="207" pos:column="26">PenColour</name></name><argument_list pos:line="207" pos:column="35">(<argument><expr><name><name pos:line="207" pos:column="36">head</name><op:operator pos:line="207" pos:column="40">.</op:operator><name pos:line="207" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="208" pos:column="17">surface</name><op:operator pos:line="208" pos:column="24">-&gt;</op:operator><name pos:line="208" pos:column="26">LineTo</name></name><argument_list pos:line="208" pos:column="32">(<argument><expr><name pos:line="208" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="42">rcWhole</name><op:operator pos:line="208" pos:column="49">.</op:operator><name pos:line="208" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="210" pos:column="11">else <if pos:line="210" pos:column="16">if <condition pos:line="210" pos:column="19">(<expr><name pos:line="210" pos:column="20">markType</name> <op:operator pos:line="210" pos:column="29">==</op:operator> <name pos:line="210" pos:column="32">SC_MARK_LCORNERCURVE</name></expr>)</condition><then pos:line="210" pos:column="53"> <block pos:line="210" pos:column="54">{
		<expr_stmt><expr><call><name><name pos:line="211" pos:column="17">surface</name><op:operator pos:line="211" pos:column="24">-&gt;</op:operator><name pos:line="211" pos:column="26">PenColour</name></name><argument_list pos:line="211" pos:column="35">(<argument><expr><name><name pos:line="211" pos:column="36">tail</name><op:operator pos:line="211" pos:column="40">.</op:operator><name pos:line="211" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="212" pos:column="17">surface</name><op:operator pos:line="212" pos:column="24">-&gt;</op:operator><name pos:line="212" pos:column="26">MoveTo</name></name><argument_list pos:line="212" pos:column="32">(<argument><expr><name pos:line="212" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="42">rcWhole</name><op:operator pos:line="212" pos:column="49">.</op:operator><name pos:line="212" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="213" pos:column="17">surface</name><op:operator pos:line="213" pos:column="24">-&gt;</op:operator><name pos:line="213" pos:column="26">LineTo</name></name><argument_list pos:line="213" pos:column="32">(<argument><expr><name pos:line="213" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="42">rc</name><op:operator pos:line="213" pos:column="44">.</op:operator><name pos:line="213" pos:column="45">top</name></name> <op:operator pos:line="213" pos:column="49">+</op:operator> <name pos:line="213" pos:column="51">dimOn2</name><op:operator pos:line="213" pos:column="57">-</op:operator><lit:literal type="number" pos:line="213" pos:column="58">3</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="214" pos:column="17">surface</name><op:operator pos:line="214" pos:column="24">-&gt;</op:operator><name pos:line="214" pos:column="26">LineTo</name></name><argument_list pos:line="214" pos:column="32">(<argument><expr><name pos:line="214" pos:column="33">centreX</name><op:operator pos:line="214" pos:column="40">+</op:operator><lit:literal type="number" pos:line="214" pos:column="41">3</lit:literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="44">rc</name><op:operator pos:line="214" pos:column="46">.</op:operator><name pos:line="214" pos:column="47">top</name></name> <op:operator pos:line="214" pos:column="51">+</op:operator> <name pos:line="214" pos:column="53">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="215" pos:column="17">surface</name><op:operator pos:line="215" pos:column="24">-&gt;</op:operator><name pos:line="215" pos:column="26">LineTo</name></name><argument_list pos:line="215" pos:column="32">(<argument><expr><name><name pos:line="215" pos:column="33">rc</name><op:operator pos:line="215" pos:column="35">.</op:operator><name pos:line="215" pos:column="36">right</name></name> <op:operator pos:line="215" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="215" pos:column="44">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="47">rc</name><op:operator pos:line="215" pos:column="49">.</op:operator><name pos:line="215" pos:column="50">top</name></name> <op:operator pos:line="215" pos:column="54">+</op:operator> <name pos:line="215" pos:column="56">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="217" pos:column="11">else <if pos:line="217" pos:column="16">if <condition pos:line="217" pos:column="19">(<expr><name pos:line="217" pos:column="20">markType</name> <op:operator pos:line="217" pos:column="29">==</op:operator> <name pos:line="217" pos:column="32">SC_MARK_TCORNERCURVE</name></expr>)</condition><then pos:line="217" pos:column="53"> <block pos:line="217" pos:column="54">{
		<expr_stmt><expr><call><name><name pos:line="218" pos:column="17">surface</name><op:operator pos:line="218" pos:column="24">-&gt;</op:operator><name pos:line="218" pos:column="26">PenColour</name></name><argument_list pos:line="218" pos:column="35">(<argument><expr><name><name pos:line="218" pos:column="36">tail</name><op:operator pos:line="218" pos:column="40">.</op:operator><name pos:line="218" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="219" pos:column="17">surface</name><op:operator pos:line="219" pos:column="24">-&gt;</op:operator><name pos:line="219" pos:column="26">MoveTo</name></name><argument_list pos:line="219" pos:column="32">(<argument><expr><name pos:line="219" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="42">rc</name><op:operator pos:line="219" pos:column="44">.</op:operator><name pos:line="219" pos:column="45">top</name></name> <op:operator pos:line="219" pos:column="49">+</op:operator> <name pos:line="219" pos:column="51">dimOn2</name><op:operator pos:line="219" pos:column="57">-</op:operator><lit:literal type="number" pos:line="219" pos:column="58">3</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="220" pos:column="17">surface</name><op:operator pos:line="220" pos:column="24">-&gt;</op:operator><name pos:line="220" pos:column="26">LineTo</name></name><argument_list pos:line="220" pos:column="32">(<argument><expr><name pos:line="220" pos:column="33">centreX</name><op:operator pos:line="220" pos:column="40">+</op:operator><lit:literal type="number" pos:line="220" pos:column="41">3</lit:literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="44">rc</name><op:operator pos:line="220" pos:column="46">.</op:operator><name pos:line="220" pos:column="47">top</name></name> <op:operator pos:line="220" pos:column="51">+</op:operator> <name pos:line="220" pos:column="53">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="221" pos:column="17">surface</name><op:operator pos:line="221" pos:column="24">-&gt;</op:operator><name pos:line="221" pos:column="26">LineTo</name></name><argument_list pos:line="221" pos:column="32">(<argument><expr><name><name pos:line="221" pos:column="33">rc</name><op:operator pos:line="221" pos:column="35">.</op:operator><name pos:line="221" pos:column="36">right</name></name> <op:operator pos:line="221" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="221" pos:column="44">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="47">rc</name><op:operator pos:line="221" pos:column="49">.</op:operator><name pos:line="221" pos:column="50">top</name></name> <op:operator pos:line="221" pos:column="54">+</op:operator> <name pos:line="221" pos:column="56">dimOn2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="223" pos:column="17">surface</name><op:operator pos:line="223" pos:column="24">-&gt;</op:operator><name pos:line="223" pos:column="26">PenColour</name></name><argument_list pos:line="223" pos:column="35">(<argument><expr><name><name pos:line="223" pos:column="36">body</name><op:operator pos:line="223" pos:column="40">.</op:operator><name pos:line="223" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="224" pos:column="17">surface</name><op:operator pos:line="224" pos:column="24">-&gt;</op:operator><name pos:line="224" pos:column="26">MoveTo</name></name><argument_list pos:line="224" pos:column="32">(<argument><expr><name pos:line="224" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="224" pos:column="42">rcWhole</name><op:operator pos:line="224" pos:column="49">.</op:operator><name pos:line="224" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="225" pos:column="17">surface</name><op:operator pos:line="225" pos:column="24">-&gt;</op:operator><name pos:line="225" pos:column="26">LineTo</name></name><argument_list pos:line="225" pos:column="32">(<argument><expr><name pos:line="225" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="42">rc</name><op:operator pos:line="225" pos:column="44">.</op:operator><name pos:line="225" pos:column="45">top</name></name> <op:operator pos:line="225" pos:column="49">+</op:operator> <name pos:line="225" pos:column="51">dimOn2</name><op:operator pos:line="225" pos:column="57">-</op:operator><lit:literal type="number" pos:line="225" pos:column="58">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="227" pos:column="17">surface</name><op:operator pos:line="227" pos:column="24">-&gt;</op:operator><name pos:line="227" pos:column="26">PenColour</name></name><argument_list pos:line="227" pos:column="35">(<argument><expr><name><name pos:line="227" pos:column="36">head</name><op:operator pos:line="227" pos:column="40">.</op:operator><name pos:line="227" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="228" pos:column="17">surface</name><op:operator pos:line="228" pos:column="24">-&gt;</op:operator><name pos:line="228" pos:column="26">LineTo</name></name><argument_list pos:line="228" pos:column="32">(<argument><expr><name pos:line="228" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="228" pos:column="42">rcWhole</name><op:operator pos:line="228" pos:column="49">.</op:operator><name pos:line="228" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="230" pos:column="11">else <if pos:line="230" pos:column="16">if <condition pos:line="230" pos:column="19">(<expr><name pos:line="230" pos:column="20">markType</name> <op:operator pos:line="230" pos:column="29">==</op:operator> <name pos:line="230" pos:column="32">SC_MARK_BOXPLUS</name></expr>)</condition><then pos:line="230" pos:column="48"> <block pos:line="230" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="231" pos:column="17">DrawBox</name><argument_list pos:line="231" pos:column="24">(<argument><expr><name pos:line="231" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="34">centreX</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="43">centreY</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="52">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="231" pos:column="62">fore</name><op:operator pos:line="231" pos:column="66">.</op:operator><name pos:line="231" pos:column="67">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="231" pos:column="78">head</name><op:operator pos:line="231" pos:column="82">.</op:operator><name pos:line="231" pos:column="83">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="232" pos:column="17">DrawPlus</name><argument_list pos:line="232" pos:column="25">(<argument><expr><name pos:line="232" pos:column="26">surface</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="35">centreX</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="44">centreY</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="53">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="232" pos:column="63">tail</name><op:operator pos:line="232" pos:column="67">.</op:operator><name pos:line="232" pos:column="68">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="234" pos:column="11">else <if pos:line="234" pos:column="16">if <condition pos:line="234" pos:column="19">(<expr><name pos:line="234" pos:column="20">markType</name> <op:operator pos:line="234" pos:column="29">==</op:operator> <name pos:line="234" pos:column="32">SC_MARK_BOXPLUSCONNECTED</name></expr>)</condition><then pos:line="234" pos:column="57"> <block pos:line="234" pos:column="58">{
		<expr_stmt><expr><call><name><name pos:line="235" pos:column="17">surface</name><op:operator pos:line="235" pos:column="24">-&gt;</op:operator><name pos:line="235" pos:column="26">PenColour</name></name><argument_list pos:line="235" pos:column="35">(<argument><expr><name><name pos:line="235" pos:column="36">body</name><op:operator pos:line="235" pos:column="40">.</op:operator><name pos:line="235" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="236" pos:column="17">surface</name><op:operator pos:line="236" pos:column="24">-&gt;</op:operator><name pos:line="236" pos:column="26">MoveTo</name></name><argument_list pos:line="236" pos:column="32">(<argument><expr><name pos:line="236" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="42">centreY</name> <op:operator pos:line="236" pos:column="50">+</op:operator> <name pos:line="236" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="237" pos:column="17">surface</name><op:operator pos:line="237" pos:column="24">-&gt;</op:operator><name pos:line="237" pos:column="26">LineTo</name></name><argument_list pos:line="237" pos:column="32">(<argument><expr><name pos:line="237" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="237" pos:column="42">rcWhole</name><op:operator pos:line="237" pos:column="49">.</op:operator><name pos:line="237" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="239" pos:column="17">surface</name><op:operator pos:line="239" pos:column="24">-&gt;</op:operator><name pos:line="239" pos:column="26">PenColour</name></name><argument_list pos:line="239" pos:column="35">(<argument><expr><name><name pos:line="239" pos:column="36">body</name><op:operator pos:line="239" pos:column="40">.</op:operator><name pos:line="239" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="240" pos:column="17">surface</name><op:operator pos:line="240" pos:column="24">-&gt;</op:operator><name pos:line="240" pos:column="26">MoveTo</name></name><argument_list pos:line="240" pos:column="32">(<argument><expr><name pos:line="240" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="240" pos:column="42">rcWhole</name><op:operator pos:line="240" pos:column="49">.</op:operator><name pos:line="240" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="241" pos:column="17">surface</name><op:operator pos:line="241" pos:column="24">-&gt;</op:operator><name pos:line="241" pos:column="26">LineTo</name></name><argument_list pos:line="241" pos:column="32">(<argument><expr><name pos:line="241" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="42">centreY</name> <op:operator pos:line="241" pos:column="50">-</op:operator> <name pos:line="241" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="243" pos:column="17">DrawBox</name><argument_list pos:line="243" pos:column="24">(<argument><expr><name pos:line="243" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="34">centreX</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="43">centreY</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="52">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="243" pos:column="62">fore</name><op:operator pos:line="243" pos:column="66">.</op:operator><name pos:line="243" pos:column="67">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="243" pos:column="78">head</name><op:operator pos:line="243" pos:column="82">.</op:operator><name pos:line="243" pos:column="83">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="244" pos:column="17">DrawPlus</name><argument_list pos:line="244" pos:column="25">(<argument><expr><name pos:line="244" pos:column="26">surface</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="35">centreX</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="44">centreY</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="53">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="244" pos:column="63">tail</name><op:operator pos:line="244" pos:column="67">.</op:operator><name pos:line="244" pos:column="68">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="246" pos:column="17">if <condition pos:line="246" pos:column="20">(<expr><name pos:line="246" pos:column="21">tFold</name> <op:operator pos:line="246" pos:column="27">==</op:operator> <name><name pos:line="246" pos:column="30">LineMarker</name><op:operator pos:line="246" pos:column="40">::</op:operator><name pos:line="246" pos:column="42">body</name></name></expr>)</condition><then pos:line="246" pos:column="47"> <block pos:line="246" pos:column="48">{
			<expr_stmt><expr><call><name><name pos:line="247" pos:column="25">surface</name><op:operator pos:line="247" pos:column="32">-&gt;</op:operator><name pos:line="247" pos:column="34">PenColour</name></name><argument_list pos:line="247" pos:column="43">(<argument><expr><name><name pos:line="247" pos:column="44">tail</name><op:operator pos:line="247" pos:column="48">.</op:operator><name pos:line="247" pos:column="49">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="248" pos:column="25">surface</name><op:operator pos:line="248" pos:column="32">-&gt;</op:operator><name pos:line="248" pos:column="34">MoveTo</name></name><argument_list pos:line="248" pos:column="40">(<argument><expr><name pos:line="248" pos:column="41">centreX</name> <op:operator pos:line="248" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="248" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="248" pos:column="54">centreY</name> <op:operator pos:line="248" pos:column="62">+</op:operator> <name pos:line="248" pos:column="64">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="249" pos:column="25">surface</name><op:operator pos:line="249" pos:column="32">-&gt;</op:operator><name pos:line="249" pos:column="34">LineTo</name></name><argument_list pos:line="249" pos:column="40">(<argument><expr><name pos:line="249" pos:column="41">centreX</name> <op:operator pos:line="249" pos:column="49">+</op:operator> <name pos:line="249" pos:column="51">blobSize</name> <op:operator pos:line="249" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="249" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="65">centreY</name> <op:operator pos:line="249" pos:column="73">+</op:operator> <name pos:line="249" pos:column="75">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="251" pos:column="25">surface</name><op:operator pos:line="251" pos:column="32">-&gt;</op:operator><name pos:line="251" pos:column="34">MoveTo</name></name><argument_list pos:line="251" pos:column="40">(<argument><expr><name pos:line="251" pos:column="41">centreX</name> <op:operator pos:line="251" pos:column="49">+</op:operator> <name pos:line="251" pos:column="51">blobSize</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="61">centreY</name> <op:operator pos:line="251" pos:column="69">+</op:operator> <name pos:line="251" pos:column="71">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="252" pos:column="25">surface</name><op:operator pos:line="252" pos:column="32">-&gt;</op:operator><name pos:line="252" pos:column="34">LineTo</name></name><argument_list pos:line="252" pos:column="40">(<argument><expr><name pos:line="252" pos:column="41">centreX</name> <op:operator pos:line="252" pos:column="49">+</op:operator> <name pos:line="252" pos:column="51">blobSize</name></expr></argument>, <argument><expr><name pos:line="252" pos:column="61">centreY</name> <op:operator pos:line="252" pos:column="69">-</op:operator> <name pos:line="252" pos:column="71">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="254" pos:column="25">surface</name><op:operator pos:line="254" pos:column="32">-&gt;</op:operator><name pos:line="254" pos:column="34">MoveTo</name></name><argument_list pos:line="254" pos:column="40">(<argument><expr><name pos:line="254" pos:column="41">centreX</name> <op:operator pos:line="254" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="254" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="254" pos:column="54">centreY</name> <op:operator pos:line="254" pos:column="62">-</op:operator> <name pos:line="254" pos:column="64">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="255" pos:column="25">surface</name><op:operator pos:line="255" pos:column="32">-&gt;</op:operator><name pos:line="255" pos:column="34">LineTo</name></name><argument_list pos:line="255" pos:column="40">(<argument><expr><name pos:line="255" pos:column="41">centreX</name> <op:operator pos:line="255" pos:column="49">+</op:operator> <name pos:line="255" pos:column="51">blobSize</name> <op:operator pos:line="255" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="255" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="65">centreY</name> <op:operator pos:line="255" pos:column="73">-</op:operator> <name pos:line="255" pos:column="75">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="257" pos:column="11">else <if pos:line="257" pos:column="16">if <condition pos:line="257" pos:column="19">(<expr><name pos:line="257" pos:column="20">markType</name> <op:operator pos:line="257" pos:column="29">==</op:operator> <name pos:line="257" pos:column="32">SC_MARK_BOXMINUS</name></expr>)</condition><then pos:line="257" pos:column="49"> <block pos:line="257" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="258" pos:column="17">DrawBox</name><argument_list pos:line="258" pos:column="24">(<argument><expr><name pos:line="258" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="34">centreX</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="43">centreY</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="52">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="258" pos:column="62">fore</name><op:operator pos:line="258" pos:column="66">.</op:operator><name pos:line="258" pos:column="67">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="258" pos:column="78">head</name><op:operator pos:line="258" pos:column="82">.</op:operator><name pos:line="258" pos:column="83">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="259" pos:column="17">DrawMinus</name><argument_list pos:line="259" pos:column="26">(<argument><expr><name pos:line="259" pos:column="27">surface</name></expr></argument>, <argument><expr><name pos:line="259" pos:column="36">centreX</name></expr></argument>, <argument><expr><name pos:line="259" pos:column="45">centreY</name></expr></argument>, <argument><expr><name pos:line="259" pos:column="54">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="259" pos:column="64">tail</name><op:operator pos:line="259" pos:column="68">.</op:operator><name pos:line="259" pos:column="69">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="261" pos:column="17">surface</name><op:operator pos:line="261" pos:column="24">-&gt;</op:operator><name pos:line="261" pos:column="26">PenColour</name></name><argument_list pos:line="261" pos:column="35">(<argument><expr><name><name pos:line="261" pos:column="36">head</name><op:operator pos:line="261" pos:column="40">.</op:operator><name pos:line="261" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="262" pos:column="17">surface</name><op:operator pos:line="262" pos:column="24">-&gt;</op:operator><name pos:line="262" pos:column="26">MoveTo</name></name><argument_list pos:line="262" pos:column="32">(<argument><expr><name pos:line="262" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="42">centreY</name> <op:operator pos:line="262" pos:column="50">+</op:operator> <name pos:line="262" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="263" pos:column="17">surface</name><op:operator pos:line="263" pos:column="24">-&gt;</op:operator><name pos:line="263" pos:column="26">LineTo</name></name><argument_list pos:line="263" pos:column="32">(<argument><expr><name pos:line="263" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="42">rcWhole</name><op:operator pos:line="263" pos:column="49">.</op:operator><name pos:line="263" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="265" pos:column="11">else <if pos:line="265" pos:column="16">if <condition pos:line="265" pos:column="19">(<expr><name pos:line="265" pos:column="20">markType</name> <op:operator pos:line="265" pos:column="29">==</op:operator> <name pos:line="265" pos:column="32">SC_MARK_BOXMINUSCONNECTED</name></expr>)</condition><then pos:line="265" pos:column="58"> <block pos:line="265" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="266" pos:column="17">DrawBox</name><argument_list pos:line="266" pos:column="24">(<argument><expr><name pos:line="266" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="34">centreX</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="43">centreY</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="52">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="62">fore</name><op:operator pos:line="266" pos:column="66">.</op:operator><name pos:line="266" pos:column="67">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="78">head</name><op:operator pos:line="266" pos:column="82">.</op:operator><name pos:line="266" pos:column="83">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="267" pos:column="17">DrawMinus</name><argument_list pos:line="267" pos:column="26">(<argument><expr><name pos:line="267" pos:column="27">surface</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="36">centreX</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="45">centreY</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="54">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="64">tail</name><op:operator pos:line="267" pos:column="68">.</op:operator><name pos:line="267" pos:column="69">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="269" pos:column="17">surface</name><op:operator pos:line="269" pos:column="24">-&gt;</op:operator><name pos:line="269" pos:column="26">PenColour</name></name><argument_list pos:line="269" pos:column="35">(<argument><expr><name><name pos:line="269" pos:column="36">head</name><op:operator pos:line="269" pos:column="40">.</op:operator><name pos:line="269" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="270" pos:column="17">surface</name><op:operator pos:line="270" pos:column="24">-&gt;</op:operator><name pos:line="270" pos:column="26">MoveTo</name></name><argument_list pos:line="270" pos:column="32">(<argument><expr><name pos:line="270" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="270" pos:column="42">centreY</name> <op:operator pos:line="270" pos:column="50">+</op:operator> <name pos:line="270" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="271" pos:column="17">surface</name><op:operator pos:line="271" pos:column="24">-&gt;</op:operator><name pos:line="271" pos:column="26">LineTo</name></name><argument_list pos:line="271" pos:column="32">(<argument><expr><name pos:line="271" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="271" pos:column="42">rcWhole</name><op:operator pos:line="271" pos:column="49">.</op:operator><name pos:line="271" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="273" pos:column="17">surface</name><op:operator pos:line="273" pos:column="24">-&gt;</op:operator><name pos:line="273" pos:column="26">PenColour</name></name><argument_list pos:line="273" pos:column="35">(<argument><expr><name><name pos:line="273" pos:column="36">body</name><op:operator pos:line="273" pos:column="40">.</op:operator><name pos:line="273" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="274" pos:column="17">surface</name><op:operator pos:line="274" pos:column="24">-&gt;</op:operator><name pos:line="274" pos:column="26">MoveTo</name></name><argument_list pos:line="274" pos:column="32">(<argument><expr><name pos:line="274" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="274" pos:column="42">rcWhole</name><op:operator pos:line="274" pos:column="49">.</op:operator><name pos:line="274" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="275" pos:column="17">surface</name><op:operator pos:line="275" pos:column="24">-&gt;</op:operator><name pos:line="275" pos:column="26">LineTo</name></name><argument_list pos:line="275" pos:column="32">(<argument><expr><name pos:line="275" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="275" pos:column="42">centreY</name> <op:operator pos:line="275" pos:column="50">-</op:operator> <name pos:line="275" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="277" pos:column="17">if <condition pos:line="277" pos:column="20">(<expr><name pos:line="277" pos:column="21">tFold</name> <op:operator pos:line="277" pos:column="27">==</op:operator> <name><name pos:line="277" pos:column="30">LineMarker</name><op:operator pos:line="277" pos:column="40">::</op:operator><name pos:line="277" pos:column="42">body</name></name></expr>)</condition><then pos:line="277" pos:column="47"> <block pos:line="277" pos:column="48">{
			<expr_stmt><expr><call><name><name pos:line="278" pos:column="25">surface</name><op:operator pos:line="278" pos:column="32">-&gt;</op:operator><name pos:line="278" pos:column="34">PenColour</name></name><argument_list pos:line="278" pos:column="43">(<argument><expr><name><name pos:line="278" pos:column="44">tail</name><op:operator pos:line="278" pos:column="48">.</op:operator><name pos:line="278" pos:column="49">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="279" pos:column="25">surface</name><op:operator pos:line="279" pos:column="32">-&gt;</op:operator><name pos:line="279" pos:column="34">MoveTo</name></name><argument_list pos:line="279" pos:column="40">(<argument><expr><name pos:line="279" pos:column="41">centreX</name> <op:operator pos:line="279" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="279" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="279" pos:column="54">centreY</name> <op:operator pos:line="279" pos:column="62">+</op:operator> <name pos:line="279" pos:column="64">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="280" pos:column="25">surface</name><op:operator pos:line="280" pos:column="32">-&gt;</op:operator><name pos:line="280" pos:column="34">LineTo</name></name><argument_list pos:line="280" pos:column="40">(<argument><expr><name pos:line="280" pos:column="41">centreX</name> <op:operator pos:line="280" pos:column="49">+</op:operator> <name pos:line="280" pos:column="51">blobSize</name> <op:operator pos:line="280" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="280" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="280" pos:column="65">centreY</name> <op:operator pos:line="280" pos:column="73">+</op:operator> <name pos:line="280" pos:column="75">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="282" pos:column="25">surface</name><op:operator pos:line="282" pos:column="32">-&gt;</op:operator><name pos:line="282" pos:column="34">MoveTo</name></name><argument_list pos:line="282" pos:column="40">(<argument><expr><name pos:line="282" pos:column="41">centreX</name> <op:operator pos:line="282" pos:column="49">+</op:operator> <name pos:line="282" pos:column="51">blobSize</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="61">centreY</name> <op:operator pos:line="282" pos:column="69">+</op:operator> <name pos:line="282" pos:column="71">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="283" pos:column="25">surface</name><op:operator pos:line="283" pos:column="32">-&gt;</op:operator><name pos:line="283" pos:column="34">LineTo</name></name><argument_list pos:line="283" pos:column="40">(<argument><expr><name pos:line="283" pos:column="41">centreX</name> <op:operator pos:line="283" pos:column="49">+</op:operator> <name pos:line="283" pos:column="51">blobSize</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="61">centreY</name> <op:operator pos:line="283" pos:column="69">-</op:operator> <name pos:line="283" pos:column="71">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="285" pos:column="25">surface</name><op:operator pos:line="285" pos:column="32">-&gt;</op:operator><name pos:line="285" pos:column="34">MoveTo</name></name><argument_list pos:line="285" pos:column="40">(<argument><expr><name pos:line="285" pos:column="41">centreX</name> <op:operator pos:line="285" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="285" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="285" pos:column="54">centreY</name> <op:operator pos:line="285" pos:column="62">-</op:operator> <name pos:line="285" pos:column="64">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="286" pos:column="25">surface</name><op:operator pos:line="286" pos:column="32">-&gt;</op:operator><name pos:line="286" pos:column="34">LineTo</name></name><argument_list pos:line="286" pos:column="40">(<argument><expr><name pos:line="286" pos:column="41">centreX</name> <op:operator pos:line="286" pos:column="49">+</op:operator> <name pos:line="286" pos:column="51">blobSize</name> <op:operator pos:line="286" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="286" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="286" pos:column="65">centreY</name> <op:operator pos:line="286" pos:column="73">-</op:operator> <name pos:line="286" pos:column="75">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="288" pos:column="11">else <if pos:line="288" pos:column="16">if <condition pos:line="288" pos:column="19">(<expr><name pos:line="288" pos:column="20">markType</name> <op:operator pos:line="288" pos:column="29">==</op:operator> <name pos:line="288" pos:column="32">SC_MARK_CIRCLEPLUS</name></expr>)</condition><then pos:line="288" pos:column="51"> <block pos:line="288" pos:column="52">{
		<expr_stmt><expr><call><name pos:line="289" pos:column="17">DrawCircle</name><argument_list pos:line="289" pos:column="27">(<argument><expr><name pos:line="289" pos:column="28">surface</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="37">centreX</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="46">centreY</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="55">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="65">fore</name><op:operator pos:line="289" pos:column="69">.</op:operator><name pos:line="289" pos:column="70">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="81">head</name><op:operator pos:line="289" pos:column="85">.</op:operator><name pos:line="289" pos:column="86">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="290" pos:column="17">DrawPlus</name><argument_list pos:line="290" pos:column="25">(<argument><expr><name pos:line="290" pos:column="26">surface</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="35">centreX</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="44">centreY</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="53">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="63">tail</name><op:operator pos:line="290" pos:column="67">.</op:operator><name pos:line="290" pos:column="68">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="292" pos:column="11">else <if pos:line="292" pos:column="16">if <condition pos:line="292" pos:column="19">(<expr><name pos:line="292" pos:column="20">markType</name> <op:operator pos:line="292" pos:column="29">==</op:operator> <name pos:line="292" pos:column="32">SC_MARK_CIRCLEPLUSCONNECTED</name></expr>)</condition><then pos:line="292" pos:column="60"> <block pos:line="292" pos:column="61">{
		<expr_stmt><expr><call><name><name pos:line="293" pos:column="17">surface</name><op:operator pos:line="293" pos:column="24">-&gt;</op:operator><name pos:line="293" pos:column="26">PenColour</name></name><argument_list pos:line="293" pos:column="35">(<argument><expr><name><name pos:line="293" pos:column="36">body</name><op:operator pos:line="293" pos:column="40">.</op:operator><name pos:line="293" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="294" pos:column="17">surface</name><op:operator pos:line="294" pos:column="24">-&gt;</op:operator><name pos:line="294" pos:column="26">MoveTo</name></name><argument_list pos:line="294" pos:column="32">(<argument><expr><name pos:line="294" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="294" pos:column="42">centreY</name> <op:operator pos:line="294" pos:column="50">+</op:operator> <name pos:line="294" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="295" pos:column="17">surface</name><op:operator pos:line="295" pos:column="24">-&gt;</op:operator><name pos:line="295" pos:column="26">LineTo</name></name><argument_list pos:line="295" pos:column="32">(<argument><expr><name pos:line="295" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="295" pos:column="42">rcWhole</name><op:operator pos:line="295" pos:column="49">.</op:operator><name pos:line="295" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="297" pos:column="17">surface</name><op:operator pos:line="297" pos:column="24">-&gt;</op:operator><name pos:line="297" pos:column="26">MoveTo</name></name><argument_list pos:line="297" pos:column="32">(<argument><expr><name pos:line="297" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="42">rcWhole</name><op:operator pos:line="297" pos:column="49">.</op:operator><name pos:line="297" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="298" pos:column="17">surface</name><op:operator pos:line="298" pos:column="24">-&gt;</op:operator><name pos:line="298" pos:column="26">LineTo</name></name><argument_list pos:line="298" pos:column="32">(<argument><expr><name pos:line="298" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="298" pos:column="42">centreY</name> <op:operator pos:line="298" pos:column="50">-</op:operator> <name pos:line="298" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="300" pos:column="17">DrawCircle</name><argument_list pos:line="300" pos:column="27">(<argument><expr><name pos:line="300" pos:column="28">surface</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="37">centreX</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="46">centreY</name></expr></argument>, <argument><expr><name pos:line="300" pos:column="55">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="300" pos:column="65">fore</name><op:operator pos:line="300" pos:column="69">.</op:operator><name pos:line="300" pos:column="70">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="300" pos:column="81">head</name><op:operator pos:line="300" pos:column="85">.</op:operator><name pos:line="300" pos:column="86">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="301" pos:column="17">DrawPlus</name><argument_list pos:line="301" pos:column="25">(<argument><expr><name pos:line="301" pos:column="26">surface</name></expr></argument>, <argument><expr><name pos:line="301" pos:column="35">centreX</name></expr></argument>, <argument><expr><name pos:line="301" pos:column="44">centreY</name></expr></argument>, <argument><expr><name pos:line="301" pos:column="53">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="63">tail</name><op:operator pos:line="301" pos:column="67">.</op:operator><name pos:line="301" pos:column="68">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="303" pos:column="11">else <if pos:line="303" pos:column="16">if <condition pos:line="303" pos:column="19">(<expr><name pos:line="303" pos:column="20">markType</name> <op:operator pos:line="303" pos:column="29">==</op:operator> <name pos:line="303" pos:column="32">SC_MARK_CIRCLEMINUS</name></expr>)</condition><then pos:line="303" pos:column="52"> <block pos:line="303" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="304" pos:column="17">DrawCircle</name><argument_list pos:line="304" pos:column="27">(<argument><expr><name pos:line="304" pos:column="28">surface</name></expr></argument>, <argument><expr><name pos:line="304" pos:column="37">centreX</name></expr></argument>, <argument><expr><name pos:line="304" pos:column="46">centreY</name></expr></argument>, <argument><expr><name pos:line="304" pos:column="55">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="304" pos:column="65">fore</name><op:operator pos:line="304" pos:column="69">.</op:operator><name pos:line="304" pos:column="70">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="304" pos:column="81">head</name><op:operator pos:line="304" pos:column="85">.</op:operator><name pos:line="304" pos:column="86">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="305" pos:column="17">DrawMinus</name><argument_list pos:line="305" pos:column="26">(<argument><expr><name pos:line="305" pos:column="27">surface</name></expr></argument>, <argument><expr><name pos:line="305" pos:column="36">centreX</name></expr></argument>, <argument><expr><name pos:line="305" pos:column="45">centreY</name></expr></argument>, <argument><expr><name pos:line="305" pos:column="54">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="305" pos:column="64">tail</name><op:operator pos:line="305" pos:column="68">.</op:operator><name pos:line="305" pos:column="69">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="307" pos:column="17">surface</name><op:operator pos:line="307" pos:column="24">-&gt;</op:operator><name pos:line="307" pos:column="26">PenColour</name></name><argument_list pos:line="307" pos:column="35">(<argument><expr><name><name pos:line="307" pos:column="36">head</name><op:operator pos:line="307" pos:column="40">.</op:operator><name pos:line="307" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="308" pos:column="17">surface</name><op:operator pos:line="308" pos:column="24">-&gt;</op:operator><name pos:line="308" pos:column="26">MoveTo</name></name><argument_list pos:line="308" pos:column="32">(<argument><expr><name pos:line="308" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="308" pos:column="42">centreY</name> <op:operator pos:line="308" pos:column="50">+</op:operator> <name pos:line="308" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="309" pos:column="17">surface</name><op:operator pos:line="309" pos:column="24">-&gt;</op:operator><name pos:line="309" pos:column="26">LineTo</name></name><argument_list pos:line="309" pos:column="32">(<argument><expr><name pos:line="309" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="42">rcWhole</name><op:operator pos:line="309" pos:column="49">.</op:operator><name pos:line="309" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="311" pos:column="11">else <if pos:line="311" pos:column="16">if <condition pos:line="311" pos:column="19">(<expr><name pos:line="311" pos:column="20">markType</name> <op:operator pos:line="311" pos:column="29">==</op:operator> <name pos:line="311" pos:column="32">SC_MARK_CIRCLEMINUSCONNECTED</name></expr>)</condition><then pos:line="311" pos:column="61"> <block pos:line="311" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="312" pos:column="17">DrawCircle</name><argument_list pos:line="312" pos:column="27">(<argument><expr><name pos:line="312" pos:column="28">surface</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="37">centreX</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="46">centreY</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="55">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="65">fore</name><op:operator pos:line="312" pos:column="69">.</op:operator><name pos:line="312" pos:column="70">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="81">head</name><op:operator pos:line="312" pos:column="85">.</op:operator><name pos:line="312" pos:column="86">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="313" pos:column="17">DrawMinus</name><argument_list pos:line="313" pos:column="26">(<argument><expr><name pos:line="313" pos:column="27">surface</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="36">centreX</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="45">centreY</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="54">blobSize</name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="64">tail</name><op:operator pos:line="313" pos:column="68">.</op:operator><name pos:line="313" pos:column="69">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="315" pos:column="17">surface</name><op:operator pos:line="315" pos:column="24">-&gt;</op:operator><name pos:line="315" pos:column="26">PenColour</name></name><argument_list pos:line="315" pos:column="35">(<argument><expr><name><name pos:line="315" pos:column="36">head</name><op:operator pos:line="315" pos:column="40">.</op:operator><name pos:line="315" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="316" pos:column="17">surface</name><op:operator pos:line="316" pos:column="24">-&gt;</op:operator><name pos:line="316" pos:column="26">MoveTo</name></name><argument_list pos:line="316" pos:column="32">(<argument><expr><name pos:line="316" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="316" pos:column="42">centreY</name> <op:operator pos:line="316" pos:column="50">+</op:operator> <name pos:line="316" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="317" pos:column="17">surface</name><op:operator pos:line="317" pos:column="24">-&gt;</op:operator><name pos:line="317" pos:column="26">LineTo</name></name><argument_list pos:line="317" pos:column="32">(<argument><expr><name pos:line="317" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="317" pos:column="42">rcWhole</name><op:operator pos:line="317" pos:column="49">.</op:operator><name pos:line="317" pos:column="50">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="319" pos:column="17">surface</name><op:operator pos:line="319" pos:column="24">-&gt;</op:operator><name pos:line="319" pos:column="26">PenColour</name></name><argument_list pos:line="319" pos:column="35">(<argument><expr><name><name pos:line="319" pos:column="36">body</name><op:operator pos:line="319" pos:column="40">.</op:operator><name pos:line="319" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="320" pos:column="17">surface</name><op:operator pos:line="320" pos:column="24">-&gt;</op:operator><name pos:line="320" pos:column="26">MoveTo</name></name><argument_list pos:line="320" pos:column="32">(<argument><expr><name pos:line="320" pos:column="33">centreX</name></expr></argument>, <argument><expr><name><name pos:line="320" pos:column="42">rcWhole</name><op:operator pos:line="320" pos:column="49">.</op:operator><name pos:line="320" pos:column="50">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="321" pos:column="17">surface</name><op:operator pos:line="321" pos:column="24">-&gt;</op:operator><name pos:line="321" pos:column="26">LineTo</name></name><argument_list pos:line="321" pos:column="32">(<argument><expr><name pos:line="321" pos:column="33">centreX</name></expr></argument>, <argument><expr><name pos:line="321" pos:column="42">centreY</name> <op:operator pos:line="321" pos:column="50">-</op:operator> <name pos:line="321" pos:column="52">blobSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="323" pos:column="11">else <if pos:line="323" pos:column="16">if <condition pos:line="323" pos:column="19">(<expr><name pos:line="323" pos:column="20">markType</name> <op:operator pos:line="323" pos:column="29">&gt;=</op:operator> <name pos:line="323" pos:column="32">SC_MARK_CHARACTER</name></expr>)</condition><then pos:line="323" pos:column="50"> <block pos:line="323" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="324" pos:column="17">char</name></type> <name><name pos:line="324" pos:column="22">character</name><index pos:line="324" pos:column="31">[<expr><lit:literal type="number" pos:line="324" pos:column="32">1</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="325" pos:column="17">character</name><index pos:line="325" pos:column="26">[<expr><lit:literal type="number" pos:line="325" pos:column="27">0</lit:literal></expr>]</index></name> <op:operator pos:line="325" pos:column="30">=</op:operator> <call><name><name pos:line="325" pos:column="32">static_cast</name><argument_list pos:line="325" pos:column="43">&lt;<argument><expr><name pos:line="325" pos:column="44">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="325" pos:column="49">(<argument><expr><name pos:line="325" pos:column="50">markType</name> <op:operator pos:line="325" pos:column="59">-</op:operator> <name pos:line="325" pos:column="61">SC_MARK_CHARACTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="326" pos:column="17">int</name></type> <name pos:line="326" pos:column="21">width</name> <init pos:line="326" pos:column="27">= <expr><call><name><name pos:line="326" pos:column="29">surface</name><op:operator pos:line="326" pos:column="36">-&gt;</op:operator><name pos:line="326" pos:column="38">WidthText</name></name><argument_list pos:line="326" pos:column="47">(<argument><expr><name pos:line="326" pos:column="48">fontForCharacter</name></expr></argument>, <argument><expr><name pos:line="326" pos:column="66">character</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="77">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="327" pos:column="17">rc</name><op:operator pos:line="327" pos:column="19">.</op:operator><name pos:line="327" pos:column="20">left</name></name> <op:operator pos:line="327" pos:column="25">+=</op:operator> <op:operator pos:line="327" pos:column="28">(</op:operator><call><name><name pos:line="327" pos:column="29">rc</name><op:operator pos:line="327" pos:column="31">.</op:operator><name pos:line="327" pos:column="32">Width</name></name><argument_list pos:line="327" pos:column="37">()</argument_list></call> <op:operator pos:line="327" pos:column="40">-</op:operator> <name pos:line="327" pos:column="42">width</name><op:operator pos:line="327" pos:column="47">)</op:operator> <op:operator pos:line="327" pos:column="49">/</op:operator> <lit:literal type="number" pos:line="327" pos:column="51">2</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="328" pos:column="17">rc</name><op:operator pos:line="328" pos:column="19">.</op:operator><name pos:line="328" pos:column="20">right</name></name> <op:operator pos:line="328" pos:column="26">=</op:operator> <name><name pos:line="328" pos:column="28">rc</name><op:operator pos:line="328" pos:column="30">.</op:operator><name pos:line="328" pos:column="31">left</name></name> <op:operator pos:line="328" pos:column="36">+</op:operator> <name pos:line="328" pos:column="38">width</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="329" pos:column="17">surface</name><op:operator pos:line="329" pos:column="24">-&gt;</op:operator><name pos:line="329" pos:column="26">DrawTextClipped</name></name><argument_list pos:line="329" pos:column="41">(<argument><expr><name pos:line="329" pos:column="42">rc</name></expr></argument>, <argument><expr><name pos:line="329" pos:column="46">fontForCharacter</name></expr></argument>, <argument><expr><name><name pos:line="329" pos:column="64">rc</name><op:operator pos:line="329" pos:column="66">.</op:operator><name pos:line="329" pos:column="67">bottom</name></name> <op:operator pos:line="329" pos:column="74">-</op:operator> <lit:literal type="number" pos:line="329" pos:column="76">2</lit:literal></expr></argument>,
			<argument><expr><name pos:line="330" pos:column="25">character</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="36">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="330" pos:column="39">fore</name><op:operator pos:line="330" pos:column="43">.</op:operator><name pos:line="330" pos:column="44">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="330" pos:column="55">back</name><op:operator pos:line="330" pos:column="59">.</op:operator><name pos:line="330" pos:column="60">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="332" pos:column="11">else <if pos:line="332" pos:column="16">if <condition pos:line="332" pos:column="19">(<expr><name pos:line="332" pos:column="20">markType</name> <op:operator pos:line="332" pos:column="29">==</op:operator> <name pos:line="332" pos:column="32">SC_MARK_DOTDOTDOT</name></expr>)</condition><then pos:line="332" pos:column="50"> <block pos:line="332" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="333" pos:column="17">int</name></type> <name pos:line="333" pos:column="21">right</name> <init pos:line="333" pos:column="27">= <expr><name pos:line="333" pos:column="29">centreX</name> <op:operator pos:line="333" pos:column="37">-</op:operator> <lit:literal type="number" pos:line="333" pos:column="39">6</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="334" pos:column="17">for (<init><decl><type><name pos:line="334" pos:column="22">int</name></type> <name pos:line="334" pos:column="26">b</name><init pos:line="334" pos:column="27">=<expr><lit:literal type="number" pos:line="334" pos:column="28">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="334" pos:column="31">b</name><op:operator pos:line="334" pos:column="32">&lt;</op:operator><lit:literal type="number" pos:line="334" pos:column="33">3</lit:literal></expr>;</condition> <incr><expr><name pos:line="334" pos:column="36">b</name><op:operator pos:line="334" pos:column="37">++</op:operator></expr></incr>) <block pos:line="334" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="335" pos:column="25">PRectangle</name></type> <name pos:line="335" pos:column="36">rcBlob</name><argument_list pos:line="335" pos:column="42">(<argument><expr><name pos:line="335" pos:column="43">right</name></expr></argument>, <argument><expr><name><name pos:line="335" pos:column="50">rc</name><op:operator pos:line="335" pos:column="52">.</op:operator><name pos:line="335" pos:column="53">bottom</name></name> <op:operator pos:line="335" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="335" pos:column="62">4</lit:literal></expr></argument>, <argument><expr><name pos:line="335" pos:column="65">right</name> <op:operator pos:line="335" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="335" pos:column="73">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="335" pos:column="76">rc</name><op:operator pos:line="335" pos:column="78">.</op:operator><name pos:line="335" pos:column="79">bottom</name></name><op:operator pos:line="335" pos:column="85">-</op:operator><lit:literal type="number" pos:line="335" pos:column="86">2</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="336" pos:column="25">surface</name><op:operator pos:line="336" pos:column="32">-&gt;</op:operator><name pos:line="336" pos:column="34">FillRectangle</name></name><argument_list pos:line="336" pos:column="47">(<argument><expr><name pos:line="336" pos:column="48">rcBlob</name></expr></argument>, <argument><expr><name><name pos:line="336" pos:column="56">fore</name><op:operator pos:line="336" pos:column="60">.</op:operator><name pos:line="336" pos:column="61">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="337" pos:column="25">right</name> <op:operator pos:line="337" pos:column="31">+=</op:operator> <lit:literal type="number" pos:line="337" pos:column="34">5</lit:literal></expr>;</expr_stmt>
		}</block></for>
	}</block></then> <else pos:line="339" pos:column="11">else <if pos:line="339" pos:column="16">if <condition pos:line="339" pos:column="19">(<expr><name pos:line="339" pos:column="20">markType</name> <op:operator pos:line="339" pos:column="29">==</op:operator> <name pos:line="339" pos:column="32">SC_MARK_ARROWS</name></expr>)</condition><then pos:line="339" pos:column="47"> <block pos:line="339" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="340" pos:column="17">surface</name><op:operator pos:line="340" pos:column="24">-&gt;</op:operator><name pos:line="340" pos:column="26">PenColour</name></name><argument_list pos:line="340" pos:column="35">(<argument><expr><name><name pos:line="340" pos:column="36">fore</name><op:operator pos:line="340" pos:column="40">.</op:operator><name pos:line="340" pos:column="41">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="341" pos:column="17">int</name></type> <name pos:line="341" pos:column="21">right</name> <init pos:line="341" pos:column="27">= <expr><name pos:line="341" pos:column="29">centreX</name> <op:operator pos:line="341" pos:column="37">-</op:operator> <lit:literal type="number" pos:line="341" pos:column="39">2</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="342" pos:column="17">for (<init><decl><type><name pos:line="342" pos:column="22">int</name></type> <name pos:line="342" pos:column="26">b</name><init pos:line="342" pos:column="27">=<expr><lit:literal type="number" pos:line="342" pos:column="28">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="342" pos:column="31">b</name><op:operator pos:line="342" pos:column="32">&lt;</op:operator><lit:literal type="number" pos:line="342" pos:column="33">3</lit:literal></expr>;</condition> <incr><expr><name pos:line="342" pos:column="36">b</name><op:operator pos:line="342" pos:column="37">++</op:operator></expr></incr>) <block pos:line="342" pos:column="41">{
			<expr_stmt><expr><call><name><name pos:line="343" pos:column="25">surface</name><op:operator pos:line="343" pos:column="32">-&gt;</op:operator><name pos:line="343" pos:column="34">MoveTo</name></name><argument_list pos:line="343" pos:column="40">(<argument><expr><name pos:line="343" pos:column="41">right</name> <op:operator pos:line="343" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="343" pos:column="49">4</lit:literal></expr></argument>, <argument><expr><name pos:line="343" pos:column="52">centreY</name> <op:operator pos:line="343" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="343" pos:column="62">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="344" pos:column="25">surface</name><op:operator pos:line="344" pos:column="32">-&gt;</op:operator><name pos:line="344" pos:column="34">LineTo</name></name><argument_list pos:line="344" pos:column="40">(<argument><expr><name pos:line="344" pos:column="41">right</name></expr></argument>, <argument><expr><name pos:line="344" pos:column="48">centreY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="345" pos:column="25">surface</name><op:operator pos:line="345" pos:column="32">-&gt;</op:operator><name pos:line="345" pos:column="34">LineTo</name></name><argument_list pos:line="345" pos:column="40">(<argument><expr><name pos:line="345" pos:column="41">right</name> <op:operator pos:line="345" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="345" pos:column="49">5</lit:literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="52">centreY</name> <op:operator pos:line="345" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="345" pos:column="62">5</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="346" pos:column="25">right</name> <op:operator pos:line="346" pos:column="31">+=</op:operator> <lit:literal type="number" pos:line="346" pos:column="34">4</lit:literal></expr>;</expr_stmt>
		}</block></for>
	}</block></then> <else pos:line="348" pos:column="11">else <if pos:line="348" pos:column="16">if <condition pos:line="348" pos:column="19">(<expr><name pos:line="348" pos:column="20">markType</name> <op:operator pos:line="348" pos:column="29">==</op:operator> <name pos:line="348" pos:column="32">SC_MARK_SHORTARROW</name></expr>)</condition><then pos:line="348" pos:column="51"> <block pos:line="348" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="349" pos:column="17">Point</name></type> <name><name pos:line="349" pos:column="23">pts</name><index pos:line="349" pos:column="26">[]</index></name> <init pos:line="349" pos:column="29">= <expr><block pos:line="349" pos:column="31">{
			<expr><call><name pos:line="350" pos:column="25">Point</name><argument_list pos:line="350" pos:column="30">(<argument><expr><name pos:line="350" pos:column="31">centreX</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="40">centreY</name> <op:operator pos:line="350" pos:column="48">+</op:operator> <name pos:line="350" pos:column="50">dimOn2</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="351" pos:column="25">Point</name><argument_list pos:line="351" pos:column="30">(<argument><expr><name pos:line="351" pos:column="31">centreX</name> <op:operator pos:line="351" pos:column="39">+</op:operator> <name pos:line="351" pos:column="41">dimOn2</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="49">centreY</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="352" pos:column="25">Point</name><argument_list pos:line="352" pos:column="30">(<argument><expr><name pos:line="352" pos:column="31">centreX</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="40">centreY</name> <op:operator pos:line="352" pos:column="48">-</op:operator> <name pos:line="352" pos:column="50">dimOn2</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="353" pos:column="25">Point</name><argument_list pos:line="353" pos:column="30">(<argument><expr><name pos:line="353" pos:column="31">centreX</name></expr></argument>, <argument><expr><name pos:line="353" pos:column="40">centreY</name> <op:operator pos:line="353" pos:column="48">-</op:operator> <name pos:line="353" pos:column="50">dimOn4</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="354" pos:column="25">Point</name><argument_list pos:line="354" pos:column="30">(<argument><expr><name pos:line="354" pos:column="31">centreX</name> <op:operator pos:line="354" pos:column="39">-</op:operator> <name pos:line="354" pos:column="41">dimOn4</name></expr></argument>, <argument><expr><name pos:line="354" pos:column="49">centreY</name> <op:operator pos:line="354" pos:column="57">-</op:operator> <name pos:line="354" pos:column="59">dimOn4</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="355" pos:column="25">Point</name><argument_list pos:line="355" pos:column="30">(<argument><expr><name pos:line="355" pos:column="31">centreX</name> <op:operator pos:line="355" pos:column="39">-</op:operator> <name pos:line="355" pos:column="41">dimOn4</name></expr></argument>, <argument><expr><name pos:line="355" pos:column="49">centreY</name> <op:operator pos:line="355" pos:column="57">+</op:operator> <name pos:line="355" pos:column="59">dimOn4</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="356" pos:column="25">Point</name><argument_list pos:line="356" pos:column="30">(<argument><expr><name pos:line="356" pos:column="31">centreX</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="40">centreY</name> <op:operator pos:line="356" pos:column="48">+</op:operator> <name pos:line="356" pos:column="50">dimOn4</name></expr></argument>)</argument_list></call></expr>,
			<expr><call><name pos:line="357" pos:column="25">Point</name><argument_list pos:line="357" pos:column="30">(<argument><expr><name pos:line="357" pos:column="31">centreX</name></expr></argument>, <argument><expr><name pos:line="357" pos:column="40">centreY</name> <op:operator pos:line="357" pos:column="48">+</op:operator> <name pos:line="357" pos:column="50">dimOn2</name></expr></argument>)</argument_list></call></expr>,
		}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="359" pos:column="17">surface</name><op:operator pos:line="359" pos:column="24">-&gt;</op:operator><name pos:line="359" pos:column="26">Polygon</name></name><argument_list pos:line="359" pos:column="33">(<argument><expr><name pos:line="359" pos:column="34">pts</name></expr></argument>, <argument><expr><sizeof pos:line="359" pos:column="39">sizeof<argument_list pos:line="359" pos:column="45">(<argument><expr><name pos:line="359" pos:column="46">pts</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="359" pos:column="51">/</op:operator> <sizeof pos:line="359" pos:column="53">sizeof<argument_list pos:line="359" pos:column="59">(<argument><expr><name><name pos:line="359" pos:column="60">pts</name><index pos:line="359" pos:column="63">[<expr><lit:literal type="number" pos:line="359" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
				<argument><expr><name><name pos:line="360" pos:column="33">fore</name><op:operator pos:line="360" pos:column="37">.</op:operator><name pos:line="360" pos:column="38">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="360" pos:column="49">back</name><op:operator pos:line="360" pos:column="53">.</op:operator><name pos:line="360" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="361" pos:column="11">else <if pos:line="361" pos:column="16">if <condition pos:line="361" pos:column="19">(<expr><name pos:line="361" pos:column="20">markType</name> <op:operator pos:line="361" pos:column="29">==</op:operator> <name pos:line="361" pos:column="32">SC_MARK_LEFTRECT</name></expr>)</condition><then pos:line="361" pos:column="49"> <block pos:line="361" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="362" pos:column="17">PRectangle</name></type> <name pos:line="362" pos:column="28">rcLeft</name> <init pos:line="362" pos:column="35">= <expr><name pos:line="362" pos:column="37">rcWhole</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="363" pos:column="17">rcLeft</name><op:operator pos:line="363" pos:column="23">.</op:operator><name pos:line="363" pos:column="24">right</name></name> <op:operator pos:line="363" pos:column="30">=</op:operator> <name><name pos:line="363" pos:column="32">rcLeft</name><op:operator pos:line="363" pos:column="38">.</op:operator><name pos:line="363" pos:column="39">left</name></name> <op:operator pos:line="363" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="363" pos:column="46">4</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="364" pos:column="17">surface</name><op:operator pos:line="364" pos:column="24">-&gt;</op:operator><name pos:line="364" pos:column="26">FillRectangle</name></name><argument_list pos:line="364" pos:column="39">(<argument><expr><name pos:line="364" pos:column="40">rcLeft</name></expr></argument>, <argument><expr><name><name pos:line="364" pos:column="48">back</name><op:operator pos:line="364" pos:column="52">.</op:operator><name pos:line="364" pos:column="53">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="365" pos:column="11">else <block pos:line="365" pos:column="16">{ <comment type="line" pos:line="365" pos:column="18">// SC_MARK_FULLRECT</comment>
		<expr_stmt><expr><call><name><name pos:line="366" pos:column="17">surface</name><op:operator pos:line="366" pos:column="24">-&gt;</op:operator><name pos:line="366" pos:column="26">FillRectangle</name></name><argument_list pos:line="366" pos:column="39">(<argument><expr><name pos:line="366" pos:column="40">rcWhole</name></expr></argument>, <argument><expr><name><name pos:line="366" pos:column="49">back</name><op:operator pos:line="366" pos:column="53">.</op:operator><name pos:line="366" pos:column="54">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
}</block></function>
</unit>
