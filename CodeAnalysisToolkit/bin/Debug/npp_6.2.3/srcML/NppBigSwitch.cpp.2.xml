<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\NppBigSwitch.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"TaskListDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"ImageListSet.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ShortcutMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"documentMap.h"</lit:literal></cpp:file></cpp:include>

<struct pos:line="37" pos:column="1">struct <name pos:line="37" pos:column="8">SortTaskListPred</name>
<block pos:line="38" pos:column="1">{<public type="default" pos:line="38" pos:column="2">
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">DocTabView</name> <type:modifier pos:line="39" pos:column="20">*</type:modifier></type><name><name pos:line="39" pos:column="21">_views</name><index pos:line="39" pos:column="27">[<expr><lit:literal type="number" pos:line="39" pos:column="28">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>

	<constructor><name pos:line="41" pos:column="9">SortTaskListPred</name><parameter_list pos:line="41" pos:column="25">(<param><decl><type><name pos:line="41" pos:column="26">DocTabView</name> <type:modifier pos:line="41" pos:column="37">&amp;</type:modifier></type><name pos:line="41" pos:column="38">p</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="41">DocTabView</name> <type:modifier pos:line="41" pos:column="52">&amp;</type:modifier></type><name pos:line="41" pos:column="53">s</name></decl></param>)</parameter_list>
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">_views</name><index pos:line="43" pos:column="23">[<expr><name pos:line="43" pos:column="24">MAIN_VIEW</name></expr>]</index></name> <op:operator pos:line="43" pos:column="35">=</op:operator> <op:operator pos:line="43" pos:column="37">&amp;</op:operator><name pos:line="43" pos:column="38">p</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">_views</name><index pos:line="44" pos:column="23">[<expr><name pos:line="44" pos:column="24">SUB_VIEW</name></expr>]</index></name> <op:operator pos:line="44" pos:column="34">=</op:operator> <op:operator pos:line="44" pos:column="36">&amp;</op:operator><name pos:line="44" pos:column="37">s</name></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><name pos:line="47" pos:column="9">bool</name></type> <name pos:line="47" pos:column="14">operator()</name><parameter_list pos:line="47" pos:column="24">(<param><decl><type><specifier pos:line="47" pos:column="25">const</specifier> <name pos:line="47" pos:column="31">TaskLstFnStatus</name> <type:modifier pos:line="47" pos:column="47">&amp;</type:modifier></type><name pos:line="47" pos:column="48">l</name></decl></param>, <param><decl><type><specifier pos:line="47" pos:column="51">const</specifier> <name pos:line="47" pos:column="57">TaskLstFnStatus</name> <type:modifier pos:line="47" pos:column="73">&amp;</type:modifier></type><name pos:line="47" pos:column="74">r</name></decl></param>)</parameter_list> <specifier pos:line="47" pos:column="77">const</specifier> <block pos:line="47" pos:column="83">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">BufferID</name></type> <name pos:line="48" pos:column="26">lID</name> <init pos:line="48" pos:column="30">= <expr><name><name pos:line="48" pos:column="32">_views</name><index pos:line="48" pos:column="38">[<expr><name><name pos:line="48" pos:column="39">l</name><op:operator pos:line="48" pos:column="40">.</op:operator><name pos:line="48" pos:column="41">_iView</name></name></expr>]</index></name><op:operator pos:line="48" pos:column="48">-&gt;</op:operator><call><name pos:line="48" pos:column="50">getBufferByIndex</name><argument_list pos:line="48" pos:column="66">(<argument><expr><name><name pos:line="48" pos:column="67">l</name><op:operator pos:line="48" pos:column="68">.</op:operator><name pos:line="48" pos:column="69">_docIndex</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">BufferID</name></type> <name pos:line="49" pos:column="26">rID</name> <init pos:line="49" pos:column="30">= <expr><name><name pos:line="49" pos:column="32">_views</name><index pos:line="49" pos:column="38">[<expr><name><name pos:line="49" pos:column="39">r</name><op:operator pos:line="49" pos:column="40">.</op:operator><name pos:line="49" pos:column="41">_iView</name></name></expr>]</index></name><op:operator pos:line="49" pos:column="48">-&gt;</op:operator><call><name pos:line="49" pos:column="50">getBufferByIndex</name><argument_list pos:line="49" pos:column="66">(<argument><expr><name><name pos:line="49" pos:column="67">r</name><op:operator pos:line="49" pos:column="68">.</op:operator><name pos:line="49" pos:column="69">_docIndex</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">Buffer</name> <type:modifier pos:line="50" pos:column="24">*</type:modifier></type> <name pos:line="50" pos:column="26">bufL</name> <init pos:line="50" pos:column="31">= <expr><call><name><name pos:line="50" pos:column="33">MainFileManager</name><op:operator pos:line="50" pos:column="48">-&gt;</op:operator><name pos:line="50" pos:column="50">getBufferByID</name></name><argument_list pos:line="50" pos:column="63">(<argument><expr><name pos:line="50" pos:column="64">lID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">Buffer</name> <type:modifier pos:line="51" pos:column="24">*</type:modifier></type> <name pos:line="51" pos:column="26">bufR</name> <init pos:line="51" pos:column="31">= <expr><call><name><name pos:line="51" pos:column="33">MainFileManager</name><op:operator pos:line="51" pos:column="48">-&gt;</op:operator><name pos:line="51" pos:column="50">getBufferByID</name></name><argument_list pos:line="51" pos:column="63">(<argument><expr><name pos:line="51" pos:column="64">rID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:line="52" pos:column="17">return <expr><call><name><name pos:line="52" pos:column="24">bufL</name><op:operator pos:line="52" pos:column="28">-&gt;</op:operator><name pos:line="52" pos:column="30">getRecentTag</name></name><argument_list pos:line="52" pos:column="42">()</argument_list></call> <op:operator pos:line="52" pos:column="45">&gt;</op:operator> <call><name><name pos:line="52" pos:column="47">bufR</name><op:operator pos:line="52" pos:column="51">-&gt;</op:operator><name pos:line="52" pos:column="53">getRecentTag</name></name><argument_list pos:line="52" pos:column="65">()</argument_list></call></expr>;</return>
	}</block></function>
</public>}</block>;</struct>


<function><type><name pos:line="57" pos:column="1">LRESULT</name> <name pos:line="57" pos:column="9">CALLBACK</name></type> <name><name pos:line="57" pos:column="18">Notepad_plus_Window</name><op:operator pos:line="57" pos:column="37">::</op:operator><name pos:line="57" pos:column="39">Notepad_plus_Proc</name></name><parameter_list pos:line="57" pos:column="56">(<param><decl><type><name pos:line="57" pos:column="57">HWND</name></type> <name pos:line="57" pos:column="62">hwnd</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="68">UINT</name></type> <name pos:line="57" pos:column="73">Message</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="82">WPARAM</name></type> <name pos:line="57" pos:column="89">wParam</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="97">LPARAM</name></type> <name pos:line="57" pos:column="104">lParam</name></decl></param>)</parameter_list>
<block pos:line="58" pos:column="1">{
	<switch pos:line="59" pos:column="9">switch<condition pos:line="59" pos:column="15">(<expr><name pos:line="59" pos:column="16">Message</name></expr>)</condition>
	<block pos:line="60" pos:column="9">{
		<case pos:line="61" pos:column="17">case <expr><name pos:line="61" pos:column="22">WM_NCCREATE</name></expr> :	<comment type="line" pos:line="61" pos:column="41">// First message we get the ptr of instantiated object</comment>
							<comment type="line" pos:line="62" pos:column="57">// then stock it into GWL_USERDATA index in order to retrieve afterward</comment>
		<block pos:line="63" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">Notepad_plus_Window</name> <type:modifier pos:line="64" pos:column="45">*</type:modifier></type><name pos:line="64" pos:column="46">pM30ide</name> <init pos:line="64" pos:column="54">= <expr><op:operator pos:line="64" pos:column="56">(</op:operator><name pos:line="64" pos:column="57">Notepad_plus_Window</name> <op:operator pos:line="64" pos:column="77">*</op:operator><op:operator pos:line="64" pos:column="78">)</op:operator><op:operator pos:line="64" pos:column="79">(</op:operator><op:operator pos:line="64" pos:column="80">(</op:operator><op:operator pos:line="64" pos:column="81">(</op:operator><name pos:line="64" pos:column="82">LPCREATESTRUCT</name><op:operator pos:line="64" pos:column="96">)</op:operator><name pos:line="64" pos:column="97">lParam</name><op:operator pos:line="64" pos:column="103">)</op:operator><op:operator pos:line="64" pos:column="104">-&gt;</op:operator><name pos:line="64" pos:column="106">lpCreateParams</name><op:operator pos:line="64" pos:column="120">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="65" pos:column="25">pM30ide</name><op:operator pos:line="65" pos:column="32">-&gt;</op:operator><name pos:line="65" pos:column="34">_hSelf</name></name> <op:operator pos:line="65" pos:column="41">=</op:operator> <name pos:line="65" pos:column="43">hwnd</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="66" pos:column="25">::</op:operator><name pos:line="66" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="66" pos:column="43">(<argument><expr><name pos:line="66" pos:column="44">hwnd</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="66" pos:column="65">(</op:operator><name pos:line="66" pos:column="66">LONG_PTR</name><op:operator pos:line="66" pos:column="74">)</op:operator><name pos:line="66" pos:column="75">pM30ide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<return pos:line="68" pos:column="25">return <expr><name pos:line="68" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><default pos:line="71" pos:column="17">default :
		<block pos:line="72" pos:column="17">{
			<return pos:line="73" pos:column="25">return <expr><op:operator pos:line="73" pos:column="32">(</op:operator><op:operator pos:line="73" pos:column="33">(</op:operator><name pos:line="73" pos:column="34">Notepad_plus_Window</name> <op:operator pos:line="73" pos:column="54">*</op:operator><op:operator pos:line="73" pos:column="55">)</op:operator><call><name><op:operator pos:line="73" pos:column="56">::</op:operator><name pos:line="73" pos:column="58">GetWindowLongPtr</name></name><argument_list pos:line="73" pos:column="74">(<argument><expr><name pos:line="73" pos:column="75">hwnd</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="81">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="73" pos:column="94">)</op:operator><op:operator pos:line="73" pos:column="95">-&gt;</op:operator><call><name pos:line="73" pos:column="97">runProc</name><argument_list pos:line="73" pos:column="104">(<argument><expr><name pos:line="73" pos:column="105">hwnd</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="111">Message</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="120">wParam</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="128">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="78" pos:column="1">LRESULT</name></type> <name><name pos:line="78" pos:column="9">Notepad_plus_Window</name><op:operator pos:line="78" pos:column="28">::</op:operator><name pos:line="78" pos:column="30">runProc</name></name><parameter_list pos:line="78" pos:column="37">(<param><decl><type><name pos:line="78" pos:column="38">HWND</name></type> <name pos:line="78" pos:column="43">hwnd</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="49">UINT</name></type> <name pos:line="78" pos:column="54">Message</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="63">WPARAM</name></type> <name pos:line="78" pos:column="70">wParam</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="78">LPARAM</name></type> <name pos:line="78" pos:column="85">lParam</name></decl></param>)</parameter_list>
<block pos:line="79" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">LRESULT</name></type> <name pos:line="80" pos:column="17">result</name> <init pos:line="80" pos:column="24">= <expr><name pos:line="80" pos:column="26">FALSE</name></expr></init></decl>;</decl_stmt>
	<switch pos:line="81" pos:column="9">switch <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="82" pos:column="9">{
		<case pos:line="83" pos:column="17">case <expr><name pos:line="83" pos:column="22">WM_CREATE</name></expr>:
		<block pos:line="84" pos:column="17">{
			<try pos:line="85" pos:column="25">try<block pos:line="85" pos:column="28">{
				<expr_stmt><expr><name><name pos:line="86" pos:column="33">_notepad_plus_plus_core</name><op:operator pos:line="86" pos:column="56">.</op:operator><name pos:line="86" pos:column="57">_pPublicInterface</name></name> <op:operator pos:line="86" pos:column="75">=</op:operator> <name pos:line="86" pos:column="77">this</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="87" pos:column="33">result</name> <op:operator pos:line="87" pos:column="40">=</op:operator> <call><name><name pos:line="87" pos:column="42">_notepad_plus_plus_core</name><op:operator pos:line="87" pos:column="65">.</op:operator><name pos:line="87" pos:column="66">init</name></name><argument_list pos:line="87" pos:column="70">(<argument><expr><name pos:line="87" pos:column="71">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block> <catch pos:line="88" pos:column="27">catch <parameter_list pos:line="88" pos:column="33">(<param><decl><type><name><name pos:line="88" pos:column="34">std</name><op:operator pos:line="88" pos:column="37">::</op:operator><name pos:line="88" pos:column="39">exception</name></name></type> <name pos:line="88" pos:column="49">ex</name></decl></param>)</parameter_list> <block pos:line="88" pos:column="53">{
				<expr_stmt><expr><call><name><op:operator pos:line="89" pos:column="33">::</op:operator><name pos:line="89" pos:column="35">MessageBoxA</name></name><argument_list pos:line="89" pos:column="46">(<argument><expr><call><name><name pos:line="89" pos:column="47">_notepad_plus_plus_core</name><op:operator pos:line="89" pos:column="70">.</op:operator><name pos:line="89" pos:column="71">_pPublicInterface</name><op:operator pos:line="89" pos:column="88">-&gt;</op:operator><name pos:line="89" pos:column="90">getHSelf</name></name><argument_list pos:line="89" pos:column="98">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="89" pos:column="102">ex</name><op:operator pos:line="89" pos:column="104">.</op:operator><name pos:line="89" pos:column="105">what</name></name><argument_list pos:line="89" pos:column="109">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="89" pos:column="113">"Exception On WM_CREATE"</lit:literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="139">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="90" pos:column="33">exit</name><argument_list pos:line="90" pos:column="37">(<argument><expr><op:operator pos:line="90" pos:column="38">-</op:operator><lit:literal type="number" pos:line="90" pos:column="39">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block>
		<break pos:line="93" pos:column="17">break;</break>
		</case><default pos:line="94" pos:column="17">default:    
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><name pos:line="95" pos:column="29">this</name></expr>)</condition><then pos:line="95" pos:column="34">
				<return pos:line="96" pos:column="33">return <expr><call><name><name pos:line="96" pos:column="40">_notepad_plus_plus_core</name><op:operator pos:line="96" pos:column="63">.</op:operator><name pos:line="96" pos:column="64">process</name></name><argument_list pos:line="96" pos:column="71">(<argument><expr><name pos:line="96" pos:column="72">hwnd</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="78">Message</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="87">wParam</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="95">lParam</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
	</default>}</block></switch>
	<return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">result</name></expr>;</return>
}</block></function>


<function><type><name pos:line="102" pos:column="1">LRESULT</name></type> <name><name pos:line="102" pos:column="9">Notepad_plus</name><op:operator pos:line="102" pos:column="21">::</op:operator><name pos:line="102" pos:column="23">process</name></name><parameter_list pos:line="102" pos:column="30">(<param><decl><type><name pos:line="102" pos:column="31">HWND</name></type> <name pos:line="102" pos:column="36">hwnd</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="42">UINT</name></type> <name pos:line="102" pos:column="47">Message</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="56">WPARAM</name></type> <name pos:line="102" pos:column="63">wParam</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="71">LPARAM</name></type> <name pos:line="102" pos:column="78">lParam</name></decl></param>)</parameter_list>
<block pos:line="103" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="104" pos:column="9">LRESULT</name></type> <name pos:line="104" pos:column="17">result</name> <init pos:line="104" pos:column="24">= <expr><name pos:line="104" pos:column="26">FALSE</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="106" pos:column="9">NppParameters</name> <type:modifier pos:line="106" pos:column="23">*</type:modifier></type><name pos:line="106" pos:column="24">pNppParam</name> <init pos:line="106" pos:column="34">= <expr><call><name><name pos:line="106" pos:column="36">NppParameters</name><op:operator pos:line="106" pos:column="49">::</op:operator><name pos:line="106" pos:column="51">getInstance</name></name><argument_list pos:line="106" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<switch pos:line="107" pos:column="9">switch <condition pos:line="107" pos:column="16">(<expr><name pos:line="107" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="108" pos:column="9">{
		<case pos:line="109" pos:column="17">case <expr><name pos:line="109" pos:column="22">WM_NCACTIVATE</name></expr>:
		<block pos:line="110" pos:column="17">{
			<comment type="line" pos:line="111" pos:column="25">// Note: lParam is -1 to prevent endless loops of calls</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="112" pos:column="25">::</op:operator><name pos:line="112" pos:column="27">SendMessage</name></name><argument_list pos:line="112" pos:column="38">(<argument><expr><call><name><name pos:line="112" pos:column="39">_dockingManager</name><op:operator pos:line="112" pos:column="54">.</op:operator><name pos:line="112" pos:column="55">getHSelf</name></name><argument_list pos:line="112" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="112" pos:column="67">WM_NCACTIVATE</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="82">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="112" pos:column="90">(</op:operator><name pos:line="112" pos:column="91">LPARAM</name><op:operator pos:line="112" pos:column="97">)</op:operator><op:operator pos:line="112" pos:column="98">-</op:operator><lit:literal type="number" pos:line="112" pos:column="99">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="113" pos:column="25">return <expr><call><name><op:operator pos:line="113" pos:column="32">::</op:operator><name pos:line="113" pos:column="34">DefWindowProc</name></name><argument_list pos:line="113" pos:column="47">(<argument><expr><name pos:line="113" pos:column="48">hwnd</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="54">Message</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="63">wParam</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="71">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="116" pos:column="17">case <expr><name pos:line="116" pos:column="22">WM_DRAWITEM</name></expr> :
		<block pos:line="117" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="118" pos:column="25">DRAWITEMSTRUCT</name> <type:modifier pos:line="118" pos:column="40">*</type:modifier></type><name pos:line="118" pos:column="41">dis</name> <init pos:line="118" pos:column="45">= <expr><op:operator pos:line="118" pos:column="47">(</op:operator><name pos:line="118" pos:column="48">DRAWITEMSTRUCT</name> <op:operator pos:line="118" pos:column="63">*</op:operator><op:operator pos:line="118" pos:column="64">)</op:operator><name pos:line="118" pos:column="65">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="119" pos:column="25">if <condition pos:line="119" pos:column="28">(<expr><name><name pos:line="119" pos:column="29">dis</name><op:operator pos:line="119" pos:column="32">-&gt;</op:operator><name pos:line="119" pos:column="34">CtlType</name></name> <op:operator pos:line="119" pos:column="42">==</op:operator> <name pos:line="119" pos:column="45">ODT_TAB</name></expr>)</condition><then pos:line="119" pos:column="53">
			<block pos:line="120" pos:column="25">{
				<return pos:line="121" pos:column="33">return <expr><call><name><op:operator pos:line="121" pos:column="40">::</op:operator><name pos:line="121" pos:column="42">SendMessage</name></name><argument_list pos:line="121" pos:column="53">(<argument><expr><name><name pos:line="121" pos:column="54">dis</name><op:operator pos:line="121" pos:column="57">-&gt;</op:operator><name pos:line="121" pos:column="59">hwndItem</name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="69">WM_DRAWITEM</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="82">wParam</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="90">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
		}</block>

		</case><case pos:line="125" pos:column="17">case <expr><name pos:line="125" pos:column="22">WM_DOCK_USERDEFINE_DLG</name></expr>:
		<block pos:line="126" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="127" pos:column="25">dockUserDlg</name><argument_list pos:line="127" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="128" pos:column="25">return <expr><name pos:line="128" pos:column="32">TRUE</name></expr>;</return>
		}</block>

        </case><case pos:line="131" pos:column="9">case <expr><name pos:line="131" pos:column="14">WM_UNDOCK_USERDEFINE_DLG</name></expr>:
		<block pos:line="132" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">undockUserDlg</name><argument_list pos:line="133" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="134" pos:column="25">return <expr><name pos:line="134" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="137" pos:column="17">case <expr><name pos:line="137" pos:column="22">WM_REMOVE_USERLANG</name></expr>:
		<block pos:line="138" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="139" pos:column="25">TCHAR</name> <type:modifier pos:line="139" pos:column="31">*</type:modifier></type><name pos:line="139" pos:column="32">userLangName</name> <init pos:line="139" pos:column="45">= <expr><op:operator pos:line="139" pos:column="47">(</op:operator><name pos:line="139" pos:column="48">TCHAR</name> <op:operator pos:line="139" pos:column="54">*</op:operator><op:operator pos:line="139" pos:column="55">)</op:operator><name pos:line="139" pos:column="56">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><op:operator pos:line="140" pos:column="29">!</op:operator><name pos:line="140" pos:column="30">userLangName</name> <op:operator pos:line="140" pos:column="43">||</op:operator> <op:operator pos:line="140" pos:column="46">!</op:operator><name><name pos:line="140" pos:column="47">userLangName</name><index pos:line="140" pos:column="59">[<expr><lit:literal type="number" pos:line="140" pos:column="60">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="140" pos:column="63">
				<return pos:line="141" pos:column="33">return <expr><name pos:line="141" pos:column="40">FALSE</name></expr>;</return></then></if>
            <function_decl><type><name pos:line="142" pos:column="13">generic_string</name></type> <name pos:line="142" pos:column="28">name</name><parameter_list pos:line="142" pos:column="32">(<param><decl><type><name pos:line="142" pos:column="33">userLangName</name></type></decl></param>)</parameter_list>;</function_decl>

			<comment type="line" pos:line="144" pos:column="25">//loop through buffers and reset the language (L_USER, TEXT("")) if (L_USER, name)</comment>
			<decl_stmt><decl><type><name pos:line="145" pos:column="25">Buffer</name> <type:modifier pos:line="145" pos:column="32">*</type:modifier></type> <name pos:line="145" pos:column="34">buf</name></decl>;</decl_stmt>
			<for pos:line="146" pos:column="25">for(<init><decl><type><name pos:line="146" pos:column="29">int</name></type> <name pos:line="146" pos:column="33">i</name> <init pos:line="146" pos:column="35">= <expr><lit:literal type="number" pos:line="146" pos:column="37">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="146" pos:column="40">i</name> <op:operator pos:line="146" pos:column="42">&lt;</op:operator> <call><name><name pos:line="146" pos:column="44">MainFileManager</name><op:operator pos:line="146" pos:column="59">-&gt;</op:operator><name pos:line="146" pos:column="61">getNrBuffers</name></name><argument_list pos:line="146" pos:column="73">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="146" pos:column="77">i</name><op:operator pos:line="146" pos:column="78">++</op:operator></expr></incr>)
			<block pos:line="147" pos:column="25">{
				<expr_stmt><expr><name pos:line="148" pos:column="33">buf</name> <op:operator pos:line="148" pos:column="37">=</op:operator> <call><name><name pos:line="148" pos:column="39">MainFileManager</name><op:operator pos:line="148" pos:column="54">-&gt;</op:operator><name pos:line="148" pos:column="56">getBufferByIndex</name></name><argument_list pos:line="148" pos:column="72">(<argument><expr><name pos:line="148" pos:column="73">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="149" pos:column="33">if <condition pos:line="149" pos:column="36">(<expr><call><name><name pos:line="149" pos:column="37">buf</name><op:operator pos:line="149" pos:column="40">-&gt;</op:operator><name pos:line="149" pos:column="42">getLangType</name></name><argument_list pos:line="149" pos:column="53">()</argument_list></call> <op:operator pos:line="149" pos:column="56">==</op:operator> <name pos:line="149" pos:column="59">L_USER</name> <op:operator pos:line="149" pos:column="66">&amp;&amp;</op:operator> <name pos:line="149" pos:column="69">name</name> <op:operator pos:line="149" pos:column="74">==</op:operator> <call><name><name pos:line="149" pos:column="77">buf</name><op:operator pos:line="149" pos:column="80">-&gt;</op:operator><name pos:line="149" pos:column="82">getUserDefineLangName</name></name><argument_list pos:line="149" pos:column="103">()</argument_list></call></expr>)</condition><then pos:line="149" pos:column="106">
					<expr_stmt><expr><call><name><name pos:line="150" pos:column="41">buf</name><op:operator pos:line="150" pos:column="44">-&gt;</op:operator><name pos:line="150" pos:column="46">setLangType</name></name><argument_list pos:line="150" pos:column="57">(<argument><expr><name pos:line="150" pos:column="58">L_USER</name></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="66">TEXT</name><argument_list pos:line="150" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="71">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></for>
			<return pos:line="152" pos:column="25">return <expr><name pos:line="152" pos:column="32">TRUE</name></expr>;</return>
		}</block>

        </case><case pos:line="155" pos:column="9">case <expr><name pos:line="155" pos:column="14">WM_RENAME_USERLANG</name></expr>:
		<block pos:line="156" pos:column="17">{
			<if pos:line="157" pos:column="25">if <condition pos:line="157" pos:column="28">(<expr><op:operator pos:line="157" pos:column="29">!</op:operator><name pos:line="157" pos:column="30">lParam</name> <op:operator pos:line="157" pos:column="37">||</op:operator> <op:operator pos:line="157" pos:column="40">!</op:operator><op:operator pos:line="157" pos:column="41">(</op:operator><op:operator pos:line="157" pos:column="42">(</op:operator><op:operator pos:line="157" pos:column="43">(</op:operator><name pos:line="157" pos:column="44">TCHAR</name> <op:operator pos:line="157" pos:column="50">*</op:operator><op:operator pos:line="157" pos:column="51">)</op:operator><name pos:line="157" pos:column="52">lParam</name><op:operator pos:line="157" pos:column="58">)</op:operator><index pos:line="157" pos:column="59">[<expr><lit:literal type="number" pos:line="157" pos:column="60">0</lit:literal></expr>]</index><op:operator pos:line="157" pos:column="62">)</op:operator> <op:operator pos:line="157" pos:column="64">||</op:operator> <op:operator pos:line="157" pos:column="67">!</op:operator><name pos:line="157" pos:column="68">wParam</name> <op:operator pos:line="157" pos:column="75">||</op:operator> <op:operator pos:line="157" pos:column="78">!</op:operator><op:operator pos:line="157" pos:column="79">(</op:operator><op:operator pos:line="157" pos:column="80">(</op:operator><op:operator pos:line="157" pos:column="81">(</op:operator><name pos:line="157" pos:column="82">TCHAR</name> <op:operator pos:line="157" pos:column="88">*</op:operator><op:operator pos:line="157" pos:column="89">)</op:operator><name pos:line="157" pos:column="90">wParam</name><op:operator pos:line="157" pos:column="96">)</op:operator><index pos:line="157" pos:column="97">[<expr><lit:literal type="number" pos:line="157" pos:column="98">0</lit:literal></expr>]</index><op:operator pos:line="157" pos:column="100">)</op:operator></expr>)</condition><then pos:line="157" pos:column="102">
				<return pos:line="158" pos:column="33">return <expr><name pos:line="158" pos:column="40">FALSE</name></expr>;</return></then></if>

            <decl_stmt><decl><type><name pos:line="160" pos:column="13">generic_string</name></type> <name pos:line="160" pos:column="28">oldName</name><argument_list pos:line="160" pos:column="35">(<argument><expr><op:operator pos:line="160" pos:column="36">(</op:operator><name pos:line="160" pos:column="37">TCHAR</name> <op:operator pos:line="160" pos:column="43">*</op:operator><op:operator pos:line="160" pos:column="44">)</op:operator><name pos:line="160" pos:column="45">lParam</name></expr></argument>)</argument_list></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="161" pos:column="25">generic_string</name></type> <name pos:line="161" pos:column="40">newName</name><argument_list pos:line="161" pos:column="47">(<argument><expr><op:operator pos:line="161" pos:column="48">(</op:operator><name pos:line="161" pos:column="49">TCHAR</name> <op:operator pos:line="161" pos:column="55">*</op:operator><op:operator pos:line="161" pos:column="56">)</op:operator><name pos:line="161" pos:column="57">wParam</name></expr></argument>)</argument_list></decl>;</decl_stmt>

			<comment type="line" pos:line="163" pos:column="25">//loop through buffers and reset the language (L_USER, newName) if (L_USER, oldName)</comment>
			<decl_stmt><decl><type><name pos:line="164" pos:column="25">Buffer</name> <type:modifier pos:line="164" pos:column="32">*</type:modifier></type> <name pos:line="164" pos:column="34">buf</name></decl>;</decl_stmt>
			<for pos:line="165" pos:column="25">for(<init><decl><type><name pos:line="165" pos:column="29">int</name></type> <name pos:line="165" pos:column="33">i</name> <init pos:line="165" pos:column="35">= <expr><lit:literal type="number" pos:line="165" pos:column="37">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="165" pos:column="40">i</name> <op:operator pos:line="165" pos:column="42">&lt;</op:operator> <call><name><name pos:line="165" pos:column="44">MainFileManager</name><op:operator pos:line="165" pos:column="59">-&gt;</op:operator><name pos:line="165" pos:column="61">getNrBuffers</name></name><argument_list pos:line="165" pos:column="73">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="165" pos:column="77">i</name><op:operator pos:line="165" pos:column="78">++</op:operator></expr></incr>)
			<block pos:line="166" pos:column="25">{
				<expr_stmt><expr><name pos:line="167" pos:column="33">buf</name> <op:operator pos:line="167" pos:column="37">=</op:operator> <call><name><name pos:line="167" pos:column="39">MainFileManager</name><op:operator pos:line="167" pos:column="54">-&gt;</op:operator><name pos:line="167" pos:column="56">getBufferByIndex</name></name><argument_list pos:line="167" pos:column="72">(<argument><expr><name pos:line="167" pos:column="73">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="168" pos:column="33">if <condition pos:line="168" pos:column="36">(<expr><call><name><name pos:line="168" pos:column="37">buf</name><op:operator pos:line="168" pos:column="40">-&gt;</op:operator><name pos:line="168" pos:column="42">getLangType</name></name><argument_list pos:line="168" pos:column="53">()</argument_list></call> <op:operator pos:line="168" pos:column="56">==</op:operator> <name pos:line="168" pos:column="59">L_USER</name> <op:operator pos:line="168" pos:column="66">&amp;&amp;</op:operator> <name pos:line="168" pos:column="69">oldName</name> <op:operator pos:line="168" pos:column="77">==</op:operator> <call><name><name pos:line="168" pos:column="80">buf</name><op:operator pos:line="168" pos:column="83">-&gt;</op:operator><name pos:line="168" pos:column="85">getUserDefineLangName</name></name><argument_list pos:line="168" pos:column="106">()</argument_list></call></expr>)</condition><then pos:line="168" pos:column="109">
					<expr_stmt><expr><call><name><name pos:line="169" pos:column="41">buf</name><op:operator pos:line="169" pos:column="44">-&gt;</op:operator><name pos:line="169" pos:column="46">setLangType</name></name><argument_list pos:line="169" pos:column="57">(<argument><expr><name pos:line="169" pos:column="58">L_USER</name></expr></argument>, <argument><expr><call><name><name pos:line="169" pos:column="66">newName</name><op:operator pos:line="169" pos:column="73">.</op:operator><name pos:line="169" pos:column="74">c_str</name></name><argument_list pos:line="169" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></for>
			<return pos:line="171" pos:column="25">return <expr><name pos:line="171" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="174" pos:column="17">case <expr><name pos:line="174" pos:column="22">WM_CLOSE_USERDEFINE_DLG</name></expr> :
		<block pos:line="175" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="176" pos:column="25">checkMenuItem</name><argument_list pos:line="176" pos:column="38">(<argument><expr><name pos:line="176" pos:column="39">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="176" pos:column="58">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="177" pos:column="25">_toolBar</name><op:operator pos:line="177" pos:column="33">.</op:operator><name pos:line="177" pos:column="34">setCheck</name></name><argument_list pos:line="177" pos:column="42">(<argument><expr><name pos:line="177" pos:column="43">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="177" pos:column="62">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="178" pos:column="25">return <expr><name pos:line="178" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="181" pos:column="17">case <expr><name pos:line="181" pos:column="22">WM_REPLACEALL_INOPENEDDOC</name></expr> :
		<block pos:line="182" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="183" pos:column="25">replaceAllFiles</name><argument_list pos:line="183" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="184" pos:column="25">return <expr><name pos:line="184" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="187" pos:column="17">case <expr><name pos:line="187" pos:column="22">WM_FINDALL_INOPENEDDOC</name></expr> :
		<block pos:line="188" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="189" pos:column="25">findInOpenedFiles</name><argument_list pos:line="189" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="190" pos:column="25">return <expr><name pos:line="190" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="193" pos:column="17">case <expr><name pos:line="193" pos:column="22">WM_FINDALL_INCURRENTDOC</name></expr> :
		<block pos:line="194" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="195" pos:column="25">findInCurrentFile</name><argument_list pos:line="195" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="196" pos:column="25">return <expr><name pos:line="196" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		
		</case><case pos:line="199" pos:column="17">case <expr><name pos:line="199" pos:column="22">WM_FINDINFILES</name></expr> :
		<block pos:line="200" pos:column="17">{
			<return pos:line="201" pos:column="25">return <expr><call><name pos:line="201" pos:column="32">findInFiles</name><argument_list pos:line="201" pos:column="43">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="204" pos:column="17">case <expr><name pos:line="204" pos:column="22">WM_REPLACEINFILES</name></expr> :
		<block pos:line="205" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="206" pos:column="25">replaceInFiles</name><argument_list pos:line="206" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="207" pos:column="25">return <expr><name pos:line="207" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="209" pos:column="17">case <expr><name pos:line="209" pos:column="22">NPPM_LAUNCHFINDINFILESDLG</name></expr> :
		<block pos:line="210" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="211" pos:column="25">const</specifier> <name pos:line="211" pos:column="31">int</name></type> <name pos:line="211" pos:column="35">strSize</name> <init pos:line="211" pos:column="43">= <expr><name pos:line="211" pos:column="45">FINDREPLACE_MAXLENGTH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="212" pos:column="25">TCHAR</name></type> <name><name pos:line="212" pos:column="31">str</name><index pos:line="212" pos:column="34">[<expr><name pos:line="212" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="214" pos:column="25">bool</name></type> <name pos:line="214" pos:column="30">isFirstTime</name> <init pos:line="214" pos:column="42">= <expr><op:operator pos:line="214" pos:column="44">!</op:operator><call><name><name pos:line="214" pos:column="45">_findReplaceDlg</name><op:operator pos:line="214" pos:column="60">.</op:operator><name pos:line="214" pos:column="61">isCreated</name></name><argument_list pos:line="214" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="215" pos:column="25">_findReplaceDlg</name><op:operator pos:line="215" pos:column="40">.</op:operator><name pos:line="215" pos:column="41">doDialog</name></name><argument_list pos:line="215" pos:column="49">(<argument><expr><name pos:line="215" pos:column="50">FIND_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="215" pos:column="60">_nativeLangSpeaker</name><op:operator pos:line="215" pos:column="78">.</op:operator><name pos:line="215" pos:column="79">isRTL</name></name><argument_list pos:line="215" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="217" pos:column="25">_pEditView</name><op:operator pos:line="217" pos:column="35">-&gt;</op:operator><name pos:line="217" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="217" pos:column="59">(<argument><expr><name pos:line="217" pos:column="60">str</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="65">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="218" pos:column="25">_findReplaceDlg</name><op:operator pos:line="218" pos:column="40">.</op:operator><name pos:line="218" pos:column="41">setSearchText</name></name><argument_list pos:line="218" pos:column="54">(<argument><expr><name pos:line="218" pos:column="55">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="219" pos:column="25">if <condition pos:line="219" pos:column="28">(<expr><name pos:line="219" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="219" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="220" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="220" pos:column="51">.</op:operator><name pos:line="220" pos:column="52">changeDlgLang</name></name><argument_list pos:line="220" pos:column="65">(<argument><expr><call><name><name pos:line="220" pos:column="66">_findReplaceDlg</name><op:operator pos:line="220" pos:column="81">.</op:operator><name pos:line="220" pos:column="82">getHSelf</name></name><argument_list pos:line="220" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="220" pos:column="94">"Find"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="221" pos:column="25">_findReplaceDlg</name><op:operator pos:line="221" pos:column="40">.</op:operator><name pos:line="221" pos:column="41">launchFindInFilesDlg</name></name><argument_list pos:line="221" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="222" pos:column="25">setFindReplaceFolderFilter</name><argument_list pos:line="222" pos:column="51">(<argument><expr><op:operator pos:line="222" pos:column="52">(</op:operator>const <name pos:line="222" pos:column="59">TCHAR</name><op:operator pos:line="222" pos:column="64">*</op:operator><op:operator pos:line="222" pos:column="65">)</op:operator> <name pos:line="222" pos:column="67">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="222" pos:column="75">(</op:operator>const <name pos:line="222" pos:column="82">TCHAR</name><op:operator pos:line="222" pos:column="87">*</op:operator><op:operator pos:line="222" pos:column="88">)</op:operator> <name pos:line="222" pos:column="90">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="223" pos:column="25">return <expr><name pos:line="223" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="226" pos:column="17">case <expr><name pos:line="226" pos:column="22">NPPM_DOOPEN</name></expr>:
		</case><case pos:line="227" pos:column="17">case <expr><name pos:line="227" pos:column="22">WM_DOOPEN</name></expr>:
		<block pos:line="228" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="229" pos:column="25">BufferID</name></type> <name pos:line="229" pos:column="34">id</name> <init pos:line="229" pos:column="37">= <expr><call><name pos:line="229" pos:column="39">doOpen</name><argument_list pos:line="229" pos:column="45">(<argument><expr><op:operator pos:line="229" pos:column="46">(</op:operator>const <name pos:line="229" pos:column="53">TCHAR</name> <op:operator pos:line="229" pos:column="59">*</op:operator><op:operator pos:line="229" pos:column="60">)</op:operator><name pos:line="229" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="230" pos:column="25">if <condition pos:line="230" pos:column="28">(<expr><name pos:line="230" pos:column="29">id</name> <op:operator pos:line="230" pos:column="32">!=</op:operator> <name pos:line="230" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="230" pos:column="50">
			<block pos:line="231" pos:column="25">{
				<return pos:line="232" pos:column="33">return <expr><call><name pos:line="232" pos:column="40">switchToFile</name><argument_list pos:line="232" pos:column="52">(<argument><expr><name pos:line="232" pos:column="53">id</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
		}</block>
		<break pos:line="235" pos:column="17">break;</break>

		</case><case pos:line="237" pos:column="17">case <expr><name pos:line="237" pos:column="22">NPPM_INTERNAL_SETFILENAME</name></expr>:
		<block pos:line="238" pos:column="17">{
			<if pos:line="239" pos:column="25">if <condition pos:line="239" pos:column="28">(<expr><op:operator pos:line="239" pos:column="29">!</op:operator><name pos:line="239" pos:column="30">lParam</name> <op:operator pos:line="239" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="239" pos:column="40">!</op:operator><name pos:line="239" pos:column="41">wParam</name></expr>)</condition><then pos:line="239" pos:column="48">
				<return pos:line="240" pos:column="33">return <expr><name pos:line="240" pos:column="40">FALSE</name></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="241" pos:column="25">BufferID</name></type> <name pos:line="241" pos:column="34">id</name> <init pos:line="241" pos:column="37">= <expr><op:operator pos:line="241" pos:column="39">(</op:operator><name pos:line="241" pos:column="40">BufferID</name><op:operator pos:line="241" pos:column="48">)</op:operator><name pos:line="241" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="242" pos:column="25">Buffer</name> <type:modifier pos:line="242" pos:column="32">*</type:modifier></type> <name pos:line="242" pos:column="34">b</name> <init pos:line="242" pos:column="36">= <expr><call><name><name pos:line="242" pos:column="38">MainFileManager</name><op:operator pos:line="242" pos:column="53">-&gt;</op:operator><name pos:line="242" pos:column="55">getBufferByID</name></name><argument_list pos:line="242" pos:column="68">(<argument><expr><name pos:line="242" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="243" pos:column="25">if <condition pos:line="243" pos:column="28">(<expr><name pos:line="243" pos:column="29">b</name> <op:operator pos:line="243" pos:column="31">&amp;&amp;</op:operator> <call><name><name pos:line="243" pos:column="34">b</name><op:operator pos:line="243" pos:column="35">-&gt;</op:operator><name pos:line="243" pos:column="37">getStatus</name></name><argument_list pos:line="243" pos:column="46">()</argument_list></call> <op:operator pos:line="243" pos:column="49">==</op:operator> <name pos:line="243" pos:column="52">DOC_UNNAMED</name></expr>)</condition><then pos:line="243" pos:column="64"> <block pos:line="243" pos:column="65">{
				<expr_stmt><expr><call><name><name pos:line="244" pos:column="33">b</name><op:operator pos:line="244" pos:column="34">-&gt;</op:operator><name pos:line="244" pos:column="36">setFileName</name></name><argument_list pos:line="244" pos:column="47">(<argument><expr><op:operator pos:line="244" pos:column="48">(</op:operator>const <name pos:line="244" pos:column="55">TCHAR</name><op:operator pos:line="244" pos:column="60">*</op:operator><op:operator pos:line="244" pos:column="61">)</op:operator><name pos:line="244" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="245" pos:column="33">return <expr><name pos:line="245" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			<return pos:line="247" pos:column="25">return <expr><name pos:line="247" pos:column="32">FALSE</name></expr>;</return>
		}</block>
		<break pos:line="249" pos:column="17">break;</break>

		</case><case pos:line="251" pos:column="17">case <expr><name pos:line="251" pos:column="22">NPPM_GETBUFFERLANGTYPE</name></expr>:
		<block pos:line="252" pos:column="17">{
			<if pos:line="253" pos:column="25">if <condition pos:line="253" pos:column="28">(<expr><op:operator pos:line="253" pos:column="29">!</op:operator><name pos:line="253" pos:column="30">wParam</name></expr>)</condition><then pos:line="253" pos:column="37">
				<return pos:line="254" pos:column="33">return <expr><op:operator pos:line="254" pos:column="40">-</op:operator><lit:literal type="number" pos:line="254" pos:column="41">1</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="255" pos:column="25">BufferID</name></type> <name pos:line="255" pos:column="34">id</name> <init pos:line="255" pos:column="37">= <expr><op:operator pos:line="255" pos:column="39">(</op:operator><name pos:line="255" pos:column="40">BufferID</name><op:operator pos:line="255" pos:column="48">)</op:operator><name pos:line="255" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="256" pos:column="25">Buffer</name> <type:modifier pos:line="256" pos:column="32">*</type:modifier></type> <name pos:line="256" pos:column="34">b</name> <init pos:line="256" pos:column="36">= <expr><call><name><name pos:line="256" pos:column="38">MainFileManager</name><op:operator pos:line="256" pos:column="53">-&gt;</op:operator><name pos:line="256" pos:column="55">getBufferByID</name></name><argument_list pos:line="256" pos:column="68">(<argument><expr><name pos:line="256" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="257" pos:column="25">return <expr><call><name><name pos:line="257" pos:column="32">b</name><op:operator pos:line="257" pos:column="33">-&gt;</op:operator><name pos:line="257" pos:column="35">getLangType</name></name><argument_list pos:line="257" pos:column="46">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="259" pos:column="17">break;</break>

		</case><case pos:line="261" pos:column="17">case <expr><name pos:line="261" pos:column="22">NPPM_SETBUFFERLANGTYPE</name></expr>:
		<block pos:line="262" pos:column="17">{
			<if pos:line="263" pos:column="25">if <condition pos:line="263" pos:column="28">(<expr><op:operator pos:line="263" pos:column="29">!</op:operator><name pos:line="263" pos:column="30">wParam</name></expr>)</condition><then pos:line="263" pos:column="37">
				<return pos:line="264" pos:column="33">return <expr><name pos:line="264" pos:column="40">FALSE</name></expr>;</return></then></if>
			<if pos:line="265" pos:column="25">if <condition pos:line="265" pos:column="28">(<expr><name><name pos:line="265" pos:column="29">lParam</name> <argument_list pos:line="265" pos:column="36">&lt; <argument><expr><name pos:line="265" pos:column="38">L_TEXT</name> <op:operator pos:line="265" pos:column="45">||</op:operator> <name pos:line="265" pos:column="48">lParam</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="265" pos:column="56">=</op:operator> <name pos:line="265" pos:column="58">L_EXTERNAL</name> <op:operator pos:line="265" pos:column="69">||</op:operator> <name pos:line="265" pos:column="72">lParam</name> <op:operator pos:line="265" pos:column="79">==</op:operator> <name pos:line="265" pos:column="82">L_USER</name></expr>)</condition><then pos:line="265" pos:column="89">
				<return pos:line="266" pos:column="33">return <expr><name pos:line="266" pos:column="40">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="268" pos:column="25">BufferID</name></type> <name pos:line="268" pos:column="34">id</name> <init pos:line="268" pos:column="37">= <expr><op:operator pos:line="268" pos:column="39">(</op:operator><name pos:line="268" pos:column="40">BufferID</name><op:operator pos:line="268" pos:column="48">)</op:operator><name pos:line="268" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="269" pos:column="25">Buffer</name> <type:modifier pos:line="269" pos:column="32">*</type:modifier></type> <name pos:line="269" pos:column="34">b</name> <init pos:line="269" pos:column="36">= <expr><call><name><name pos:line="269" pos:column="38">MainFileManager</name><op:operator pos:line="269" pos:column="53">-&gt;</op:operator><name pos:line="269" pos:column="55">getBufferByID</name></name><argument_list pos:line="269" pos:column="68">(<argument><expr><name pos:line="269" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="270" pos:column="25">b</name><op:operator pos:line="270" pos:column="26">-&gt;</op:operator><name pos:line="270" pos:column="28">setLangType</name></name><argument_list pos:line="270" pos:column="39">(<argument><expr><op:operator pos:line="270" pos:column="40">(</op:operator><name pos:line="270" pos:column="41">LangType</name><op:operator pos:line="270" pos:column="49">)</op:operator><name pos:line="270" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="271" pos:column="25">return <expr><name pos:line="271" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		<break pos:line="273" pos:column="17">break;</break>

		</case><case pos:line="275" pos:column="17">case <expr><name pos:line="275" pos:column="22">NPPM_GETBUFFERENCODING</name></expr>:
		<block pos:line="276" pos:column="17">{
			<if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><op:operator pos:line="277" pos:column="29">!</op:operator><name pos:line="277" pos:column="30">wParam</name></expr>)</condition><then pos:line="277" pos:column="37">
				<return pos:line="278" pos:column="33">return <expr><op:operator pos:line="278" pos:column="40">-</op:operator><lit:literal type="number" pos:line="278" pos:column="41">1</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="279" pos:column="25">BufferID</name></type> <name pos:line="279" pos:column="34">id</name> <init pos:line="279" pos:column="37">= <expr><op:operator pos:line="279" pos:column="39">(</op:operator><name pos:line="279" pos:column="40">BufferID</name><op:operator pos:line="279" pos:column="48">)</op:operator><name pos:line="279" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="280" pos:column="25">Buffer</name> <type:modifier pos:line="280" pos:column="32">*</type:modifier></type> <name pos:line="280" pos:column="34">b</name> <init pos:line="280" pos:column="36">= <expr><call><name><name pos:line="280" pos:column="38">MainFileManager</name><op:operator pos:line="280" pos:column="53">-&gt;</op:operator><name pos:line="280" pos:column="55">getBufferByID</name></name><argument_list pos:line="280" pos:column="68">(<argument><expr><name pos:line="280" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="281" pos:column="25">return <expr><call><name><name pos:line="281" pos:column="32">b</name><op:operator pos:line="281" pos:column="33">-&gt;</op:operator><name pos:line="281" pos:column="35">getUnicodeMode</name></name><argument_list pos:line="281" pos:column="49">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="283" pos:column="17">break;</break>

		</case><case pos:line="285" pos:column="17">case <expr><name pos:line="285" pos:column="22">NPPM_SETBUFFERENCODING</name></expr>:
		<block pos:line="286" pos:column="17">{
			<if pos:line="287" pos:column="25">if <condition pos:line="287" pos:column="28">(<expr><op:operator pos:line="287" pos:column="29">!</op:operator><name pos:line="287" pos:column="30">wParam</name></expr>)</condition><then pos:line="287" pos:column="37">
				<return pos:line="288" pos:column="33">return <expr><name pos:line="288" pos:column="40">FALSE</name></expr>;</return></then></if>
			<if pos:line="289" pos:column="25">if <condition pos:line="289" pos:column="28">(<expr><name><name pos:line="289" pos:column="29">lParam</name> <argument_list pos:line="289" pos:column="36">&lt; <argument><expr><name pos:line="289" pos:column="38">uni8Bit</name> <op:operator pos:line="289" pos:column="46">||</op:operator> <name pos:line="289" pos:column="49">lParam</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="289" pos:column="57">=</op:operator> <name pos:line="289" pos:column="59">uniEnd</name></expr>)</condition><then pos:line="289" pos:column="66">
				<return pos:line="290" pos:column="33">return <expr><name pos:line="290" pos:column="40">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="292" pos:column="25">BufferID</name></type> <name pos:line="292" pos:column="34">id</name> <init pos:line="292" pos:column="37">= <expr><op:operator pos:line="292" pos:column="39">(</op:operator><name pos:line="292" pos:column="40">BufferID</name><op:operator pos:line="292" pos:column="48">)</op:operator><name pos:line="292" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="293" pos:column="25">Buffer</name> <type:modifier pos:line="293" pos:column="32">*</type:modifier></type> <name pos:line="293" pos:column="34">b</name> <init pos:line="293" pos:column="36">= <expr><call><name><name pos:line="293" pos:column="38">MainFileManager</name><op:operator pos:line="293" pos:column="53">-&gt;</op:operator><name pos:line="293" pos:column="55">getBufferByID</name></name><argument_list pos:line="293" pos:column="68">(<argument><expr><name pos:line="293" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="294" pos:column="25">if <condition pos:line="294" pos:column="28">(<expr><call><name><name pos:line="294" pos:column="29">b</name><op:operator pos:line="294" pos:column="30">-&gt;</op:operator><name pos:line="294" pos:column="32">getStatus</name></name><argument_list pos:line="294" pos:column="41">()</argument_list></call> <op:operator pos:line="294" pos:column="44">!=</op:operator> <name pos:line="294" pos:column="47">DOC_UNNAMED</name> <op:operator pos:line="294" pos:column="59">||</op:operator> <call><name><name pos:line="294" pos:column="62">b</name><op:operator pos:line="294" pos:column="63">-&gt;</op:operator><name pos:line="294" pos:column="65">isDirty</name></name><argument_list pos:line="294" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="294" pos:column="75">	<comment type="line" pos:line="294" pos:column="81">//do not allow to change the encoding if the file has any content</comment>
				<return pos:line="295" pos:column="33">return <expr><name pos:line="295" pos:column="40">FALSE</name></expr>;</return></then></if>
			<expr_stmt><expr><call><name><name pos:line="296" pos:column="25">b</name><op:operator pos:line="296" pos:column="26">-&gt;</op:operator><name pos:line="296" pos:column="28">setUnicodeMode</name></name><argument_list pos:line="296" pos:column="42">(<argument><expr><op:operator pos:line="296" pos:column="43">(</op:operator><name pos:line="296" pos:column="44">UniMode</name><op:operator pos:line="296" pos:column="51">)</op:operator><name pos:line="296" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="297" pos:column="25">return <expr><name pos:line="297" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		<break pos:line="299" pos:column="17">break;</break>

		</case><case pos:line="301" pos:column="17">case <expr><name pos:line="301" pos:column="22">NPPM_GETBUFFERFORMAT</name></expr>:
		<block pos:line="302" pos:column="17">{
			<if pos:line="303" pos:column="25">if <condition pos:line="303" pos:column="28">(<expr><op:operator pos:line="303" pos:column="29">!</op:operator><name pos:line="303" pos:column="30">wParam</name></expr>)</condition><then pos:line="303" pos:column="37">
				<return pos:line="304" pos:column="33">return <expr><op:operator pos:line="304" pos:column="40">-</op:operator><lit:literal type="number" pos:line="304" pos:column="41">1</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="305" pos:column="25">BufferID</name></type> <name pos:line="305" pos:column="34">id</name> <init pos:line="305" pos:column="37">= <expr><op:operator pos:line="305" pos:column="39">(</op:operator><name pos:line="305" pos:column="40">BufferID</name><op:operator pos:line="305" pos:column="48">)</op:operator><name pos:line="305" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="306" pos:column="25">Buffer</name> <type:modifier pos:line="306" pos:column="32">*</type:modifier></type> <name pos:line="306" pos:column="34">b</name> <init pos:line="306" pos:column="36">= <expr><call><name><name pos:line="306" pos:column="38">MainFileManager</name><op:operator pos:line="306" pos:column="53">-&gt;</op:operator><name pos:line="306" pos:column="55">getBufferByID</name></name><argument_list pos:line="306" pos:column="68">(<argument><expr><name pos:line="306" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="307" pos:column="25">return <expr><call><name><name pos:line="307" pos:column="32">b</name><op:operator pos:line="307" pos:column="33">-&gt;</op:operator><name pos:line="307" pos:column="35">getFormat</name></name><argument_list pos:line="307" pos:column="44">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="309" pos:column="17">break;</break>

		</case><case pos:line="311" pos:column="17">case <expr><name pos:line="311" pos:column="22">NPPM_SETBUFFERFORMAT</name></expr>:
		<block pos:line="312" pos:column="17">{
			<if pos:line="313" pos:column="25">if <condition pos:line="313" pos:column="28">(<expr><op:operator pos:line="313" pos:column="29">!</op:operator><name pos:line="313" pos:column="30">wParam</name></expr>)</condition><then pos:line="313" pos:column="37">
				<return pos:line="314" pos:column="33">return <expr><name pos:line="314" pos:column="40">FALSE</name></expr>;</return></then></if>
			<if pos:line="315" pos:column="25">if <condition pos:line="315" pos:column="28">(<expr><name><name pos:line="315" pos:column="29">lParam</name> <argument_list pos:line="315" pos:column="36">&lt; <argument><expr><name pos:line="315" pos:column="38">WIN_FORMAT</name> <op:operator pos:line="315" pos:column="49">||</op:operator> <name pos:line="315" pos:column="52">lParam</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="315" pos:column="60">=</op:operator> <name pos:line="315" pos:column="62">UNIX_FORMAT</name></expr>)</condition><then pos:line="315" pos:column="74">
				<return pos:line="316" pos:column="33">return <expr><name pos:line="316" pos:column="40">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="318" pos:column="25">BufferID</name></type> <name pos:line="318" pos:column="34">id</name> <init pos:line="318" pos:column="37">= <expr><op:operator pos:line="318" pos:column="39">(</op:operator><name pos:line="318" pos:column="40">BufferID</name><op:operator pos:line="318" pos:column="48">)</op:operator><name pos:line="318" pos:column="49">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="319" pos:column="25">Buffer</name> <type:modifier pos:line="319" pos:column="32">*</type:modifier></type> <name pos:line="319" pos:column="34">b</name> <init pos:line="319" pos:column="36">= <expr><call><name><name pos:line="319" pos:column="38">MainFileManager</name><op:operator pos:line="319" pos:column="53">-&gt;</op:operator><name pos:line="319" pos:column="55">getBufferByID</name></name><argument_list pos:line="319" pos:column="68">(<argument><expr><name pos:line="319" pos:column="69">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="320" pos:column="25">b</name><op:operator pos:line="320" pos:column="26">-&gt;</op:operator><name pos:line="320" pos:column="28">setFormat</name></name><argument_list pos:line="320" pos:column="37">(<argument><expr><op:operator pos:line="320" pos:column="38">(</op:operator><name pos:line="320" pos:column="39">formatType</name><op:operator pos:line="320" pos:column="49">)</op:operator><name pos:line="320" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="321" pos:column="25">return <expr><name pos:line="321" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		<break pos:line="323" pos:column="17">break;</break>

		</case><case pos:line="325" pos:column="17">case <expr><name pos:line="325" pos:column="22">NPPM_GETBUFFERIDFROMPOS</name></expr>:
		<block pos:line="326" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="327" pos:column="25">DocTabView</name> <type:modifier pos:line="327" pos:column="36">*</type:modifier></type> <name pos:line="327" pos:column="38">pView</name> <init pos:line="327" pos:column="44">= <expr><name pos:line="327" pos:column="46">NULL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="328" pos:column="25">if <condition pos:line="328" pos:column="28">(<expr><name pos:line="328" pos:column="29">lParam</name> <op:operator pos:line="328" pos:column="36">==</op:operator> <name pos:line="328" pos:column="39">MAIN_VIEW</name></expr>)</condition><then pos:line="328" pos:column="49"> <block pos:line="328" pos:column="50">{
				<expr_stmt><expr><name pos:line="329" pos:column="33">pView</name> <op:operator pos:line="329" pos:column="39">=</op:operator> <op:operator pos:line="329" pos:column="41">&amp;</op:operator><name pos:line="329" pos:column="42">_mainDocTab</name></expr>;</expr_stmt>
			}</block></then> <else pos:line="330" pos:column="27">else <if pos:line="330" pos:column="32">if <condition pos:line="330" pos:column="35">(<expr><name pos:line="330" pos:column="36">lParam</name> <op:operator pos:line="330" pos:column="43">==</op:operator> <name pos:line="330" pos:column="46">SUB_VIEW</name></expr>)</condition><then pos:line="330" pos:column="55"> <block pos:line="330" pos:column="56">{
				<expr_stmt><expr><name pos:line="331" pos:column="33">pView</name> <op:operator pos:line="331" pos:column="39">=</op:operator> <op:operator pos:line="331" pos:column="41">&amp;</op:operator><name pos:line="331" pos:column="42">_subDocTab</name></expr>;</expr_stmt>
			}</block></then> <else pos:line="332" pos:column="27">else <block pos:line="332" pos:column="32">{
				<return pos:line="333" pos:column="33">return <expr><op:operator pos:line="333" pos:column="40">(</op:operator><name pos:line="333" pos:column="41">LRESULT</name><op:operator pos:line="333" pos:column="48">)</op:operator><name pos:line="333" pos:column="49">BUFFER_INVALID</name></expr>;</return>
			}</block></else></if></else></if>
			<if pos:line="335" pos:column="25">if <condition pos:line="335" pos:column="28">(<expr><op:operator pos:line="335" pos:column="29">(</op:operator><name pos:line="335" pos:column="30">int</name><op:operator pos:line="335" pos:column="33">)</op:operator><name pos:line="335" pos:column="34">wParam</name> <op:operator pos:line="335" pos:column="41">&lt;</op:operator> <call><name><name pos:line="335" pos:column="43">pView</name><op:operator pos:line="335" pos:column="48">-&gt;</op:operator><name pos:line="335" pos:column="50">nbItem</name></name><argument_list pos:line="335" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="335" pos:column="59"> <block pos:line="335" pos:column="60">{
				<return pos:line="336" pos:column="33">return <expr><call pos:line="336" pos:column="40">(<name pos:line="336" pos:column="41">LRESULT</name>)<argument_list pos:line="336" pos:column="49">(<argument><expr><call><name><name pos:line="336" pos:column="50">pView</name><op:operator pos:line="336" pos:column="55">-&gt;</op:operator><name pos:line="336" pos:column="57">getBufferByIndex</name></name><argument_list pos:line="336" pos:column="73">(<argument><expr><op:operator pos:line="336" pos:column="74">(</op:operator><name pos:line="336" pos:column="75">int</name><op:operator pos:line="336" pos:column="78">)</op:operator><name pos:line="336" pos:column="79">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<return pos:line="338" pos:column="25">return <expr><op:operator pos:line="338" pos:column="32">(</op:operator><name pos:line="338" pos:column="33">LRESULT</name><op:operator pos:line="338" pos:column="40">)</op:operator><name pos:line="338" pos:column="41">BUFFER_INVALID</name></expr>;</return>
		}</block>
		<break pos:line="340" pos:column="17">break;</break>

		</case><case pos:line="342" pos:column="17">case <expr><name pos:line="342" pos:column="22">NPPM_GETCURRENTBUFFERID</name></expr>:
		<block pos:line="343" pos:column="17">{
			<return pos:line="344" pos:column="25">return <expr><call pos:line="344" pos:column="32">(<name pos:line="344" pos:column="33">LRESULT</name>)<argument_list pos:line="344" pos:column="41">(<argument><expr><call><name><name pos:line="344" pos:column="42">_pEditView</name><op:operator pos:line="344" pos:column="52">-&gt;</op:operator><name pos:line="344" pos:column="54">getCurrentBufferID</name></name><argument_list pos:line="344" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="346" pos:column="17">break;</break>

		</case><case pos:line="348" pos:column="17">case <expr><name pos:line="348" pos:column="22">NPPM_RELOADBUFFERID</name></expr>:
		<block pos:line="349" pos:column="17">{
			<if pos:line="350" pos:column="25">if <condition pos:line="350" pos:column="28">(<expr><op:operator pos:line="350" pos:column="29">!</op:operator><name pos:line="350" pos:column="30">wParam</name></expr>)</condition><then pos:line="350" pos:column="37">
				<return pos:line="351" pos:column="33">return <expr><name pos:line="351" pos:column="40">FALSE</name></expr>;</return></then></if>
			<return pos:line="352" pos:column="25">return <expr><call><name pos:line="352" pos:column="32">doReload</name><argument_list pos:line="352" pos:column="40">(<argument><expr><op:operator pos:line="352" pos:column="41">(</op:operator><name pos:line="352" pos:column="42">BufferID</name><op:operator pos:line="352" pos:column="50">)</op:operator><name pos:line="352" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="59">lParam</name> <op:operator pos:line="352" pos:column="66">!=</op:operator> <lit:literal type="number" pos:line="352" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="354" pos:column="17">break;</break>

		</case><case pos:line="356" pos:column="17">case <expr><name pos:line="356" pos:column="22">NPPM_RELOADFILE</name></expr>:
		<block pos:line="357" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="358" pos:column="25">BufferID</name></type> <name pos:line="358" pos:column="34">id</name> <init pos:line="358" pos:column="37">= <expr><call><name><name pos:line="358" pos:column="39">MainFileManager</name><op:operator pos:line="358" pos:column="54">-&gt;</op:operator><name pos:line="358" pos:column="56">getBufferFromName</name></name><argument_list pos:line="358" pos:column="73">(<argument><expr><op:operator pos:line="358" pos:column="74">(</op:operator>const <name pos:line="358" pos:column="81">TCHAR</name> <op:operator pos:line="358" pos:column="87">*</op:operator><op:operator pos:line="358" pos:column="88">)</op:operator><name pos:line="358" pos:column="89">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="359" pos:column="25">if <condition pos:line="359" pos:column="28">(<expr><name pos:line="359" pos:column="29">id</name> <op:operator pos:line="359" pos:column="32">!=</op:operator> <name pos:line="359" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="359" pos:column="50">
				<expr_stmt><expr><call><name pos:line="360" pos:column="33">doReload</name><argument_list pos:line="360" pos:column="41">(<argument><expr><name pos:line="360" pos:column="42">id</name></expr></argument>, <argument><expr><name pos:line="360" pos:column="46">wParam</name> <op:operator pos:line="360" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="360" pos:column="56">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="362" pos:column="17">break;</break>

		</case><case pos:line="364" pos:column="17">case <expr><name pos:line="364" pos:column="22">NPPM_SWITCHTOFILE</name></expr> :
		<block pos:line="365" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="366" pos:column="25">BufferID</name></type> <name pos:line="366" pos:column="34">id</name> <init pos:line="366" pos:column="37">= <expr><call><name><name pos:line="366" pos:column="39">MainFileManager</name><op:operator pos:line="366" pos:column="54">-&gt;</op:operator><name pos:line="366" pos:column="56">getBufferFromName</name></name><argument_list pos:line="366" pos:column="73">(<argument><expr><op:operator pos:line="366" pos:column="74">(</op:operator>const <name pos:line="366" pos:column="81">TCHAR</name> <op:operator pos:line="366" pos:column="87">*</op:operator><op:operator pos:line="366" pos:column="88">)</op:operator><name pos:line="366" pos:column="89">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="367" pos:column="25">if <condition pos:line="367" pos:column="28">(<expr><name pos:line="367" pos:column="29">id</name> <op:operator pos:line="367" pos:column="32">!=</op:operator> <name pos:line="367" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="367" pos:column="50">
				<return pos:line="368" pos:column="33">return <expr><call><name pos:line="368" pos:column="40">switchToFile</name><argument_list pos:line="368" pos:column="52">(<argument><expr><name pos:line="368" pos:column="53">id</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
			<return pos:line="369" pos:column="25">return <expr><lit:literal type="boolean" pos:line="369" pos:column="32">false</lit:literal></expr>;</return>
		}</block>

		</case><case pos:line="372" pos:column="17">case <expr><name pos:line="372" pos:column="22">NPPM_SAVECURRENTFILE</name></expr>:
		<block pos:line="373" pos:column="17">{
			<return pos:line="374" pos:column="25">return <expr><call><name pos:line="374" pos:column="32">fileSave</name><argument_list pos:line="374" pos:column="40">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="376" pos:column="17">break;</break>

		</case><case pos:line="378" pos:column="17">case <expr><name pos:line="378" pos:column="22">NPPM_SAVECURRENTFILEAS</name></expr>:
		<block pos:line="379" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="380" pos:column="25">BufferID</name></type> <name pos:line="380" pos:column="34">currentBufferID</name> <init pos:line="380" pos:column="50">= <expr><call><name><name pos:line="380" pos:column="52">_pEditView</name><op:operator pos:line="380" pos:column="62">-&gt;</op:operator><name pos:line="380" pos:column="64">getCurrentBufferID</name></name><argument_list pos:line="380" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="381" pos:column="25">bool</name></type> <name pos:line="381" pos:column="30">asCopy</name> <init pos:line="381" pos:column="37">= <expr><name pos:line="381" pos:column="39">wParam</name> <op:operator pos:line="381" pos:column="46">==</op:operator> <name pos:line="381" pos:column="49">TRUE</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="382" pos:column="25">const</specifier> <name pos:line="382" pos:column="31">TCHAR</name> <type:modifier pos:line="382" pos:column="37">*</type:modifier></type><name pos:line="382" pos:column="38">filename</name> <init pos:line="382" pos:column="47">= <expr><op:operator pos:line="382" pos:column="49">(</op:operator>const <name pos:line="382" pos:column="56">TCHAR</name> <op:operator pos:line="382" pos:column="62">*</op:operator><op:operator pos:line="382" pos:column="63">)</op:operator><name pos:line="382" pos:column="64">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="383" pos:column="25">if <condition pos:line="383" pos:column="28">(<expr><op:operator pos:line="383" pos:column="29">!</op:operator><name pos:line="383" pos:column="30">filename</name></expr>)</condition><then pos:line="383" pos:column="39"> <return pos:line="383" pos:column="40">return <expr><name pos:line="383" pos:column="47">FALSE</name></expr>;</return></then></if>
			<return pos:line="384" pos:column="25">return <expr><call><name pos:line="384" pos:column="32">doSave</name><argument_list pos:line="384" pos:column="38">(<argument><expr><name pos:line="384" pos:column="39">currentBufferID</name></expr></argument>, <argument><expr><name pos:line="384" pos:column="56">filename</name></expr></argument>, <argument><expr><name pos:line="384" pos:column="66">asCopy</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="386" pos:column="17">break;</break>

		</case><case pos:line="388" pos:column="17">case <expr><name pos:line="388" pos:column="22">NPPM_SAVEALLFILES</name></expr>:
		<block pos:line="389" pos:column="17">{
			<return pos:line="390" pos:column="25">return <expr><call><name pos:line="390" pos:column="32">fileSaveAll</name><argument_list pos:line="390" pos:column="43">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="392" pos:column="17">break;</break>

		</case><case pos:line="394" pos:column="17">case <expr><name pos:line="394" pos:column="22">NPPM_GETCURRENTNATIVELANGENCODING</name></expr>:
		<block pos:line="395" pos:column="17">{
			<return pos:line="396" pos:column="25">return <expr><call><name><name pos:line="396" pos:column="32">_nativeLangSpeaker</name><op:operator pos:line="396" pos:column="50">.</op:operator><name pos:line="396" pos:column="51">getLangEncoding</name></name><argument_list pos:line="396" pos:column="66">()</argument_list></call></expr>;</return>
		}</block>
		<break pos:line="398" pos:column="17">break;</break>

		</case><case pos:line="400" pos:column="17">case <expr><name pos:line="400" pos:column="22">NPPM_INTERNAL_DOCORDERCHANGED</name></expr> :
		<block pos:line="401" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="402" pos:column="25">BufferID</name></type> <name pos:line="402" pos:column="34">id</name> <init pos:line="402" pos:column="37">= <expr><call><name><name pos:line="402" pos:column="39">_pEditView</name><op:operator pos:line="402" pos:column="49">-&gt;</op:operator><name pos:line="402" pos:column="51">getCurrentBufferID</name></name><argument_list pos:line="402" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="404" pos:column="25">// Notify plugins that current file is about to be closed</comment>
			<decl_stmt><decl><type><name pos:line="405" pos:column="25">SCNotification</name></type> <name pos:line="405" pos:column="40">scnN</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="406" pos:column="25">scnN</name><op:operator pos:line="406" pos:column="29">.</op:operator><name pos:line="406" pos:column="30">nmhdr</name><op:operator pos:line="406" pos:column="35">.</op:operator><name pos:line="406" pos:column="36">code</name></name> <op:operator pos:line="406" pos:column="41">=</op:operator> <name pos:line="406" pos:column="43">NPPN_DOCORDERCHANGED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="407" pos:column="25">scnN</name><op:operator pos:line="407" pos:column="29">.</op:operator><name pos:line="407" pos:column="30">nmhdr</name><op:operator pos:line="407" pos:column="35">.</op:operator><name pos:line="407" pos:column="36">hwndFrom</name></name> <op:operator pos:line="407" pos:column="45">=</op:operator> <op:operator pos:line="407" pos:column="47">(</op:operator><name pos:line="407" pos:column="48">void</name> <op:operator pos:line="407" pos:column="53">*</op:operator><op:operator pos:line="407" pos:column="54">)</op:operator><name pos:line="407" pos:column="55">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="408" pos:column="25">scnN</name><op:operator pos:line="408" pos:column="29">.</op:operator><name pos:line="408" pos:column="30">nmhdr</name><op:operator pos:line="408" pos:column="35">.</op:operator><name pos:line="408" pos:column="36">idFrom</name></name> <op:operator pos:line="408" pos:column="43">=</op:operator> <op:operator pos:line="408" pos:column="45">(</op:operator><name pos:line="408" pos:column="46">uptr_t</name><op:operator pos:line="408" pos:column="52">)</op:operator><name pos:line="408" pos:column="53">id</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="409" pos:column="25">_pluginsManager</name><op:operator pos:line="409" pos:column="40">.</op:operator><name pos:line="409" pos:column="41">notify</name></name><argument_list pos:line="409" pos:column="47">(<argument><expr><op:operator pos:line="409" pos:column="48">&amp;</op:operator><name pos:line="409" pos:column="49">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="410" pos:column="25">return <expr><name pos:line="410" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		<break pos:line="412" pos:column="17">break;</break>

		</case><case pos:line="414" pos:column="17">case <expr><name pos:line="414" pos:column="22">WM_SIZE</name></expr>:
		<block pos:line="415" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="416" pos:column="25">RECT</name></type> <name pos:line="416" pos:column="30">rc</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="417" pos:column="25">_pPublicInterface</name><op:operator pos:line="417" pos:column="42">-&gt;</op:operator><name pos:line="417" pos:column="44">getClientRect</name></name><argument_list pos:line="417" pos:column="57">(<argument><expr><name pos:line="417" pos:column="58">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="418" pos:column="25">if <condition pos:line="418" pos:column="28">(<expr><name pos:line="418" pos:column="29">lParam</name> <op:operator pos:line="418" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="418" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="418" pos:column="41"> <block pos:line="418" pos:column="42">{
				<expr_stmt><expr><name pos:line="419" pos:column="33">lParam</name> <op:operator pos:line="419" pos:column="40">=</op:operator> <call><name pos:line="419" pos:column="42">MAKELPARAM</name><argument_list pos:line="419" pos:column="52">(<argument><expr><name><name pos:line="419" pos:column="53">rc</name><op:operator pos:line="419" pos:column="55">.</op:operator><name pos:line="419" pos:column="56">right</name></name> <op:operator pos:line="419" pos:column="62">-</op:operator> <name><name pos:line="419" pos:column="64">rc</name><op:operator pos:line="419" pos:column="66">.</op:operator><name pos:line="419" pos:column="67">left</name></name></expr></argument>, <argument><expr><name><name pos:line="419" pos:column="73">rc</name><op:operator pos:line="419" pos:column="75">.</op:operator><name pos:line="419" pos:column="76">bottom</name></name> <op:operator pos:line="419" pos:column="83">-</op:operator> <name><name pos:line="419" pos:column="85">rc</name><op:operator pos:line="419" pos:column="87">.</op:operator><name pos:line="419" pos:column="88">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><call><name><op:operator pos:line="422" pos:column="25">::</op:operator><name pos:line="422" pos:column="27">MoveWindow</name></name><argument_list pos:line="422" pos:column="37">(<argument><expr><call><name><name pos:line="422" pos:column="38">_rebarTop</name><op:operator pos:line="422" pos:column="47">.</op:operator><name pos:line="422" pos:column="48">getHSelf</name></name><argument_list pos:line="422" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="422" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="422" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="422" pos:column="66">rc</name><op:operator pos:line="422" pos:column="68">.</op:operator><name pos:line="422" pos:column="69">right</name></name></expr></argument>, <argument><expr><call><name><name pos:line="422" pos:column="76">_rebarTop</name><op:operator pos:line="422" pos:column="85">.</op:operator><name pos:line="422" pos:column="86">getHeight</name></name><argument_list pos:line="422" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="422" pos:column="99">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="423" pos:column="25">_statusBar</name><op:operator pos:line="423" pos:column="35">.</op:operator><name pos:line="423" pos:column="36">adjustParts</name></name><argument_list pos:line="423" pos:column="47">(<argument><expr><name><name pos:line="423" pos:column="48">rc</name><op:operator pos:line="423" pos:column="50">.</op:operator><name pos:line="423" pos:column="51">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="424" pos:column="25">::</op:operator><name pos:line="424" pos:column="27">SendMessage</name></name><argument_list pos:line="424" pos:column="38">(<argument><expr><call><name><name pos:line="424" pos:column="39">_statusBar</name><op:operator pos:line="424" pos:column="49">.</op:operator><name pos:line="424" pos:column="50">getHSelf</name></name><argument_list pos:line="424" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="424" pos:column="62">WM_SIZE</name></expr></argument>, <argument><expr><name pos:line="424" pos:column="71">wParam</name></expr></argument>, <argument><expr><name pos:line="424" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="426" pos:column="25">int</name></type> <name pos:line="426" pos:column="29">rebarBottomHeight</name> <init pos:line="426" pos:column="47">= <expr><call><name><name pos:line="426" pos:column="49">_rebarBottom</name><op:operator pos:line="426" pos:column="61">.</op:operator><name pos:line="426" pos:column="62">getHeight</name></name><argument_list pos:line="426" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="427" pos:column="25">int</name></type> <name pos:line="427" pos:column="29">statusBarHeight</name> <init pos:line="427" pos:column="45">= <expr><call><name><name pos:line="427" pos:column="47">_statusBar</name><op:operator pos:line="427" pos:column="57">.</op:operator><name pos:line="427" pos:column="58">getHeight</name></name><argument_list pos:line="427" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="428" pos:column="25">::</op:operator><name pos:line="428" pos:column="27">MoveWindow</name></name><argument_list pos:line="428" pos:column="37">(<argument><expr><call><name><name pos:line="428" pos:column="38">_rebarBottom</name><op:operator pos:line="428" pos:column="50">.</op:operator><name pos:line="428" pos:column="51">getHSelf</name></name><argument_list pos:line="428" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="428" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="428" pos:column="66">rc</name><op:operator pos:line="428" pos:column="68">.</op:operator><name pos:line="428" pos:column="69">bottom</name></name> <op:operator pos:line="428" pos:column="76">-</op:operator> <name pos:line="428" pos:column="78">rebarBottomHeight</name> <op:operator pos:line="428" pos:column="96">-</op:operator> <name pos:line="428" pos:column="98">statusBarHeight</name></expr></argument>, <argument><expr><name><name pos:line="428" pos:column="115">rc</name><op:operator pos:line="428" pos:column="117">.</op:operator><name pos:line="428" pos:column="118">right</name></name></expr></argument>, <argument><expr><name pos:line="428" pos:column="125">rebarBottomHeight</name></expr></argument>, <argument><expr><name pos:line="428" pos:column="144">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="430" pos:column="25">getMainClientRect</name><argument_list pos:line="430" pos:column="42">(<argument><expr><name pos:line="430" pos:column="43">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="431" pos:column="25">_dockingManager</name><op:operator pos:line="431" pos:column="40">.</op:operator><name pos:line="431" pos:column="41">reSizeTo</name></name><argument_list pos:line="431" pos:column="49">(<argument><expr><name pos:line="431" pos:column="50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="433" pos:column="25">if <condition pos:line="433" pos:column="28">(<expr><name pos:line="433" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="433" pos:column="38">
			<block pos:line="434" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="435" pos:column="33">_pDocMap</name><op:operator pos:line="435" pos:column="41">-&gt;</op:operator><name pos:line="435" pos:column="43">doMove</name></name><argument_list pos:line="435" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="436" pos:column="33">_pDocMap</name><op:operator pos:line="436" pos:column="41">-&gt;</op:operator><name pos:line="436" pos:column="43">reloadMap</name></name><argument_list pos:line="436" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="439" pos:column="25">result</name> <op:operator pos:line="439" pos:column="32">=</op:operator> <name pos:line="439" pos:column="34">TRUE</name></expr>;</expr_stmt>
		}</block>
		<break pos:line="441" pos:column="17">break;</break>

		</case><case pos:line="443" pos:column="17">case <expr><name pos:line="443" pos:column="22">WM_MOVE</name></expr>:
		<block pos:line="444" pos:column="17">{
			<expr_stmt><expr><name pos:line="445" pos:column="25">result</name> <op:operator pos:line="445" pos:column="32">=</op:operator> <name pos:line="445" pos:column="34">TRUE</name></expr>;</expr_stmt>
		}</block>
		<break pos:line="447" pos:column="17">break;</break>

		</case><case pos:line="449" pos:column="17">case <expr><name pos:line="449" pos:column="22">WM_MOVING</name></expr>:
		<block pos:line="450" pos:column="17">{
			<if pos:line="451" pos:column="25">if <condition pos:line="451" pos:column="28">(<expr><name pos:line="451" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="451" pos:column="38">
			<block pos:line="452" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="453" pos:column="33">_pDocMap</name><op:operator pos:line="453" pos:column="41">-&gt;</op:operator><name pos:line="453" pos:column="43">doMove</name></name><argument_list pos:line="453" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="455" pos:column="25">result</name> <op:operator pos:line="455" pos:column="32">=</op:operator> <name pos:line="455" pos:column="34">FALSE</name></expr>;</expr_stmt>
		}</block>
		<break pos:line="457" pos:column="17">break;</break>

		</case><case pos:line="459" pos:column="17">case <expr><name pos:line="459" pos:column="22">WM_SIZING</name></expr>:
		<block pos:line="460" pos:column="17">{
			<expr_stmt><expr><name pos:line="461" pos:column="25">result</name> <op:operator pos:line="461" pos:column="32">=</op:operator> <name pos:line="461" pos:column="34">FALSE</name></expr>;</expr_stmt>
		}</block>
		<break pos:line="463" pos:column="17">break;</break>
		
		</case><case pos:line="465" pos:column="17">case <expr><name pos:line="465" pos:column="22">WM_COPYDATA</name></expr> :
        <block pos:line="466" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="467" pos:column="13">COPYDATASTRUCT</name> <type:modifier pos:line="467" pos:column="28">*</type:modifier></type><name pos:line="467" pos:column="29">pCopyData</name> <init pos:line="467" pos:column="39">= <expr><op:operator pos:line="467" pos:column="41">(</op:operator><name pos:line="467" pos:column="42">COPYDATASTRUCT</name> <op:operator pos:line="467" pos:column="57">*</op:operator><op:operator pos:line="467" pos:column="58">)</op:operator><name pos:line="467" pos:column="59">lParam</name></expr></init></decl>;</decl_stmt>

			<switch pos:line="469" pos:column="25">switch <condition pos:line="469" pos:column="32">(<expr><name><name pos:line="469" pos:column="33">pCopyData</name><op:operator pos:line="469" pos:column="42">-&gt;</op:operator><name pos:line="469" pos:column="44">dwData</name></name></expr>)</condition>
			<block pos:line="470" pos:column="25">{
				<case pos:line="471" pos:column="33">case <expr><name pos:line="471" pos:column="38">COPYDATA_PARAMS</name></expr> :
				<block pos:line="472" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="473" pos:column="21">CmdLineParams</name> <type:modifier pos:line="473" pos:column="35">*</type:modifier></type><name pos:line="473" pos:column="36">cmdLineParam</name> <init pos:line="473" pos:column="49">= <expr><op:operator pos:line="473" pos:column="51">(</op:operator><name pos:line="473" pos:column="52">CmdLineParams</name> <op:operator pos:line="473" pos:column="66">*</op:operator><op:operator pos:line="473" pos:column="67">)</op:operator><name><name pos:line="473" pos:column="68">pCopyData</name><op:operator pos:line="473" pos:column="77">-&gt;</op:operator><name pos:line="473" pos:column="79">lpData</name></name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="474" pos:column="41">pNppParam</name><op:operator pos:line="474" pos:column="50">-&gt;</op:operator><name pos:line="474" pos:column="52">setCmdlineParam</name></name><argument_list pos:line="474" pos:column="67">(<argument><expr><op:operator pos:line="474" pos:column="68">*</op:operator><name pos:line="474" pos:column="69">cmdLineParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="475" pos:column="21">_rememberThisSession</name> <op:operator pos:line="475" pos:column="42">=</op:operator> <op:operator pos:line="475" pos:column="44">!</op:operator><name><name pos:line="475" pos:column="45">cmdLineParam</name><op:operator pos:line="475" pos:column="57">-&gt;</op:operator><name pos:line="475" pos:column="59">_isNoSession</name></name></expr>;</expr_stmt>
					<break pos:line="476" pos:column="41">break;</break>
				}</block>

				</case><case pos:line="479" pos:column="33">case <expr><name pos:line="479" pos:column="38">COPYDATA_FILENAMESA</name></expr> :
				<block pos:line="480" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="481" pos:column="41">char</name> <type:modifier pos:line="481" pos:column="46">*</type:modifier></type><name pos:line="481" pos:column="47">fileNamesA</name> <init pos:line="481" pos:column="58">= <expr><op:operator pos:line="481" pos:column="60">(</op:operator><name pos:line="481" pos:column="61">char</name> <op:operator pos:line="481" pos:column="66">*</op:operator><op:operator pos:line="481" pos:column="67">)</op:operator><name><name pos:line="481" pos:column="68">pCopyData</name><op:operator pos:line="481" pos:column="77">-&gt;</op:operator><name pos:line="481" pos:column="79">lpData</name></name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="482" pos:column="41">CmdLineParams</name> <type:modifier pos:line="482" pos:column="55">&amp;</type:modifier></type> <name pos:line="482" pos:column="57">cmdLineParams</name> <init pos:line="482" pos:column="71">= <expr><call><name><name pos:line="482" pos:column="73">pNppParam</name><op:operator pos:line="482" pos:column="82">-&gt;</op:operator><name pos:line="482" pos:column="84">getCmdLineParams</name></name><argument_list pos:line="482" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">ifdef</cpp:directive> <name pos:line="483" pos:column="8">UNICODE</name></cpp:ifdef>
					<decl_stmt><decl><type><name pos:line="484" pos:column="41">WcharMbcsConvertor</name> <type:modifier pos:line="484" pos:column="60">*</type:modifier></type><name pos:line="484" pos:column="61">wmc</name> <init pos:line="484" pos:column="65">= <expr><call><name><name pos:line="484" pos:column="67">WcharMbcsConvertor</name><op:operator pos:line="484" pos:column="85">::</op:operator><name pos:line="484" pos:column="87">getInstance</name></name><argument_list pos:line="484" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="485" pos:column="41">const</specifier> <name pos:line="485" pos:column="47">wchar_t</name> <type:modifier pos:line="485" pos:column="55">*</type:modifier></type><name pos:line="485" pos:column="56">fileNamesW</name> <init pos:line="485" pos:column="67">= <expr><call><name><name pos:line="485" pos:column="69">wmc</name><op:operator pos:line="485" pos:column="72">-&gt;</op:operator><name pos:line="485" pos:column="74">char2wchar</name></name><argument_list pos:line="485" pos:column="84">(<argument><expr><name pos:line="485" pos:column="85">fileNamesA</name></expr></argument>, <argument><expr><name pos:line="485" pos:column="97">CP_ACP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="486" pos:column="41">loadCommandlineParams</name><argument_list pos:line="486" pos:column="62">(<argument><expr><name pos:line="486" pos:column="63">fileNamesW</name></expr></argument>, <argument><expr><op:operator pos:line="486" pos:column="75">&amp;</op:operator><name pos:line="486" pos:column="76">cmdLineParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="487" pos:column="1">#<cpp:directive pos:line="487" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><call><name pos:line="488" pos:column="41">loadCommandlineParams</name><argument_list pos:line="488" pos:column="62">(<argument><expr><name pos:line="488" pos:column="63">fileNamesA</name></expr></argument>, <argument><expr><op:operator pos:line="488" pos:column="75">&amp;</op:operator><name pos:line="488" pos:column="76">cmdLineParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="489" pos:column="1">#<cpp:directive pos:line="489" pos:column="2">endif</cpp:directive></cpp:endif>
					<break pos:line="490" pos:column="41">break;</break>
				}</block>

				</case><case pos:line="493" pos:column="33">case <expr><name pos:line="493" pos:column="38">COPYDATA_FILENAMESW</name></expr> :
				<block pos:line="494" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="495" pos:column="41">wchar_t</name> <type:modifier pos:line="495" pos:column="49">*</type:modifier></type><name pos:line="495" pos:column="50">fileNamesW</name> <init pos:line="495" pos:column="61">= <expr><op:operator pos:line="495" pos:column="63">(</op:operator><name pos:line="495" pos:column="64">wchar_t</name> <op:operator pos:line="495" pos:column="72">*</op:operator><op:operator pos:line="495" pos:column="73">)</op:operator><name><name pos:line="495" pos:column="74">pCopyData</name><op:operator pos:line="495" pos:column="83">-&gt;</op:operator><name pos:line="495" pos:column="85">lpData</name></name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="496" pos:column="41">CmdLineParams</name> <type:modifier pos:line="496" pos:column="55">&amp;</type:modifier></type> <name pos:line="496" pos:column="57">cmdLineParams</name> <init pos:line="496" pos:column="71">= <expr><call><name><name pos:line="496" pos:column="73">pNppParam</name><op:operator pos:line="496" pos:column="82">-&gt;</op:operator><name pos:line="496" pos:column="84">getCmdLineParams</name></name><argument_list pos:line="496" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
<cpp:ifdef pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">ifdef</cpp:directive> <name pos:line="498" pos:column="8">UNICODE</name></cpp:ifdef>
					<expr_stmt><expr><call><name pos:line="499" pos:column="41">loadCommandlineParams</name><argument_list pos:line="499" pos:column="62">(<argument><expr><name pos:line="499" pos:column="63">fileNamesW</name></expr></argument>, <argument><expr><op:operator pos:line="499" pos:column="75">&amp;</op:operator><name pos:line="499" pos:column="76">cmdLineParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="500" pos:column="1">#<cpp:directive pos:line="500" pos:column="2">else</cpp:directive></cpp:else>
					<decl_stmt><decl><type><name pos:line="501" pos:column="41">WcharMbcsConvertor</name> <type:modifier pos:line="501" pos:column="60">*</type:modifier></type><name pos:line="501" pos:column="61">wmc</name> <init pos:line="501" pos:column="65">= <expr><call><name><name pos:line="501" pos:column="67">WcharMbcsConvertor</name><op:operator pos:line="501" pos:column="85">::</op:operator><name pos:line="501" pos:column="87">getInstance</name></name><argument_list pos:line="501" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="502" pos:column="41">const</specifier> <name pos:line="502" pos:column="47">char</name> <type:modifier pos:line="502" pos:column="52">*</type:modifier></type><name pos:line="502" pos:column="53">fileNamesA</name> <init pos:line="502" pos:column="64">= <expr><call><name><name pos:line="502" pos:column="66">wmc</name><op:operator pos:line="502" pos:column="69">-&gt;</op:operator><name pos:line="502" pos:column="71">wchar2char</name></name><argument_list pos:line="502" pos:column="81">(<argument><expr><name pos:line="502" pos:column="82">fileNamesW</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="94">CP_ACP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="503" pos:column="41">loadCommandlineParams</name><argument_list pos:line="503" pos:column="62">(<argument><expr><name pos:line="503" pos:column="63">fileNamesA</name></expr></argument>, <argument><expr><op:operator pos:line="503" pos:column="75">&amp;</op:operator><name pos:line="503" pos:column="76">cmdLineParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">endif</cpp:directive></cpp:endif>
					<break pos:line="505" pos:column="41">break;</break>
				}</block>
			</case>}</block></switch>

            <return pos:line="509" pos:column="13">return <expr><name pos:line="509" pos:column="20">TRUE</name></expr>;</return>
        }</block>

		</case><case pos:line="512" pos:column="17">case <expr><name pos:line="512" pos:column="22">WM_COMMAND</name></expr>:
            <if pos:line="513" pos:column="13">if <condition pos:line="513" pos:column="16">(<expr><call><name pos:line="513" pos:column="17">HIWORD</name><argument_list pos:line="513" pos:column="23">(<argument><expr><name pos:line="513" pos:column="24">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="513" pos:column="32">==</op:operator> <name pos:line="513" pos:column="35">SCEN_SETFOCUS</name></expr>)</condition><then pos:line="513" pos:column="49">
            <block pos:line="514" pos:column="13">{
				<decl_stmt><decl><type><name pos:line="515" pos:column="33">HWND</name></type> <name pos:line="515" pos:column="38">hMain</name> <init pos:line="515" pos:column="44">= <expr><call><name><name pos:line="515" pos:column="46">_mainEditView</name><op:operator pos:line="515" pos:column="59">.</op:operator><name pos:line="515" pos:column="60">getHSelf</name></name><argument_list pos:line="515" pos:column="68">()</argument_list></call></expr></init><op:operator pos:line="515" pos:column="70">,</op:operator> <name pos:line="515" pos:column="72">hSec</name> <init pos:line="515" pos:column="77">= <expr><call><name><name pos:line="515" pos:column="79">_subEditView</name><op:operator pos:line="515" pos:column="91">.</op:operator><name pos:line="515" pos:column="92">getHSelf</name></name><argument_list pos:line="515" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="516" pos:column="33">HWND</name></type> <name pos:line="516" pos:column="38">hFocus</name> <init pos:line="516" pos:column="45">= <expr><op:operator pos:line="516" pos:column="47">(</op:operator><name pos:line="516" pos:column="48">HWND</name><op:operator pos:line="516" pos:column="52">)</op:operator><name pos:line="516" pos:column="53">lParam</name></expr></init></decl>;</decl_stmt>
				<if pos:line="517" pos:column="33">if <condition pos:line="517" pos:column="36">(<expr><name pos:line="517" pos:column="37">hMain</name> <op:operator pos:line="517" pos:column="43">==</op:operator> <name pos:line="517" pos:column="46">hFocus</name></expr>)</condition><then pos:line="517" pos:column="53">
					<expr_stmt><expr><call><name pos:line="518" pos:column="41">switchEditViewTo</name><argument_list pos:line="518" pos:column="57">(<argument><expr><name pos:line="518" pos:column="58">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="519" pos:column="33">else <if pos:line="519" pos:column="38">if <condition pos:line="519" pos:column="41">(<expr><name pos:line="519" pos:column="42">hSec</name> <op:operator pos:line="519" pos:column="47">==</op:operator> <name pos:line="519" pos:column="50">hFocus</name></expr>)</condition><then pos:line="519" pos:column="57">
					<expr_stmt><expr><call><name pos:line="520" pos:column="41">switchEditViewTo</name><argument_list pos:line="520" pos:column="57">(<argument><expr><name pos:line="520" pos:column="58">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="521" pos:column="33">else <block pos:line="521" pos:column="38">{
					<comment type="line" pos:line="522" pos:column="41">//Other Scintilla, ignore</comment>
				}</block></else></if></else></if>
				<return pos:line="524" pos:column="33">return <expr><name pos:line="524" pos:column="40">TRUE</name></expr>;</return>
            }</block></then>
            <else pos:line="526" pos:column="13">else
			<block pos:line="527" pos:column="25">{
				<if pos:line="528" pos:column="33">if <condition pos:line="528" pos:column="36">(<expr><op:operator pos:line="528" pos:column="37">(</op:operator><name pos:line="528" pos:column="38">lParam</name> <op:operator pos:line="528" pos:column="45">==</op:operator> <lit:literal type="number" pos:line="528" pos:column="48">1</lit:literal><op:operator pos:line="528" pos:column="49">)</op:operator> <op:operator pos:line="528" pos:column="51">||</op:operator> <op:operator pos:line="528" pos:column="54">(</op:operator><name pos:line="528" pos:column="55">lParam</name> <op:operator pos:line="528" pos:column="62">==</op:operator> <lit:literal type="number" pos:line="528" pos:column="65">2</lit:literal><op:operator pos:line="528" pos:column="66">)</op:operator></expr>)</condition><then pos:line="528" pos:column="68">
				<block pos:line="529" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="530" pos:column="41">specialCmd</name><argument_list pos:line="530" pos:column="51">(<argument><expr><call><name pos:line="530" pos:column="52">LOWORD</name><argument_list pos:line="530" pos:column="58">(<argument><expr><name pos:line="530" pos:column="59">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="532" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="533" pos:column="41">command</name><argument_list pos:line="533" pos:column="48">(<argument><expr><call><name pos:line="533" pos:column="49">LOWORD</name><argument_list pos:line="533" pos:column="55">(<argument><expr><name pos:line="533" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></else></if>
			<return pos:line="535" pos:column="25">return <expr><name pos:line="535" pos:column="32">TRUE</name></expr>;</return>

		</case><case pos:line="537" pos:column="17">case <expr><name pos:line="537" pos:column="22">NPPM_INTERNAL_RELOADNATIVELANG</name></expr>:
		<block pos:line="538" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="539" pos:column="25">reloadLang</name><argument_list pos:line="539" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="541" pos:column="17">return <expr><name pos:line="541" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="543" pos:column="17">case <expr><name pos:line="543" pos:column="22">NPPM_INTERNAL_RELOADSTYLERS</name></expr>:
		<block pos:line="544" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="545" pos:column="25">loadStyles</name><argument_list pos:line="545" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="547" pos:column="17">return <expr><name pos:line="547" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="549" pos:column="17">case <expr><name pos:line="549" pos:column="22">NPPM_INTERNAL_PLUGINSHORTCUTMOTIFIED</name></expr>:
		<block pos:line="550" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="551" pos:column="25">SCNotification</name></type> <name pos:line="551" pos:column="40">scnN</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="552" pos:column="25">scnN</name><op:operator pos:line="552" pos:column="29">.</op:operator><name pos:line="552" pos:column="30">nmhdr</name><op:operator pos:line="552" pos:column="35">.</op:operator><name pos:line="552" pos:column="36">code</name></name> <op:operator pos:line="552" pos:column="41">=</op:operator> <name pos:line="552" pos:column="43">NPPN_SHORTCUTREMAPPED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="553" pos:column="25">scnN</name><op:operator pos:line="553" pos:column="29">.</op:operator><name pos:line="553" pos:column="30">nmhdr</name><op:operator pos:line="553" pos:column="35">.</op:operator><name pos:line="553" pos:column="36">hwndFrom</name></name> <op:operator pos:line="553" pos:column="45">=</op:operator> <op:operator pos:line="553" pos:column="47">(</op:operator><name pos:line="553" pos:column="48">void</name> <op:operator pos:line="553" pos:column="53">*</op:operator><op:operator pos:line="553" pos:column="54">)</op:operator><name pos:line="553" pos:column="55">lParam</name></expr>;</expr_stmt> <comment type="line" pos:line="553" pos:column="63">// ShortcutKey structure</comment>
			<expr_stmt><expr><name><name pos:line="554" pos:column="25">scnN</name><op:operator pos:line="554" pos:column="29">.</op:operator><name pos:line="554" pos:column="30">nmhdr</name><op:operator pos:line="554" pos:column="35">.</op:operator><name pos:line="554" pos:column="36">idFrom</name></name> <op:operator pos:line="554" pos:column="43">=</op:operator> <op:operator pos:line="554" pos:column="45">(</op:operator><name pos:line="554" pos:column="46">uptr_t</name><op:operator pos:line="554" pos:column="52">)</op:operator><name pos:line="554" pos:column="53">wParam</name></expr>;</expr_stmt> <comment type="line" pos:line="554" pos:column="61">// cmdID</comment>
			<expr_stmt><expr><call><name><name pos:line="555" pos:column="25">_pluginsManager</name><op:operator pos:line="555" pos:column="40">.</op:operator><name pos:line="555" pos:column="41">notify</name></name><argument_list pos:line="555" pos:column="47">(<argument><expr><op:operator pos:line="555" pos:column="48">&amp;</op:operator><name pos:line="555" pos:column="49">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="557" pos:column="17">return <expr><name pos:line="557" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="559" pos:column="17">case <expr><name pos:line="559" pos:column="22">NPPM_GETSHORTCUTBYCMDID</name></expr>:
		<block pos:line="560" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="561" pos:column="25">int</name></type> <name pos:line="561" pos:column="29">cmdID</name> <init pos:line="561" pos:column="35">= <expr><name pos:line="561" pos:column="37">wParam</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="561" pos:column="45">// cmdID</comment>
			<decl_stmt><decl><type><name pos:line="562" pos:column="25">ShortcutKey</name> <type:modifier pos:line="562" pos:column="37">*</type:modifier></type><name pos:line="562" pos:column="38">sk</name> <init pos:line="562" pos:column="41">= <expr><op:operator pos:line="562" pos:column="43">(</op:operator><name pos:line="562" pos:column="44">ShortcutKey</name> <op:operator pos:line="562" pos:column="56">*</op:operator><op:operator pos:line="562" pos:column="57">)</op:operator><name pos:line="562" pos:column="58">lParam</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="562" pos:column="66">// ShortcutKey structure</comment>

			<return pos:line="564" pos:column="25">return <expr><call><name><name pos:line="564" pos:column="32">_pluginsManager</name><op:operator pos:line="564" pos:column="47">.</op:operator><name pos:line="564" pos:column="48">getShortcutByCmdID</name></name><argument_list pos:line="564" pos:column="66">(<argument><expr><name pos:line="564" pos:column="67">cmdID</name></expr></argument>, <argument><expr><name pos:line="564" pos:column="74">sk</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="567" pos:column="17">case <expr><name pos:line="567" pos:column="22">NPPM_MENUCOMMAND</name></expr> :
			<expr_stmt><expr><call><name pos:line="568" pos:column="25">command</name><argument_list pos:line="568" pos:column="32">(<argument><expr><name pos:line="568" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="569" pos:column="25">return <expr><name pos:line="569" pos:column="32">TRUE</name></expr>;</return>

		</case><case pos:line="571" pos:column="17">case <expr><name pos:line="571" pos:column="22">NPPM_GETFULLCURRENTPATH</name></expr> :
		</case><case pos:line="572" pos:column="17">case <expr><name pos:line="572" pos:column="22">NPPM_GETCURRENTDIRECTORY</name></expr> :
		</case><case pos:line="573" pos:column="17">case <expr><name pos:line="573" pos:column="22">NPPM_GETFILENAME</name></expr> :
		</case><case pos:line="574" pos:column="17">case <expr><name pos:line="574" pos:column="22">NPPM_GETNAMEPART</name></expr> :
		</case><case pos:line="575" pos:column="17">case <expr><name pos:line="575" pos:column="22">NPPM_GETEXTPART</name></expr> :
		<block pos:line="576" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="577" pos:column="25">TCHAR</name></type> <name><name pos:line="577" pos:column="31">str</name><index pos:line="577" pos:column="34">[<expr><name pos:line="577" pos:column="35">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
			<comment type="line" pos:line="578" pos:column="25">// par defaut : NPPM_GETCURRENTDIRECTORY</comment>
			<decl_stmt><decl><type><name pos:line="579" pos:column="25">TCHAR</name> <type:modifier pos:line="579" pos:column="31">*</type:modifier></type><name pos:line="579" pos:column="32">fileStr</name> <init pos:line="579" pos:column="40">= <expr><call><name pos:line="579" pos:column="42">lstrcpy</name><argument_list pos:line="579" pos:column="49">(<argument><expr><name pos:line="579" pos:column="50">str</name></expr></argument>, <argument><expr><call><name><name pos:line="579" pos:column="55">_pEditView</name><op:operator pos:line="579" pos:column="65">-&gt;</op:operator><name pos:line="579" pos:column="67">getCurrentBuffer</name></name><argument_list pos:line="579" pos:column="83">()</argument_list></call><op:operator pos:line="579" pos:column="85">-&gt;</op:operator><call><name pos:line="579" pos:column="87">getFullPathName</name><argument_list pos:line="579" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="581" pos:column="25">if <condition pos:line="581" pos:column="28">(<expr><name pos:line="581" pos:column="29">Message</name> <op:operator pos:line="581" pos:column="37">==</op:operator> <name pos:line="581" pos:column="40">NPPM_GETCURRENTDIRECTORY</name></expr>)</condition><then pos:line="581" pos:column="65">
				<expr_stmt><expr><call><name pos:line="582" pos:column="33">PathRemoveFileSpec</name><argument_list pos:line="582" pos:column="51">(<argument><expr><name pos:line="582" pos:column="52">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="583" pos:column="25">else <if pos:line="583" pos:column="30">if <condition pos:line="583" pos:column="33">(<expr><name pos:line="583" pos:column="34">Message</name> <op:operator pos:line="583" pos:column="42">==</op:operator> <name pos:line="583" pos:column="45">NPPM_GETFILENAME</name></expr>)</condition><then pos:line="583" pos:column="62">
				<expr_stmt><expr><name pos:line="584" pos:column="33">fileStr</name> <op:operator pos:line="584" pos:column="41">=</op:operator> <call><name pos:line="584" pos:column="43">PathFindFileName</name><argument_list pos:line="584" pos:column="59">(<argument><expr><name pos:line="584" pos:column="60">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="585" pos:column="25">else <if pos:line="585" pos:column="30">if <condition pos:line="585" pos:column="33">(<expr><name pos:line="585" pos:column="34">Message</name> <op:operator pos:line="585" pos:column="42">==</op:operator> <name pos:line="585" pos:column="45">NPPM_GETNAMEPART</name></expr>)</condition><then pos:line="585" pos:column="62">
			<block pos:line="586" pos:column="25">{
				<expr_stmt><expr><name pos:line="587" pos:column="33">fileStr</name> <op:operator pos:line="587" pos:column="41">=</op:operator> <call><name pos:line="587" pos:column="43">PathFindFileName</name><argument_list pos:line="587" pos:column="59">(<argument><expr><name pos:line="587" pos:column="60">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="588" pos:column="33">PathRemoveExtension</name><argument_list pos:line="588" pos:column="52">(<argument><expr><name pos:line="588" pos:column="53">fileStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="590" pos:column="25">else <if pos:line="590" pos:column="30">if <condition pos:line="590" pos:column="33">(<expr><name pos:line="590" pos:column="34">Message</name> <op:operator pos:line="590" pos:column="42">==</op:operator> <name pos:line="590" pos:column="45">NPPM_GETEXTPART</name></expr>)</condition><then pos:line="590" pos:column="61">
				<expr_stmt><expr><name pos:line="591" pos:column="33">fileStr</name> <op:operator pos:line="591" pos:column="41">=</op:operator> <call><name pos:line="591" pos:column="43">PathFindExtension</name><argument_list pos:line="591" pos:column="60">(<argument><expr><name pos:line="591" pos:column="61">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if></else></if></else></if>

			<comment type="line" pos:line="593" pos:column="25">// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.</comment>
			<comment type="line" pos:line="594" pos:column="25">// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.</comment>
			<if pos:line="595" pos:column="25">if <condition pos:line="595" pos:column="28">(<expr><name pos:line="595" pos:column="29">wParam</name> <op:operator pos:line="595" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="595" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="595" pos:column="41">
			<block pos:line="596" pos:column="25">{
				<if pos:line="597" pos:column="33">if <condition pos:line="597" pos:column="36">(<expr><call><name pos:line="597" pos:column="37">lstrlen</name><argument_list pos:line="597" pos:column="44">(<argument><expr><name pos:line="597" pos:column="45">fileStr</name></expr></argument>)</argument_list></call> <op:operator pos:line="597" pos:column="54">&gt;=</op:operator> <call><name pos:line="597" pos:column="57">int</name><argument_list pos:line="597" pos:column="60">(<argument><expr><name pos:line="597" pos:column="61">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="597" pos:column="69">
				<block pos:line="598" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="599" pos:column="41">::</op:operator><name pos:line="599" pos:column="43">MessageBox</name></name><argument_list pos:line="599" pos:column="53">(<argument><expr><call><name><name pos:line="599" pos:column="54">_pPublicInterface</name><op:operator pos:line="599" pos:column="71">-&gt;</op:operator><name pos:line="599" pos:column="73">getHSelf</name></name><argument_list pos:line="599" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="599" pos:column="85">TEXT</name><argument_list pos:line="599" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="599" pos:column="90">"Allocated buffer size is not enough to copy the string."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="599" pos:column="150">TEXT</name><argument_list pos:line="599" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="599" pos:column="155">"NPPM error"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="599" pos:column="170">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="600" pos:column="41">return <expr><name pos:line="600" pos:column="48">FALSE</name></expr>;</return>
				}</block></then></if>
			}</block></then></if>

			<expr_stmt><expr><call><name pos:line="604" pos:column="25">lstrcpy</name><argument_list pos:line="604" pos:column="32">(<argument><expr><op:operator pos:line="604" pos:column="33">(</op:operator><name pos:line="604" pos:column="34">TCHAR</name> <op:operator pos:line="604" pos:column="40">*</op:operator><op:operator pos:line="604" pos:column="41">)</op:operator><name pos:line="604" pos:column="42">lParam</name></expr></argument>, <argument><expr><name pos:line="604" pos:column="50">fileStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="605" pos:column="25">return <expr><name pos:line="605" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="608" pos:column="17">case <expr><name pos:line="608" pos:column="22">NPPM_GETCURRENTWORD</name></expr> :
		<block pos:line="609" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="610" pos:column="25">const</specifier> <name pos:line="610" pos:column="31">int</name></type> <name pos:line="610" pos:column="35">strSize</name> <init pos:line="610" pos:column="43">= <expr><name pos:line="610" pos:column="45">CURRENTWORD_MAXLENGTH</name></expr></init></decl>;</decl_stmt> 
			<decl_stmt><decl><type><name pos:line="611" pos:column="25">TCHAR</name></type> <name><name pos:line="611" pos:column="31">str</name><index pos:line="611" pos:column="34">[<expr><name pos:line="611" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="613" pos:column="25">_pEditView</name><op:operator pos:line="613" pos:column="35">-&gt;</op:operator><name pos:line="613" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="613" pos:column="59">(<argument><expr><op:operator pos:line="613" pos:column="60">(</op:operator><name pos:line="613" pos:column="61">TCHAR</name> <op:operator pos:line="613" pos:column="67">*</op:operator><op:operator pos:line="613" pos:column="68">)</op:operator><name pos:line="613" pos:column="69">str</name></expr></argument>, <argument><expr><name pos:line="613" pos:column="74">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="614" pos:column="25">// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.</comment>
			<comment type="line" pos:line="615" pos:column="25">// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.</comment>
			<if pos:line="616" pos:column="25">if <condition pos:line="616" pos:column="28">(<expr><name pos:line="616" pos:column="29">wParam</name> <op:operator pos:line="616" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="616" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="616" pos:column="41">
			<block pos:line="617" pos:column="25">{
				<if pos:line="618" pos:column="33">if <condition pos:line="618" pos:column="36">(<expr><call><name pos:line="618" pos:column="37">lstrlen</name><argument_list pos:line="618" pos:column="44">(<argument><expr><name pos:line="618" pos:column="45">str</name></expr></argument>)</argument_list></call> <op:operator pos:line="618" pos:column="50">&gt;=</op:operator> <call><name pos:line="618" pos:column="53">int</name><argument_list pos:line="618" pos:column="56">(<argument><expr><name pos:line="618" pos:column="57">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="618" pos:column="65">	<comment type="line" pos:line="618" pos:column="73">//buffer too small</comment>
				<block pos:line="619" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="620" pos:column="41">::</op:operator><name pos:line="620" pos:column="43">MessageBox</name></name><argument_list pos:line="620" pos:column="53">(<argument><expr><call><name><name pos:line="620" pos:column="54">_pPublicInterface</name><op:operator pos:line="620" pos:column="71">-&gt;</op:operator><name pos:line="620" pos:column="73">getHSelf</name></name><argument_list pos:line="620" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="620" pos:column="85">TEXT</name><argument_list pos:line="620" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="620" pos:column="90">"Allocated buffer size is not enough to copy the string."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="620" pos:column="150">TEXT</name><argument_list pos:line="620" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="620" pos:column="155">"NPPM_GETCURRENTWORD error"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="620" pos:column="185">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="621" pos:column="41">return <expr><name pos:line="621" pos:column="48">FALSE</name></expr>;</return>
				}</block></then>
				<else pos:line="623" pos:column="33">else <comment type="line" pos:line="623" pos:column="38">//buffer large enough, perform safe copy</comment>
				<block pos:line="624" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="625" pos:column="41">lstrcpyn</name><argument_list pos:line="625" pos:column="49">(<argument><expr><op:operator pos:line="625" pos:column="50">(</op:operator><name pos:line="625" pos:column="51">TCHAR</name> <op:operator pos:line="625" pos:column="57">*</op:operator><op:operator pos:line="625" pos:column="58">)</op:operator><name pos:line="625" pos:column="59">lParam</name></expr></argument>, <argument><expr><name pos:line="625" pos:column="67">str</name></expr></argument>, <argument><expr><name pos:line="625" pos:column="72">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="626" pos:column="41">return <expr><name pos:line="626" pos:column="48">TRUE</name></expr>;</return>
				}</block></else></if>
			}</block></then></if>

			<expr_stmt><expr><call><name pos:line="630" pos:column="25">lstrcpy</name><argument_list pos:line="630" pos:column="32">(<argument><expr><op:operator pos:line="630" pos:column="33">(</op:operator><name pos:line="630" pos:column="34">TCHAR</name> <op:operator pos:line="630" pos:column="40">*</op:operator><op:operator pos:line="630" pos:column="41">)</op:operator><name pos:line="630" pos:column="42">lParam</name></expr></argument>, <argument><expr><name pos:line="630" pos:column="50">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="631" pos:column="25">return <expr><name pos:line="631" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="634" pos:column="17">case <expr><name pos:line="634" pos:column="22">NPPM_GETNPPDIRECTORY</name></expr> :
		<block pos:line="635" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="636" pos:column="25">const</specifier> <name pos:line="636" pos:column="31">int</name></type> <name pos:line="636" pos:column="35">strSize</name> <init pos:line="636" pos:column="43">= <expr><name pos:line="636" pos:column="45">MAX_PATH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="637" pos:column="25">TCHAR</name></type> <name><name pos:line="637" pos:column="31">str</name><index pos:line="637" pos:column="34">[<expr><name pos:line="637" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="639" pos:column="25">::</op:operator><name pos:line="639" pos:column="27">GetModuleFileName</name></name><argument_list pos:line="639" pos:column="44">(<argument><expr><name pos:line="639" pos:column="45">NULL</name></expr></argument>, <argument><expr><name pos:line="639" pos:column="51">str</name></expr></argument>, <argument><expr><name pos:line="639" pos:column="56">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="640" pos:column="25">PathRemoveFileSpec</name><argument_list pos:line="640" pos:column="43">(<argument><expr><name pos:line="640" pos:column="44">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="642" pos:column="25">// For the compability reason, if wParam is 0, then we assume the size of generic_string buffer (lParam) is large enough.</comment>
			<comment type="line" pos:line="643" pos:column="25">// otherwise we check if the generic_string buffer size is enough for the generic_string to copy.</comment>
			<if pos:line="644" pos:column="25">if <condition pos:line="644" pos:column="28">(<expr><name pos:line="644" pos:column="29">wParam</name> <op:operator pos:line="644" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="644" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="644" pos:column="41">
			<block pos:line="645" pos:column="25">{
				<if pos:line="646" pos:column="33">if <condition pos:line="646" pos:column="36">(<expr><call><name pos:line="646" pos:column="37">lstrlen</name><argument_list pos:line="646" pos:column="44">(<argument><expr><name pos:line="646" pos:column="45">str</name></expr></argument>)</argument_list></call> <op:operator pos:line="646" pos:column="50">&gt;=</op:operator> <call><name pos:line="646" pos:column="53">int</name><argument_list pos:line="646" pos:column="56">(<argument><expr><name pos:line="646" pos:column="57">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="646" pos:column="65">
				<block pos:line="647" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="648" pos:column="41">::</op:operator><name pos:line="648" pos:column="43">MessageBox</name></name><argument_list pos:line="648" pos:column="53">(<argument><expr><call><name><name pos:line="648" pos:column="54">_pPublicInterface</name><op:operator pos:line="648" pos:column="71">-&gt;</op:operator><name pos:line="648" pos:column="73">getHSelf</name></name><argument_list pos:line="648" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="648" pos:column="85">TEXT</name><argument_list pos:line="648" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="648" pos:column="90">"Allocated buffer size is not enough to copy the string."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="648" pos:column="150">TEXT</name><argument_list pos:line="648" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="648" pos:column="155">"NPPM_GETNPPDIRECTORY error"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="648" pos:column="186">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="649" pos:column="41">return <expr><name pos:line="649" pos:column="48">FALSE</name></expr>;</return>
				}</block></then></if>
			}</block></then></if>

			<expr_stmt><expr><call><name pos:line="653" pos:column="25">lstrcpy</name><argument_list pos:line="653" pos:column="32">(<argument><expr><op:operator pos:line="653" pos:column="33">(</op:operator><name pos:line="653" pos:column="34">TCHAR</name> <op:operator pos:line="653" pos:column="40">*</op:operator><op:operator pos:line="653" pos:column="41">)</op:operator><name pos:line="653" pos:column="42">lParam</name></expr></argument>, <argument><expr><name pos:line="653" pos:column="50">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="654" pos:column="25">return <expr><name pos:line="654" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="657" pos:column="17">case <expr><name pos:line="657" pos:column="22">NPPM_GETCURRENTLINE</name></expr> :
		<block pos:line="658" pos:column="17">{
			<return pos:line="659" pos:column="25">return <expr><call><name><name pos:line="659" pos:column="32">_pEditView</name><op:operator pos:line="659" pos:column="42">-&gt;</op:operator><name pos:line="659" pos:column="44">getCurrentLineNumber</name></name><argument_list pos:line="659" pos:column="64">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="662" pos:column="17">case <expr><name pos:line="662" pos:column="22">NPPM_GETCURRENTCOLUMN</name></expr> :
		<block pos:line="663" pos:column="17">{
			<return pos:line="664" pos:column="25">return <expr><call><name><name pos:line="664" pos:column="32">_pEditView</name><op:operator pos:line="664" pos:column="42">-&gt;</op:operator><name pos:line="664" pos:column="44">getCurrentColumnNumber</name></name><argument_list pos:line="664" pos:column="66">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="667" pos:column="17">case <expr><name pos:line="667" pos:column="22">NPPM_GETCURRENTSCINTILLA</name></expr> : 
		<block pos:line="668" pos:column="17">{ 
			<if pos:line="669" pos:column="25">if <condition pos:line="669" pos:column="28">(<expr><name pos:line="669" pos:column="29">_pEditView</name> <op:operator pos:line="669" pos:column="40">==</op:operator> <op:operator pos:line="669" pos:column="43">&amp;</op:operator><name pos:line="669" pos:column="44">_mainEditView</name></expr>)</condition><then pos:line="669" pos:column="58"> 
				<expr_stmt><expr><op:operator pos:line="670" pos:column="33">*</op:operator><op:operator pos:line="670" pos:column="34">(</op:operator><op:operator pos:line="670" pos:column="35">(</op:operator><name pos:line="670" pos:column="36">int</name> <op:operator pos:line="670" pos:column="40">*</op:operator><op:operator pos:line="670" pos:column="41">)</op:operator><name pos:line="670" pos:column="42">lParam</name><op:operator pos:line="670" pos:column="48">)</op:operator> <op:operator pos:line="670" pos:column="50">=</op:operator> <name pos:line="670" pos:column="52">MAIN_VIEW</name></expr>;</expr_stmt></then> 
			<else pos:line="671" pos:column="25">else <if pos:line="671" pos:column="30">if <condition pos:line="671" pos:column="33">(<expr><name pos:line="671" pos:column="34">_pEditView</name> <op:operator pos:line="671" pos:column="45">==</op:operator> <op:operator pos:line="671" pos:column="48">&amp;</op:operator><name pos:line="671" pos:column="49">_subEditView</name></expr>)</condition><then pos:line="671" pos:column="62"> 
				<expr_stmt><expr><op:operator pos:line="672" pos:column="33">*</op:operator><op:operator pos:line="672" pos:column="34">(</op:operator><op:operator pos:line="672" pos:column="35">(</op:operator><name pos:line="672" pos:column="36">int</name> <op:operator pos:line="672" pos:column="40">*</op:operator><op:operator pos:line="672" pos:column="41">)</op:operator><name pos:line="672" pos:column="42">lParam</name><op:operator pos:line="672" pos:column="48">)</op:operator> <op:operator pos:line="672" pos:column="50">=</op:operator> <name pos:line="672" pos:column="52">SUB_VIEW</name></expr>;</expr_stmt></then> 
			<else pos:line="673" pos:column="25">else 
				<expr_stmt><expr><op:operator pos:line="674" pos:column="33">*</op:operator><op:operator pos:line="674" pos:column="34">(</op:operator><op:operator pos:line="674" pos:column="35">(</op:operator><name pos:line="674" pos:column="36">int</name> <op:operator pos:line="674" pos:column="40">*</op:operator><op:operator pos:line="674" pos:column="41">)</op:operator><name pos:line="674" pos:column="42">lParam</name><op:operator pos:line="674" pos:column="48">)</op:operator> <op:operator pos:line="674" pos:column="50">=</op:operator> <op:operator pos:line="674" pos:column="52">-</op:operator><lit:literal type="number" pos:line="674" pos:column="53">1</lit:literal></expr>;</expr_stmt></else></if></else></if> 
			<return pos:line="675" pos:column="25">return <expr><name pos:line="675" pos:column="32">TRUE</name></expr>;</return> 
		}</block> 

		</case><case pos:line="678" pos:column="17">case <expr><name pos:line="678" pos:column="22">NPPM_GETCURRENTLANGTYPE</name></expr> :
		<block pos:line="679" pos:column="17">{
			<expr_stmt><expr><op:operator pos:line="680" pos:column="25">*</op:operator><op:operator pos:line="680" pos:column="26">(</op:operator><op:operator pos:line="680" pos:column="27">(</op:operator><name pos:line="680" pos:column="28">LangType</name> <op:operator pos:line="680" pos:column="37">*</op:operator><op:operator pos:line="680" pos:column="38">)</op:operator><name pos:line="680" pos:column="39">lParam</name><op:operator pos:line="680" pos:column="45">)</op:operator> <op:operator pos:line="680" pos:column="47">=</op:operator> <call><name><name pos:line="680" pos:column="49">_pEditView</name><op:operator pos:line="680" pos:column="59">-&gt;</op:operator><name pos:line="680" pos:column="61">getCurrentBuffer</name></name><argument_list pos:line="680" pos:column="77">()</argument_list></call><op:operator pos:line="680" pos:column="79">-&gt;</op:operator><call><name pos:line="680" pos:column="81">getLangType</name><argument_list pos:line="680" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="681" pos:column="25">return <expr><name pos:line="681" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="684" pos:column="17">case <expr><name pos:line="684" pos:column="22">NPPM_SETCURRENTLANGTYPE</name></expr> :
		<block pos:line="685" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="686" pos:column="25">_pEditView</name><op:operator pos:line="686" pos:column="35">-&gt;</op:operator><name pos:line="686" pos:column="37">getCurrentBuffer</name></name><argument_list pos:line="686" pos:column="53">()</argument_list></call><op:operator pos:line="686" pos:column="55">-&gt;</op:operator><call><name pos:line="686" pos:column="57">setLangType</name><argument_list pos:line="686" pos:column="68">(<argument><expr><op:operator pos:line="686" pos:column="69">(</op:operator><name pos:line="686" pos:column="70">LangType</name><op:operator pos:line="686" pos:column="78">)</op:operator><name pos:line="686" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="687" pos:column="25">return <expr><name pos:line="687" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="690" pos:column="17">case <expr><name pos:line="690" pos:column="22">NPPM_GETNBOPENFILES</name></expr> :
		<block pos:line="691" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="692" pos:column="25">int</name></type> <name pos:line="692" pos:column="29">nbDocPrimary</name> <init pos:line="692" pos:column="42">= <expr><call><name><name pos:line="692" pos:column="44">_mainDocTab</name><op:operator pos:line="692" pos:column="55">.</op:operator><name pos:line="692" pos:column="56">nbItem</name></name><argument_list pos:line="692" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="693" pos:column="25">int</name></type> <name pos:line="693" pos:column="29">nbDocSecond</name> <init pos:line="693" pos:column="41">= <expr><call><name><name pos:line="693" pos:column="43">_subDocTab</name><op:operator pos:line="693" pos:column="53">.</op:operator><name pos:line="693" pos:column="54">nbItem</name></name><argument_list pos:line="693" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="694" pos:column="25">if <condition pos:line="694" pos:column="28">(<expr><name pos:line="694" pos:column="29">lParam</name> <op:operator pos:line="694" pos:column="36">==</op:operator> <name pos:line="694" pos:column="39">ALL_OPEN_FILES</name></expr>)</condition><then pos:line="694" pos:column="54">
				<return pos:line="695" pos:column="33">return <expr><name pos:line="695" pos:column="40">nbDocPrimary</name> <op:operator pos:line="695" pos:column="53">+</op:operator> <name pos:line="695" pos:column="55">nbDocSecond</name></expr>;</return></then>
			<else pos:line="696" pos:column="25">else <if pos:line="696" pos:column="30">if <condition pos:line="696" pos:column="33">(<expr><name pos:line="696" pos:column="34">lParam</name> <op:operator pos:line="696" pos:column="41">==</op:operator> <name pos:line="696" pos:column="44">PRIMARY_VIEW</name></expr>)</condition><then pos:line="696" pos:column="57">
				<return pos:line="697" pos:column="33">return  <expr><name pos:line="697" pos:column="41">nbDocPrimary</name></expr>;</return></then>
			<else pos:line="698" pos:column="25">else <if pos:line="698" pos:column="30">if <condition pos:line="698" pos:column="33">(<expr><name pos:line="698" pos:column="34">lParam</name> <op:operator pos:line="698" pos:column="41">==</op:operator> <name pos:line="698" pos:column="44">SECOND_VIEW</name></expr>)</condition><then pos:line="698" pos:column="56">
				<return pos:line="699" pos:column="33">return  <expr><name pos:line="699" pos:column="41">nbDocSecond</name></expr>;</return></then></if></else></if></else></if>
		}</block>

		</case><case pos:line="702" pos:column="17">case <expr><name pos:line="702" pos:column="22">NPPM_GETOPENFILENAMESPRIMARY</name></expr> :
		</case><case pos:line="703" pos:column="17">case <expr><name pos:line="703" pos:column="22">NPPM_GETOPENFILENAMESSECOND</name></expr> :
		</case><case pos:line="704" pos:column="17">case <expr><name pos:line="704" pos:column="22">NPPM_GETOPENFILENAMES</name></expr> :
		<block pos:line="705" pos:column="17">{
			<if pos:line="706" pos:column="25">if <condition pos:line="706" pos:column="28">(<expr><op:operator pos:line="706" pos:column="29">!</op:operator><name pos:line="706" pos:column="30">wParam</name></expr>)</condition><then pos:line="706" pos:column="37"> <return pos:line="706" pos:column="38">return <expr><lit:literal type="number" pos:line="706" pos:column="45">0</lit:literal></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="708" pos:column="25">TCHAR</name> <type:modifier pos:line="708" pos:column="31">*</type:modifier><type:modifier pos:line="708" pos:column="32">*</type:modifier></type><name pos:line="708" pos:column="33">fileNames</name> <init pos:line="708" pos:column="43">= <expr><op:operator pos:line="708" pos:column="45">(</op:operator><name pos:line="708" pos:column="46">TCHAR</name> <op:operator pos:line="708" pos:column="52">*</op:operator><op:operator pos:line="708" pos:column="53">*</op:operator><op:operator pos:line="708" pos:column="54">)</op:operator><name pos:line="708" pos:column="55">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="709" pos:column="25">int</name></type> <name pos:line="709" pos:column="29">nbFileNames</name> <init pos:line="709" pos:column="41">= <expr><name pos:line="709" pos:column="43">lParam</name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="711" pos:column="25">int</name></type> <name pos:line="711" pos:column="29">j</name> <init pos:line="711" pos:column="31">= <expr><lit:literal type="number" pos:line="711" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="712" pos:column="25">if <condition pos:line="712" pos:column="28">(<expr><name pos:line="712" pos:column="29">Message</name> <op:operator pos:line="712" pos:column="37">!=</op:operator> <name pos:line="712" pos:column="40">NPPM_GETOPENFILENAMESSECOND</name></expr>)</condition><then pos:line="712" pos:column="68"> <block pos:line="712" pos:column="69">{
				<for pos:line="713" pos:column="33">for (<init><decl><type><name pos:line="713" pos:column="38">int</name></type> <name pos:line="713" pos:column="42">i</name> <init pos:line="713" pos:column="44">= <expr><lit:literal type="number" pos:line="713" pos:column="46">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="713" pos:column="50">i</name> <op:operator pos:line="713" pos:column="52">&lt;</op:operator> <call><name><name pos:line="713" pos:column="54">_mainDocTab</name><op:operator pos:line="713" pos:column="65">.</op:operator><name pos:line="713" pos:column="66">nbItem</name></name><argument_list pos:line="713" pos:column="72">()</argument_list></call> <op:operator pos:line="713" pos:column="75">&amp;&amp;</op:operator> <name pos:line="713" pos:column="78">j</name> <op:operator pos:line="713" pos:column="80">&lt;</op:operator> <name pos:line="713" pos:column="82">nbFileNames</name></expr> ;</condition> <incr><expr><name pos:line="713" pos:column="96">i</name><op:operator pos:line="713" pos:column="97">++</op:operator></expr></incr>)
				<block pos:line="714" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="715" pos:column="41">BufferID</name></type> <name pos:line="715" pos:column="50">id</name> <init pos:line="715" pos:column="53">= <expr><call><name><name pos:line="715" pos:column="55">_mainDocTab</name><op:operator pos:line="715" pos:column="66">.</op:operator><name pos:line="715" pos:column="67">getBufferByIndex</name></name><argument_list pos:line="715" pos:column="83">(<argument><expr><name pos:line="715" pos:column="84">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="716" pos:column="41">Buffer</name> <type:modifier pos:line="716" pos:column="48">*</type:modifier></type> <name pos:line="716" pos:column="50">buf</name> <init pos:line="716" pos:column="54">= <expr><call><name><name pos:line="716" pos:column="56">MainFileManager</name><op:operator pos:line="716" pos:column="71">-&gt;</op:operator><name pos:line="716" pos:column="73">getBufferByID</name></name><argument_list pos:line="716" pos:column="86">(<argument><expr><name pos:line="716" pos:column="87">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="717" pos:column="41">lstrcpy</name><argument_list pos:line="717" pos:column="48">(<argument><expr><name><name pos:line="717" pos:column="49">fileNames</name><index pos:line="717" pos:column="58">[<expr><name pos:line="717" pos:column="59">j</name><op:operator pos:line="717" pos:column="60">++</op:operator></expr>]</index></name></expr></argument>, <argument><expr><call><name><name pos:line="717" pos:column="65">buf</name><op:operator pos:line="717" pos:column="68">-&gt;</op:operator><name pos:line="717" pos:column="70">getFullPathName</name></name><argument_list pos:line="717" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></then></if>
			<if pos:line="720" pos:column="25">if <condition pos:line="720" pos:column="28">(<expr><name pos:line="720" pos:column="29">Message</name> <op:operator pos:line="720" pos:column="37">!=</op:operator> <name pos:line="720" pos:column="40">NPPM_GETOPENFILENAMESPRIMARY</name></expr>)</condition><then pos:line="720" pos:column="69"> <block pos:line="720" pos:column="70">{
				<for pos:line="721" pos:column="33">for (<init><decl><type><name pos:line="721" pos:column="38">int</name></type> <name pos:line="721" pos:column="42">i</name> <init pos:line="721" pos:column="44">= <expr><lit:literal type="number" pos:line="721" pos:column="46">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="721" pos:column="50">i</name> <op:operator pos:line="721" pos:column="52">&lt;</op:operator> <call><name><name pos:line="721" pos:column="54">_subDocTab</name><op:operator pos:line="721" pos:column="64">.</op:operator><name pos:line="721" pos:column="65">nbItem</name></name><argument_list pos:line="721" pos:column="71">()</argument_list></call> <op:operator pos:line="721" pos:column="74">&amp;&amp;</op:operator> <name pos:line="721" pos:column="77">j</name> <op:operator pos:line="721" pos:column="79">&lt;</op:operator> <name pos:line="721" pos:column="81">nbFileNames</name></expr> ;</condition> <incr><expr><name pos:line="721" pos:column="95">i</name><op:operator pos:line="721" pos:column="96">++</op:operator></expr></incr>)
				<block pos:line="722" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="723" pos:column="41">BufferID</name></type> <name pos:line="723" pos:column="50">id</name> <init pos:line="723" pos:column="53">= <expr><call><name><name pos:line="723" pos:column="55">_subDocTab</name><op:operator pos:line="723" pos:column="65">.</op:operator><name pos:line="723" pos:column="66">getBufferByIndex</name></name><argument_list pos:line="723" pos:column="82">(<argument><expr><name pos:line="723" pos:column="83">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="724" pos:column="41">Buffer</name> <type:modifier pos:line="724" pos:column="48">*</type:modifier></type> <name pos:line="724" pos:column="50">buf</name> <init pos:line="724" pos:column="54">= <expr><call><name><name pos:line="724" pos:column="56">MainFileManager</name><op:operator pos:line="724" pos:column="71">-&gt;</op:operator><name pos:line="724" pos:column="73">getBufferByID</name></name><argument_list pos:line="724" pos:column="86">(<argument><expr><name pos:line="724" pos:column="87">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="725" pos:column="41">lstrcpy</name><argument_list pos:line="725" pos:column="48">(<argument><expr><name><name pos:line="725" pos:column="49">fileNames</name><index pos:line="725" pos:column="58">[<expr><name pos:line="725" pos:column="59">j</name><op:operator pos:line="725" pos:column="60">++</op:operator></expr>]</index></name></expr></argument>, <argument><expr><call><name><name pos:line="725" pos:column="65">buf</name><op:operator pos:line="725" pos:column="68">-&gt;</op:operator><name pos:line="725" pos:column="70">getFullPathName</name></name><argument_list pos:line="725" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></then></if>
			<return pos:line="728" pos:column="25">return <expr><name pos:line="728" pos:column="32">j</name></expr>;</return>
		}</block>

		</case><case pos:line="731" pos:column="17">case <expr><name pos:line="731" pos:column="22">WM_GETTASKLISTINFO</name></expr> :
		<block pos:line="732" pos:column="17">{
			<if pos:line="733" pos:column="25">if <condition pos:line="733" pos:column="28">(<expr><op:operator pos:line="733" pos:column="29">!</op:operator><name pos:line="733" pos:column="30">wParam</name></expr>)</condition><then pos:line="733" pos:column="37"> <return pos:line="733" pos:column="38">return <expr><lit:literal type="number" pos:line="733" pos:column="45">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="734" pos:column="25">TaskListInfo</name> <type:modifier pos:line="734" pos:column="38">*</type:modifier></type> <name pos:line="734" pos:column="40">tli</name> <init pos:line="734" pos:column="44">= <expr><op:operator pos:line="734" pos:column="46">(</op:operator><name pos:line="734" pos:column="47">TaskListInfo</name> <op:operator pos:line="734" pos:column="60">*</op:operator><op:operator pos:line="734" pos:column="61">)</op:operator><name pos:line="734" pos:column="62">wParam</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="735" pos:column="25">getTaskListInfo</name><argument_list pos:line="735" pos:column="40">(<argument><expr><name pos:line="735" pos:column="41">tli</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="737" pos:column="25">if <condition pos:line="737" pos:column="28">(<expr><name pos:line="737" pos:column="29">lParam</name> <op:operator pos:line="737" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="737" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="737" pos:column="41">
				<return pos:line="738" pos:column="33">return <expr><name pos:line="738" pos:column="40">TRUE</name></expr>;</return></then></if>

			<if pos:line="740" pos:column="25">if <condition pos:line="740" pos:column="28">(<expr><call><name><name pos:line="740" pos:column="29">NppParameters</name><op:operator pos:line="740" pos:column="42">::</op:operator><name pos:line="740" pos:column="44">getInstance</name></name><argument_list pos:line="740" pos:column="55">()</argument_list></call><op:operator pos:line="740" pos:column="57">-&gt;</op:operator><call><name pos:line="740" pos:column="59">getNppGUI</name><argument_list pos:line="740" pos:column="68">()</argument_list></call><op:operator pos:line="740" pos:column="70">.</op:operator><name pos:line="740" pos:column="71">_styleMRU</name></expr>)</condition><then pos:line="740" pos:column="81">
			<block pos:line="741" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="742" pos:column="33">tli</name><op:operator pos:line="742" pos:column="36">-&gt;</op:operator><name pos:line="742" pos:column="38">_currentIndex</name></name> <op:operator pos:line="742" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="742" pos:column="54">0</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="743" pos:column="33">std</name><op:operator pos:line="743" pos:column="36">::</op:operator><name pos:line="743" pos:column="38">sort</name></name><argument_list pos:line="743" pos:column="42">(<argument><expr><call><name><name pos:line="743" pos:column="43">tli</name><op:operator pos:line="743" pos:column="46">-&gt;</op:operator><name pos:line="743" pos:column="48">_tlfsLst</name><op:operator pos:line="743" pos:column="56">.</op:operator><name pos:line="743" pos:column="57">begin</name></name><argument_list pos:line="743" pos:column="62">()</argument_list></call></expr></argument>,<argument><expr><call><name><name pos:line="743" pos:column="65">tli</name><op:operator pos:line="743" pos:column="68">-&gt;</op:operator><name pos:line="743" pos:column="70">_tlfsLst</name><op:operator pos:line="743" pos:column="78">.</op:operator><name pos:line="743" pos:column="79">end</name></name><argument_list pos:line="743" pos:column="82">()</argument_list></call></expr></argument>,<argument><expr><call><name pos:line="743" pos:column="85">SortTaskListPred</name><argument_list pos:line="743" pos:column="101">(<argument><expr><name pos:line="743" pos:column="102">_mainDocTab</name></expr></argument>,<argument><expr><name pos:line="743" pos:column="114">_subDocTab</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="745" pos:column="25">else
			<block pos:line="746" pos:column="25">{
				<for pos:line="747" pos:column="33">for(<init><decl><type><name pos:line="747" pos:column="37">int</name></type> <name pos:line="747" pos:column="41">idx</name> <init pos:line="747" pos:column="45">= <expr><lit:literal type="number" pos:line="747" pos:column="47">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="747" pos:column="50">idx</name> <op:operator pos:line="747" pos:column="54">&lt;</op:operator> <op:operator pos:line="747" pos:column="56">(</op:operator><name pos:line="747" pos:column="57">int</name><op:operator pos:line="747" pos:column="60">)</op:operator><call><name><name pos:line="747" pos:column="61">tli</name><op:operator pos:line="747" pos:column="64">-&gt;</op:operator><name pos:line="747" pos:column="66">_tlfsLst</name><op:operator pos:line="747" pos:column="74">.</op:operator><name pos:line="747" pos:column="75">size</name></name><argument_list pos:line="747" pos:column="79">()</argument_list></call></expr>;</condition> <incr><expr><op:operator pos:line="747" pos:column="83">++</op:operator><name pos:line="747" pos:column="85">idx</name></expr></incr>)
				<block pos:line="748" pos:column="33">{
					<if pos:line="749" pos:column="41">if<condition pos:line="749" pos:column="43">(<expr><name><name pos:line="749" pos:column="44">tli</name><op:operator pos:line="749" pos:column="47">-&gt;</op:operator><name pos:line="749" pos:column="49">_tlfsLst</name><index pos:line="749" pos:column="57">[<expr><name pos:line="749" pos:column="58">idx</name></expr>]</index></name><op:operator pos:line="749" pos:column="62">.</op:operator><name pos:line="749" pos:column="63">_iView</name> <op:operator pos:line="749" pos:column="70">==</op:operator> <call><name pos:line="749" pos:column="73">currentView</name><argument_list pos:line="749" pos:column="84">()</argument_list></call> <op:operator pos:line="749" pos:column="87">&amp;&amp;</op:operator>
						<name><name pos:line="750" pos:column="49">tli</name><op:operator pos:line="750" pos:column="52">-&gt;</op:operator><name pos:line="750" pos:column="54">_tlfsLst</name><index pos:line="750" pos:column="62">[<expr><name pos:line="750" pos:column="63">idx</name></expr>]</index></name><op:operator pos:line="750" pos:column="67">.</op:operator><name pos:line="750" pos:column="68">_docIndex</name> <op:operator pos:line="750" pos:column="78">==</op:operator> <call><name><name pos:line="750" pos:column="81">_pDocTab</name><op:operator pos:line="750" pos:column="89">-&gt;</op:operator><name pos:line="750" pos:column="91">getCurrentTabIndex</name></name><argument_list pos:line="750" pos:column="109">()</argument_list></call></expr>)</condition><then pos:line="750" pos:column="112">
					<block pos:line="751" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="752" pos:column="49">tli</name><op:operator pos:line="752" pos:column="52">-&gt;</op:operator><name pos:line="752" pos:column="54">_currentIndex</name></name> <op:operator pos:line="752" pos:column="68">=</op:operator> <name pos:line="752" pos:column="70">idx</name></expr>;</expr_stmt>
						<break pos:line="753" pos:column="49">break;</break>
					}</block></then></if>
				}</block></for>
			}</block></else></if>
			<return pos:line="757" pos:column="25">return <expr><name pos:line="757" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="760" pos:column="17">case <expr><name pos:line="760" pos:column="22">WM_MOUSEWHEEL</name></expr> :
		<block pos:line="761" pos:column="17">{
			<if pos:line="762" pos:column="25">if <condition pos:line="762" pos:column="28">(<expr><call><name pos:line="762" pos:column="29">LOWORD</name><argument_list pos:line="762" pos:column="35">(<argument><expr><name pos:line="762" pos:column="36">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="762" pos:column="44">&amp;</op:operator> <name pos:line="762" pos:column="46">MK_RBUTTON</name></expr>)</condition><then pos:line="762" pos:column="57">
			<block pos:line="763" pos:column="25">{
				<comment type="line" pos:line="764" pos:column="33">// redirect to the IDC_PREV_DOC or IDC_NEXT_DOC so that we have the unified process</comment>

				<expr_stmt><expr><name><name pos:line="766" pos:column="33">pNppParam</name><op:operator pos:line="766" pos:column="42">-&gt;</op:operator><name pos:line="766" pos:column="44">_isTaskListRBUTTONUP_Active</name></name> <op:operator pos:line="766" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="766" pos:column="74">true</lit:literal></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="767" pos:column="33">short</name></type> <name pos:line="767" pos:column="39">zDelta</name> <init pos:line="767" pos:column="46">= <expr><op:operator pos:line="767" pos:column="48">(</op:operator><name pos:line="767" pos:column="49">short</name><op:operator pos:line="767" pos:column="54">)</op:operator> <call><name pos:line="767" pos:column="56">HIWORD</name><argument_list pos:line="767" pos:column="62">(<argument><expr><name pos:line="767" pos:column="63">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<return pos:line="768" pos:column="33">return <expr><call><name><op:operator pos:line="768" pos:column="40">::</op:operator><name pos:line="768" pos:column="42">SendMessage</name></name><argument_list pos:line="768" pos:column="53">(<argument><expr><call><name><name pos:line="768" pos:column="54">_pPublicInterface</name><op:operator pos:line="768" pos:column="71">-&gt;</op:operator><name pos:line="768" pos:column="73">getHSelf</name></name><argument_list pos:line="768" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="768" pos:column="85">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="768" pos:column="97">zDelta</name><op:operator pos:line="768" pos:column="103">&gt;</op:operator><lit:literal type="number" pos:line="768" pos:column="104">0</lit:literal><op:operator pos:line="768" pos:column="105">?</op:operator><name pos:line="768" pos:column="106">IDC_PREV_DOC</name><op:operator pos:line="768" pos:column="118">:</op:operator><name pos:line="768" pos:column="119">IDC_NEXT_DOC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="768" pos:column="133">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<return pos:line="770" pos:column="25">return <expr><name pos:line="770" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		
		</case><case pos:line="773" pos:column="17">case <expr><name pos:line="773" pos:column="22">WM_APPCOMMAND</name></expr> :
		<block pos:line="774" pos:column="17">{
			<switch pos:line="775" pos:column="25">switch<condition pos:line="775" pos:column="31">(<expr><call><name pos:line="775" pos:column="32">GET_APPCOMMAND_LPARAM</name><argument_list pos:line="775" pos:column="53">(<argument><expr><name pos:line="775" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>)</condition>
			<block pos:line="776" pos:column="25">{
				<case pos:line="777" pos:column="33">case <expr><name pos:line="777" pos:column="38">APPCOMMAND_BROWSER_BACKWARD</name></expr> :
				</case><case pos:line="778" pos:column="33">case <expr><name pos:line="778" pos:column="38">APPCOMMAND_BROWSER_FORWARD</name></expr> :
					<decl_stmt><decl><type><name pos:line="779" pos:column="41">int</name></type> <name pos:line="779" pos:column="45">nbDoc</name> <init pos:line="779" pos:column="51">= <expr><call><name pos:line="779" pos:column="53">viewVisible</name><argument_list pos:line="779" pos:column="64">(<argument><expr><name pos:line="779" pos:column="65">MAIN_VIEW</name></expr></argument>)</argument_list></call><op:operator pos:line="779" pos:column="75">?</op:operator><call><name><name pos:line="779" pos:column="76">_mainDocTab</name><op:operator pos:line="779" pos:column="87">.</op:operator><name pos:line="779" pos:column="88">nbItem</name></name><argument_list pos:line="779" pos:column="94">()</argument_list></call><op:operator pos:line="779" pos:column="96">:</op:operator><lit:literal type="number" pos:line="779" pos:column="97">0</lit:literal></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="780" pos:column="41">nbDoc</name> <op:operator pos:line="780" pos:column="47">+=</op:operator> <call><name pos:line="780" pos:column="50">viewVisible</name><argument_list pos:line="780" pos:column="61">(<argument><expr><name pos:line="780" pos:column="62">SUB_VIEW</name></expr></argument>)</argument_list></call><op:operator pos:line="780" pos:column="71">?</op:operator><call><name><name pos:line="780" pos:column="72">_subDocTab</name><op:operator pos:line="780" pos:column="82">.</op:operator><name pos:line="780" pos:column="83">nbItem</name></name><argument_list pos:line="780" pos:column="89">()</argument_list></call><op:operator pos:line="780" pos:column="91">:</op:operator><lit:literal type="number" pos:line="780" pos:column="92">0</lit:literal></expr>;</expr_stmt>
					<if pos:line="781" pos:column="41">if <condition pos:line="781" pos:column="44">(<expr><name pos:line="781" pos:column="45">nbDoc</name> <op:operator pos:line="781" pos:column="51">&gt;</op:operator> <lit:literal type="number" pos:line="781" pos:column="53">1</lit:literal></expr>)</condition><then pos:line="781" pos:column="55">
						<expr_stmt><expr><call><name pos:line="782" pos:column="49">activateNextDoc</name><argument_list pos:line="782" pos:column="64">(<argument><expr><op:operator pos:line="782" pos:column="65">(</op:operator><call><name pos:line="782" pos:column="66">GET_APPCOMMAND_LPARAM</name><argument_list pos:line="782" pos:column="87">(<argument><expr><name pos:line="782" pos:column="88">lParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="782" pos:column="96">==</op:operator> <name pos:line="782" pos:column="99">APPCOMMAND_BROWSER_FORWARD</name><op:operator pos:line="782" pos:column="125">)</op:operator><op:operator pos:line="782" pos:column="126">?</op:operator><name pos:line="782" pos:column="127">dirDown</name><op:operator pos:line="782" pos:column="134">:</op:operator><name pos:line="782" pos:column="135">dirUp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><name pos:line="783" pos:column="41">_linkTriggered</name> <op:operator pos:line="783" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="783" pos:column="58">true</lit:literal></expr>;</expr_stmt>
			</case>}</block></switch>
			<return pos:line="785" pos:column="25">return <expr><call><name><op:operator pos:line="785" pos:column="32">::</op:operator><name pos:line="785" pos:column="34">DefWindowProc</name></name><argument_list pos:line="785" pos:column="47">(<argument><expr><name pos:line="785" pos:column="48">hwnd</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="54">Message</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="63">wParam</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="71">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="788" pos:column="17">case <expr><name pos:line="788" pos:column="22">NPPM_GETNBSESSIONFILES</name></expr> :
		<block pos:line="789" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="790" pos:column="25">const</specifier> <name pos:line="790" pos:column="31">TCHAR</name> <type:modifier pos:line="790" pos:column="37">*</type:modifier></type><name pos:line="790" pos:column="38">sessionFileName</name> <init pos:line="790" pos:column="54">= <expr><op:operator pos:line="790" pos:column="56">(</op:operator>const <name pos:line="790" pos:column="63">TCHAR</name> <op:operator pos:line="790" pos:column="69">*</op:operator><op:operator pos:line="790" pos:column="70">)</op:operator><name pos:line="790" pos:column="71">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="791" pos:column="25">if <condition pos:line="791" pos:column="28">(<expr><op:operator pos:line="791" pos:column="29">(</op:operator><op:operator pos:line="791" pos:column="30">!</op:operator><name pos:line="791" pos:column="31">sessionFileName</name><op:operator pos:line="791" pos:column="46">)</op:operator> <op:operator pos:line="791" pos:column="48">||</op:operator> <op:operator pos:line="791" pos:column="51">(</op:operator><name><name pos:line="791" pos:column="52">sessionFileName</name><index pos:line="791" pos:column="67">[<expr><lit:literal type="number" pos:line="791" pos:column="68">0</lit:literal></expr>]</index></name> <op:operator pos:line="791" pos:column="71">==</op:operator> <lit:literal type="char" pos:line="791" pos:column="74">'\0'</lit:literal><op:operator pos:line="791" pos:column="78">)</op:operator></expr>)</condition><then pos:line="791" pos:column="80"> <return pos:line="791" pos:column="81">return <expr><lit:literal type="number" pos:line="791" pos:column="88">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="792" pos:column="25">Session</name></type> <name pos:line="792" pos:column="33">session2Load</name></decl>;</decl_stmt>
			<if pos:line="793" pos:column="25">if <condition pos:line="793" pos:column="28">(<expr><call><name><name pos:line="793" pos:column="29">pNppParam</name><op:operator pos:line="793" pos:column="38">-&gt;</op:operator><name pos:line="793" pos:column="40">loadSession</name></name><argument_list pos:line="793" pos:column="51">(<argument><expr><name pos:line="793" pos:column="52">session2Load</name></expr></argument>, <argument><expr><name pos:line="793" pos:column="66">sessionFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="793" pos:column="83">
			<block pos:line="794" pos:column="25">{
				<return pos:line="795" pos:column="33">return <expr><call><name><name pos:line="795" pos:column="40">session2Load</name><op:operator pos:line="795" pos:column="52">.</op:operator><name pos:line="795" pos:column="53">nbMainFiles</name></name><argument_list pos:line="795" pos:column="64">()</argument_list></call> <op:operator pos:line="795" pos:column="67">+</op:operator> <call><name><name pos:line="795" pos:column="69">session2Load</name><op:operator pos:line="795" pos:column="81">.</op:operator><name pos:line="795" pos:column="82">nbSubFiles</name></name><argument_list pos:line="795" pos:column="92">()</argument_list></call></expr>;</return>
			}</block></then></if>
			<return pos:line="797" pos:column="25">return <expr><lit:literal type="number" pos:line="797" pos:column="32">0</lit:literal></expr>;</return>
		}</block>
		
		</case><case pos:line="800" pos:column="17">case <expr><name pos:line="800" pos:column="22">NPPM_GETSESSIONFILES</name></expr> :
		<block pos:line="801" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="802" pos:column="25">const</specifier> <name pos:line="802" pos:column="31">TCHAR</name> <type:modifier pos:line="802" pos:column="37">*</type:modifier></type><name pos:line="802" pos:column="38">sessionFileName</name> <init pos:line="802" pos:column="54">= <expr><op:operator pos:line="802" pos:column="56">(</op:operator>const <name pos:line="802" pos:column="63">TCHAR</name> <op:operator pos:line="802" pos:column="69">*</op:operator><op:operator pos:line="802" pos:column="70">)</op:operator><name pos:line="802" pos:column="71">lParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="803" pos:column="25">TCHAR</name> <type:modifier pos:line="803" pos:column="31">*</type:modifier><type:modifier pos:line="803" pos:column="32">*</type:modifier></type><name pos:line="803" pos:column="33">sessionFileArray</name> <init pos:line="803" pos:column="50">= <expr><op:operator pos:line="803" pos:column="52">(</op:operator><name pos:line="803" pos:column="53">TCHAR</name> <op:operator pos:line="803" pos:column="59">*</op:operator><op:operator pos:line="803" pos:column="60">*</op:operator><op:operator pos:line="803" pos:column="61">)</op:operator><name pos:line="803" pos:column="62">wParam</name></expr></init></decl>;</decl_stmt>

			<if pos:line="805" pos:column="25">if <condition pos:line="805" pos:column="28">(<expr><op:operator pos:line="805" pos:column="29">(</op:operator><op:operator pos:line="805" pos:column="30">!</op:operator><name pos:line="805" pos:column="31">sessionFileName</name><op:operator pos:line="805" pos:column="46">)</op:operator> <op:operator pos:line="805" pos:column="48">||</op:operator> <op:operator pos:line="805" pos:column="51">(</op:operator><name><name pos:line="805" pos:column="52">sessionFileName</name><index pos:line="805" pos:column="67">[<expr><lit:literal type="number" pos:line="805" pos:column="68">0</lit:literal></expr>]</index></name> <op:operator pos:line="805" pos:column="71">==</op:operator> <lit:literal type="char" pos:line="805" pos:column="74">'\0'</lit:literal><op:operator pos:line="805" pos:column="78">)</op:operator></expr>)</condition><then pos:line="805" pos:column="80"> <return pos:line="805" pos:column="81">return <expr><name pos:line="805" pos:column="88">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="807" pos:column="25">Session</name></type> <name pos:line="807" pos:column="33">session2Load</name></decl>;</decl_stmt>
			<if pos:line="808" pos:column="25">if <condition pos:line="808" pos:column="28">(<expr><call><name><name pos:line="808" pos:column="29">pNppParam</name><op:operator pos:line="808" pos:column="38">-&gt;</op:operator><name pos:line="808" pos:column="40">loadSession</name></name><argument_list pos:line="808" pos:column="51">(<argument><expr><name pos:line="808" pos:column="52">session2Load</name></expr></argument>, <argument><expr><name pos:line="808" pos:column="66">sessionFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="808" pos:column="83">
			<block pos:line="809" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="810" pos:column="33">size_t</name></type> <name pos:line="810" pos:column="40">i</name> <init pos:line="810" pos:column="42">= <expr><lit:literal type="number" pos:line="810" pos:column="44">0</lit:literal></expr></init></decl>;</decl_stmt>
				<for pos:line="811" pos:column="33">for ( <init pos:line="811" pos:column="39">;</init> <condition><expr><name pos:line="811" pos:column="41">i</name> <op:operator pos:line="811" pos:column="43">&lt;</op:operator> <call><name><name pos:line="811" pos:column="45">session2Load</name><op:operator pos:line="811" pos:column="57">.</op:operator><name pos:line="811" pos:column="58">nbMainFiles</name></name><argument_list pos:line="811" pos:column="69">()</argument_list></call></expr> ;</condition> <incr/>)
				<block pos:line="812" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="813" pos:column="41">const</specifier> <name pos:line="813" pos:column="47">TCHAR</name> <type:modifier pos:line="813" pos:column="53">*</type:modifier></type><name pos:line="813" pos:column="54">pFn</name> <init pos:line="813" pos:column="58">= <expr><name><name pos:line="813" pos:column="60">session2Load</name><op:operator pos:line="813" pos:column="72">.</op:operator><name pos:line="813" pos:column="73">_mainViewFiles</name><index pos:line="813" pos:column="87">[<expr><name pos:line="813" pos:column="88">i</name></expr>]</index></name><op:operator pos:line="813" pos:column="90">.</op:operator><call><name><name pos:line="813" pos:column="91">_fileName</name><op:operator pos:line="813" pos:column="100">.</op:operator><name pos:line="813" pos:column="101">c_str</name></name><argument_list pos:line="813" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="814" pos:column="41">lstrcpy</name><argument_list pos:line="814" pos:column="48">(<argument><expr><name><name pos:line="814" pos:column="49">sessionFileArray</name><index pos:line="814" pos:column="65">[<expr><name pos:line="814" pos:column="66">i</name><op:operator pos:line="814" pos:column="67">++</op:operator></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="814" pos:column="72">pFn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>

				<for pos:line="817" pos:column="33">for (<init><decl><type><name pos:line="817" pos:column="38">size_t</name></type> <name pos:line="817" pos:column="45">j</name> <init pos:line="817" pos:column="47">= <expr><lit:literal type="number" pos:line="817" pos:column="49">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="817" pos:column="53">j</name> <op:operator pos:line="817" pos:column="55">&lt;</op:operator> <call><name><name pos:line="817" pos:column="57">session2Load</name><op:operator pos:line="817" pos:column="69">.</op:operator><name pos:line="817" pos:column="70">nbSubFiles</name></name><argument_list pos:line="817" pos:column="80">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="817" pos:column="85">j</name><op:operator pos:line="817" pos:column="86">++</op:operator></expr></incr>)
				<block pos:line="818" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="819" pos:column="41">const</specifier> <name pos:line="819" pos:column="47">TCHAR</name> <type:modifier pos:line="819" pos:column="53">*</type:modifier></type><name pos:line="819" pos:column="54">pFn</name> <init pos:line="819" pos:column="58">= <expr><name><name pos:line="819" pos:column="60">session2Load</name><op:operator pos:line="819" pos:column="72">.</op:operator><name pos:line="819" pos:column="73">_subViewFiles</name><index pos:line="819" pos:column="86">[<expr><name pos:line="819" pos:column="87">j</name></expr>]</index></name><op:operator pos:line="819" pos:column="89">.</op:operator><call><name><name pos:line="819" pos:column="90">_fileName</name><op:operator pos:line="819" pos:column="99">.</op:operator><name pos:line="819" pos:column="100">c_str</name></name><argument_list pos:line="819" pos:column="105">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="820" pos:column="41">lstrcpy</name><argument_list pos:line="820" pos:column="48">(<argument><expr><name><name pos:line="820" pos:column="49">sessionFileArray</name><index pos:line="820" pos:column="65">[<expr><name pos:line="820" pos:column="66">i</name><op:operator pos:line="820" pos:column="67">++</op:operator></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="820" pos:column="72">pFn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				<return pos:line="822" pos:column="33">return <expr><name pos:line="822" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			<return pos:line="824" pos:column="25">return <expr><name pos:line="824" pos:column="32">FALSE</name></expr>;</return>
		}</block>

		</case><case pos:line="827" pos:column="17">case <expr><name pos:line="827" pos:column="22">NPPM_DECODESCI</name></expr>:
		<block pos:line="828" pos:column="17">{
			<comment type="line" pos:line="829" pos:column="25">// convert to ASCII</comment>
			<decl_stmt><decl><type><name pos:line="830" pos:column="25">Utf8_16_Write</name></type>     <name pos:line="830" pos:column="43">UnicodeConvertor</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="831" pos:column="25">UINT</name></type>            <name pos:line="831" pos:column="41">length</name>  <init pos:line="831" pos:column="49">= <expr><lit:literal type="number" pos:line="831" pos:column="51">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="832" pos:column="25">char</name><type:modifier pos:line="832" pos:column="29">*</type:modifier></type>            <name pos:line="832" pos:column="42">buffer</name>  <init pos:line="832" pos:column="50">= <expr><name pos:line="832" pos:column="52">NULL</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="833" pos:column="25">ScintillaEditView</name> <type:modifier pos:line="833" pos:column="43">*</type:modifier></type><name pos:line="833" pos:column="44">pSci</name></decl>;</decl_stmt>

			<if pos:line="835" pos:column="25">if <condition pos:line="835" pos:column="28">(<expr><name pos:line="835" pos:column="29">wParam</name> <op:operator pos:line="835" pos:column="36">==</op:operator> <name pos:line="835" pos:column="39">MAIN_VIEW</name></expr>)</condition><then pos:line="835" pos:column="49">
				<expr_stmt><expr><name pos:line="836" pos:column="33">pSci</name> <op:operator pos:line="836" pos:column="38">=</op:operator> <op:operator pos:line="836" pos:column="40">&amp;</op:operator><name pos:line="836" pos:column="41">_mainEditView</name></expr>;</expr_stmt></then>
			<else pos:line="837" pos:column="25">else <if pos:line="837" pos:column="30">if <condition pos:line="837" pos:column="33">(<expr><name pos:line="837" pos:column="34">wParam</name> <op:operator pos:line="837" pos:column="41">==</op:operator> <name pos:line="837" pos:column="44">SUB_VIEW</name></expr>)</condition><then pos:line="837" pos:column="53">
				<expr_stmt><expr><name pos:line="838" pos:column="33">pSci</name> <op:operator pos:line="838" pos:column="38">=</op:operator> <op:operator pos:line="838" pos:column="40">&amp;</op:operator><name pos:line="838" pos:column="41">_subEditView</name></expr>;</expr_stmt></then>
			<else pos:line="839" pos:column="25">else
				<return pos:line="840" pos:column="33">return <expr><op:operator pos:line="840" pos:column="40">-</op:operator><lit:literal type="number" pos:line="840" pos:column="41">1</lit:literal></expr>;</return></else></if></else></if>
			

			<comment type="line" pos:line="843" pos:column="25">// get text of current scintilla</comment>
			<expr_stmt><expr><name pos:line="844" pos:column="25">length</name> <op:operator pos:line="844" pos:column="32">=</op:operator> <call><name><name pos:line="844" pos:column="34">pSci</name><op:operator pos:line="844" pos:column="38">-&gt;</op:operator><name pos:line="844" pos:column="40">execute</name></name><argument_list pos:line="844" pos:column="47">(<argument><expr><name pos:line="844" pos:column="48">SCI_GETTEXTLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="844" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="844" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="844" pos:column="73">+</op:operator> <lit:literal type="number" pos:line="844" pos:column="75">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="845" pos:column="25">buffer</name> <op:operator pos:line="845" pos:column="32">=</op:operator> <op:operator pos:line="845" pos:column="34">new</op:operator> <name><name pos:line="845" pos:column="38">char</name><index pos:line="845" pos:column="42">[<expr><name pos:line="845" pos:column="43">length</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="846" pos:column="25">pSci</name><op:operator pos:line="846" pos:column="29">-&gt;</op:operator><name pos:line="846" pos:column="31">execute</name></name><argument_list pos:line="846" pos:column="38">(<argument><expr><name pos:line="846" pos:column="39">SCI_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="846" pos:column="52">length</name></expr></argument>, <argument><expr><op:operator pos:line="846" pos:column="60">(</op:operator><name pos:line="846" pos:column="61">LPARAM</name><op:operator pos:line="846" pos:column="67">)</op:operator><name pos:line="846" pos:column="68">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="848" pos:column="25">// convert here      </comment>
			<decl_stmt><decl><type><name pos:line="849" pos:column="25">UniMode</name></type> <name pos:line="849" pos:column="33">unicodeMode</name> <init pos:line="849" pos:column="45">= <expr><call><name><name pos:line="849" pos:column="47">pSci</name><op:operator pos:line="849" pos:column="51">-&gt;</op:operator><name pos:line="849" pos:column="53">getCurrentBuffer</name></name><argument_list pos:line="849" pos:column="69">()</argument_list></call><op:operator pos:line="849" pos:column="71">-&gt;</op:operator><call><name pos:line="849" pos:column="73">getUnicodeMode</name><argument_list pos:line="849" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="850" pos:column="25">UnicodeConvertor</name><op:operator pos:line="850" pos:column="41">.</op:operator><name pos:line="850" pos:column="42">setEncoding</name></name><argument_list pos:line="850" pos:column="53">(<argument><expr><name pos:line="850" pos:column="54">unicodeMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="851" pos:column="25">length</name> <op:operator pos:line="851" pos:column="32">=</op:operator> <call><name><name pos:line="851" pos:column="34">UnicodeConvertor</name><op:operator pos:line="851" pos:column="50">.</op:operator><name pos:line="851" pos:column="51">convert</name></name><argument_list pos:line="851" pos:column="58">(<argument><expr><name pos:line="851" pos:column="59">buffer</name></expr></argument>, <argument><expr><name pos:line="851" pos:column="67">length</name><op:operator pos:line="851" pos:column="73">-</op:operator><lit:literal type="number" pos:line="851" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="853" pos:column="25">// set text in target</comment>
			<expr_stmt><expr><call><name><name pos:line="854" pos:column="25">pSci</name><op:operator pos:line="854" pos:column="29">-&gt;</op:operator><name pos:line="854" pos:column="31">execute</name></name><argument_list pos:line="854" pos:column="38">(<argument><expr><name pos:line="854" pos:column="39">SCI_CLEARALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="855" pos:column="25">pSci</name><op:operator pos:line="855" pos:column="29">-&gt;</op:operator><name pos:line="855" pos:column="31">addText</name></name><argument_list pos:line="855" pos:column="38">(<argument><expr><name pos:line="855" pos:column="39">length</name></expr></argument>, <argument><expr><call><name><name pos:line="855" pos:column="47">UnicodeConvertor</name><op:operator pos:line="855" pos:column="63">.</op:operator><name pos:line="855" pos:column="64">getNewBuf</name></name><argument_list pos:line="855" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="856" pos:column="25">pSci</name><op:operator pos:line="856" pos:column="29">-&gt;</op:operator><name pos:line="856" pos:column="31">execute</name></name><argument_list pos:line="856" pos:column="38">(<argument><expr><name pos:line="856" pos:column="39">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="858" pos:column="25">pSci</name><op:operator pos:line="858" pos:column="29">-&gt;</op:operator><name pos:line="858" pos:column="31">execute</name></name><argument_list pos:line="858" pos:column="38">(<argument><expr><name pos:line="858" pos:column="39">SCI_SETCODEPAGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="860" pos:column="25">// set cursor position</comment>
			<expr_stmt><expr><call><name><name pos:line="861" pos:column="25">pSci</name><op:operator pos:line="861" pos:column="29">-&gt;</op:operator><name pos:line="861" pos:column="31">execute</name></name><argument_list pos:line="861" pos:column="38">(<argument><expr><name pos:line="861" pos:column="39">SCI_GOTOPOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="863" pos:column="25">// clean buffer</comment>
			<expr_stmt><expr><op:operator pos:line="864" pos:column="25">delete</op:operator> <index pos:line="864" pos:column="32">[]</index> <name pos:line="864" pos:column="35">buffer</name></expr>;</expr_stmt>

			<return pos:line="866" pos:column="25">return <expr><name pos:line="866" pos:column="32">unicodeMode</name></expr>;</return>
		}</block>

		</case><case pos:line="869" pos:column="17">case <expr><name pos:line="869" pos:column="22">NPPM_ENCODESCI</name></expr>:
		<block pos:line="870" pos:column="17">{
			<comment type="line" pos:line="871" pos:column="25">// convert</comment>
			<decl_stmt><decl><type><name pos:line="872" pos:column="25">Utf8_16_Read</name></type>    <name pos:line="872" pos:column="41">UnicodeConvertor</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="873" pos:column="25">UINT</name></type>            <name pos:line="873" pos:column="41">length</name>  <init pos:line="873" pos:column="49">= <expr><lit:literal type="number" pos:line="873" pos:column="51">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="874" pos:column="25">char</name><type:modifier pos:line="874" pos:column="29">*</type:modifier></type>            <name pos:line="874" pos:column="42">buffer</name>  <init pos:line="874" pos:column="50">= <expr><name pos:line="874" pos:column="52">NULL</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="875" pos:column="25">ScintillaEditView</name> <type:modifier pos:line="875" pos:column="43">*</type:modifier></type><name pos:line="875" pos:column="44">pSci</name></decl>;</decl_stmt>

			<if pos:line="877" pos:column="25">if <condition pos:line="877" pos:column="28">(<expr><name pos:line="877" pos:column="29">wParam</name> <op:operator pos:line="877" pos:column="36">==</op:operator> <name pos:line="877" pos:column="39">MAIN_VIEW</name></expr>)</condition><then pos:line="877" pos:column="49">
				<expr_stmt><expr><name pos:line="878" pos:column="33">pSci</name> <op:operator pos:line="878" pos:column="38">=</op:operator> <op:operator pos:line="878" pos:column="40">&amp;</op:operator><name pos:line="878" pos:column="41">_mainEditView</name></expr>;</expr_stmt></then>
			<else pos:line="879" pos:column="25">else <if pos:line="879" pos:column="30">if <condition pos:line="879" pos:column="33">(<expr><name pos:line="879" pos:column="34">wParam</name> <op:operator pos:line="879" pos:column="41">==</op:operator> <name pos:line="879" pos:column="44">SUB_VIEW</name></expr>)</condition><then pos:line="879" pos:column="53">
				<expr_stmt><expr><name pos:line="880" pos:column="33">pSci</name> <op:operator pos:line="880" pos:column="38">=</op:operator> <op:operator pos:line="880" pos:column="40">&amp;</op:operator><name pos:line="880" pos:column="41">_subEditView</name></expr>;</expr_stmt></then>
			<else pos:line="881" pos:column="25">else
				<return pos:line="882" pos:column="33">return <expr><op:operator pos:line="882" pos:column="40">-</op:operator><lit:literal type="number" pos:line="882" pos:column="41">1</lit:literal></expr>;</return></else></if></else></if>

			<comment type="line" pos:line="884" pos:column="25">// get text of current scintilla</comment>
			<expr_stmt><expr><name pos:line="885" pos:column="25">length</name> <op:operator pos:line="885" pos:column="32">=</op:operator> <call><name><name pos:line="885" pos:column="34">pSci</name><op:operator pos:line="885" pos:column="38">-&gt;</op:operator><name pos:line="885" pos:column="40">execute</name></name><argument_list pos:line="885" pos:column="47">(<argument><expr><name pos:line="885" pos:column="48">SCI_GETTEXTLENGTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="885" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="885" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="885" pos:column="73">+</op:operator> <lit:literal type="number" pos:line="885" pos:column="75">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="886" pos:column="25">buffer</name> <op:operator pos:line="886" pos:column="32">=</op:operator> <op:operator pos:line="886" pos:column="34">new</op:operator> <name><name pos:line="886" pos:column="38">char</name><index pos:line="886" pos:column="42">[<expr><name pos:line="886" pos:column="43">length</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="887" pos:column="25">pSci</name><op:operator pos:line="887" pos:column="29">-&gt;</op:operator><name pos:line="887" pos:column="31">execute</name></name><argument_list pos:line="887" pos:column="38">(<argument><expr><name pos:line="887" pos:column="39">SCI_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="887" pos:column="52">length</name></expr></argument>, <argument><expr><op:operator pos:line="887" pos:column="60">(</op:operator><name pos:line="887" pos:column="61">LPARAM</name><op:operator pos:line="887" pos:column="67">)</op:operator><name pos:line="887" pos:column="68">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="889" pos:column="25">length</name> <op:operator pos:line="889" pos:column="32">=</op:operator> <call><name><name pos:line="889" pos:column="34">UnicodeConvertor</name><op:operator pos:line="889" pos:column="50">.</op:operator><name pos:line="889" pos:column="51">convert</name></name><argument_list pos:line="889" pos:column="58">(<argument><expr><name pos:line="889" pos:column="59">buffer</name></expr></argument>, <argument><expr><name pos:line="889" pos:column="67">length</name><op:operator pos:line="889" pos:column="73">-</op:operator><lit:literal type="number" pos:line="889" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="891" pos:column="25">// set text in target</comment>
			<expr_stmt><expr><call><name><name pos:line="892" pos:column="25">pSci</name><op:operator pos:line="892" pos:column="29">-&gt;</op:operator><name pos:line="892" pos:column="31">execute</name></name><argument_list pos:line="892" pos:column="38">(<argument><expr><name pos:line="892" pos:column="39">SCI_CLEARALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="893" pos:column="25">pSci</name><op:operator pos:line="893" pos:column="29">-&gt;</op:operator><name pos:line="893" pos:column="31">addText</name></name><argument_list pos:line="893" pos:column="38">(<argument><expr><name pos:line="893" pos:column="39">length</name></expr></argument>, <argument><expr><call><name><name pos:line="893" pos:column="47">UnicodeConvertor</name><op:operator pos:line="893" pos:column="63">.</op:operator><name pos:line="893" pos:column="64">getNewBuf</name></name><argument_list pos:line="893" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			

			<expr_stmt><expr><call><name><name pos:line="897" pos:column="25">pSci</name><op:operator pos:line="897" pos:column="29">-&gt;</op:operator><name pos:line="897" pos:column="31">execute</name></name><argument_list pos:line="897" pos:column="38">(<argument><expr><name pos:line="897" pos:column="39">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="899" pos:column="25">// set cursor position</comment>
			<expr_stmt><expr><call><name><name pos:line="900" pos:column="25">pSci</name><op:operator pos:line="900" pos:column="29">-&gt;</op:operator><name pos:line="900" pos:column="31">execute</name></name><argument_list pos:line="900" pos:column="38">(<argument><expr><name pos:line="900" pos:column="39">SCI_GOTOPOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="902" pos:column="25">// clean buffer</comment>
			<expr_stmt><expr><op:operator pos:line="903" pos:column="25">delete</op:operator> <index pos:line="903" pos:column="32">[]</index> <name pos:line="903" pos:column="35">buffer</name></expr>;</expr_stmt>

			<comment type="line" pos:line="905" pos:column="25">// set new encoding if BOM was changed by other programms</comment>
			<decl_stmt><decl><type><name pos:line="906" pos:column="25">UniMode</name></type> <name pos:line="906" pos:column="33">um</name> <init pos:line="906" pos:column="36">= <expr><call><name><name pos:line="906" pos:column="38">UnicodeConvertor</name><op:operator pos:line="906" pos:column="54">.</op:operator><name pos:line="906" pos:column="55">getEncoding</name></name><argument_list pos:line="906" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><op:operator pos:line="907" pos:column="25">(</op:operator><call><name><name pos:line="907" pos:column="26">pSci</name><op:operator pos:line="907" pos:column="30">-&gt;</op:operator><name pos:line="907" pos:column="32">getCurrentBuffer</name></name><argument_list pos:line="907" pos:column="48">()</argument_list></call><op:operator pos:line="907" pos:column="50">)</op:operator><op:operator pos:line="907" pos:column="51">-&gt;</op:operator><call><name pos:line="907" pos:column="53">setUnicodeMode</name><argument_list pos:line="907" pos:column="67">(<argument><expr><name pos:line="907" pos:column="68">um</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="908" pos:column="25">(</op:operator><call><name><name pos:line="908" pos:column="26">pSci</name><op:operator pos:line="908" pos:column="30">-&gt;</op:operator><name pos:line="908" pos:column="32">getCurrentBuffer</name></name><argument_list pos:line="908" pos:column="48">()</argument_list></call><op:operator pos:line="908" pos:column="50">)</op:operator><op:operator pos:line="908" pos:column="51">-&gt;</op:operator><call><name pos:line="908" pos:column="53">setDirty</name><argument_list pos:line="908" pos:column="61">(<argument><expr><lit:literal type="boolean" pos:line="908" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="909" pos:column="25">return <expr><name pos:line="909" pos:column="32">um</name></expr>;</return>
		}</block>

		</case><case pos:line="912" pos:column="17">case <expr><name pos:line="912" pos:column="22">NPPM_ACTIVATEDOC</name></expr> :
		</case><case pos:line="913" pos:column="17">case <expr><name pos:line="913" pos:column="22">NPPM_TRIGGERTABBARCONTEXTMENU</name></expr>:
		<block pos:line="914" pos:column="17">{
			<comment type="line" pos:line="915" pos:column="25">// similar to NPPM_ACTIVEDOC</comment>
			<decl_stmt><decl><type><name pos:line="916" pos:column="25">int</name></type> <name pos:line="916" pos:column="29">whichView</name> <init pos:line="916" pos:column="39">= <expr><op:operator pos:line="916" pos:column="41">(</op:operator><op:operator pos:line="916" pos:column="42">(</op:operator><name pos:line="916" pos:column="43">wParam</name> <op:operator pos:line="916" pos:column="50">!=</op:operator> <name pos:line="916" pos:column="53">MAIN_VIEW</name><op:operator pos:line="916" pos:column="62">)</op:operator> <op:operator pos:line="916" pos:column="64">&amp;&amp;</op:operator> <op:operator pos:line="916" pos:column="67">(</op:operator><name pos:line="916" pos:column="68">wParam</name> <op:operator pos:line="916" pos:column="75">!=</op:operator> <name pos:line="916" pos:column="78">SUB_VIEW</name><op:operator pos:line="916" pos:column="86">)</op:operator><op:operator pos:line="916" pos:column="87">)</op:operator><op:operator pos:line="916" pos:column="88">?</op:operator><call><name pos:line="916" pos:column="89">currentView</name><argument_list pos:line="916" pos:column="100">()</argument_list></call><op:operator pos:line="916" pos:column="102">:</op:operator><name pos:line="916" pos:column="103">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="917" pos:column="25">int</name></type> <name pos:line="917" pos:column="29">index</name> <init pos:line="917" pos:column="35">= <expr><name pos:line="917" pos:column="37">lParam</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name pos:line="919" pos:column="25">switchEditViewTo</name><argument_list pos:line="919" pos:column="41">(<argument><expr><name pos:line="919" pos:column="42">whichView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="920" pos:column="25">activateDoc</name><argument_list pos:line="920" pos:column="36">(<argument><expr><name pos:line="920" pos:column="37">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="922" pos:column="25">if <condition pos:line="922" pos:column="28">(<expr><name pos:line="922" pos:column="29">Message</name> <op:operator pos:line="922" pos:column="37">==</op:operator> <name pos:line="922" pos:column="40">NPPM_TRIGGERTABBARCONTEXTMENU</name></expr>)</condition><then pos:line="922" pos:column="70">
			<block pos:line="923" pos:column="25">{
				<comment type="line" pos:line="924" pos:column="33">// open here tab menu</comment>
				<decl_stmt><decl><type><name pos:line="925" pos:column="33">NMHDR</name></type>	<name pos:line="925" pos:column="41">nmhdr</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="926" pos:column="33">nmhdr</name><op:operator pos:line="926" pos:column="38">.</op:operator><name pos:line="926" pos:column="39">code</name></name> <op:operator pos:line="926" pos:column="44">=</op:operator> <name pos:line="926" pos:column="46">NM_RCLICK</name></expr>;</expr_stmt>

				<expr_stmt><expr><name><name pos:line="928" pos:column="33">nmhdr</name><op:operator pos:line="928" pos:column="38">.</op:operator><name pos:line="928" pos:column="39">hwndFrom</name></name> <op:operator pos:line="928" pos:column="48">=</op:operator> <op:operator pos:line="928" pos:column="50">(</op:operator><name pos:line="928" pos:column="51">whichView</name> <op:operator pos:line="928" pos:column="61">==</op:operator> <name pos:line="928" pos:column="64">MAIN_VIEW</name><op:operator pos:line="928" pos:column="73">)</op:operator><op:operator pos:line="928" pos:column="74">?</op:operator><call><name><name pos:line="928" pos:column="75">_mainDocTab</name><op:operator pos:line="928" pos:column="86">.</op:operator><name pos:line="928" pos:column="87">getHSelf</name></name><argument_list pos:line="928" pos:column="95">()</argument_list></call><op:operator pos:line="928" pos:column="97">:</op:operator><call><name><name pos:line="928" pos:column="98">_subDocTab</name><op:operator pos:line="928" pos:column="108">.</op:operator><name pos:line="928" pos:column="109">getHSelf</name></name><argument_list pos:line="928" pos:column="117">()</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><name><name pos:line="930" pos:column="33">nmhdr</name><op:operator pos:line="930" pos:column="38">.</op:operator><name pos:line="930" pos:column="39">idFrom</name></name> <op:operator pos:line="930" pos:column="46">=</op:operator> <call><name><op:operator pos:line="930" pos:column="48">::</op:operator><name pos:line="930" pos:column="50">GetDlgCtrlID</name></name><argument_list pos:line="930" pos:column="62">(<argument><expr><name><name pos:line="930" pos:column="63">nmhdr</name><op:operator pos:line="930" pos:column="68">.</op:operator><name pos:line="930" pos:column="69">hwndFrom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="931" pos:column="33">::</op:operator><name pos:line="931" pos:column="35">SendMessage</name></name><argument_list pos:line="931" pos:column="46">(<argument><expr><call><name><name pos:line="931" pos:column="47">_pPublicInterface</name><op:operator pos:line="931" pos:column="64">-&gt;</op:operator><name pos:line="931" pos:column="66">getHSelf</name></name><argument_list pos:line="931" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="931" pos:column="78">WM_NOTIFY</name></expr></argument>, <argument><expr><name><name pos:line="931" pos:column="89">nmhdr</name><op:operator pos:line="931" pos:column="94">.</op:operator><name pos:line="931" pos:column="95">idFrom</name></name></expr></argument>, <argument><expr><op:operator pos:line="931" pos:column="103">(</op:operator><name pos:line="931" pos:column="104">LPARAM</name><op:operator pos:line="931" pos:column="110">)</op:operator><op:operator pos:line="931" pos:column="111">&amp;</op:operator><name pos:line="931" pos:column="112">nmhdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="933" pos:column="25">return <expr><name pos:line="933" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="936" pos:column="17">case <expr><name pos:line="936" pos:column="22">NPPM_GETNPPVERSION</name></expr>:
		<block pos:line="937" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="938" pos:column="25">const</specifier> <name pos:line="938" pos:column="31">TCHAR</name> <type:modifier pos:line="938" pos:column="37">*</type:modifier></type> <name pos:line="938" pos:column="39">verStr</name> <init pos:line="938" pos:column="46">= <expr><name pos:line="938" pos:column="48">VERSION_VALUE</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="939" pos:column="25">TCHAR</name></type> <name><name pos:line="939" pos:column="31">mainVerStr</name><index pos:line="939" pos:column="41">[<expr><lit:literal type="number" pos:line="939" pos:column="42">16</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="940" pos:column="25">TCHAR</name></type> <name><name pos:line="940" pos:column="31">auxVerStr</name><index pos:line="940" pos:column="40">[<expr><lit:literal type="number" pos:line="940" pos:column="41">16</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="941" pos:column="25">bool</name></type> <name pos:line="941" pos:column="30">isDot</name> <init pos:line="941" pos:column="36">= <expr><lit:literal type="boolean" pos:line="941" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="942" pos:column="25">int</name></type> <name pos:line="942" pos:column="29">j</name> <init pos:line="942" pos:column="31">=<expr><lit:literal type="number" pos:line="942" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="943" pos:column="25">int</name></type> <name pos:line="943" pos:column="29">k</name> <init pos:line="943" pos:column="31">= <expr><lit:literal type="number" pos:line="943" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="944" pos:column="25">for (<init><decl><type><name pos:line="944" pos:column="30">int</name></type> <name pos:line="944" pos:column="34">i</name> <init pos:line="944" pos:column="36">= <expr><lit:literal type="number" pos:line="944" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name><name pos:line="944" pos:column="42">verStr</name><index pos:line="944" pos:column="48">[<expr><name pos:line="944" pos:column="49">i</name></expr>]</index></name></expr> ;</condition> <incr><expr><name pos:line="944" pos:column="54">i</name><op:operator pos:line="944" pos:column="55">++</op:operator></expr></incr>)
			<block pos:line="945" pos:column="25">{
				<if pos:line="946" pos:column="33">if <condition pos:line="946" pos:column="36">(<expr><name><name pos:line="946" pos:column="37">verStr</name><index pos:line="946" pos:column="43">[<expr><name pos:line="946" pos:column="44">i</name></expr>]</index></name> <op:operator pos:line="946" pos:column="47">==</op:operator> <lit:literal type="char" pos:line="946" pos:column="50">'.'</lit:literal></expr>)</condition><then pos:line="946" pos:column="54">
					<expr_stmt><expr><name pos:line="947" pos:column="41">isDot</name> <op:operator pos:line="947" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="947" pos:column="49">true</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="948" pos:column="33">else
				<block pos:line="949" pos:column="33">{
					<if pos:line="950" pos:column="41">if <condition pos:line="950" pos:column="44">(<expr><op:operator pos:line="950" pos:column="45">!</op:operator><name pos:line="950" pos:column="46">isDot</name></expr>)</condition><then pos:line="950" pos:column="52">
						<expr_stmt><expr><name><name pos:line="951" pos:column="49">mainVerStr</name><index pos:line="951" pos:column="59">[<expr><name pos:line="951" pos:column="60">j</name><op:operator pos:line="951" pos:column="61">++</op:operator></expr>]</index></name> <op:operator pos:line="951" pos:column="65">=</op:operator> <name><name pos:line="951" pos:column="67">verStr</name><index pos:line="951" pos:column="73">[<expr><name pos:line="951" pos:column="74">i</name></expr>]</index></name></expr>;</expr_stmt></then>
					<else pos:line="952" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="953" pos:column="49">auxVerStr</name><index pos:line="953" pos:column="58">[<expr><name pos:line="953" pos:column="59">k</name><op:operator pos:line="953" pos:column="60">++</op:operator></expr>]</index></name> <op:operator pos:line="953" pos:column="64">=</op:operator> <name><name pos:line="953" pos:column="66">verStr</name><index pos:line="953" pos:column="72">[<expr><name pos:line="953" pos:column="73">i</name></expr>]</index></name></expr>;</expr_stmt></else></if>
				}</block></else></if>
			}</block></for>
			<expr_stmt><expr><name><name pos:line="956" pos:column="25">mainVerStr</name><index pos:line="956" pos:column="35">[<expr><name pos:line="956" pos:column="36">j</name></expr>]</index></name> <op:operator pos:line="956" pos:column="39">=</op:operator> <lit:literal type="char" pos:line="956" pos:column="41">'\0'</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="957" pos:column="25">auxVerStr</name><index pos:line="957" pos:column="34">[<expr><name pos:line="957" pos:column="35">k</name></expr>]</index></name> <op:operator pos:line="957" pos:column="38">=</op:operator> <lit:literal type="char" pos:line="957" pos:column="40">'\0'</lit:literal></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="959" pos:column="25">int</name></type> <name pos:line="959" pos:column="29">mainVer</name> <init pos:line="959" pos:column="37">= <expr><lit:literal type="number" pos:line="959" pos:column="39">0</lit:literal></expr></init><op:operator pos:line="959" pos:column="40">,</op:operator> <name pos:line="959" pos:column="42">auxVer</name> <init pos:line="959" pos:column="49">= <expr><lit:literal type="number" pos:line="959" pos:column="51">0</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="960" pos:column="25">if <condition pos:line="960" pos:column="28">(<expr><name><name pos:line="960" pos:column="29">mainVerStr</name><index pos:line="960" pos:column="39">[<expr><lit:literal type="number" pos:line="960" pos:column="40">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="960" pos:column="43">
				<expr_stmt><expr><name pos:line="961" pos:column="33">mainVer</name> <op:operator pos:line="961" pos:column="41">=</op:operator> <call><name pos:line="961" pos:column="43">generic_atoi</name><argument_list pos:line="961" pos:column="55">(<argument><expr><name pos:line="961" pos:column="56">mainVerStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<if pos:line="963" pos:column="25">if <condition pos:line="963" pos:column="28">(<expr><name><name pos:line="963" pos:column="29">auxVerStr</name><index pos:line="963" pos:column="38">[<expr><lit:literal type="number" pos:line="963" pos:column="39">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="963" pos:column="42">
				<expr_stmt><expr><name pos:line="964" pos:column="33">auxVer</name> <op:operator pos:line="964" pos:column="40">=</op:operator> <call><name pos:line="964" pos:column="42">generic_atoi</name><argument_list pos:line="964" pos:column="54">(<argument><expr><name pos:line="964" pos:column="55">auxVerStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<return pos:line="966" pos:column="25">return <expr><call><name pos:line="966" pos:column="32">MAKELONG</name><argument_list pos:line="966" pos:column="40">(<argument><expr><name pos:line="966" pos:column="41">auxVer</name></expr></argument>, <argument><expr><name pos:line="966" pos:column="49">mainVer</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="969" pos:column="17">case <expr><name pos:line="969" pos:column="22">WM_GETCURRENTMACROSTATUS</name></expr> :
			<if pos:line="970" pos:column="25">if <condition pos:line="970" pos:column="28">(<expr><name pos:line="970" pos:column="29">_recordingMacro</name></expr>)</condition><then pos:line="970" pos:column="45"> <return pos:line="970" pos:column="46">return <expr><name pos:line="970" pos:column="53">MACRO_RECORDING_IN_PROGRESS</name></expr>;</return></then></if>
			<return pos:line="971" pos:column="25">return <expr><op:operator pos:line="971" pos:column="32">(</op:operator><call><name><name pos:line="971" pos:column="33">_macro</name><op:operator pos:line="971" pos:column="39">.</op:operator><name pos:line="971" pos:column="40">empty</name></name><argument_list pos:line="971" pos:column="45">()</argument_list></call><op:operator pos:line="971" pos:column="47">)</op:operator><op:operator pos:line="971" pos:column="48">?</op:operator><lit:literal type="number" pos:line="971" pos:column="49">0</lit:literal><op:operator pos:line="971" pos:column="50">:</op:operator><name pos:line="971" pos:column="51">MACRO_RECORDING_HAS_STOPPED</name></expr>;</return>

		</case><case pos:line="973" pos:column="17">case <expr><name pos:line="973" pos:column="22">WM_FRSAVE_INT</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="974" pos:column="25">_macro</name><op:operator pos:line="974" pos:column="31">.</op:operator><name pos:line="974" pos:column="32">push_back</name></name><argument_list pos:line="974" pos:column="41">(<argument><expr><call><name pos:line="974" pos:column="42">recordedMacroStep</name><argument_list pos:line="974" pos:column="59">(<argument><expr><name pos:line="974" pos:column="60">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="974" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><name pos:line="974" pos:column="71">lParam</name></expr></argument>, <argument><expr><name pos:line="974" pos:column="79">NULL</name></expr></argument>, <argument><expr><name><name pos:line="974" pos:column="85">recordedMacroStep</name><op:operator pos:line="974" pos:column="102">::</op:operator><name pos:line="974" pos:column="104">mtSavedSnR</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="975" pos:column="25">break;</break>

		</case><case pos:line="977" pos:column="17">case <expr><name pos:line="977" pos:column="22">WM_FRSAVE_STR</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="978" pos:column="25">_macro</name><op:operator pos:line="978" pos:column="31">.</op:operator><name pos:line="978" pos:column="32">push_back</name></name><argument_list pos:line="978" pos:column="41">(<argument><expr><call><name pos:line="978" pos:column="42">recordedMacroStep</name><argument_list pos:line="978" pos:column="59">(<argument><expr><name pos:line="978" pos:column="60">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="978" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="978" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="978" pos:column="74">(</op:operator>const <name pos:line="978" pos:column="81">TCHAR</name> <op:operator pos:line="978" pos:column="87">*</op:operator><op:operator pos:line="978" pos:column="88">)</op:operator><name pos:line="978" pos:column="89">lParam</name></expr></argument>, <argument><expr><name><name pos:line="978" pos:column="97">recordedMacroStep</name><op:operator pos:line="978" pos:column="114">::</op:operator><name pos:line="978" pos:column="116">mtSavedSnR</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="979" pos:column="25">break;</break>

		</case><case pos:line="981" pos:column="17">case <expr><name pos:line="981" pos:column="22">WM_MACRODLGRUNMACRO</name></expr>:
		<block pos:line="982" pos:column="17">{
			<if pos:line="983" pos:column="25">if <condition pos:line="983" pos:column="28">(<expr><op:operator pos:line="983" pos:column="29">!</op:operator><name pos:line="983" pos:column="30">_recordingMacro</name></expr>)</condition><then pos:line="983" pos:column="46"> <comment type="line" pos:line="983" pos:column="47">// if we're not currently recording, then playback the recorded keystrokes</comment>
			<block pos:line="984" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="985" pos:column="33">int</name></type> <name pos:line="985" pos:column="37">times</name> <init pos:line="985" pos:column="43">= <expr><lit:literal type="number" pos:line="985" pos:column="45">1</lit:literal></expr></init></decl>;</decl_stmt>
				<if pos:line="986" pos:column="33">if <condition pos:line="986" pos:column="36">(<expr><call><name><name pos:line="986" pos:column="37">_runMacroDlg</name><op:operator pos:line="986" pos:column="49">.</op:operator><name pos:line="986" pos:column="50">getMode</name></name><argument_list pos:line="986" pos:column="57">()</argument_list></call> <op:operator pos:line="986" pos:column="60">==</op:operator> <name pos:line="986" pos:column="63">RM_RUN_MULTI</name></expr>)</condition><then pos:line="986" pos:column="76">
				<block pos:line="987" pos:column="33">{
					<expr_stmt><expr><name pos:line="988" pos:column="41">times</name> <op:operator pos:line="988" pos:column="47">=</op:operator> <call><name><name pos:line="988" pos:column="49">_runMacroDlg</name><op:operator pos:line="988" pos:column="61">.</op:operator><name pos:line="988" pos:column="62">getTimes</name></name><argument_list pos:line="988" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="990" pos:column="33">else <if pos:line="990" pos:column="38">if <condition pos:line="990" pos:column="41">(<expr><call><name><name pos:line="990" pos:column="42">_runMacroDlg</name><op:operator pos:line="990" pos:column="54">.</op:operator><name pos:line="990" pos:column="55">getMode</name></name><argument_list pos:line="990" pos:column="62">()</argument_list></call> <op:operator pos:line="990" pos:column="65">==</op:operator> <name pos:line="990" pos:column="68">RM_RUN_EOF</name></expr>)</condition><then pos:line="990" pos:column="79">
				<block pos:line="991" pos:column="33">{
					<expr_stmt><expr><name pos:line="992" pos:column="41">times</name> <op:operator pos:line="992" pos:column="47">=</op:operator> <op:operator pos:line="992" pos:column="49">-</op:operator><lit:literal type="number" pos:line="992" pos:column="50">1</lit:literal></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="994" pos:column="33">else
				<block pos:line="995" pos:column="33">{
					<break pos:line="996" pos:column="41">break;</break>
				}</block></else></if></else></if>
                          
				<decl_stmt><decl><type><name pos:line="999" pos:column="33">int</name></type> <name pos:line="999" pos:column="37">counter</name> <init pos:line="999" pos:column="45">= <expr><lit:literal type="number" pos:line="999" pos:column="47">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1000" pos:column="33">int</name></type> <name pos:line="1000" pos:column="37">lastLine</name> <init pos:line="1000" pos:column="46">= <expr><call><name pos:line="1000" pos:column="48">int</name><argument_list pos:line="1000" pos:column="51">(<argument><expr><call><name><name pos:line="1000" pos:column="52">_pEditView</name><op:operator pos:line="1000" pos:column="62">-&gt;</op:operator><name pos:line="1000" pos:column="64">execute</name></name><argument_list pos:line="1000" pos:column="71">(<argument><expr><name pos:line="1000" pos:column="72">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1000" pos:column="91">-</op:operator> <lit:literal type="number" pos:line="1000" pos:column="93">1</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1001" pos:column="33">int</name></type> <name pos:line="1001" pos:column="37">currLine</name> <init pos:line="1001" pos:column="46">= <expr><call><name><name pos:line="1001" pos:column="48">_pEditView</name><op:operator pos:line="1001" pos:column="58">-&gt;</op:operator><name pos:line="1001" pos:column="60">getCurrentLineNumber</name></name><argument_list pos:line="1001" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1002" pos:column="33">int</name></type> <name pos:line="1002" pos:column="37">indexMacro</name> <init pos:line="1002" pos:column="48">= <expr><call><name><name pos:line="1002" pos:column="50">_runMacroDlg</name><op:operator pos:line="1002" pos:column="62">.</op:operator><name pos:line="1002" pos:column="63">getMacro2Exec</name></name><argument_list pos:line="1002" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1003" pos:column="33">int</name></type> <name pos:line="1003" pos:column="37">deltaLastLine</name> <init pos:line="1003" pos:column="51">= <expr><lit:literal type="number" pos:line="1003" pos:column="53">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1004" pos:column="33">int</name></type> <name pos:line="1004" pos:column="37">deltaCurrLine</name> <init pos:line="1004" pos:column="51">= <expr><lit:literal type="number" pos:line="1004" pos:column="53">0</lit:literal></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="1006" pos:column="33">Macro</name></type> <name pos:line="1006" pos:column="39">m</name> <init pos:line="1006" pos:column="41">= <expr><name pos:line="1006" pos:column="43">_macro</name></expr></init></decl>;</decl_stmt>

				<if pos:line="1008" pos:column="33">if <condition pos:line="1008" pos:column="36">(<expr><name pos:line="1008" pos:column="37">indexMacro</name> <op:operator pos:line="1008" pos:column="48">!=</op:operator> <op:operator pos:line="1008" pos:column="51">-</op:operator><lit:literal type="number" pos:line="1008" pos:column="52">1</lit:literal></expr>)</condition><then pos:line="1008" pos:column="54">
				<block pos:line="1009" pos:column="33">{
					<decl_stmt><decl><type><name><name pos:line="1010" pos:column="41">vector</name><argument_list pos:line="1010" pos:column="47">&lt;<argument><expr><name pos:line="1010" pos:column="48">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1010" pos:column="63">&amp;</type:modifier></type> <name pos:line="1010" pos:column="65">ms</name> <init pos:line="1010" pos:column="68">= <expr><call><name><name pos:line="1010" pos:column="70">pNppParam</name><op:operator pos:line="1010" pos:column="79">-&gt;</op:operator><name pos:line="1010" pos:column="81">getMacroList</name></name><argument_list pos:line="1010" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1011" pos:column="41">m</name> <op:operator pos:line="1011" pos:column="43">=</op:operator> <name><name pos:line="1011" pos:column="45">ms</name><index pos:line="1011" pos:column="47">[<expr><name pos:line="1011" pos:column="48">indexMacro</name></expr>]</index></name><op:operator pos:line="1011" pos:column="59">.</op:operator><call><name pos:line="1011" pos:column="60">getMacro</name><argument_list pos:line="1011" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>

				<expr_stmt><expr><call><name><name pos:line="1014" pos:column="33">_pEditView</name><op:operator pos:line="1014" pos:column="43">-&gt;</op:operator><name pos:line="1014" pos:column="45">execute</name></name><argument_list pos:line="1014" pos:column="52">(<argument><expr><name pos:line="1014" pos:column="53">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<for pos:line="1015" pos:column="33">for(<init pos:line="1015" pos:column="37">;</init><condition pos:line="1015" pos:column="38">;</condition><incr/>)
				<block pos:line="1016" pos:column="33">{
					<for pos:line="1017" pos:column="41">for (<init><decl><type><name><name pos:line="1017" pos:column="46">Macro</name><op:operator pos:line="1017" pos:column="51">::</op:operator><name pos:line="1017" pos:column="53">iterator</name></name></type> <name pos:line="1017" pos:column="62">step</name> <init pos:line="1017" pos:column="67">= <expr><call><name><name pos:line="1017" pos:column="69">m</name><op:operator pos:line="1017" pos:column="70">.</op:operator><name pos:line="1017" pos:column="71">begin</name></name><argument_list pos:line="1017" pos:column="76">()</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="1017" pos:column="80">step</name> <op:operator pos:line="1017" pos:column="85">!=</op:operator> <call><name><name pos:line="1017" pos:column="88">m</name><op:operator pos:line="1017" pos:column="89">.</op:operator><name pos:line="1017" pos:column="90">end</name></name><argument_list pos:line="1017" pos:column="93">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="1017" pos:column="97">step</name><op:operator pos:line="1017" pos:column="101">++</op:operator></expr></incr>)
						<expr_stmt><expr><call><name><name pos:line="1018" pos:column="49">step</name><op:operator pos:line="1018" pos:column="53">-&gt;</op:operator><name pos:line="1018" pos:column="55">PlayBack</name></name><argument_list pos:line="1018" pos:column="63">(<argument><expr><name><name pos:line="1018" pos:column="64">this</name><op:operator pos:line="1018" pos:column="68">-&gt;</op:operator><name pos:line="1018" pos:column="70">_pPublicInterface</name></name></expr></argument>, <argument><expr><name pos:line="1018" pos:column="89">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
						
					<expr_stmt><expr><name pos:line="1020" pos:column="41">counter</name><op:operator pos:line="1020" pos:column="48">++</op:operator></expr>;</expr_stmt>
					<if pos:line="1021" pos:column="41">if <condition pos:line="1021" pos:column="44">( <expr><name pos:line="1021" pos:column="46">times</name> <op:operator pos:line="1021" pos:column="52">&gt;=</op:operator> <lit:literal type="number" pos:line="1021" pos:column="55">0</lit:literal></expr> )</condition><then pos:line="1021" pos:column="58">
					<block pos:line="1022" pos:column="41">{
						<if pos:line="1023" pos:column="49">if <condition pos:line="1023" pos:column="52">( <expr><name pos:line="1023" pos:column="54">counter</name> <op:operator pos:line="1023" pos:column="62">&gt;=</op:operator> <name pos:line="1023" pos:column="65">times</name></expr> )</condition><then pos:line="1023" pos:column="72"> <break pos:line="1023" pos:column="73">break;</break></then></if>
					}</block></then>
					<else pos:line="1025" pos:column="41">else <comment type="line" pos:line="1025" pos:column="46">// run until eof</comment>
					<block pos:line="1026" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="1027" pos:column="49">bool</name></type> <name pos:line="1027" pos:column="54">cursorMovedUp</name> <init pos:line="1027" pos:column="68">= <expr><name pos:line="1027" pos:column="70">deltaCurrLine</name> <op:operator pos:line="1027" pos:column="84">&lt;</op:operator> <lit:literal type="number" pos:line="1027" pos:column="86">0</lit:literal></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="1028" pos:column="49">deltaLastLine</name> <op:operator pos:line="1028" pos:column="63">=</op:operator> <call><name pos:line="1028" pos:column="65">int</name><argument_list pos:line="1028" pos:column="68">(<argument><expr><call><name><name pos:line="1028" pos:column="69">_pEditView</name><op:operator pos:line="1028" pos:column="79">-&gt;</op:operator><name pos:line="1028" pos:column="81">execute</name></name><argument_list pos:line="1028" pos:column="88">(<argument><expr><name pos:line="1028" pos:column="89">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1028" pos:column="108">-</op:operator> <lit:literal type="number" pos:line="1028" pos:column="110">1</lit:literal> <op:operator pos:line="1028" pos:column="112">-</op:operator> <name pos:line="1028" pos:column="114">lastLine</name></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="1029" pos:column="49">deltaCurrLine</name> <op:operator pos:line="1029" pos:column="63">=</op:operator> <call><name><name pos:line="1029" pos:column="65">_pEditView</name><op:operator pos:line="1029" pos:column="75">-&gt;</op:operator><name pos:line="1029" pos:column="77">getCurrentLineNumber</name></name><argument_list pos:line="1029" pos:column="97">()</argument_list></call> <op:operator pos:line="1029" pos:column="100">-</op:operator> <name pos:line="1029" pos:column="102">currLine</name></expr>;</expr_stmt>

						<if pos:line="1031" pos:column="49">if <condition pos:line="1031" pos:column="52">(<expr><op:operator pos:line="1031" pos:column="53">(</op:operator> <name pos:line="1031" pos:column="55">deltaCurrLine</name> <op:operator pos:line="1031" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="1031" pos:column="72">0</lit:literal> <op:operator pos:line="1031" pos:column="74">)</op:operator>	<comment type="line" pos:line="1031" pos:column="81">// line no. not changed?</comment>
							<op:operator pos:line="1032" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="1032" pos:column="60">(</op:operator><name pos:line="1032" pos:column="61">deltaLastLine</name> <op:operator pos:line="1032" pos:column="75">&gt;=</op:operator> <lit:literal type="number" pos:line="1032" pos:column="78">0</lit:literal><op:operator pos:line="1032" pos:column="79">)</op:operator></expr>)</condition><then pos:line="1032" pos:column="81">  <comment type="line" pos:line="1032" pos:column="83">// and no lines removed?</comment>
							<break pos:line="1033" pos:column="57">break;</break></then></if> <comment type="line" pos:line="1033" pos:column="64">// exit</comment>

						<comment type="line" pos:line="1035" pos:column="49">// Update the line count, but only if the number of lines remaining is shrinking.</comment>
						<comment type="line" pos:line="1036" pos:column="49">// Otherwise, the macro playback may never end.</comment>
						<if pos:line="1037" pos:column="49">if <condition pos:line="1037" pos:column="52">(<expr><name pos:line="1037" pos:column="53">deltaLastLine</name> <op:operator pos:line="1037" pos:column="67">&lt;</op:operator> <name pos:line="1037" pos:column="69">deltaCurrLine</name></expr>)</condition><then pos:line="1037" pos:column="83">
							<expr_stmt><expr><name pos:line="1038" pos:column="57">lastLine</name> <op:operator pos:line="1038" pos:column="66">+=</op:operator> <name pos:line="1038" pos:column="69">deltaLastLine</name></expr>;</expr_stmt></then></if>

						<comment type="line" pos:line="1040" pos:column="49">// save current line</comment>
						<expr_stmt><expr><name pos:line="1041" pos:column="49">currLine</name> <op:operator pos:line="1041" pos:column="58">+=</op:operator> <name pos:line="1041" pos:column="61">deltaCurrLine</name></expr>;</expr_stmt>

						<comment type="line" pos:line="1043" pos:column="49">// eof?</comment>
						<if pos:line="1044" pos:column="49">if <condition pos:line="1044" pos:column="52">(<expr><op:operator pos:line="1044" pos:column="53">(</op:operator><name pos:line="1044" pos:column="54">currLine</name> <op:operator pos:line="1044" pos:column="63">&gt;=</op:operator> <name pos:line="1044" pos:column="66">lastLine</name><op:operator pos:line="1044" pos:column="74">)</op:operator> <op:operator pos:line="1044" pos:column="76">||</op:operator> <op:operator pos:line="1044" pos:column="79">(</op:operator><name pos:line="1044" pos:column="80">currLine</name> <op:operator pos:line="1044" pos:column="89">&lt;</op:operator> <lit:literal type="number" pos:line="1044" pos:column="91">0</lit:literal><op:operator pos:line="1044" pos:column="92">)</op:operator> 
							<op:operator pos:line="1045" pos:column="57">||</op:operator> <op:operator pos:line="1045" pos:column="60">(</op:operator><op:operator pos:line="1045" pos:column="61">(</op:operator><name pos:line="1045" pos:column="62">deltaCurrLine</name> <op:operator pos:line="1045" pos:column="76">==</op:operator> <lit:literal type="number" pos:line="1045" pos:column="79">0</lit:literal><op:operator pos:line="1045" pos:column="80">)</op:operator> <op:operator pos:line="1045" pos:column="82">&amp;&amp;</op:operator> <op:operator pos:line="1045" pos:column="85">(</op:operator><name pos:line="1045" pos:column="86">currLine</name> <op:operator pos:line="1045" pos:column="95">==</op:operator> <lit:literal type="number" pos:line="1045" pos:column="98">0</lit:literal><op:operator pos:line="1045" pos:column="99">)</op:operator> <op:operator pos:line="1045" pos:column="101">&amp;&amp;</op:operator> <op:operator pos:line="1045" pos:column="104">(</op:operator><op:operator pos:line="1045" pos:column="105">(</op:operator><name pos:line="1045" pos:column="106">deltaLastLine</name> <op:operator pos:line="1045" pos:column="120">&gt;=</op:operator> <lit:literal type="number" pos:line="1045" pos:column="123">0</lit:literal><op:operator pos:line="1045" pos:column="124">)</op:operator> <op:operator pos:line="1045" pos:column="126">||</op:operator> <name pos:line="1045" pos:column="129">cursorMovedUp</name><op:operator pos:line="1045" pos:column="142">)</op:operator><op:operator pos:line="1045" pos:column="143">)</op:operator></expr>)</condition><then pos:line="1045" pos:column="145">
							<break pos:line="1046" pos:column="57">break;</break></then></if>
					}</block></else></if>
				}</block></for>
				<expr_stmt><expr><call><name><name pos:line="1049" pos:column="33">_pEditView</name><op:operator pos:line="1049" pos:column="43">-&gt;</op:operator><name pos:line="1049" pos:column="45">execute</name></name><argument_list pos:line="1049" pos:column="52">(<argument><expr><name pos:line="1049" pos:column="53">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<break pos:line="1052" pos:column="17">break;</break>

		</case><case pos:line="1054" pos:column="17">case <expr><name pos:line="1054" pos:column="22">NPPM_CREATESCINTILLAHANDLE</name></expr> :
		<block pos:line="1055" pos:column="17">{
			<return pos:line="1056" pos:column="25">return <expr><op:operator pos:line="1056" pos:column="32">(</op:operator><name pos:line="1056" pos:column="33">LRESULT</name><op:operator pos:line="1056" pos:column="40">)</op:operator><call><name><name pos:line="1056" pos:column="41">_scintillaCtrls4Plugins</name><op:operator pos:line="1056" pos:column="64">.</op:operator><name pos:line="1056" pos:column="65">createSintilla</name></name><argument_list pos:line="1056" pos:column="79">(<argument><expr><op:operator pos:line="1056" pos:column="80">(</op:operator><name pos:line="1056" pos:column="81">lParam</name> <op:operator pos:line="1056" pos:column="88">==</op:operator> <name pos:line="1056" pos:column="91">NULL</name><op:operator pos:line="1056" pos:column="95">?</op:operator><call><name><name pos:line="1056" pos:column="96">_pPublicInterface</name><op:operator pos:line="1056" pos:column="113">-&gt;</op:operator><name pos:line="1056" pos:column="115">getHSelf</name></name><argument_list pos:line="1056" pos:column="123">()</argument_list></call><op:operator pos:line="1056" pos:column="125">:</op:operator><op:operator pos:line="1056" pos:column="126">(</op:operator><name pos:line="1056" pos:column="127">HWND</name><op:operator pos:line="1056" pos:column="131">)</op:operator><name pos:line="1056" pos:column="132">lParam</name><op:operator pos:line="1056" pos:column="138">)</op:operator></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1059" pos:column="17">case <expr><name pos:line="1059" pos:column="22">NPPM_INTERNAL_GETSCINTEDTVIEW</name></expr>:
		<block pos:line="1060" pos:column="17">{
			<return pos:line="1061" pos:column="25">return <expr><op:operator pos:line="1061" pos:column="32">(</op:operator><name pos:line="1061" pos:column="33">LRESULT</name><op:operator pos:line="1061" pos:column="40">)</op:operator><call><name><name pos:line="1061" pos:column="41">_scintillaCtrls4Plugins</name><op:operator pos:line="1061" pos:column="64">.</op:operator><name pos:line="1061" pos:column="65">getScintillaEditViewFrom</name></name><argument_list pos:line="1061" pos:column="89">(<argument><expr><op:operator pos:line="1061" pos:column="90">(</op:operator><name pos:line="1061" pos:column="91">HWND</name><op:operator pos:line="1061" pos:column="95">)</op:operator><name pos:line="1061" pos:column="96">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1064" pos:column="17">case <expr><name pos:line="1064" pos:column="22">NPPM_DESTROYSCINTILLAHANDLE</name></expr> :
		<block pos:line="1065" pos:column="17">{
			<return pos:line="1066" pos:column="25">return <expr><call><name><name pos:line="1066" pos:column="32">_scintillaCtrls4Plugins</name><op:operator pos:line="1066" pos:column="55">.</op:operator><name pos:line="1066" pos:column="56">destroyScintilla</name></name><argument_list pos:line="1066" pos:column="72">(<argument><expr><op:operator pos:line="1066" pos:column="73">(</op:operator><name pos:line="1066" pos:column="74">HWND</name><op:operator pos:line="1066" pos:column="78">)</op:operator><name pos:line="1066" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1069" pos:column="17">case <expr><name pos:line="1069" pos:column="22">NPPM_GETNBUSERLANG</name></expr> :
		<block pos:line="1070" pos:column="17">{
			<if pos:line="1071" pos:column="25">if <condition pos:line="1071" pos:column="28">(<expr><name pos:line="1071" pos:column="29">lParam</name></expr>)</condition><then pos:line="1071" pos:column="36">
				<expr_stmt><expr><op:operator pos:line="1072" pos:column="33">*</op:operator><op:operator pos:line="1072" pos:column="34">(</op:operator><op:operator pos:line="1072" pos:column="35">(</op:operator><name pos:line="1072" pos:column="36">int</name> <op:operator pos:line="1072" pos:column="40">*</op:operator><op:operator pos:line="1072" pos:column="41">)</op:operator><name pos:line="1072" pos:column="42">lParam</name><op:operator pos:line="1072" pos:column="48">)</op:operator> <op:operator pos:line="1072" pos:column="50">=</op:operator> <name pos:line="1072" pos:column="52">IDM_LANG_USER</name></expr>;</expr_stmt></then></if>
			<return pos:line="1073" pos:column="25">return <expr><call><name><name pos:line="1073" pos:column="32">pNppParam</name><op:operator pos:line="1073" pos:column="41">-&gt;</op:operator><name pos:line="1073" pos:column="43">getNbUserLang</name></name><argument_list pos:line="1073" pos:column="56">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1076" pos:column="17">case <expr><name pos:line="1076" pos:column="22">NPPM_GETCURRENTDOCINDEX</name></expr> :
		<block pos:line="1077" pos:column="17">{
			<if pos:line="1078" pos:column="25">if <condition pos:line="1078" pos:column="28">(<expr><name pos:line="1078" pos:column="29">lParam</name> <op:operator pos:line="1078" pos:column="36">==</op:operator> <name pos:line="1078" pos:column="39">SUB_VIEW</name></expr>)</condition><then pos:line="1078" pos:column="48">
			<block pos:line="1079" pos:column="25">{
				<if pos:line="1080" pos:column="33">if <condition pos:line="1080" pos:column="36">(<expr><op:operator pos:line="1080" pos:column="37">!</op:operator><call><name pos:line="1080" pos:column="38">viewVisible</name><argument_list pos:line="1080" pos:column="49">(<argument><expr><name pos:line="1080" pos:column="50">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1080" pos:column="60">
					<return pos:line="1081" pos:column="41">return <expr><op:operator pos:line="1081" pos:column="48">-</op:operator><lit:literal type="number" pos:line="1081" pos:column="49">1</lit:literal></expr>;</return></then></if>
				<return pos:line="1082" pos:column="33">return <expr><call><name><name pos:line="1082" pos:column="40">_subDocTab</name><op:operator pos:line="1082" pos:column="50">.</op:operator><name pos:line="1082" pos:column="51">getCurrentTabIndex</name></name><argument_list pos:line="1082" pos:column="69">()</argument_list></call></expr>;</return>
			}</block></then>
			<else pos:line="1084" pos:column="25">else <comment type="line" pos:line="1084" pos:column="30">//MAIN_VIEW</comment>
			<block pos:line="1085" pos:column="25">{
				<if pos:line="1086" pos:column="33">if <condition pos:line="1086" pos:column="36">(<expr><op:operator pos:line="1086" pos:column="37">!</op:operator><call><name pos:line="1086" pos:column="38">viewVisible</name><argument_list pos:line="1086" pos:column="49">(<argument><expr><name pos:line="1086" pos:column="50">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1086" pos:column="61">
					<return pos:line="1087" pos:column="41">return <expr><op:operator pos:line="1087" pos:column="48">-</op:operator><lit:literal type="number" pos:line="1087" pos:column="49">1</lit:literal></expr>;</return></then></if>
				<return pos:line="1088" pos:column="33">return <expr><call><name><name pos:line="1088" pos:column="40">_mainDocTab</name><op:operator pos:line="1088" pos:column="51">.</op:operator><name pos:line="1088" pos:column="52">getCurrentTabIndex</name></name><argument_list pos:line="1088" pos:column="70">()</argument_list></call></expr>;</return>
			}</block></else></if>
		}</block>

		</case><case pos:line="1092" pos:column="17">case <expr><name pos:line="1092" pos:column="22">NPPM_SETSTATUSBAR</name></expr> :
		<block pos:line="1093" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1094" pos:column="25">TCHAR</name> <type:modifier pos:line="1094" pos:column="31">*</type:modifier></type><name pos:line="1094" pos:column="32">str2set</name> <init pos:line="1094" pos:column="40">= <expr><op:operator pos:line="1094" pos:column="42">(</op:operator><name pos:line="1094" pos:column="43">TCHAR</name> <op:operator pos:line="1094" pos:column="49">*</op:operator><op:operator pos:line="1094" pos:column="50">)</op:operator><name pos:line="1094" pos:column="51">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1095" pos:column="25">if <condition pos:line="1095" pos:column="28">(<expr><op:operator pos:line="1095" pos:column="29">!</op:operator><name pos:line="1095" pos:column="30">str2set</name> <op:operator pos:line="1095" pos:column="38">||</op:operator> <op:operator pos:line="1095" pos:column="41">!</op:operator><name><name pos:line="1095" pos:column="42">str2set</name><index pos:line="1095" pos:column="49">[<expr><lit:literal type="number" pos:line="1095" pos:column="50">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1095" pos:column="53">
				<return pos:line="1096" pos:column="33">return <expr><name pos:line="1096" pos:column="40">FALSE</name></expr>;</return></then></if>

			<switch pos:line="1098" pos:column="25">switch <condition pos:line="1098" pos:column="32">(<expr><name pos:line="1098" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="1099" pos:column="25">{
				<case pos:line="1100" pos:column="33">case <expr><name pos:line="1100" pos:column="38">STATUSBAR_DOC_TYPE</name></expr> :
				</case><case pos:line="1101" pos:column="33">case <expr><name pos:line="1101" pos:column="38">STATUSBAR_DOC_SIZE</name></expr> :
				</case><case pos:line="1102" pos:column="33">case <expr><name pos:line="1102" pos:column="38">STATUSBAR_CUR_POS</name></expr> :
				</case><case pos:line="1103" pos:column="33">case <expr><name pos:line="1103" pos:column="38">STATUSBAR_EOF_FORMAT</name></expr> :
				</case><case pos:line="1104" pos:column="33">case <expr><name pos:line="1104" pos:column="38">STATUSBAR_UNICODE_TYPE</name></expr> :
				</case><case pos:line="1105" pos:column="33">case <expr><name pos:line="1105" pos:column="38">STATUSBAR_TYPING_MODE</name></expr> :
					<expr_stmt><expr><call><name><name pos:line="1106" pos:column="41">_statusBar</name><op:operator pos:line="1106" pos:column="51">.</op:operator><name pos:line="1106" pos:column="52">setText</name></name><argument_list pos:line="1106" pos:column="59">(<argument><expr><name pos:line="1106" pos:column="60">str2set</name></expr></argument>, <argument><expr><name pos:line="1106" pos:column="69">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1107" pos:column="41">return <expr><name pos:line="1107" pos:column="48">TRUE</name></expr>;</return>
				</case><default pos:line="1108" pos:column="33">default :
					<return pos:line="1109" pos:column="41">return <expr><name pos:line="1109" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>

		</case><case pos:line="1113" pos:column="17">case <expr><name pos:line="1113" pos:column="22">NPPM_GETMENUHANDLE</name></expr> :
		<block pos:line="1114" pos:column="17">{
			<if pos:line="1115" pos:column="25">if <condition pos:line="1115" pos:column="28">(<expr><name pos:line="1115" pos:column="29">wParam</name> <op:operator pos:line="1115" pos:column="36">==</op:operator> <name pos:line="1115" pos:column="39">NPPPLUGINMENU</name></expr>)</condition><then pos:line="1115" pos:column="53">
				<return pos:line="1116" pos:column="33">return <expr><op:operator pos:line="1116" pos:column="40">(</op:operator><name pos:line="1116" pos:column="41">LRESULT</name><op:operator pos:line="1116" pos:column="48">)</op:operator><call><name><name pos:line="1116" pos:column="49">_pluginsManager</name><op:operator pos:line="1116" pos:column="64">.</op:operator><name pos:line="1116" pos:column="65">getMenuHandle</name></name><argument_list pos:line="1116" pos:column="78">()</argument_list></call></expr>;</return></then>
			<else pos:line="1117" pos:column="25">else
				<return pos:line="1118" pos:column="33">return <expr><name pos:line="1118" pos:column="40">NULL</name></expr>;</return></else></if>
		}</block>

		</case><case pos:line="1121" pos:column="17">case <expr><name pos:line="1121" pos:column="22">NPPM_LOADSESSION</name></expr> :
		<block pos:line="1122" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1123" pos:column="25">fileLoadSession</name><argument_list pos:line="1123" pos:column="40">(<argument><expr><op:operator pos:line="1123" pos:column="41">(</op:operator>const <name pos:line="1123" pos:column="48">TCHAR</name> <op:operator pos:line="1123" pos:column="54">*</op:operator><op:operator pos:line="1123" pos:column="55">)</op:operator><name pos:line="1123" pos:column="56">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1124" pos:column="25">return <expr><name pos:line="1124" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1127" pos:column="17">case <expr><name pos:line="1127" pos:column="22">NPPM_SAVECURRENTSESSION</name></expr> :
		<block pos:line="1128" pos:column="17">{
			<return pos:line="1129" pos:column="25">return <expr><op:operator pos:line="1129" pos:column="32">(</op:operator><name pos:line="1129" pos:column="33">LRESULT</name><op:operator pos:line="1129" pos:column="40">)</op:operator><call><name pos:line="1129" pos:column="41">fileSaveSession</name><argument_list pos:line="1129" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="1129" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1129" pos:column="60">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="1129" pos:column="66">(</op:operator>const <name pos:line="1129" pos:column="73">TCHAR</name> <op:operator pos:line="1129" pos:column="79">*</op:operator><op:operator pos:line="1129" pos:column="80">)</op:operator><name pos:line="1129" pos:column="81">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1132" pos:column="17">case <expr><name pos:line="1132" pos:column="22">NPPM_SAVESESSION</name></expr> :
		<block pos:line="1133" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1134" pos:column="25">sessionInfo</name> <type:modifier pos:line="1134" pos:column="37">*</type:modifier></type><name pos:line="1134" pos:column="38">pSi</name> <init pos:line="1134" pos:column="42">= <expr><op:operator pos:line="1134" pos:column="44">(</op:operator><name pos:line="1134" pos:column="45">sessionInfo</name> <op:operator pos:line="1134" pos:column="57">*</op:operator><op:operator pos:line="1134" pos:column="58">)</op:operator><name pos:line="1134" pos:column="59">lParam</name></expr></init></decl>;</decl_stmt>
			<return pos:line="1135" pos:column="25">return <expr><op:operator pos:line="1135" pos:column="32">(</op:operator><name pos:line="1135" pos:column="33">LRESULT</name><op:operator pos:line="1135" pos:column="40">)</op:operator><call><name pos:line="1135" pos:column="41">fileSaveSession</name><argument_list pos:line="1135" pos:column="56">(<argument><expr><name><name pos:line="1135" pos:column="57">pSi</name><op:operator pos:line="1135" pos:column="60">-&gt;</op:operator><name pos:line="1135" pos:column="62">nbFile</name></name></expr></argument>, <argument><expr><name><name pos:line="1135" pos:column="70">pSi</name><op:operator pos:line="1135" pos:column="73">-&gt;</op:operator><name pos:line="1135" pos:column="75">files</name></name></expr></argument>, <argument><expr><name><name pos:line="1135" pos:column="82">pSi</name><op:operator pos:line="1135" pos:column="85">-&gt;</op:operator><name pos:line="1135" pos:column="87">sessionFilePathName</name></name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1138" pos:column="17">case <expr><name pos:line="1138" pos:column="22">NPPM_INTERNAL_CLEARSCINTILLAKEY</name></expr> :
		<block pos:line="1139" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1140" pos:column="25">_mainEditView</name><op:operator pos:line="1140" pos:column="38">.</op:operator><name pos:line="1140" pos:column="39">execute</name></name><argument_list pos:line="1140" pos:column="46">(<argument><expr><name pos:line="1140" pos:column="47">SCI_CLEARCMDKEY</name></expr></argument>, <argument><expr><name pos:line="1140" pos:column="64">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1141" pos:column="25">_subEditView</name><op:operator pos:line="1141" pos:column="37">.</op:operator><name pos:line="1141" pos:column="38">execute</name></name><argument_list pos:line="1141" pos:column="45">(<argument><expr><name pos:line="1141" pos:column="46">SCI_CLEARCMDKEY</name></expr></argument>, <argument><expr><name pos:line="1141" pos:column="63">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1142" pos:column="25">return <expr><name pos:line="1142" pos:column="32">TRUE</name></expr>;</return>		
		}</block>
		</case><case pos:line="1144" pos:column="17">case <expr><name pos:line="1144" pos:column="22">NPPM_INTERNAL_BINDSCINTILLAKEY</name></expr> :
		<block pos:line="1145" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1146" pos:column="25">_mainEditView</name><op:operator pos:line="1146" pos:column="38">.</op:operator><name pos:line="1146" pos:column="39">execute</name></name><argument_list pos:line="1146" pos:column="46">(<argument><expr><name pos:line="1146" pos:column="47">SCI_ASSIGNCMDKEY</name></expr></argument>, <argument><expr><name pos:line="1146" pos:column="65">wParam</name></expr></argument>, <argument><expr><name pos:line="1146" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1147" pos:column="25">_subEditView</name><op:operator pos:line="1147" pos:column="37">.</op:operator><name pos:line="1147" pos:column="38">execute</name></name><argument_list pos:line="1147" pos:column="45">(<argument><expr><name pos:line="1147" pos:column="46">SCI_ASSIGNCMDKEY</name></expr></argument>, <argument><expr><name pos:line="1147" pos:column="64">wParam</name></expr></argument>, <argument><expr><name pos:line="1147" pos:column="72">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<return pos:line="1149" pos:column="25">return <expr><name pos:line="1149" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="1151" pos:column="17">case <expr><name pos:line="1151" pos:column="22">NPPM_INTERNAL_CMDLIST_MODIFIED</name></expr> :
		<block pos:line="1152" pos:column="17">{
			<comment type="line" pos:line="1153" pos:column="25">//changeMenuShortcut(lParam, (const TCHAR *)wParam);</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="1154" pos:column="25">::</op:operator><name pos:line="1154" pos:column="27">DrawMenuBar</name></name><argument_list pos:line="1154" pos:column="38">(<argument><expr><call><name><name pos:line="1154" pos:column="39">_pPublicInterface</name><op:operator pos:line="1154" pos:column="56">-&gt;</op:operator><name pos:line="1154" pos:column="58">getHSelf</name></name><argument_list pos:line="1154" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1155" pos:column="25">return <expr><name pos:line="1155" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1158" pos:column="17">case <expr><name pos:line="1158" pos:column="22">NPPM_INTERNAL_MACROLIST_MODIFIED</name></expr> :
		<block pos:line="1159" pos:column="17">{
			<return pos:line="1160" pos:column="25">return <expr><name pos:line="1160" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1163" pos:column="17">case <expr><name pos:line="1163" pos:column="22">NPPM_INTERNAL_USERCMDLIST_MODIFIED</name></expr> :
		<block pos:line="1164" pos:column="17">{
			<return pos:line="1165" pos:column="25">return <expr><name pos:line="1165" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1168" pos:column="17">case <expr><name pos:line="1168" pos:column="22">NPPM_INTERNAL_SETCARETWIDTH</name></expr> :
		<block pos:line="1169" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1170" pos:column="25">NppGUI</name> <type:modifier pos:line="1170" pos:column="32">&amp;</type:modifier></type> <name pos:line="1170" pos:column="34">nppGUI</name> <init pos:line="1170" pos:column="41">= <expr><op:operator pos:line="1170" pos:column="43">(</op:operator><name pos:line="1170" pos:column="44">NppGUI</name> <op:operator pos:line="1170" pos:column="51">&amp;</op:operator><op:operator pos:line="1170" pos:column="52">)</op:operator><call><name><name pos:line="1170" pos:column="53">pNppParam</name><op:operator pos:line="1170" pos:column="62">-&gt;</op:operator><name pos:line="1170" pos:column="64">getNppGUI</name></name><argument_list pos:line="1170" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="1172" pos:column="25">if <condition pos:line="1172" pos:column="28">(<expr><name><name pos:line="1172" pos:column="29">nppGUI</name><op:operator pos:line="1172" pos:column="35">.</op:operator><name pos:line="1172" pos:column="36">_caretWidth</name></name> <op:operator pos:line="1172" pos:column="48">&lt;</op:operator> <lit:literal type="number" pos:line="1172" pos:column="50">4</lit:literal></expr>)</condition><then pos:line="1172" pos:column="52">
			<block pos:line="1173" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1174" pos:column="33">_mainEditView</name><op:operator pos:line="1174" pos:column="46">.</op:operator><name pos:line="1174" pos:column="47">execute</name></name><argument_list pos:line="1174" pos:column="54">(<argument><expr><name pos:line="1174" pos:column="55">SCI_SETCARETSTYLE</name></expr></argument>, <argument><expr><name pos:line="1174" pos:column="74">CARETSTYLE_LINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1175" pos:column="33">_subEditView</name><op:operator pos:line="1175" pos:column="45">.</op:operator><name pos:line="1175" pos:column="46">execute</name></name><argument_list pos:line="1175" pos:column="53">(<argument><expr><name pos:line="1175" pos:column="54">SCI_SETCARETSTYLE</name></expr></argument>, <argument><expr><name pos:line="1175" pos:column="73">CARETSTYLE_LINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1176" pos:column="33">_mainEditView</name><op:operator pos:line="1176" pos:column="46">.</op:operator><name pos:line="1176" pos:column="47">execute</name></name><argument_list pos:line="1176" pos:column="54">(<argument><expr><name pos:line="1176" pos:column="55">SCI_SETCARETWIDTH</name></expr></argument>, <argument><expr><name><name pos:line="1176" pos:column="74">nppGUI</name><op:operator pos:line="1176" pos:column="80">.</op:operator><name pos:line="1176" pos:column="81">_caretWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1177" pos:column="33">_subEditView</name><op:operator pos:line="1177" pos:column="45">.</op:operator><name pos:line="1177" pos:column="46">execute</name></name><argument_list pos:line="1177" pos:column="53">(<argument><expr><name pos:line="1177" pos:column="54">SCI_SETCARETWIDTH</name></expr></argument>, <argument><expr><name><name pos:line="1177" pos:column="73">nppGUI</name><op:operator pos:line="1177" pos:column="79">.</op:operator><name pos:line="1177" pos:column="80">_caretWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1179" pos:column="25">else
			<block pos:line="1180" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1181" pos:column="33">_mainEditView</name><op:operator pos:line="1181" pos:column="46">.</op:operator><name pos:line="1181" pos:column="47">execute</name></name><argument_list pos:line="1181" pos:column="54">(<argument><expr><name pos:line="1181" pos:column="55">SCI_SETCARETWIDTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1181" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1182" pos:column="33">_subEditView</name><op:operator pos:line="1182" pos:column="45">.</op:operator><name pos:line="1182" pos:column="46">execute</name></name><argument_list pos:line="1182" pos:column="53">(<argument><expr><name pos:line="1182" pos:column="54">SCI_SETCARETWIDTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1182" pos:column="73">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1183" pos:column="33">_mainEditView</name><op:operator pos:line="1183" pos:column="46">.</op:operator><name pos:line="1183" pos:column="47">execute</name></name><argument_list pos:line="1183" pos:column="54">(<argument><expr><name pos:line="1183" pos:column="55">SCI_SETCARETSTYLE</name></expr></argument>, <argument><expr><name pos:line="1183" pos:column="74">CARETSTYLE_BLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1184" pos:column="33">_subEditView</name><op:operator pos:line="1184" pos:column="45">.</op:operator><name pos:line="1184" pos:column="46">execute</name></name><argument_list pos:line="1184" pos:column="53">(<argument><expr><name pos:line="1184" pos:column="54">SCI_SETCARETSTYLE</name></expr></argument>, <argument><expr><name pos:line="1184" pos:column="73">CARETSTYLE_BLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			<return pos:line="1186" pos:column="25">return <expr><name pos:line="1186" pos:column="32">TRUE</name></expr>;</return>
		}</block>

        </case><case pos:line="1189" pos:column="9">case <expr><name pos:line="1189" pos:column="14">NPPM_INTERNAL_SETMULTISELCTION</name></expr> :
        <block pos:line="1190" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="1191" pos:column="13">NppGUI</name> <type:modifier pos:line="1191" pos:column="20">&amp;</type:modifier></type> <name pos:line="1191" pos:column="22">nppGUI</name> <init pos:line="1191" pos:column="29">= <expr><op:operator pos:line="1191" pos:column="31">(</op:operator><name pos:line="1191" pos:column="32">NppGUI</name> <op:operator pos:line="1191" pos:column="39">&amp;</op:operator><op:operator pos:line="1191" pos:column="40">)</op:operator><call><name><name pos:line="1191" pos:column="41">pNppParam</name><op:operator pos:line="1191" pos:column="50">-&gt;</op:operator><name pos:line="1191" pos:column="52">getNppGUI</name></name><argument_list pos:line="1191" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1192" pos:column="13">_mainEditView</name><op:operator pos:line="1192" pos:column="26">.</op:operator><name pos:line="1192" pos:column="27">execute</name></name><argument_list pos:line="1192" pos:column="34">(<argument><expr><name pos:line="1192" pos:column="35">SCI_SETMULTIPLESELECTION</name></expr></argument>, <argument><expr><name><name pos:line="1192" pos:column="61">nppGUI</name><op:operator pos:line="1192" pos:column="67">.</op:operator><name pos:line="1192" pos:column="68">_enableMultiSelection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1193" pos:column="25">_subEditView</name><op:operator pos:line="1193" pos:column="37">.</op:operator><name pos:line="1193" pos:column="38">execute</name></name><argument_list pos:line="1193" pos:column="45">(<argument><expr><name pos:line="1193" pos:column="46">SCI_SETMULTIPLESELECTION</name></expr></argument>, <argument><expr><name><name pos:line="1193" pos:column="72">nppGUI</name><op:operator pos:line="1193" pos:column="78">.</op:operator><name pos:line="1193" pos:column="79">_enableMultiSelection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="1194" pos:column="13">return <expr><name pos:line="1194" pos:column="20">TRUE</name></expr>;</return>
        }</block>

		</case><case pos:line="1197" pos:column="17">case <expr><name pos:line="1197" pos:column="22">NPPM_INTERNAL_SETCARETBLINKRATE</name></expr> :
		<block pos:line="1198" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1199" pos:column="25">NppGUI</name> <type:modifier pos:line="1199" pos:column="32">&amp;</type:modifier></type> <name pos:line="1199" pos:column="34">nppGUI</name> <init pos:line="1199" pos:column="41">= <expr><op:operator pos:line="1199" pos:column="43">(</op:operator><name pos:line="1199" pos:column="44">NppGUI</name> <op:operator pos:line="1199" pos:column="51">&amp;</op:operator><op:operator pos:line="1199" pos:column="52">)</op:operator><call><name><name pos:line="1199" pos:column="53">pNppParam</name><op:operator pos:line="1199" pos:column="62">-&gt;</op:operator><name pos:line="1199" pos:column="64">getNppGUI</name></name><argument_list pos:line="1199" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1200" pos:column="25">_mainEditView</name><op:operator pos:line="1200" pos:column="38">.</op:operator><name pos:line="1200" pos:column="39">execute</name></name><argument_list pos:line="1200" pos:column="46">(<argument><expr><name pos:line="1200" pos:column="47">SCI_SETCARETPERIOD</name></expr></argument>, <argument><expr><name><name pos:line="1200" pos:column="67">nppGUI</name><op:operator pos:line="1200" pos:column="73">.</op:operator><name pos:line="1200" pos:column="74">_caretBlinkRate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1201" pos:column="25">_subEditView</name><op:operator pos:line="1201" pos:column="37">.</op:operator><name pos:line="1201" pos:column="38">execute</name></name><argument_list pos:line="1201" pos:column="45">(<argument><expr><name pos:line="1201" pos:column="46">SCI_SETCARETPERIOD</name></expr></argument>, <argument><expr><name><name pos:line="1201" pos:column="66">nppGUI</name><op:operator pos:line="1201" pos:column="72">.</op:operator><name pos:line="1201" pos:column="73">_caretBlinkRate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1202" pos:column="25">return <expr><name pos:line="1202" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1205" pos:column="17">case <expr><name pos:line="1205" pos:column="22">NPPM_INTERNAL_ISTABBARREDUCED</name></expr> :
		<block pos:line="1206" pos:column="17">{
			<return pos:line="1207" pos:column="25">return <expr><name pos:line="1207" pos:column="32">_toReduceTabBar</name><op:operator pos:line="1207" pos:column="47">?</op:operator><name pos:line="1207" pos:column="48">TRUE</name><op:operator pos:line="1207" pos:column="52">:</op:operator><name pos:line="1207" pos:column="53">FALSE</name></expr>;</return>
		}</block>

		<comment type="line" pos:line="1210" pos:column="17">// ADD: success-&gt;hwnd; failure-&gt;NULL</comment>
		<comment type="line" pos:line="1211" pos:column="17">// REMOVE: success-&gt;NULL; failure-&gt;hwnd</comment>
		</case><case pos:line="1212" pos:column="17">case <expr><name pos:line="1212" pos:column="22">NPPM_MODELESSDIALOG</name></expr> :
		<block pos:line="1213" pos:column="17">{
			<if pos:line="1214" pos:column="25">if <condition pos:line="1214" pos:column="28">(<expr><name pos:line="1214" pos:column="29">wParam</name> <op:operator pos:line="1214" pos:column="36">==</op:operator> <name pos:line="1214" pos:column="39">MODELESSDIALOGADD</name></expr>)</condition><then pos:line="1214" pos:column="57">
			<block pos:line="1215" pos:column="25">{
				<for pos:line="1216" pos:column="33">for (<init><decl><type><name pos:line="1216" pos:column="38">size_t</name></type> <name pos:line="1216" pos:column="45">i</name> <init pos:line="1216" pos:column="47">= <expr><lit:literal type="number" pos:line="1216" pos:column="49">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1216" pos:column="53">i</name> <op:operator pos:line="1216" pos:column="55">&lt;</op:operator> <call><name><name pos:line="1216" pos:column="57">_hModelessDlgs</name><op:operator pos:line="1216" pos:column="71">.</op:operator><name pos:line="1216" pos:column="72">size</name></name><argument_list pos:line="1216" pos:column="76">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1216" pos:column="81">i</name><op:operator pos:line="1216" pos:column="82">++</op:operator></expr></incr>)
					<if pos:line="1217" pos:column="41">if <condition pos:line="1217" pos:column="44">(<expr><name><name pos:line="1217" pos:column="45">_hModelessDlgs</name><index pos:line="1217" pos:column="59">[<expr><name pos:line="1217" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="1217" pos:column="63">==</op:operator> <op:operator pos:line="1217" pos:column="66">(</op:operator><name pos:line="1217" pos:column="67">HWND</name><op:operator pos:line="1217" pos:column="71">)</op:operator><name pos:line="1217" pos:column="72">lParam</name></expr>)</condition><then pos:line="1217" pos:column="79">
						<return pos:line="1218" pos:column="49">return <expr><name pos:line="1218" pos:column="56">NULL</name></expr>;</return></then></if></for>
				<expr_stmt><expr><call><name><name pos:line="1219" pos:column="33">_hModelessDlgs</name><op:operator pos:line="1219" pos:column="47">.</op:operator><name pos:line="1219" pos:column="48">push_back</name></name><argument_list pos:line="1219" pos:column="57">(<argument><expr><op:operator pos:line="1219" pos:column="58">(</op:operator><name pos:line="1219" pos:column="59">HWND</name><op:operator pos:line="1219" pos:column="63">)</op:operator><name pos:line="1219" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="1220" pos:column="33">return <expr><name pos:line="1220" pos:column="40">lParam</name></expr>;</return>
			}</block></then>
			<else pos:line="1222" pos:column="25">else <if pos:line="1222" pos:column="30">if <condition pos:line="1222" pos:column="33">(<expr><name pos:line="1222" pos:column="34">wParam</name> <op:operator pos:line="1222" pos:column="41">==</op:operator> <name pos:line="1222" pos:column="44">MODELESSDIALOGREMOVE</name></expr>)</condition><then pos:line="1222" pos:column="65">
			<block pos:line="1223" pos:column="25">{
				<for pos:line="1224" pos:column="33">for (<init><decl><type><name pos:line="1224" pos:column="38">size_t</name></type> <name pos:line="1224" pos:column="45">i</name> <init pos:line="1224" pos:column="47">= <expr><lit:literal type="number" pos:line="1224" pos:column="49">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1224" pos:column="53">i</name> <op:operator pos:line="1224" pos:column="55">&lt;</op:operator> <call><name><name pos:line="1224" pos:column="57">_hModelessDlgs</name><op:operator pos:line="1224" pos:column="71">.</op:operator><name pos:line="1224" pos:column="72">size</name></name><argument_list pos:line="1224" pos:column="76">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1224" pos:column="81">i</name><op:operator pos:line="1224" pos:column="82">++</op:operator></expr></incr>)
					<if pos:line="1225" pos:column="41">if <condition pos:line="1225" pos:column="44">(<expr><name><name pos:line="1225" pos:column="45">_hModelessDlgs</name><index pos:line="1225" pos:column="59">[<expr><name pos:line="1225" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="1225" pos:column="63">==</op:operator> <op:operator pos:line="1225" pos:column="66">(</op:operator><name pos:line="1225" pos:column="67">HWND</name><op:operator pos:line="1225" pos:column="71">)</op:operator><name pos:line="1225" pos:column="72">lParam</name></expr>)</condition><then pos:line="1225" pos:column="79">
					<block pos:line="1226" pos:column="41">{
						<decl_stmt><decl><type><name><name><name pos:line="1227" pos:column="49">vector</name><argument_list pos:line="1227" pos:column="55">&lt;<argument><expr><name pos:line="1227" pos:column="56">HWND</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="1227" pos:column="61">::</op:operator><name pos:line="1227" pos:column="63">iterator</name></name></type> <name pos:line="1227" pos:column="72">hDlg</name> <init pos:line="1227" pos:column="77">= <expr><call><name><name pos:line="1227" pos:column="79">_hModelessDlgs</name><op:operator pos:line="1227" pos:column="93">.</op:operator><name pos:line="1227" pos:column="94">begin</name></name><argument_list pos:line="1227" pos:column="99">()</argument_list></call> <op:operator pos:line="1227" pos:column="102">+</op:operator> <name pos:line="1227" pos:column="104">i</name></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="1228" pos:column="49">_hModelessDlgs</name><op:operator pos:line="1228" pos:column="63">.</op:operator><name pos:line="1228" pos:column="64">erase</name></name><argument_list pos:line="1228" pos:column="69">(<argument><expr><name pos:line="1228" pos:column="70">hDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="1229" pos:column="49">return <expr><name pos:line="1229" pos:column="56">NULL</name></expr>;</return>
					}</block></then></if></for>
				<return pos:line="1231" pos:column="33">return <expr><name pos:line="1231" pos:column="40">lParam</name></expr>;</return>
			}</block></then></if></else></if>
			<return pos:line="1233" pos:column="25">return <expr><name pos:line="1233" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1236" pos:column="17">case <expr><name pos:line="1236" pos:column="22">WM_CONTEXTMENU</name></expr> :
		<block pos:line="1237" pos:column="17">{
			<if pos:line="1238" pos:column="25">if <condition pos:line="1238" pos:column="28">(<expr><name><name pos:line="1238" pos:column="29">pNppParam</name><op:operator pos:line="1238" pos:column="38">-&gt;</op:operator><name pos:line="1238" pos:column="40">_isTaskListRBUTTONUP_Active</name></name></expr>)</condition><then pos:line="1238" pos:column="68">
			<block pos:line="1239" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="1240" pos:column="33">pNppParam</name><op:operator pos:line="1240" pos:column="42">-&gt;</op:operator><name pos:line="1240" pos:column="44">_isTaskListRBUTTONUP_Active</name></name> <op:operator pos:line="1240" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1240" pos:column="74">false</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1242" pos:column="25">else
			<block pos:line="1243" pos:column="25">{
				<if pos:line="1244" pos:column="33">if <condition pos:line="1244" pos:column="36">(<expr><op:operator pos:line="1244" pos:column="37">(</op:operator><call><name pos:line="1244" pos:column="38">HWND</name><argument_list pos:line="1244" pos:column="42">(<argument><expr><name pos:line="1244" pos:column="43">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="1244" pos:column="51">==</op:operator> <call><name><name pos:line="1244" pos:column="54">_mainEditView</name><op:operator pos:line="1244" pos:column="67">.</op:operator><name pos:line="1244" pos:column="68">getHSelf</name></name><argument_list pos:line="1244" pos:column="76">()</argument_list></call><op:operator pos:line="1244" pos:column="78">)</op:operator> <op:operator pos:line="1244" pos:column="80">||</op:operator> <op:operator pos:line="1244" pos:column="83">(</op:operator><call><name pos:line="1244" pos:column="84">HWND</name><argument_list pos:line="1244" pos:column="88">(<argument><expr><name pos:line="1244" pos:column="89">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="1244" pos:column="97">==</op:operator> <call><name><name pos:line="1244" pos:column="100">_subEditView</name><op:operator pos:line="1244" pos:column="112">.</op:operator><name pos:line="1244" pos:column="113">getHSelf</name></name><argument_list pos:line="1244" pos:column="121">()</argument_list></call><op:operator pos:line="1244" pos:column="123">)</op:operator></expr>)</condition><then pos:line="1244" pos:column="125">
				<block pos:line="1245" pos:column="33">{
					<if pos:line="1246" pos:column="41">if <condition pos:line="1246" pos:column="44">(<expr><op:operator pos:line="1246" pos:column="45">(</op:operator><call><name pos:line="1246" pos:column="46">HWND</name><argument_list pos:line="1246" pos:column="50">(<argument><expr><name pos:line="1246" pos:column="51">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="1246" pos:column="59">==</op:operator> <call><name><name pos:line="1246" pos:column="62">_mainEditView</name><op:operator pos:line="1246" pos:column="75">.</op:operator><name pos:line="1246" pos:column="76">getHSelf</name></name><argument_list pos:line="1246" pos:column="84">()</argument_list></call><op:operator pos:line="1246" pos:column="86">)</op:operator></expr>)</condition><then pos:line="1246" pos:column="88"> <block pos:line="1246" pos:column="89">{
						<expr_stmt><expr><call><name pos:line="1247" pos:column="49">switchEditViewTo</name><argument_list pos:line="1247" pos:column="65">(<argument><expr><name pos:line="1247" pos:column="66">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="1248" pos:column="43">else <block pos:line="1248" pos:column="48">{
						<expr_stmt><expr><call><name pos:line="1249" pos:column="49">switchEditViewTo</name><argument_list pos:line="1249" pos:column="65">(<argument><expr><name pos:line="1249" pos:column="66">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
					<decl_stmt><decl><type><name pos:line="1251" pos:column="41">POINT</name></type> <name pos:line="1251" pos:column="47">p</name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1252" pos:column="41">::</op:operator><name pos:line="1252" pos:column="43">GetCursorPos</name></name><argument_list pos:line="1252" pos:column="55">(<argument><expr><op:operator pos:line="1252" pos:column="56">&amp;</op:operator><name pos:line="1252" pos:column="57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="1253" pos:column="41">ContextMenu</name></type> <name pos:line="1253" pos:column="53">scintillaContextmenu</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="1254" pos:column="41">vector</name><argument_list pos:line="1254" pos:column="47">&lt;<argument><expr><name pos:line="1254" pos:column="48">MenuItemUnit</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1254" pos:column="62">&amp;</type:modifier></type> <name pos:line="1254" pos:column="64">tmp</name> <init pos:line="1254" pos:column="68">= <expr><call><name><name pos:line="1254" pos:column="70">pNppParam</name><op:operator pos:line="1254" pos:column="79">-&gt;</op:operator><name pos:line="1254" pos:column="81">getContextMenuItems</name></name><argument_list pos:line="1254" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="1255" pos:column="41">vector</name><argument_list pos:line="1255" pos:column="47">&lt;<argument><expr><name pos:line="1255" pos:column="48">bool</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1255" pos:column="54">isEnable</name></decl>;</decl_stmt>
					<for pos:line="1256" pos:column="41">for (<init><decl><type><name pos:line="1256" pos:column="46">size_t</name></type> <name pos:line="1256" pos:column="53">i</name> <init pos:line="1256" pos:column="55">= <expr><lit:literal type="number" pos:line="1256" pos:column="57">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1256" pos:column="61">i</name> <op:operator pos:line="1256" pos:column="63">&lt;</op:operator> <call><name><name pos:line="1256" pos:column="65">tmp</name><op:operator pos:line="1256" pos:column="68">.</op:operator><name pos:line="1256" pos:column="69">size</name></name><argument_list pos:line="1256" pos:column="73">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1256" pos:column="78">i</name><op:operator pos:line="1256" pos:column="79">++</op:operator></expr></incr>)
					<block pos:line="1257" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="1258" pos:column="49">isEnable</name><op:operator pos:line="1258" pos:column="57">.</op:operator><name pos:line="1258" pos:column="58">push_back</name></name><argument_list pos:line="1258" pos:column="67">(<argument><expr><op:operator pos:line="1258" pos:column="68">(</op:operator><call><name><op:operator pos:line="1258" pos:column="69">::</op:operator><name pos:line="1258" pos:column="71">GetMenuState</name></name><argument_list pos:line="1258" pos:column="83">(<argument><expr><name pos:line="1258" pos:column="84">_mainMenuHandle</name></expr></argument>, <argument><expr><name><name pos:line="1258" pos:column="101">tmp</name><index pos:line="1258" pos:column="104">[<expr><name pos:line="1258" pos:column="105">i</name></expr>]</index></name><op:operator pos:line="1258" pos:column="107">.</op:operator><name pos:line="1258" pos:column="108">_cmdID</name></expr></argument>, <argument><expr><name pos:line="1258" pos:column="116">MF_BYCOMMAND</name></expr></argument>)</argument_list></call><op:operator pos:line="1258" pos:column="129">&amp;</op:operator><name pos:line="1258" pos:column="130">MF_DISABLED</name><op:operator pos:line="1258" pos:column="141">)</op:operator> <op:operator pos:line="1258" pos:column="143">==</op:operator> <lit:literal type="number" pos:line="1258" pos:column="146">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					<expr_stmt><expr><call><name><name pos:line="1260" pos:column="41">scintillaContextmenu</name><op:operator pos:line="1260" pos:column="61">.</op:operator><name pos:line="1260" pos:column="62">create</name></name><argument_list pos:line="1260" pos:column="68">(<argument><expr><call><name><name pos:line="1260" pos:column="69">_pPublicInterface</name><op:operator pos:line="1260" pos:column="86">-&gt;</op:operator><name pos:line="1260" pos:column="88">getHSelf</name></name><argument_list pos:line="1260" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1260" pos:column="100">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<for pos:line="1261" pos:column="41">for (<init><decl><type><name pos:line="1261" pos:column="46">size_t</name></type> <name pos:line="1261" pos:column="53">i</name> <init pos:line="1261" pos:column="55">= <expr><lit:literal type="number" pos:line="1261" pos:column="57">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1261" pos:column="61">i</name> <op:operator pos:line="1261" pos:column="63">&lt;</op:operator> <call><name><name pos:line="1261" pos:column="65">isEnable</name><op:operator pos:line="1261" pos:column="73">.</op:operator><name pos:line="1261" pos:column="74">size</name></name><argument_list pos:line="1261" pos:column="78">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1261" pos:column="83">i</name><op:operator pos:line="1261" pos:column="84">++</op:operator></expr></incr>)
						<expr_stmt><expr><call><name><name pos:line="1262" pos:column="49">scintillaContextmenu</name><op:operator pos:line="1262" pos:column="69">.</op:operator><name pos:line="1262" pos:column="70">enableItem</name></name><argument_list pos:line="1262" pos:column="80">(<argument><expr><name><name pos:line="1262" pos:column="81">tmp</name><index pos:line="1262" pos:column="84">[<expr><name pos:line="1262" pos:column="85">i</name></expr>]</index></name><op:operator pos:line="1262" pos:column="87">.</op:operator><name pos:line="1262" pos:column="88">_cmdID</name></expr></argument>, <argument><expr><name><name pos:line="1262" pos:column="96">isEnable</name><index pos:line="1262" pos:column="104">[<expr><name pos:line="1262" pos:column="105">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>

					<expr_stmt><expr><call><name><name pos:line="1264" pos:column="41">scintillaContextmenu</name><op:operator pos:line="1264" pos:column="61">.</op:operator><name pos:line="1264" pos:column="62">display</name></name><argument_list pos:line="1264" pos:column="69">(<argument><expr><name pos:line="1264" pos:column="70">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1265" pos:column="41">return <expr><name pos:line="1265" pos:column="48">TRUE</name></expr>;</return>
				}</block></then></if>
			}</block></else></if>

			<return pos:line="1269" pos:column="25">return <expr><call><name><op:operator pos:line="1269" pos:column="32">::</op:operator><name pos:line="1269" pos:column="34">DefWindowProc</name></name><argument_list pos:line="1269" pos:column="47">(<argument><expr><name pos:line="1269" pos:column="48">hwnd</name></expr></argument>, <argument><expr><name pos:line="1269" pos:column="54">Message</name></expr></argument>, <argument><expr><name pos:line="1269" pos:column="63">wParam</name></expr></argument>, <argument><expr><name pos:line="1269" pos:column="71">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1272" pos:column="17">case <expr><name pos:line="1272" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="1273" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1274" pos:column="25">SCNotification</name> <type:modifier pos:line="1274" pos:column="40">*</type:modifier></type><name pos:line="1274" pos:column="41">notification</name> <init pos:line="1274" pos:column="54">= <expr><call><name><name pos:line="1274" pos:column="56">reinterpret_cast</name><argument_list pos:line="1274" pos:column="72">&lt;<argument><expr><name pos:line="1274" pos:column="73">SCNotification</name> <op:operator pos:line="1274" pos:column="88">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1274" pos:column="90">(<argument><expr><name pos:line="1274" pos:column="91">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="1276" pos:column="25">if <condition pos:line="1276" pos:column="28">(<expr><name><name pos:line="1276" pos:column="29">notification</name><op:operator pos:line="1276" pos:column="41">-&gt;</op:operator><name pos:line="1276" pos:column="43">nmhdr</name><op:operator pos:line="1276" pos:column="48">.</op:operator><name pos:line="1276" pos:column="49">code</name></name> <op:operator pos:line="1276" pos:column="54">==</op:operator> <name pos:line="1276" pos:column="57">SCN_UPDATEUI</name></expr>)</condition><then pos:line="1276" pos:column="70">
			<block pos:line="1277" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1278" pos:column="33">checkClipboard</name><argument_list pos:line="1278" pos:column="47">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1278" pos:column="51">//6</comment>
				<expr_stmt><expr><call><name pos:line="1279" pos:column="33">checkUndoState</name><argument_list pos:line="1279" pos:column="47">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1279" pos:column="51">//4</comment>
			}</block></then></if>

			<if pos:line="1282" pos:column="25">if <condition pos:line="1282" pos:column="28">(<expr><name pos:line="1282" pos:column="29">wParam</name> <op:operator pos:line="1282" pos:column="36">==</op:operator> <name pos:line="1282" pos:column="39">LINKTRIGGERED</name></expr>)</condition><then pos:line="1282" pos:column="53">
				<expr_stmt><expr><name><name pos:line="1283" pos:column="33">notification</name><op:operator pos:line="1283" pos:column="45">-&gt;</op:operator><name pos:line="1283" pos:column="47">wParam</name></name> <op:operator pos:line="1283" pos:column="54">=</op:operator> <name pos:line="1283" pos:column="56">LINKTRIGGERED</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="1285" pos:column="25">_pluginsManager</name><op:operator pos:line="1285" pos:column="40">.</op:operator><name pos:line="1285" pos:column="41">notify</name></name><argument_list pos:line="1285" pos:column="47">(<argument><expr><name pos:line="1285" pos:column="48">notification</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<return pos:line="1287" pos:column="25">return <expr><call><name pos:line="1287" pos:column="32">notify</name><argument_list pos:line="1287" pos:column="38">(<argument><expr><name pos:line="1287" pos:column="39">notification</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1290" pos:column="17">case <expr><name pos:line="1290" pos:column="22">NPPM_INTERNAL_CHECKDOCSTATUS</name></expr> :
		</case><case pos:line="1291" pos:column="17">case <expr><name pos:line="1291" pos:column="22">WM_ACTIVATEAPP</name></expr> :
		<block pos:line="1292" pos:column="17">{
			<if pos:line="1293" pos:column="25">if <condition pos:line="1293" pos:column="28">(<expr><name pos:line="1293" pos:column="29">wParam</name> <op:operator pos:line="1293" pos:column="36">==</op:operator> <name pos:line="1293" pos:column="39">TRUE</name></expr>)</condition><then pos:line="1293" pos:column="44"> <comment type="line" pos:line="1293" pos:column="45">// if npp is about to be activated</comment>
			<block pos:line="1294" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="1295" pos:column="33">const</specifier> <name pos:line="1295" pos:column="39">NppGUI</name> <type:modifier pos:line="1295" pos:column="46">&amp;</type:modifier></type> <name pos:line="1295" pos:column="48">nppgui</name> <init pos:line="1295" pos:column="55">= <expr><call><name><name pos:line="1295" pos:column="57">pNppParam</name><op:operator pos:line="1295" pos:column="66">-&gt;</op:operator><name pos:line="1295" pos:column="68">getNppGUI</name></name><argument_list pos:line="1295" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1296" pos:column="33">if <condition pos:line="1296" pos:column="36">(<expr><call><name pos:line="1296" pos:column="37">LOWORD</name><argument_list pos:line="1296" pos:column="43">(<argument><expr><name pos:line="1296" pos:column="44">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="1296" pos:column="52">&amp;&amp;</op:operator> <op:operator pos:line="1296" pos:column="55">(</op:operator><name><name pos:line="1296" pos:column="56">nppgui</name><op:operator pos:line="1296" pos:column="62">.</op:operator><name pos:line="1296" pos:column="63">_fileAutoDetection</name></name> <op:operator pos:line="1296" pos:column="82">!=</op:operator> <name pos:line="1296" pos:column="85">cdDisabled</name><op:operator pos:line="1296" pos:column="95">)</op:operator></expr>)</condition><then pos:line="1296" pos:column="97">
				<block pos:line="1297" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="1298" pos:column="41">_activeAppInf</name><op:operator pos:line="1298" pos:column="54">.</op:operator><name pos:line="1298" pos:column="55">_isActivated</name></name> <op:operator pos:line="1298" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="1298" pos:column="70">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1299" pos:column="41">checkModifiedDocument</name><argument_list pos:line="1299" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1300" pos:column="41">return <expr><name pos:line="1300" pos:column="48">FALSE</name></expr>;</return>
				}</block></then></if>
			}</block></then></if>
			<break pos:line="1303" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1306" pos:column="17">case <expr><name pos:line="1306" pos:column="22">NPPM_INTERNAL_GETCHECKDOCOPT</name></expr> :
		<block pos:line="1307" pos:column="17">{
			<return pos:line="1308" pos:column="25">return <expr><call pos:line="1308" pos:column="32">(<name pos:line="1308" pos:column="33">LRESULT</name>)<argument_list pos:line="1308" pos:column="41">(<argument><expr><op:operator pos:line="1308" pos:column="42">(</op:operator><name pos:line="1308" pos:column="43">NppGUI</name> <op:operator pos:line="1308" pos:column="50">&amp;</op:operator><op:operator pos:line="1308" pos:column="51">)</op:operator><op:operator pos:line="1308" pos:column="52">(</op:operator><call><name><name pos:line="1308" pos:column="53">pNppParam</name><op:operator pos:line="1308" pos:column="62">-&gt;</op:operator><name pos:line="1308" pos:column="64">getNppGUI</name></name><argument_list pos:line="1308" pos:column="73">()</argument_list></call><op:operator pos:line="1308" pos:column="75">)</op:operator></expr></argument>)</argument_list></call><op:operator pos:line="1308" pos:column="77">.</op:operator><name pos:line="1308" pos:column="78">_fileAutoDetection</name></expr>;</return>
		}</block>

		</case><case pos:line="1311" pos:column="17">case <expr><name pos:line="1311" pos:column="22">NPPM_INTERNAL_SETCHECKDOCOPT</name></expr> :
		<block pos:line="1312" pos:column="17">{
			<comment type="line" pos:line="1313" pos:column="25">// If nothing is changed by user, then we allow to set this value</comment>
			<if pos:line="1314" pos:column="25">if <condition pos:line="1314" pos:column="28">(<expr><op:operator pos:line="1314" pos:column="29">(</op:operator><op:operator pos:line="1314" pos:column="30">(</op:operator><name pos:line="1314" pos:column="31">NppGUI</name> <op:operator pos:line="1314" pos:column="38">&amp;</op:operator><op:operator pos:line="1314" pos:column="39">)</op:operator><op:operator pos:line="1314" pos:column="40">(</op:operator><call><name><name pos:line="1314" pos:column="41">pNppParam</name><op:operator pos:line="1314" pos:column="50">-&gt;</op:operator><name pos:line="1314" pos:column="52">getNppGUI</name></name><argument_list pos:line="1314" pos:column="61">()</argument_list></call><op:operator pos:line="1314" pos:column="63">)</op:operator><op:operator pos:line="1314" pos:column="64">)</op:operator><op:operator pos:line="1314" pos:column="65">.</op:operator><name pos:line="1314" pos:column="66">_fileAutoDetection</name> <op:operator pos:line="1314" pos:column="85">==</op:operator> <op:operator pos:line="1314" pos:column="88">(</op:operator><op:operator pos:line="1314" pos:column="89">(</op:operator><name pos:line="1314" pos:column="90">NppGUI</name> <op:operator pos:line="1314" pos:column="97">&amp;</op:operator><op:operator pos:line="1314" pos:column="98">)</op:operator><op:operator pos:line="1314" pos:column="99">(</op:operator><call><name><name pos:line="1314" pos:column="100">pNppParam</name><op:operator pos:line="1314" pos:column="109">-&gt;</op:operator><name pos:line="1314" pos:column="111">getNppGUI</name></name><argument_list pos:line="1314" pos:column="120">()</argument_list></call><op:operator pos:line="1314" pos:column="122">)</op:operator><op:operator pos:line="1314" pos:column="123">)</op:operator><op:operator pos:line="1314" pos:column="124">.</op:operator><name pos:line="1314" pos:column="125">_fileAutoDetectionOriginalValue</name></expr>)</condition><then pos:line="1314" pos:column="157">
				<expr_stmt><expr><op:operator pos:line="1315" pos:column="33">(</op:operator><op:operator pos:line="1315" pos:column="34">(</op:operator><name pos:line="1315" pos:column="35">NppGUI</name> <op:operator pos:line="1315" pos:column="42">&amp;</op:operator><op:operator pos:line="1315" pos:column="43">)</op:operator><op:operator pos:line="1315" pos:column="44">(</op:operator><call><name><name pos:line="1315" pos:column="45">pNppParam</name><op:operator pos:line="1315" pos:column="54">-&gt;</op:operator><name pos:line="1315" pos:column="56">getNppGUI</name></name><argument_list pos:line="1315" pos:column="65">()</argument_list></call><op:operator pos:line="1315" pos:column="67">)</op:operator><op:operator pos:line="1315" pos:column="68">)</op:operator><op:operator pos:line="1315" pos:column="69">.</op:operator><name pos:line="1315" pos:column="70">_fileAutoDetection</name> <op:operator pos:line="1315" pos:column="89">=</op:operator> <op:operator pos:line="1315" pos:column="91">(</op:operator><name pos:line="1315" pos:column="92">ChangeDetect</name><op:operator pos:line="1315" pos:column="104">)</op:operator><name pos:line="1315" pos:column="105">wParam</name></expr>;</expr_stmt></then></if>
			<return pos:line="1316" pos:column="25">return <expr><name pos:line="1316" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1319" pos:column="17">case <expr><name pos:line="1319" pos:column="22">NPPM_GETPOSFROMBUFFERID</name></expr> :
		<block pos:line="1320" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1321" pos:column="25">int</name></type> <name pos:line="1321" pos:column="29">i</name></decl>;</decl_stmt>

			<if pos:line="1323" pos:column="25">if <condition pos:line="1323" pos:column="28">(<expr><name pos:line="1323" pos:column="29">lParam</name> <op:operator pos:line="1323" pos:column="36">==</op:operator> <name pos:line="1323" pos:column="39">SUB_VIEW</name></expr>)</condition><then pos:line="1323" pos:column="48">
			<block pos:line="1324" pos:column="25">{
				<if pos:line="1325" pos:column="33">if <condition pos:line="1325" pos:column="36">(<expr><op:operator pos:line="1325" pos:column="37">(</op:operator><name pos:line="1325" pos:column="38">i</name> <op:operator pos:line="1325" pos:column="40">=</op:operator> <call><name><name pos:line="1325" pos:column="42">_subDocTab</name><op:operator pos:line="1325" pos:column="52">.</op:operator><name pos:line="1325" pos:column="53">getIndexByBuffer</name></name><argument_list pos:line="1325" pos:column="69">(<argument><expr><op:operator pos:line="1325" pos:column="70">(</op:operator><name pos:line="1325" pos:column="71">BufferID</name><op:operator pos:line="1325" pos:column="79">)</op:operator><name pos:line="1325" pos:column="80">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="1325" pos:column="87">)</op:operator> <op:operator pos:line="1325" pos:column="89">!=</op:operator> <op:operator pos:line="1325" pos:column="92">-</op:operator><lit:literal type="number" pos:line="1325" pos:column="93">1</lit:literal></expr>)</condition><then pos:line="1325" pos:column="95">
				<block pos:line="1326" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1327" pos:column="41">long</name></type> <name pos:line="1327" pos:column="46">view</name> <init pos:line="1327" pos:column="51">= <expr><name pos:line="1327" pos:column="53">SUB_VIEW</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1328" pos:column="41">view</name> <op:operator pos:line="1328" pos:column="46">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="1328" pos:column="50">30</lit:literal></expr>;</expr_stmt>
					<return pos:line="1329" pos:column="41">return <expr><name pos:line="1329" pos:column="48">view</name><op:operator pos:line="1329" pos:column="52">|</op:operator><name pos:line="1329" pos:column="53">i</name></expr>;</return>
				}</block></then></if>
				<if pos:line="1331" pos:column="33">if <condition pos:line="1331" pos:column="36">(<expr><op:operator pos:line="1331" pos:column="37">(</op:operator><name pos:line="1331" pos:column="38">i</name> <op:operator pos:line="1331" pos:column="40">=</op:operator> <call><name><name pos:line="1331" pos:column="42">_mainDocTab</name><op:operator pos:line="1331" pos:column="53">.</op:operator><name pos:line="1331" pos:column="54">getIndexByBuffer</name></name><argument_list pos:line="1331" pos:column="70">(<argument><expr><op:operator pos:line="1331" pos:column="71">(</op:operator><name pos:line="1331" pos:column="72">BufferID</name><op:operator pos:line="1331" pos:column="80">)</op:operator><name pos:line="1331" pos:column="81">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="1331" pos:column="88">)</op:operator> <op:operator pos:line="1331" pos:column="90">!=</op:operator> <op:operator pos:line="1331" pos:column="93">-</op:operator><lit:literal type="number" pos:line="1331" pos:column="94">1</lit:literal></expr>)</condition><then pos:line="1331" pos:column="96">
				<block pos:line="1332" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1333" pos:column="41">long</name></type> <name pos:line="1333" pos:column="46">view</name> <init pos:line="1333" pos:column="51">= <expr><name pos:line="1333" pos:column="53">MAIN_VIEW</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1334" pos:column="41">view</name> <op:operator pos:line="1334" pos:column="46">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="1334" pos:column="50">30</lit:literal></expr>;</expr_stmt>
					<return pos:line="1335" pos:column="41">return <expr><name pos:line="1335" pos:column="48">view</name><op:operator pos:line="1335" pos:column="52">|</op:operator><name pos:line="1335" pos:column="53">i</name></expr>;</return>
				}</block></then></if>
			}</block></then>
			<else pos:line="1338" pos:column="25">else
			<block pos:line="1339" pos:column="25">{
				<if pos:line="1340" pos:column="33">if <condition pos:line="1340" pos:column="36">(<expr><op:operator pos:line="1340" pos:column="37">(</op:operator><name pos:line="1340" pos:column="38">i</name> <op:operator pos:line="1340" pos:column="40">=</op:operator> <call><name><name pos:line="1340" pos:column="42">_mainDocTab</name><op:operator pos:line="1340" pos:column="53">.</op:operator><name pos:line="1340" pos:column="54">getIndexByBuffer</name></name><argument_list pos:line="1340" pos:column="70">(<argument><expr><op:operator pos:line="1340" pos:column="71">(</op:operator><name pos:line="1340" pos:column="72">BufferID</name><op:operator pos:line="1340" pos:column="80">)</op:operator><name pos:line="1340" pos:column="81">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="1340" pos:column="88">)</op:operator> <op:operator pos:line="1340" pos:column="90">!=</op:operator> <op:operator pos:line="1340" pos:column="93">-</op:operator><lit:literal type="number" pos:line="1340" pos:column="94">1</lit:literal></expr>)</condition><then pos:line="1340" pos:column="96">
				<block pos:line="1341" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1342" pos:column="41">long</name></type> <name pos:line="1342" pos:column="46">view</name> <init pos:line="1342" pos:column="51">= <expr><name pos:line="1342" pos:column="53">MAIN_VIEW</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1343" pos:column="41">view</name> <op:operator pos:line="1343" pos:column="46">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="1343" pos:column="50">30</lit:literal></expr>;</expr_stmt>
					<return pos:line="1344" pos:column="41">return <expr><name pos:line="1344" pos:column="48">view</name><op:operator pos:line="1344" pos:column="52">|</op:operator><name pos:line="1344" pos:column="53">i</name></expr>;</return>
				}</block></then></if>
				<if pos:line="1346" pos:column="33">if <condition pos:line="1346" pos:column="36">(<expr><op:operator pos:line="1346" pos:column="37">(</op:operator><name pos:line="1346" pos:column="38">i</name> <op:operator pos:line="1346" pos:column="40">=</op:operator> <call><name><name pos:line="1346" pos:column="42">_subDocTab</name><op:operator pos:line="1346" pos:column="52">.</op:operator><name pos:line="1346" pos:column="53">getIndexByBuffer</name></name><argument_list pos:line="1346" pos:column="69">(<argument><expr><op:operator pos:line="1346" pos:column="70">(</op:operator><name pos:line="1346" pos:column="71">BufferID</name><op:operator pos:line="1346" pos:column="79">)</op:operator><name pos:line="1346" pos:column="80">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="1346" pos:column="87">)</op:operator> <op:operator pos:line="1346" pos:column="89">!=</op:operator> <op:operator pos:line="1346" pos:column="92">-</op:operator><lit:literal type="number" pos:line="1346" pos:column="93">1</lit:literal></expr>)</condition><then pos:line="1346" pos:column="95">
				<block pos:line="1347" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1348" pos:column="41">long</name></type> <name pos:line="1348" pos:column="46">view</name> <init pos:line="1348" pos:column="51">= <expr><name pos:line="1348" pos:column="53">SUB_VIEW</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1349" pos:column="41">view</name> <op:operator pos:line="1349" pos:column="46">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="1349" pos:column="50">30</lit:literal></expr>;</expr_stmt>
					<return pos:line="1350" pos:column="41">return <expr><name pos:line="1350" pos:column="48">view</name><op:operator pos:line="1350" pos:column="52">|</op:operator><name pos:line="1350" pos:column="53">i</name></expr>;</return>
				}</block></then></if>
			}</block></else></if>
			<return pos:line="1353" pos:column="25">return <expr><op:operator pos:line="1353" pos:column="32">-</op:operator><lit:literal type="number" pos:line="1353" pos:column="33">1</lit:literal></expr>;</return>
		}</block>

		</case><case pos:line="1356" pos:column="17">case <expr><name pos:line="1356" pos:column="22">NPPM_GETFULLPATHFROMBUFFERID</name></expr> :
		<block pos:line="1357" pos:column="17">{
			<return pos:line="1358" pos:column="25">return <expr><call><name><name pos:line="1358" pos:column="32">MainFileManager</name><op:operator pos:line="1358" pos:column="47">-&gt;</op:operator><name pos:line="1358" pos:column="49">getFileNameFromBuffer</name></name><argument_list pos:line="1358" pos:column="70">(<argument><expr><op:operator pos:line="1358" pos:column="71">(</op:operator><name pos:line="1358" pos:column="72">BufferID</name><op:operator pos:line="1358" pos:column="80">)</op:operator><name pos:line="1358" pos:column="81">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="1358" pos:column="89">(</op:operator><name pos:line="1358" pos:column="90">TCHAR</name> <op:operator pos:line="1358" pos:column="96">*</op:operator><op:operator pos:line="1358" pos:column="97">)</op:operator><name pos:line="1358" pos:column="98">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
		
		</case><case pos:line="1361" pos:column="17">case <expr><name pos:line="1361" pos:column="22">NPPM_INTERNAL_ENABLECHECKDOCOPT</name></expr>:
		<block pos:line="1362" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1363" pos:column="25">NppGUI</name> <type:modifier pos:line="1363" pos:column="32">&amp;</type:modifier></type> <name pos:line="1363" pos:column="34">nppgui</name> <init pos:line="1363" pos:column="41">= <expr><op:operator pos:line="1363" pos:column="43">(</op:operator><name pos:line="1363" pos:column="44">NppGUI</name> <op:operator pos:line="1363" pos:column="51">&amp;</op:operator><op:operator pos:line="1363" pos:column="52">)</op:operator><op:operator pos:line="1363" pos:column="53">(</op:operator><call><name><name pos:line="1363" pos:column="54">pNppParam</name><op:operator pos:line="1363" pos:column="63">-&gt;</op:operator><name pos:line="1363" pos:column="65">getNppGUI</name></name><argument_list pos:line="1363" pos:column="74">()</argument_list></call><op:operator pos:line="1363" pos:column="76">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="1364" pos:column="25">if <condition pos:line="1364" pos:column="28">(<expr><name pos:line="1364" pos:column="29">wParam</name> <op:operator pos:line="1364" pos:column="36">==</op:operator> <name pos:line="1364" pos:column="39">CHECKDOCOPT_NONE</name></expr>)</condition><then pos:line="1364" pos:column="56">
				<expr_stmt><expr><name><name pos:line="1365" pos:column="33">nppgui</name><op:operator pos:line="1365" pos:column="39">.</op:operator><name pos:line="1365" pos:column="40">_fileAutoDetection</name></name> <op:operator pos:line="1365" pos:column="59">=</op:operator> <name pos:line="1365" pos:column="61">cdDisabled</name></expr>;</expr_stmt></then>
			<else pos:line="1366" pos:column="25">else <if pos:line="1366" pos:column="30">if <condition pos:line="1366" pos:column="33">(<expr><name pos:line="1366" pos:column="34">wParam</name> <op:operator pos:line="1366" pos:column="41">==</op:operator> <name pos:line="1366" pos:column="44">CHECKDOCOPT_UPDATESILENTLY</name></expr>)</condition><then pos:line="1366" pos:column="71">
				<expr_stmt><expr><name><name pos:line="1367" pos:column="33">nppgui</name><op:operator pos:line="1367" pos:column="39">.</op:operator><name pos:line="1367" pos:column="40">_fileAutoDetection</name></name> <op:operator pos:line="1367" pos:column="59">=</op:operator> <name pos:line="1367" pos:column="61">cdAutoUpdate</name></expr>;</expr_stmt></then>
			<else pos:line="1368" pos:column="25">else <if pos:line="1368" pos:column="30">if <condition pos:line="1368" pos:column="33">(<expr><name pos:line="1368" pos:column="34">wParam</name> <op:operator pos:line="1368" pos:column="41">==</op:operator> <name pos:line="1368" pos:column="44">CHECKDOCOPT_UPDATEGO2END</name></expr>)</condition><then pos:line="1368" pos:column="69">
				<expr_stmt><expr><name><name pos:line="1369" pos:column="33">nppgui</name><op:operator pos:line="1369" pos:column="39">.</op:operator><name pos:line="1369" pos:column="40">_fileAutoDetection</name></name> <op:operator pos:line="1369" pos:column="59">=</op:operator> <name pos:line="1369" pos:column="61">cdGo2end</name></expr>;</expr_stmt></then>
			<else pos:line="1370" pos:column="25">else <if pos:line="1370" pos:column="30">if <condition pos:line="1370" pos:column="33">(<expr><name pos:line="1370" pos:column="34">wParam</name> <op:operator pos:line="1370" pos:column="41">==</op:operator> <op:operator pos:line="1370" pos:column="44">(</op:operator><name pos:line="1370" pos:column="45">CHECKDOCOPT_UPDATESILENTLY</name> <op:operator pos:line="1370" pos:column="72">|</op:operator> <name pos:line="1370" pos:column="74">CHECKDOCOPT_UPDATEGO2END</name><op:operator pos:line="1370" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1370" pos:column="100">
				<expr_stmt><expr><name><name pos:line="1371" pos:column="33">nppgui</name><op:operator pos:line="1371" pos:column="39">.</op:operator><name pos:line="1371" pos:column="40">_fileAutoDetection</name></name> <op:operator pos:line="1371" pos:column="59">=</op:operator> <name pos:line="1371" pos:column="61">cdAutoUpdateGo2end</name></expr>;</expr_stmt></then></if></else></if></else></if></else></if>

			<return pos:line="1373" pos:column="25">return <expr><name pos:line="1373" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		
		</case><case pos:line="1376" pos:column="17">case <expr><name pos:line="1376" pos:column="22">WM_ACTIVATE</name></expr> :
			<expr_stmt><expr><call><name><name pos:line="1377" pos:column="25">_pEditView</name><op:operator pos:line="1377" pos:column="35">-&gt;</op:operator><name pos:line="1377" pos:column="37">getFocus</name></name><argument_list pos:line="1377" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1378" pos:column="25">return <expr><name pos:line="1378" pos:column="32">TRUE</name></expr>;</return>

		</case><case pos:line="1380" pos:column="17">case <expr><name pos:line="1380" pos:column="22">WM_DROPFILES</name></expr>:
		<block pos:line="1381" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1382" pos:column="25">dropFiles</name><argument_list pos:line="1382" pos:column="34">(<argument><expr><call><name><name pos:line="1382" pos:column="35">reinterpret_cast</name><argument_list pos:line="1382" pos:column="51">&lt;<argument><expr><name pos:line="1382" pos:column="52">HDROP</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1382" pos:column="58">(<argument><expr><name pos:line="1382" pos:column="59">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1383" pos:column="25">return <expr><name pos:line="1383" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1386" pos:column="17">case <expr><name pos:line="1386" pos:column="22">WM_UPDATESCINTILLAS</name></expr>:
		<block pos:line="1387" pos:column="17">{
			<comment type="line" pos:line="1388" pos:column="25">//reset styler for change in Stylers.xml</comment>
			<expr_stmt><expr><call><name><name pos:line="1389" pos:column="25">_mainEditView</name><op:operator pos:line="1389" pos:column="38">.</op:operator><name pos:line="1389" pos:column="39">defineDocType</name></name><argument_list pos:line="1389" pos:column="52">(<argument><expr><call><name><name pos:line="1389" pos:column="53">_mainEditView</name><op:operator pos:line="1389" pos:column="66">.</op:operator><name pos:line="1389" pos:column="67">getCurrentBuffer</name></name><argument_list pos:line="1389" pos:column="83">()</argument_list></call><op:operator pos:line="1389" pos:column="85">-&gt;</op:operator><call><name pos:line="1389" pos:column="87">getLangType</name><argument_list pos:line="1389" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1390" pos:column="25">_subEditView</name><op:operator pos:line="1390" pos:column="37">.</op:operator><name pos:line="1390" pos:column="38">defineDocType</name></name><argument_list pos:line="1390" pos:column="51">(<argument><expr><call><name><name pos:line="1390" pos:column="52">_subEditView</name><op:operator pos:line="1390" pos:column="64">.</op:operator><name pos:line="1390" pos:column="65">getCurrentBuffer</name></name><argument_list pos:line="1390" pos:column="81">()</argument_list></call><op:operator pos:line="1390" pos:column="83">-&gt;</op:operator><call><name pos:line="1390" pos:column="85">getLangType</name><argument_list pos:line="1390" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1391" pos:column="25">_mainEditView</name><op:operator pos:line="1391" pos:column="38">.</op:operator><name pos:line="1391" pos:column="39">performGlobalStyles</name></name><argument_list pos:line="1391" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1392" pos:column="25">_subEditView</name><op:operator pos:line="1392" pos:column="37">.</op:operator><name pos:line="1392" pos:column="38">performGlobalStyles</name></name><argument_list pos:line="1392" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1393" pos:column="25">_findReplaceDlg</name><op:operator pos:line="1393" pos:column="40">.</op:operator><name pos:line="1393" pos:column="41">updateFinderScintilla</name></name><argument_list pos:line="1393" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1395" pos:column="25">drawTabbarColoursFromStylerArray</name><argument_list pos:line="1395" pos:column="57">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="1397" pos:column="25">// Notify plugins of update to styles xml</comment>
			<decl_stmt><decl><type><name pos:line="1398" pos:column="25">SCNotification</name></type> <name pos:line="1398" pos:column="40">scnN</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1399" pos:column="25">scnN</name><op:operator pos:line="1399" pos:column="29">.</op:operator><name pos:line="1399" pos:column="30">nmhdr</name><op:operator pos:line="1399" pos:column="35">.</op:operator><name pos:line="1399" pos:column="36">code</name></name> <op:operator pos:line="1399" pos:column="41">=</op:operator> <name pos:line="1399" pos:column="43">NPPN_WORDSTYLESUPDATED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1400" pos:column="25">scnN</name><op:operator pos:line="1400" pos:column="29">.</op:operator><name pos:line="1400" pos:column="30">nmhdr</name><op:operator pos:line="1400" pos:column="35">.</op:operator><name pos:line="1400" pos:column="36">hwndFrom</name></name> <op:operator pos:line="1400" pos:column="45">=</op:operator> <call><name><name pos:line="1400" pos:column="47">_pPublicInterface</name><op:operator pos:line="1400" pos:column="64">-&gt;</op:operator><name pos:line="1400" pos:column="66">getHSelf</name></name><argument_list pos:line="1400" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1401" pos:column="25">scnN</name><op:operator pos:line="1401" pos:column="29">.</op:operator><name pos:line="1401" pos:column="30">nmhdr</name><op:operator pos:line="1401" pos:column="35">.</op:operator><name pos:line="1401" pos:column="36">idFrom</name></name> <op:operator pos:line="1401" pos:column="43">=</op:operator> <op:operator pos:line="1401" pos:column="45">(</op:operator><name pos:line="1401" pos:column="46">uptr_t</name><op:operator pos:line="1401" pos:column="52">)</op:operator> <call><name><name pos:line="1401" pos:column="54">_pEditView</name><op:operator pos:line="1401" pos:column="64">-&gt;</op:operator><name pos:line="1401" pos:column="66">getCurrentBufferID</name></name><argument_list pos:line="1401" pos:column="84">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1402" pos:column="25">_pluginsManager</name><op:operator pos:line="1402" pos:column="40">.</op:operator><name pos:line="1402" pos:column="41">notify</name></name><argument_list pos:line="1402" pos:column="47">(<argument><expr><op:operator pos:line="1402" pos:column="48">&amp;</op:operator><name pos:line="1402" pos:column="49">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1403" pos:column="25">return <expr><name pos:line="1403" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1406" pos:column="17">case <expr><name pos:line="1406" pos:column="22">WM_QUERYENDSESSION</name></expr>:
		</case><case pos:line="1407" pos:column="17">case <expr><name pos:line="1407" pos:column="22">WM_CLOSE</name></expr>:
		<block pos:line="1408" pos:column="17">{
			<if pos:line="1409" pos:column="25">if <condition pos:line="1409" pos:column="28">(<expr><call><name><name pos:line="1409" pos:column="29">_pPublicInterface</name><op:operator pos:line="1409" pos:column="46">-&gt;</op:operator><name pos:line="1409" pos:column="48">isPrelaunch</name></name><argument_list pos:line="1409" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="1409" pos:column="62">
			<block pos:line="1410" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1411" pos:column="33">SendMessage</name><argument_list pos:line="1411" pos:column="44">(<argument><expr><call><name><name pos:line="1411" pos:column="45">_pPublicInterface</name><op:operator pos:line="1411" pos:column="62">-&gt;</op:operator><name pos:line="1411" pos:column="64">getHSelf</name></name><argument_list pos:line="1411" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1411" pos:column="76">WM_SYSCOMMAND</name></expr></argument>, <argument><expr><name pos:line="1411" pos:column="91">SC_MINIMIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1411" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
            <else pos:line="1413" pos:column="13">else
            <block pos:line="1414" pos:column="13">{
                <if pos:line="1415" pos:column="17">if <condition pos:line="1415" pos:column="20">(<expr><name pos:line="1415" pos:column="21">_pTrayIco</name></expr>)</condition><then pos:line="1415" pos:column="31">
                    <expr_stmt><expr><call><name><name pos:line="1416" pos:column="21">_pTrayIco</name><op:operator pos:line="1416" pos:column="30">-&gt;</op:operator><name pos:line="1416" pos:column="32">doTrayIcon</name></name><argument_list pos:line="1416" pos:column="42">(<argument><expr><name pos:line="1416" pos:column="43">REMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			    <decl_stmt><decl><type><specifier pos:line="1418" pos:column="29">const</specifier> <name pos:line="1418" pos:column="35">NppGUI</name> <type:modifier pos:line="1418" pos:column="42">&amp;</type:modifier></type> <name pos:line="1418" pos:column="44">nppgui</name> <init pos:line="1418" pos:column="51">= <expr><call><name><name pos:line="1418" pos:column="53">pNppParam</name><op:operator pos:line="1418" pos:column="62">-&gt;</op:operator><name pos:line="1418" pos:column="64">getNppGUI</name></name><argument_list pos:line="1418" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			    <decl_stmt><decl><type><name pos:line="1419" pos:column="29">Session</name></type> <name pos:line="1419" pos:column="37">currentSession</name></decl>;</decl_stmt>
			    <if pos:line="1420" pos:column="29">if <condition pos:line="1420" pos:column="32">(<expr><name><name pos:line="1420" pos:column="33">nppgui</name><op:operator pos:line="1420" pos:column="39">.</op:operator><name pos:line="1420" pos:column="40">_rememberLastSession</name></name></expr>)</condition><then pos:line="1420" pos:column="61"> 
			    <block pos:line="1421" pos:column="29">{
				    <expr_stmt><expr><call><name pos:line="1422" pos:column="37">getCurrentOpenedFiles</name><argument_list pos:line="1422" pos:column="58">(<argument><expr><name pos:line="1422" pos:column="59">currentSession</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				    <comment type="line" pos:line="1423" pos:column="37">//Lock the recent file list so it isnt populated with opened files</comment>
				    <comment type="line" pos:line="1424" pos:column="37">//Causing them to show on restart even though they are loaded by session</comment>
				    <expr_stmt><expr><call><name><name pos:line="1425" pos:column="37">_lastRecentFileList</name><op:operator pos:line="1425" pos:column="56">.</op:operator><name pos:line="1425" pos:column="57">setLock</name></name><argument_list pos:line="1425" pos:column="64">(<argument><expr><lit:literal type="boolean" pos:line="1425" pos:column="65">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1425" pos:column="73">//only lock when the session is remembered</comment>
			    }</block></then></if>
			    <decl_stmt><decl><type><name pos:line="1427" pos:column="29">bool</name></type> <name pos:line="1427" pos:column="34">allClosed</name> <init pos:line="1427" pos:column="44">= <expr><call><name pos:line="1427" pos:column="46">fileCloseAll</name><argument_list pos:line="1427" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="1427" pos:column="65">//try closing files before doing anything else</comment>
    			
			    <if pos:line="1429" pos:column="29">if <condition pos:line="1429" pos:column="32">(<expr><name><name pos:line="1429" pos:column="33">nppgui</name><op:operator pos:line="1429" pos:column="39">.</op:operator><name pos:line="1429" pos:column="40">_rememberLastSession</name></name></expr>)</condition><then pos:line="1429" pos:column="61"> 
			    <block pos:line="1430" pos:column="29">{
				    <expr_stmt><expr><call><name><name pos:line="1431" pos:column="37">_lastRecentFileList</name><op:operator pos:line="1431" pos:column="56">.</op:operator><name pos:line="1431" pos:column="57">setLock</name></name><argument_list pos:line="1431" pos:column="64">(<argument><expr><lit:literal type="boolean" pos:line="1431" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1431" pos:column="73">//only lock when the session is remembered</comment>
			    }</block></then></if>

			    <if pos:line="1434" pos:column="29">if <condition pos:line="1434" pos:column="32">(<expr><op:operator pos:line="1434" pos:column="33">!</op:operator><name pos:line="1434" pos:column="34">allClosed</name></expr>)</condition><then pos:line="1434" pos:column="44"> 
			    <block pos:line="1435" pos:column="29">{
				    <comment type="line" pos:line="1436" pos:column="37">//User cancelled the shutdown</comment>
				    <return pos:line="1437" pos:column="37">return <expr><name pos:line="1437" pos:column="44">FALSE</name></expr>;</return>
			    }</block></then></if>

			    <if pos:line="1440" pos:column="29">if <condition pos:line="1440" pos:column="32">(<expr><name><name pos:line="1440" pos:column="33">_beforeSpecialView</name><op:operator pos:line="1440" pos:column="51">.</op:operator><name pos:line="1440" pos:column="52">isFullScreen</name></name></expr>)</condition><then pos:line="1440" pos:column="65">	<comment type="line" pos:line="1440" pos:column="73">//closing, return to windowed mode</comment>
				    <expr_stmt><expr><call><name pos:line="1441" pos:column="37">fullScreenToggle</name><argument_list pos:line="1441" pos:column="53">()</argument_list></call></expr>;</expr_stmt></then></if>
			    <if pos:line="1442" pos:column="29">if <condition pos:line="1442" pos:column="32">(<expr><name><name pos:line="1442" pos:column="33">_beforeSpecialView</name><op:operator pos:line="1442" pos:column="51">.</op:operator><name pos:line="1442" pos:column="52">isPostIt</name></name></expr>)</condition><then pos:line="1442" pos:column="61">		<comment type="line" pos:line="1442" pos:column="73">//closing, return to windowed mode</comment>
				    <expr_stmt><expr><call><name pos:line="1443" pos:column="37">postItToggle</name><argument_list pos:line="1443" pos:column="49">()</argument_list></call></expr>;</expr_stmt></then></if>

			    <if pos:line="1445" pos:column="29">if <condition pos:line="1445" pos:column="32">(<expr><call><name><name pos:line="1445" pos:column="33">_configStyleDlg</name><op:operator pos:line="1445" pos:column="48">.</op:operator><name pos:line="1445" pos:column="49">isCreated</name></name><argument_list pos:line="1445" pos:column="58">()</argument_list></call> <op:operator pos:line="1445" pos:column="61">&amp;&amp;</op:operator> <call><name><op:operator pos:line="1445" pos:column="64">::</op:operator><name pos:line="1445" pos:column="66">IsWindowVisible</name></name><argument_list pos:line="1445" pos:column="81">(<argument><expr><call><name><name pos:line="1445" pos:column="82">_configStyleDlg</name><op:operator pos:line="1445" pos:column="97">.</op:operator><name pos:line="1445" pos:column="98">getHSelf</name></name><argument_list pos:line="1445" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1445" pos:column="110">
				    <expr_stmt><expr><call><name><name pos:line="1446" pos:column="37">_configStyleDlg</name><op:operator pos:line="1446" pos:column="52">.</op:operator><name pos:line="1446" pos:column="53">restoreGlobalOverrideValues</name></name><argument_list pos:line="1446" pos:column="80">()</argument_list></call></expr>;</expr_stmt></then></if>

			    <decl_stmt><decl><type><name pos:line="1448" pos:column="29">SCNotification</name></type> <name pos:line="1448" pos:column="44">scnN</name></decl>;</decl_stmt>
			    <expr_stmt><expr><name><name pos:line="1449" pos:column="29">scnN</name><op:operator pos:line="1449" pos:column="33">.</op:operator><name pos:line="1449" pos:column="34">nmhdr</name><op:operator pos:line="1449" pos:column="39">.</op:operator><name pos:line="1449" pos:column="40">code</name></name> <op:operator pos:line="1449" pos:column="45">=</op:operator> <name pos:line="1449" pos:column="47">NPPN_SHUTDOWN</name></expr>;</expr_stmt>
			    <expr_stmt><expr><name><name pos:line="1450" pos:column="29">scnN</name><op:operator pos:line="1450" pos:column="33">.</op:operator><name pos:line="1450" pos:column="34">nmhdr</name><op:operator pos:line="1450" pos:column="39">.</op:operator><name pos:line="1450" pos:column="40">hwndFrom</name></name> <op:operator pos:line="1450" pos:column="49">=</op:operator> <call><name><name pos:line="1450" pos:column="51">_pPublicInterface</name><op:operator pos:line="1450" pos:column="68">-&gt;</op:operator><name pos:line="1450" pos:column="70">getHSelf</name></name><argument_list pos:line="1450" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
			    <expr_stmt><expr><name><name pos:line="1451" pos:column="29">scnN</name><op:operator pos:line="1451" pos:column="33">.</op:operator><name pos:line="1451" pos:column="34">nmhdr</name><op:operator pos:line="1451" pos:column="39">.</op:operator><name pos:line="1451" pos:column="40">idFrom</name></name> <op:operator pos:line="1451" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1451" pos:column="49">0</lit:literal></expr>;</expr_stmt>
			    <expr_stmt><expr><call><name><name pos:line="1452" pos:column="29">_pluginsManager</name><op:operator pos:line="1452" pos:column="44">.</op:operator><name pos:line="1452" pos:column="45">notify</name></name><argument_list pos:line="1452" pos:column="51">(<argument><expr><op:operator pos:line="1452" pos:column="52">&amp;</op:operator><name pos:line="1452" pos:column="53">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1454" pos:column="33">//</comment>
				<comment type="line" pos:line="1455" pos:column="33">// saving config.xml</comment>
				<comment type="line" pos:line="1456" pos:column="33">//</comment>
			    <expr_stmt><expr><call><name pos:line="1457" pos:column="29">saveFindHistory</name><argument_list pos:line="1457" pos:column="44">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1457" pos:column="48">//writeFindHistory</comment>
			    <expr_stmt><expr><call><name><name pos:line="1458" pos:column="29">_lastRecentFileList</name><op:operator pos:line="1458" pos:column="48">.</op:operator><name pos:line="1458" pos:column="49">saveLRFL</name></name><argument_list pos:line="1458" pos:column="57">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1458" pos:column="61">//writeRecentFileHistorySettings, writeHistory</comment>
			    <expr_stmt><expr><call><name pos:line="1459" pos:column="29">saveScintillaParams</name><argument_list pos:line="1459" pos:column="48">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1459" pos:column="52">//writeScintillaParams</comment>
			    <expr_stmt><expr><call><name pos:line="1460" pos:column="29">saveGUIParams</name><argument_list pos:line="1460" pos:column="42">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1460" pos:column="46">//writeGUIParams</comment>
				<expr_stmt><expr><call><name pos:line="1461" pos:column="33">saveProjectPanelsParams</name><argument_list pos:line="1461" pos:column="56">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1461" pos:column="60">//writeProjectPanelsSettings</comment>
				<expr_stmt><expr><call><name><name pos:line="1462" pos:column="33">pNppParam</name><op:operator pos:line="1462" pos:column="42">-&gt;</op:operator><name pos:line="1462" pos:column="44">saveConfig_xml</name></name><argument_list pos:line="1462" pos:column="58">()</argument_list></call></expr>;</expr_stmt>


			    <expr_stmt><expr><call><name pos:line="1465" pos:column="29">saveUserDefineLangs</name><argument_list pos:line="1465" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
			    <expr_stmt><expr><call><name pos:line="1466" pos:column="29">saveShortcuts</name><argument_list pos:line="1466" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			    <if pos:line="1467" pos:column="29">if <condition pos:line="1467" pos:column="32">(<expr><name><name pos:line="1467" pos:column="33">nppgui</name><op:operator pos:line="1467" pos:column="39">.</op:operator><name pos:line="1467" pos:column="40">_rememberLastSession</name></name> <op:operator pos:line="1467" pos:column="61">&amp;&amp;</op:operator> <name pos:line="1467" pos:column="64">_rememberThisSession</name></expr>)</condition><then pos:line="1467" pos:column="85">
				    <expr_stmt><expr><call><name pos:line="1468" pos:column="37">saveSession</name><argument_list pos:line="1468" pos:column="48">(<argument><expr><name pos:line="1468" pos:column="49">currentSession</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

                <comment type="line" pos:line="1470" pos:column="17">//Sends WM_DESTROY, Notepad++ will end</comment>
				<if pos:line="1471" pos:column="33">if<condition pos:line="1471" pos:column="35">(<expr><name pos:line="1471" pos:column="36">Message</name> <op:operator pos:line="1471" pos:column="44">==</op:operator> <name pos:line="1471" pos:column="47">WM_CLOSE</name></expr>)</condition><then pos:line="1471" pos:column="56">
					<expr_stmt><expr><call><name><op:operator pos:line="1472" pos:column="41">::</op:operator><name pos:line="1472" pos:column="43">DestroyWindow</name></name><argument_list pos:line="1472" pos:column="56">(<argument><expr><name pos:line="1472" pos:column="57">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></else></if>
			<return pos:line="1474" pos:column="25">return <expr><name pos:line="1474" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1477" pos:column="17">case <expr><name pos:line="1477" pos:column="22">WM_ENDSESSION</name></expr>:
		<block pos:line="1478" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="1479" pos:column="25">::</op:operator><name pos:line="1479" pos:column="27">DestroyWindow</name></name><argument_list pos:line="1479" pos:column="40">(<argument><expr><name pos:line="1479" pos:column="41">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1480" pos:column="25">return <expr><name pos:line="1480" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1483" pos:column="17">case <expr><name pos:line="1483" pos:column="22">WM_DESTROY</name></expr>:
		<block pos:line="1484" pos:column="17">{	
			<expr_stmt><expr><call><name pos:line="1485" pos:column="25">killAllChildren</name><argument_list pos:line="1485" pos:column="40">()</argument_list></call></expr>;</expr_stmt>	
			<expr_stmt><expr><call><name><op:operator pos:line="1486" pos:column="25">::</op:operator><name pos:line="1486" pos:column="27">PostQuitMessage</name></name><argument_list pos:line="1486" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="1486" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1487" pos:column="25">_pPublicInterface</name><op:operator pos:line="1487" pos:column="42">-&gt;</op:operator><name pos:line="1487" pos:column="44">gNppHWND</name></name> <op:operator pos:line="1487" pos:column="53">=</op:operator> <name pos:line="1487" pos:column="55">NULL</name></expr>;</expr_stmt>
			<return pos:line="1488" pos:column="25">return <expr><name pos:line="1488" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1491" pos:column="17">case <expr><name pos:line="1491" pos:column="22">WM_SYSCOMMAND</name></expr>:
		<block pos:line="1492" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1493" pos:column="25">NppGUI</name> <type:modifier pos:line="1493" pos:column="32">&amp;</type:modifier></type> <name pos:line="1493" pos:column="34">nppgui</name> <init pos:line="1493" pos:column="41">= <expr><op:operator pos:line="1493" pos:column="43">(</op:operator><name pos:line="1493" pos:column="44">NppGUI</name> <op:operator pos:line="1493" pos:column="51">&amp;</op:operator><op:operator pos:line="1493" pos:column="52">)</op:operator><op:operator pos:line="1493" pos:column="53">(</op:operator><call><name><name pos:line="1493" pos:column="54">pNppParam</name><op:operator pos:line="1493" pos:column="63">-&gt;</op:operator><name pos:line="1493" pos:column="65">getNppGUI</name></name><argument_list pos:line="1493" pos:column="74">()</argument_list></call><op:operator pos:line="1493" pos:column="76">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="1494" pos:column="25">if <condition pos:line="1494" pos:column="28">(<expr><op:operator pos:line="1494" pos:column="29">(</op:operator><name><name pos:line="1494" pos:column="30">nppgui</name><op:operator pos:line="1494" pos:column="36">.</op:operator><name pos:line="1494" pos:column="37">_isMinimizedToTray</name></name> <op:operator pos:line="1494" pos:column="56">||</op:operator> <call><name><name pos:line="1494" pos:column="59">_pPublicInterface</name><op:operator pos:line="1494" pos:column="76">-&gt;</op:operator><name pos:line="1494" pos:column="78">isPrelaunch</name></name><argument_list pos:line="1494" pos:column="89">()</argument_list></call><op:operator pos:line="1494" pos:column="91">)</op:operator> <op:operator pos:line="1494" pos:column="93">&amp;&amp;</op:operator> <op:operator pos:line="1494" pos:column="96">(</op:operator><name pos:line="1494" pos:column="97">wParam</name> <op:operator pos:line="1494" pos:column="104">==</op:operator> <name pos:line="1494" pos:column="107">SC_MINIMIZE</name><op:operator pos:line="1494" pos:column="118">)</op:operator></expr>)</condition><then pos:line="1494" pos:column="120">
			<block pos:line="1495" pos:column="25">{
				<if pos:line="1496" pos:column="33">if <condition pos:line="1496" pos:column="36">(<expr><op:operator pos:line="1496" pos:column="37">!</op:operator><name pos:line="1496" pos:column="38">_pTrayIco</name></expr>)</condition><then pos:line="1496" pos:column="48">
					<expr_stmt><expr><name pos:line="1497" pos:column="41">_pTrayIco</name> <op:operator pos:line="1497" pos:column="51">=</op:operator> <op:operator pos:line="1497" pos:column="53">new</op:operator> <call><name pos:line="1497" pos:column="57">trayIconControler</name><argument_list pos:line="1497" pos:column="74">(<argument><expr><call><name><name pos:line="1497" pos:column="75">_pPublicInterface</name><op:operator pos:line="1497" pos:column="92">-&gt;</op:operator><name pos:line="1497" pos:column="94">getHSelf</name></name><argument_list pos:line="1497" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1497" pos:column="106">IDI_M30ICON</name></expr></argument>, <argument><expr><name pos:line="1497" pos:column="119">IDC_MINIMIZED_TRAY</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="1497" pos:column="139">::</op:operator><name pos:line="1497" pos:column="141">LoadIcon</name></name><argument_list pos:line="1497" pos:column="149">(<argument><expr><call><name><name pos:line="1497" pos:column="150">_pPublicInterface</name><op:operator pos:line="1497" pos:column="167">-&gt;</op:operator><name pos:line="1497" pos:column="169">getHinst</name></name><argument_list pos:line="1497" pos:column="177">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1497" pos:column="181">MAKEINTRESOURCE</name><argument_list pos:line="1497" pos:column="196">(<argument><expr><name pos:line="1497" pos:column="197">IDI_M30ICON</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1497" pos:column="212">TEXT</name><argument_list pos:line="1497" pos:column="216">(<argument><expr><lit:literal type="string" pos:line="1497" pos:column="217">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

				<expr_stmt><expr><call><name><name pos:line="1499" pos:column="33">_pTrayIco</name><op:operator pos:line="1499" pos:column="42">-&gt;</op:operator><name pos:line="1499" pos:column="44">doTrayIcon</name></name><argument_list pos:line="1499" pos:column="54">(<argument><expr><name pos:line="1499" pos:column="55">ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1500" pos:column="33">::</op:operator><name pos:line="1500" pos:column="35">ShowWindow</name></name><argument_list pos:line="1500" pos:column="45">(<argument><expr><name pos:line="1500" pos:column="46">hwnd</name></expr></argument>, <argument><expr><name pos:line="1500" pos:column="52">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="1501" pos:column="33">return <expr><name pos:line="1501" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			
			<if pos:line="1504" pos:column="25">if <condition pos:line="1504" pos:column="28">(<expr><name pos:line="1504" pos:column="29">wParam</name> <op:operator pos:line="1504" pos:column="36">==</op:operator> <name pos:line="1504" pos:column="39">SC_KEYMENU</name> <op:operator pos:line="1504" pos:column="50">&amp;&amp;</op:operator> <name pos:line="1504" pos:column="53">lParam</name> <op:operator pos:line="1504" pos:column="60">==</op:operator> <name pos:line="1504" pos:column="63">VK_SPACE</name></expr>)</condition><then pos:line="1504" pos:column="72">
			<block pos:line="1505" pos:column="25">{
				<expr_stmt><expr><name pos:line="1506" pos:column="33">_sysMenuEntering</name> <op:operator pos:line="1506" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="1506" pos:column="52">true</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1508" pos:column="25">else <if pos:line="1508" pos:column="30">if <condition pos:line="1508" pos:column="33">(<expr><name pos:line="1508" pos:column="34">wParam</name> <op:operator pos:line="1508" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="1508" pos:column="44">0xF093</lit:literal></expr>)</condition><then pos:line="1508" pos:column="51"> <comment type="line" pos:line="1508" pos:column="52">//it should be SC_MOUSEMENU. A bug?</comment>
			<block pos:line="1509" pos:column="25">{
				<expr_stmt><expr><name pos:line="1510" pos:column="33">_sysMenuEntering</name> <op:operator pos:line="1510" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="1510" pos:column="52">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if></else></if>

			<return pos:line="1513" pos:column="25">return <expr><call><name><op:operator pos:line="1513" pos:column="32">::</op:operator><name pos:line="1513" pos:column="34">DefWindowProc</name></name><argument_list pos:line="1513" pos:column="47">(<argument><expr><name pos:line="1513" pos:column="48">hwnd</name></expr></argument>, <argument><expr><name pos:line="1513" pos:column="54">Message</name></expr></argument>, <argument><expr><name pos:line="1513" pos:column="63">wParam</name></expr></argument>, <argument><expr><name pos:line="1513" pos:column="71">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1516" pos:column="17">case <expr><name pos:line="1516" pos:column="22">WM_LBUTTONDBLCLK</name></expr>:
		<block pos:line="1517" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="1518" pos:column="25">::</op:operator><name pos:line="1518" pos:column="27">SendMessage</name></name><argument_list pos:line="1518" pos:column="38">(<argument><expr><call><name><name pos:line="1518" pos:column="39">_pPublicInterface</name><op:operator pos:line="1518" pos:column="56">-&gt;</op:operator><name pos:line="1518" pos:column="58">getHSelf</name></name><argument_list pos:line="1518" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1518" pos:column="70">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1518" pos:column="82">IDM_FILE_NEW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1518" pos:column="96">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1519" pos:column="25">return <expr><name pos:line="1519" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1522" pos:column="17">case <expr><name pos:line="1522" pos:column="22">IDC_MINIMIZED_TRAY</name></expr>:
		<block pos:line="1523" pos:column="17">{
			<switch pos:line="1524" pos:column="25">switch <condition pos:line="1524" pos:column="32">(<expr><name pos:line="1524" pos:column="33">lParam</name></expr>)</condition>
			<block pos:line="1525" pos:column="25">{
				<comment type="line" pos:line="1526" pos:column="33">//case WM_LBUTTONDBLCLK:</comment>
				<case pos:line="1527" pos:column="33">case <expr><name pos:line="1527" pos:column="38">WM_LBUTTONUP</name></expr> :
					<expr_stmt><expr><call><name><name pos:line="1528" pos:column="41">_pEditView</name><op:operator pos:line="1528" pos:column="51">-&gt;</op:operator><name pos:line="1528" pos:column="53">getFocus</name></name><argument_list pos:line="1528" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1529" pos:column="41">::</op:operator><name pos:line="1529" pos:column="43">ShowWindow</name></name><argument_list pos:line="1529" pos:column="53">(<argument><expr><call><name><name pos:line="1529" pos:column="54">_pPublicInterface</name><op:operator pos:line="1529" pos:column="71">-&gt;</op:operator><name pos:line="1529" pos:column="73">getHSelf</name></name><argument_list pos:line="1529" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1529" pos:column="85">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="1530" pos:column="41">if <condition pos:line="1530" pos:column="44">(<expr><op:operator pos:line="1530" pos:column="45">!</op:operator><call><name><name pos:line="1530" pos:column="46">_pPublicInterface</name><op:operator pos:line="1530" pos:column="63">-&gt;</op:operator><name pos:line="1530" pos:column="65">isPrelaunch</name></name><argument_list pos:line="1530" pos:column="76">()</argument_list></call></expr>)</condition><then pos:line="1530" pos:column="79">
						<expr_stmt><expr><call><name><name pos:line="1531" pos:column="49">_pTrayIco</name><op:operator pos:line="1531" pos:column="58">-&gt;</op:operator><name pos:line="1531" pos:column="60">doTrayIcon</name></name><argument_list pos:line="1531" pos:column="70">(<argument><expr><name pos:line="1531" pos:column="71">REMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name><op:operator pos:line="1532" pos:column="41">::</op:operator><name pos:line="1532" pos:column="43">SendMessage</name></name><argument_list pos:line="1532" pos:column="54">(<argument><expr><call><name><name pos:line="1532" pos:column="55">_pPublicInterface</name><op:operator pos:line="1532" pos:column="72">-&gt;</op:operator><name pos:line="1532" pos:column="74">getHSelf</name></name><argument_list pos:line="1532" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1532" pos:column="86">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1532" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1532" pos:column="98">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1533" pos:column="41">return <expr><name pos:line="1533" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1535" pos:column="33">case <expr><name pos:line="1535" pos:column="38">WM_MBUTTONUP</name></expr>:
					<expr_stmt><expr><call><name pos:line="1536" pos:column="41">command</name><argument_list pos:line="1536" pos:column="48">(<argument><expr><name pos:line="1536" pos:column="49">IDM_SYSTRAYPOPUP_NEW_AND_PASTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1537" pos:column="41">return <expr><name pos:line="1537" pos:column="48">TRUE</name></expr>;</return>

 				</case><case pos:line="1539" pos:column="33">case <expr><name pos:line="1539" pos:column="38">WM_RBUTTONUP</name></expr>:
 				<block pos:line="1540" pos:column="33">{
 					<decl_stmt><decl><type><name pos:line="1541" pos:column="41">POINT</name></type> <name pos:line="1541" pos:column="47">p</name></decl>;</decl_stmt>
 					<expr_stmt><expr><call><name pos:line="1542" pos:column="41">GetCursorPos</name><argument_list pos:line="1542" pos:column="53">(<argument><expr><op:operator pos:line="1542" pos:column="54">&amp;</op:operator><name pos:line="1542" pos:column="55">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<decl_stmt><decl><type><name pos:line="1544" pos:column="41">HMENU</name></type> <name pos:line="1544" pos:column="47">hmenu</name></decl>;</decl_stmt>            <comment type="line" pos:line="1544" pos:column="65">// menu template          </comment>
					<decl_stmt><decl><type><name pos:line="1545" pos:column="41">HMENU</name></type> <name pos:line="1545" pos:column="47">hTrayIconMenu</name></decl>;</decl_stmt>  <comment type="line" pos:line="1545" pos:column="63">// shortcut menu   </comment>
					<expr_stmt><expr><name pos:line="1546" pos:column="41">hmenu</name> <op:operator pos:line="1546" pos:column="47">=</op:operator> <call><name><op:operator pos:line="1546" pos:column="49">::</op:operator><name pos:line="1546" pos:column="51">LoadMenu</name></name><argument_list pos:line="1546" pos:column="59">(<argument><expr><call><name><name pos:line="1546" pos:column="60">_pPublicInterface</name><op:operator pos:line="1546" pos:column="77">-&gt;</op:operator><name pos:line="1546" pos:column="79">getHinst</name></name><argument_list pos:line="1546" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1546" pos:column="91">MAKEINTRESOURCE</name><argument_list pos:line="1546" pos:column="106">(<argument><expr><name pos:line="1546" pos:column="107">IDR_SYSTRAYPOPUP_MENU</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1547" pos:column="41">hTrayIconMenu</name> <op:operator pos:line="1547" pos:column="55">=</op:operator> <call><name><op:operator pos:line="1547" pos:column="57">::</op:operator><name pos:line="1547" pos:column="59">GetSubMenu</name></name><argument_list pos:line="1547" pos:column="69">(<argument><expr><name pos:line="1547" pos:column="70">hmenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1547" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
					<expr_stmt><expr><call><name pos:line="1548" pos:column="41">SetForegroundWindow</name><argument_list pos:line="1548" pos:column="60">(<argument><expr><call><name><name pos:line="1548" pos:column="61">_pPublicInterface</name><op:operator pos:line="1548" pos:column="78">-&gt;</op:operator><name pos:line="1548" pos:column="80">getHSelf</name></name><argument_list pos:line="1548" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1549" pos:column="41">TrackPopupMenu</name><argument_list pos:line="1549" pos:column="55">(<argument><expr><name pos:line="1549" pos:column="56">hTrayIconMenu</name></expr></argument>, <argument><expr><name pos:line="1549" pos:column="71">TPM_LEFTALIGN</name></expr></argument>, <argument><expr><name><name pos:line="1549" pos:column="86">p</name><op:operator pos:line="1549" pos:column="87">.</op:operator><name pos:line="1549" pos:column="88">x</name></name></expr></argument>, <argument><expr><name><name pos:line="1549" pos:column="91">p</name><op:operator pos:line="1549" pos:column="92">.</op:operator><name pos:line="1549" pos:column="93">y</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1549" pos:column="96">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1549" pos:column="99">_pPublicInterface</name><op:operator pos:line="1549" pos:column="116">-&gt;</op:operator><name pos:line="1549" pos:column="118">getHSelf</name></name><argument_list pos:line="1549" pos:column="126">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1549" pos:column="130">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1550" pos:column="41">PostMessage</name><argument_list pos:line="1550" pos:column="52">(<argument><expr><call><name><name pos:line="1550" pos:column="53">_pPublicInterface</name><op:operator pos:line="1550" pos:column="70">-&gt;</op:operator><name pos:line="1550" pos:column="72">getHSelf</name></name><argument_list pos:line="1550" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1550" pos:column="84">WM_NULL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1550" pos:column="93">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1550" pos:column="96">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1551" pos:column="41">DestroyMenu</name><argument_list pos:line="1551" pos:column="52">(<argument><expr><name pos:line="1551" pos:column="53">hmenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
 					<return pos:line="1552" pos:column="41">return <expr><name pos:line="1552" pos:column="48">TRUE</name></expr>;</return> 
 				}</block>

			</case>}</block></switch>
			<return pos:line="1556" pos:column="25">return <expr><name pos:line="1556" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1559" pos:column="17">case <expr><name pos:line="1559" pos:column="22">NPPM_DMMSHOW</name></expr>:
		<block pos:line="1560" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1561" pos:column="25">_dockingManager</name><op:operator pos:line="1561" pos:column="40">.</op:operator><name pos:line="1561" pos:column="41">showDockableDlg</name></name><argument_list pos:line="1561" pos:column="56">(<argument><expr><op:operator pos:line="1561" pos:column="57">(</op:operator><name pos:line="1561" pos:column="58">HWND</name><op:operator pos:line="1561" pos:column="62">)</op:operator><name pos:line="1561" pos:column="63">lParam</name></expr></argument>, <argument><expr><name pos:line="1561" pos:column="71">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1562" pos:column="25">return <expr><name pos:line="1562" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1565" pos:column="17">case <expr><name pos:line="1565" pos:column="22">NPPM_DMMHIDE</name></expr>:
		<block pos:line="1566" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1567" pos:column="25">_dockingManager</name><op:operator pos:line="1567" pos:column="40">.</op:operator><name pos:line="1567" pos:column="41">showDockableDlg</name></name><argument_list pos:line="1567" pos:column="56">(<argument><expr><op:operator pos:line="1567" pos:column="57">(</op:operator><name pos:line="1567" pos:column="58">HWND</name><op:operator pos:line="1567" pos:column="62">)</op:operator><name pos:line="1567" pos:column="63">lParam</name></expr></argument>, <argument><expr><name pos:line="1567" pos:column="71">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1568" pos:column="25">return <expr><name pos:line="1568" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1571" pos:column="17">case <expr><name pos:line="1571" pos:column="22">NPPM_DMMUPDATEDISPINFO</name></expr>:
		<block pos:line="1572" pos:column="17">{
			<if pos:line="1573" pos:column="25">if <condition pos:line="1573" pos:column="28">(<expr><call><name><op:operator pos:line="1573" pos:column="29">::</op:operator><name pos:line="1573" pos:column="31">IsWindowVisible</name></name><argument_list pos:line="1573" pos:column="46">(<argument><expr><op:operator pos:line="1573" pos:column="47">(</op:operator><name pos:line="1573" pos:column="48">HWND</name><op:operator pos:line="1573" pos:column="52">)</op:operator><name pos:line="1573" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1573" pos:column="61">
				<expr_stmt><expr><call><name><name pos:line="1574" pos:column="33">_dockingManager</name><op:operator pos:line="1574" pos:column="48">.</op:operator><name pos:line="1574" pos:column="49">updateContainerInfo</name></name><argument_list pos:line="1574" pos:column="68">(<argument><expr><op:operator pos:line="1574" pos:column="69">(</op:operator><name pos:line="1574" pos:column="70">HWND</name><op:operator pos:line="1574" pos:column="74">)</op:operator><name pos:line="1574" pos:column="75">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="1575" pos:column="25">return <expr><name pos:line="1575" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1578" pos:column="17">case <expr><name pos:line="1578" pos:column="22">NPPM_DMMREGASDCKDLG</name></expr>:
		<block pos:line="1579" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1580" pos:column="25">tTbData</name> <type:modifier pos:line="1580" pos:column="33">*</type:modifier></type><name pos:line="1580" pos:column="34">pData</name>	<init pos:line="1580" pos:column="41">= <expr><op:operator pos:line="1580" pos:column="43">(</op:operator><name pos:line="1580" pos:column="44">tTbData</name> <op:operator pos:line="1580" pos:column="52">*</op:operator><op:operator pos:line="1580" pos:column="53">)</op:operator><name pos:line="1580" pos:column="54">lParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1581" pos:column="25">int</name></type>		<name pos:line="1581" pos:column="41">iCont</name>	<init pos:line="1581" pos:column="49">= <expr><op:operator pos:line="1581" pos:column="51">-</op:operator><lit:literal type="number" pos:line="1581" pos:column="52">1</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1582" pos:column="25">bool</name></type>	<name pos:line="1582" pos:column="33">isVisible</name>	<init pos:line="1582" pos:column="49">= <expr><lit:literal type="boolean" pos:line="1582" pos:column="51">false</lit:literal></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name pos:line="1584" pos:column="25">getIntegralDockingData</name><argument_list pos:line="1584" pos:column="47">(<argument><expr><op:operator pos:line="1584" pos:column="48">*</op:operator><name pos:line="1584" pos:column="49">pData</name></expr></argument>, <argument><expr><name pos:line="1584" pos:column="56">iCont</name></expr></argument>, <argument><expr><name pos:line="1584" pos:column="63">isVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1585" pos:column="25">_dockingManager</name><op:operator pos:line="1585" pos:column="40">.</op:operator><name pos:line="1585" pos:column="41">createDockableDlg</name></name><argument_list pos:line="1585" pos:column="58">(<argument><expr><op:operator pos:line="1585" pos:column="59">*</op:operator><name pos:line="1585" pos:column="60">pData</name></expr></argument>, <argument><expr><name pos:line="1585" pos:column="67">iCont</name></expr></argument>, <argument><expr><name pos:line="1585" pos:column="74">isVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1586" pos:column="25">return <expr><name pos:line="1586" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1589" pos:column="17">case <expr><name pos:line="1589" pos:column="22">NPPM_DMMVIEWOTHERTAB</name></expr>:
		<block pos:line="1590" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1591" pos:column="25">_dockingManager</name><op:operator pos:line="1591" pos:column="40">.</op:operator><name pos:line="1591" pos:column="41">showDockableDlg</name></name><argument_list pos:line="1591" pos:column="56">(<argument><expr><op:operator pos:line="1591" pos:column="57">(</op:operator><name pos:line="1591" pos:column="58">TCHAR</name><op:operator pos:line="1591" pos:column="63">*</op:operator><op:operator pos:line="1591" pos:column="64">)</op:operator><name pos:line="1591" pos:column="65">lParam</name></expr></argument>, <argument><expr><name pos:line="1591" pos:column="73">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1592" pos:column="25">return <expr><name pos:line="1592" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1595" pos:column="17">case <expr><name pos:line="1595" pos:column="22">NPPM_DMMGETPLUGINHWNDBYNAME</name></expr> : <comment type="line" pos:line="1595" pos:column="52">//(const TCHAR *windowName, const TCHAR *moduleName)</comment>
		<block pos:line="1596" pos:column="17">{
			<if pos:line="1597" pos:column="25">if <condition pos:line="1597" pos:column="28">(<expr><op:operator pos:line="1597" pos:column="29">!</op:operator><name pos:line="1597" pos:column="30">lParam</name></expr>)</condition><then pos:line="1597" pos:column="37"> <return pos:line="1597" pos:column="38">return <expr><name pos:line="1597" pos:column="45">NULL</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="1599" pos:column="25">TCHAR</name> <type:modifier pos:line="1599" pos:column="31">*</type:modifier></type><name pos:line="1599" pos:column="32">moduleName</name> <init pos:line="1599" pos:column="43">= <expr><op:operator pos:line="1599" pos:column="45">(</op:operator><name pos:line="1599" pos:column="46">TCHAR</name> <op:operator pos:line="1599" pos:column="52">*</op:operator><op:operator pos:line="1599" pos:column="53">)</op:operator><name pos:line="1599" pos:column="54">lParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1600" pos:column="25">TCHAR</name> <type:modifier pos:line="1600" pos:column="31">*</type:modifier></type><name pos:line="1600" pos:column="32">windowName</name> <init pos:line="1600" pos:column="43">= <expr><op:operator pos:line="1600" pos:column="45">(</op:operator><name pos:line="1600" pos:column="46">TCHAR</name> <op:operator pos:line="1600" pos:column="52">*</op:operator><op:operator pos:line="1600" pos:column="53">)</op:operator><name pos:line="1600" pos:column="54">wParam</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="1601" pos:column="25">vector</name><argument_list pos:line="1601" pos:column="31">&lt;<argument><expr><name pos:line="1601" pos:column="32">DockingCont</name> <type:modifier pos:line="1601" pos:column="44">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="1601" pos:column="47">dockContainer</name> <init pos:line="1601" pos:column="61">= <expr><call><name><name pos:line="1601" pos:column="63">_dockingManager</name><op:operator pos:line="1601" pos:column="78">.</op:operator><name pos:line="1601" pos:column="79">getContainerInfo</name></name><argument_list pos:line="1601" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="1602" pos:column="25">for (<init><decl><type><name pos:line="1602" pos:column="30">size_t</name></type> <name pos:line="1602" pos:column="37">i</name> <init pos:line="1602" pos:column="39">= <expr><lit:literal type="number" pos:line="1602" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1602" pos:column="45">i</name> <op:operator pos:line="1602" pos:column="47">&lt;</op:operator> <call><name><name pos:line="1602" pos:column="49">dockContainer</name><op:operator pos:line="1602" pos:column="62">.</op:operator><name pos:line="1602" pos:column="63">size</name></name><argument_list pos:line="1602" pos:column="67">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1602" pos:column="72">i</name><op:operator pos:line="1602" pos:column="73">++</op:operator></expr></incr>)
			<block pos:line="1603" pos:column="25">{
				<decl_stmt><decl><type><name><name pos:line="1604" pos:column="33">vector</name><argument_list pos:line="1604" pos:column="39">&lt;<argument><expr><name pos:line="1604" pos:column="40">tTbData</name> <type:modifier pos:line="1604" pos:column="48">*</type:modifier></expr></argument>&gt;</argument_list></name></type> <name pos:line="1604" pos:column="51">tbData</name> <init pos:line="1604" pos:column="58">= <expr><name><name pos:line="1604" pos:column="60">dockContainer</name><index pos:line="1604" pos:column="73">[<expr><name pos:line="1604" pos:column="74">i</name></expr>]</index></name><op:operator pos:line="1604" pos:column="76">-&gt;</op:operator><call><name pos:line="1604" pos:column="78">getDataOfAllTb</name><argument_list pos:line="1604" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="1605" pos:column="33">for (<init><decl><type><name pos:line="1605" pos:column="38">size_t</name></type> <name pos:line="1605" pos:column="45">j</name> <init pos:line="1605" pos:column="47">= <expr><lit:literal type="number" pos:line="1605" pos:column="49">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1605" pos:column="53">j</name> <op:operator pos:line="1605" pos:column="55">&lt;</op:operator> <call><name><name pos:line="1605" pos:column="57">tbData</name><op:operator pos:line="1605" pos:column="63">.</op:operator><name pos:line="1605" pos:column="64">size</name></name><argument_list pos:line="1605" pos:column="68">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1605" pos:column="73">j</name><op:operator pos:line="1605" pos:column="74">++</op:operator></expr></incr>)
				<block pos:line="1606" pos:column="33">{
					<if pos:line="1607" pos:column="41">if <condition pos:line="1607" pos:column="44">(<expr><call><name pos:line="1607" pos:column="45">generic_stricmp</name><argument_list pos:line="1607" pos:column="60">(<argument><expr><name pos:line="1607" pos:column="61">moduleName</name></expr></argument>, <argument><expr><name><name pos:line="1607" pos:column="73">tbData</name><index pos:line="1607" pos:column="79">[<expr><name pos:line="1607" pos:column="80">j</name></expr>]</index></name><op:operator pos:line="1607" pos:column="82">-&gt;</op:operator><name pos:line="1607" pos:column="84">pszModuleName</name></expr></argument>)</argument_list></call> <op:operator pos:line="1607" pos:column="99">==</op:operator> <lit:literal type="number" pos:line="1607" pos:column="102">0</lit:literal></expr>)</condition><then pos:line="1607" pos:column="104">
					<block pos:line="1608" pos:column="41">{
						<if pos:line="1609" pos:column="49">if <condition pos:line="1609" pos:column="52">(<expr><op:operator pos:line="1609" pos:column="53">!</op:operator><name pos:line="1609" pos:column="54">windowName</name></expr>)</condition><then pos:line="1609" pos:column="65">
							<return pos:line="1610" pos:column="57">return <expr><op:operator pos:line="1610" pos:column="64">(</op:operator><name pos:line="1610" pos:column="65">LRESULT</name><op:operator pos:line="1610" pos:column="72">)</op:operator><name><name pos:line="1610" pos:column="73">tbData</name><index pos:line="1610" pos:column="79">[<expr><name pos:line="1610" pos:column="80">j</name></expr>]</index></name><op:operator pos:line="1610" pos:column="82">-&gt;</op:operator><name pos:line="1610" pos:column="84">hClient</name></expr>;</return></then>
						<else pos:line="1611" pos:column="49">else <if pos:line="1611" pos:column="54">if <condition pos:line="1611" pos:column="57">(<expr><call><name pos:line="1611" pos:column="58">generic_stricmp</name><argument_list pos:line="1611" pos:column="73">(<argument><expr><name pos:line="1611" pos:column="74">windowName</name></expr></argument>, <argument><expr><name><name pos:line="1611" pos:column="86">tbData</name><index pos:line="1611" pos:column="92">[<expr><name pos:line="1611" pos:column="93">j</name></expr>]</index></name><op:operator pos:line="1611" pos:column="95">-&gt;</op:operator><name pos:line="1611" pos:column="97">pszName</name></expr></argument>)</argument_list></call> <op:operator pos:line="1611" pos:column="106">==</op:operator> <lit:literal type="number" pos:line="1611" pos:column="109">0</lit:literal></expr>)</condition><then pos:line="1611" pos:column="111">
							<return pos:line="1612" pos:column="57">return <expr><op:operator pos:line="1612" pos:column="64">(</op:operator><name pos:line="1612" pos:column="65">LRESULT</name><op:operator pos:line="1612" pos:column="72">)</op:operator><name><name pos:line="1612" pos:column="73">tbData</name><index pos:line="1612" pos:column="79">[<expr><name pos:line="1612" pos:column="80">j</name></expr>]</index></name><op:operator pos:line="1612" pos:column="82">-&gt;</op:operator><name pos:line="1612" pos:column="84">hClient</name></expr>;</return></then></if></else></if>
					}</block></then></if>
				}</block></for>
			}</block></for>
			<return pos:line="1616" pos:column="25">return <expr><name pos:line="1616" pos:column="32">NULL</name></expr>;</return>
		}</block>

		</case><case pos:line="1619" pos:column="17">case <expr><name pos:line="1619" pos:column="22">NPPM_ADDTOOLBARICON</name></expr>:
		<block pos:line="1620" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1621" pos:column="25">_toolBar</name><op:operator pos:line="1621" pos:column="33">.</op:operator><name pos:line="1621" pos:column="34">registerDynBtn</name></name><argument_list pos:line="1621" pos:column="48">(<argument><expr><op:operator pos:line="1621" pos:column="49">(</op:operator><name pos:line="1621" pos:column="50">UINT</name><op:operator pos:line="1621" pos:column="54">)</op:operator><name pos:line="1621" pos:column="55">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="1621" pos:column="63">(</op:operator><name pos:line="1621" pos:column="64">toolbarIcons</name><op:operator pos:line="1621" pos:column="76">*</op:operator><op:operator pos:line="1621" pos:column="77">)</op:operator><name pos:line="1621" pos:column="78">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1622" pos:column="25">return <expr><name pos:line="1622" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1625" pos:column="17">case <expr><name pos:line="1625" pos:column="22">NPPM_SETMENUITEMCHECK</name></expr>:
		<block pos:line="1626" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="1627" pos:column="25">::</op:operator><name pos:line="1627" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1627" pos:column="40">(<argument><expr><name pos:line="1627" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><op:operator pos:line="1627" pos:column="58">(</op:operator><name pos:line="1627" pos:column="59">UINT</name><op:operator pos:line="1627" pos:column="63">)</op:operator><name pos:line="1627" pos:column="64">wParam</name></expr></argument>, <argument><expr><name pos:line="1627" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1627" pos:column="85">|</op:operator> <op:operator pos:line="1627" pos:column="87">(</op:operator><op:operator pos:line="1627" pos:column="88">(</op:operator><name pos:line="1627" pos:column="89">BOOL</name><op:operator pos:line="1627" pos:column="93">)</op:operator><name pos:line="1627" pos:column="94">lParam</name> <op:operator pos:line="1627" pos:column="101">?</op:operator> <name pos:line="1627" pos:column="103">MF_CHECKED</name> <op:operator pos:line="1627" pos:column="114">:</op:operator> <name pos:line="1627" pos:column="116">MF_UNCHECKED</name><op:operator pos:line="1627" pos:column="128">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1628" pos:column="25">_toolBar</name><op:operator pos:line="1628" pos:column="33">.</op:operator><name pos:line="1628" pos:column="34">setCheck</name></name><argument_list pos:line="1628" pos:column="42">(<argument><expr><op:operator pos:line="1628" pos:column="43">(</op:operator><name pos:line="1628" pos:column="44">int</name><op:operator pos:line="1628" pos:column="47">)</op:operator><name pos:line="1628" pos:column="48">wParam</name></expr></argument>, <argument><expr><call><name pos:line="1628" pos:column="56">bool</name><argument_list pos:line="1628" pos:column="60">(<argument><expr><name pos:line="1628" pos:column="61">lParam</name> <op:operator pos:line="1628" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="1628" pos:column="71">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1629" pos:column="25">return <expr><name pos:line="1629" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1632" pos:column="17">case <expr><name pos:line="1632" pos:column="22">NPPM_GETWINDOWSVERSION</name></expr>:
		<block pos:line="1633" pos:column="17">{
			<return pos:line="1634" pos:column="25">return <expr><op:operator pos:line="1634" pos:column="32">(</op:operator><call><name><name pos:line="1634" pos:column="33">NppParameters</name><op:operator pos:line="1634" pos:column="46">::</op:operator><name pos:line="1634" pos:column="48">getInstance</name></name><argument_list pos:line="1634" pos:column="59">()</argument_list></call><op:operator pos:line="1634" pos:column="61">)</op:operator><op:operator pos:line="1634" pos:column="62">-&gt;</op:operator><call><name pos:line="1634" pos:column="64">getWinVersion</name><argument_list pos:line="1634" pos:column="77">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1637" pos:column="17">case <expr><name pos:line="1637" pos:column="22">NPPM_MAKECURRENTBUFFERDIRTY</name></expr> :
		<block pos:line="1638" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1639" pos:column="25">_pEditView</name><op:operator pos:line="1639" pos:column="35">-&gt;</op:operator><name pos:line="1639" pos:column="37">getCurrentBuffer</name></name><argument_list pos:line="1639" pos:column="53">()</argument_list></call><op:operator pos:line="1639" pos:column="55">-&gt;</op:operator><call><name pos:line="1639" pos:column="57">setDirty</name><argument_list pos:line="1639" pos:column="65">(<argument><expr><lit:literal type="boolean" pos:line="1639" pos:column="66">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1640" pos:column="25">return <expr><name pos:line="1640" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1643" pos:column="17">case <expr><name pos:line="1643" pos:column="22">NPPM_GETENABLETHEMETEXTUREFUNC</name></expr> :
		<block pos:line="1644" pos:column="17">{
			<return pos:line="1645" pos:column="25">return <expr><op:operator pos:line="1645" pos:column="32">(</op:operator><name pos:line="1645" pos:column="33">LRESULT</name><op:operator pos:line="1645" pos:column="40">)</op:operator><call><name><name pos:line="1645" pos:column="41">pNppParam</name><op:operator pos:line="1645" pos:column="50">-&gt;</op:operator><name pos:line="1645" pos:column="52">getEnableThemeDlgTexture</name></name><argument_list pos:line="1645" pos:column="76">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1648" pos:column="17">case <expr><name pos:line="1648" pos:column="22">NPPM_GETPLUGINSCONFIGDIR</name></expr> :
		<block pos:line="1649" pos:column="17">{
			<if pos:line="1650" pos:column="25">if <condition pos:line="1650" pos:column="28">(<expr><op:operator pos:line="1650" pos:column="29">!</op:operator><name pos:line="1650" pos:column="30">lParam</name> <op:operator pos:line="1650" pos:column="37">||</op:operator> <op:operator pos:line="1650" pos:column="40">!</op:operator><name pos:line="1650" pos:column="41">wParam</name></expr>)</condition><then pos:line="1650" pos:column="48">
				<return pos:line="1651" pos:column="33">return <expr><name pos:line="1651" pos:column="40">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="1653" pos:column="25">generic_string</name></type> <name pos:line="1653" pos:column="40">pluginsConfigDirPrefix</name> <init pos:line="1653" pos:column="63">= <expr><call><name><name pos:line="1653" pos:column="65">pNppParam</name><op:operator pos:line="1653" pos:column="74">-&gt;</op:operator><name pos:line="1653" pos:column="76">getAppDataNppDir</name></name><argument_list pos:line="1653" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="1655" pos:column="25">if <condition pos:line="1655" pos:column="28">(<expr><name pos:line="1655" pos:column="29">pluginsConfigDirPrefix</name> <op:operator pos:line="1655" pos:column="52">==</op:operator> <call><name pos:line="1655" pos:column="55">TEXT</name><argument_list pos:line="1655" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1655" pos:column="60">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1655" pos:column="64">
				<expr_stmt><expr><name pos:line="1656" pos:column="33">pluginsConfigDirPrefix</name> <op:operator pos:line="1656" pos:column="56">=</op:operator> <call><name><name pos:line="1656" pos:column="58">pNppParam</name><op:operator pos:line="1656" pos:column="67">-&gt;</op:operator><name pos:line="1656" pos:column="69">getNppPath</name></name><argument_list pos:line="1656" pos:column="79">()</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><specifier pos:line="1658" pos:column="25">const</specifier> <name pos:line="1658" pos:column="31">TCHAR</name> <type:modifier pos:line="1658" pos:column="37">*</type:modifier></type><name pos:line="1658" pos:column="38">secondPart</name> <init pos:line="1658" pos:column="49">= <expr><call><name pos:line="1658" pos:column="51">TEXT</name><argument_list pos:line="1658" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1658" pos:column="56">"plugins\\Config"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="1660" pos:column="25">size_t</name></type> <name pos:line="1660" pos:column="32">len</name> <init pos:line="1660" pos:column="36">= <expr><name pos:line="1660" pos:column="38">wParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1661" pos:column="25">if <condition pos:line="1661" pos:column="28">(<expr><name pos:line="1661" pos:column="29">len</name> <op:operator pos:line="1661" pos:column="33">&lt;</op:operator> <call><name><name pos:line="1661" pos:column="35">pluginsConfigDirPrefix</name><op:operator pos:line="1661" pos:column="57">.</op:operator><name pos:line="1661" pos:column="58">length</name></name><argument_list pos:line="1661" pos:column="64">()</argument_list></call> <op:operator pos:line="1661" pos:column="67">+</op:operator> <call><name pos:line="1661" pos:column="69">lstrlen</name><argument_list pos:line="1661" pos:column="76">(<argument><expr><name pos:line="1661" pos:column="77">secondPart</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1661" pos:column="89">
				<return pos:line="1662" pos:column="33">return <expr><name pos:line="1662" pos:column="40">FALSE</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="1664" pos:column="25">TCHAR</name> <type:modifier pos:line="1664" pos:column="31">*</type:modifier></type><name pos:line="1664" pos:column="32">pluginsConfigDir</name> <init pos:line="1664" pos:column="49">= <expr><op:operator pos:line="1664" pos:column="51">(</op:operator><name pos:line="1664" pos:column="52">TCHAR</name> <op:operator pos:line="1664" pos:column="58">*</op:operator><op:operator pos:line="1664" pos:column="59">)</op:operator><name pos:line="1664" pos:column="60">lParam</name></expr></init></decl>;</decl_stmt>			
			<expr_stmt><expr><call><name pos:line="1665" pos:column="25">lstrcpy</name><argument_list pos:line="1665" pos:column="32">(<argument><expr><name pos:line="1665" pos:column="33">pluginsConfigDir</name></expr></argument>, <argument><expr><call><name><name pos:line="1665" pos:column="51">pluginsConfigDirPrefix</name><op:operator pos:line="1665" pos:column="73">.</op:operator><name pos:line="1665" pos:column="74">c_str</name></name><argument_list pos:line="1665" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="1667" pos:column="25">::</op:operator><name pos:line="1667" pos:column="27">PathAppend</name></name><argument_list pos:line="1667" pos:column="37">(<argument><expr><name pos:line="1667" pos:column="38">pluginsConfigDir</name></expr></argument>, <argument><expr><name pos:line="1667" pos:column="56">secondPart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1668" pos:column="25">return <expr><name pos:line="1668" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1671" pos:column="17">case <expr><name pos:line="1671" pos:column="22">NPPM_MSGTOPLUGIN</name></expr> :
		<block pos:line="1672" pos:column="17">{
			<return pos:line="1673" pos:column="25">return <expr><call><name><name pos:line="1673" pos:column="32">_pluginsManager</name><op:operator pos:line="1673" pos:column="47">.</op:operator><name pos:line="1673" pos:column="48">relayPluginMessages</name></name><argument_list pos:line="1673" pos:column="67">(<argument><expr><name pos:line="1673" pos:column="68">Message</name></expr></argument>, <argument><expr><name pos:line="1673" pos:column="77">wParam</name></expr></argument>, <argument><expr><name pos:line="1673" pos:column="85">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1676" pos:column="17">case <expr><name pos:line="1676" pos:column="22">NPPM_ALLOCATESUPPORTED</name></expr>:
			<return pos:line="1677" pos:column="25">return <expr><name pos:line="1677" pos:column="32">TRUE</name></expr>;</return>

		</case><case pos:line="1679" pos:column="17">case <expr><name pos:line="1679" pos:column="22">NPPM_ALLOCATECMDID</name></expr>:
			<return pos:line="1680" pos:column="25">return <expr><call><name><name pos:line="1680" pos:column="32">_pluginsManager</name><op:operator pos:line="1680" pos:column="47">.</op:operator><name pos:line="1680" pos:column="48">allocateCmdID</name></name><argument_list pos:line="1680" pos:column="61">(<argument><expr><name pos:line="1680" pos:column="62">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="1680" pos:column="70">reinterpret_cast</name><argument_list pos:line="1680" pos:column="86">&lt;<argument><expr><name pos:line="1680" pos:column="87">int</name> <op:operator pos:line="1680" pos:column="91">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1680" pos:column="93">(<argument><expr><name pos:line="1680" pos:column="94">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="1682" pos:column="17">case <expr><name pos:line="1682" pos:column="22">NPPM_ALLOCATEMARKER</name></expr>:
			<return pos:line="1683" pos:column="25">return <expr><call><name><name pos:line="1683" pos:column="32">_pluginsManager</name><op:operator pos:line="1683" pos:column="47">.</op:operator><name pos:line="1683" pos:column="48">allocateMarker</name></name><argument_list pos:line="1683" pos:column="62">(<argument><expr><name pos:line="1683" pos:column="63">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="1683" pos:column="71">reinterpret_cast</name><argument_list pos:line="1683" pos:column="87">&lt;<argument><expr><name pos:line="1683" pos:column="88">int</name> <op:operator pos:line="1683" pos:column="92">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="1683" pos:column="94">(<argument><expr><name pos:line="1683" pos:column="95">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="1685" pos:column="17">case <expr><name pos:line="1685" pos:column="22">NPPM_HIDETABBAR</name></expr> :
		<block pos:line="1686" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1687" pos:column="25">bool</name></type> <name pos:line="1687" pos:column="30">hide</name> <init pos:line="1687" pos:column="35">= <expr><op:operator pos:line="1687" pos:column="37">(</op:operator><name pos:line="1687" pos:column="38">lParam</name> <op:operator pos:line="1687" pos:column="45">!=</op:operator> <lit:literal type="number" pos:line="1687" pos:column="48">0</lit:literal><op:operator pos:line="1687" pos:column="49">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1688" pos:column="25">bool</name></type> <name pos:line="1688" pos:column="30">oldVal</name> <init pos:line="1688" pos:column="37">= <expr><call><name><name pos:line="1688" pos:column="39">DocTabView</name><op:operator pos:line="1688" pos:column="49">::</op:operator><name pos:line="1688" pos:column="51">getHideTabBarStatus</name></name><argument_list pos:line="1688" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1689" pos:column="25">if <condition pos:line="1689" pos:column="28">(<expr><name pos:line="1689" pos:column="29">hide</name> <op:operator pos:line="1689" pos:column="34">==</op:operator> <name pos:line="1689" pos:column="37">oldVal</name></expr>)</condition><then pos:line="1689" pos:column="44"> <return pos:line="1689" pos:column="45">return <expr><name pos:line="1689" pos:column="52">oldVal</name></expr>;</return></then></if>

			<expr_stmt><expr><call><name><name pos:line="1691" pos:column="25">DocTabView</name><op:operator pos:line="1691" pos:column="35">::</op:operator><name pos:line="1691" pos:column="37">setHideTabBarStatus</name></name><argument_list pos:line="1691" pos:column="56">(<argument><expr><name pos:line="1691" pos:column="57">hide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1692" pos:column="25">::</op:operator><name pos:line="1692" pos:column="27">SendMessage</name></name><argument_list pos:line="1692" pos:column="38">(<argument><expr><call><name><name pos:line="1692" pos:column="39">_pPublicInterface</name><op:operator pos:line="1692" pos:column="56">-&gt;</op:operator><name pos:line="1692" pos:column="58">getHSelf</name></name><argument_list pos:line="1692" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1692" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1692" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1692" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="1694" pos:column="25">NppGUI</name> <type:modifier pos:line="1694" pos:column="32">&amp;</type:modifier></type> <name pos:line="1694" pos:column="34">nppGUI</name> <init pos:line="1694" pos:column="41">= <expr><op:operator pos:line="1694" pos:column="43">(</op:operator><name pos:line="1694" pos:column="44">NppGUI</name> <op:operator pos:line="1694" pos:column="51">&amp;</op:operator><op:operator pos:line="1694" pos:column="52">)</op:operator><op:operator pos:line="1694" pos:column="53">(</op:operator><op:operator pos:line="1694" pos:column="54">(</op:operator><call><name><name pos:line="1694" pos:column="55">NppParameters</name><op:operator pos:line="1694" pos:column="68">::</op:operator><name pos:line="1694" pos:column="70">getInstance</name></name><argument_list pos:line="1694" pos:column="81">()</argument_list></call><op:operator pos:line="1694" pos:column="83">)</op:operator><op:operator pos:line="1694" pos:column="84">-&gt;</op:operator><call><name pos:line="1694" pos:column="86">getNppGUI</name><argument_list pos:line="1694" pos:column="95">()</argument_list></call><op:operator pos:line="1694" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="1695" pos:column="25">if <condition pos:line="1695" pos:column="28">(<expr><name pos:line="1695" pos:column="29">hide</name></expr>)</condition><then pos:line="1695" pos:column="34">
				<expr_stmt><expr><name><name pos:line="1696" pos:column="33">nppGUI</name><op:operator pos:line="1696" pos:column="39">.</op:operator><name pos:line="1696" pos:column="40">_tabStatus</name></name> <op:operator pos:line="1696" pos:column="51">|=</op:operator> <name pos:line="1696" pos:column="54">TAB_HIDE</name></expr>;</expr_stmt></then>
			<else pos:line="1697" pos:column="25">else
				<expr_stmt><expr><name><name pos:line="1698" pos:column="33">nppGUI</name><op:operator pos:line="1698" pos:column="39">.</op:operator><name pos:line="1698" pos:column="40">_tabStatus</name></name> <op:operator pos:line="1698" pos:column="51">&amp;=</op:operator> <op:operator pos:line="1698" pos:column="54">~</op:operator><name pos:line="1698" pos:column="55">TAB_HIDE</name></expr>;</expr_stmt></else></if>

			<return pos:line="1700" pos:column="25">return <expr><name pos:line="1700" pos:column="32">oldVal</name></expr>;</return>
		}</block>
		</case><case pos:line="1702" pos:column="17">case <expr><name pos:line="1702" pos:column="22">NPPM_ISTABBARHIDDEN</name></expr> :
		<block pos:line="1703" pos:column="17">{
			<return pos:line="1704" pos:column="25">return <expr><call><name><name pos:line="1704" pos:column="32">_mainDocTab</name><op:operator pos:line="1704" pos:column="43">.</op:operator><name pos:line="1704" pos:column="44">getHideTabBarStatus</name></name><argument_list pos:line="1704" pos:column="63">()</argument_list></call></expr>;</return>
		}</block>


		</case><case pos:line="1708" pos:column="17">case <expr><name pos:line="1708" pos:column="22">NPPM_HIDETOOLBAR</name></expr> :
		<block pos:line="1709" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1710" pos:column="25">bool</name></type> <name pos:line="1710" pos:column="30">show</name> <init pos:line="1710" pos:column="35">= <expr><op:operator pos:line="1710" pos:column="37">(</op:operator><name pos:line="1710" pos:column="38">lParam</name> <op:operator pos:line="1710" pos:column="45">!=</op:operator> <name pos:line="1710" pos:column="48">TRUE</name><op:operator pos:line="1710" pos:column="52">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1711" pos:column="25">bool</name></type> <name pos:line="1711" pos:column="30">currentStatus</name> <init pos:line="1711" pos:column="44">= <expr><call><name><name pos:line="1711" pos:column="46">_rebarTop</name><op:operator pos:line="1711" pos:column="55">.</op:operator><name pos:line="1711" pos:column="56">getIDVisible</name></name><argument_list pos:line="1711" pos:column="68">(<argument><expr><name pos:line="1711" pos:column="69">REBAR_BAR_TOOLBAR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1712" pos:column="25">if <condition pos:line="1712" pos:column="28">(<expr><name pos:line="1712" pos:column="29">show</name> <op:operator pos:line="1712" pos:column="34">!=</op:operator> <name pos:line="1712" pos:column="37">currentStatus</name></expr>)</condition><then pos:line="1712" pos:column="51">
				<expr_stmt><expr><call><name><name pos:line="1713" pos:column="33">_rebarTop</name><op:operator pos:line="1713" pos:column="42">.</op:operator><name pos:line="1713" pos:column="43">setIDVisible</name></name><argument_list pos:line="1713" pos:column="55">(<argument><expr><name pos:line="1713" pos:column="56">REBAR_BAR_TOOLBAR</name></expr></argument>, <argument><expr><name pos:line="1713" pos:column="75">show</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="1714" pos:column="25">return <expr><name pos:line="1714" pos:column="32">currentStatus</name></expr>;</return>
		}</block>
		</case><case pos:line="1716" pos:column="17">case <expr><name pos:line="1716" pos:column="22">NPPM_ISTOOLBARHIDDEN</name></expr> :
		<block pos:line="1717" pos:column="17">{
			<return pos:line="1718" pos:column="25">return <expr><op:operator pos:line="1718" pos:column="32">!</op:operator><call><name><name pos:line="1718" pos:column="33">_rebarTop</name><op:operator pos:line="1718" pos:column="42">.</op:operator><name pos:line="1718" pos:column="43">getIDVisible</name></name><argument_list pos:line="1718" pos:column="55">(<argument><expr><name pos:line="1718" pos:column="56">REBAR_BAR_TOOLBAR</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1721" pos:column="17">case <expr><name pos:line="1721" pos:column="22">NPPM_HIDEMENU</name></expr> :
		<block pos:line="1722" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1723" pos:column="25">bool</name></type> <name pos:line="1723" pos:column="30">hide</name> <init pos:line="1723" pos:column="35">= <expr><op:operator pos:line="1723" pos:column="37">(</op:operator><name pos:line="1723" pos:column="38">lParam</name> <op:operator pos:line="1723" pos:column="45">==</op:operator> <name pos:line="1723" pos:column="48">TRUE</name><op:operator pos:line="1723" pos:column="52">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1724" pos:column="25">bool</name></type> <name pos:line="1724" pos:column="30">isHidden</name> <init pos:line="1724" pos:column="39">= <expr><call><name><op:operator pos:line="1724" pos:column="41">::</op:operator><name pos:line="1724" pos:column="43">GetMenu</name></name><argument_list pos:line="1724" pos:column="50">(<argument><expr><call><name><name pos:line="1724" pos:column="51">_pPublicInterface</name><op:operator pos:line="1724" pos:column="68">-&gt;</op:operator><name pos:line="1724" pos:column="70">getHSelf</name></name><argument_list pos:line="1724" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1724" pos:column="82">==</op:operator> <name pos:line="1724" pos:column="85">NULL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1725" pos:column="25">if <condition pos:line="1725" pos:column="28">(<expr><name pos:line="1725" pos:column="29">hide</name> <op:operator pos:line="1725" pos:column="34">==</op:operator> <name pos:line="1725" pos:column="37">isHidden</name></expr>)</condition><then pos:line="1725" pos:column="46">
				<return pos:line="1726" pos:column="33">return <expr><name pos:line="1726" pos:column="40">isHidden</name></expr>;</return></then></if>

			<decl_stmt><decl><type><name pos:line="1728" pos:column="25">NppGUI</name> <type:modifier pos:line="1728" pos:column="32">&amp;</type:modifier></type> <name pos:line="1728" pos:column="34">nppGUI</name> <init pos:line="1728" pos:column="41">= <expr><op:operator pos:line="1728" pos:column="43">(</op:operator><name pos:line="1728" pos:column="44">NppGUI</name> <op:operator pos:line="1728" pos:column="51">&amp;</op:operator><op:operator pos:line="1728" pos:column="52">)</op:operator><call><name><name pos:line="1728" pos:column="53">pNppParam</name><op:operator pos:line="1728" pos:column="62">-&gt;</op:operator><name pos:line="1728" pos:column="64">getNppGUI</name></name><argument_list pos:line="1728" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1729" pos:column="25">nppGUI</name><op:operator pos:line="1729" pos:column="31">.</op:operator><name pos:line="1729" pos:column="32">_menuBarShow</name></name> <op:operator pos:line="1729" pos:column="45">=</op:operator> <op:operator pos:line="1729" pos:column="47">!</op:operator><name pos:line="1729" pos:column="48">hide</name></expr>;</expr_stmt>
			<if pos:line="1730" pos:column="25">if <condition pos:line="1730" pos:column="28">(<expr><name><name pos:line="1730" pos:column="29">nppGUI</name><op:operator pos:line="1730" pos:column="35">.</op:operator><name pos:line="1730" pos:column="36">_menuBarShow</name></name></expr>)</condition><then pos:line="1730" pos:column="49">
				<expr_stmt><expr><call><name><op:operator pos:line="1731" pos:column="33">::</op:operator><name pos:line="1731" pos:column="35">SetMenu</name></name><argument_list pos:line="1731" pos:column="42">(<argument><expr><call><name><name pos:line="1731" pos:column="43">_pPublicInterface</name><op:operator pos:line="1731" pos:column="60">-&gt;</op:operator><name pos:line="1731" pos:column="62">getHSelf</name></name><argument_list pos:line="1731" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1731" pos:column="74">_mainMenuHandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="1732" pos:column="25">else
				<expr_stmt><expr><call><name><op:operator pos:line="1733" pos:column="33">::</op:operator><name pos:line="1733" pos:column="35">SetMenu</name></name><argument_list pos:line="1733" pos:column="42">(<argument><expr><call><name><name pos:line="1733" pos:column="43">_pPublicInterface</name><op:operator pos:line="1733" pos:column="60">-&gt;</op:operator><name pos:line="1733" pos:column="62">getHSelf</name></name><argument_list pos:line="1733" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1733" pos:column="74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

			<return pos:line="1735" pos:column="25">return <expr><name pos:line="1735" pos:column="32">isHidden</name></expr>;</return>
		}</block>
		</case><case pos:line="1737" pos:column="17">case <expr><name pos:line="1737" pos:column="22">NPPM_ISMENUHIDDEN</name></expr> :
		<block pos:line="1738" pos:column="17">{
			<return pos:line="1739" pos:column="25">return <expr><op:operator pos:line="1739" pos:column="32">(</op:operator><call><name><op:operator pos:line="1739" pos:column="33">::</op:operator><name pos:line="1739" pos:column="35">GetMenu</name></name><argument_list pos:line="1739" pos:column="42">(<argument><expr><call><name><name pos:line="1739" pos:column="43">_pPublicInterface</name><op:operator pos:line="1739" pos:column="60">-&gt;</op:operator><name pos:line="1739" pos:column="62">getHSelf</name></name><argument_list pos:line="1739" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1739" pos:column="74">==</op:operator> <name pos:line="1739" pos:column="77">NULL</name><op:operator pos:line="1739" pos:column="81">)</op:operator></expr>;</return>
		}</block>

		</case><case pos:line="1742" pos:column="17">case <expr><name pos:line="1742" pos:column="22">NPPM_HIDESTATUSBAR</name></expr>:
		<block pos:line="1743" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1744" pos:column="25">bool</name></type> <name pos:line="1744" pos:column="30">show</name> <init pos:line="1744" pos:column="35">= <expr><op:operator pos:line="1744" pos:column="37">(</op:operator><name pos:line="1744" pos:column="38">lParam</name> <op:operator pos:line="1744" pos:column="45">!=</op:operator> <name pos:line="1744" pos:column="48">TRUE</name><op:operator pos:line="1744" pos:column="52">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1745" pos:column="25">NppGUI</name> <type:modifier pos:line="1745" pos:column="32">&amp;</type:modifier></type> <name pos:line="1745" pos:column="34">nppGUI</name> <init pos:line="1745" pos:column="41">= <expr><op:operator pos:line="1745" pos:column="43">(</op:operator><name pos:line="1745" pos:column="44">NppGUI</name> <op:operator pos:line="1745" pos:column="51">&amp;</op:operator><op:operator pos:line="1745" pos:column="52">)</op:operator><call><name><name pos:line="1745" pos:column="53">pNppParam</name><op:operator pos:line="1745" pos:column="62">-&gt;</op:operator><name pos:line="1745" pos:column="64">getNppGUI</name></name><argument_list pos:line="1745" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1746" pos:column="25">bool</name></type> <name pos:line="1746" pos:column="30">oldVal</name> <init pos:line="1746" pos:column="37">= <expr><name><name pos:line="1746" pos:column="39">nppGUI</name><op:operator pos:line="1746" pos:column="45">.</op:operator><name pos:line="1746" pos:column="46">_statusBarShow</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="1747" pos:column="25">if <condition pos:line="1747" pos:column="28">(<expr><name pos:line="1747" pos:column="29">show</name> <op:operator pos:line="1747" pos:column="34">==</op:operator> <name pos:line="1747" pos:column="37">oldVal</name></expr>)</condition><then pos:line="1747" pos:column="44">
			<block pos:line="1748" pos:column="25">{
				<return pos:line="1749" pos:column="33">return <expr><name pos:line="1749" pos:column="40">oldVal</name></expr>;</return>
			}</block></then></if>
            <decl_stmt><decl><type><name pos:line="1751" pos:column="13">RECT</name></type> <name pos:line="1751" pos:column="18">rc</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1752" pos:column="25">_pPublicInterface</name><op:operator pos:line="1752" pos:column="42">-&gt;</op:operator><name pos:line="1752" pos:column="44">getClientRect</name></name><argument_list pos:line="1752" pos:column="57">(<argument><expr><name pos:line="1752" pos:column="58">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><name><name pos:line="1754" pos:column="25">nppGUI</name><op:operator pos:line="1754" pos:column="31">.</op:operator><name pos:line="1754" pos:column="32">_statusBarShow</name></name> <op:operator pos:line="1754" pos:column="47">=</op:operator> <name pos:line="1754" pos:column="49">show</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1755" pos:column="25">_statusBar</name><op:operator pos:line="1755" pos:column="35">.</op:operator><name pos:line="1755" pos:column="36">display</name></name><argument_list pos:line="1755" pos:column="43">(<argument><expr><name><name pos:line="1755" pos:column="44">nppGUI</name><op:operator pos:line="1755" pos:column="50">.</op:operator><name pos:line="1755" pos:column="51">_statusBarShow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="1756" pos:column="13">::</op:operator><name pos:line="1756" pos:column="15">SendMessage</name></name><argument_list pos:line="1756" pos:column="26">(<argument><expr><call><name><name pos:line="1756" pos:column="27">_pPublicInterface</name><op:operator pos:line="1756" pos:column="44">-&gt;</op:operator><name pos:line="1756" pos:column="46">getHSelf</name></name><argument_list pos:line="1756" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1756" pos:column="58">WM_SIZE</name></expr></argument>, <argument><expr><name pos:line="1756" pos:column="67">SIZE_RESTORED</name></expr></argument>, <argument><expr><call><name pos:line="1756" pos:column="82">MAKELONG</name><argument_list pos:line="1756" pos:column="90">(<argument><expr><name><name pos:line="1756" pos:column="91">rc</name><op:operator pos:line="1756" pos:column="93">.</op:operator><name pos:line="1756" pos:column="94">bottom</name></name></expr></argument>, <argument><expr><name><name pos:line="1756" pos:column="102">rc</name><op:operator pos:line="1756" pos:column="104">.</op:operator><name pos:line="1756" pos:column="105">right</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="1757" pos:column="13">return <expr><name pos:line="1757" pos:column="20">oldVal</name></expr>;</return>
        }</block>

		</case><case pos:line="1760" pos:column="17">case <expr><name pos:line="1760" pos:column="22">NPPM_ISSTATUSBARHIDDEN</name></expr> :
		<block pos:line="1761" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1762" pos:column="25">NppGUI</name> <type:modifier pos:line="1762" pos:column="32">&amp;</type:modifier></type> <name pos:line="1762" pos:column="34">nppGUI</name> <init pos:line="1762" pos:column="41">= <expr><op:operator pos:line="1762" pos:column="43">(</op:operator><name pos:line="1762" pos:column="44">NppGUI</name> <op:operator pos:line="1762" pos:column="51">&amp;</op:operator><op:operator pos:line="1762" pos:column="52">)</op:operator><call><name><name pos:line="1762" pos:column="53">pNppParam</name><op:operator pos:line="1762" pos:column="62">-&gt;</op:operator><name pos:line="1762" pos:column="64">getNppGUI</name></name><argument_list pos:line="1762" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="1763" pos:column="25">return <expr><op:operator pos:line="1763" pos:column="32">!</op:operator><name><name pos:line="1763" pos:column="33">nppGUI</name><op:operator pos:line="1763" pos:column="39">.</op:operator><name pos:line="1763" pos:column="40">_statusBarShow</name></name></expr>;</return>
		}</block>

<comment type="block" pos:line="1766" pos:column="1">/*
		case NPPM_ADDREBAR :
		{
			if (!lParam)
				return FALSE;
			_rebarTop.addBand((REBARBANDINFO*)lParam, false);
			return TRUE;
		}

		case NPPM_UPDATEREBAR :
		{
			if (!lParam || wParam &lt; REBAR_BAR_EXTERNAL)
				return FALSE;
			_rebarTop.reNew((int)wParam, (REBARBANDINFO*)lParam);
			return TRUE;
		}

		case NPPM_REMOVEREBAR :
		{
			if (wParam &lt; REBAR_BAR_EXTERNAL)
				return FALSE;
			_rebarTop.removeBand((int)wParam);
			return TRUE;
		}
*/</comment>
		</case><case pos:line="1791" pos:column="17">case <expr><name pos:line="1791" pos:column="22">NPPM_INTERNAL_ISFOCUSEDTAB</name></expr> :
		<block pos:line="1792" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1793" pos:column="25">HWND</name></type> <name pos:line="1793" pos:column="30">hTabToTest</name> <init pos:line="1793" pos:column="41">= <expr><op:operator pos:line="1793" pos:column="43">(</op:operator><call><name pos:line="1793" pos:column="44">currentView</name><argument_list pos:line="1793" pos:column="55">()</argument_list></call> <op:operator pos:line="1793" pos:column="58">==</op:operator> <name pos:line="1793" pos:column="61">MAIN_VIEW</name><op:operator pos:line="1793" pos:column="70">)</op:operator><op:operator pos:line="1793" pos:column="71">?</op:operator><call><name><name pos:line="1793" pos:column="72">_mainDocTab</name><op:operator pos:line="1793" pos:column="83">.</op:operator><name pos:line="1793" pos:column="84">getHSelf</name></name><argument_list pos:line="1793" pos:column="92">()</argument_list></call><op:operator pos:line="1793" pos:column="94">:</op:operator><call><name><name pos:line="1793" pos:column="95">_subDocTab</name><op:operator pos:line="1793" pos:column="105">.</op:operator><name pos:line="1793" pos:column="106">getHSelf</name></name><argument_list pos:line="1793" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="1794" pos:column="25">return <expr><op:operator pos:line="1794" pos:column="32">(</op:operator><name pos:line="1794" pos:column="33">HWND</name><op:operator pos:line="1794" pos:column="37">)</op:operator><name pos:line="1794" pos:column="38">lParam</name> <op:operator pos:line="1794" pos:column="45">==</op:operator> <name pos:line="1794" pos:column="48">hTabToTest</name></expr>;</return>
		}</block>

		</case><case pos:line="1797" pos:column="17">case <expr><name pos:line="1797" pos:column="22">NPPM_INTERNAL_GETMENU</name></expr> :
		<block pos:line="1798" pos:column="17">{
			<return pos:line="1799" pos:column="25">return <expr><op:operator pos:line="1799" pos:column="32">(</op:operator><name pos:line="1799" pos:column="33">LRESULT</name><op:operator pos:line="1799" pos:column="40">)</op:operator><name pos:line="1799" pos:column="41">_mainMenuHandle</name></expr>;</return>
		}</block>
	
		</case><case pos:line="1802" pos:column="17">case <expr><name pos:line="1802" pos:column="22">NPPM_INTERNAL_CLEARINDICATOR</name></expr> :
		<block pos:line="1803" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1804" pos:column="25">_pEditView</name><op:operator pos:line="1804" pos:column="35">-&gt;</op:operator><name pos:line="1804" pos:column="37">clearIndicator</name></name><argument_list pos:line="1804" pos:column="51">(<argument><expr><name pos:line="1804" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_SMART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1805" pos:column="25">return <expr><name pos:line="1805" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="1807" pos:column="17">case <expr><name pos:line="1807" pos:column="22">NPPM_INTERNAL_CLEARINDICATORTAGMATCH</name></expr> :
		<block pos:line="1808" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1809" pos:column="25">_pEditView</name><op:operator pos:line="1809" pos:column="35">-&gt;</op:operator><name pos:line="1809" pos:column="37">clearIndicator</name></name><argument_list pos:line="1809" pos:column="51">(<argument><expr><name pos:line="1809" pos:column="52">SCE_UNIVERSAL_TAGMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1810" pos:column="25">_pEditView</name><op:operator pos:line="1810" pos:column="35">-&gt;</op:operator><name pos:line="1810" pos:column="37">clearIndicator</name></name><argument_list pos:line="1810" pos:column="51">(<argument><expr><name pos:line="1810" pos:column="52">SCE_UNIVERSAL_TAGATTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1811" pos:column="25">return <expr><name pos:line="1811" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="1813" pos:column="17">case <expr><name pos:line="1813" pos:column="22">NPPM_INTERNAL_CLEARINDICATORTAGATTR</name></expr> :
		<block pos:line="1814" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1815" pos:column="25">_pEditView</name><op:operator pos:line="1815" pos:column="35">-&gt;</op:operator><name pos:line="1815" pos:column="37">clearIndicator</name></name><argument_list pos:line="1815" pos:column="51">(<argument><expr><name pos:line="1815" pos:column="52">SCE_UNIVERSAL_TAGATTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1816" pos:column="25">return <expr><name pos:line="1816" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1819" pos:column="17">case <expr><name pos:line="1819" pos:column="22">NPPM_INTERNAL_SWITCHVIEWFROMHWND</name></expr> :
		<block pos:line="1820" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1821" pos:column="25">HWND</name></type> <name pos:line="1821" pos:column="30">handle</name> <init pos:line="1821" pos:column="37">= <expr><op:operator pos:line="1821" pos:column="39">(</op:operator><name pos:line="1821" pos:column="40">HWND</name><op:operator pos:line="1821" pos:column="44">)</op:operator><name pos:line="1821" pos:column="45">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1822" pos:column="25">if <condition pos:line="1822" pos:column="28">(<expr><call><name><name pos:line="1822" pos:column="29">_mainEditView</name><op:operator pos:line="1822" pos:column="42">.</op:operator><name pos:line="1822" pos:column="43">getHSelf</name></name><argument_list pos:line="1822" pos:column="51">()</argument_list></call> <op:operator pos:line="1822" pos:column="54">==</op:operator> <name pos:line="1822" pos:column="57">handle</name> <op:operator pos:line="1822" pos:column="64">||</op:operator> <call><name><name pos:line="1822" pos:column="67">_mainDocTab</name><op:operator pos:line="1822" pos:column="78">.</op:operator><name pos:line="1822" pos:column="79">getHSelf</name></name><argument_list pos:line="1822" pos:column="87">()</argument_list></call> <op:operator pos:line="1822" pos:column="90">==</op:operator> <name pos:line="1822" pos:column="93">handle</name></expr>)</condition><then pos:line="1822" pos:column="100">
			<block pos:line="1823" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1824" pos:column="33">switchEditViewTo</name><argument_list pos:line="1824" pos:column="49">(<argument><expr><name pos:line="1824" pos:column="50">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1826" pos:column="25">else <if pos:line="1826" pos:column="30">if <condition pos:line="1826" pos:column="33">(<expr><call><name><name pos:line="1826" pos:column="34">_subEditView</name><op:operator pos:line="1826" pos:column="46">.</op:operator><name pos:line="1826" pos:column="47">getHSelf</name></name><argument_list pos:line="1826" pos:column="55">()</argument_list></call> <op:operator pos:line="1826" pos:column="58">==</op:operator> <name pos:line="1826" pos:column="61">handle</name> <op:operator pos:line="1826" pos:column="68">||</op:operator> <call><name><name pos:line="1826" pos:column="71">_subDocTab</name><op:operator pos:line="1826" pos:column="81">.</op:operator><name pos:line="1826" pos:column="82">getHSelf</name></name><argument_list pos:line="1826" pos:column="90">()</argument_list></call> <op:operator pos:line="1826" pos:column="93">==</op:operator> <name pos:line="1826" pos:column="96">handle</name></expr>)</condition><then pos:line="1826" pos:column="103">
			<block pos:line="1827" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1828" pos:column="33">switchEditViewTo</name><argument_list pos:line="1828" pos:column="49">(<argument><expr><name pos:line="1828" pos:column="50">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
			<return pos:line="1830" pos:column="25">return <expr><name pos:line="1830" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1833" pos:column="17">case <expr><name pos:line="1833" pos:column="22">NPPM_INTERNAL_UPDATETITLEBAR</name></expr> :
		<block pos:line="1834" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1835" pos:column="25">setTitle</name><argument_list pos:line="1835" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1836" pos:column="25">return <expr><name pos:line="1836" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1839" pos:column="17">case <expr><name pos:line="1839" pos:column="22">NPPM_INTERNAL_DISABLEAUTOUPDATE</name></expr> :
		<block pos:line="1840" pos:column="17">{
			<comment type="line" pos:line="1841" pos:column="25">//printStr(TEXT("you've got me"));</comment>
			<decl_stmt><decl><type><name pos:line="1842" pos:column="25">NppGUI</name> <type:modifier pos:line="1842" pos:column="32">&amp;</type:modifier></type> <name pos:line="1842" pos:column="34">nppGUI</name> <init pos:line="1842" pos:column="41">= <expr><op:operator pos:line="1842" pos:column="43">(</op:operator><name pos:line="1842" pos:column="44">NppGUI</name> <op:operator pos:line="1842" pos:column="51">&amp;</op:operator><op:operator pos:line="1842" pos:column="52">)</op:operator><call><name><name pos:line="1842" pos:column="53">pNppParam</name><op:operator pos:line="1842" pos:column="62">-&gt;</op:operator><name pos:line="1842" pos:column="64">getNppGUI</name></name><argument_list pos:line="1842" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1843" pos:column="25">nppGUI</name><op:operator pos:line="1843" pos:column="31">.</op:operator><name pos:line="1843" pos:column="32">_autoUpdateOpt</name><op:operator pos:line="1843" pos:column="46">.</op:operator><name pos:line="1843" pos:column="47">_doAutoUpdate</name></name> <op:operator pos:line="1843" pos:column="61">=</op:operator> <lit:literal type="boolean" pos:line="1843" pos:column="63">false</lit:literal></expr>;</expr_stmt>
			<return pos:line="1844" pos:column="25">return <expr><name pos:line="1844" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		
		</case><case pos:line="1847" pos:column="17">case <expr><name pos:line="1847" pos:column="22">NPPM_GETLANGUAGENAME</name></expr>:
		<block pos:line="1848" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1849" pos:column="25">generic_string</name></type> <name pos:line="1849" pos:column="40">langName</name> <init pos:line="1849" pos:column="49">= <expr><call><name pos:line="1849" pos:column="51">getLangDesc</name><argument_list pos:line="1849" pos:column="62">(<argument><expr><op:operator pos:line="1849" pos:column="63">(</op:operator><name pos:line="1849" pos:column="64">LangType</name><op:operator pos:line="1849" pos:column="72">)</op:operator><name pos:line="1849" pos:column="73">wParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1849" pos:column="81">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1850" pos:column="25">if <condition pos:line="1850" pos:column="28">(<expr><name pos:line="1850" pos:column="29">lParam</name></expr>)</condition><then pos:line="1850" pos:column="36">
				<expr_stmt><expr><call><name pos:line="1851" pos:column="33">lstrcpy</name><argument_list pos:line="1851" pos:column="40">(<argument><expr><op:operator pos:line="1851" pos:column="41">(</op:operator><name pos:line="1851" pos:column="42">LPTSTR</name><op:operator pos:line="1851" pos:column="48">)</op:operator><name pos:line="1851" pos:column="49">lParam</name></expr></argument>, <argument><expr><call><name><name pos:line="1851" pos:column="57">langName</name><op:operator pos:line="1851" pos:column="65">.</op:operator><name pos:line="1851" pos:column="66">c_str</name></name><argument_list pos:line="1851" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="1852" pos:column="25">return <expr><call><name><name pos:line="1852" pos:column="32">langName</name><op:operator pos:line="1852" pos:column="40">.</op:operator><name pos:line="1852" pos:column="41">length</name></name><argument_list pos:line="1852" pos:column="47">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1855" pos:column="17">case <expr><name pos:line="1855" pos:column="22">NPPM_GETLANGUAGEDESC</name></expr>:
		<block pos:line="1856" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1857" pos:column="25">generic_string</name></type> <name pos:line="1857" pos:column="40">langDesc</name> <init pos:line="1857" pos:column="49">= <expr><call><name pos:line="1857" pos:column="51">getLangDesc</name><argument_list pos:line="1857" pos:column="62">(<argument><expr><op:operator pos:line="1857" pos:column="63">(</op:operator><name pos:line="1857" pos:column="64">LangType</name><op:operator pos:line="1857" pos:column="72">)</op:operator><name pos:line="1857" pos:column="73">wParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1857" pos:column="81">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1858" pos:column="25">if <condition pos:line="1858" pos:column="28">(<expr><name pos:line="1858" pos:column="29">lParam</name></expr>)</condition><then pos:line="1858" pos:column="36">
				<expr_stmt><expr><call><name pos:line="1859" pos:column="33">lstrcpy</name><argument_list pos:line="1859" pos:column="40">(<argument><expr><op:operator pos:line="1859" pos:column="41">(</op:operator><name pos:line="1859" pos:column="42">LPTSTR</name><op:operator pos:line="1859" pos:column="48">)</op:operator><name pos:line="1859" pos:column="49">lParam</name></expr></argument>, <argument><expr><call><name><name pos:line="1859" pos:column="57">langDesc</name><op:operator pos:line="1859" pos:column="65">.</op:operator><name pos:line="1859" pos:column="66">c_str</name></name><argument_list pos:line="1859" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="1860" pos:column="25">return <expr><call><name><name pos:line="1860" pos:column="32">langDesc</name><op:operator pos:line="1860" pos:column="40">.</op:operator><name pos:line="1860" pos:column="41">length</name></name><argument_list pos:line="1860" pos:column="47">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1863" pos:column="17">case <expr><name pos:line="1863" pos:column="22">NPPM_SHOWDOCSWITCHER</name></expr>:
		<block pos:line="1864" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1865" pos:column="25">BOOL</name></type> <name pos:line="1865" pos:column="30">toShow</name> <init pos:line="1865" pos:column="37">= <expr><name pos:line="1865" pos:column="39">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1866" pos:column="25">if <condition pos:line="1866" pos:column="28">(<expr><name pos:line="1866" pos:column="29">toShow</name></expr>)</condition><then pos:line="1866" pos:column="36">
			<block pos:line="1867" pos:column="25">{
				<if pos:line="1868" pos:column="33">if <condition pos:line="1868" pos:column="36">(<expr><op:operator pos:line="1868" pos:column="37">!</op:operator><name pos:line="1868" pos:column="38">_pFileSwitcherPanel</name> <op:operator pos:line="1868" pos:column="58">||</op:operator> <op:operator pos:line="1868" pos:column="61">!</op:operator><call><name><name pos:line="1868" pos:column="62">_pFileSwitcherPanel</name><op:operator pos:line="1868" pos:column="81">-&gt;</op:operator><name pos:line="1868" pos:column="83">isVisible</name></name><argument_list pos:line="1868" pos:column="92">()</argument_list></call></expr>)</condition><then pos:line="1868" pos:column="95">
					<expr_stmt><expr><call><name pos:line="1869" pos:column="41">launchFileSwitcherPanel</name><argument_list pos:line="1869" pos:column="64">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then>
			<else pos:line="1871" pos:column="25">else
			<block pos:line="1872" pos:column="25">{
				<if pos:line="1873" pos:column="33">if <condition pos:line="1873" pos:column="36">(<expr><name pos:line="1873" pos:column="37">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="1873" pos:column="57">
					<expr_stmt><expr><call><name><name pos:line="1874" pos:column="41">_pFileSwitcherPanel</name><op:operator pos:line="1874" pos:column="60">-&gt;</op:operator><name pos:line="1874" pos:column="62">display</name></name><argument_list pos:line="1874" pos:column="69">(<argument><expr><lit:literal type="boolean" pos:line="1874" pos:column="70">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></else></if>
			<return pos:line="1876" pos:column="25">return <expr><name pos:line="1876" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1879" pos:column="17">case <expr><name pos:line="1879" pos:column="22">NPPM_ISDOCSWITCHERSHOWN</name></expr>:
		<block pos:line="1880" pos:column="17">{
			<if pos:line="1881" pos:column="25">if <condition pos:line="1881" pos:column="28">(<expr><op:operator pos:line="1881" pos:column="29">!</op:operator><name pos:line="1881" pos:column="30">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="1881" pos:column="50">
				<return pos:line="1882" pos:column="33">return <expr><name pos:line="1882" pos:column="40">FALSE</name></expr>;</return></then></if>
			<return pos:line="1883" pos:column="25">return <expr><call><name><name pos:line="1883" pos:column="32">_pFileSwitcherPanel</name><op:operator pos:line="1883" pos:column="51">-&gt;</op:operator><name pos:line="1883" pos:column="53">isVisible</name></name><argument_list pos:line="1883" pos:column="62">()</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="1886" pos:column="17">case <expr><name pos:line="1886" pos:column="22">NPPM_GETAPPDATAPLUGINSALLOWED</name></expr>:
		<block pos:line="1887" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1888" pos:column="25">NppParameters</name> <type:modifier pos:line="1888" pos:column="39">*</type:modifier></type><name pos:line="1888" pos:column="40">pNppParam</name> <init pos:line="1888" pos:column="50">= <expr><call><name><name pos:line="1888" pos:column="52">NppParameters</name><op:operator pos:line="1888" pos:column="65">::</op:operator><name pos:line="1888" pos:column="67">getInstance</name></name><argument_list pos:line="1888" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="1889" pos:column="25">const</specifier> <name pos:line="1889" pos:column="31">TCHAR</name> <type:modifier pos:line="1889" pos:column="37">*</type:modifier></type><name pos:line="1889" pos:column="38">appDataNpp</name> <init pos:line="1889" pos:column="49">= <expr><call><name><name pos:line="1889" pos:column="51">pNppParam</name><op:operator pos:line="1889" pos:column="60">-&gt;</op:operator><name pos:line="1889" pos:column="62">getAppDataNppDir</name></name><argument_list pos:line="1889" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1890" pos:column="25">if <condition pos:line="1890" pos:column="28">(<expr><name><name pos:line="1890" pos:column="29">appDataNpp</name><index pos:line="1890" pos:column="39">[<expr><lit:literal type="number" pos:line="1890" pos:column="40">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1890" pos:column="43">
			<block pos:line="1891" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1892" pos:column="33">generic_string</name></type> <name pos:line="1892" pos:column="48">allowAppDataPluginsPath</name><argument_list pos:line="1892" pos:column="71">(<argument><expr><call><name><name pos:line="1892" pos:column="72">pNppParam</name><op:operator pos:line="1892" pos:column="81">-&gt;</op:operator><name pos:line="1892" pos:column="83">getNppPath</name></name><argument_list pos:line="1892" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1893" pos:column="33">PathAppend</name><argument_list pos:line="1893" pos:column="43">(<argument><expr><name pos:line="1893" pos:column="44">allowAppDataPluginsPath</name></expr></argument>, <argument><expr><name pos:line="1893" pos:column="69">allowAppDataPluginsFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="1894" pos:column="33">return <expr><call><name><op:operator pos:line="1894" pos:column="40">::</op:operator><name pos:line="1894" pos:column="42">PathFileExists</name></name><argument_list pos:line="1894" pos:column="56">(<argument><expr><call><name><name pos:line="1894" pos:column="57">allowAppDataPluginsPath</name><op:operator pos:line="1894" pos:column="80">.</op:operator><name pos:line="1894" pos:column="81">c_str</name></name><argument_list pos:line="1894" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<return pos:line="1896" pos:column="25">return <expr><name pos:line="1896" pos:column="32">FALSE</name></expr>;</return>
		}</block>

		</case><case pos:line="1899" pos:column="17">case <expr><name pos:line="1899" pos:column="22">NPPM_INTERNAL_SETDOCMAPCHECK</name></expr>:
		<block pos:line="1900" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1901" pos:column="25">checkMenuItem</name><argument_list pos:line="1901" pos:column="38">(<argument><expr><name pos:line="1901" pos:column="39">IDM_VIEW_DOC_MAP</name></expr></argument>, <argument><expr><name pos:line="1901" pos:column="57">lParam</name> <op:operator pos:line="1901" pos:column="64">==</op:operator> <name pos:line="1901" pos:column="67">TRUE</name> <op:operator pos:line="1901" pos:column="72">?</op:operator> <lit:literal type="boolean" pos:line="1901" pos:column="74">true</lit:literal> <op:operator pos:line="1901" pos:column="79">:</op:operator> <lit:literal type="boolean" pos:line="1901" pos:column="81">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1902" pos:column="25">return <expr><name pos:line="1902" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		<comment type="line" pos:line="1905" pos:column="17">//</comment>
		<comment type="line" pos:line="1906" pos:column="17">// These are sent by Preferences Dialog</comment>
		<comment type="line" pos:line="1907" pos:column="17">//</comment>
		</case><case pos:line="1908" pos:column="17">case <expr><name pos:line="1908" pos:column="22">NPPM_INTERNAL_SETTING_HISTORY_SIZE</name></expr>:
		<block pos:line="1909" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1910" pos:column="25">NppParameters</name> <type:modifier pos:line="1910" pos:column="39">*</type:modifier></type><name pos:line="1910" pos:column="40">pNppParam</name> <init pos:line="1910" pos:column="50">= <expr><call><name><name pos:line="1910" pos:column="52">NppParameters</name><op:operator pos:line="1910" pos:column="65">::</op:operator><name pos:line="1910" pos:column="67">getInstance</name></name><argument_list pos:line="1910" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1911" pos:column="25">_lastRecentFileList</name><op:operator pos:line="1911" pos:column="44">.</op:operator><name pos:line="1911" pos:column="45">setUserMaxNbLRF</name></name><argument_list pos:line="1911" pos:column="60">(<argument><expr><call><name><name pos:line="1911" pos:column="61">pNppParam</name><op:operator pos:line="1911" pos:column="70">-&gt;</op:operator><name pos:line="1911" pos:column="72">getNbMaxRecentFile</name></name><argument_list pos:line="1911" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1912" pos:column="25">break;</break>
		}</block>
		
		</case><case pos:line="1915" pos:column="17">case <expr><name pos:line="1915" pos:column="22">NPPM_INTERNAL_SETTING_EDGE_SIZE</name></expr> :
		<block pos:line="1916" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1917" pos:column="25">ScintillaViewParams</name> <type:modifier pos:line="1917" pos:column="45">&amp;</type:modifier></type> <name pos:line="1917" pos:column="47">svp</name> <init pos:line="1917" pos:column="51">= <expr><op:operator pos:line="1917" pos:column="53">(</op:operator><name pos:line="1917" pos:column="54">ScintillaViewParams</name> <op:operator pos:line="1917" pos:column="74">&amp;</op:operator><op:operator pos:line="1917" pos:column="75">)</op:operator><op:operator pos:line="1917" pos:column="76">(</op:operator><call><name><name pos:line="1917" pos:column="77">NppParameters</name><op:operator pos:line="1917" pos:column="90">::</op:operator><name pos:line="1917" pos:column="92">getInstance</name></name><argument_list pos:line="1917" pos:column="103">()</argument_list></call><op:operator pos:line="1917" pos:column="105">)</op:operator><op:operator pos:line="1917" pos:column="106">-&gt;</op:operator><call><name pos:line="1917" pos:column="108">getSVP</name><argument_list pos:line="1917" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1918" pos:column="25">_mainEditView</name><op:operator pos:line="1918" pos:column="38">.</op:operator><name pos:line="1918" pos:column="39">execute</name></name><argument_list pos:line="1918" pos:column="46">(<argument><expr><name pos:line="1918" pos:column="47">SCI_SETEDGECOLUMN</name></expr></argument>, <argument><expr><name><name pos:line="1918" pos:column="66">svp</name><op:operator pos:line="1918" pos:column="69">.</op:operator><name pos:line="1918" pos:column="70">_edgeNbColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1919" pos:column="25">_subEditView</name><op:operator pos:line="1919" pos:column="37">.</op:operator><name pos:line="1919" pos:column="38">execute</name></name><argument_list pos:line="1919" pos:column="45">(<argument><expr><name pos:line="1919" pos:column="46">SCI_SETEDGECOLUMN</name></expr></argument>, <argument><expr><name><name pos:line="1919" pos:column="65">svp</name><op:operator pos:line="1919" pos:column="68">.</op:operator><name pos:line="1919" pos:column="69">_edgeNbColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1920" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1923" pos:column="17">case <expr><name pos:line="1923" pos:column="22">NPPM_INTERNAL_SETTING_TAB_REPLCESPACE</name></expr>:
		</case><case pos:line="1924" pos:column="17">case <expr><name pos:line="1924" pos:column="22">NPPM_INTERNAL_SETTING_TAB_SIZE</name></expr>:
		<block pos:line="1925" pos:column="17">{
            <expr_stmt><expr><call><name><name pos:line="1926" pos:column="13">_pEditView</name><op:operator pos:line="1926" pos:column="23">-&gt;</op:operator><name pos:line="1926" pos:column="25">setTabSettings</name></name><argument_list pos:line="1926" pos:column="39">(<argument><expr><call><name><name pos:line="1926" pos:column="40">_pEditView</name><op:operator pos:line="1926" pos:column="50">-&gt;</op:operator><name pos:line="1926" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="1926" pos:column="68">()</argument_list></call><op:operator pos:line="1926" pos:column="70">-&gt;</op:operator><call><name pos:line="1926" pos:column="72">getCurrentLang</name><argument_list pos:line="1926" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1927" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1930" pos:column="17">case <expr><name pos:line="1930" pos:column="22">NPPM_INTERNAL_RECENTFILELIST_UPDATE</name></expr>:
		<block pos:line="1931" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1932" pos:column="25">_lastRecentFileList</name><op:operator pos:line="1932" pos:column="44">.</op:operator><name pos:line="1932" pos:column="45">updateMenu</name></name><argument_list pos:line="1932" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1933" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1936" pos:column="17">case <expr><name pos:line="1936" pos:column="22">NPPM_INTERNAL_RECENTFILELIST_SWITCH</name></expr>:
		<block pos:line="1937" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1938" pos:column="25">_lastRecentFileList</name><op:operator pos:line="1938" pos:column="44">.</op:operator><name pos:line="1938" pos:column="45">switchMode</name></name><argument_list pos:line="1938" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1939" pos:column="25">_lastRecentFileList</name><op:operator pos:line="1939" pos:column="44">.</op:operator><name pos:line="1939" pos:column="45">updateMenu</name></name><argument_list pos:line="1939" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1940" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1943" pos:column="17">case <expr><name pos:line="1943" pos:column="22">WM_INITMENUPOPUP</name></expr>:
		<block pos:line="1944" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1945" pos:column="25">_windowsMenu</name><op:operator pos:line="1945" pos:column="37">.</op:operator><name pos:line="1945" pos:column="38">initPopupMenu</name></name><argument_list pos:line="1945" pos:column="51">(<argument><expr><op:operator pos:line="1945" pos:column="52">(</op:operator><name pos:line="1945" pos:column="53">HMENU</name><op:operator pos:line="1945" pos:column="58">)</op:operator><name pos:line="1945" pos:column="59">wParam</name></expr></argument>, <argument><expr><name pos:line="1945" pos:column="67">_pDocTab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1946" pos:column="25">return <expr><name pos:line="1946" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1949" pos:column="17">case <expr><name pos:line="1949" pos:column="22">WM_ENTERMENULOOP</name></expr>:
		<block pos:line="1950" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1951" pos:column="25">NppGUI</name> <type:modifier pos:line="1951" pos:column="32">&amp;</type:modifier></type> <name pos:line="1951" pos:column="34">nppgui</name> <init pos:line="1951" pos:column="41">= <expr><op:operator pos:line="1951" pos:column="43">(</op:operator><name pos:line="1951" pos:column="44">NppGUI</name> <op:operator pos:line="1951" pos:column="51">&amp;</op:operator><op:operator pos:line="1951" pos:column="52">)</op:operator><op:operator pos:line="1951" pos:column="53">(</op:operator><call><name><name pos:line="1951" pos:column="54">pNppParam</name><op:operator pos:line="1951" pos:column="63">-&gt;</op:operator><name pos:line="1951" pos:column="65">getNppGUI</name></name><argument_list pos:line="1951" pos:column="74">()</argument_list></call><op:operator pos:line="1951" pos:column="76">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="1952" pos:column="25">if <condition pos:line="1952" pos:column="28">(<expr><op:operator pos:line="1952" pos:column="29">!</op:operator><name><name pos:line="1952" pos:column="30">nppgui</name><op:operator pos:line="1952" pos:column="36">.</op:operator><name pos:line="1952" pos:column="37">_menuBarShow</name></name> <op:operator pos:line="1952" pos:column="50">&amp;&amp;</op:operator> <op:operator pos:line="1952" pos:column="53">!</op:operator><name pos:line="1952" pos:column="54">wParam</name> <op:operator pos:line="1952" pos:column="61">&amp;&amp;</op:operator> <op:operator pos:line="1952" pos:column="64">!</op:operator><name pos:line="1952" pos:column="65">_sysMenuEntering</name></expr>)</condition><then pos:line="1952" pos:column="82">
				<expr_stmt><expr><call><name><op:operator pos:line="1953" pos:column="33">::</op:operator><name pos:line="1953" pos:column="35">SetMenu</name></name><argument_list pos:line="1953" pos:column="42">(<argument><expr><call><name><name pos:line="1953" pos:column="43">_pPublicInterface</name><op:operator pos:line="1953" pos:column="60">-&gt;</op:operator><name pos:line="1953" pos:column="62">getHSelf</name></name><argument_list pos:line="1953" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1953" pos:column="74">_mainMenuHandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				
			<return pos:line="1955" pos:column="25">return <expr><name pos:line="1955" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="1958" pos:column="17">case <expr><name pos:line="1958" pos:column="22">WM_EXITMENULOOP</name></expr>:
		<block pos:line="1959" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1960" pos:column="25">NppGUI</name> <type:modifier pos:line="1960" pos:column="32">&amp;</type:modifier></type> <name pos:line="1960" pos:column="34">nppgui</name> <init pos:line="1960" pos:column="41">= <expr><op:operator pos:line="1960" pos:column="43">(</op:operator><name pos:line="1960" pos:column="44">NppGUI</name> <op:operator pos:line="1960" pos:column="51">&amp;</op:operator><op:operator pos:line="1960" pos:column="52">)</op:operator><op:operator pos:line="1960" pos:column="53">(</op:operator><call><name><name pos:line="1960" pos:column="54">pNppParam</name><op:operator pos:line="1960" pos:column="63">-&gt;</op:operator><name pos:line="1960" pos:column="65">getNppGUI</name></name><argument_list pos:line="1960" pos:column="74">()</argument_list></call><op:operator pos:line="1960" pos:column="76">)</op:operator></expr></init></decl>;</decl_stmt>
			<if pos:line="1961" pos:column="25">if <condition pos:line="1961" pos:column="28">(<expr><op:operator pos:line="1961" pos:column="29">!</op:operator><name><name pos:line="1961" pos:column="30">nppgui</name><op:operator pos:line="1961" pos:column="36">.</op:operator><name pos:line="1961" pos:column="37">_menuBarShow</name></name> <op:operator pos:line="1961" pos:column="50">&amp;&amp;</op:operator> <op:operator pos:line="1961" pos:column="53">!</op:operator><name pos:line="1961" pos:column="54">wParam</name> <op:operator pos:line="1961" pos:column="61">&amp;&amp;</op:operator> <op:operator pos:line="1961" pos:column="64">!</op:operator><name pos:line="1961" pos:column="65">_sysMenuEntering</name></expr>)</condition><then pos:line="1961" pos:column="82">
				<expr_stmt><expr><call><name><op:operator pos:line="1962" pos:column="33">::</op:operator><name pos:line="1962" pos:column="35">SetMenu</name></name><argument_list pos:line="1962" pos:column="42">(<argument><expr><call><name><name pos:line="1962" pos:column="43">_pPublicInterface</name><op:operator pos:line="1962" pos:column="60">-&gt;</op:operator><name pos:line="1962" pos:column="62">getHSelf</name></name><argument_list pos:line="1962" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1962" pos:column="74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="1963" pos:column="25">_sysMenuEntering</name> <op:operator pos:line="1963" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="1963" pos:column="44">false</lit:literal></expr>;</expr_stmt>
			<return pos:line="1964" pos:column="25">return <expr><name pos:line="1964" pos:column="32">FALSE</name></expr>;</return>
		}</block>

		</case><default pos:line="1967" pos:column="17">default:
		<block pos:line="1968" pos:column="17">{
			<if pos:line="1969" pos:column="25">if <condition pos:line="1969" pos:column="28">(<expr><name pos:line="1969" pos:column="29">Message</name> <op:operator pos:line="1969" pos:column="37">==</op:operator> <name pos:line="1969" pos:column="40">WDN_NOTIFY</name></expr>)</condition><then pos:line="1969" pos:column="51">
			<block pos:line="1970" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1971" pos:column="33">NMWINDLG</name><type:modifier pos:line="1971" pos:column="41">*</type:modifier></type> <name pos:line="1971" pos:column="43">nmdlg</name> <init pos:line="1971" pos:column="49">= <expr><op:operator pos:line="1971" pos:column="51">(</op:operator><name pos:line="1971" pos:column="52">NMWINDLG</name><op:operator pos:line="1971" pos:column="60">*</op:operator><op:operator pos:line="1971" pos:column="61">)</op:operator><name pos:line="1971" pos:column="62">lParam</name></expr></init></decl>;</decl_stmt>
				<switch pos:line="1972" pos:column="33">switch <condition pos:line="1972" pos:column="40">(<expr><name><name pos:line="1972" pos:column="41">nmdlg</name><op:operator pos:line="1972" pos:column="46">-&gt;</op:operator><name pos:line="1972" pos:column="48">type</name></name></expr>)</condition>
				<block pos:line="1973" pos:column="33">{
					<case pos:line="1974" pos:column="41">case <expr><name pos:line="1974" pos:column="46">WDT_ACTIVATE</name></expr>:
						<expr_stmt><expr><call><name pos:line="1975" pos:column="49">activateDoc</name><argument_list pos:line="1975" pos:column="60">(<argument><expr><name><name pos:line="1975" pos:column="61">nmdlg</name><op:operator pos:line="1975" pos:column="66">-&gt;</op:operator><name pos:line="1975" pos:column="68">curSel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1976" pos:column="49">nmdlg</name><op:operator pos:line="1976" pos:column="54">-&gt;</op:operator><name pos:line="1976" pos:column="56">processed</name></name> <op:operator pos:line="1976" pos:column="66">=</op:operator> <name pos:line="1976" pos:column="68">TRUE</name></expr>;</expr_stmt>
						<break pos:line="1977" pos:column="49">break;</break>
					</case><case pos:line="1978" pos:column="41">case <expr><name pos:line="1978" pos:column="46">WDT_SAVE</name></expr>:
					<block pos:line="1979" pos:column="41">{
						<comment type="line" pos:line="1980" pos:column="49">//loop through nmdlg-&gt;nItems, get index and save it</comment>
						<for pos:line="1981" pos:column="49">for (<init><decl><type><name pos:line="1981" pos:column="54">int</name></type> <name pos:line="1981" pos:column="58">i</name> <init pos:line="1981" pos:column="60">= <expr><lit:literal type="number" pos:line="1981" pos:column="62">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1981" pos:column="65">i</name> <op:operator pos:line="1981" pos:column="67">&lt;</op:operator> <op:operator pos:line="1981" pos:column="69">(</op:operator><name pos:line="1981" pos:column="70">int</name><op:operator pos:line="1981" pos:column="73">)</op:operator><name><name pos:line="1981" pos:column="74">nmdlg</name><op:operator pos:line="1981" pos:column="79">-&gt;</op:operator><name pos:line="1981" pos:column="81">nItems</name></name></expr>;</condition> <incr><expr><name pos:line="1981" pos:column="89">i</name><op:operator pos:line="1981" pos:column="90">++</op:operator></expr></incr>) <block pos:line="1981" pos:column="94">{
							<expr_stmt><expr><call><name pos:line="1982" pos:column="57">fileSave</name><argument_list pos:line="1982" pos:column="65">(<argument><expr><call><name><name pos:line="1982" pos:column="66">_pDocTab</name><op:operator pos:line="1982" pos:column="74">-&gt;</op:operator><name pos:line="1982" pos:column="76">getBufferByIndex</name></name><argument_list pos:line="1982" pos:column="92">(<argument><expr><name pos:line="1982" pos:column="93">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></for>
						<expr_stmt><expr><name><name pos:line="1984" pos:column="49">nmdlg</name><op:operator pos:line="1984" pos:column="54">-&gt;</op:operator><name pos:line="1984" pos:column="56">processed</name></name> <op:operator pos:line="1984" pos:column="66">=</op:operator> <name pos:line="1984" pos:column="68">TRUE</name></expr>;</expr_stmt>
					}</block>
					<break pos:line="1986" pos:column="41">break;</break>
					</case><case pos:line="1987" pos:column="41">case <expr><name pos:line="1987" pos:column="46">WDT_CLOSE</name></expr>:
					<block pos:line="1988" pos:column="41">{
                        <decl_stmt><decl><type><name pos:line="1989" pos:column="25">bool</name></type> <name pos:line="1989" pos:column="30">closed</name></decl>;</decl_stmt>

						<comment type="line" pos:line="1991" pos:column="49">//loop through nmdlg-&gt;nItems, get index and close it</comment>
						<for pos:line="1992" pos:column="49">for (<init><decl><type><name pos:line="1992" pos:column="54">int</name></type> <name pos:line="1992" pos:column="58">i</name> <init pos:line="1992" pos:column="60">= <expr><lit:literal type="number" pos:line="1992" pos:column="62">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1992" pos:column="65">i</name> <op:operator pos:line="1992" pos:column="67">&lt;</op:operator> <op:operator pos:line="1992" pos:column="69">(</op:operator><name pos:line="1992" pos:column="70">int</name><op:operator pos:line="1992" pos:column="73">)</op:operator><name><name pos:line="1992" pos:column="74">nmdlg</name><op:operator pos:line="1992" pos:column="79">-&gt;</op:operator><name pos:line="1992" pos:column="81">nItems</name></name></expr>;</condition> <incr><expr><name pos:line="1992" pos:column="89">i</name><op:operator pos:line="1992" pos:column="90">++</op:operator></expr></incr>)
                        <block pos:line="1993" pos:column="25">{
							<expr_stmt><expr><name pos:line="1994" pos:column="57">closed</name> <op:operator pos:line="1994" pos:column="64">=</op:operator> <call><name pos:line="1994" pos:column="66">fileClose</name><argument_list pos:line="1994" pos:column="75">(<argument><expr><call><name><name pos:line="1994" pos:column="76">_pDocTab</name><op:operator pos:line="1994" pos:column="84">-&gt;</op:operator><name pos:line="1994" pos:column="86">getBufferByIndex</name></name><argument_list pos:line="1994" pos:column="102">(<argument><expr><name><name pos:line="1994" pos:column="103">nmdlg</name><op:operator pos:line="1994" pos:column="108">-&gt;</op:operator><name pos:line="1994" pos:column="110">Items</name><index pos:line="1994" pos:column="115">[<expr><name pos:line="1994" pos:column="116">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1994" pos:column="121">currentView</name><argument_list pos:line="1994" pos:column="132">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<decl_stmt><decl><type><name pos:line="1995" pos:column="57">UINT</name></type> <name pos:line="1995" pos:column="62">pos</name> <init pos:line="1995" pos:column="66">= <expr><name><name pos:line="1995" pos:column="68">nmdlg</name><op:operator pos:line="1995" pos:column="73">-&gt;</op:operator><name pos:line="1995" pos:column="75">Items</name><index pos:line="1995" pos:column="80">[<expr><name pos:line="1995" pos:column="81">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:line="1996" pos:column="57">// The window list only needs to be rearranged when the file was actually closed</comment>
							<if pos:line="1997" pos:column="57">if <condition pos:line="1997" pos:column="60">(<expr><name pos:line="1997" pos:column="61">closed</name></expr>)</condition><then pos:line="1997" pos:column="68">
                            <block pos:line="1998" pos:column="29">{
								<expr_stmt><expr><name><name pos:line="1999" pos:column="65">nmdlg</name><op:operator pos:line="1999" pos:column="70">-&gt;</op:operator><name pos:line="1999" pos:column="72">Items</name><index pos:line="1999" pos:column="77">[<expr><name pos:line="1999" pos:column="78">i</name></expr>]</index></name> <op:operator pos:line="1999" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="1999" pos:column="83">0xFFFFFFFF</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="1999" pos:column="95">// indicate file was closed</comment>

								<comment type="line" pos:line="2001" pos:column="65">// Shift the remaining items downward to fill the gap</comment>
								<for pos:line="2002" pos:column="65">for (<init><decl><type><name pos:line="2002" pos:column="70">int</name></type> <name pos:line="2002" pos:column="74">j</name> <init pos:line="2002" pos:column="76">= <expr><name pos:line="2002" pos:column="78">i</name> <op:operator pos:line="2002" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="2002" pos:column="82">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2002" pos:column="85">j</name> <op:operator pos:line="2002" pos:column="87">&lt;</op:operator> <op:operator pos:line="2002" pos:column="89">(</op:operator><name pos:line="2002" pos:column="90">int</name><op:operator pos:line="2002" pos:column="93">)</op:operator><name><name pos:line="2002" pos:column="94">nmdlg</name><op:operator pos:line="2002" pos:column="99">-&gt;</op:operator><name pos:line="2002" pos:column="101">nItems</name></name></expr>;</condition> <incr><expr><name pos:line="2002" pos:column="109">j</name><op:operator pos:line="2002" pos:column="110">++</op:operator></expr></incr>)
                                <block pos:line="2003" pos:column="33">{
									<if pos:line="2004" pos:column="73">if <condition pos:line="2004" pos:column="76">(<expr><name><name pos:line="2004" pos:column="77">nmdlg</name><op:operator pos:line="2004" pos:column="82">-&gt;</op:operator><name pos:line="2004" pos:column="84">Items</name><index pos:line="2004" pos:column="89">[<expr><name pos:line="2004" pos:column="90">j</name></expr>]</index></name> <op:operator pos:line="2004" pos:column="93">&gt;</op:operator> <name pos:line="2004" pos:column="95">pos</name></expr>)</condition><then pos:line="2004" pos:column="99">
                                    <block pos:line="2005" pos:column="37">{
										<expr_stmt><expr><name><name pos:line="2006" pos:column="81">nmdlg</name><op:operator pos:line="2006" pos:column="86">-&gt;</op:operator><name pos:line="2006" pos:column="88">Items</name><index pos:line="2006" pos:column="93">[<expr><name pos:line="2006" pos:column="94">j</name></expr>]</index></name><op:operator pos:line="2006" pos:column="96">--</op:operator></expr>;</expr_stmt>
									}</block></then></if>
								}</block></for>
							}</block></then></if>
						}</block></for>
						<expr_stmt><expr><name><name pos:line="2011" pos:column="49">nmdlg</name><op:operator pos:line="2011" pos:column="54">-&gt;</op:operator><name pos:line="2011" pos:column="56">processed</name></name> <op:operator pos:line="2011" pos:column="66">=</op:operator> <name pos:line="2011" pos:column="68">TRUE</name></expr>;</expr_stmt>
					}</block>
					<break pos:line="2013" pos:column="41">break;</break>
					</case><case pos:line="2014" pos:column="41">case <expr><name pos:line="2014" pos:column="46">WDT_SORT</name></expr>:
						<if pos:line="2015" pos:column="49">if <condition pos:line="2015" pos:column="52">(<expr><name><name pos:line="2015" pos:column="53">nmdlg</name><op:operator pos:line="2015" pos:column="58">-&gt;</op:operator><name pos:line="2015" pos:column="60">nItems</name></name> <op:operator pos:line="2015" pos:column="67">!=</op:operator> <op:operator pos:line="2015" pos:column="70">(</op:operator><name pos:line="2015" pos:column="71">unsigned</name> <name pos:line="2015" pos:column="80">int</name><op:operator pos:line="2015" pos:column="83">)</op:operator><call><name><name pos:line="2015" pos:column="84">_pDocTab</name><op:operator pos:line="2015" pos:column="92">-&gt;</op:operator><name pos:line="2015" pos:column="94">nbItem</name></name><argument_list pos:line="2015" pos:column="100">()</argument_list></call></expr>)</condition><then pos:line="2015" pos:column="103">	<comment type="line" pos:line="2015" pos:column="105">//sanity check, if mismatch just abort</comment>
							<break pos:line="2016" pos:column="57">break;</break></then></if>
						<comment type="line" pos:line="2017" pos:column="49">//Collect all buffers</comment>
						<decl_stmt><decl><type><name><name pos:line="2018" pos:column="49">std</name><op:operator pos:line="2018" pos:column="52">::</op:operator><name><name pos:line="2018" pos:column="54">vector</name><argument_list pos:line="2018" pos:column="60">&lt;<argument><expr><name pos:line="2018" pos:column="61">BufferID</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="2018" pos:column="71">tempBufs</name></decl>;</decl_stmt>
						<for pos:line="2019" pos:column="49">for(<init><decl><type><name pos:line="2019" pos:column="53">int</name></type> <name pos:line="2019" pos:column="57">i</name> <init pos:line="2019" pos:column="59">= <expr><lit:literal type="number" pos:line="2019" pos:column="61">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2019" pos:column="64">i</name> <op:operator pos:line="2019" pos:column="66">&lt;</op:operator> <op:operator pos:line="2019" pos:column="68">(</op:operator><name pos:line="2019" pos:column="69">int</name><op:operator pos:line="2019" pos:column="72">)</op:operator><name><name pos:line="2019" pos:column="73">nmdlg</name><op:operator pos:line="2019" pos:column="78">-&gt;</op:operator><name pos:line="2019" pos:column="80">nItems</name></name></expr>;</condition> <incr><expr><name pos:line="2019" pos:column="88">i</name><op:operator pos:line="2019" pos:column="89">++</op:operator></expr></incr>) <block pos:line="2019" pos:column="93">{
							<expr_stmt><expr><call><name><name pos:line="2020" pos:column="57">tempBufs</name><op:operator pos:line="2020" pos:column="65">.</op:operator><name pos:line="2020" pos:column="66">push_back</name></name><argument_list pos:line="2020" pos:column="75">(<argument><expr><call><name><name pos:line="2020" pos:column="76">_pDocTab</name><op:operator pos:line="2020" pos:column="84">-&gt;</op:operator><name pos:line="2020" pos:column="86">getBufferByIndex</name></name><argument_list pos:line="2020" pos:column="102">(<argument><expr><name pos:line="2020" pos:column="103">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></for>
						<comment type="line" pos:line="2022" pos:column="49">//Reset buffers</comment>
						<for pos:line="2023" pos:column="49">for(<init><decl><type><name pos:line="2023" pos:column="53">int</name></type> <name pos:line="2023" pos:column="57">i</name> <init pos:line="2023" pos:column="59">= <expr><lit:literal type="number" pos:line="2023" pos:column="61">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2023" pos:column="64">i</name> <op:operator pos:line="2023" pos:column="66">&lt;</op:operator> <op:operator pos:line="2023" pos:column="68">(</op:operator><name pos:line="2023" pos:column="69">int</name><op:operator pos:line="2023" pos:column="72">)</op:operator><name><name pos:line="2023" pos:column="73">nmdlg</name><op:operator pos:line="2023" pos:column="78">-&gt;</op:operator><name pos:line="2023" pos:column="80">nItems</name></name></expr>;</condition> <incr><expr><name pos:line="2023" pos:column="88">i</name><op:operator pos:line="2023" pos:column="89">++</op:operator></expr></incr>) <block pos:line="2023" pos:column="93">{
							<expr_stmt><expr><call><name><name pos:line="2024" pos:column="57">_pDocTab</name><op:operator pos:line="2024" pos:column="65">-&gt;</op:operator><name pos:line="2024" pos:column="67">setBuffer</name></name><argument_list pos:line="2024" pos:column="76">(<argument><expr><name pos:line="2024" pos:column="77">i</name></expr></argument>, <argument><expr><name><name pos:line="2024" pos:column="80">tempBufs</name><index pos:line="2024" pos:column="88">[<expr><name><name pos:line="2024" pos:column="89">nmdlg</name><op:operator pos:line="2024" pos:column="94">-&gt;</op:operator><name pos:line="2024" pos:column="96">Items</name><index pos:line="2024" pos:column="101">[<expr><name pos:line="2024" pos:column="102">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></for>
						<expr_stmt><expr><call><name pos:line="2026" pos:column="49">activateBuffer</name><argument_list pos:line="2026" pos:column="63">(<argument><expr><call><name><name pos:line="2026" pos:column="64">_pDocTab</name><op:operator pos:line="2026" pos:column="72">-&gt;</op:operator><name pos:line="2026" pos:column="74">getBufferByIndex</name></name><argument_list pos:line="2026" pos:column="90">(<argument><expr><call><name><name pos:line="2026" pos:column="91">_pDocTab</name><op:operator pos:line="2026" pos:column="99">-&gt;</op:operator><name pos:line="2026" pos:column="101">getCurrentTabIndex</name></name><argument_list pos:line="2026" pos:column="119">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2026" pos:column="124">currentView</name><argument_list pos:line="2026" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<break pos:line="2027" pos:column="49">break;</break>
				</case>}</block></switch>
				<return pos:line="2029" pos:column="33">return <expr><name pos:line="2029" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>

			<return pos:line="2032" pos:column="25">return <expr><call><name><op:operator pos:line="2032" pos:column="32">::</op:operator><name pos:line="2032" pos:column="34">DefWindowProc</name></name><argument_list pos:line="2032" pos:column="47">(<argument><expr><name pos:line="2032" pos:column="48">hwnd</name></expr></argument>, <argument><expr><name pos:line="2032" pos:column="54">Message</name></expr></argument>, <argument><expr><name pos:line="2032" pos:column="63">wParam</name></expr></argument>, <argument><expr><name pos:line="2032" pos:column="71">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	</default>}</block></switch>

	<expr_stmt><expr><call><name><name pos:line="2036" pos:column="9">_pluginsManager</name><op:operator pos:line="2036" pos:column="24">.</op:operator><name pos:line="2036" pos:column="25">relayNppMessages</name></name><argument_list pos:line="2036" pos:column="41">(<argument><expr><name pos:line="2036" pos:column="42">Message</name></expr></argument>, <argument><expr><name pos:line="2036" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="2036" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2037" pos:column="9">return <expr><name pos:line="2037" pos:column="16">result</name></expr>;</return>
}</block></function>

</unit>
