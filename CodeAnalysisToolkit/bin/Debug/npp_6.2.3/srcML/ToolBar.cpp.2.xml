<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ToolBar\ToolBar.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ToolBar.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Shortcut.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"FindReplaceDlg_rc.h"</lit:literal></cpp:file></cpp:include>

<decl_stmt><decl><type><specifier pos:line="35" pos:column="1">const</specifier> <name pos:line="35" pos:column="7">int</name></type> <name pos:line="35" pos:column="11">WS_TOOLBARSTYLE</name> <init pos:line="35" pos:column="27">= <expr><name pos:line="35" pos:column="29">WS_CHILD</name> <op:operator pos:line="35" pos:column="38">|</op:operator> <name pos:line="35" pos:column="40">WS_VISIBLE</name> <op:operator pos:line="35" pos:column="51">|</op:operator> <name pos:line="35" pos:column="53">WS_CLIPCHILDREN</name> <op:operator pos:line="35" pos:column="69">|</op:operator> <name pos:line="35" pos:column="71">WS_CLIPSIBLINGS</name> <op:operator pos:line="35" pos:column="87">|</op:operator> <name pos:line="35" pos:column="89">TBSTYLE_TOOLTIPS</name> <op:operator pos:line="35" pos:column="106">|</op:operator><name pos:line="35" pos:column="107">TBSTYLE_FLAT</name> <op:operator pos:line="35" pos:column="120">|</op:operator> <name pos:line="35" pos:column="122">CCS_TOP</name> <op:operator pos:line="35" pos:column="130">|</op:operator> <name pos:line="35" pos:column="132">BTNS_AUTOSIZE</name> <op:operator pos:line="35" pos:column="146">|</op:operator> <name pos:line="35" pos:column="148">CCS_NOPARENTALIGN</name> <op:operator pos:line="35" pos:column="166">|</op:operator> <name pos:line="35" pos:column="168">CCS_NORESIZE</name> <op:operator pos:line="35" pos:column="181">|</op:operator> <name pos:line="35" pos:column="183">CCS_NODIVIDER</name></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="37" pos:column="1">void</name></type> <name><name pos:line="37" pos:column="6">ToolBar</name><op:operator pos:line="37" pos:column="13">::</op:operator><name pos:line="37" pos:column="15">initTheme</name></name><parameter_list pos:line="37" pos:column="24">(<param><decl><type><name pos:line="37" pos:column="25">TiXmlDocument</name> <type:modifier pos:line="37" pos:column="39">*</type:modifier></type><name pos:line="37" pos:column="40">toolIconsDocRoot</name></decl></param>)</parameter_list>
<block pos:line="38" pos:column="1">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">_toolIcons</name> <op:operator pos:line="39" pos:column="16">=</op:operator>  <call><name><name pos:line="39" pos:column="19">toolIconsDocRoot</name><op:operator pos:line="39" pos:column="35">-&gt;</op:operator><name pos:line="39" pos:column="37">FirstChild</name></name><argument_list pos:line="39" pos:column="47">(<argument><expr><call><name pos:line="39" pos:column="48">TEXT</name><argument_list pos:line="39" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="53">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">_toolIcons</name></expr>)</condition><then pos:line="40" pos:column="24">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><name pos:line="42" pos:column="17">_toolIcons</name> <op:operator pos:line="42" pos:column="28">=</op:operator> <call><name><name pos:line="42" pos:column="30">_toolIcons</name><op:operator pos:line="42" pos:column="40">-&gt;</op:operator><name pos:line="42" pos:column="42">FirstChild</name></name><argument_list pos:line="42" pos:column="52">(<argument><expr><call><name pos:line="42" pos:column="53">TEXT</name><argument_list pos:line="42" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="58">"ToolBarIcons"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">_toolIcons</name></expr>)</condition><then pos:line="43" pos:column="32">
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">_toolIcons</name> <op:operator pos:line="45" pos:column="36">=</op:operator> <call><name><name pos:line="45" pos:column="38">_toolIcons</name><op:operator pos:line="45" pos:column="48">-&gt;</op:operator><name pos:line="45" pos:column="50">FirstChild</name></name><argument_list pos:line="45" pos:column="60">(<argument><expr><call><name pos:line="45" pos:column="61">TEXT</name><argument_list pos:line="45" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="66">"Theme"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">_toolIcons</name></expr>)</condition><then pos:line="46" pos:column="40">
			<block pos:line="47" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="48" pos:column="33">const</specifier> <name pos:line="48" pos:column="39">TCHAR</name> <type:modifier pos:line="48" pos:column="45">*</type:modifier></type><name pos:line="48" pos:column="46">themeDir</name> <init pos:line="48" pos:column="55">= <expr><op:operator pos:line="48" pos:column="57">(</op:operator><call><name><name pos:line="48" pos:column="58">_toolIcons</name><op:operator pos:line="48" pos:column="68">-&gt;</op:operator><name pos:line="48" pos:column="70">ToElement</name></name><argument_list pos:line="48" pos:column="79">()</argument_list></call><op:operator pos:line="48" pos:column="81">)</op:operator><op:operator pos:line="48" pos:column="82">-&gt;</op:operator><call><name pos:line="48" pos:column="84">Attribute</name><argument_list pos:line="48" pos:column="93">(<argument><expr><call><name pos:line="48" pos:column="94">TEXT</name><argument_list pos:line="48" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="99">"pathPrefix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<for pos:line="50" pos:column="33">for (<init><decl><type><name pos:line="50" pos:column="38">TiXmlNode</name> <type:modifier pos:line="50" pos:column="48">*</type:modifier></type><name pos:line="50" pos:column="49">childNode</name> <init pos:line="50" pos:column="59">= <expr><call><name><name pos:line="50" pos:column="61">_toolIcons</name><op:operator pos:line="50" pos:column="71">-&gt;</op:operator><name pos:line="50" pos:column="73">FirstChildElement</name></name><argument_list pos:line="50" pos:column="90">(<argument><expr><call><name pos:line="50" pos:column="91">TEXT</name><argument_list pos:line="50" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="96">"Icon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					 <condition><expr><name pos:line="51" pos:column="42">childNode</name></expr> ;</condition>
					 <incr><expr><name pos:line="52" pos:column="42">childNode</name> <op:operator pos:line="52" pos:column="52">=</op:operator> <call><name><name pos:line="52" pos:column="54">childNode</name><op:operator pos:line="52" pos:column="63">-&gt;</op:operator><name pos:line="52" pos:column="65">NextSibling</name></name><argument_list pos:line="52" pos:column="76">(<argument><expr><call><name pos:line="52" pos:column="77">TEXT</name><argument_list pos:line="52" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="82">"Icon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
				<block pos:line="53" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="54" pos:column="41">int</name></type> <name pos:line="54" pos:column="45">iIcon</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="55" pos:column="41">const</specifier> <name pos:line="55" pos:column="47">TCHAR</name> <type:modifier pos:line="55" pos:column="53">*</type:modifier></type><name pos:line="55" pos:column="54">res</name> <init pos:line="55" pos:column="58">= <expr><op:operator pos:line="55" pos:column="60">(</op:operator><call><name><name pos:line="55" pos:column="61">childNode</name><op:operator pos:line="55" pos:column="70">-&gt;</op:operator><name pos:line="55" pos:column="72">ToElement</name></name><argument_list pos:line="55" pos:column="81">()</argument_list></call><op:operator pos:line="55" pos:column="83">)</op:operator><op:operator pos:line="55" pos:column="84">-&gt;</op:operator><call><name pos:line="55" pos:column="86">Attribute</name><argument_list pos:line="55" pos:column="95">(<argument><expr><call><name pos:line="55" pos:column="96">TEXT</name><argument_list pos:line="55" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="101">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="55" pos:column="108">&amp;</op:operator><name pos:line="55" pos:column="109">iIcon</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="56" pos:column="41">if <condition pos:line="56" pos:column="44">(<expr><name pos:line="56" pos:column="45">res</name></expr>)</condition><then pos:line="56" pos:column="49">
					<block pos:line="57" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="58" pos:column="49">TiXmlNode</name> <type:modifier pos:line="58" pos:column="59">*</type:modifier></type><name pos:line="58" pos:column="60">grandChildNode</name> <init pos:line="58" pos:column="75">= <expr><call><name><name pos:line="58" pos:column="77">childNode</name><op:operator pos:line="58" pos:column="86">-&gt;</op:operator><name pos:line="58" pos:column="88">FirstChildElement</name></name><argument_list pos:line="58" pos:column="105">(<argument><expr><call><name pos:line="58" pos:column="106">TEXT</name><argument_list pos:line="58" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="111">"normal"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="59" pos:column="49">if <condition pos:line="59" pos:column="52">(<expr><name pos:line="59" pos:column="53">grandChildNode</name></expr>)</condition><then pos:line="59" pos:column="68">
						<block pos:line="60" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="61" pos:column="57">TiXmlNode</name> <type:modifier pos:line="61" pos:column="67">*</type:modifier></type><name pos:line="61" pos:column="68">valueNode</name> <init pos:line="61" pos:column="78">= <expr><call><name><name pos:line="61" pos:column="80">grandChildNode</name><op:operator pos:line="61" pos:column="94">-&gt;</op:operator><name pos:line="61" pos:column="96">FirstChild</name></name><argument_list pos:line="61" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:line="62" pos:column="57">//putain, enfin!!!</comment>
							<if pos:line="63" pos:column="57">if <condition pos:line="63" pos:column="60">(<expr><name pos:line="63" pos:column="61">valueNode</name></expr>)</condition><then pos:line="63" pos:column="71">
							<block pos:line="64" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="65" pos:column="65">generic_string</name></type> <name pos:line="65" pos:column="80">locator</name> <init pos:line="65" pos:column="88">= <expr><name pos:line="65" pos:column="90">themeDir</name><op:operator pos:line="65" pos:column="98">?</op:operator><name pos:line="65" pos:column="99">themeDir</name><op:operator pos:line="65" pos:column="107">:</op:operator><call><name pos:line="65" pos:column="108">TEXT</name><argument_list pos:line="65" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="113">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								
								<expr_stmt><expr><name pos:line="67" pos:column="65">locator</name> <op:operator pos:line="67" pos:column="73">+=</op:operator> <call><name><name pos:line="67" pos:column="76">valueNode</name><op:operator pos:line="67" pos:column="85">-&gt;</op:operator><name pos:line="67" pos:column="87">Value</name></name><argument_list pos:line="67" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="68" pos:column="65">_customIconVect</name><op:operator pos:line="68" pos:column="80">.</op:operator><name pos:line="68" pos:column="81">push_back</name></name><argument_list pos:line="68" pos:column="90">(<argument><expr><call><name pos:line="68" pos:column="91">iconLocator</name><argument_list pos:line="68" pos:column="102">(<argument><expr><lit:literal type="number" pos:line="68" pos:column="103">0</lit:literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="106">iIcon</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="113">locator</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
						}</block></then></if>

						<expr_stmt><expr><name pos:line="72" pos:column="49">grandChildNode</name> <op:operator pos:line="72" pos:column="64">=</op:operator> <call><name><name pos:line="72" pos:column="66">childNode</name><op:operator pos:line="72" pos:column="75">-&gt;</op:operator><name pos:line="72" pos:column="77">FirstChildElement</name></name><argument_list pos:line="72" pos:column="94">(<argument><expr><call><name pos:line="72" pos:column="95">TEXT</name><argument_list pos:line="72" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="100">"hover"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="73" pos:column="49">if <condition pos:line="73" pos:column="52">(<expr><name pos:line="73" pos:column="53">grandChildNode</name></expr>)</condition><then pos:line="73" pos:column="68">
						<block pos:line="74" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="75" pos:column="57">TiXmlNode</name> <type:modifier pos:line="75" pos:column="67">*</type:modifier></type><name pos:line="75" pos:column="68">valueNode</name> <init pos:line="75" pos:column="78">= <expr><call><name><name pos:line="75" pos:column="80">grandChildNode</name><op:operator pos:line="75" pos:column="94">-&gt;</op:operator><name pos:line="75" pos:column="96">FirstChild</name></name><argument_list pos:line="75" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:line="76" pos:column="57">//putain, enfin!!!</comment>
							<if pos:line="77" pos:column="57">if <condition pos:line="77" pos:column="60">(<expr><name pos:line="77" pos:column="61">valueNode</name></expr>)</condition><then pos:line="77" pos:column="71">
							<block pos:line="78" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="79" pos:column="65">generic_string</name></type> <name pos:line="79" pos:column="80">locator</name> <init pos:line="79" pos:column="88">= <expr><name pos:line="79" pos:column="90">themeDir</name><op:operator pos:line="79" pos:column="98">?</op:operator><name pos:line="79" pos:column="99">themeDir</name><op:operator pos:line="79" pos:column="107">:</op:operator><call><name pos:line="79" pos:column="108">TEXT</name><argument_list pos:line="79" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="113">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								
								<expr_stmt><expr><name pos:line="81" pos:column="65">locator</name> <op:operator pos:line="81" pos:column="73">+=</op:operator> <call><name><name pos:line="81" pos:column="76">valueNode</name><op:operator pos:line="81" pos:column="85">-&gt;</op:operator><name pos:line="81" pos:column="87">Value</name></name><argument_list pos:line="81" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="82" pos:column="65">_customIconVect</name><op:operator pos:line="82" pos:column="80">.</op:operator><name pos:line="82" pos:column="81">push_back</name></name><argument_list pos:line="82" pos:column="90">(<argument><expr><call><name pos:line="82" pos:column="91">iconLocator</name><argument_list pos:line="82" pos:column="102">(<argument><expr><lit:literal type="number" pos:line="82" pos:column="103">1</lit:literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="106">iIcon</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="113">locator</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
						}</block></then></if>

						<expr_stmt><expr><name pos:line="86" pos:column="49">grandChildNode</name> <op:operator pos:line="86" pos:column="64">=</op:operator> <call><name><name pos:line="86" pos:column="66">childNode</name><op:operator pos:line="86" pos:column="75">-&gt;</op:operator><name pos:line="86" pos:column="77">FirstChildElement</name></name><argument_list pos:line="86" pos:column="94">(<argument><expr><call><name pos:line="86" pos:column="95">TEXT</name><argument_list pos:line="86" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="100">"disabled"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="87" pos:column="49">if <condition pos:line="87" pos:column="52">(<expr><name pos:line="87" pos:column="53">grandChildNode</name></expr>)</condition><then pos:line="87" pos:column="68">
						<block pos:line="88" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="89" pos:column="57">TiXmlNode</name> <type:modifier pos:line="89" pos:column="67">*</type:modifier></type><name pos:line="89" pos:column="68">valueNode</name> <init pos:line="89" pos:column="78">= <expr><call><name><name pos:line="89" pos:column="80">grandChildNode</name><op:operator pos:line="89" pos:column="94">-&gt;</op:operator><name pos:line="89" pos:column="96">FirstChild</name></name><argument_list pos:line="89" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:line="90" pos:column="57">//putain, enfin!!!</comment>
							<if pos:line="91" pos:column="57">if <condition pos:line="91" pos:column="60">(<expr><name pos:line="91" pos:column="61">valueNode</name></expr>)</condition><then pos:line="91" pos:column="71">
							<block pos:line="92" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="93" pos:column="65">generic_string</name></type> <name pos:line="93" pos:column="80">locator</name> <init pos:line="93" pos:column="88">= <expr><name pos:line="93" pos:column="90">themeDir</name><op:operator pos:line="93" pos:column="98">?</op:operator><name pos:line="93" pos:column="99">themeDir</name><op:operator pos:line="93" pos:column="107">:</op:operator><call><name pos:line="93" pos:column="108">TEXT</name><argument_list pos:line="93" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="113">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								
								<expr_stmt><expr><name pos:line="95" pos:column="65">locator</name> <op:operator pos:line="95" pos:column="73">+=</op:operator> <call><name><name pos:line="95" pos:column="76">valueNode</name><op:operator pos:line="95" pos:column="85">-&gt;</op:operator><name pos:line="95" pos:column="87">Value</name></name><argument_list pos:line="95" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="96" pos:column="65">_customIconVect</name><op:operator pos:line="96" pos:column="80">.</op:operator><name pos:line="96" pos:column="81">push_back</name></name><argument_list pos:line="96" pos:column="90">(<argument><expr><call><name pos:line="96" pos:column="91">iconLocator</name><argument_list pos:line="96" pos:column="102">(<argument><expr><lit:literal type="number" pos:line="96" pos:column="103">2</lit:literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="106">iIcon</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="113">locator</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
						}</block></then></if>
					}</block></then></if>
				}</block></for>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="106" pos:column="1">bool</name></type> <name><name pos:line="106" pos:column="6">ToolBar</name><op:operator pos:line="106" pos:column="13">::</op:operator><name pos:line="106" pos:column="15">init</name></name><parameter_list pos:line="106" pos:column="19">( <param><decl><type><name pos:line="106" pos:column="21">HINSTANCE</name></type> <name pos:line="106" pos:column="31">hInst</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="38">HWND</name></type> <name pos:line="106" pos:column="43">hPere</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="50">toolBarStatusType</name></type> <name pos:line="106" pos:column="68">type</name></decl></param>, 
					<param><decl><type><name pos:line="107" pos:column="41">ToolBarButtonUnit</name> <type:modifier pos:line="107" pos:column="59">*</type:modifier></type><name pos:line="107" pos:column="60">buttonUnitArray</name></decl></param>, <param><decl><type><name pos:line="107" pos:column="77">int</name></type> <name pos:line="107" pos:column="81">arraySize</name></decl></param>)</parameter_list>
<block pos:line="108" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="109" pos:column="9">Window</name><op:operator pos:line="109" pos:column="15">::</op:operator><name pos:line="109" pos:column="17">init</name></name><argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="29">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="110" pos:column="9">_state</name> <op:operator pos:line="110" pos:column="16">=</op:operator> <name pos:line="110" pos:column="18">type</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="111" pos:column="9">int</name></type> <name pos:line="111" pos:column="13">iconSize</name> <init pos:line="111" pos:column="22">= <expr><op:operator pos:line="111" pos:column="24">(</op:operator><name pos:line="111" pos:column="25">_state</name> <op:operator pos:line="111" pos:column="32">==</op:operator> <name pos:line="111" pos:column="35">TB_LARGE</name><op:operator pos:line="111" pos:column="43">?</op:operator><lit:literal type="number" pos:line="111" pos:column="44">32</lit:literal><op:operator pos:line="111" pos:column="46">:</op:operator><lit:literal type="number" pos:line="111" pos:column="47">16</lit:literal><op:operator pos:line="111" pos:column="49">)</op:operator></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="113" pos:column="9">_toolBarIcons</name><op:operator pos:line="113" pos:column="22">.</op:operator><name pos:line="113" pos:column="23">init</name></name><argument_list pos:line="113" pos:column="27">(<argument><expr><name pos:line="113" pos:column="28">buttonUnitArray</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="45">arraySize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="114" pos:column="9">_toolBarIcons</name><op:operator pos:line="114" pos:column="22">.</op:operator><name pos:line="114" pos:column="23">create</name></name><argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">_hInst</name></expr></argument>, <argument><expr><name pos:line="114" pos:column="38">iconSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="116" pos:column="9">INITCOMMONCONTROLSEX</name></type> <name pos:line="116" pos:column="30">icex</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="117" pos:column="9">icex</name><op:operator pos:line="117" pos:column="13">.</op:operator><name pos:line="117" pos:column="14">dwSize</name></name> <op:operator pos:line="117" pos:column="21">=</op:operator> <sizeof pos:line="117" pos:column="23">sizeof<argument_list pos:line="117" pos:column="29">(<argument><expr><name pos:line="117" pos:column="30">INITCOMMONCONTROLSEX</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="118" pos:column="9">icex</name><op:operator pos:line="118" pos:column="13">.</op:operator><name pos:line="118" pos:column="14">dwICC</name></name>  <op:operator pos:line="118" pos:column="21">=</op:operator> <name pos:line="118" pos:column="23">ICC_WIN95_CLASSES</name><op:operator pos:line="118" pos:column="40">|</op:operator><name pos:line="118" pos:column="41">ICC_COOL_CLASSES</name><op:operator pos:line="118" pos:column="57">|</op:operator><name pos:line="118" pos:column="58">ICC_BAR_CLASSES</name><op:operator pos:line="118" pos:column="73">|</op:operator><name pos:line="118" pos:column="74">ICC_USEREX_CLASSES</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">InitCommonControlsEx</name><argument_list pos:line="119" pos:column="29">(<argument><expr><op:operator pos:line="119" pos:column="30">&amp;</op:operator><name pos:line="119" pos:column="31">icex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="121" pos:column="9">//Create the list of buttons</comment>
	<expr_stmt><expr><name pos:line="122" pos:column="9">_nrButtons</name>    <op:operator pos:line="122" pos:column="23">=</op:operator> <name pos:line="122" pos:column="25">arraySize</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="123" pos:column="9">_nrDynButtons</name> <op:operator pos:line="123" pos:column="23">=</op:operator> <call><name><name pos:line="123" pos:column="25">_vDynBtnReg</name><op:operator pos:line="123" pos:column="36">.</op:operator><name pos:line="123" pos:column="37">size</name></name><argument_list pos:line="123" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="124" pos:column="9">_nrTotalButtons</name> <op:operator pos:line="124" pos:column="25">=</op:operator> <name pos:line="124" pos:column="27">_nrButtons</name> <op:operator pos:line="124" pos:column="38">+</op:operator> <op:operator pos:line="124" pos:column="40">(</op:operator><name pos:line="124" pos:column="41">_nrDynButtons</name> <op:operator pos:line="124" pos:column="55">?</op:operator> <name pos:line="124" pos:column="57">_nrDynButtons</name> <op:operator pos:line="124" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="124" pos:column="73">1</lit:literal> <op:operator pos:line="124" pos:column="75">:</op:operator> <lit:literal type="number" pos:line="124" pos:column="77">0</lit:literal><op:operator pos:line="124" pos:column="78">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="125" pos:column="9">_pTBB</name> <op:operator pos:line="125" pos:column="15">=</op:operator> <op:operator pos:line="125" pos:column="17">new</op:operator> <name><name pos:line="125" pos:column="21">TBBUTTON</name><index pos:line="125" pos:column="29">[<expr><name pos:line="125" pos:column="30">_nrTotalButtons</name></expr>]</index></name></expr>;</expr_stmt>	<comment type="line" pos:line="125" pos:column="49">//add one for the extra separator</comment>

	<decl_stmt><decl><type><name pos:line="127" pos:column="9">int</name></type> <name pos:line="127" pos:column="13">cmd</name> <init pos:line="127" pos:column="17">= <expr><lit:literal type="number" pos:line="127" pos:column="19">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">int</name></type> <name pos:line="128" pos:column="13">bmpIndex</name> <init pos:line="128" pos:column="22">= <expr><op:operator pos:line="128" pos:column="24">-</op:operator><lit:literal type="number" pos:line="128" pos:column="25">1</lit:literal></expr></init><op:operator pos:line="128" pos:column="26">,</op:operator> <name pos:line="128" pos:column="28">style</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="129" pos:column="9">size_t</name></type> <name pos:line="129" pos:column="16">i</name> <init pos:line="129" pos:column="18">= <expr><lit:literal type="number" pos:line="129" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="130" pos:column="9">for (<init pos:line="130" pos:column="14">;</init> <condition><expr><name pos:line="130" pos:column="16">i</name> <op:operator pos:line="130" pos:column="18">&lt;</op:operator> <name pos:line="130" pos:column="20">_nrButtons</name></expr> ;</condition> <incr><expr><name pos:line="130" pos:column="33">i</name><op:operator pos:line="130" pos:column="34">++</op:operator></expr></incr>)
	<block pos:line="131" pos:column="9">{
		<expr_stmt><expr><name pos:line="132" pos:column="17">cmd</name> <op:operator pos:line="132" pos:column="21">=</op:operator> <name><name pos:line="132" pos:column="23">buttonUnitArray</name><index pos:line="132" pos:column="38">[<expr><name pos:line="132" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="132" pos:column="41">.</op:operator><name pos:line="132" pos:column="42">_cmdID</name></expr>;</expr_stmt>
		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">cmd</name> <op:operator pos:line="133" pos:column="25">!=</op:operator> <lit:literal type="number" pos:line="133" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="133" pos:column="30">
		<block pos:line="134" pos:column="17">{
			<expr_stmt><expr><name pos:line="135" pos:column="25">bmpIndex</name><op:operator pos:line="135" pos:column="33">++</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="136" pos:column="25">style</name> <op:operator pos:line="136" pos:column="31">=</op:operator> <name pos:line="136" pos:column="33">BTNS_BUTTON</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="138" pos:column="17">else
		<block pos:line="139" pos:column="17">{
			<expr_stmt><expr><name pos:line="140" pos:column="25">style</name> <op:operator pos:line="140" pos:column="31">=</op:operator> <name pos:line="140" pos:column="33">BTNS_SEP</name></expr>;</expr_stmt>
		}</block></else></if>

		<expr_stmt><expr><name><name pos:line="143" pos:column="17">_pTBB</name><index pos:line="143" pos:column="22">[<expr><name pos:line="143" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="143" pos:column="25">.</op:operator><name pos:line="143" pos:column="26">iBitmap</name> <op:operator pos:line="143" pos:column="34">=</op:operator> <op:operator pos:line="143" pos:column="36">(</op:operator><name pos:line="143" pos:column="37">cmd</name> <op:operator pos:line="143" pos:column="41">!=</op:operator> <lit:literal type="number" pos:line="143" pos:column="44">0</lit:literal><op:operator pos:line="143" pos:column="45">?</op:operator><name pos:line="143" pos:column="46">bmpIndex</name><op:operator pos:line="143" pos:column="54">:</op:operator><lit:literal type="number" pos:line="143" pos:column="55">0</lit:literal><op:operator pos:line="143" pos:column="56">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="144" pos:column="17">_pTBB</name><index pos:line="144" pos:column="22">[<expr><name pos:line="144" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="144" pos:column="25">.</op:operator><name pos:line="144" pos:column="26">idCommand</name> <op:operator pos:line="144" pos:column="36">=</op:operator> <name pos:line="144" pos:column="38">cmd</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="145" pos:column="17">_pTBB</name><index pos:line="145" pos:column="22">[<expr><name pos:line="145" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="145" pos:column="25">.</op:operator><name pos:line="145" pos:column="26">fsState</name> <op:operator pos:line="145" pos:column="34">=</op:operator> <name pos:line="145" pos:column="36">TBSTATE_ENABLED</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="146" pos:column="17">_pTBB</name><index pos:line="146" pos:column="22">[<expr><name pos:line="146" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="146" pos:column="25">.</op:operator><name pos:line="146" pos:column="26">fsStyle</name> <op:operator pos:line="146" pos:column="34">=</op:operator> <op:operator pos:line="146" pos:column="36">(</op:operator><name pos:line="146" pos:column="37">BYTE</name><op:operator pos:line="146" pos:column="41">)</op:operator><name pos:line="146" pos:column="42">style</name></expr>;</expr_stmt> 
		<expr_stmt><expr><name><name pos:line="147" pos:column="17">_pTBB</name><index pos:line="147" pos:column="22">[<expr><name pos:line="147" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="147" pos:column="25">.</op:operator><name pos:line="147" pos:column="26">dwData</name> <op:operator pos:line="147" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="147" pos:column="35">0</lit:literal></expr>;</expr_stmt> 
		<expr_stmt><expr><name><name pos:line="148" pos:column="17">_pTBB</name><index pos:line="148" pos:column="22">[<expr><name pos:line="148" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="148" pos:column="25">.</op:operator><name pos:line="148" pos:column="26">iString</name> <op:operator pos:line="148" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="148" pos:column="36">0</lit:literal></expr>;</expr_stmt>
	}</block></for>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">_nrDynButtons</name> <op:operator pos:line="151" pos:column="27">&gt;</op:operator> <lit:literal type="number" pos:line="151" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="151" pos:column="31"> <block pos:line="151" pos:column="32">{
		<comment type="line" pos:line="152" pos:column="17">//add separator</comment>
		<expr_stmt><expr><name><name pos:line="153" pos:column="17">_pTBB</name><index pos:line="153" pos:column="22">[<expr><name pos:line="153" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="153" pos:column="25">.</op:operator><name pos:line="153" pos:column="26">iBitmap</name> <op:operator pos:line="153" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="153" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="154" pos:column="17">_pTBB</name><index pos:line="154" pos:column="22">[<expr><name pos:line="154" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="154" pos:column="25">.</op:operator><name pos:line="154" pos:column="26">idCommand</name> <op:operator pos:line="154" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="154" pos:column="38">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">_pTBB</name><index pos:line="155" pos:column="22">[<expr><name pos:line="155" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="155" pos:column="25">.</op:operator><name pos:line="155" pos:column="26">fsState</name> <op:operator pos:line="155" pos:column="34">=</op:operator> <name pos:line="155" pos:column="36">TBSTATE_ENABLED</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="156" pos:column="17">_pTBB</name><index pos:line="156" pos:column="22">[<expr><name pos:line="156" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="156" pos:column="25">.</op:operator><name pos:line="156" pos:column="26">fsStyle</name> <op:operator pos:line="156" pos:column="34">=</op:operator> <name pos:line="156" pos:column="36">BTNS_SEP</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="157" pos:column="17">_pTBB</name><index pos:line="157" pos:column="22">[<expr><name pos:line="157" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="157" pos:column="25">.</op:operator><name pos:line="157" pos:column="26">dwData</name> <op:operator pos:line="157" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="157" pos:column="35">0</lit:literal></expr>;</expr_stmt> 
		<expr_stmt><expr><name><name pos:line="158" pos:column="17">_pTBB</name><index pos:line="158" pos:column="22">[<expr><name pos:line="158" pos:column="23">i</name></expr>]</index></name><op:operator pos:line="158" pos:column="25">.</op:operator><name pos:line="158" pos:column="26">iString</name> <op:operator pos:line="158" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="158" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="159" pos:column="17">i</name><op:operator pos:line="159" pos:column="18">++</op:operator></expr>;</expr_stmt>
		<comment type="line" pos:line="160" pos:column="17">//add plugin buttons</comment>
		<for pos:line="161" pos:column="17">for (<init><decl><type><name pos:line="161" pos:column="22">size_t</name></type> <name pos:line="161" pos:column="29">j</name> <init pos:line="161" pos:column="31">= <expr><lit:literal type="number" pos:line="161" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="161" pos:column="36">j</name> <op:operator pos:line="161" pos:column="38">&lt;</op:operator> <name pos:line="161" pos:column="40">_nrDynButtons</name></expr> ;</condition> <incr><expr><name pos:line="161" pos:column="56">j</name><op:operator pos:line="161" pos:column="57">++</op:operator></expr><op:operator pos:line="161" pos:column="59">,</op:operator> <expr><name pos:line="161" pos:column="61">i</name><op:operator pos:line="161" pos:column="62">++</op:operator></expr></incr>)
		<block pos:line="162" pos:column="17">{
			<expr_stmt><expr><name pos:line="163" pos:column="25">cmd</name> <op:operator pos:line="163" pos:column="29">=</op:operator> <name><name pos:line="163" pos:column="31">_vDynBtnReg</name><index pos:line="163" pos:column="42">[<expr><name pos:line="163" pos:column="43">j</name></expr>]</index></name><op:operator pos:line="163" pos:column="45">.</op:operator><name pos:line="163" pos:column="46">message</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="164" pos:column="25">bmpIndex</name><op:operator pos:line="164" pos:column="33">++</op:operator></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="166" pos:column="25">_pTBB</name><index pos:line="166" pos:column="30">[<expr><name pos:line="166" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="166" pos:column="33">.</op:operator><name pos:line="166" pos:column="34">iBitmap</name> <op:operator pos:line="166" pos:column="42">=</op:operator> <name pos:line="166" pos:column="44">bmpIndex</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="167" pos:column="25">_pTBB</name><index pos:line="167" pos:column="30">[<expr><name pos:line="167" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="167" pos:column="33">.</op:operator><name pos:line="167" pos:column="34">idCommand</name> <op:operator pos:line="167" pos:column="44">=</op:operator> <name pos:line="167" pos:column="46">cmd</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="168" pos:column="25">_pTBB</name><index pos:line="168" pos:column="30">[<expr><name pos:line="168" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="168" pos:column="33">.</op:operator><name pos:line="168" pos:column="34">fsState</name> <op:operator pos:line="168" pos:column="42">=</op:operator> <name pos:line="168" pos:column="44">TBSTATE_ENABLED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="169" pos:column="25">_pTBB</name><index pos:line="169" pos:column="30">[<expr><name pos:line="169" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="169" pos:column="33">.</op:operator><name pos:line="169" pos:column="34">fsStyle</name> <op:operator pos:line="169" pos:column="42">=</op:operator> <name pos:line="169" pos:column="44">BTNS_BUTTON</name></expr>;</expr_stmt> 
			<expr_stmt><expr><name><name pos:line="170" pos:column="25">_pTBB</name><index pos:line="170" pos:column="30">[<expr><name pos:line="170" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="170" pos:column="33">.</op:operator><name pos:line="170" pos:column="34">dwData</name> <op:operator pos:line="170" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="170" pos:column="43">0</lit:literal></expr>;</expr_stmt> 
			<expr_stmt><expr><name><name pos:line="171" pos:column="25">_pTBB</name><index pos:line="171" pos:column="30">[<expr><name pos:line="171" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="171" pos:column="33">.</op:operator><name pos:line="171" pos:column="34">iString</name> <op:operator pos:line="171" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="171" pos:column="44">0</lit:literal></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="175" pos:column="9">reset</name><argument_list pos:line="175" pos:column="14">(<argument><expr><lit:literal type="boolean" pos:line="175" pos:column="15">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="175" pos:column="25">//load icons etc</comment>

	<return pos:line="177" pos:column="9">return <expr><lit:literal type="boolean" pos:line="177" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="180" pos:column="1">void</name></type> <name><name pos:line="180" pos:column="6">ToolBar</name><op:operator pos:line="180" pos:column="13">::</op:operator><name pos:line="180" pos:column="15">destroy</name></name><parameter_list pos:line="180" pos:column="22">()</parameter_list> <block pos:line="180" pos:column="25">{
	<if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">_pRebar</name></expr>)</condition><then pos:line="181" pos:column="21"> <block pos:line="181" pos:column="22">{
		<expr_stmt><expr><call><name><name pos:line="182" pos:column="17">_pRebar</name><op:operator pos:line="182" pos:column="24">-&gt;</op:operator><name pos:line="182" pos:column="26">removeBand</name></name><argument_list pos:line="182" pos:column="36">(<argument><expr><name><name pos:line="182" pos:column="37">_rbBand</name><op:operator pos:line="182" pos:column="44">.</op:operator><name pos:line="182" pos:column="45">wID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="183" pos:column="17">_pRebar</name> <op:operator pos:line="183" pos:column="25">=</op:operator> <name pos:line="183" pos:column="27">NULL</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><op:operator pos:line="185" pos:column="9">delete</op:operator> <index pos:line="185" pos:column="16">[]</index> <name pos:line="185" pos:column="19">_pTBB</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="186" pos:column="9">::</op:operator><name pos:line="186" pos:column="11">DestroyWindow</name></name><argument_list pos:line="186" pos:column="24">(<argument><expr><name pos:line="186" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="187" pos:column="9">_hSelf</name> <op:operator pos:line="187" pos:column="16">=</op:operator> <name pos:line="187" pos:column="18">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="188" pos:column="9">_toolBarIcons</name><op:operator pos:line="188" pos:column="22">.</op:operator><name pos:line="188" pos:column="23">destroy</name></name><argument_list pos:line="188" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
}</block></function><empty_stmt pos:line="189" pos:column="2">;</empty_stmt>

<function><type><name pos:line="191" pos:column="1">int</name></type> <name><name pos:line="191" pos:column="5">ToolBar</name><op:operator pos:line="191" pos:column="12">::</op:operator><name pos:line="191" pos:column="14">getWidth</name></name><parameter_list pos:line="191" pos:column="22">()</parameter_list> <specifier pos:line="191" pos:column="25">const</specifier> <block pos:line="191" pos:column="31">{
	<decl_stmt><decl><type><name pos:line="192" pos:column="9">RECT</name></type> <name pos:line="192" pos:column="14">btnRect</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="193" pos:column="9">int</name></type> <name pos:line="193" pos:column="13">totalWidth</name> <init pos:line="193" pos:column="24">= <expr><lit:literal type="number" pos:line="193" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="194" pos:column="9">for(<init><decl><type><name pos:line="194" pos:column="13">size_t</name></type> <name pos:line="194" pos:column="20">i</name> <init pos:line="194" pos:column="22">= <expr><lit:literal type="number" pos:line="194" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="194" pos:column="27">i</name> <op:operator pos:line="194" pos:column="29">&lt;</op:operator> <name pos:line="194" pos:column="31">_nrCurrentButtons</name></expr>;</condition> <incr><expr><name pos:line="194" pos:column="50">i</name><op:operator pos:line="194" pos:column="51">++</op:operator></expr></incr>) <block pos:line="194" pos:column="55">{
		<expr_stmt><expr><call><name><op:operator pos:line="195" pos:column="17">::</op:operator><name pos:line="195" pos:column="19">SendMessage</name></name><argument_list pos:line="195" pos:column="30">(<argument><expr><name pos:line="195" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="195" pos:column="39">TB_GETITEMRECT</name></expr></argument>, <argument><expr><name pos:line="195" pos:column="55">i</name></expr></argument>, <argument><expr><op:operator pos:line="195" pos:column="58">(</op:operator><name pos:line="195" pos:column="59">LPARAM</name><op:operator pos:line="195" pos:column="65">)</op:operator><op:operator pos:line="195" pos:column="66">&amp;</op:operator><name pos:line="195" pos:column="67">btnRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="196" pos:column="17">totalWidth</name> <op:operator pos:line="196" pos:column="28">+=</op:operator> <name><name pos:line="196" pos:column="31">btnRect</name><op:operator pos:line="196" pos:column="38">.</op:operator><name pos:line="196" pos:column="39">right</name></name> <op:operator pos:line="196" pos:column="45">-</op:operator> <name><name pos:line="196" pos:column="47">btnRect</name><op:operator pos:line="196" pos:column="54">.</op:operator><name pos:line="196" pos:column="55">left</name></name></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="198" pos:column="9">return <expr><name pos:line="198" pos:column="16">totalWidth</name></expr>;</return>
}</block></function>

<function><type><name pos:line="201" pos:column="1">int</name></type> <name><name pos:line="201" pos:column="5">ToolBar</name><op:operator pos:line="201" pos:column="12">::</op:operator><name pos:line="201" pos:column="14">getHeight</name></name><parameter_list pos:line="201" pos:column="23">()</parameter_list> <specifier pos:line="201" pos:column="26">const</specifier> <block pos:line="201" pos:column="32">{
	<decl_stmt><decl><type><name pos:line="202" pos:column="9">DWORD</name></type> <name pos:line="202" pos:column="15">size</name> <init pos:line="202" pos:column="20">= <expr><op:operator pos:line="202" pos:column="22">(</op:operator><name pos:line="202" pos:column="23">DWORD</name><op:operator pos:line="202" pos:column="28">)</op:operator><call><name pos:line="202" pos:column="29">SendMessage</name><argument_list pos:line="202" pos:column="40">(<argument><expr><name pos:line="202" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="49">TB_GETBUTTONSIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="203" pos:column="5">DWORD</name></type> <name pos:line="203" pos:column="11">padding</name> <init pos:line="203" pos:column="19">= <expr><op:operator pos:line="203" pos:column="21">(</op:operator><name pos:line="203" pos:column="22">DWORD</name><op:operator pos:line="203" pos:column="27">)</op:operator><call><name pos:line="203" pos:column="28">SendMessage</name><argument_list pos:line="203" pos:column="39">(<argument><expr><name pos:line="203" pos:column="40">_hSelf</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="48">TB_GETPADDING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="203" pos:column="63">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="203" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">int</name></type> <name pos:line="204" pos:column="13">totalHeight</name> <init pos:line="204" pos:column="25">= <expr><call><name pos:line="204" pos:column="27">HIWORD</name><argument_list pos:line="204" pos:column="33">(<argument><expr><name pos:line="204" pos:column="34">size</name></expr></argument>)</argument_list></call> <op:operator pos:line="204" pos:column="40">+</op:operator> <call><name pos:line="204" pos:column="42">HIWORD</name><argument_list pos:line="204" pos:column="48">(<argument><expr><name pos:line="204" pos:column="49">padding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<return pos:line="206" pos:column="9">return <expr><name pos:line="206" pos:column="16">totalHeight</name></expr>;</return>
}</block></function>

<function><type><name pos:line="209" pos:column="1">void</name></type> <name><name pos:line="209" pos:column="6">ToolBar</name><op:operator pos:line="209" pos:column="13">::</op:operator><name pos:line="209" pos:column="15">reset</name></name><parameter_list pos:line="209" pos:column="20">(<param><decl><type><name pos:line="209" pos:column="21">bool</name></type> <name pos:line="209" pos:column="26">create</name></decl></param>)</parameter_list> 
<block pos:line="210" pos:column="1">{

	<if pos:line="212" pos:column="9">if<condition pos:line="212" pos:column="11">(<expr><name pos:line="212" pos:column="12">create</name> <op:operator pos:line="212" pos:column="19">&amp;&amp;</op:operator> <name pos:line="212" pos:column="22">_hSelf</name></expr>)</condition><then pos:line="212" pos:column="29"> <block pos:line="212" pos:column="30">{
		<comment type="line" pos:line="213" pos:column="17">//Store current button state information</comment>
		<decl_stmt><decl><type><name pos:line="214" pos:column="17">TBBUTTON</name></type> <name pos:line="214" pos:column="26">tempBtn</name></decl>;</decl_stmt>
		<for pos:line="215" pos:column="17">for(<init><decl><type><name pos:line="215" pos:column="21">size_t</name></type> <name pos:line="215" pos:column="28">i</name> <init pos:line="215" pos:column="30">= <expr><lit:literal type="number" pos:line="215" pos:column="32">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="215" pos:column="35">i</name> <op:operator pos:line="215" pos:column="37">&lt;</op:operator> <name pos:line="215" pos:column="39">_nrCurrentButtons</name></expr>;</condition> <incr><expr><name pos:line="215" pos:column="58">i</name><op:operator pos:line="215" pos:column="59">++</op:operator></expr></incr>) <block pos:line="215" pos:column="63">{
			<expr_stmt><expr><call><name><op:operator pos:line="216" pos:column="25">::</op:operator><name pos:line="216" pos:column="27">SendMessage</name></name><argument_list pos:line="216" pos:column="38">(<argument><expr><name pos:line="216" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="216" pos:column="47">TB_GETBUTTON</name></expr></argument>, <argument><expr><op:operator pos:line="216" pos:column="61">(</op:operator><name pos:line="216" pos:column="62">WPARAM</name><op:operator pos:line="216" pos:column="68">)</op:operator><name pos:line="216" pos:column="69">i</name></expr></argument>, <argument><expr><op:operator pos:line="216" pos:column="72">(</op:operator><name pos:line="216" pos:column="73">LPARAM</name><op:operator pos:line="216" pos:column="79">)</op:operator><op:operator pos:line="216" pos:column="80">&amp;</op:operator><name pos:line="216" pos:column="81">tempBtn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="217" pos:column="25">_pTBB</name><index pos:line="217" pos:column="30">[<expr><name pos:line="217" pos:column="31">i</name></expr>]</index></name><op:operator pos:line="217" pos:column="33">.</op:operator><name pos:line="217" pos:column="34">fsState</name> <op:operator pos:line="217" pos:column="42">=</op:operator> <name><name pos:line="217" pos:column="44">tempBtn</name><op:operator pos:line="217" pos:column="51">.</op:operator><name pos:line="217" pos:column="52">fsState</name></name></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><op:operator pos:line="219" pos:column="17">::</op:operator><name pos:line="219" pos:column="19">DestroyWindow</name></name><argument_list pos:line="219" pos:column="32">(<argument><expr><name pos:line="219" pos:column="33">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="220" pos:column="17">_hSelf</name> <op:operator pos:line="220" pos:column="24">=</op:operator> <name pos:line="220" pos:column="26">NULL</name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="223" pos:column="9">if<condition pos:line="223" pos:column="11">(<expr><op:operator pos:line="223" pos:column="12">!</op:operator><name pos:line="223" pos:column="13">_hSelf</name></expr>)</condition><then pos:line="223" pos:column="20"> <block pos:line="223" pos:column="21">{
		<expr_stmt><expr><name pos:line="224" pos:column="17">_hSelf</name> <op:operator pos:line="224" pos:column="24">=</op:operator> <call><name><op:operator pos:line="224" pos:column="26">::</op:operator><name pos:line="224" pos:column="28">CreateWindowEx</name></name><argument_list pos:line="224" pos:column="42">(
					<argument><expr><name pos:line="225" pos:column="41">WS_EX_PALETTEWINDOW</name></expr></argument>,
					<argument><expr><name pos:line="226" pos:column="41">TOOLBARCLASSNAME</name></expr></argument>,
					<argument><expr><call><name pos:line="227" pos:column="41">TEXT</name><argument_list pos:line="227" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="227" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="228" pos:column="41">WS_TOOLBARSTYLE</name></expr></argument>,
					<argument><expr><lit:literal type="number" pos:line="229" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="229" pos:column="44">0</lit:literal></expr></argument>,
					<argument><expr><lit:literal type="number" pos:line="230" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="230" pos:column="44">0</lit:literal></expr></argument>,
					<argument><expr><name pos:line="231" pos:column="41">_hParent</name></expr></argument>,
					<argument><expr><name pos:line="232" pos:column="41">NULL</name></expr></argument>,
					<argument><expr><name pos:line="233" pos:column="41">_hInst</name></expr></argument>,
					<argument><expr><lit:literal type="number" pos:line="234" pos:column="41">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="235" pos:column="17">// Send the TB_BUTTONSTRUCTSIZE message, which is required for </comment>
		<comment type="line" pos:line="236" pos:column="17">// backward compatibility.</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="237" pos:column="17">::</op:operator><name pos:line="237" pos:column="19">SendMessage</name></name><argument_list pos:line="237" pos:column="30">(<argument><expr><name pos:line="237" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="237" pos:column="39">TB_BUTTONSTRUCTSIZE</name></expr></argument>, <argument><expr><op:operator pos:line="237" pos:column="60">(</op:operator><name pos:line="237" pos:column="61">WPARAM</name><op:operator pos:line="237" pos:column="67">)</op:operator><sizeof pos:line="237" pos:column="68">sizeof<argument_list pos:line="237" pos:column="74">(<argument><expr><name pos:line="237" pos:column="75">TBBUTTON</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><lit:literal type="number" pos:line="237" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="238" pos:column="17">::</op:operator><name pos:line="238" pos:column="19">SendMessage</name></name><argument_list pos:line="238" pos:column="30">(<argument><expr><name pos:line="238" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="238" pos:column="39">TB_SETEXTENDEDSTYLE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="238" pos:column="63">(</op:operator><name pos:line="238" pos:column="64">LPARAM</name><op:operator pos:line="238" pos:column="70">)</op:operator><name pos:line="238" pos:column="71">TBSTYLE_EX_HIDECLIPPEDBUTTONS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><op:operator pos:line="241" pos:column="13">!</op:operator><name pos:line="241" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="241" pos:column="21">
	<block pos:line="242" pos:column="9">{
		<throw pos:line="243" pos:column="17">throw <expr><call><name><name pos:line="243" pos:column="23">std</name><op:operator pos:line="243" pos:column="26">::</op:operator><name pos:line="243" pos:column="28">runtime_error</name></name><argument_list pos:line="243" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="243" pos:column="42">"ToolBar::reset : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><name pos:line="246" pos:column="13">_state</name> <op:operator pos:line="246" pos:column="20">!=</op:operator> <name pos:line="246" pos:column="23">TB_STANDARD</name></expr>)</condition><then pos:line="246" pos:column="35">
	<block pos:line="247" pos:column="9">{
		<comment type="line" pos:line="248" pos:column="17">//If non standard icons, use custom imagelists</comment>
		<expr_stmt><expr><call><name pos:line="249" pos:column="17">setDefaultImageList</name><argument_list pos:line="249" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="250" pos:column="17">setHotImageList</name><argument_list pos:line="250" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="251" pos:column="17">setDisableImageList</name><argument_list pos:line="251" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="253" pos:column="9">else
	<block pos:line="254" pos:column="9">{
		<comment type="line" pos:line="255" pos:column="17">//Else set the internal imagelist with standard bitmaps</comment>
		<decl_stmt><decl><type><name pos:line="256" pos:column="17">TBADDBITMAP</name></type> <name pos:line="256" pos:column="29">addbmp</name> <init pos:line="256" pos:column="36">= <expr><block pos:line="256" pos:column="38">{<expr><name pos:line="256" pos:column="39">_hInst</name></expr>, <expr><lit:literal type="number" pos:line="256" pos:column="47">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="257" pos:column="17">TBADDBITMAP</name></type> <name pos:line="257" pos:column="29">addbmpdyn</name> <init pos:line="257" pos:column="39">= <expr><block pos:line="257" pos:column="41">{<expr><lit:literal type="number" pos:line="257" pos:column="42">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="257" pos:column="45">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<for pos:line="258" pos:column="17">for (<init><decl><type><name pos:line="258" pos:column="22">size_t</name></type> <name pos:line="258" pos:column="29">i</name> <init pos:line="258" pos:column="31">= <expr><lit:literal type="number" pos:line="258" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="258" pos:column="37">i</name> <op:operator pos:line="258" pos:column="39">&lt;</op:operator> <name pos:line="258" pos:column="41">_nrButtons</name></expr> ;</condition> <incr><expr><name pos:line="258" pos:column="54">i</name><op:operator pos:line="258" pos:column="55">++</op:operator></expr></incr>)
		<block pos:line="259" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="260" pos:column="25">addbmp</name><op:operator pos:line="260" pos:column="31">.</op:operator><name pos:line="260" pos:column="32">nID</name></name> <op:operator pos:line="260" pos:column="36">=</op:operator> <call><name><name pos:line="260" pos:column="38">_toolBarIcons</name><op:operator pos:line="260" pos:column="51">.</op:operator><name pos:line="260" pos:column="52">getStdIconAt</name></name><argument_list pos:line="260" pos:column="64">(<argument><expr><name pos:line="260" pos:column="65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="261" pos:column="25">::</op:operator><name pos:line="261" pos:column="27">SendMessage</name></name><argument_list pos:line="261" pos:column="38">(<argument><expr><name pos:line="261" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="47">TB_ADDBITMAP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="261" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="261" pos:column="64">(</op:operator><name pos:line="261" pos:column="65">LPARAM</name><op:operator pos:line="261" pos:column="71">)</op:operator><op:operator pos:line="261" pos:column="72">&amp;</op:operator><name pos:line="261" pos:column="73">addbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<if pos:line="263" pos:column="17">if <condition pos:line="263" pos:column="20">(<expr><name pos:line="263" pos:column="21">_nrDynButtons</name> <op:operator pos:line="263" pos:column="35">&gt;</op:operator> <lit:literal type="number" pos:line="263" pos:column="37">0</lit:literal></expr>)</condition><then pos:line="263" pos:column="39"> <block pos:line="263" pos:column="40">{
			<for pos:line="264" pos:column="25">for (<init><decl><type><name pos:line="264" pos:column="30">size_t</name></type> <name pos:line="264" pos:column="37">j</name> <init pos:line="264" pos:column="39">= <expr><lit:literal type="number" pos:line="264" pos:column="41">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="264" pos:column="44">j</name> <op:operator pos:line="264" pos:column="46">&lt;</op:operator> <name pos:line="264" pos:column="48">_nrDynButtons</name></expr>;</condition> <incr><expr><name pos:line="264" pos:column="63">j</name><op:operator pos:line="264" pos:column="64">++</op:operator></expr></incr>)
			<block pos:line="265" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="266" pos:column="33">addbmpdyn</name><op:operator pos:line="266" pos:column="42">.</op:operator><name pos:line="266" pos:column="43">nID</name></name> <op:operator pos:line="266" pos:column="47">=</op:operator> <op:operator pos:line="266" pos:column="49">(</op:operator><name pos:line="266" pos:column="50">UINT_PTR</name><op:operator pos:line="266" pos:column="58">)</op:operator><call><name><name pos:line="266" pos:column="59">_vDynBtnReg</name><op:operator pos:line="266" pos:column="70">.</op:operator><name pos:line="266" pos:column="71">at</name></name><argument_list pos:line="266" pos:column="73">(<argument><expr><name pos:line="266" pos:column="74">j</name></expr></argument>)</argument_list></call><op:operator pos:line="266" pos:column="76">.</op:operator><name pos:line="266" pos:column="77">hBmp</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="267" pos:column="33">::</op:operator><name pos:line="267" pos:column="35">SendMessage</name></name><argument_list pos:line="267" pos:column="46">(<argument><expr><name pos:line="267" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="55">TB_ADDBITMAP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="267" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="267" pos:column="72">(</op:operator><name pos:line="267" pos:column="73">LPARAM</name><op:operator pos:line="267" pos:column="79">)</op:operator><op:operator pos:line="267" pos:column="80">&amp;</op:operator><name pos:line="267" pos:column="81">addbmpdyn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></then></if>
	}</block></else></if>

	<if pos:line="272" pos:column="9">if <condition pos:line="272" pos:column="12">(<expr><name pos:line="272" pos:column="13">create</name></expr>)</condition><then pos:line="272" pos:column="20"> <block pos:line="272" pos:column="21">{	<comment type="line" pos:line="272" pos:column="25">//if the toolbar has been recreated, readd the buttons</comment>
		<decl_stmt><decl><type><name pos:line="273" pos:column="17">size_t</name></type> <name pos:line="273" pos:column="24">nrBtnToAdd</name> <init pos:line="273" pos:column="35">= <expr><op:operator pos:line="273" pos:column="37">(</op:operator><name pos:line="273" pos:column="38">_state</name> <op:operator pos:line="273" pos:column="45">==</op:operator> <name pos:line="273" pos:column="48">TB_STANDARD</name><op:operator pos:line="273" pos:column="59">?</op:operator><name pos:line="273" pos:column="60">_nrTotalButtons</name><op:operator pos:line="273" pos:column="75">:</op:operator><name pos:line="273" pos:column="76">_nrButtons</name><op:operator pos:line="273" pos:column="86">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="274" pos:column="17">_nrCurrentButtons</name> <op:operator pos:line="274" pos:column="35">=</op:operator> <name pos:line="274" pos:column="37">nrBtnToAdd</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="275" pos:column="17">WORD</name></type> <name pos:line="275" pos:column="22">btnSize</name> <init pos:line="275" pos:column="30">= <expr><op:operator pos:line="275" pos:column="32">(</op:operator><name pos:line="275" pos:column="33">_state</name> <op:operator pos:line="275" pos:column="40">==</op:operator> <name pos:line="275" pos:column="43">TB_LARGE</name><op:operator pos:line="275" pos:column="51">?</op:operator><lit:literal type="number" pos:line="275" pos:column="52">32</lit:literal><op:operator pos:line="275" pos:column="54">:</op:operator><lit:literal type="number" pos:line="275" pos:column="55">16</lit:literal><op:operator pos:line="275" pos:column="57">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="276" pos:column="17">::</op:operator><name pos:line="276" pos:column="19">SendMessage</name></name><argument_list pos:line="276" pos:column="30">(<argument><expr><name pos:line="276" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="39">TB_SETBUTTONSIZE</name></expr></argument> , <argument><expr><op:operator pos:line="276" pos:column="58">(</op:operator><name pos:line="276" pos:column="59">WPARAM</name><op:operator pos:line="276" pos:column="65">)</op:operator><lit:literal type="number" pos:line="276" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="276" pos:column="69">(</op:operator><name pos:line="276" pos:column="70">LPARAM</name><op:operator pos:line="276" pos:column="76">)</op:operator><call><name pos:line="276" pos:column="77">MAKELONG</name> <argument_list pos:line="276" pos:column="86">(<argument><expr><name pos:line="276" pos:column="87">btnSize</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="96">btnSize</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="277" pos:column="17">::</op:operator><name pos:line="277" pos:column="19">SendMessage</name></name><argument_list pos:line="277" pos:column="30">(<argument><expr><name pos:line="277" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="39">TB_ADDBUTTONS</name></expr></argument>, <argument><expr><op:operator pos:line="277" pos:column="54">(</op:operator><name pos:line="277" pos:column="55">WPARAM</name><op:operator pos:line="277" pos:column="61">)</op:operator><name pos:line="277" pos:column="62">nrBtnToAdd</name></expr></argument>, <argument><expr><op:operator pos:line="277" pos:column="74">(</op:operator><name pos:line="277" pos:column="75">LPARAM</name><op:operator pos:line="277" pos:column="81">)</op:operator><name pos:line="277" pos:column="82">_pTBB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="279" pos:column="9">::</op:operator><name pos:line="279" pos:column="11">SendMessage</name></name><argument_list pos:line="279" pos:column="22">(<argument><expr><name pos:line="279" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="279" pos:column="31">TB_AUTOSIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="279" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="279" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">_pRebar</name></expr>)</condition><then pos:line="281" pos:column="21"> <block pos:line="281" pos:column="22">{
		<expr_stmt><expr><name><name pos:line="282" pos:column="17">_rbBand</name><op:operator pos:line="282" pos:column="24">.</op:operator><name pos:line="282" pos:column="25">hwndChild</name></name>	<op:operator pos:line="282" pos:column="41">=</op:operator> <call><name pos:line="282" pos:column="43">getHSelf</name><argument_list pos:line="282" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="283" pos:column="17">_rbBand</name><op:operator pos:line="283" pos:column="24">.</op:operator><name pos:line="283" pos:column="25">cxMinChild</name></name>	<op:operator pos:line="283" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="283" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="284" pos:column="17">_rbBand</name><op:operator pos:line="284" pos:column="24">.</op:operator><name pos:line="284" pos:column="25">cyIntegral</name></name>	<op:operator pos:line="284" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="284" pos:column="43">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="285" pos:column="17">_rbBand</name><op:operator pos:line="285" pos:column="24">.</op:operator><name pos:line="285" pos:column="25">cyMinChild</name></name>	<op:operator pos:line="285" pos:column="41">=</op:operator> <name><name pos:line="285" pos:column="43">_rbBand</name><op:operator pos:line="285" pos:column="50">.</op:operator><name pos:line="285" pos:column="51">cyMaxChild</name></name>	<op:operator pos:line="285" pos:column="65">=</op:operator> <call><name pos:line="285" pos:column="67">getHeight</name><argument_list pos:line="285" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="286" pos:column="17">_rbBand</name><op:operator pos:line="286" pos:column="24">.</op:operator><name pos:line="286" pos:column="25">cxIdeal</name></name>		<op:operator pos:line="286" pos:column="41">=</op:operator> <call><name pos:line="286" pos:column="43">getWidth</name><argument_list pos:line="286" pos:column="51">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="288" pos:column="17">_pRebar</name><op:operator pos:line="288" pos:column="24">-&gt;</op:operator><name pos:line="288" pos:column="26">reNew</name></name><argument_list pos:line="288" pos:column="31">(<argument><expr><name pos:line="288" pos:column="32">REBAR_BAR_TOOLBAR</name></expr></argument>, <argument><expr><op:operator pos:line="288" pos:column="51">&amp;</op:operator><name pos:line="288" pos:column="52">_rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="292" pos:column="1">void</name></type> <name><name pos:line="292" pos:column="6">ToolBar</name><op:operator pos:line="292" pos:column="13">::</op:operator><name pos:line="292" pos:column="15">registerDynBtn</name></name><parameter_list pos:line="292" pos:column="29">(<param><decl><type><name pos:line="292" pos:column="30">UINT</name></type> <name pos:line="292" pos:column="35">messageID</name></decl></param>, <param><decl><type><name pos:line="292" pos:column="46">toolbarIcons</name><type:modifier pos:line="292" pos:column="58">*</type:modifier></type> <name pos:line="292" pos:column="60">tIcon</name></decl></param>)</parameter_list>
<block pos:line="293" pos:column="1">{
	<comment type="line" pos:line="294" pos:column="9">// Note: Register of buttons only possible before init!</comment>
	<if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><op:operator pos:line="295" pos:column="13">(</op:operator><name pos:line="295" pos:column="14">_hSelf</name> <op:operator pos:line="295" pos:column="21">==</op:operator> <name pos:line="295" pos:column="24">NULL</name><op:operator pos:line="295" pos:column="28">)</op:operator> <op:operator pos:line="295" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="295" pos:column="33">(</op:operator><name pos:line="295" pos:column="34">messageID</name> <op:operator pos:line="295" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="295" pos:column="47">0</lit:literal><op:operator pos:line="295" pos:column="48">)</op:operator> <op:operator pos:line="295" pos:column="50">&amp;&amp;</op:operator> <op:operator pos:line="295" pos:column="53">(</op:operator><name><name pos:line="295" pos:column="54">tIcon</name><op:operator pos:line="295" pos:column="59">-&gt;</op:operator><name pos:line="295" pos:column="61">hToolbarBmp</name></name> <op:operator pos:line="295" pos:column="73">!=</op:operator> <name pos:line="295" pos:column="76">NULL</name><op:operator pos:line="295" pos:column="80">)</op:operator></expr>)</condition><then pos:line="295" pos:column="82">
	<block pos:line="296" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="297" pos:column="17">tDynamicList</name></type>		<name pos:line="297" pos:column="41">dynList</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="298" pos:column="17">dynList</name><op:operator pos:line="298" pos:column="24">.</op:operator><name pos:line="298" pos:column="25">message</name></name>		<op:operator pos:line="298" pos:column="41">=</op:operator> <name pos:line="298" pos:column="43">messageID</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="299" pos:column="17">dynList</name><op:operator pos:line="299" pos:column="24">.</op:operator><name pos:line="299" pos:column="25">hBmp</name></name>		<op:operator pos:line="299" pos:column="41">=</op:operator> <name><name pos:line="299" pos:column="43">tIcon</name><op:operator pos:line="299" pos:column="48">-&gt;</op:operator><name pos:line="299" pos:column="50">hToolbarBmp</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="300" pos:column="17">dynList</name><op:operator pos:line="300" pos:column="24">.</op:operator><name pos:line="300" pos:column="25">hIcon</name></name>		<op:operator pos:line="300" pos:column="41">=</op:operator> <name><name pos:line="300" pos:column="43">tIcon</name><op:operator pos:line="300" pos:column="48">-&gt;</op:operator><name pos:line="300" pos:column="50">hToolbarIcon</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="301" pos:column="17">_vDynBtnReg</name><op:operator pos:line="301" pos:column="28">.</op:operator><name pos:line="301" pos:column="29">push_back</name></name><argument_list pos:line="301" pos:column="38">(<argument><expr><name pos:line="301" pos:column="39">dynList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="305" pos:column="1">void</name></type> <name><name pos:line="305" pos:column="6">ToolBar</name><op:operator pos:line="305" pos:column="13">::</op:operator><name pos:line="305" pos:column="15">doPopop</name></name><parameter_list pos:line="305" pos:column="22">(<param><decl><type><name pos:line="305" pos:column="23">POINT</name></type> <name pos:line="305" pos:column="29">chevPoint</name></decl></param>)</parameter_list> <block pos:line="305" pos:column="40">{
	<comment type="line" pos:line="306" pos:column="9">//first find hidden buttons</comment>
	<decl_stmt><decl><type><name pos:line="307" pos:column="9">int</name></type> <name pos:line="307" pos:column="13">width</name> <init pos:line="307" pos:column="19">= <expr><call><name><name pos:line="307" pos:column="21">Window</name><op:operator pos:line="307" pos:column="27">::</op:operator><name pos:line="307" pos:column="29">getWidth</name></name><argument_list pos:line="307" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="309" pos:column="9">size_t</name></type> <name pos:line="309" pos:column="16">start</name> <init pos:line="309" pos:column="22">= <expr><lit:literal type="number" pos:line="309" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="310" pos:column="9">RECT</name></type> <name pos:line="310" pos:column="14">btnRect</name> <init pos:line="310" pos:column="22">= <expr><block pos:line="310" pos:column="24">{<expr><lit:literal type="number" pos:line="310" pos:column="25">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="310" pos:column="27">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="310" pos:column="29">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="310" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<while pos:line="311" pos:column="9">while<condition pos:line="311" pos:column="14">(<expr><name pos:line="311" pos:column="15">start</name> <op:operator pos:line="311" pos:column="21">&lt;</op:operator> <name pos:line="311" pos:column="23">_nrCurrentButtons</name></expr>)</condition> <block pos:line="311" pos:column="42">{
		<expr_stmt><expr><call><name><op:operator pos:line="312" pos:column="17">::</op:operator><name pos:line="312" pos:column="19">SendMessage</name></name><argument_list pos:line="312" pos:column="30">(<argument><expr><name pos:line="312" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="39">TB_GETITEMRECT</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="55">start</name></expr></argument>, <argument><expr><op:operator pos:line="312" pos:column="62">(</op:operator><name pos:line="312" pos:column="63">LPARAM</name><op:operator pos:line="312" pos:column="69">)</op:operator><op:operator pos:line="312" pos:column="70">&amp;</op:operator><name pos:line="312" pos:column="71">btnRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="313" pos:column="17">if<condition pos:line="313" pos:column="19">(<expr><name><name pos:line="313" pos:column="20">btnRect</name><op:operator pos:line="313" pos:column="27">.</op:operator><name pos:line="313" pos:column="28">right</name></name> <op:operator pos:line="313" pos:column="34">&gt;</op:operator> <name pos:line="313" pos:column="36">width</name></expr>)</condition><then pos:line="313" pos:column="42">
			<break pos:line="314" pos:column="25">break;</break></then></if>
		<expr_stmt><expr><name pos:line="315" pos:column="17">start</name><op:operator pos:line="315" pos:column="22">++</op:operator></expr>;</expr_stmt>
	}</block></while>

	<if pos:line="318" pos:column="9">if <condition pos:line="318" pos:column="12">(<expr><name pos:line="318" pos:column="13">start</name> <op:operator pos:line="318" pos:column="19">&lt;</op:operator> <name pos:line="318" pos:column="21">_nrCurrentButtons</name></expr>)</condition><then pos:line="318" pos:column="39"> <block pos:line="318" pos:column="40">{	<comment type="line" pos:line="318" pos:column="49">//some buttons are hidden</comment>
		<decl_stmt><decl><type><name pos:line="319" pos:column="17">HMENU</name></type> <name pos:line="319" pos:column="23">menu</name> <init pos:line="319" pos:column="28">= <expr><call><name><op:operator pos:line="319" pos:column="30">::</op:operator><name pos:line="319" pos:column="32">CreatePopupMenu</name></name><argument_list pos:line="319" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="320" pos:column="17">int</name></type> <name pos:line="320" pos:column="21">cmd</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="321" pos:column="17">generic_string</name></type> <name pos:line="321" pos:column="32">text</name></decl>;</decl_stmt>
		<while pos:line="322" pos:column="17">while <condition pos:line="322" pos:column="23">(<expr><name pos:line="322" pos:column="24">start</name> <op:operator pos:line="322" pos:column="30">&lt;</op:operator> <name pos:line="322" pos:column="32">_nrCurrentButtons</name></expr>)</condition> <block pos:line="322" pos:column="51">{
			<expr_stmt><expr><name pos:line="323" pos:column="25">cmd</name> <op:operator pos:line="323" pos:column="29">=</op:operator> <name><name pos:line="323" pos:column="31">_pTBB</name><index pos:line="323" pos:column="36">[<expr><name pos:line="323" pos:column="37">start</name></expr>]</index></name><op:operator pos:line="323" pos:column="43">.</op:operator><name pos:line="323" pos:column="44">idCommand</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="324" pos:column="25">getNameStrFromCmd</name><argument_list pos:line="324" pos:column="42">(<argument><expr><name pos:line="324" pos:column="43">cmd</name></expr></argument>, <argument><expr><name pos:line="324" pos:column="48">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="325" pos:column="25">if <condition pos:line="325" pos:column="28">(<expr><name><name pos:line="325" pos:column="29">_pTBB</name><index pos:line="325" pos:column="34">[<expr><name pos:line="325" pos:column="35">start</name></expr>]</index></name><op:operator pos:line="325" pos:column="41">.</op:operator><name pos:line="325" pos:column="42">idCommand</name> <op:operator pos:line="325" pos:column="52">!=</op:operator> <lit:literal type="number" pos:line="325" pos:column="55">0</lit:literal></expr>)</condition><then pos:line="325" pos:column="57"> <block pos:line="325" pos:column="58">{
				<if pos:line="326" pos:column="33">if <condition pos:line="326" pos:column="36">(<expr><call><name><op:operator pos:line="326" pos:column="37">::</op:operator><name pos:line="326" pos:column="39">SendMessage</name></name><argument_list pos:line="326" pos:column="50">(<argument><expr><name pos:line="326" pos:column="51">_hSelf</name></expr></argument>, <argument><expr><name pos:line="326" pos:column="59">TB_ISBUTTONENABLED</name></expr></argument>, <argument><expr><name pos:line="326" pos:column="79">cmd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="84">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="326" pos:column="87">!=</op:operator> <lit:literal type="number" pos:line="326" pos:column="90">0</lit:literal></expr>)</condition><then pos:line="326" pos:column="92">
					<expr_stmt><expr><call><name pos:line="327" pos:column="41">AppendMenu</name><argument_list pos:line="327" pos:column="51">(<argument><expr><name pos:line="327" pos:column="52">menu</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="58">MF_ENABLED</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="70">cmd</name></expr></argument>, <argument><expr><call><name><name pos:line="327" pos:column="75">text</name><op:operator pos:line="327" pos:column="79">.</op:operator><name pos:line="327" pos:column="80">c_str</name></name><argument_list pos:line="327" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="328" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="329" pos:column="41">AppendMenu</name><argument_list pos:line="329" pos:column="51">(<argument><expr><name pos:line="329" pos:column="52">menu</name></expr></argument>, <argument><expr><name pos:line="329" pos:column="58">MF_DISABLED</name><op:operator pos:line="329" pos:column="69">|</op:operator><name pos:line="329" pos:column="70">MF_GRAYED</name></expr></argument>, <argument><expr><name pos:line="329" pos:column="81">cmd</name></expr></argument>, <argument><expr><call><name><name pos:line="329" pos:column="86">text</name><op:operator pos:line="329" pos:column="90">.</op:operator><name pos:line="329" pos:column="91">c_str</name></name><argument_list pos:line="329" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then> <else pos:line="330" pos:column="27">else
				<expr_stmt><expr><call><name pos:line="331" pos:column="33">AppendMenu</name><argument_list pos:line="331" pos:column="43">(<argument><expr><name pos:line="331" pos:column="44">menu</name></expr></argument>, <argument><expr><name pos:line="331" pos:column="50">MF_SEPARATOR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="331" pos:column="64">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="331" pos:column="67">TEXT</name><argument_list pos:line="331" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="331" pos:column="72">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			<expr_stmt><expr><name pos:line="332" pos:column="25">start</name><op:operator pos:line="332" pos:column="30">++</op:operator></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><call><name pos:line="334" pos:column="17">TrackPopupMenu</name><argument_list pos:line="334" pos:column="31">(<argument><expr><name pos:line="334" pos:column="32">menu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="334" pos:column="38">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="41">chevPoint</name><op:operator pos:line="334" pos:column="50">.</op:operator><name pos:line="334" pos:column="51">x</name></name></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="54">chevPoint</name><op:operator pos:line="334" pos:column="63">.</op:operator><name pos:line="334" pos:column="64">y</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="334" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><name pos:line="334" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="334" pos:column="78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="338" pos:column="1">void</name></type> <name><name pos:line="338" pos:column="6">ToolBar</name><op:operator pos:line="338" pos:column="13">::</op:operator><name pos:line="338" pos:column="15">addToRebar</name></name><parameter_list pos:line="338" pos:column="25">(<param><decl><type><name pos:line="338" pos:column="26">ReBar</name> <type:modifier pos:line="338" pos:column="32">*</type:modifier></type> <name pos:line="338" pos:column="34">rebar</name></decl></param>)</parameter_list> 
<block pos:line="339" pos:column="1">{
	<if pos:line="340" pos:column="9">if <condition pos:line="340" pos:column="12">(<expr><name pos:line="340" pos:column="13">_pRebar</name></expr>)</condition><then pos:line="340" pos:column="21">
		<return pos:line="341" pos:column="17">return;</return></then></if>
	<expr_stmt><expr><name pos:line="342" pos:column="9">_pRebar</name> <op:operator pos:line="342" pos:column="17">=</op:operator> <name pos:line="342" pos:column="19">rebar</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="343" pos:column="9">ZeroMemory</name><argument_list pos:line="343" pos:column="19">(<argument><expr><op:operator pos:line="343" pos:column="20">&amp;</op:operator><name pos:line="343" pos:column="21">_rbBand</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="30">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="344" pos:column="9">_rbBand</name><op:operator pos:line="344" pos:column="16">.</op:operator><name pos:line="344" pos:column="17">cbSize</name></name>  <op:operator pos:line="344" pos:column="25">=</op:operator> <name pos:line="344" pos:column="27">REBARBAND_SIZE</name></expr>;</expr_stmt>


	<expr_stmt><expr><name><name pos:line="347" pos:column="9">_rbBand</name><op:operator pos:line="347" pos:column="16">.</op:operator><name pos:line="347" pos:column="17">fMask</name></name>   <op:operator pos:line="347" pos:column="25">=</op:operator> <name pos:line="347" pos:column="27">RBBIM_STYLE</name> <op:operator pos:line="347" pos:column="39">|</op:operator> <name pos:line="347" pos:column="41">RBBIM_CHILD</name> <op:operator pos:line="347" pos:column="53">|</op:operator> <name pos:line="347" pos:column="55">RBBIM_CHILDSIZE</name> <op:operator pos:line="347" pos:column="71">|</op:operator>
					  <name pos:line="348" pos:column="43">RBBIM_SIZE</name> <op:operator pos:line="348" pos:column="54">|</op:operator> <name pos:line="348" pos:column="56">RBBIM_IDEALSIZE</name> <op:operator pos:line="348" pos:column="72">|</op:operator> <name pos:line="348" pos:column="74">RBBIM_ID</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="350" pos:column="9">_rbBand</name><op:operator pos:line="350" pos:column="16">.</op:operator><name pos:line="350" pos:column="17">fStyle</name></name>		<op:operator pos:line="350" pos:column="33">=</op:operator> <name pos:line="350" pos:column="35">RBBS_VARIABLEHEIGHT</name> <op:operator pos:line="350" pos:column="55">|</op:operator> <name pos:line="350" pos:column="57">RBBS_USECHEVRON</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="351" pos:column="9">_rbBand</name><op:operator pos:line="351" pos:column="16">.</op:operator><name pos:line="351" pos:column="17">hwndChild</name></name>	<op:operator pos:line="351" pos:column="33">=</op:operator> <call><name pos:line="351" pos:column="35">getHSelf</name><argument_list pos:line="351" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="352" pos:column="9">_rbBand</name><op:operator pos:line="352" pos:column="16">.</op:operator><name pos:line="352" pos:column="17">wID</name></name>			<op:operator pos:line="352" pos:column="41">=</op:operator> <name pos:line="352" pos:column="43">REBAR_BAR_TOOLBAR</name></expr>;</expr_stmt>	<comment type="line" pos:line="352" pos:column="65">//ID REBAR_BAR_TOOLBAR for toolbar</comment>
	<expr_stmt><expr><name><name pos:line="353" pos:column="9">_rbBand</name><op:operator pos:line="353" pos:column="16">.</op:operator><name pos:line="353" pos:column="17">cxMinChild</name></name>	<op:operator pos:line="353" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="353" pos:column="35">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="354" pos:column="9">_rbBand</name><op:operator pos:line="354" pos:column="16">.</op:operator><name pos:line="354" pos:column="17">cyIntegral</name></name>	<op:operator pos:line="354" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="354" pos:column="35">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="355" pos:column="9">_rbBand</name><op:operator pos:line="355" pos:column="16">.</op:operator><name pos:line="355" pos:column="17">cyMinChild</name></name>	<op:operator pos:line="355" pos:column="33">=</op:operator> <name><name pos:line="355" pos:column="35">_rbBand</name><op:operator pos:line="355" pos:column="42">.</op:operator><name pos:line="355" pos:column="43">cyMaxChild</name></name>	<op:operator pos:line="355" pos:column="57">=</op:operator> <call><name pos:line="355" pos:column="59">getHeight</name><argument_list pos:line="355" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="356" pos:column="9">_rbBand</name><op:operator pos:line="356" pos:column="16">.</op:operator><name pos:line="356" pos:column="17">cxIdeal</name></name>		<op:operator pos:line="356" pos:column="33">=</op:operator> <name><name pos:line="356" pos:column="35">_rbBand</name><op:operator pos:line="356" pos:column="42">.</op:operator><name pos:line="356" pos:column="43">cx</name></name>			<op:operator pos:line="356" pos:column="65">=</op:operator> <call><name pos:line="356" pos:column="67">getWidth</name><argument_list pos:line="356" pos:column="75">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="358" pos:column="9">_pRebar</name><op:operator pos:line="358" pos:column="16">-&gt;</op:operator><name pos:line="358" pos:column="18">addBand</name></name><argument_list pos:line="358" pos:column="25">(<argument><expr><op:operator pos:line="358" pos:column="26">&amp;</op:operator><name pos:line="358" pos:column="27">_rbBand</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="358" pos:column="36">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="360" pos:column="9">_rbBand</name><op:operator pos:line="360" pos:column="16">.</op:operator><name pos:line="360" pos:column="17">fMask</name></name>   <op:operator pos:line="360" pos:column="25">=</op:operator> <name pos:line="360" pos:column="27">RBBIM_CHILD</name> <op:operator pos:line="360" pos:column="39">|</op:operator> <name pos:line="360" pos:column="41">RBBIM_CHILDSIZE</name> <op:operator pos:line="360" pos:column="57">|</op:operator> <name pos:line="360" pos:column="59">RBBIM_IDEALSIZE</name> <op:operator pos:line="360" pos:column="75">|</op:operator> <name pos:line="360" pos:column="77">RBBIM_SIZE</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="363" pos:column="1">void</name></type> <name><name pos:line="363" pos:column="6">ReBar</name><op:operator pos:line="363" pos:column="11">::</op:operator><name pos:line="363" pos:column="13">init</name></name><parameter_list pos:line="363" pos:column="17">(<param><decl><type><name pos:line="363" pos:column="18">HINSTANCE</name></type> <name pos:line="363" pos:column="28">hInst</name></decl></param>, <param><decl><type><name pos:line="363" pos:column="35">HWND</name></type> <name pos:line="363" pos:column="40">hPere</name></decl></param>)</parameter_list>
<block pos:line="364" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="365" pos:column="9">Window</name><op:operator pos:line="365" pos:column="15">::</op:operator><name pos:line="365" pos:column="17">init</name></name><argument_list pos:line="365" pos:column="21">(<argument><expr><name pos:line="365" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="29">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><name pos:line="367" pos:column="9">_hSelf</name> <op:operator pos:line="367" pos:column="16">=</op:operator> <call><name pos:line="367" pos:column="18">CreateWindowEx</name><argument_list pos:line="367" pos:column="32">(<argument><expr><name pos:line="367" pos:column="33">WS_EX_TOOLWINDOW</name></expr></argument>,
							<argument><expr><name pos:line="368" pos:column="57">REBARCLASSNAME</name></expr></argument>,
							<argument><expr><name pos:line="369" pos:column="57">NULL</name></expr></argument>,
							<argument><expr><name pos:line="370" pos:column="57">WS_CHILD</name><op:operator pos:line="370" pos:column="65">|</op:operator><name pos:line="370" pos:column="66">WS_VISIBLE</name><op:operator pos:line="370" pos:column="76">|</op:operator><name pos:line="370" pos:column="77">WS_CLIPSIBLINGS</name><op:operator pos:line="370" pos:column="92">|</op:operator><name pos:line="370" pos:column="93">WS_CLIPCHILDREN</name><op:operator pos:line="370" pos:column="108">|</op:operator><name pos:line="370" pos:column="109">RBS_VARHEIGHT</name><op:operator pos:line="370" pos:column="122">|</op:operator>
							<name pos:line="371" pos:column="57">RBS_BANDBORDERS</name> <op:operator pos:line="371" pos:column="73">|</op:operator> <name pos:line="371" pos:column="75">CCS_NODIVIDER</name> <op:operator pos:line="371" pos:column="89">|</op:operator> <name pos:line="371" pos:column="91">CCS_NOPARENTALIGN</name></expr></argument>,
							<argument><expr><lit:literal type="number" pos:line="372" pos:column="57">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="372" pos:column="59">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="372" pos:column="61">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="372" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name pos:line="372" pos:column="66">_hParent</name></expr></argument>, <argument><expr><name pos:line="372" pos:column="76">NULL</name></expr></argument>, <argument><expr><name pos:line="372" pos:column="82">_hInst</name></expr></argument>, <argument><expr><name pos:line="372" pos:column="90">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="374" pos:column="9">REBARINFO</name></type> <name pos:line="374" pos:column="19">rbi</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="375" pos:column="9">ZeroMemory</name><argument_list pos:line="375" pos:column="19">(<argument><expr><op:operator pos:line="375" pos:column="20">&amp;</op:operator><name pos:line="375" pos:column="21">rbi</name></expr></argument>, <argument><expr><sizeof pos:line="375" pos:column="26">sizeof<argument_list pos:line="375" pos:column="32">(<argument><expr><name pos:line="375" pos:column="33">REBARINFO</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="376" pos:column="9">rbi</name><op:operator pos:line="376" pos:column="12">.</op:operator><name pos:line="376" pos:column="13">cbSize</name></name> <op:operator pos:line="376" pos:column="20">=</op:operator> <sizeof pos:line="376" pos:column="22">sizeof<argument_list pos:line="376" pos:column="28">(<argument><expr><name pos:line="376" pos:column="29">REBARINFO</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="377" pos:column="9">rbi</name><op:operator pos:line="377" pos:column="12">.</op:operator><name pos:line="377" pos:column="13">fMask</name></name>  <op:operator pos:line="377" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="377" pos:column="22">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="378" pos:column="9">rbi</name><op:operator pos:line="378" pos:column="12">.</op:operator><name pos:line="378" pos:column="13">himl</name></name>   <op:operator pos:line="378" pos:column="20">=</op:operator> <op:operator pos:line="378" pos:column="22">(</op:operator><name pos:line="378" pos:column="23">HIMAGELIST</name><op:operator pos:line="378" pos:column="33">)</op:operator><name pos:line="378" pos:column="34">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="379" pos:column="9">::</op:operator><name pos:line="379" pos:column="11">SendMessage</name></name><argument_list pos:line="379" pos:column="22">(<argument><expr><name pos:line="379" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="379" pos:column="31">RB_SETBARINFO</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="379" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="379" pos:column="49">(</op:operator><name pos:line="379" pos:column="50">LPARAM</name><op:operator pos:line="379" pos:column="56">)</op:operator><op:operator pos:line="379" pos:column="57">&amp;</op:operator><name pos:line="379" pos:column="58">rbi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="382" pos:column="1">bool</name></type> <name><name pos:line="382" pos:column="6">ReBar</name><op:operator pos:line="382" pos:column="11">::</op:operator><name pos:line="382" pos:column="13">addBand</name></name><parameter_list pos:line="382" pos:column="20">(<param><decl><type><name pos:line="382" pos:column="21">REBARBANDINFO</name> <type:modifier pos:line="382" pos:column="35">*</type:modifier></type> <name pos:line="382" pos:column="37">rBand</name></decl></param>, <param><decl><type><name pos:line="382" pos:column="44">bool</name></type> <name pos:line="382" pos:column="49">useID</name></decl></param>)</parameter_list> 
<block pos:line="383" pos:column="1">{
	<if pos:line="384" pos:column="9">if <condition pos:line="384" pos:column="12">(<expr><name><name pos:line="384" pos:column="13">rBand</name><op:operator pos:line="384" pos:column="18">-&gt;</op:operator><name pos:line="384" pos:column="20">fMask</name></name> <op:operator pos:line="384" pos:column="26">&amp;</op:operator> <name pos:line="384" pos:column="28">RBBIM_STYLE</name></expr>)</condition><then pos:line="384" pos:column="40">
		<expr_stmt><expr><name><name pos:line="385" pos:column="17">rBand</name><op:operator pos:line="385" pos:column="22">-&gt;</op:operator><name pos:line="385" pos:column="24">fStyle</name></name> <op:operator pos:line="385" pos:column="31">|=</op:operator> <name pos:line="385" pos:column="34">RBBS_GRIPPERALWAYS</name></expr>;</expr_stmt></then>
	<else pos:line="386" pos:column="9">else
		<expr_stmt><expr><name><name pos:line="387" pos:column="17">rBand</name><op:operator pos:line="387" pos:column="22">-&gt;</op:operator><name pos:line="387" pos:column="24">fStyle</name></name> <op:operator pos:line="387" pos:column="31">=</op:operator> <name pos:line="387" pos:column="33">RBBS_GRIPPERALWAYS</name></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><name><name pos:line="388" pos:column="9">rBand</name><op:operator pos:line="388" pos:column="14">-&gt;</op:operator><name pos:line="388" pos:column="16">fMask</name></name> <op:operator pos:line="388" pos:column="22">|=</op:operator> <name pos:line="388" pos:column="25">RBBIM_ID</name> <op:operator pos:line="388" pos:column="34">|</op:operator> <name pos:line="388" pos:column="36">RBBIM_STYLE</name></expr>;</expr_stmt>
	<if pos:line="389" pos:column="9">if <condition pos:line="389" pos:column="12">(<expr><name pos:line="389" pos:column="13">useID</name></expr>)</condition><then pos:line="389" pos:column="19"> <block pos:line="389" pos:column="20">{
		<if pos:line="390" pos:column="17">if <condition pos:line="390" pos:column="20">(<expr><call><name pos:line="390" pos:column="21">isIDTaken</name><argument_list pos:line="390" pos:column="30">(<argument><expr><name><name pos:line="390" pos:column="31">rBand</name><op:operator pos:line="390" pos:column="36">-&gt;</op:operator><name pos:line="390" pos:column="38">wID</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="390" pos:column="43">
			<return pos:line="391" pos:column="25">return <expr><lit:literal type="boolean" pos:line="391" pos:column="32">false</lit:literal></expr>;</return></then></if>

	}</block></then> <else pos:line="393" pos:column="11">else <block pos:line="393" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="394" pos:column="17">rBand</name><op:operator pos:line="394" pos:column="22">-&gt;</op:operator><name pos:line="394" pos:column="24">wID</name></name> <op:operator pos:line="394" pos:column="28">=</op:operator> <call><name pos:line="394" pos:column="30">getNewID</name><argument_list pos:line="394" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><op:operator pos:line="396" pos:column="9">::</op:operator><name pos:line="396" pos:column="11">SendMessage</name></name><argument_list pos:line="396" pos:column="22">(<argument><expr><name pos:line="396" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="396" pos:column="31">RB_INSERTBAND</name></expr></argument>, <argument><expr><op:operator pos:line="396" pos:column="46">(</op:operator><name pos:line="396" pos:column="47">WPARAM</name><op:operator pos:line="396" pos:column="53">)</op:operator><op:operator pos:line="396" pos:column="54">-</op:operator><lit:literal type="number" pos:line="396" pos:column="55">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="396" pos:column="58">(</op:operator><name pos:line="396" pos:column="59">LPARAM</name><op:operator pos:line="396" pos:column="65">)</op:operator><name pos:line="396" pos:column="66">rBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="396" pos:column="81">//add to end of list</comment>
	<return pos:line="397" pos:column="9">return <expr><lit:literal type="boolean" pos:line="397" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="400" pos:column="1">void</name></type> <name><name pos:line="400" pos:column="6">ReBar</name><op:operator pos:line="400" pos:column="11">::</op:operator><name pos:line="400" pos:column="13">reNew</name></name><parameter_list pos:line="400" pos:column="18">(<param><decl><type><name pos:line="400" pos:column="19">int</name></type> <name pos:line="400" pos:column="23">id</name></decl></param>, <param><decl><type><name pos:line="400" pos:column="27">REBARBANDINFO</name> <type:modifier pos:line="400" pos:column="41">*</type:modifier></type> <name pos:line="400" pos:column="43">rBand</name></decl></param>)</parameter_list> 
<block pos:line="401" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="402" pos:column="9">int</name></type> <name pos:line="402" pos:column="13">index</name> <init pos:line="402" pos:column="19">= <expr><op:operator pos:line="402" pos:column="21">(</op:operator><name pos:line="402" pos:column="22">int</name><op:operator pos:line="402" pos:column="25">)</op:operator><call><name pos:line="402" pos:column="26">SendMessage</name><argument_list pos:line="402" pos:column="37">(<argument><expr><name pos:line="402" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="402" pos:column="46">RB_IDTOINDEX</name></expr></argument>, <argument><expr><op:operator pos:line="402" pos:column="60">(</op:operator><name pos:line="402" pos:column="61">WPARAM</name><op:operator pos:line="402" pos:column="67">)</op:operator><name pos:line="402" pos:column="68">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="402" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="403" pos:column="9">::</op:operator><name pos:line="403" pos:column="11">SendMessage</name></name><argument_list pos:line="403" pos:column="22">(<argument><expr><name pos:line="403" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="403" pos:column="31">RB_SETBANDINFO</name></expr></argument>, <argument><expr><op:operator pos:line="403" pos:column="47">(</op:operator><name pos:line="403" pos:column="48">WPARAM</name><op:operator pos:line="403" pos:column="54">)</op:operator><name pos:line="403" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="403" pos:column="62">(</op:operator><name pos:line="403" pos:column="63">LPARAM</name><op:operator pos:line="403" pos:column="69">)</op:operator><name pos:line="403" pos:column="70">rBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function><empty_stmt pos:line="404" pos:column="2">;</empty_stmt>

<function><type><name pos:line="406" pos:column="1">void</name></type> <name><name pos:line="406" pos:column="6">ReBar</name><op:operator pos:line="406" pos:column="11">::</op:operator><name pos:line="406" pos:column="13">removeBand</name></name><parameter_list pos:line="406" pos:column="23">(<param><decl><type><name pos:line="406" pos:column="24">int</name></type> <name pos:line="406" pos:column="28">id</name></decl></param>)</parameter_list> 
<block pos:line="407" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="408" pos:column="9">int</name></type> <name pos:line="408" pos:column="13">index</name> <init pos:line="408" pos:column="19">= <expr><op:operator pos:line="408" pos:column="21">(</op:operator><name pos:line="408" pos:column="22">int</name><op:operator pos:line="408" pos:column="25">)</op:operator><call><name pos:line="408" pos:column="26">SendMessage</name><argument_list pos:line="408" pos:column="37">(<argument><expr><name pos:line="408" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="408" pos:column="46">RB_IDTOINDEX</name></expr></argument>, <argument><expr><op:operator pos:line="408" pos:column="60">(</op:operator><name pos:line="408" pos:column="61">WPARAM</name><op:operator pos:line="408" pos:column="67">)</op:operator><name pos:line="408" pos:column="68">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="408" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="409" pos:column="9">if <condition pos:line="409" pos:column="12">(<expr><name pos:line="409" pos:column="13">id</name> <op:operator pos:line="409" pos:column="16">&gt;=</op:operator> <name pos:line="409" pos:column="19">REBAR_BAR_EXTERNAL</name></expr>)</condition><then pos:line="409" pos:column="38">
		<expr_stmt><expr><call><name pos:line="410" pos:column="17">releaseID</name><argument_list pos:line="410" pos:column="26">(<argument><expr><name pos:line="410" pos:column="27">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="411" pos:column="9">::</op:operator><name pos:line="411" pos:column="11">SendMessage</name></name><argument_list pos:line="411" pos:column="22">(<argument><expr><name pos:line="411" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="411" pos:column="31">RB_DELETEBAND</name></expr></argument>, <argument><expr><op:operator pos:line="411" pos:column="46">(</op:operator><name pos:line="411" pos:column="47">WPARAM</name><op:operator pos:line="411" pos:column="53">)</op:operator><name pos:line="411" pos:column="54">index</name></expr></argument>, <argument><expr><op:operator pos:line="411" pos:column="61">(</op:operator><name pos:line="411" pos:column="62">LPARAM</name><op:operator pos:line="411" pos:column="68">)</op:operator><lit:literal type="number" pos:line="411" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="414" pos:column="1">void</name></type> <name><name pos:line="414" pos:column="6">ReBar</name><op:operator pos:line="414" pos:column="11">::</op:operator><name pos:line="414" pos:column="13">setIDVisible</name></name><parameter_list pos:line="414" pos:column="25">(<param><decl><type><name pos:line="414" pos:column="26">int</name></type> <name pos:line="414" pos:column="30">id</name></decl></param>, <param><decl><type><name pos:line="414" pos:column="34">bool</name></type> <name pos:line="414" pos:column="39">show</name></decl></param>)</parameter_list> 
<block pos:line="415" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="416" pos:column="9">int</name></type> <name pos:line="416" pos:column="13">index</name> <init pos:line="416" pos:column="19">= <expr><op:operator pos:line="416" pos:column="21">(</op:operator><name pos:line="416" pos:column="22">int</name><op:operator pos:line="416" pos:column="25">)</op:operator><call><name pos:line="416" pos:column="26">SendMessage</name><argument_list pos:line="416" pos:column="37">(<argument><expr><name pos:line="416" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="46">RB_IDTOINDEX</name></expr></argument>, <argument><expr><op:operator pos:line="416" pos:column="60">(</op:operator><name pos:line="416" pos:column="61">WPARAM</name><op:operator pos:line="416" pos:column="67">)</op:operator><name pos:line="416" pos:column="68">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="416" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="417" pos:column="9">if <condition pos:line="417" pos:column="12">(<expr><name pos:line="417" pos:column="13">index</name> <op:operator pos:line="417" pos:column="19">==</op:operator> <op:operator pos:line="417" pos:column="22">-</op:operator><lit:literal type="number" pos:line="417" pos:column="23">1</lit:literal></expr> )</condition><then pos:line="417" pos:column="26">
		<return pos:line="418" pos:column="17">return;</return></then></if>	<comment type="line" pos:line="418" pos:column="25">//error</comment>

	<decl_stmt><decl><type><name pos:line="420" pos:column="9">REBARBANDINFO</name></type> <name pos:line="420" pos:column="23">rbBand</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="421" pos:column="9">ZeroMemory</name><argument_list pos:line="421" pos:column="19">(<argument><expr><op:operator pos:line="421" pos:column="20">&amp;</op:operator><name pos:line="421" pos:column="21">rbBand</name></expr></argument>, <argument><expr><name pos:line="421" pos:column="29">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="422" pos:column="9">rbBand</name><op:operator pos:line="422" pos:column="15">.</op:operator><name pos:line="422" pos:column="16">cbSize</name></name>  <op:operator pos:line="422" pos:column="24">=</op:operator> <name pos:line="422" pos:column="26">REBARBAND_SIZE</name></expr>;</expr_stmt>


	<expr_stmt><expr><name><name pos:line="425" pos:column="9">rbBand</name><op:operator pos:line="425" pos:column="15">.</op:operator><name pos:line="425" pos:column="16">fMask</name></name> <op:operator pos:line="425" pos:column="22">=</op:operator> <name pos:line="425" pos:column="24">RBBIM_STYLE</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="426" pos:column="9">::</op:operator><name pos:line="426" pos:column="11">SendMessage</name></name><argument_list pos:line="426" pos:column="22">(<argument><expr><name pos:line="426" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="426" pos:column="31">RB_GETBANDINFO</name></expr></argument>, <argument><expr><op:operator pos:line="426" pos:column="47">(</op:operator><name pos:line="426" pos:column="48">WPARAM</name><op:operator pos:line="426" pos:column="54">)</op:operator><name pos:line="426" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="426" pos:column="62">(</op:operator><name pos:line="426" pos:column="63">LPARAM</name><op:operator pos:line="426" pos:column="69">)</op:operator><op:operator pos:line="426" pos:column="70">&amp;</op:operator><name pos:line="426" pos:column="71">rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="427" pos:column="9">if <condition pos:line="427" pos:column="12">(<expr><name pos:line="427" pos:column="13">show</name></expr>)</condition><then pos:line="427" pos:column="18">
		<expr_stmt><expr><name><name pos:line="428" pos:column="17">rbBand</name><op:operator pos:line="428" pos:column="23">.</op:operator><name pos:line="428" pos:column="24">fStyle</name></name> <op:operator pos:line="428" pos:column="31">&amp;=</op:operator> <op:operator pos:line="428" pos:column="34">(</op:operator><name pos:line="428" pos:column="35">RBBS_HIDDEN</name> <op:operator pos:line="428" pos:column="47">^</op:operator> <op:operator pos:line="428" pos:column="49">-</op:operator><lit:literal type="number" pos:line="428" pos:column="50">1</lit:literal><op:operator pos:line="428" pos:column="51">)</op:operator></expr>;</expr_stmt></then>
	<else pos:line="429" pos:column="9">else
		<expr_stmt><expr><name><name pos:line="430" pos:column="17">rbBand</name><op:operator pos:line="430" pos:column="23">.</op:operator><name pos:line="430" pos:column="24">fStyle</name></name> <op:operator pos:line="430" pos:column="31">|=</op:operator> <name pos:line="430" pos:column="34">RBBS_HIDDEN</name></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><call><name><op:operator pos:line="431" pos:column="9">::</op:operator><name pos:line="431" pos:column="11">SendMessage</name></name><argument_list pos:line="431" pos:column="22">(<argument><expr><name pos:line="431" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="431" pos:column="31">RB_SETBANDINFO</name></expr></argument>, <argument><expr><op:operator pos:line="431" pos:column="47">(</op:operator><name pos:line="431" pos:column="48">WPARAM</name><op:operator pos:line="431" pos:column="54">)</op:operator><name pos:line="431" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="431" pos:column="62">(</op:operator><name pos:line="431" pos:column="63">LPARAM</name><op:operator pos:line="431" pos:column="69">)</op:operator><op:operator pos:line="431" pos:column="70">&amp;</op:operator><name pos:line="431" pos:column="71">rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="434" pos:column="1">bool</name></type> <name><name pos:line="434" pos:column="6">ReBar</name><op:operator pos:line="434" pos:column="11">::</op:operator><name pos:line="434" pos:column="13">getIDVisible</name></name><parameter_list pos:line="434" pos:column="25">(<param><decl><type><name pos:line="434" pos:column="26">int</name></type> <name pos:line="434" pos:column="30">id</name></decl></param>)</parameter_list>
<block pos:line="435" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="436" pos:column="9">int</name></type> <name pos:line="436" pos:column="13">index</name> <init pos:line="436" pos:column="19">= <expr><op:operator pos:line="436" pos:column="21">(</op:operator><name pos:line="436" pos:column="22">int</name><op:operator pos:line="436" pos:column="25">)</op:operator><call><name pos:line="436" pos:column="26">SendMessage</name><argument_list pos:line="436" pos:column="37">(<argument><expr><name pos:line="436" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="436" pos:column="46">RB_IDTOINDEX</name></expr></argument>, <argument><expr><op:operator pos:line="436" pos:column="60">(</op:operator><name pos:line="436" pos:column="61">WPARAM</name><op:operator pos:line="436" pos:column="67">)</op:operator><name pos:line="436" pos:column="68">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="436" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="437" pos:column="9">if <condition pos:line="437" pos:column="12">(<expr><name pos:line="437" pos:column="13">index</name> <op:operator pos:line="437" pos:column="19">==</op:operator> <op:operator pos:line="437" pos:column="22">-</op:operator><lit:literal type="number" pos:line="437" pos:column="23">1</lit:literal></expr> )</condition><then pos:line="437" pos:column="26">
		<return pos:line="438" pos:column="17">return <expr><lit:literal type="boolean" pos:line="438" pos:column="24">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="438" pos:column="33">//error</comment>
	<decl_stmt><decl><type><name pos:line="439" pos:column="9">REBARBANDINFO</name></type> <name pos:line="439" pos:column="23">rbBand</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="440" pos:column="9">ZeroMemory</name><argument_list pos:line="440" pos:column="19">(<argument><expr><op:operator pos:line="440" pos:column="20">&amp;</op:operator><name pos:line="440" pos:column="21">rbBand</name></expr></argument>, <argument><expr><name pos:line="440" pos:column="29">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="441" pos:column="9">rbBand</name><op:operator pos:line="441" pos:column="15">.</op:operator><name pos:line="441" pos:column="16">cbSize</name></name>  <op:operator pos:line="441" pos:column="24">=</op:operator> <name pos:line="441" pos:column="26">REBARBAND_SIZE</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="443" pos:column="9">rbBand</name><op:operator pos:line="443" pos:column="15">.</op:operator><name pos:line="443" pos:column="16">fMask</name></name> <op:operator pos:line="443" pos:column="22">=</op:operator> <name pos:line="443" pos:column="24">RBBIM_STYLE</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="444" pos:column="9">::</op:operator><name pos:line="444" pos:column="11">SendMessage</name></name><argument_list pos:line="444" pos:column="22">(<argument><expr><name pos:line="444" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="444" pos:column="31">RB_GETBANDINFO</name></expr></argument>, <argument><expr><op:operator pos:line="444" pos:column="47">(</op:operator><name pos:line="444" pos:column="48">WPARAM</name><op:operator pos:line="444" pos:column="54">)</op:operator><name pos:line="444" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="444" pos:column="62">(</op:operator><name pos:line="444" pos:column="63">LPARAM</name><op:operator pos:line="444" pos:column="69">)</op:operator><op:operator pos:line="444" pos:column="70">&amp;</op:operator><name pos:line="444" pos:column="71">rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="445" pos:column="9">return <expr><op:operator pos:line="445" pos:column="16">(</op:operator><op:operator pos:line="445" pos:column="17">(</op:operator><name><name pos:line="445" pos:column="18">rbBand</name><op:operator pos:line="445" pos:column="24">.</op:operator><name pos:line="445" pos:column="25">fStyle</name></name> <op:operator pos:line="445" pos:column="32">&amp;</op:operator> <name pos:line="445" pos:column="34">RBBS_HIDDEN</name><op:operator pos:line="445" pos:column="45">)</op:operator> <op:operator pos:line="445" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="445" pos:column="50">0</lit:literal><op:operator pos:line="445" pos:column="51">)</op:operator></expr>;</return>
}</block></function>


<function><type><name pos:line="449" pos:column="1">void</name></type> <name><name pos:line="449" pos:column="6">ReBar</name><op:operator pos:line="449" pos:column="11">::</op:operator><name pos:line="449" pos:column="13">setGrayBackground</name></name><parameter_list pos:line="449" pos:column="30">(<param><decl><type><name pos:line="449" pos:column="31">int</name></type> <name pos:line="449" pos:column="35">id</name></decl></param>)</parameter_list> 
<block pos:line="450" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="451" pos:column="9">int</name></type> <name pos:line="451" pos:column="13">index</name> <init pos:line="451" pos:column="19">= <expr><op:operator pos:line="451" pos:column="21">(</op:operator><name pos:line="451" pos:column="22">int</name><op:operator pos:line="451" pos:column="25">)</op:operator><call><name pos:line="451" pos:column="26">SendMessage</name><argument_list pos:line="451" pos:column="37">(<argument><expr><name pos:line="451" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="451" pos:column="46">RB_IDTOINDEX</name></expr></argument>, <argument><expr><op:operator pos:line="451" pos:column="60">(</op:operator><name pos:line="451" pos:column="61">WPARAM</name><op:operator pos:line="451" pos:column="67">)</op:operator><name pos:line="451" pos:column="68">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="451" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="452" pos:column="9">if <condition pos:line="452" pos:column="12">(<expr><name pos:line="452" pos:column="13">index</name> <op:operator pos:line="452" pos:column="19">==</op:operator> <op:operator pos:line="452" pos:column="22">-</op:operator><lit:literal type="number" pos:line="452" pos:column="23">1</lit:literal></expr> )</condition><then pos:line="452" pos:column="26">
		<return pos:line="453" pos:column="17">return;</return></then></if>	<comment type="line" pos:line="453" pos:column="25">//error</comment>
	<decl_stmt><decl><type><name pos:line="454" pos:column="9">REBARBANDINFO</name></type> <name pos:line="454" pos:column="23">rbBand</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="455" pos:column="9">ZeroMemory</name><argument_list pos:line="455" pos:column="19">(<argument><expr><op:operator pos:line="455" pos:column="20">&amp;</op:operator><name pos:line="455" pos:column="21">rbBand</name></expr></argument>, <argument><expr><name pos:line="455" pos:column="29">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="456" pos:column="9">rbBand</name><op:operator pos:line="456" pos:column="15">.</op:operator><name pos:line="456" pos:column="16">cbSize</name></name>  <op:operator pos:line="456" pos:column="24">=</op:operator> <name pos:line="456" pos:column="26">REBARBAND_SIZE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="457" pos:column="9">rbBand</name><op:operator pos:line="457" pos:column="15">.</op:operator><name pos:line="457" pos:column="16">fMask</name></name> <op:operator pos:line="457" pos:column="22">=</op:operator> <name pos:line="457" pos:column="24">RBBIM_BACKGROUND</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="458" pos:column="9">rbBand</name><op:operator pos:line="458" pos:column="15">.</op:operator><name pos:line="458" pos:column="16">hbmBack</name></name> <op:operator pos:line="458" pos:column="24">=</op:operator> <call><name pos:line="458" pos:column="26">LoadBitmap</name><argument_list pos:line="458" pos:column="36">(<argument><expr><op:operator pos:line="458" pos:column="37">(</op:operator><name pos:line="458" pos:column="38">HINSTANCE</name><op:operator pos:line="458" pos:column="47">)</op:operator><call><name><op:operator pos:line="458" pos:column="48">::</op:operator><name pos:line="458" pos:column="50">GetModuleHandle</name></name><argument_list pos:line="458" pos:column="65">(<argument><expr><name pos:line="458" pos:column="66">NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="458" pos:column="73">MAKEINTRESOURCE</name><argument_list pos:line="458" pos:column="88">(<argument><expr><name pos:line="458" pos:column="89">IDB_INCREMENTAL_BG</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="459" pos:column="9">::</op:operator><name pos:line="459" pos:column="11">SendMessage</name></name><argument_list pos:line="459" pos:column="22">(<argument><expr><name pos:line="459" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="459" pos:column="31">RB_SETBANDINFO</name></expr></argument>, <argument><expr><op:operator pos:line="459" pos:column="47">(</op:operator><name pos:line="459" pos:column="48">WPARAM</name><op:operator pos:line="459" pos:column="54">)</op:operator><name pos:line="459" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="459" pos:column="62">(</op:operator><name pos:line="459" pos:column="63">LPARAM</name><op:operator pos:line="459" pos:column="69">)</op:operator><op:operator pos:line="459" pos:column="70">&amp;</op:operator><name pos:line="459" pos:column="71">rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="462" pos:column="1">int</name></type> <name><name pos:line="462" pos:column="5">ReBar</name><op:operator pos:line="462" pos:column="10">::</op:operator><name pos:line="462" pos:column="12">getNewID</name></name><parameter_list pos:line="462" pos:column="20">()</parameter_list>
<block pos:line="463" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="464" pos:column="9">int</name></type> <name pos:line="464" pos:column="13">idToUse</name> <init pos:line="464" pos:column="21">= <expr><name pos:line="464" pos:column="23">REBAR_BAR_EXTERNAL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="465" pos:column="9">int</name></type> <name pos:line="465" pos:column="13">curVal</name> <init pos:line="465" pos:column="20">= <expr><lit:literal type="number" pos:line="465" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="466" pos:column="9">size_t</name></type> <name pos:line="466" pos:column="16">size</name> <init pos:line="466" pos:column="21">= <expr><call><name><name pos:line="466" pos:column="23">usedIDs</name><op:operator pos:line="466" pos:column="30">.</op:operator><name pos:line="466" pos:column="31">size</name></name><argument_list pos:line="466" pos:column="35">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="467" pos:column="9">for(<init><decl><type><name pos:line="467" pos:column="13">size_t</name></type> <name pos:line="467" pos:column="20">i</name> <init pos:line="467" pos:column="22">= <expr><lit:literal type="number" pos:line="467" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="467" pos:column="27">i</name> <op:operator pos:line="467" pos:column="29">&lt;</op:operator> <name pos:line="467" pos:column="31">size</name></expr>;</condition> <incr><expr><name pos:line="467" pos:column="37">i</name><op:operator pos:line="467" pos:column="38">++</op:operator></expr></incr>)
	<block pos:line="468" pos:column="9">{
		<expr_stmt><expr><name pos:line="469" pos:column="17">curVal</name> <op:operator pos:line="469" pos:column="24">=</op:operator> <call><name><name pos:line="469" pos:column="26">usedIDs</name><op:operator pos:line="469" pos:column="33">.</op:operator><name pos:line="469" pos:column="34">at</name></name><argument_list pos:line="469" pos:column="36">(<argument><expr><name pos:line="469" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="470" pos:column="17">if <condition pos:line="470" pos:column="20">(<expr><name pos:line="470" pos:column="21">curVal</name> <op:operator pos:line="470" pos:column="28">&lt;</op:operator> <name pos:line="470" pos:column="30">idToUse</name></expr>)</condition><then pos:line="470" pos:column="38">
		<block pos:line="471" pos:column="17">{
			<continue pos:line="472" pos:column="25">continue;</continue>
		}</block></then>
		<else pos:line="474" pos:column="17">else <if pos:line="474" pos:column="22">if <condition pos:line="474" pos:column="25">(<expr><name pos:line="474" pos:column="26">curVal</name> <op:operator pos:line="474" pos:column="33">==</op:operator> <name pos:line="474" pos:column="36">idToUse</name></expr>)</condition><then pos:line="474" pos:column="44">
		<block pos:line="475" pos:column="17">{
			<expr_stmt><expr><name pos:line="476" pos:column="25">idToUse</name><op:operator pos:line="476" pos:column="32">++</op:operator></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="478" pos:column="17">else
		<block pos:line="479" pos:column="17">{
			<break pos:line="480" pos:column="25">break;</break>		<comment type="line" pos:line="480" pos:column="41">//found gap</comment>
		}</block></else></if></else></if>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="484" pos:column="9">usedIDs</name><op:operator pos:line="484" pos:column="16">.</op:operator><name pos:line="484" pos:column="17">push_back</name></name><argument_list pos:line="484" pos:column="26">(<argument><expr><name pos:line="484" pos:column="27">idToUse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="485" pos:column="9">return <expr><name pos:line="485" pos:column="16">idToUse</name></expr>;</return>
}</block></function>

<function><type><name pos:line="488" pos:column="1">void</name></type> <name><name pos:line="488" pos:column="6">ReBar</name><op:operator pos:line="488" pos:column="11">::</op:operator><name pos:line="488" pos:column="13">releaseID</name></name><parameter_list pos:line="488" pos:column="22">(<param><decl><type><name pos:line="488" pos:column="23">int</name></type> <name pos:line="488" pos:column="27">id</name></decl></param>)</parameter_list>
<block pos:line="489" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="490" pos:column="9">size_t</name></type> <name pos:line="490" pos:column="16">size</name> <init pos:line="490" pos:column="21">= <expr><call><name><name pos:line="490" pos:column="23">usedIDs</name><op:operator pos:line="490" pos:column="30">.</op:operator><name pos:line="490" pos:column="31">size</name></name><argument_list pos:line="490" pos:column="35">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="491" pos:column="9">for(<init><decl><type><name pos:line="491" pos:column="13">size_t</name></type> <name pos:line="491" pos:column="20">i</name> <init pos:line="491" pos:column="22">= <expr><lit:literal type="number" pos:line="491" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="491" pos:column="27">i</name> <op:operator pos:line="491" pos:column="29">&lt;</op:operator> <name pos:line="491" pos:column="31">size</name></expr>;</condition> <incr><expr><name pos:line="491" pos:column="37">i</name><op:operator pos:line="491" pos:column="38">++</op:operator></expr></incr>)
	<block pos:line="492" pos:column="9">{
		<if pos:line="493" pos:column="17">if <condition pos:line="493" pos:column="20">(<expr><call><name><name pos:line="493" pos:column="21">usedIDs</name><op:operator pos:line="493" pos:column="28">.</op:operator><name pos:line="493" pos:column="29">at</name></name><argument_list pos:line="493" pos:column="31">(<argument><expr><name pos:line="493" pos:column="32">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="493" pos:column="35">==</op:operator> <name pos:line="493" pos:column="38">id</name></expr>)</condition><then pos:line="493" pos:column="41">
		<block pos:line="494" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="495" pos:column="25">usedIDs</name><op:operator pos:line="495" pos:column="32">.</op:operator><name pos:line="495" pos:column="33">erase</name></name><argument_list pos:line="495" pos:column="38">(<argument><expr><call><name><name pos:line="495" pos:column="39">usedIDs</name><op:operator pos:line="495" pos:column="46">.</op:operator><name pos:line="495" pos:column="47">begin</name></name><argument_list pos:line="495" pos:column="52">()</argument_list></call><op:operator pos:line="495" pos:column="54">+</op:operator><name pos:line="495" pos:column="55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="496" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="501" pos:column="1">bool</name></type> <name><name pos:line="501" pos:column="6">ReBar</name><op:operator pos:line="501" pos:column="11">::</op:operator><name pos:line="501" pos:column="13">isIDTaken</name></name><parameter_list pos:line="501" pos:column="22">(<param><decl><type><name pos:line="501" pos:column="23">int</name></type> <name pos:line="501" pos:column="27">id</name></decl></param>)</parameter_list>
<block pos:line="502" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="503" pos:column="9">size_t</name></type> <name pos:line="503" pos:column="16">size</name> <init pos:line="503" pos:column="21">= <expr><call><name><name pos:line="503" pos:column="23">usedIDs</name><op:operator pos:line="503" pos:column="30">.</op:operator><name pos:line="503" pos:column="31">size</name></name><argument_list pos:line="503" pos:column="35">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="504" pos:column="9">for(<init><decl><type><name pos:line="504" pos:column="13">size_t</name></type> <name pos:line="504" pos:column="20">i</name> <init pos:line="504" pos:column="22">= <expr><lit:literal type="number" pos:line="504" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="504" pos:column="27">i</name> <op:operator pos:line="504" pos:column="29">&lt;</op:operator> <name pos:line="504" pos:column="31">size</name></expr>;</condition> <incr><expr><name pos:line="504" pos:column="37">i</name><op:operator pos:line="504" pos:column="38">++</op:operator></expr></incr>)
	<block pos:line="505" pos:column="9">{
		<if pos:line="506" pos:column="17">if <condition pos:line="506" pos:column="20">(<expr><call><name><name pos:line="506" pos:column="21">usedIDs</name><op:operator pos:line="506" pos:column="28">.</op:operator><name pos:line="506" pos:column="29">at</name></name><argument_list pos:line="506" pos:column="31">(<argument><expr><name pos:line="506" pos:column="32">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="506" pos:column="35">==</op:operator> <name pos:line="506" pos:column="38">id</name></expr>)</condition><then pos:line="506" pos:column="41">
		<block pos:line="507" pos:column="17">{
			<return pos:line="508" pos:column="25">return <expr><lit:literal type="boolean" pos:line="508" pos:column="32">true</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="511" pos:column="9">return <expr><lit:literal type="boolean" pos:line="511" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

</unit>
