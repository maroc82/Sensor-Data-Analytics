<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ColourPicker\ColourPicker.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">COLOUR_PICKER_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">COLOUR_PICKER_H</name></cpp:macro></cpp:define>

<class_decl pos:line="32" pos:column="1">class <name pos:line="32" pos:column="7">ColourPopup</name>;</class_decl>

<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">CPN_COLOURPICKED</name></cpp:macro> <cpp:value pos:line="34" pos:column="26">(BN_CLICKED)</cpp:value></cpp:define>

<class pos:line="36" pos:column="1">class <name pos:line="36" pos:column="7">ColourPicker</name> <super pos:line="36" pos:column="20">: <specifier pos:line="36" pos:column="22">public</specifier> <name pos:line="36" pos:column="29">Window</name></super>
<block pos:line="37" pos:column="1">{<private type="default" pos:line="37" pos:column="2">
</private><public pos:line="38" pos:column="1">public :
	<constructor><name pos:line="39" pos:column="9">ColourPicker</name><parameter_list pos:line="39" pos:column="21">()</parameter_list> <member_list pos:line="39" pos:column="24">: <call><name pos:line="39" pos:column="26">Window</name><argument_list pos:line="39" pos:column="32">()</argument_list></call><op:operator pos:line="39" pos:column="34">,</op:operator>  <call><name pos:line="39" pos:column="37">_currentColour</name><argument_list pos:line="39" pos:column="51">(<argument><expr><call><name pos:line="39" pos:column="52">RGB</name><argument_list pos:line="39" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="56">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="62">0x00</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="68">0x00</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="74">,</op:operator> <call><name pos:line="39" pos:column="76">_pColourPopup</name><argument_list pos:line="39" pos:column="89">(<argument><expr><name pos:line="39" pos:column="90">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="95">,</op:operator> <call><name pos:line="39" pos:column="97">_isEnabled</name><argument_list pos:line="39" pos:column="107">(<argument><expr><lit:literal type="boolean" pos:line="39" pos:column="108">true</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="39" pos:column="114">{}</block></constructor><empty_stmt pos:line="39" pos:column="116">;</empty_stmt>
    <destructor><name pos:line="40" pos:column="5">~<name pos:line="40" pos:column="6">ColourPicker</name></name><parameter_list pos:line="40" pos:column="18">()</parameter_list><block pos:line="40" pos:column="20">{}</block></destructor><empty_stmt pos:line="40" pos:column="22">;</empty_stmt>
	<function_decl><type><specifier pos:line="41" pos:column="9">virtual</specifier> <name pos:line="41" pos:column="17">void</name></type> <name pos:line="41" pos:column="22">init</name><parameter_list pos:line="41" pos:column="26">(<param><decl><type><name pos:line="41" pos:column="27">HINSTANCE</name></type> <name pos:line="41" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="44">HWND</name></type> <name pos:line="41" pos:column="49">parent</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="42" pos:column="9">virtual</specifier> <name pos:line="42" pos:column="17">void</name></type> <name pos:line="42" pos:column="22">destroy</name><parameter_list pos:line="42" pos:column="29">()</parameter_list>;</function_decl>
    <function><type><name pos:line="43" pos:column="5">void</name></type> <name pos:line="43" pos:column="10">setColour</name><parameter_list pos:line="43" pos:column="19">(<param><decl><type><name pos:line="43" pos:column="20">COLORREF</name></type> <name pos:line="43" pos:column="29">c</name></decl></param>)</parameter_list> <block pos:line="43" pos:column="32">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">_currentColour</name> <op:operator pos:line="44" pos:column="24">=</op:operator> <name pos:line="44" pos:column="26">c</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="45" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="47" pos:column="9">COLORREF</name></type> <name pos:line="47" pos:column="18">getColour</name><parameter_list pos:line="47" pos:column="27">()</parameter_list> <specifier pos:line="47" pos:column="30">const</specifier> <block pos:line="47" pos:column="36">{<return pos:line="47" pos:column="37">return <expr><name pos:line="47" pos:column="44">_currentColour</name></expr>;</return>}</block></function><empty_stmt pos:line="47" pos:column="60">;</empty_stmt>
	<function><type><name pos:line="48" pos:column="9">bool</name></type> <name pos:line="48" pos:column="14">isEnabled</name><parameter_list pos:line="48" pos:column="23">()</parameter_list> <block pos:line="48" pos:column="26">{<return pos:line="48" pos:column="27">return <expr><name pos:line="48" pos:column="34">_isEnabled</name></expr>;</return>}</block></function><empty_stmt pos:line="48" pos:column="46">;</empty_stmt>
	<function><type><name pos:line="49" pos:column="9">void</name></type> <name pos:line="49" pos:column="14">setEnabled</name><parameter_list pos:line="49" pos:column="24">(<param><decl><type><name pos:line="49" pos:column="25">bool</name></type> <name pos:line="49" pos:column="30">enabled</name></decl></param>)</parameter_list> <block pos:line="49" pos:column="39">{<expr_stmt><expr><name pos:line="49" pos:column="40">_isEnabled</name> <op:operator pos:line="49" pos:column="51">=</op:operator> <name pos:line="49" pos:column="53">enabled</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="49" pos:column="62">;</empty_stmt>

</public><private pos:line="51" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">COLORREF</name></type> <name pos:line="52" pos:column="18">_currentColour</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">WNDPROC</name></type> <name pos:line="53" pos:column="13">_buttonDefaultProc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="54" pos:column="9">ColourPopup</name> <type:modifier pos:line="54" pos:column="21">*</type:modifier></type><name pos:line="54" pos:column="22">_pColourPopup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="55" pos:column="9">bool</name></type> <name pos:line="55" pos:column="14">_isEnabled</name></decl>;</decl_stmt>

    <function><type><specifier pos:line="57" pos:column="5">static</specifier> <name pos:line="57" pos:column="12">LRESULT</name> <name pos:line="57" pos:column="20">CALLBACK</name></type> <name pos:line="57" pos:column="29">staticWinProc</name><parameter_list pos:line="57" pos:column="42">(<param><decl><type><name pos:line="57" pos:column="43">HWND</name></type> <name pos:line="57" pos:column="48">hwnd</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="54">UINT</name></type> <name pos:line="57" pos:column="59">Message</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="68">WPARAM</name></type> <name pos:line="57" pos:column="75">wParam</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="83">LPARAM</name></type> <name pos:line="57" pos:column="90">lParam</name></decl></param>)</parameter_list> <block pos:line="57" pos:column="98">{
        <return pos:line="58" pos:column="9">return <expr><op:operator pos:line="58" pos:column="16">(</op:operator><op:operator pos:line="58" pos:column="17">(</op:operator><op:operator pos:line="58" pos:column="18">(</op:operator><name pos:line="58" pos:column="19">ColourPicker</name> <op:operator pos:line="58" pos:column="32">*</op:operator><op:operator pos:line="58" pos:column="33">)</op:operator><op:operator pos:line="58" pos:column="34">(</op:operator><call><name><op:operator pos:line="58" pos:column="35">::</op:operator><name pos:line="58" pos:column="37">GetWindowLongPtr</name></name><argument_list pos:line="58" pos:column="53">(<argument><expr><name pos:line="58" pos:column="54">hwnd</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="73">)</op:operator><op:operator pos:line="58" pos:column="74">)</op:operator><op:operator pos:line="58" pos:column="75">-&gt;</op:operator><call><name pos:line="58" pos:column="77">runProc</name><argument_list pos:line="58" pos:column="84">(<argument><expr><name pos:line="58" pos:column="85">Message</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="94">wParam</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="102">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="109">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="59" pos:column="6">;</empty_stmt>
	<function_decl><type><name pos:line="60" pos:column="9">LRESULT</name></type> <name pos:line="60" pos:column="17">runProc</name><parameter_list pos:line="60" pos:column="24">(<param><decl><type><name pos:line="60" pos:column="25">UINT</name></type> <name pos:line="60" pos:column="30">Message</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="39">WPARAM</name></type> <name pos:line="60" pos:column="46">wParam</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="54">LPARAM</name></type> <name pos:line="60" pos:column="61">lParam</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="61" pos:column="5">void</name></type> <name pos:line="61" pos:column="10">drawForeground</name><parameter_list pos:line="61" pos:column="24">(<param><decl><type><name pos:line="61" pos:column="25">HDC</name></type> <name pos:line="61" pos:column="29">hDC</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="62" pos:column="9">void</name></type> <name pos:line="62" pos:column="14">drawBackground</name><parameter_list pos:line="62" pos:column="28">(<param><decl><type><name pos:line="62" pos:column="29">HDC</name></type> <name pos:line="62" pos:column="33">hDC</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="65" pos:column="8">// COLOUR_PICKER_H</comment>
</unit>
