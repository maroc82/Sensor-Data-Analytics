<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\My-StepCounter-master\StepCounter\Views\Custom Views\BackgroundView.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">UIKit</name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">Foundation</name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Drawing</name></name>;</using>
<using pos:line="5" pos:column="1">using <name pos:line="5" pos:column="7">CoreGraphics</name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">ComponentModel</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name pos:line="8" pos:column="11">StepCounter</name>
<block pos:line="9" pos:column="1">{
    <class><attribute pos:line="10" pos:column="5">[<expr><call><name pos:line="10" pos:column="6">Register</name><argument_list pos:line="10" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="10" pos:column="15">"BackgroundView"</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="10" pos:column="32">,</op:operator> <expr><call><name pos:line="10" pos:column="34">DesignTimeVisible</name><argument_list pos:line="10" pos:column="51">(<argument><expr><lit:literal type="boolean" pos:line="10" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">BackgroundView</name> <super pos:line="11" pos:column="33">: <name pos:line="11" pos:column="35">UIView</name></super>
    <block pos:line="12" pos:column="5">{
        <cpp:region pos:line="13" pos:column="9">#<cpp:directive pos:line="13" pos:column="10">region</cpp:directive> constructor</cpp:region>
        <constructor><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">BackgroundView</name> <parameter_list pos:line="14" pos:column="31">()</parameter_list>
        <block pos:line="15" pos:column="9">{
        }</block></constructor>

        <constructor><specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">BackgroundView</name> <parameter_list pos:line="18" pos:column="31">(<param><decl><type><name pos:line="18" pos:column="32">IntPtr</name></type> <name pos:line="18" pos:column="39">handle</name></decl></param>)</parameter_list> <member_list pos:line="18" pos:column="47">: <call><name pos:line="18" pos:column="49">base</name> <argument_list pos:line="18" pos:column="54">(<argument><expr><name pos:line="18" pos:column="55">handle</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="19" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">Initialize</name> <argument_list pos:line="20" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="23" pos:column="9">private</specifier> <name pos:line="23" pos:column="17">void</name></type> <name pos:line="23" pos:column="22">Initialize</name> <parameter_list pos:line="23" pos:column="33">()</parameter_list>
        <block pos:line="24" pos:column="9">{
        }</block></function>
        <cpp:endregion pos:line="26" pos:column="9">#<cpp:directive pos:line="26" pos:column="10">endregion</cpp:directive></cpp:endregion>

        <comment type="line" pos:line="28" pos:column="9">//Generated with PaintCode 2.2</comment>
        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <specifier pos:line="29" pos:column="16">override</specifier> <name pos:line="29" pos:column="25">void</name></type> <name pos:line="29" pos:column="30">Draw</name><parameter_list pos:line="29" pos:column="34">(<param><decl><type><name pos:line="29" pos:column="35">CGRect</name></type> <name pos:line="29" pos:column="42">rect</name></decl></param>)</parameter_list>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">base</name><op:operator pos:line="31" pos:column="17">.</op:operator><name pos:line="31" pos:column="18">Draw</name></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="33" pos:column="13">// General Declarations</comment>
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">colorSpace</name> <init pos:line="34" pos:column="28">= <expr><call><name><name pos:line="34" pos:column="30">CGColorSpace</name><op:operator pos:line="34" pos:column="42">.</op:operator><name pos:line="34" pos:column="43">CreateDeviceRGB</name></name><argument_list pos:line="34" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">context</name> <init pos:line="35" pos:column="25">= <expr><call><name><name pos:line="35" pos:column="27">UIGraphics</name><op:operator pos:line="35" pos:column="37">.</op:operator><name pos:line="35" pos:column="38">GetCurrentContext</name></name><argument_list pos:line="35" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="37" pos:column="13">// Color Declarations</comment>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">var</name></type> <name pos:line="38" pos:column="17">darkBlue</name> <init pos:line="38" pos:column="26">= <expr><call><name><name pos:line="38" pos:column="28">UIColor</name><op:operator pos:line="38" pos:column="35">.</op:operator><name pos:line="38" pos:column="36">FromRGBA</name></name><argument_list pos:line="38" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="45">0.053f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="53">0.123f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="61">0.198f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="69">1.000f</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">var</name></type> <name pos:line="39" pos:column="17">lightBlue</name> <init pos:line="39" pos:column="27">= <expr><call><name><name pos:line="39" pos:column="29">UIColor</name><op:operator pos:line="39" pos:column="36">.</op:operator><name pos:line="39" pos:column="37">FromRGBA</name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="46">0.191f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="54">0.619f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="62">0.845f</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="70">1.000f</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="41" pos:column="13">// Gradient Declarations</comment>
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">var</name></type> <name pos:line="42" pos:column="17">backgroundGradientColors</name> <init pos:line="42" pos:column="42">= <expr><op:operator pos:line="42" pos:column="44">new</op:operator> <name><name pos:line="42" pos:column="48">CGColor</name> <index pos:line="42" pos:column="56">[]</index></name> <block pos:line="42" pos:column="59">{<expr><name><name pos:line="42" pos:column="60">lightBlue</name><op:operator pos:line="42" pos:column="69">.</op:operator><name pos:line="42" pos:column="70">CGColor</name></name></expr>, <expr><name><name pos:line="42" pos:column="79">darkBlue</name><op:operator pos:line="42" pos:column="87">.</op:operator><name pos:line="42" pos:column="88">CGColor</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">var</name></type> <name pos:line="43" pos:column="17">backgroundGradientLocations</name> <init pos:line="43" pos:column="45">= <expr><op:operator pos:line="43" pos:column="47">new</op:operator> <name><name pos:line="43" pos:column="51">nfloat</name> <index pos:line="43" pos:column="58">[]</index></name> <block pos:line="43" pos:column="61">{<expr><lit:literal type="number" pos:line="43" pos:column="62">0.0f</lit:literal></expr>, <expr><lit:literal type="number" pos:line="43" pos:column="68">1.0f</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">var</name></type> <name pos:line="44" pos:column="17">backgroundGradient</name> <init pos:line="44" pos:column="36">= <expr><op:operator pos:line="44" pos:column="38">new</op:operator> <call><name pos:line="44" pos:column="42">CGGradient</name><argument_list pos:line="44" pos:column="52">(<argument><expr><name pos:line="44" pos:column="53">colorSpace</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="65">backgroundGradientColors</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="91">backgroundGradientLocations</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="46" pos:column="13">// Rectangle Drawing</comment>
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">rectangleRect</name> <init pos:line="47" pos:column="31">= <expr><op:operator pos:line="47" pos:column="33">new</op:operator> <call><name pos:line="47" pos:column="37">CGRect</name><argument_list pos:line="47" pos:column="43">(<argument><expr><call><name><name pos:line="47" pos:column="44">rect</name><op:operator pos:line="47" pos:column="48">.</op:operator><name pos:line="47" pos:column="49">GetMinX</name></name><argument_list pos:line="47" pos:column="56">()</argument_list></call> <op:operator pos:line="47" pos:column="59">+</op:operator> <op:operator pos:line="47" pos:column="61">(</op:operator><name pos:line="47" pos:column="62">float</name><op:operator pos:line="47" pos:column="67">)</op:operator><call><name><name pos:line="47" pos:column="68">Math</name><op:operator pos:line="47" pos:column="72">.</op:operator><name pos:line="47" pos:column="73">Floor</name></name><argument_list pos:line="47" pos:column="78">(<argument><expr><name><name pos:line="47" pos:column="79">rect</name><op:operator pos:line="47" pos:column="83">.</op:operator><name pos:line="47" pos:column="84">Width</name> <type:modifier pos:line="47" pos:column="90">*</type:modifier></name> <op:operator pos:line="47" pos:column="92">-</op:operator><lit:literal type="number" pos:line="47" pos:column="93">0.12917f</lit:literal> <op:operator pos:line="47" pos:column="102">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="104">0.5f</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="47" pos:column="111">rect</name><op:operator pos:line="47" pos:column="115">.</op:operator><name pos:line="47" pos:column="116">GetMinY</name></name><argument_list pos:line="47" pos:column="123">()</argument_list></call> <op:operator pos:line="47" pos:column="126">+</op:operator> <op:operator pos:line="47" pos:column="128">(</op:operator><name pos:line="47" pos:column="129">float</name><op:operator pos:line="47" pos:column="134">)</op:operator><call><name><name pos:line="47" pos:column="135">Math</name><op:operator pos:line="47" pos:column="139">.</op:operator><name pos:line="47" pos:column="140">Floor</name></name><argument_list pos:line="47" pos:column="145">(<argument><expr><name><name pos:line="47" pos:column="146">rect</name><op:operator pos:line="47" pos:column="150">.</op:operator><name pos:line="47" pos:column="151">Height</name> <type:modifier pos:line="47" pos:column="158">*</type:modifier></name> <lit:literal type="number" pos:line="47" pos:column="160">0.00000f</lit:literal> <op:operator pos:line="47" pos:column="169">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="171">0.5f</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="178">(</op:operator><name pos:line="47" pos:column="179">float</name><op:operator pos:line="47" pos:column="184">)</op:operator><call><name><name pos:line="47" pos:column="185">Math</name><op:operator pos:line="47" pos:column="189">.</op:operator><name pos:line="47" pos:column="190">Floor</name></name><argument_list pos:line="47" pos:column="195">(<argument><expr><name><name pos:line="47" pos:column="196">rect</name><op:operator pos:line="47" pos:column="200">.</op:operator><name pos:line="47" pos:column="201">Width</name> <type:modifier pos:line="47" pos:column="207">*</type:modifier></name> <lit:literal type="number" pos:line="47" pos:column="209">1.00000f</lit:literal> <op:operator pos:line="47" pos:column="218">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="220">0.5f</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="47" pos:column="226">-</op:operator> <op:operator pos:line="47" pos:column="228">(</op:operator><name pos:line="47" pos:column="229">float</name><op:operator pos:line="47" pos:column="234">)</op:operator><call><name><name pos:line="47" pos:column="235">Math</name><op:operator pos:line="47" pos:column="239">.</op:operator><name pos:line="47" pos:column="240">Floor</name></name><argument_list pos:line="47" pos:column="245">(<argument><expr><name><name pos:line="47" pos:column="246">rect</name><op:operator pos:line="47" pos:column="250">.</op:operator><name pos:line="47" pos:column="251">Width</name> <type:modifier pos:line="47" pos:column="257">*</type:modifier></name> <op:operator pos:line="47" pos:column="259">-</op:operator><lit:literal type="number" pos:line="47" pos:column="260">0.12917f</lit:literal> <op:operator pos:line="47" pos:column="269">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="271">0.5f</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="278">(</op:operator><name pos:line="47" pos:column="279">float</name><op:operator pos:line="47" pos:column="284">)</op:operator><call><name><name pos:line="47" pos:column="285">Math</name><op:operator pos:line="47" pos:column="289">.</op:operator><name pos:line="47" pos:column="290">Floor</name></name><argument_list pos:line="47" pos:column="295">(<argument><expr><name><name pos:line="47" pos:column="296">rect</name><op:operator pos:line="47" pos:column="300">.</op:operator><name pos:line="47" pos:column="301">Height</name> <type:modifier pos:line="47" pos:column="308">*</type:modifier></name> <lit:literal type="number" pos:line="47" pos:column="310">1.00000f</lit:literal> <op:operator pos:line="47" pos:column="319">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="321">0.5f</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="47" pos:column="327">-</op:operator> <op:operator pos:line="47" pos:column="329">(</op:operator><name pos:line="47" pos:column="330">float</name><op:operator pos:line="47" pos:column="335">)</op:operator><call><name><name pos:line="47" pos:column="336">Math</name><op:operator pos:line="47" pos:column="340">.</op:operator><name pos:line="47" pos:column="341">Floor</name></name><argument_list pos:line="47" pos:column="346">(<argument><expr><name><name pos:line="47" pos:column="347">rect</name><op:operator pos:line="47" pos:column="351">.</op:operator><name pos:line="47" pos:column="352">Height</name> <type:modifier pos:line="47" pos:column="359">*</type:modifier></name> <lit:literal type="number" pos:line="47" pos:column="361">0.00000f</lit:literal> <op:operator pos:line="47" pos:column="370">+</op:operator> <lit:literal type="number" pos:line="47" pos:column="372">0.5f</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">var</name></type> <name pos:line="48" pos:column="17">rectanglePath</name> <init pos:line="48" pos:column="31">= <expr><call><name><name pos:line="48" pos:column="33">UIBezierPath</name><op:operator pos:line="48" pos:column="45">.</op:operator><name pos:line="48" pos:column="46">FromRect</name></name><argument_list pos:line="48" pos:column="54">(<argument><expr><name pos:line="48" pos:column="55">rectangleRect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">context</name><op:operator pos:line="49" pos:column="20">.</op:operator><name pos:line="49" pos:column="21">SaveState</name></name><argument_list pos:line="49" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">rectanglePath</name><op:operator pos:line="50" pos:column="26">.</op:operator><name pos:line="50" pos:column="27">AddClip</name></name><argument_list pos:line="50" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">context</name><op:operator pos:line="51" pos:column="20">.</op:operator><name pos:line="51" pos:column="21">DrawLinearGradient</name></name><argument_list pos:line="51" pos:column="39">(<argument><expr><name pos:line="51" pos:column="40">backgroundGradient</name></expr></argument>,
                <argument><expr><op:operator pos:line="52" pos:column="17">new</op:operator> <call><name pos:line="52" pos:column="21">PointF</name><argument_list pos:line="52" pos:column="27">(<argument><expr><op:operator pos:line="52" pos:column="28">(</op:operator><name pos:line="52" pos:column="29">float</name><op:operator pos:line="52" pos:column="34">)</op:operator><call><name><name pos:line="52" pos:column="35">rectangleRect</name><op:operator pos:line="52" pos:column="48">.</op:operator><name pos:line="52" pos:column="49">GetMidX</name></name><argument_list pos:line="52" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="52" pos:column="60">(</op:operator><name pos:line="52" pos:column="61">float</name><op:operator pos:line="52" pos:column="66">)</op:operator><call><name><name pos:line="52" pos:column="67">rectangleRect</name><op:operator pos:line="52" pos:column="80">.</op:operator><name pos:line="52" pos:column="81">GetMinY</name></name><argument_list pos:line="52" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><op:operator pos:line="53" pos:column="17">new</op:operator> <call><name pos:line="53" pos:column="21">PointF</name><argument_list pos:line="53" pos:column="27">(<argument><expr><op:operator pos:line="53" pos:column="28">(</op:operator><name pos:line="53" pos:column="29">float</name><op:operator pos:line="53" pos:column="34">)</op:operator><call><name><name pos:line="53" pos:column="35">rectangleRect</name><op:operator pos:line="53" pos:column="48">.</op:operator><name pos:line="53" pos:column="49">GetMidX</name></name><argument_list pos:line="53" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="53" pos:column="60">(</op:operator><name pos:line="53" pos:column="61">float</name><op:operator pos:line="53" pos:column="66">)</op:operator><call><name><name pos:line="53" pos:column="67">rectangleRect</name><op:operator pos:line="53" pos:column="80">.</op:operator><name pos:line="53" pos:column="81">GetMaxY</name></name><argument_list pos:line="53" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><lit:literal type="number" pos:line="54" pos:column="17">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">context</name><op:operator pos:line="55" pos:column="20">.</op:operator><name pos:line="55" pos:column="21">RestoreState</name></name><argument_list pos:line="55" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>

</unit>
