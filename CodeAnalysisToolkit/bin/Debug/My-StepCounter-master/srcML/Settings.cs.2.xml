<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\My-StepCounter-master\StepCounter.Android\Helpers\Settings.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * My StepCounter:
 * Copyright (C) 2014 Refractored LLC | http://refractored.com
 * James Montemagno | http://twitter.com/JamesMontemagno | http://MotzCod.es
 * 
 * Michael James | http://twitter.com/micjames6 | http://micjames.co.uk/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Globalization</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Android</name><op:operator pos:line="21" pos:column="14">.</op:operator><name pos:line="21" pos:column="15">Content</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">Android</name><op:operator pos:line="22" pos:column="14">.</op:operator><name pos:line="22" pos:column="15">Preferences</name></name>;</using>
<using pos:line="23" pos:column="1">using <name pos:line="23" pos:column="7">System</name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">Android</name><op:operator pos:line="24" pos:column="14">.</op:operator><name pos:line="24" pos:column="15">App</name></name>;</using>

<namespace pos:line="26" pos:column="1">namespace <name><name pos:line="26" pos:column="11">StepCounter</name><op:operator pos:line="26" pos:column="22">.</op:operator><name pos:line="26" pos:column="23">Helpers</name></name>
<block pos:line="27" pos:column="1">{
  <comment type="line" pos:line="28" pos:column="3">/// &lt;summary&gt;</comment>
  <comment type="line" pos:line="29" pos:column="3">/// This is the Settings static class that can be used in your Core solution or in any</comment>
  <comment type="line" pos:line="30" pos:column="3">/// of your client applications. All settings are laid out the same exact way with getters</comment>
  <comment type="line" pos:line="31" pos:column="3">/// and setters. </comment>
  <comment type="line" pos:line="32" pos:column="3">/// &lt;/summary&gt;</comment>
  <class><specifier pos:line="33" pos:column="3">public</specifier> <specifier pos:line="33" pos:column="10">static</specifier> class <name pos:line="33" pos:column="23">Settings</name>
  <block pos:line="34" pos:column="3">{
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">private</specifier> <specifier pos:line="35" pos:column="25">static</specifier> <name pos:line="35" pos:column="32">SettingsHelper</name></type> <name pos:line="35" pos:column="47">appSettings</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">private</specifier> <specifier pos:line="36" pos:column="25">static</specifier> <name pos:line="36" pos:column="32">SettingsHelper</name></type> <name pos:line="36" pos:column="47">AppSettings</name>
    <block pos:line="37" pos:column="5">{
      <function><name pos:line="38" pos:column="7">get</name>
      <block pos:line="39" pos:column="7">{
				<return pos:line="40" pos:column="33">return <expr><name pos:line="40" pos:column="40">appSettings</name> <op:operator pos:line="40" pos:column="52">??</op:operator> <op:operator pos:line="40" pos:column="55">(</op:operator><name pos:line="40" pos:column="56">appSettings</name> <op:operator pos:line="40" pos:column="68">=</op:operator> <op:operator pos:line="40" pos:column="70">new</op:operator> <call><name pos:line="40" pos:column="74">SettingsHelper</name><argument_list pos:line="40" pos:column="88">()</argument_list></call><op:operator pos:line="40" pos:column="90">)</op:operator></expr>;</return>
      }</block></function>
    }</block></decl></decl_stmt>


    <cpp:region pos:line="45" pos:column="5">#<cpp:directive pos:line="45" pos:column="6">region</cpp:directive> Setting Constants</cpp:region>

		<decl_stmt><decl><type><specifier pos:line="47" pos:column="17">public</specifier> <specifier pos:line="47" pos:column="24">const</specifier> <name pos:line="47" pos:column="30">string</name></type> <name pos:line="47" pos:column="37">DailyStepGoalKey</name> <init pos:line="47" pos:column="54">= <expr><lit:literal type="string" pos:line="47" pos:column="56">"DailyStepGoal"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="48" pos:column="17">public</specifier> <specifier pos:line="48" pos:column="24">static</specifier> <specifier pos:line="48" pos:column="31">readonly</specifier> <name pos:line="48" pos:column="40">int</name></type> <name pos:line="48" pos:column="44">DailyStepGoalDefault</name> <init pos:line="48" pos:column="65">= <expr><lit:literal type="number" pos:line="48" pos:column="67">10000</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="50" pos:column="17">public</specifier> <specifier pos:line="50" pos:column="24">const</specifier> <name pos:line="50" pos:column="30">string</name></type> <name pos:line="50" pos:column="37">WeightKey</name> <init pos:line="50" pos:column="47">= <expr><lit:literal type="string" pos:line="50" pos:column="49">"Weight"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="51" pos:column="17">private</specifier> <specifier pos:line="51" pos:column="25">static</specifier> <specifier pos:line="51" pos:column="32">readonly</specifier> <name pos:line="51" pos:column="41">int</name></type> <name pos:line="51" pos:column="45">WeightDefault</name> <init pos:line="51" pos:column="59">= <expr><lit:literal type="number" pos:line="51" pos:column="61">0</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="53" pos:column="17">public</specifier> <specifier pos:line="53" pos:column="24">const</specifier> <name pos:line="53" pos:column="30">string</name></type> <name pos:line="53" pos:column="37">CadenceKey</name> <init pos:line="53" pos:column="48">= <expr><lit:literal type="string" pos:line="53" pos:column="50">"Cadence3"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="54" pos:column="17">private</specifier> <specifier pos:line="54" pos:column="25">static</specifier> <specifier pos:line="54" pos:column="32">readonly</specifier> <name pos:line="54" pos:column="41">string</name></type> <name pos:line="54" pos:column="48">CadenceDefault</name> <init pos:line="54" pos:column="63">= <expr><lit:literal type="string" pos:line="54" pos:column="65">"3"</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="56" pos:column="17">public</specifier> <specifier pos:line="56" pos:column="24">const</specifier> <name pos:line="56" pos:column="30">string</name></type> <name pos:line="56" pos:column="37">EnhancedKey</name> <init pos:line="56" pos:column="49">= <expr><lit:literal type="string" pos:line="56" pos:column="51">"Enhanced"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="57" pos:column="17">private</specifier> <specifier pos:line="57" pos:column="25">static</specifier> <specifier pos:line="57" pos:column="32">readonly</specifier> <name pos:line="57" pos:column="41">bool</name></type> <name pos:line="57" pos:column="46">EnhancedDefault</name> <init pos:line="57" pos:column="62">= <expr><lit:literal type="boolean" pos:line="57" pos:column="64">false</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="59" pos:column="17">public</specifier> <specifier pos:line="59" pos:column="24">const</specifier> <name pos:line="59" pos:column="30">string</name></type> <name pos:line="59" pos:column="37">ProgressNotificationsKey</name> <init pos:line="59" pos:column="62">= <expr><lit:literal type="string" pos:line="59" pos:column="64">"ProgressNotifications"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="60" pos:column="17">private</specifier> <specifier pos:line="60" pos:column="25">static</specifier> <specifier pos:line="60" pos:column="32">readonly</specifier> <name pos:line="60" pos:column="41">bool</name></type> <name pos:line="60" pos:column="46">ProgressNotificationsDefault</name> <init pos:line="60" pos:column="75">= <expr><lit:literal type="boolean" pos:line="60" pos:column="77">true</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="62" pos:column="17">public</specifier> <specifier pos:line="62" pos:column="24">const</specifier> <name pos:line="62" pos:column="30">string</name></type> <name pos:line="62" pos:column="37">AccumulativeNotificationsKey</name> <init pos:line="62" pos:column="66">= <expr><lit:literal type="string" pos:line="62" pos:column="68">"AccumulativeNotifications"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="63" pos:column="17">private</specifier> <specifier pos:line="63" pos:column="25">static</specifier> <specifier pos:line="63" pos:column="32">readonly</specifier> <name pos:line="63" pos:column="41">bool</name></type> <name pos:line="63" pos:column="46">AccumulativeNotificationsDefault</name> <init pos:line="63" pos:column="79">= <expr><lit:literal type="boolean" pos:line="63" pos:column="81">true</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="65" pos:column="17">private</specifier> <specifier pos:line="65" pos:column="25">const</specifier> <name pos:line="65" pos:column="31">string</name></type> <name pos:line="65" pos:column="38">CurrentDayKey</name> <init pos:line="65" pos:column="52">= <expr><lit:literal type="string" pos:line="65" pos:column="54">"CurrentDay"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="66" pos:column="17">private</specifier> <specifier pos:line="66" pos:column="25">static</specifier> <specifier pos:line="66" pos:column="32">readonly</specifier> <name pos:line="66" pos:column="41">DateTime</name></type> <name pos:line="66" pos:column="50">CurrentDayDefault</name> <init pos:line="66" pos:column="68">= <expr><name><name pos:line="66" pos:column="70">DateTime</name><op:operator pos:line="66" pos:column="78">.</op:operator><name pos:line="66" pos:column="79">Today</name></name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="68" pos:column="17">private</specifier> <specifier pos:line="68" pos:column="25">const</specifier> <name pos:line="68" pos:column="31">string</name></type> <name pos:line="68" pos:column="38">CurrentDayStepsKey</name> <init pos:line="68" pos:column="57">= <expr><lit:literal type="string" pos:line="68" pos:column="59">"CurrentDaySteps"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="69" pos:column="17">private</specifier> <specifier pos:line="69" pos:column="25">static</specifier> <specifier pos:line="69" pos:column="32">readonly</specifier> <name pos:line="69" pos:column="41">Int64</name></type> <name pos:line="69" pos:column="47">CurrentDayStepsDefault</name> <init pos:line="69" pos:column="70">= <expr><lit:literal type="number" pos:line="69" pos:column="72">0</lit:literal></expr></init></decl>;</decl_stmt>


		<decl_stmt><decl><type><specifier pos:line="72" pos:column="17">private</specifier> <specifier pos:line="72" pos:column="25">const</specifier> <name pos:line="72" pos:column="31">string</name></type> <name pos:line="72" pos:column="38">StepsBeforeTodayKey</name> <init pos:line="72" pos:column="58">= <expr><lit:literal type="string" pos:line="72" pos:column="60">"StepsBeforeToday"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="73" pos:column="17">private</specifier> <specifier pos:line="73" pos:column="25">static</specifier> <specifier pos:line="73" pos:column="32">readonly</specifier> <name pos:line="73" pos:column="41">Int64</name></type> <name pos:line="73" pos:column="47">StepsBeforeTodayDefault</name> <init pos:line="73" pos:column="71">= <expr><lit:literal type="number" pos:line="73" pos:column="73">0</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="75" pos:column="17">private</specifier> <specifier pos:line="75" pos:column="25">const</specifier> <name pos:line="75" pos:column="31">string</name></type> <name pos:line="75" pos:column="38">TotalStepsKey</name> <init pos:line="75" pos:column="52">= <expr><lit:literal type="string" pos:line="75" pos:column="54">"TotalSteps"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="76" pos:column="17">private</specifier> <specifier pos:line="76" pos:column="25">static</specifier> <specifier pos:line="76" pos:column="32">readonly</specifier> <name pos:line="76" pos:column="41">Int64</name></type> <name pos:line="76" pos:column="47">TotalStepsDefault</name> <init pos:line="76" pos:column="65">= <expr><lit:literal type="number" pos:line="76" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="78" pos:column="17">private</specifier> <specifier pos:line="78" pos:column="25">const</specifier> <name pos:line="78" pos:column="31">string</name></type> <name pos:line="78" pos:column="38">GoalTodayMessageKey</name> <init pos:line="78" pos:column="58">= <expr><lit:literal type="string" pos:line="78" pos:column="60">"GoalTodayMessage"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="79" pos:column="17">private</specifier> <specifier pos:line="79" pos:column="25">static</specifier> <specifier pos:line="79" pos:column="32">readonly</specifier> <name pos:line="79" pos:column="41">string</name></type> <name pos:line="79" pos:column="48">GoalTodayMessageDefault</name> <init pos:line="79" pos:column="72">= <expr><name><name pos:line="79" pos:column="74">string</name><op:operator pos:line="79" pos:column="80">.</op:operator><name pos:line="79" pos:column="81">Empty</name></name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="81" pos:column="17">private</specifier> <specifier pos:line="81" pos:column="25">const</specifier> <name pos:line="81" pos:column="31">string</name></type> <name pos:line="81" pos:column="38">GoalTodayDayKey</name> <init pos:line="81" pos:column="54">= <expr><lit:literal type="string" pos:line="81" pos:column="56">"GoalTodayDay"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="82" pos:column="17">private</specifier> <specifier pos:line="82" pos:column="25">static</specifier> <specifier pos:line="82" pos:column="32">readonly</specifier> <name pos:line="82" pos:column="41">DateTime</name></type> <name pos:line="82" pos:column="50">GoalTodayDayDefault</name> <init pos:line="82" pos:column="70">= <expr><call><name><name pos:line="82" pos:column="72">DateTime</name><op:operator pos:line="82" pos:column="80">.</op:operator><name pos:line="82" pos:column="81">Today</name><op:operator pos:line="82" pos:column="86">.</op:operator><name pos:line="82" pos:column="87">AddDays</name></name><argument_list pos:line="82" pos:column="94">(<argument><expr><op:operator pos:line="82" pos:column="95">-</op:operator><lit:literal type="number" pos:line="82" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="84" pos:column="17">private</specifier> <specifier pos:line="84" pos:column="25">const</specifier> <name pos:line="84" pos:column="31">string</name></type> <name pos:line="84" pos:column="38">NextGoalKey</name> <init pos:line="84" pos:column="50">= <expr><lit:literal type="string" pos:line="84" pos:column="52">"NextGoal"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="85" pos:column="17">private</specifier> <specifier pos:line="85" pos:column="25">const</specifier> <name pos:line="85" pos:column="31">Int64</name></type> <name pos:line="85" pos:column="37">NextGoalDefault</name> <init pos:line="85" pos:column="53">= <expr><lit:literal type="number" pos:line="85" pos:column="55">100000</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="87" pos:column="17">private</specifier> <specifier pos:line="87" pos:column="25">const</specifier> <name pos:line="87" pos:column="31">string</name></type> <name pos:line="87" pos:column="38">HighScoreKey</name> <init pos:line="87" pos:column="51">= <expr><lit:literal type="string" pos:line="87" pos:column="53">"HighScore"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="88" pos:column="17">public</specifier> <specifier pos:line="88" pos:column="24">const</specifier> <name pos:line="88" pos:column="30">Int64</name></type> <name pos:line="88" pos:column="36">HighScoreDefault</name> <init pos:line="88" pos:column="53">= <expr><lit:literal type="number" pos:line="88" pos:column="55">0</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="90" pos:column="17">private</specifier> <specifier pos:line="90" pos:column="25">const</specifier> <name pos:line="90" pos:column="31">string</name></type> <name pos:line="90" pos:column="38">HighScoreDayKey</name> <init pos:line="90" pos:column="54">= <expr><lit:literal type="string" pos:line="90" pos:column="56">"HighScoreDay"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="91" pos:column="17">private</specifier> <specifier pos:line="91" pos:column="25">static</specifier> <specifier pos:line="91" pos:column="32">readonly</specifier> <name pos:line="91" pos:column="41">DateTime</name></type> <name pos:line="91" pos:column="50">HighScoreDayDefault</name> <init pos:line="91" pos:column="70">= <expr><name><name pos:line="91" pos:column="72">DateTime</name><op:operator pos:line="91" pos:column="80">.</op:operator><name pos:line="91" pos:column="81">Today</name></name></expr></init></decl>;</decl_stmt>


		<decl_stmt><decl><type><specifier pos:line="94" pos:column="17">private</specifier> <specifier pos:line="94" pos:column="25">const</specifier> <name pos:line="94" pos:column="31">string</name></type> <name pos:line="94" pos:column="38">FirstDayOfUseKey</name> <init pos:line="94" pos:column="55">= <expr><lit:literal type="string" pos:line="94" pos:column="57">"FirstDayOfUse"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="95" pos:column="17">private</specifier> <specifier pos:line="95" pos:column="25">static</specifier> <specifier pos:line="95" pos:column="32">readonly</specifier> <name pos:line="95" pos:column="41">DateTime</name></type> <name pos:line="95" pos:column="50">FirstDayOfUseDefault</name> <init pos:line="95" pos:column="71">= <expr><name><name pos:line="95" pos:column="73">DateTime</name><op:operator pos:line="95" pos:column="81">.</op:operator><name pos:line="95" pos:column="82">Today</name></name></expr></init></decl>;</decl_stmt>

    <cpp:endregion pos:line="97" pos:column="5">#<cpp:directive pos:line="97" pos:column="6">endregion</cpp:directive></cpp:endregion>

		<comment type="line" pos:line="99" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="100" pos:column="17">/// Gets or sets the next goal. for total</comment>
		<comment type="line" pos:line="101" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="102" pos:column="17">/// &lt;value&gt;The next goal.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="103" pos:column="17">public</specifier> <specifier pos:line="103" pos:column="24">static</specifier> <name pos:line="103" pos:column="31">Int64</name></type> <name pos:line="103" pos:column="37">NextGoal</name>
		<block pos:line="104" pos:column="17">{
			<function><name pos:line="105" pos:column="25">get</name>
			<block pos:line="106" pos:column="25">{
				<return pos:line="107" pos:column="33">return <expr><call><name><name pos:line="107" pos:column="40">AppSettings</name><op:operator pos:line="107" pos:column="51">.</op:operator><name pos:line="107" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="107" pos:column="69">(<argument><expr><name pos:line="107" pos:column="70">NextGoalKey</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="83">NextGoalDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="109" pos:column="25">set</name>
			<block pos:line="110" pos:column="25">{
				<comment type="line" pos:line="111" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="112" pos:column="33">if <condition pos:line="112" pos:column="36">(<expr><call><name><name pos:line="112" pos:column="37">AppSettings</name><op:operator pos:line="112" pos:column="48">.</op:operator><name pos:line="112" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="112" pos:column="65">(<argument><expr><name pos:line="112" pos:column="66">NextGoalKey</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="79">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="112" pos:column="86">
					<expr_stmt><expr><call><name><name pos:line="113" pos:column="41">AppSettings</name><op:operator pos:line="113" pos:column="52">.</op:operator><name pos:line="113" pos:column="53">Save</name></name><argument_list pos:line="113" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="117" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="118" pos:column="17">/// Gets or sets a value indicating whether to show progress notifications.</comment>
		<comment type="line" pos:line="119" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="120" pos:column="17">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if progress notifications; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="121" pos:column="17">public</specifier> <specifier pos:line="121" pos:column="24">static</specifier> <name pos:line="121" pos:column="31">bool</name></type> <name pos:line="121" pos:column="36">ProgressNotifications</name>
		<block pos:line="122" pos:column="17">{
			<function><name pos:line="123" pos:column="25">get</name>
			<block pos:line="124" pos:column="25">{
				<return pos:line="125" pos:column="33">return <expr><call><name><name pos:line="125" pos:column="40">AppSettings</name><op:operator pos:line="125" pos:column="51">.</op:operator><name pos:line="125" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="125" pos:column="69">(<argument><expr><name pos:line="125" pos:column="70">ProgressNotificationsKey</name></expr></argument>, <argument><expr><name pos:line="125" pos:column="96">ProgressNotificationsDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="127" pos:column="25">set</name>
			<block pos:line="128" pos:column="25">{
				<comment type="line" pos:line="129" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="130" pos:column="33">if <condition pos:line="130" pos:column="36">(<expr><call><name><name pos:line="130" pos:column="37">AppSettings</name><op:operator pos:line="130" pos:column="48">.</op:operator><name pos:line="130" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="130" pos:column="65">(<argument><expr><name pos:line="130" pos:column="66">ProgressNotificationsKey</name></expr></argument>, <argument><expr><name pos:line="130" pos:column="92">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="130" pos:column="99">
					<expr_stmt><expr><call><name><name pos:line="131" pos:column="41">AppSettings</name><op:operator pos:line="131" pos:column="52">.</op:operator><name pos:line="131" pos:column="53">Save</name></name><argument_list pos:line="131" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="135" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="136" pos:column="17">/// Gets or sets a value indicating whether to show accumulative notifications.</comment>
		<comment type="line" pos:line="137" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="138" pos:column="17">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if accumulative notifications; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="139" pos:column="17">public</specifier> <specifier pos:line="139" pos:column="24">static</specifier> <name pos:line="139" pos:column="31">bool</name></type> <name pos:line="139" pos:column="36">AccumulativeNotifications</name>
		<block pos:line="140" pos:column="17">{
			<function><name pos:line="141" pos:column="25">get</name>
			<block pos:line="142" pos:column="25">{
				<return pos:line="143" pos:column="33">return <expr><call><name><name pos:line="143" pos:column="40">AppSettings</name><op:operator pos:line="143" pos:column="51">.</op:operator><name pos:line="143" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="143" pos:column="69">(<argument><expr><name pos:line="143" pos:column="70">AccumulativeNotificationsKey</name></expr></argument>, <argument><expr><name pos:line="143" pos:column="100">AccumulativeNotificationsDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="145" pos:column="25">set</name>
			<block pos:line="146" pos:column="25">{
				<comment type="line" pos:line="147" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="148" pos:column="33">if <condition pos:line="148" pos:column="36">(<expr><call><name><name pos:line="148" pos:column="37">AppSettings</name><op:operator pos:line="148" pos:column="48">.</op:operator><name pos:line="148" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="148" pos:column="65">(<argument><expr><name pos:line="148" pos:column="66">AccumulativeNotificationsKey</name></expr></argument>, <argument><expr><name pos:line="148" pos:column="96">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="148" pos:column="103">
					<expr_stmt><expr><call><name><name pos:line="149" pos:column="41">AppSettings</name><op:operator pos:line="149" pos:column="52">.</op:operator><name pos:line="149" pos:column="53">Save</name></name><argument_list pos:line="149" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="153" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="154" pos:column="17">/// Gets or sets the high score day.</comment>
		<comment type="line" pos:line="155" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="156" pos:column="17">/// &lt;value&gt;The high score day.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="157" pos:column="17">public</specifier> <specifier pos:line="157" pos:column="24">static</specifier> <name pos:line="157" pos:column="31">DateTime</name></type> <name pos:line="157" pos:column="40">FirstDayOfUse</name>
		<block pos:line="158" pos:column="17">{
			<function><name pos:line="159" pos:column="25">get</name>
			<block pos:line="160" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="161" pos:column="33">var</name></type> <name pos:line="161" pos:column="37">firstDay</name> <init pos:line="161" pos:column="46">= <expr><call><name><name pos:line="161" pos:column="48">AppSettings</name><op:operator pos:line="161" pos:column="59">.</op:operator><name pos:line="161" pos:column="60">GetValueOrDefault</name></name> <argument_list pos:line="161" pos:column="78">(<argument><expr><name pos:line="161" pos:column="79">FirstDayOfUseKey</name></expr></argument>, <argument><expr><op:operator pos:line="161" pos:column="97">(</op:operator><name pos:line="161" pos:column="98">long</name><op:operator pos:line="161" pos:column="102">)</op:operator><op:operator pos:line="161" pos:column="103">-</op:operator><lit:literal type="number" pos:line="161" pos:column="104">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="162" pos:column="33">if <condition pos:line="162" pos:column="36">(<expr><name pos:line="162" pos:column="37">firstDay</name> <op:operator pos:line="162" pos:column="46">==</op:operator> <op:operator pos:line="162" pos:column="49">-</op:operator><lit:literal type="number" pos:line="162" pos:column="50">1</lit:literal></expr>)</condition><then pos:line="162" pos:column="52"> <block pos:line="162" pos:column="53">{
					<expr_stmt><expr><name pos:line="163" pos:column="41">FirstDayOfUse</name> <op:operator pos:line="163" pos:column="55">=</op:operator> <name><name pos:line="163" pos:column="57">DateTime</name><op:operator pos:line="163" pos:column="65">.</op:operator><name pos:line="163" pos:column="66">Today</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="164" pos:column="41">CurrentDay</name> <op:operator pos:line="164" pos:column="52">=</op:operator> <name><name pos:line="164" pos:column="54">DateTime</name><op:operator pos:line="164" pos:column="62">.</op:operator><name pos:line="164" pos:column="63">Today</name></name></expr>;</expr_stmt>
					<return pos:line="165" pos:column="41">return <expr><name><name pos:line="165" pos:column="48">DateTime</name><op:operator pos:line="165" pos:column="56">.</op:operator><name pos:line="165" pos:column="57">Today</name></name></expr>;</return>
				}</block></then>
				<else pos:line="167" pos:column="33">else
					<return pos:line="168" pos:column="41">return <expr><op:operator pos:line="168" pos:column="48">new</op:operator> <call><name pos:line="168" pos:column="52">DateTime</name><argument_list pos:line="168" pos:column="60">(<argument><expr><name pos:line="168" pos:column="61">firstDay</name></expr></argument>)</argument_list></call></expr>;</return></else></if>
			}</block></function>
			<function><name pos:line="170" pos:column="25">set</name>
			<block pos:line="171" pos:column="25">{
				<comment type="line" pos:line="172" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="173" pos:column="33">if <condition pos:line="173" pos:column="36">(<expr><call><name><name pos:line="173" pos:column="37">AppSettings</name><op:operator pos:line="173" pos:column="48">.</op:operator><name pos:line="173" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="173" pos:column="65">(<argument><expr><name pos:line="173" pos:column="66">FirstDayOfUseKey</name></expr></argument>, <argument><expr><name pos:line="173" pos:column="84">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="173" pos:column="91">
					<expr_stmt><expr><call><name><name pos:line="174" pos:column="41">AppSettings</name><op:operator pos:line="174" pos:column="52">.</op:operator><name pos:line="174" pos:column="53">Save</name></name><argument_list pos:line="174" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="178" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="179" pos:column="17">/// Ensure that high score is not today</comment>
		<comment type="line" pos:line="180" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="181" pos:column="17">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if today is high score; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="182" pos:column="17">public</specifier> <specifier pos:line="182" pos:column="24">static</specifier> <name pos:line="182" pos:column="31">bool</name></type> <name pos:line="182" pos:column="36">TodayIsHighScore</name>
		<block pos:line="183" pos:column="17">{
			<function><name pos:line="184" pos:column="25">get</name>
			<block pos:line="185" pos:column="25">{
				<comment type="line" pos:line="186" pos:column="33">//if first day then always return false;</comment>
				<if pos:line="187" pos:column="33">if <condition pos:line="187" pos:column="36">(<expr><name><name pos:line="187" pos:column="37">FirstDayOfUse</name><op:operator pos:line="187" pos:column="50">.</op:operator><name pos:line="187" pos:column="51">DayOfYear</name></name> <op:operator pos:line="187" pos:column="61">==</op:operator> <name><name pos:line="187" pos:column="64">HighScoreDay</name><op:operator pos:line="187" pos:column="76">.</op:operator><name pos:line="187" pos:column="77">DayOfYear</name> <type:modifier pos:line="187" pos:column="87">&amp;&amp;</type:modifier></name> <name><name pos:line="187" pos:column="90">FirstDayOfUse</name><op:operator pos:line="187" pos:column="103">.</op:operator><name pos:line="187" pos:column="104">Year</name></name> <op:operator pos:line="187" pos:column="109">==</op:operator> <name><name pos:line="187" pos:column="112">HighScoreDay</name><op:operator pos:line="187" pos:column="124">.</op:operator><name pos:line="187" pos:column="125">Year</name></name></expr>)</condition><then pos:line="187" pos:column="130">
					<return pos:line="188" pos:column="41">return <expr><lit:literal type="boolean" pos:line="188" pos:column="48">false</lit:literal></expr>;</return></then></if>

				<comment type="line" pos:line="190" pos:column="33">//else is same day.</comment>
				<return pos:line="191" pos:column="33">return <expr><name><name pos:line="191" pos:column="40">DateTime</name><op:operator pos:line="191" pos:column="48">.</op:operator><name pos:line="191" pos:column="49">Today</name><op:operator pos:line="191" pos:column="54">.</op:operator><name pos:line="191" pos:column="55">DayOfYear</name></name> <op:operator pos:line="191" pos:column="65">==</op:operator> <name><name pos:line="191" pos:column="68">HighScoreDay</name><op:operator pos:line="191" pos:column="80">.</op:operator><name pos:line="191" pos:column="81">DayOfYear</name> <type:modifier pos:line="191" pos:column="91">&amp;&amp;</type:modifier></name> <name><name pos:line="191" pos:column="94">DateTime</name><op:operator pos:line="191" pos:column="102">.</op:operator><name pos:line="191" pos:column="103">Today</name><op:operator pos:line="191" pos:column="108">.</op:operator><name pos:line="191" pos:column="109">Year</name></name> <op:operator pos:line="191" pos:column="114">==</op:operator> <name><name pos:line="191" pos:column="117">HighScoreDay</name><op:operator pos:line="191" pos:column="129">.</op:operator><name pos:line="191" pos:column="130">Year</name></name></expr>;</return>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="195" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="196" pos:column="17">/// Gets or sets the goal message to display to user</comment>
		<comment type="line" pos:line="197" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="198" pos:column="17">/// &lt;value&gt;The goal today message.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="199" pos:column="17">public</specifier> <specifier pos:line="199" pos:column="24">static</specifier> <name pos:line="199" pos:column="31">string</name></type> <name pos:line="199" pos:column="38">GoalTodayMessage</name>
		<block pos:line="200" pos:column="17">{
			<function><name pos:line="201" pos:column="25">get</name>
			<block pos:line="202" pos:column="25">{
				<return pos:line="203" pos:column="33">return <expr><call><name><name pos:line="203" pos:column="40">AppSettings</name><op:operator pos:line="203" pos:column="51">.</op:operator><name pos:line="203" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="203" pos:column="69">(<argument><expr><name pos:line="203" pos:column="70">GoalTodayMessageKey</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="91">GoalTodayMessageDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="205" pos:column="25">set</name>
			<block pos:line="206" pos:column="25">{
				<comment type="line" pos:line="207" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="208" pos:column="33">if <condition pos:line="208" pos:column="36">(<expr><call><name><name pos:line="208" pos:column="37">AppSettings</name><op:operator pos:line="208" pos:column="48">.</op:operator><name pos:line="208" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="208" pos:column="65">(<argument><expr><name pos:line="208" pos:column="66">GoalTodayMessageKey</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="87">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="208" pos:column="94">
					<expr_stmt><expr><call><name><name pos:line="209" pos:column="41">AppSettings</name><op:operator pos:line="209" pos:column="52">.</op:operator><name pos:line="209" pos:column="53">Save</name></name><argument_list pos:line="209" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="213" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="214" pos:column="17">/// Gets or sets the high score.</comment>
		<comment type="line" pos:line="215" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="216" pos:column="17">/// &lt;value&gt;The high score.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="217" pos:column="17">public</specifier> <specifier pos:line="217" pos:column="24">static</specifier> <name pos:line="217" pos:column="31">Int64</name></type> <name pos:line="217" pos:column="37">HighScore</name>
		<block pos:line="218" pos:column="17">{
			<function><name pos:line="219" pos:column="25">get</name>
			<block pos:line="220" pos:column="25">{
				<return pos:line="221" pos:column="33">return <expr><call><name><name pos:line="221" pos:column="40">AppSettings</name><op:operator pos:line="221" pos:column="51">.</op:operator><name pos:line="221" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="221" pos:column="69">(<argument><expr><name pos:line="221" pos:column="70">HighScoreKey</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="84">HighScoreDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="223" pos:column="25">set</name>
			<block pos:line="224" pos:column="25">{
				<comment type="line" pos:line="225" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="226" pos:column="33">if <condition pos:line="226" pos:column="36">(<expr><call><name><name pos:line="226" pos:column="37">AppSettings</name><op:operator pos:line="226" pos:column="48">.</op:operator><name pos:line="226" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="226" pos:column="65">(<argument><expr><name pos:line="226" pos:column="66">HighScoreKey</name></expr></argument>, <argument><expr><name pos:line="226" pos:column="80">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="226" pos:column="87">
					<expr_stmt><expr><call><name><name pos:line="227" pos:column="41">AppSettings</name><op:operator pos:line="227" pos:column="52">.</op:operator><name pos:line="227" pos:column="53">Save</name></name><argument_list pos:line="227" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="231" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="232" pos:column="17">/// Gets or sets the goal today day.</comment>
		<comment type="line" pos:line="233" pos:column="17">/// Only display messages if it is currenlty the same day.</comment>
		<comment type="line" pos:line="234" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="235" pos:column="17">/// &lt;value&gt;The goal today day.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="236" pos:column="17">public</specifier> <specifier pos:line="236" pos:column="24">static</specifier> <name pos:line="236" pos:column="31">DateTime</name></type> <name pos:line="236" pos:column="40">GoalTodayDay</name>
		<block pos:line="237" pos:column="17">{
			<function><name pos:line="238" pos:column="25">get</name>
			<block pos:line="239" pos:column="25">{
				<return pos:line="240" pos:column="33">return <expr><call><name><name pos:line="240" pos:column="40">AppSettings</name><op:operator pos:line="240" pos:column="51">.</op:operator><name pos:line="240" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="240" pos:column="69">(<argument><expr><name pos:line="240" pos:column="70">GoalTodayDayKey</name></expr></argument>, <argument><expr><name pos:line="240" pos:column="87">GoalTodayDayDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="242" pos:column="25">set</name>
			<block pos:line="243" pos:column="25">{
				<comment type="line" pos:line="244" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="245" pos:column="33">if <condition pos:line="245" pos:column="36">(<expr><call><name><name pos:line="245" pos:column="37">AppSettings</name><op:operator pos:line="245" pos:column="48">.</op:operator><name pos:line="245" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="245" pos:column="65">(<argument><expr><name pos:line="245" pos:column="66">GoalTodayDayKey</name></expr></argument>, <argument><expr><name pos:line="245" pos:column="83">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="245" pos:column="90">
					<expr_stmt><expr><call><name><name pos:line="246" pos:column="41">AppSettings</name><op:operator pos:line="246" pos:column="52">.</op:operator><name pos:line="246" pos:column="53">Save</name></name><argument_list pos:line="246" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="250" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="251" pos:column="17">/// Gets or sets the high score day.</comment>
		<comment type="line" pos:line="252" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="253" pos:column="17">/// &lt;value&gt;The high score day.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="254" pos:column="17">public</specifier> <specifier pos:line="254" pos:column="24">static</specifier> <name pos:line="254" pos:column="31">DateTime</name></type> <name pos:line="254" pos:column="40">HighScoreDay</name>
		<block pos:line="255" pos:column="17">{
			<function><name pos:line="256" pos:column="25">get</name>
			<block pos:line="257" pos:column="25">{
				<return pos:line="258" pos:column="33">return <expr><call><name><name pos:line="258" pos:column="40">AppSettings</name><op:operator pos:line="258" pos:column="51">.</op:operator><name pos:line="258" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="258" pos:column="69">(<argument><expr><name pos:line="258" pos:column="70">HighScoreDayKey</name></expr></argument>, <argument><expr><name pos:line="258" pos:column="87">HighScoreDayDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="260" pos:column="25">set</name>
			<block pos:line="261" pos:column="25">{
				<comment type="line" pos:line="262" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="263" pos:column="33">if <condition pos:line="263" pos:column="36">(<expr><call><name><name pos:line="263" pos:column="37">AppSettings</name><op:operator pos:line="263" pos:column="48">.</op:operator><name pos:line="263" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="263" pos:column="65">(<argument><expr><name pos:line="263" pos:column="66">HighScoreDayKey</name></expr></argument>, <argument><expr><name pos:line="263" pos:column="83">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="263" pos:column="90">
					<expr_stmt><expr><call><name><name pos:line="264" pos:column="41">AppSettings</name><op:operator pos:line="264" pos:column="52">.</op:operator><name pos:line="264" pos:column="53">Save</name></name><argument_list pos:line="264" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="268" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="269" pos:column="17">/// Gets or sets the day we are currently tracking</comment>
		<comment type="line" pos:line="270" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="271" pos:column="17">/// &lt;value&gt;The current day.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="272" pos:column="17">public</specifier> <specifier pos:line="272" pos:column="24">static</specifier> <name pos:line="272" pos:column="31">DateTime</name></type> <name pos:line="272" pos:column="40">CurrentDay</name>
		<block pos:line="273" pos:column="17">{
			<function><name pos:line="274" pos:column="25">get</name>
			<block pos:line="275" pos:column="25">{
				<return pos:line="276" pos:column="33">return <expr><call><name><name pos:line="276" pos:column="40">AppSettings</name><op:operator pos:line="276" pos:column="51">.</op:operator><name pos:line="276" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="276" pos:column="69">(<argument><expr><name pos:line="276" pos:column="70">CurrentDayKey</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="85">CurrentDayDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="278" pos:column="25">set</name>
			<block pos:line="279" pos:column="25">{
				<comment type="line" pos:line="280" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="281" pos:column="33">if <condition pos:line="281" pos:column="36">(<expr><call><name><name pos:line="281" pos:column="37">AppSettings</name><op:operator pos:line="281" pos:column="48">.</op:operator><name pos:line="281" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="281" pos:column="65">(<argument><expr><name pos:line="281" pos:column="66">CurrentDayKey</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="81">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="281" pos:column="88">
					<expr_stmt><expr><call><name><name pos:line="282" pos:column="41">AppSettings</name><op:operator pos:line="282" pos:column="52">.</op:operator><name pos:line="282" pos:column="53">Save</name></name><argument_list pos:line="282" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="286" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="287" pos:column="17">/// Gets or sets the steps before today.</comment>
		<comment type="line" pos:line="288" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="289" pos:column="17">/// &lt;value&gt;The steps before today.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="290" pos:column="17">public</specifier> <specifier pos:line="290" pos:column="24">static</specifier> <name pos:line="290" pos:column="31">Int64</name></type> <name pos:line="290" pos:column="37">StepsBeforeToday</name>
		<block pos:line="291" pos:column="17">{
			<function><name pos:line="292" pos:column="25">get</name>
			<block pos:line="293" pos:column="25">{
				<return pos:line="294" pos:column="33">return <expr><call><name><name pos:line="294" pos:column="40">AppSettings</name><op:operator pos:line="294" pos:column="51">.</op:operator><name pos:line="294" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="294" pos:column="69">(<argument><expr><name pos:line="294" pos:column="70">StepsBeforeTodayKey</name></expr></argument>, <argument><expr><name pos:line="294" pos:column="91">StepsBeforeTodayDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="296" pos:column="25">set</name>
			<block pos:line="297" pos:column="25">{
				<comment type="line" pos:line="298" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="299" pos:column="33">if <condition pos:line="299" pos:column="36">(<expr><call><name><name pos:line="299" pos:column="37">AppSettings</name><op:operator pos:line="299" pos:column="48">.</op:operator><name pos:line="299" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="299" pos:column="65">(<argument><expr><name pos:line="299" pos:column="66">StepsBeforeTodayKey</name></expr></argument>, <argument><expr><name pos:line="299" pos:column="87">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="299" pos:column="94">
					<expr_stmt><expr><call><name><name pos:line="300" pos:column="41">AppSettings</name><op:operator pos:line="300" pos:column="52">.</op:operator><name pos:line="300" pos:column="53">Save</name></name><argument_list pos:line="300" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="304" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="305" pos:column="17">/// Gets or sets the cadence. (pace of walking)</comment>
		<comment type="line" pos:line="306" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="307" pos:column="17">/// &lt;value&gt;The cadence.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="308" pos:column="17">public</specifier> <specifier pos:line="308" pos:column="24">static</specifier> <name pos:line="308" pos:column="31">string</name></type> <name pos:line="308" pos:column="38">Cadence</name>
		<block pos:line="309" pos:column="17">{
			<function><name pos:line="310" pos:column="25">get</name>
			<block pos:line="311" pos:column="25">{
				<return pos:line="312" pos:column="33">return <expr><call><name><name pos:line="312" pos:column="40">AppSettings</name><op:operator pos:line="312" pos:column="51">.</op:operator><name pos:line="312" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="312" pos:column="69">(<argument><expr><name pos:line="312" pos:column="70">CadenceKey</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="82">CadenceDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="314" pos:column="25">set</name>
			<block pos:line="315" pos:column="25">{
				<comment type="line" pos:line="316" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="317" pos:column="33">if <condition pos:line="317" pos:column="36">(<expr><call><name><name pos:line="317" pos:column="37">AppSettings</name><op:operator pos:line="317" pos:column="48">.</op:operator><name pos:line="317" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="317" pos:column="65">(<argument><expr><name pos:line="317" pos:column="66">CadenceKey</name></expr></argument>, <argument><expr><name pos:line="317" pos:column="78">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="317" pos:column="85">
					<expr_stmt><expr><call><name><name pos:line="318" pos:column="41">AppSettings</name><op:operator pos:line="318" pos:column="52">.</op:operator><name pos:line="318" pos:column="53">Save</name></name><argument_list pos:line="318" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="322" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="323" pos:column="17">/// Gets or sets the current day steps.</comment>
		<comment type="line" pos:line="324" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="325" pos:column="17">/// &lt;value&gt;The current day steps.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="326" pos:column="17">public</specifier> <specifier pos:line="326" pos:column="24">static</specifier> <name pos:line="326" pos:column="31">Int64</name></type> <name pos:line="326" pos:column="37">CurrentDaySteps</name>
		<block pos:line="327" pos:column="17">{
			<function><name pos:line="328" pos:column="25">get</name>
			<block pos:line="329" pos:column="25">{
				<return pos:line="330" pos:column="33">return <expr><call><name><name pos:line="330" pos:column="40">AppSettings</name><op:operator pos:line="330" pos:column="51">.</op:operator><name pos:line="330" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="330" pos:column="69">(<argument><expr><name pos:line="330" pos:column="70">CurrentDayStepsKey</name></expr></argument>, <argument><expr><name pos:line="330" pos:column="90">CurrentDayStepsDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="332" pos:column="25">set</name>
			<block pos:line="333" pos:column="25">{
				<comment type="line" pos:line="334" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="335" pos:column="33">if <condition pos:line="335" pos:column="36">(<expr><call><name><name pos:line="335" pos:column="37">AppSettings</name><op:operator pos:line="335" pos:column="48">.</op:operator><name pos:line="335" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="335" pos:column="65">(<argument><expr><name pos:line="335" pos:column="66">CurrentDayStepsKey</name></expr></argument>, <argument><expr><name pos:line="335" pos:column="86">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="335" pos:column="93">
					<expr_stmt><expr><call><name><name pos:line="336" pos:column="41">AppSettings</name><op:operator pos:line="336" pos:column="52">.</op:operator><name pos:line="336" pos:column="53">Save</name></name><argument_list pos:line="336" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="340" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="341" pos:column="17">/// Gets or sets the total steps since the beginning of tracking</comment>
		<comment type="line" pos:line="342" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="343" pos:column="17">/// &lt;value&gt;The total steps.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="344" pos:column="17">public</specifier> <specifier pos:line="344" pos:column="24">static</specifier> <name pos:line="344" pos:column="31">Int64</name></type> <name pos:line="344" pos:column="37">TotalSteps</name>
		<block pos:line="345" pos:column="17">{
			<function><name pos:line="346" pos:column="25">get</name>
			<block pos:line="347" pos:column="25">{
				<return pos:line="348" pos:column="33">return <expr><call><name><name pos:line="348" pos:column="40">AppSettings</name><op:operator pos:line="348" pos:column="51">.</op:operator><name pos:line="348" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="348" pos:column="69">(<argument><expr><name pos:line="348" pos:column="70">TotalStepsKey</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="85">TotalStepsDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="350" pos:column="25">set</name>
			<block pos:line="351" pos:column="25">{
				<comment type="line" pos:line="352" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="353" pos:column="33">if <condition pos:line="353" pos:column="36">(<expr><call><name><name pos:line="353" pos:column="37">AppSettings</name><op:operator pos:line="353" pos:column="48">.</op:operator><name pos:line="353" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="353" pos:column="65">(<argument><expr><name pos:line="353" pos:column="66">TotalStepsKey</name></expr></argument>, <argument><expr><name pos:line="353" pos:column="81">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="353" pos:column="88">
					<expr_stmt><expr><call><name><name pos:line="354" pos:column="41">AppSettings</name><op:operator pos:line="354" pos:column="52">.</op:operator><name pos:line="354" pos:column="53">Save</name></name><argument_list pos:line="354" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="358" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="359" pos:column="17">/// Gets or sets the weight. (used for calulations)</comment>
		<comment type="line" pos:line="360" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="361" pos:column="17">/// &lt;value&gt;The weight.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="362" pos:column="17">public</specifier> <specifier pos:line="362" pos:column="24">static</specifier> <name pos:line="362" pos:column="31">int</name></type> <name pos:line="362" pos:column="35">Weight</name>
    <block pos:line="363" pos:column="5">{
      <function><name pos:line="364" pos:column="7">get</name>
      <block pos:line="365" pos:column="7">{
				<return pos:line="366" pos:column="33">return <expr><call><name><name pos:line="366" pos:column="40">AppSettings</name><op:operator pos:line="366" pos:column="51">.</op:operator><name pos:line="366" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="366" pos:column="69">(<argument><expr><name pos:line="366" pos:column="70">WeightKey</name></expr></argument>, <argument><expr><name pos:line="366" pos:column="81">WeightDefault</name></expr></argument>)</argument_list></call></expr>;</return>
      }</block></function>
      <function><name pos:line="368" pos:column="7">set</name>
      <block pos:line="369" pos:column="7">{
        <comment type="line" pos:line="370" pos:column="9">//if value has changed then save it!</comment>
				<if pos:line="371" pos:column="33">if <condition pos:line="371" pos:column="36">(<expr><call><name><name pos:line="371" pos:column="37">AppSettings</name><op:operator pos:line="371" pos:column="48">.</op:operator><name pos:line="371" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="371" pos:column="65">(<argument><expr><name pos:line="371" pos:column="66">WeightKey</name></expr></argument>, <argument><expr><name pos:line="371" pos:column="77">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="371" pos:column="84">
          <expr_stmt><expr><call><name><name pos:line="372" pos:column="11">AppSettings</name><op:operator pos:line="372" pos:column="22">.</op:operator><name pos:line="372" pos:column="23">Save</name></name><argument_list pos:line="372" pos:column="27">()</argument_list></call></expr>;</expr_stmt></then></if>
      }</block></function>
    }</block></decl></decl_stmt>

		<comment type="line" pos:line="376" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="377" pos:column="17">/// Gets or sets a value indicating whether we want to use enhanced tracking</comment>
		<comment type="line" pos:line="378" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="379" pos:column="17">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if enhanced; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="380" pos:column="17">public</specifier> <specifier pos:line="380" pos:column="24">static</specifier> <name pos:line="380" pos:column="31">bool</name></type> <name pos:line="380" pos:column="36">Enhanced</name>
		<block pos:line="381" pos:column="17">{
			<function><name pos:line="382" pos:column="25">get</name>
			<block pos:line="383" pos:column="25">{
				<return pos:line="384" pos:column="33">return <expr><call><name><name pos:line="384" pos:column="40">AppSettings</name><op:operator pos:line="384" pos:column="51">.</op:operator><name pos:line="384" pos:column="52">GetValueOrDefault</name></name><argument_list pos:line="384" pos:column="69">(<argument><expr><name pos:line="384" pos:column="70">EnhancedKey</name></expr></argument>, <argument><expr><name pos:line="384" pos:column="83">EnhancedDefault</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></function>
			<function><name pos:line="386" pos:column="25">set</name>
			<block pos:line="387" pos:column="25">{
				<comment type="line" pos:line="388" pos:column="33">//if value has changed then save it!</comment>
				<if pos:line="389" pos:column="33">if <condition pos:line="389" pos:column="36">(<expr><call><name><name pos:line="389" pos:column="37">AppSettings</name><op:operator pos:line="389" pos:column="48">.</op:operator><name pos:line="389" pos:column="49">AddOrUpdateValue</name></name><argument_list pos:line="389" pos:column="65">(<argument><expr><name pos:line="389" pos:column="66">EnhancedKey</name></expr></argument>, <argument><expr><name pos:line="389" pos:column="79">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="389" pos:column="86">
					<expr_stmt><expr><call><name><name pos:line="390" pos:column="41">AppSettings</name><op:operator pos:line="390" pos:column="52">.</op:operator><name pos:line="390" pos:column="53">Save</name></name><argument_list pos:line="390" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></function>
		}</block></decl></decl_stmt>

		<comment type="line" pos:line="394" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="395" pos:column="17">/// Gets a value indicating whether to use kilometeres.</comment>
		<comment type="line" pos:line="396" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="397" pos:column="17">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if use kilometeres; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="398" pos:column="17">public</specifier> <specifier pos:line="398" pos:column="24">static</specifier> <name pos:line="398" pos:column="31">bool</name></type> <name pos:line="398" pos:column="36">UseKilometeres</name> 
		<block pos:line="399" pos:column="17">{
			<function><name pos:line="400" pos:column="25">get</name> 
			<block pos:line="401" pos:column="25">{
				<return pos:line="402" pos:column="33">return <expr><name><name pos:line="402" pos:column="40">CultureInfo</name><op:operator pos:line="402" pos:column="51">.</op:operator><name pos:line="402" pos:column="52">CurrentCulture</name><op:operator pos:line="402" pos:column="66">.</op:operator><name pos:line="402" pos:column="67">Name</name></name> <op:operator pos:line="402" pos:column="72">!=</op:operator> <lit:literal type="string" pos:line="402" pos:column="75">"en-US"</lit:literal></expr>;</return>
			}</block></function>
		}</block></decl></decl_stmt>

		<class><specifier pos:line="406" pos:column="17">private</specifier> class <name pos:line="406" pos:column="31">SettingsHelper</name>
		<block pos:line="407" pos:column="17">{
						<decl_stmt><decl><type><specifier pos:line="408" pos:column="49">public</specifier> <specifier pos:line="408" pos:column="56">static</specifier> <name pos:line="408" pos:column="63">ISharedPreferences</name></type> <name pos:line="408" pos:column="82">SharedPreferences</name> <block pos:line="408" pos:column="100">{ <function_decl><name pos:line="408" pos:column="102">get</name>;</function_decl> <function_decl><name pos:line="408" pos:column="107">set</name>;</function_decl> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="409" pos:column="17">private</specifier> <specifier pos:line="409" pos:column="25">static</specifier> <name pos:line="409" pos:column="32">ISharedPreferencesEditor</name></type> <name pos:line="409" pos:column="57">SharedPreferencesEditor</name> <block pos:line="409" pos:column="81">{ <function_decl><name pos:line="409" pos:column="83">get</name>;</function_decl> <function_decl><name pos:line="409" pos:column="88">set</name>;</function_decl> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="410" pos:column="17">private</specifier> <specifier pos:line="410" pos:column="25">readonly</specifier> <name pos:line="410" pos:column="34">object</name></type> <name pos:line="410" pos:column="41">locker</name> <init pos:line="410" pos:column="48">= <expr><op:operator pos:line="410" pos:column="50">new</op:operator> <call><name pos:line="410" pos:column="54">object</name><argument_list pos:line="410" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<constructor><specifier pos:line="412" pos:column="25">public</specifier> <name pos:line="412" pos:column="32">SettingsHelper</name><parameter_list pos:line="412" pos:column="46">()</parameter_list>
			<block pos:line="413" pos:column="25">{
				<expr_stmt><expr><name pos:line="414" pos:column="33">SharedPreferences</name> <op:operator pos:line="414" pos:column="51">=</op:operator> <call><name><name pos:line="414" pos:column="53">PreferenceManager</name><op:operator pos:line="414" pos:column="70">.</op:operator><name pos:line="414" pos:column="71">GetDefaultSharedPreferences</name></name><argument_list pos:line="414" pos:column="98">(<argument><expr><name><name pos:line="414" pos:column="99">Application</name><op:operator pos:line="414" pos:column="110">.</op:operator><name pos:line="414" pos:column="111">Context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="415" pos:column="33">SharedPreferencesEditor</name> <op:operator pos:line="415" pos:column="57">=</op:operator> <call><name><name pos:line="415" pos:column="59">SharedPreferences</name><op:operator pos:line="415" pos:column="76">.</op:operator><name pos:line="415" pos:column="77">Edit</name></name><argument_list pos:line="415" pos:column="81">()</argument_list></call></expr>;</expr_stmt>

			}</block></constructor>

		<comment type="line" pos:line="419" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="420" pos:column="17">/// Gets the current value or the default that you specify.</comment>
		<comment type="line" pos:line="421" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="422" pos:column="17">/// &lt;typeparam name="T"&gt;Vaue of t (bool, int, float, long, string)&lt;/typeparam&gt;</comment>
		<comment type="line" pos:line="423" pos:column="17">/// &lt;param name="key"&gt;Key for settings&lt;/param&gt;</comment>
		<comment type="line" pos:line="424" pos:column="17">/// &lt;param name="defaultValue"&gt;default value if not set&lt;/param&gt;</comment>
		<comment type="line" pos:line="425" pos:column="17">/// &lt;returns&gt;Value or default&lt;/returns&gt;</comment>
		<function><type><specifier pos:line="426" pos:column="17">public</specifier> <name pos:line="426" pos:column="24">T</name></type> <name><name pos:line="426" pos:column="26">GetValueOrDefault</name><argument_list pos:line="426" pos:column="43">&lt;<argument><name pos:line="426" pos:column="44">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="426" pos:column="46">(<param><decl><type><name pos:line="426" pos:column="47">string</name></type> <name pos:line="426" pos:column="54">key</name></decl></param>, <param><decl><type><name pos:line="426" pos:column="59">T</name></type> <name pos:line="426" pos:column="61">defaultValue</name> <init pos:line="426" pos:column="74">= <expr><call><name pos:line="426" pos:column="76">default</name><argument_list pos:line="426" pos:column="83">(<argument><expr><name pos:line="426" pos:column="84">T</name></expr></argument>)</argument_list></call></expr></init></decl></param>)</parameter_list>
		<block pos:line="427" pos:column="17">{
			<lock pos:line="428" pos:column="25">lock (<expr><name pos:line="428" pos:column="31">locker</name></expr>)
			<block pos:line="429" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="430" pos:column="33">Type</name></type> <name pos:line="430" pos:column="38">typeOf</name> <init pos:line="430" pos:column="45">= <expr><call><name pos:line="430" pos:column="47">typeof</name><argument_list pos:line="430" pos:column="53">(<argument><expr><name pos:line="430" pos:column="54">T</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="431" pos:column="33">if <condition pos:line="431" pos:column="36">(<expr><name><name pos:line="431" pos:column="37">typeOf</name><op:operator pos:line="431" pos:column="43">.</op:operator><name pos:line="431" pos:column="44">IsGenericType</name> <type:modifier pos:line="431" pos:column="58">&amp;&amp;</type:modifier></name> <call><name><name pos:line="431" pos:column="61">typeOf</name><op:operator pos:line="431" pos:column="67">.</op:operator><name pos:line="431" pos:column="68">GetGenericTypeDefinition</name></name><argument_list pos:line="431" pos:column="92">()</argument_list></call> <op:operator pos:line="431" pos:column="95">==</op:operator> <call><name pos:line="431" pos:column="98">typeof</name><argument_list pos:line="431" pos:column="104">(<argument><expr><name><name pos:line="431" pos:column="105">Nullable</name><argument_list pos:line="431" pos:column="113">&lt;&gt;</argument_list></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="431" pos:column="117">
				<block pos:line="432" pos:column="33">{
					<expr_stmt><expr><name pos:line="433" pos:column="41">typeOf</name> <op:operator pos:line="433" pos:column="48">=</op:operator> <call><name><name pos:line="433" pos:column="50">Nullable</name><op:operator pos:line="433" pos:column="58">.</op:operator><name pos:line="433" pos:column="59">GetUnderlyingType</name></name><argument_list pos:line="433" pos:column="76">(<argument><expr><name pos:line="433" pos:column="77">typeOf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="435" pos:column="33">object</name></type> <name pos:line="435" pos:column="40">value</name> <init pos:line="435" pos:column="46">= <expr><name pos:line="435" pos:column="48">null</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="436" pos:column="33">var</name></type> <name pos:line="436" pos:column="37">typeCode</name> <init pos:line="436" pos:column="46">= <expr><call><name><name pos:line="436" pos:column="48">Type</name><op:operator pos:line="436" pos:column="52">.</op:operator><name pos:line="436" pos:column="53">GetTypeCode</name></name><argument_list pos:line="436" pos:column="64">(<argument><expr><name pos:line="436" pos:column="65">typeOf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<switch pos:line="437" pos:column="33">switch <condition pos:line="437" pos:column="40">(<expr><name pos:line="437" pos:column="41">typeCode</name></expr>)</condition>
				<block pos:line="438" pos:column="33">{
				<case pos:line="439" pos:column="33">case <expr><name><name pos:line="439" pos:column="38">TypeCode</name><op:operator pos:line="439" pos:column="46">.</op:operator><name pos:line="439" pos:column="47">Boolean</name></name></expr>:
					<expr_stmt><expr><name pos:line="440" pos:column="41">value</name> <op:operator pos:line="440" pos:column="47">=</op:operator> <call><name><name pos:line="440" pos:column="49">SharedPreferences</name><op:operator pos:line="440" pos:column="66">.</op:operator><name pos:line="440" pos:column="67">GetBoolean</name></name><argument_list pos:line="440" pos:column="77">(<argument><expr><name pos:line="440" pos:column="78">key</name></expr></argument>, <argument><expr><call><name><name pos:line="440" pos:column="83">Convert</name><op:operator pos:line="440" pos:column="90">.</op:operator><name pos:line="440" pos:column="91">ToBoolean</name></name><argument_list pos:line="440" pos:column="100">(<argument><expr><name pos:line="440" pos:column="101">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="441" pos:column="41">break;</break>
				</case><case pos:line="442" pos:column="33">case <expr><name><name pos:line="442" pos:column="38">TypeCode</name><op:operator pos:line="442" pos:column="46">.</op:operator><name pos:line="442" pos:column="47">Int64</name></name></expr>:
						<expr_stmt><expr><name pos:line="443" pos:column="49">value</name> <op:operator pos:line="443" pos:column="55">=</op:operator> <call><name><name pos:line="443" pos:column="57">SharedPreferences</name><op:operator pos:line="443" pos:column="74">.</op:operator><name pos:line="443" pos:column="75">GetLong</name></name><argument_list pos:line="443" pos:column="82">(<argument><expr><name pos:line="443" pos:column="83">key</name></expr></argument>, <argument><expr><call><name><name pos:line="443" pos:column="88">Convert</name><op:operator pos:line="443" pos:column="95">.</op:operator><name pos:line="443" pos:column="96">ToInt64</name></name><argument_list pos:line="443" pos:column="103">(<argument><expr><name pos:line="443" pos:column="104">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="444" pos:column="41">break;</break>
				</case><case pos:line="445" pos:column="33">case <expr><name><name pos:line="445" pos:column="38">TypeCode</name><op:operator pos:line="445" pos:column="46">.</op:operator><name pos:line="445" pos:column="47">String</name></name></expr>:
					<expr_stmt><expr><name pos:line="446" pos:column="41">value</name> <op:operator pos:line="446" pos:column="47">=</op:operator> <call><name><name pos:line="446" pos:column="49">SharedPreferences</name><op:operator pos:line="446" pos:column="66">.</op:operator><name pos:line="446" pos:column="67">GetString</name></name><argument_list pos:line="446" pos:column="76">(<argument><expr><name pos:line="446" pos:column="77">key</name></expr></argument>, <argument><expr><call><name><name pos:line="446" pos:column="82">Convert</name><op:operator pos:line="446" pos:column="89">.</op:operator><name pos:line="446" pos:column="90">ToString</name></name><argument_list pos:line="446" pos:column="98">(<argument><expr><name pos:line="446" pos:column="99">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="447" pos:column="41">break;</break>
				</case><case pos:line="448" pos:column="33">case <expr><name><name pos:line="448" pos:column="38">TypeCode</name><op:operator pos:line="448" pos:column="46">.</op:operator><name pos:line="448" pos:column="47">Int32</name></name></expr>:
					<expr_stmt><expr><name pos:line="449" pos:column="41">value</name> <op:operator pos:line="449" pos:column="47">=</op:operator> <call><name><name pos:line="449" pos:column="49">SharedPreferences</name><op:operator pos:line="449" pos:column="66">.</op:operator><name pos:line="449" pos:column="67">GetInt</name></name><argument_list pos:line="449" pos:column="73">(<argument><expr><name pos:line="449" pos:column="74">key</name></expr></argument>, <argument><expr><call><name><name pos:line="449" pos:column="79">Convert</name><op:operator pos:line="449" pos:column="86">.</op:operator><name pos:line="449" pos:column="87">ToInt32</name></name><argument_list pos:line="449" pos:column="94">(<argument><expr><name pos:line="449" pos:column="95">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="450" pos:column="41">break;</break>
				</case><case pos:line="451" pos:column="33">case <expr><name><name pos:line="451" pos:column="38">TypeCode</name><op:operator pos:line="451" pos:column="46">.</op:operator><name pos:line="451" pos:column="47">Single</name></name></expr>:
					<expr_stmt><expr><name pos:line="452" pos:column="41">value</name> <op:operator pos:line="452" pos:column="47">=</op:operator> <call><name><name pos:line="452" pos:column="49">SharedPreferences</name><op:operator pos:line="452" pos:column="66">.</op:operator><name pos:line="452" pos:column="67">GetFloat</name></name><argument_list pos:line="452" pos:column="75">(<argument><expr><name pos:line="452" pos:column="76">key</name></expr></argument>, <argument><expr><call><name><name pos:line="452" pos:column="81">Convert</name><op:operator pos:line="452" pos:column="88">.</op:operator><name pos:line="452" pos:column="89">ToSingle</name></name><argument_list pos:line="452" pos:column="97">(<argument><expr><name pos:line="452" pos:column="98">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="453" pos:column="41">break;</break>
				</case><case pos:line="454" pos:column="33">case <expr><name><name pos:line="454" pos:column="38">TypeCode</name><op:operator pos:line="454" pos:column="46">.</op:operator><name pos:line="454" pos:column="47">DateTime</name></name></expr>:
					<decl_stmt><decl><type><name pos:line="455" pos:column="41">var</name></type> <name pos:line="455" pos:column="45">ticks</name> <init pos:line="455" pos:column="51">= <expr><call><name><name pos:line="455" pos:column="53">SharedPreferences</name><op:operator pos:line="455" pos:column="70">.</op:operator><name pos:line="455" pos:column="71">GetLong</name></name><argument_list pos:line="455" pos:column="78">(<argument><expr><name pos:line="455" pos:column="79">key</name></expr></argument>, <argument><expr><op:operator pos:line="455" pos:column="84">-</op:operator><lit:literal type="number" pos:line="455" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="456" pos:column="41">if <condition pos:line="456" pos:column="44">(<expr><name pos:line="456" pos:column="45">ticks</name> <op:operator pos:line="456" pos:column="51">==</op:operator> <op:operator pos:line="456" pos:column="54">-</op:operator><lit:literal type="number" pos:line="456" pos:column="55">1</lit:literal></expr>)</condition><then pos:line="456" pos:column="57">
						<expr_stmt><expr><name pos:line="457" pos:column="49">value</name> <op:operator pos:line="457" pos:column="55">=</op:operator> <name pos:line="457" pos:column="57">defaultValue</name></expr>;</expr_stmt></then>
					<else pos:line="458" pos:column="41">else
						<expr_stmt><expr><name pos:line="459" pos:column="49">value</name> <op:operator pos:line="459" pos:column="55">=</op:operator> <op:operator pos:line="459" pos:column="57">new</op:operator> <call><name pos:line="459" pos:column="61">DateTime</name><argument_list pos:line="459" pos:column="69">(<argument><expr><name pos:line="459" pos:column="70">ticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
					<break pos:line="460" pos:column="41">break;</break>
				</case>}</block></switch>

				<return pos:line="463" pos:column="33">return <expr><name pos:line="463" pos:column="40">null</name> <op:operator pos:line="463" pos:column="45">!=</op:operator> <name pos:line="463" pos:column="48">value</name> <op:operator pos:line="463" pos:column="54">?</op:operator> <op:operator pos:line="463" pos:column="56">(</op:operator><name pos:line="463" pos:column="57">T</name><op:operator pos:line="463" pos:column="58">)</op:operator><name pos:line="463" pos:column="59">value</name> <op:operator pos:line="463" pos:column="65">:</op:operator> <name pos:line="463" pos:column="67">defaultValue</name></expr>;</return>
			}</block></lock>
		}</block></function>

		<comment type="line" pos:line="467" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="468" pos:column="17">/// Adds or updates a value</comment>
		<comment type="line" pos:line="469" pos:column="17">/// &lt;/summary&gt;</comment>
		<comment type="line" pos:line="470" pos:column="17">/// &lt;param name="key"&gt;key to update&lt;/param&gt;</comment>
		<comment type="line" pos:line="471" pos:column="17">/// &lt;param name="value"&gt;value to set&lt;/param&gt;</comment>
		<comment type="line" pos:line="472" pos:column="17">/// &lt;returns&gt;True if added or update and you need to save&lt;/returns&gt;</comment>
		<function><type><specifier pos:line="473" pos:column="17">public</specifier> <name pos:line="473" pos:column="24">bool</name></type> <name pos:line="473" pos:column="29">AddOrUpdateValue</name><parameter_list pos:line="473" pos:column="45">(<param><decl><type><name pos:line="473" pos:column="46">string</name></type> <name pos:line="473" pos:column="53">key</name></decl></param>, <param><decl><type><name pos:line="473" pos:column="58">object</name></type> <name pos:line="473" pos:column="65">value</name></decl></param>)</parameter_list>
		<block pos:line="474" pos:column="17">{
			<lock pos:line="475" pos:column="25">lock (<expr><name pos:line="475" pos:column="31">locker</name></expr>)
			<block pos:line="476" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="477" pos:column="33">Type</name></type> <name pos:line="477" pos:column="38">typeOf</name> <init pos:line="477" pos:column="45">= <expr><call><name><name pos:line="477" pos:column="47">value</name><op:operator pos:line="477" pos:column="52">.</op:operator><name pos:line="477" pos:column="53">GetType</name></name><argument_list pos:line="477" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="478" pos:column="33">if <condition pos:line="478" pos:column="36">(<expr><name><name pos:line="478" pos:column="37">typeOf</name><op:operator pos:line="478" pos:column="43">.</op:operator><name pos:line="478" pos:column="44">IsGenericType</name> <type:modifier pos:line="478" pos:column="58">&amp;&amp;</type:modifier></name> <call><name><name pos:line="478" pos:column="61">typeOf</name><op:operator pos:line="478" pos:column="67">.</op:operator><name pos:line="478" pos:column="68">GetGenericTypeDefinition</name></name><argument_list pos:line="478" pos:column="92">()</argument_list></call> <op:operator pos:line="478" pos:column="95">==</op:operator> <call><name pos:line="478" pos:column="98">typeof</name><argument_list pos:line="478" pos:column="104">(<argument><expr><name><name pos:line="478" pos:column="105">Nullable</name><argument_list pos:line="478" pos:column="113">&lt;&gt;</argument_list></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="478" pos:column="117">
				<block pos:line="479" pos:column="33">{
					<expr_stmt><expr><name pos:line="480" pos:column="41">typeOf</name> <op:operator pos:line="480" pos:column="48">=</op:operator> <call><name><name pos:line="480" pos:column="50">Nullable</name><op:operator pos:line="480" pos:column="58">.</op:operator><name pos:line="480" pos:column="59">GetUnderlyingType</name></name><argument_list pos:line="480" pos:column="76">(<argument><expr><name pos:line="480" pos:column="77">typeOf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="482" pos:column="33">var</name></type> <name pos:line="482" pos:column="37">typeCode</name> <init pos:line="482" pos:column="46">= <expr><call><name><name pos:line="482" pos:column="48">Type</name><op:operator pos:line="482" pos:column="52">.</op:operator><name pos:line="482" pos:column="53">GetTypeCode</name></name><argument_list pos:line="482" pos:column="64">(<argument><expr><name pos:line="482" pos:column="65">typeOf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<switch pos:line="483" pos:column="33">switch <condition pos:line="483" pos:column="40">(<expr><name pos:line="483" pos:column="41">typeCode</name></expr>)</condition>
				<block pos:line="484" pos:column="33">{
				<case pos:line="485" pos:column="33">case <expr><name><name pos:line="485" pos:column="38">TypeCode</name><op:operator pos:line="485" pos:column="46">.</op:operator><name pos:line="485" pos:column="47">Boolean</name></name></expr>:
					<expr_stmt><expr><call><name><name pos:line="486" pos:column="41">SharedPreferencesEditor</name><op:operator pos:line="486" pos:column="64">.</op:operator><name pos:line="486" pos:column="65">PutBoolean</name></name><argument_list pos:line="486" pos:column="75">(<argument><expr><name pos:line="486" pos:column="76">key</name></expr></argument>, <argument><expr><call><name><name pos:line="486" pos:column="81">Convert</name><op:operator pos:line="486" pos:column="88">.</op:operator><name pos:line="486" pos:column="89">ToBoolean</name></name><argument_list pos:line="486" pos:column="98">(<argument><expr><name pos:line="486" pos:column="99">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="487" pos:column="41">break;</break>
				</case><case pos:line="488" pos:column="33">case <expr><name><name pos:line="488" pos:column="38">TypeCode</name><op:operator pos:line="488" pos:column="46">.</op:operator><name pos:line="488" pos:column="47">Int64</name></name></expr>:
						<expr_stmt><expr><call><name><name pos:line="489" pos:column="49">SharedPreferencesEditor</name><op:operator pos:line="489" pos:column="72">.</op:operator><name pos:line="489" pos:column="73">PutLong</name></name><argument_list pos:line="489" pos:column="80">(<argument><expr><name pos:line="489" pos:column="81">key</name></expr></argument>, <argument><expr><call><name><name pos:line="489" pos:column="86">Convert</name><op:operator pos:line="489" pos:column="93">.</op:operator><name pos:line="489" pos:column="94">ToInt64</name></name><argument_list pos:line="489" pos:column="101">(<argument><expr><name pos:line="489" pos:column="102">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="490" pos:column="41">break;</break>
				</case><case pos:line="491" pos:column="33">case <expr><name><name pos:line="491" pos:column="38">TypeCode</name><op:operator pos:line="491" pos:column="46">.</op:operator><name pos:line="491" pos:column="47">String</name></name></expr>:
					<expr_stmt><expr><call><name><name pos:line="492" pos:column="41">SharedPreferencesEditor</name><op:operator pos:line="492" pos:column="64">.</op:operator><name pos:line="492" pos:column="65">PutString</name></name><argument_list pos:line="492" pos:column="74">(<argument><expr><name pos:line="492" pos:column="75">key</name></expr></argument>, <argument><expr><call><name><name pos:line="492" pos:column="80">Convert</name><op:operator pos:line="492" pos:column="87">.</op:operator><name pos:line="492" pos:column="88">ToString</name></name><argument_list pos:line="492" pos:column="96">(<argument><expr><name pos:line="492" pos:column="97">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="493" pos:column="41">break;</break>
				</case><case pos:line="494" pos:column="33">case <expr><name><name pos:line="494" pos:column="38">TypeCode</name><op:operator pos:line="494" pos:column="46">.</op:operator><name pos:line="494" pos:column="47">Int32</name></name></expr>:
					<expr_stmt><expr><call><name><name pos:line="495" pos:column="41">SharedPreferencesEditor</name><op:operator pos:line="495" pos:column="64">.</op:operator><name pos:line="495" pos:column="65">PutInt</name></name><argument_list pos:line="495" pos:column="71">(<argument><expr><name pos:line="495" pos:column="72">key</name></expr></argument>, <argument><expr><call><name><name pos:line="495" pos:column="77">Convert</name><op:operator pos:line="495" pos:column="84">.</op:operator><name pos:line="495" pos:column="85">ToInt32</name></name><argument_list pos:line="495" pos:column="92">(<argument><expr><name pos:line="495" pos:column="93">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="496" pos:column="41">break;</break>
				</case><case pos:line="497" pos:column="33">case <expr><name><name pos:line="497" pos:column="38">TypeCode</name><op:operator pos:line="497" pos:column="46">.</op:operator><name pos:line="497" pos:column="47">Single</name></name></expr>:
					<expr_stmt><expr><call><name><name pos:line="498" pos:column="41">SharedPreferencesEditor</name><op:operator pos:line="498" pos:column="64">.</op:operator><name pos:line="498" pos:column="65">PutFloat</name></name><argument_list pos:line="498" pos:column="73">(<argument><expr><name pos:line="498" pos:column="74">key</name></expr></argument>, <argument><expr><call><name><name pos:line="498" pos:column="79">Convert</name><op:operator pos:line="498" pos:column="86">.</op:operator><name pos:line="498" pos:column="87">ToSingle</name></name><argument_list pos:line="498" pos:column="95">(<argument><expr><name pos:line="498" pos:column="96">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="499" pos:column="41">break;</break>
				</case><case pos:line="500" pos:column="33">case <expr><name><name pos:line="500" pos:column="38">TypeCode</name><op:operator pos:line="500" pos:column="46">.</op:operator><name pos:line="500" pos:column="47">DateTime</name></name></expr>:
					<expr_stmt><expr><call><name><name pos:line="501" pos:column="41">SharedPreferencesEditor</name><op:operator pos:line="501" pos:column="64">.</op:operator><name pos:line="501" pos:column="65">PutLong</name></name><argument_list pos:line="501" pos:column="72">(<argument><expr><name pos:line="501" pos:column="73">key</name></expr></argument>, <argument><expr><op:operator pos:line="501" pos:column="78">(</op:operator><op:operator pos:line="501" pos:column="79">(</op:operator><name pos:line="501" pos:column="80">DateTime</name><op:operator pos:line="501" pos:column="88">)</op:operator><op:operator pos:line="501" pos:column="89">(</op:operator><name pos:line="501" pos:column="90">object</name><op:operator pos:line="501" pos:column="96">)</op:operator><name pos:line="501" pos:column="97">value</name><op:operator pos:line="501" pos:column="102">)</op:operator><op:operator pos:line="501" pos:column="103">.</op:operator><name pos:line="501" pos:column="104">Ticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="502" pos:column="41">break;</break>
				</case>}</block></switch>
			}</block></lock>

			<return pos:line="506" pos:column="25">return <expr><lit:literal type="boolean" pos:line="506" pos:column="32">true</lit:literal></expr>;</return>
		}</block></function>

		<comment type="line" pos:line="509" pos:column="17">/// &lt;summary&gt;</comment>
		<comment type="line" pos:line="510" pos:column="17">/// Saves out all current settings</comment>
		<comment type="line" pos:line="511" pos:column="17">/// &lt;/summary&gt;</comment>
		<function><type><specifier pos:line="512" pos:column="17">public</specifier> <name pos:line="512" pos:column="24">void</name></type> <name pos:line="512" pos:column="29">Save</name><parameter_list pos:line="512" pos:column="33">()</parameter_list>
		<block pos:line="513" pos:column="17">{
			<lock pos:line="514" pos:column="25">lock (<expr><name pos:line="514" pos:column="31">locker</name></expr>)
			<block pos:line="515" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="516" pos:column="33">SharedPreferencesEditor</name><op:operator pos:line="516" pos:column="56">.</op:operator><name pos:line="516" pos:column="57">Commit</name></name><argument_list pos:line="516" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			}</block></lock>
		}</block></function>
		}</block></class>

  }</block></class>
}</block></namespace></unit>
