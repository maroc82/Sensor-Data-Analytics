<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\My-StepCounter-master\StepCounter.Android\Services\StepService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * My StepCounter:
 * Copyright (C) 2014 Refractored LLC | http://refractored.com
 * James Montemagno | http://twitter.com/JamesMontemagno | http://MotzCod.es
 * 
 * Michael James | http://twitter.com/micjames6 | http://micjames.co.uk/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<using pos:line="20" pos:column="1">using <name pos:line="20" pos:column="7">System</name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">Android</name><op:operator pos:line="21" pos:column="14">.</op:operator><name pos:line="21" pos:column="15">App</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">Android</name><op:operator pos:line="22" pos:column="14">.</op:operator><name pos:line="22" pos:column="15">Hardware</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">Android</name><op:operator pos:line="23" pos:column="14">.</op:operator><name pos:line="23" pos:column="15">Content</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">System</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">StepCounter</name><op:operator pos:line="25" pos:column="18">.</op:operator><name pos:line="25" pos:column="19">Helpers</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">StepCounter</name><op:operator pos:line="26" pos:column="18">.</op:operator><name pos:line="26" pos:column="19">Database</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">StepCounter</name><op:operator pos:line="27" pos:column="18">.</op:operator><name pos:line="27" pos:column="19">Activities</name></name>;</using>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if</cpp:directive> <expr><name pos:line="28" pos:column="5">PRO</name></expr></cpp:if>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">Android</name><op:operator pos:line="29" pos:column="14">.</op:operator><name pos:line="29" pos:column="15">Support</name><op:operator pos:line="29" pos:column="22">.</op:operator><name pos:line="29" pos:column="23">V4</name><op:operator pos:line="29" pos:column="25">.</op:operator><name pos:line="29" pos:column="26">App</name></name>;</using>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif</cpp:directive></cpp:endif>
<using pos:line="31" pos:column="1">using <name><name pos:line="31" pos:column="7">Android</name><op:operator pos:line="31" pos:column="14">.</op:operator><name pos:line="31" pos:column="15">Graphics</name></name>;</using>

<namespace pos:line="33" pos:column="1">namespace <name><name pos:line="33" pos:column="11">StepCounter</name><op:operator pos:line="33" pos:column="22">.</op:operator><name pos:line="33" pos:column="23">Services</name></name>
<block pos:line="34" pos:column="1">{
	<decl_stmt><decl><type><attribute pos:line="35" pos:column="9">[<expr><call><name pos:line="35" pos:column="10">Service</name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">Enabled</name> <op:operator pos:line="35" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="35" pos:column="28">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute></type>
	[<name pos:line="36" pos:column="10">IntentFilter</name><argument_list pos:line="36" pos:column="22">(<argument><expr><op:operator pos:line="36" pos:column="23">new</op:operator> <name><name pos:line="36" pos:column="27">String</name><index pos:line="36" pos:column="33">[]</index></name><block pos:line="36" pos:column="35">{<expr><lit:literal type="string" pos:line="36" pos:column="36">"com.refractored.mystepcounter.StepService"</lit:literal></expr>}</block></expr></argument>)</argument_list>]
	public <name pos:line="37" pos:column="16">class</name> <name pos:line="37" pos:column="22">StepService</name> <op:operator pos:line="37" pos:column="34">:</op:operator> <name pos:line="37" pos:column="36">Service</name></decl><op:operator pos:line="37" pos:column="43">,</op:operator> <decl><type ref="prev"/><name pos:line="37" pos:column="45">ISensorEventListener</name></decl><op:operator pos:line="37" pos:column="65">,</op:operator> <decl><type ref="prev"/><name pos:line="37" pos:column="67">INotifyPropertyChanged</name>
	<block pos:line="38" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="39" pos:column="17">private</specifier> <name pos:line="39" pos:column="25">bool</name></type> <name pos:line="39" pos:column="30">isRunning</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="40" pos:column="17">private</specifier> <name pos:line="40" pos:column="25">Int64</name></type> <name pos:line="40" pos:column="31">stepsToday</name> <init pos:line="40" pos:column="42">= <expr><lit:literal type="number" pos:line="40" pos:column="44">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">public</specifier> <name pos:line="41" pos:column="24">bool</name></type> <name pos:line="41" pos:column="29">WarningState</name> <block pos:line="41" pos:column="42">{
			<function_decl><name pos:line="42" pos:column="25">get</name>;</function_decl>
			<function_decl><name pos:line="43" pos:column="25">set</name>;</function_decl>
		}</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="46" pos:column="17">public</specifier> <name pos:line="46" pos:column="24">Int64</name></type> <name pos:line="46" pos:column="30">StepsToday</name> <block pos:line="46" pos:column="41">{
			<function><name pos:line="47" pos:column="25">get</name><block pos:line="47" pos:column="28">{ <return pos:line="47" pos:column="30">return <expr><name pos:line="47" pos:column="37">stepsToday</name></expr>;</return> }</block></function>
			<function><name pos:line="48" pos:column="25">set</name><block pos:line="48" pos:column="28">{
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><name pos:line="49" pos:column="37">stepsToday</name> <op:operator pos:line="49" pos:column="48">==</op:operator> <name pos:line="49" pos:column="51">value</name></expr>)</condition><then pos:line="49" pos:column="57">
					<return pos:line="50" pos:column="41">return;</return></then></if>

				<expr_stmt><expr><name pos:line="52" pos:column="33">stepsToday</name> <op:operator pos:line="52" pos:column="44">=</op:operator> <name pos:line="52" pos:column="46">value</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="53" pos:column="33">OnPropertyChanged</name> <argument_list pos:line="53" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="52">"StepsToday"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="54" pos:column="33">Helpers</name><op:operator pos:line="54" pos:column="40">.</op:operator><name pos:line="54" pos:column="41">Settings</name><op:operator pos:line="54" pos:column="49">.</op:operator><name pos:line="54" pos:column="50">CurrentDaySteps</name></name> <op:operator pos:line="54" pos:column="66">=</op:operator> <name pos:line="54" pos:column="68">value</name></expr>;</expr_stmt>
			}</block></function>
		}</block></decl></decl_stmt>

		<function><type><specifier pos:line="58" pos:column="17">public</specifier> <specifier pos:line="58" pos:column="24">override</specifier> <name pos:line="58" pos:column="33">StartCommandResult</name></type> <name pos:line="58" pos:column="52">OnStartCommand</name> <parameter_list pos:line="58" pos:column="67">(<param><decl><type><name pos:line="58" pos:column="68">Intent</name></type> <name pos:line="58" pos:column="75">intent</name></decl></param>, <param><decl><type><name pos:line="58" pos:column="83">StartCommandFlags</name></type> <name pos:line="58" pos:column="101">flags</name></decl></param>, <param><decl><type><name pos:line="58" pos:column="108">int</name></type> <name pos:line="58" pos:column="112">startId</name></decl></param>)</parameter_list>
		<block pos:line="59" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="60" pos:column="25">Console</name><op:operator pos:line="60" pos:column="32">.</op:operator><name pos:line="60" pos:column="33">WriteLine</name></name> <argument_list pos:line="60" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="44">"StartCommand Called, setting alarm"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:if pos:line="61" pos:column="25">#<cpp:directive pos:line="61" pos:column="26">if</cpp:directive> <expr><name pos:line="61" pos:column="29">DEBUG</name></expr></cpp:if>
			<expr_stmt><expr><call><name><name pos:line="62" pos:column="25">Android</name><op:operator pos:line="62" pos:column="32">.</op:operator><name pos:line="62" pos:column="33">Util</name><op:operator pos:line="62" pos:column="37">.</op:operator><name pos:line="62" pos:column="38">Log</name><op:operator pos:line="62" pos:column="41">.</op:operator><name pos:line="62" pos:column="42">Debug</name></name> <argument_list pos:line="62" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="49">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="62" pos:column="64">"Start command result called, incoming startup"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:endif pos:line="63" pos:column="25">#<cpp:directive pos:line="63" pos:column="26">endif</cpp:directive></cpp:endif>

			<decl_stmt><decl><type><name pos:line="65" pos:column="25">var</name></type> <name pos:line="65" pos:column="29">alarmManager</name> <init pos:line="65" pos:column="42">= <expr><op:operator pos:line="65" pos:column="44">(</op:operator><op:operator pos:line="65" pos:column="45">(</op:operator><name pos:line="65" pos:column="46">AlarmManager</name><op:operator pos:line="65" pos:column="58">)</op:operator><call><name><name pos:line="65" pos:column="59">ApplicationContext</name><op:operator pos:line="65" pos:column="77">.</op:operator><name pos:line="65" pos:column="78">GetSystemService</name></name> <argument_list pos:line="65" pos:column="95">(<argument><expr><name><name pos:line="65" pos:column="96">Context</name><op:operator pos:line="65" pos:column="103">.</op:operator><name pos:line="65" pos:column="104">AlarmService</name></name></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="117">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="66" pos:column="25">var</name></type> <name pos:line="66" pos:column="29">intent2</name> <init pos:line="66" pos:column="37">= <expr><op:operator pos:line="66" pos:column="39">new</op:operator> <call><name pos:line="66" pos:column="43">Intent</name> <argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">this</name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="57">typeof</name><argument_list pos:line="66" pos:column="63">(<argument><expr><name pos:line="66" pos:column="64">StepService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="67" pos:column="25">intent2</name><op:operator pos:line="67" pos:column="32">.</op:operator><name pos:line="67" pos:column="33">PutExtra</name></name> <argument_list pos:line="67" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="43">"warning"</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">WarningState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="68" pos:column="25">var</name></type> <name pos:line="68" pos:column="29">stepIntent</name> <init pos:line="68" pos:column="40">= <expr><call><name><name pos:line="68" pos:column="42">PendingIntent</name><op:operator pos:line="68" pos:column="55">.</op:operator><name pos:line="68" pos:column="56">GetService</name></name> <argument_list pos:line="68" pos:column="67">(<argument><expr><name pos:line="68" pos:column="68">ApplicationContext</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="68" pos:column="88">10</lit:literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="92">intent2</name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="101">PendingIntentFlags</name><op:operator pos:line="68" pos:column="119">.</op:operator><name pos:line="68" pos:column="120">UpdateCurrent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="69" pos:column="25">// Workaround as on Android 4.4.2 START_STICKY has currently no</comment>
			<comment type="line" pos:line="70" pos:column="25">// effect</comment>
			<comment type="line" pos:line="71" pos:column="25">// -&gt; restart service every 60 mins</comment>
			<expr_stmt><expr><call><name><name pos:line="72" pos:column="25">alarmManager</name><op:operator pos:line="72" pos:column="37">.</op:operator><name pos:line="72" pos:column="38">Set</name></name><argument_list pos:line="72" pos:column="41">(<argument><expr><name><name pos:line="72" pos:column="42">AlarmType</name><op:operator pos:line="72" pos:column="51">.</op:operator><name pos:line="72" pos:column="52">Rtc</name></name></expr></argument>, <argument><expr><call><name><name pos:line="72" pos:column="57">Java</name><op:operator pos:line="72" pos:column="61">.</op:operator><name pos:line="72" pos:column="62">Lang</name><op:operator pos:line="72" pos:column="66">.</op:operator><name pos:line="72" pos:column="67">JavaSystem</name>
				<op:operator pos:line="73" pos:column="33">.</op:operator><name pos:line="73" pos:column="34">CurrentTimeMillis</name></name><argument_list pos:line="73" pos:column="51">()</argument_list></call> <op:operator pos:line="73" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="73" pos:column="56">1000</lit:literal> <op:operator pos:line="73" pos:column="61">*</op:operator> <lit:literal type="number" pos:line="73" pos:column="63">60</lit:literal> <op:operator pos:line="73" pos:column="66">*</op:operator> <lit:literal type="number" pos:line="73" pos:column="68">60</lit:literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="72">stepIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="75" pos:column="25">var</name></type> <name pos:line="75" pos:column="29">warning</name> <init pos:line="75" pos:column="37">= <expr><lit:literal type="boolean" pos:line="75" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">intent</name> <op:operator pos:line="76" pos:column="36">!=</op:operator> <name pos:line="76" pos:column="39">null</name></expr>)</condition><then pos:line="76" pos:column="44">
				<expr_stmt><expr><name pos:line="77" pos:column="33">warning</name> <op:operator pos:line="77" pos:column="41">=</op:operator> <call><name><name pos:line="77" pos:column="43">intent</name><op:operator pos:line="77" pos:column="49">.</op:operator><name pos:line="77" pos:column="50">GetBooleanExtra</name></name> <argument_list pos:line="77" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="67">"warning"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="77" pos:column="78">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">Startup</name> <argument_list pos:line="78" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

			<return pos:line="80" pos:column="25">return <expr><name><name pos:line="80" pos:column="32">StartCommandResult</name><op:operator pos:line="80" pos:column="50">.</op:operator><name pos:line="80" pos:column="51">Sticky</name></name></expr>;</return>
		}</block></function>

	

		<function><type><specifier pos:line="85" pos:column="17">public</specifier> <specifier pos:line="85" pos:column="24">override</specifier> <name pos:line="85" pos:column="33">void</name></type> <name pos:line="85" pos:column="38">OnTaskRemoved</name> <parameter_list pos:line="85" pos:column="52">(<param><decl><type><name pos:line="85" pos:column="53">Intent</name></type> <name pos:line="85" pos:column="60">rootIntent</name></decl></param>)</parameter_list>
		<block pos:line="86" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="87" pos:column="25">base</name><op:operator pos:line="87" pos:column="29">.</op:operator><name pos:line="87" pos:column="30">OnTaskRemoved</name></name> <argument_list pos:line="87" pos:column="44">(<argument><expr><name pos:line="87" pos:column="45">rootIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="89" pos:column="25">UnregisterListeners</name> <argument_list pos:line="89" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			<cpp:if pos:line="90" pos:column="25">#<cpp:directive pos:line="90" pos:column="26">if</cpp:directive> <expr><name pos:line="90" pos:column="29">DEBUG</name></expr></cpp:if>
			<expr_stmt><expr><call><name><name pos:line="91" pos:column="25">Console</name><op:operator pos:line="91" pos:column="32">.</op:operator><name pos:line="91" pos:column="33">WriteLine</name></name> <argument_list pos:line="91" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="44">"OnTaskRemoved Called, setting alarm for 500 ms"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="92" pos:column="25">Android</name><op:operator pos:line="92" pos:column="32">.</op:operator><name pos:line="92" pos:column="33">Util</name><op:operator pos:line="92" pos:column="37">.</op:operator><name pos:line="92" pos:column="38">Log</name><op:operator pos:line="92" pos:column="41">.</op:operator><name pos:line="92" pos:column="42">Debug</name></name> <argument_list pos:line="92" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="49">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="92" pos:column="64">"Task Removed, going down"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:endif pos:line="93" pos:column="25">#<cpp:directive pos:line="93" pos:column="26">endif</cpp:directive></cpp:endif>
			<decl_stmt><decl><type><name pos:line="94" pos:column="25">var</name></type> <name pos:line="94" pos:column="29">intent</name> <init pos:line="94" pos:column="36">= <expr><op:operator pos:line="94" pos:column="38">new</op:operator> <call><name pos:line="94" pos:column="42">Intent</name> <argument_list pos:line="94" pos:column="49">(<argument><expr><name pos:line="94" pos:column="50">this</name></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="56">typeof</name><argument_list pos:line="94" pos:column="62">(<argument><expr><name pos:line="94" pos:column="63">StepService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="95" pos:column="25">intent</name><op:operator pos:line="95" pos:column="31">.</op:operator><name pos:line="95" pos:column="32">PutExtra</name></name> <argument_list pos:line="95" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="42">"warning"</lit:literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="53">WarningState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="96" pos:column="25">// Restart service in 500 ms</comment>
			<expr_stmt><expr><op:operator pos:line="97" pos:column="25">(</op:operator><op:operator pos:line="97" pos:column="26">(</op:operator><name pos:line="97" pos:column="27">AlarmManager</name><op:operator pos:line="97" pos:column="39">)</op:operator> <call><name pos:line="97" pos:column="41">GetSystemService</name><argument_list pos:line="97" pos:column="57">(<argument><expr><name><name pos:line="97" pos:column="58">Context</name><op:operator pos:line="97" pos:column="65">.</op:operator><name pos:line="97" pos:column="66">AlarmService</name></name></expr></argument>)</argument_list></call><op:operator pos:line="97" pos:column="79">)</op:operator><op:operator pos:line="97" pos:column="80">.</op:operator><call><name pos:line="97" pos:column="81">Set</name><argument_list pos:line="97" pos:column="84">(<argument><expr><name><name pos:line="97" pos:column="85">AlarmType</name><op:operator pos:line="97" pos:column="94">.</op:operator><name pos:line="97" pos:column="95">Rtc</name></name></expr></argument>, <argument><expr><call><name><name pos:line="97" pos:column="100">Java</name><op:operator pos:line="97" pos:column="104">.</op:operator><name pos:line="97" pos:column="105">Lang</name><op:operator pos:line="97" pos:column="109">.</op:operator><name pos:line="97" pos:column="110">JavaSystem</name>
				<op:operator pos:line="98" pos:column="33">.</op:operator><name pos:line="98" pos:column="34">CurrentTimeMillis</name></name><argument_list pos:line="98" pos:column="51">()</argument_list></call> <op:operator pos:line="98" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="98" pos:column="56">500</lit:literal></expr></argument>,
				<argument><expr><call><name><name pos:line="99" pos:column="33">PendingIntent</name><op:operator pos:line="99" pos:column="46">.</op:operator><name pos:line="99" pos:column="47">GetService</name></name><argument_list pos:line="99" pos:column="57">(<argument><expr><name pos:line="99" pos:column="58">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="99" pos:column="64">11</lit:literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="68">intent</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="99" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>
			
		<function><type><specifier pos:line="102" pos:column="17">private</specifier> <name pos:line="102" pos:column="25">void</name></type> <name pos:line="102" pos:column="30">Startup</name><parameter_list pos:line="102" pos:column="37">(<param><decl><type><name pos:line="102" pos:column="38">bool</name></type> <name pos:line="102" pos:column="43">warning</name> <init pos:line="102" pos:column="51">= <expr><lit:literal type="boolean" pos:line="102" pos:column="53">false</lit:literal></expr></init></decl></param>)</parameter_list>
		<block pos:line="103" pos:column="17">{
			<comment type="line" pos:line="104" pos:column="25">//check if kit kat can sensor compatible</comment>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><op:operator pos:line="105" pos:column="29">!</op:operator><call><name><name pos:line="105" pos:column="30">Utils</name><op:operator pos:line="105" pos:column="35">.</op:operator><name pos:line="105" pos:column="36">IsKitKatWithStepCounter</name></name><argument_list pos:line="105" pos:column="59">(<argument><expr><name pos:line="105" pos:column="60">PackageManager</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="105" pos:column="76"> <block pos:line="105" pos:column="77">{

				<expr_stmt><expr><call><name><name pos:line="107" pos:column="33">Console</name><op:operator pos:line="107" pos:column="40">.</op:operator><name pos:line="107" pos:column="41">WriteLine</name></name><argument_list pos:line="107" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="51">"Not compatible with sensors, stopping service."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="108" pos:column="33">StopSelf</name> <argument_list pos:line="108" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="109" pos:column="33">return;</return>
			}</block></then></if>

			<expr_stmt><expr><call><name pos:line="112" pos:column="25">CrunchDates</name> <argument_list pos:line="112" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="112" pos:column="38">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><op:operator pos:line="114" pos:column="29">!</op:operator><name pos:line="114" pos:column="30">isRunning</name></expr>)</condition><then pos:line="114" pos:column="40"> <block pos:line="114" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="115" pos:column="33">RegisterListeners</name> <argument_list pos:line="115" pos:column="51">(<argument><expr><name pos:line="115" pos:column="52">warning</name> <op:operator pos:line="115" pos:column="60">?</op:operator> <name><name pos:line="115" pos:column="62">SensorType</name><op:operator pos:line="115" pos:column="72">.</op:operator><name pos:line="115" pos:column="73">StepDetector</name></name> <op:operator pos:line="115" pos:column="86">:</op:operator> <name><name pos:line="115" pos:column="88">SensorType</name><op:operator pos:line="115" pos:column="98">.</op:operator><name pos:line="115" pos:column="99">StepCounter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="116" pos:column="33">WarningState</name> <op:operator pos:line="116" pos:column="46">=</op:operator> <name pos:line="116" pos:column="48">warning</name></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="119" pos:column="25">isRunning</name> <op:operator pos:line="119" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="119" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="122" pos:column="17">public</specifier> <specifier pos:line="122" pos:column="24">override</specifier> <name pos:line="122" pos:column="33">void</name></type> <name pos:line="122" pos:column="38">OnDestroy</name> <parameter_list pos:line="122" pos:column="48">()</parameter_list>
		<block pos:line="123" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="124" pos:column="25">base</name><op:operator pos:line="124" pos:column="29">.</op:operator><name pos:line="124" pos:column="30">OnDestroy</name></name> <argument_list pos:line="124" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">UnregisterListeners</name> <argument_list pos:line="125" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="126" pos:column="25">isRunning</name> <op:operator pos:line="126" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="126" pos:column="37">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="127" pos:column="25">CrunchDates</name> <argument_list pos:line="127" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><name pos:line="130" pos:column="17">void</name></type> <name pos:line="130" pos:column="22">RegisterListeners</name><parameter_list pos:line="130" pos:column="39">(<param><decl><type><name pos:line="130" pos:column="40">SensorType</name></type> <name pos:line="130" pos:column="51">sensorType</name></decl></param>)</parameter_list> <block pos:line="130" pos:column="63">{

			<decl_stmt><decl><type><name pos:line="132" pos:column="25">var</name></type> <name pos:line="132" pos:column="29">sensorManager</name> <init pos:line="132" pos:column="43">= <expr><op:operator pos:line="132" pos:column="45">(</op:operator><name pos:line="132" pos:column="46">SensorManager</name><op:operator pos:line="132" pos:column="59">)</op:operator> <call><name pos:line="132" pos:column="61">GetSystemService</name><argument_list pos:line="132" pos:column="77">(<argument><expr><name><name pos:line="132" pos:column="78">Context</name><op:operator pos:line="132" pos:column="85">.</op:operator><name pos:line="132" pos:column="86">SensorService</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="133" pos:column="25">var</name></type> <name pos:line="133" pos:column="29">sensor</name> <init pos:line="133" pos:column="36">= <expr><call><name><name pos:line="133" pos:column="38">sensorManager</name><op:operator pos:line="133" pos:column="51">.</op:operator><name pos:line="133" pos:column="52">GetDefaultSensor</name></name><argument_list pos:line="133" pos:column="68">(<argument><expr><name pos:line="133" pos:column="69">sensorType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="135" pos:column="25">//get faster why not, nearly fast already and when</comment>
			<comment type="line" pos:line="136" pos:column="25">//sensor gets messed up it will be better</comment>
			<expr_stmt><expr><call><name><name pos:line="137" pos:column="25">sensorManager</name><op:operator pos:line="137" pos:column="38">.</op:operator><name pos:line="137" pos:column="39">RegisterListener</name></name><argument_list pos:line="137" pos:column="55">(<argument><expr><name pos:line="137" pos:column="56">this</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="62">sensor</name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="70">SensorDelay</name><op:operator pos:line="137" pos:column="81">.</op:operator><name pos:line="137" pos:column="82">Normal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="138" pos:column="25">Console</name><op:operator pos:line="138" pos:column="32">.</op:operator><name pos:line="138" pos:column="33">WriteLine</name></name><argument_list pos:line="138" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="43">"Sensor listener registered of type: "</lit:literal> <op:operator pos:line="138" pos:column="82">+</op:operator> <name pos:line="138" pos:column="84">sensorType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		}</block></function>


		<function><type><name pos:line="143" pos:column="17">void</name></type> <name pos:line="143" pos:column="22">UnregisterListeners</name><parameter_list pos:line="143" pos:column="41">()</parameter_list> <block pos:line="143" pos:column="44">{

			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><op:operator pos:line="145" pos:column="29">!</op:operator><name pos:line="145" pos:column="30">isRunning</name></expr>)</condition><then pos:line="145" pos:column="40">
				<return pos:line="146" pos:column="33">return;</return></then></if>

			<try pos:line="148" pos:column="25">try<block pos:line="148" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="149" pos:column="25">var</name></type> <name pos:line="149" pos:column="29">sensorManager</name> <init pos:line="149" pos:column="43">= <expr><op:operator pos:line="149" pos:column="45">(</op:operator><name pos:line="149" pos:column="46">SensorManager</name><op:operator pos:line="149" pos:column="59">)</op:operator> <call><name pos:line="149" pos:column="61">GetSystemService</name><argument_list pos:line="149" pos:column="77">(<argument><expr><name><name pos:line="149" pos:column="78">Context</name><op:operator pos:line="149" pos:column="85">.</op:operator><name pos:line="149" pos:column="86">SensorService</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="150" pos:column="25">sensorManager</name><op:operator pos:line="150" pos:column="38">.</op:operator><name pos:line="150" pos:column="39">UnregisterListener</name></name><argument_list pos:line="150" pos:column="57">(<argument><expr><name pos:line="150" pos:column="58">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="151" pos:column="25">Console</name><op:operator pos:line="151" pos:column="32">.</op:operator><name pos:line="151" pos:column="33">WriteLine</name></name><argument_list pos:line="151" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="43">"Sensor listener unregistered."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:if pos:line="152" pos:column="25">#<cpp:directive pos:line="152" pos:column="26">if</cpp:directive> <expr><name pos:line="152" pos:column="29">DEBUG</name></expr></cpp:if>
			<expr_stmt><expr><call><name><name pos:line="153" pos:column="25">Android</name><op:operator pos:line="153" pos:column="32">.</op:operator><name pos:line="153" pos:column="33">Util</name><op:operator pos:line="153" pos:column="37">.</op:operator><name pos:line="153" pos:column="38">Log</name><op:operator pos:line="153" pos:column="41">.</op:operator><name pos:line="153" pos:column="42">Debug</name></name> <argument_list pos:line="153" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="49">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="153" pos:column="64">"Sensor listener unregistered."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:endif pos:line="154" pos:column="25">#<cpp:directive pos:line="154" pos:column="26">endif</cpp:directive></cpp:endif>
				<expr_stmt><expr><name pos:line="155" pos:column="33">isRunning</name> <op:operator pos:line="155" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="155" pos:column="45">false</lit:literal></expr>;</expr_stmt>
			}</block>
			<catch pos:line="157" pos:column="25">catch<parameter_list pos:line="157" pos:column="30">(<param><decl><type><name pos:line="157" pos:column="31">Exception</name></type> <name pos:line="157" pos:column="41">ex</name></decl></param>)</parameter_list> <block pos:line="157" pos:column="45">{
				<cpp:if pos:line="158" pos:column="33">#<cpp:directive pos:line="158" pos:column="34">if</cpp:directive> <expr><name pos:line="158" pos:column="37">DEBUG</name></expr></cpp:if>
				<expr_stmt><expr><call><name><name pos:line="159" pos:column="33">Android</name><op:operator pos:line="159" pos:column="40">.</op:operator><name pos:line="159" pos:column="41">Util</name><op:operator pos:line="159" pos:column="45">.</op:operator><name pos:line="159" pos:column="46">Log</name><op:operator pos:line="159" pos:column="49">.</op:operator><name pos:line="159" pos:column="50">Debug</name></name> <argument_list pos:line="159" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="159" pos:column="57">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="159" pos:column="72">"Unable to unregister: "</lit:literal> <op:operator pos:line="159" pos:column="97">+</op:operator> <name pos:line="159" pos:column="99">ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<cpp:endif pos:line="160" pos:column="33">#<cpp:directive pos:line="160" pos:column="34">endif</cpp:directive></cpp:endif>
			}</block></catch></try>
		}</block></function>

		<decl_stmt><decl><type><name pos:line="164" pos:column="17">StepServiceBinder</name></type> <name pos:line="164" pos:column="35">binder</name></decl>;</decl_stmt>
		<function><type><specifier pos:line="165" pos:column="17">public</specifier> <specifier pos:line="165" pos:column="24">override</specifier> <name><name pos:line="165" pos:column="33">Android</name><op:operator pos:line="165" pos:column="40">.</op:operator><name pos:line="165" pos:column="41">OS</name><op:operator pos:line="165" pos:column="43">.</op:operator><name pos:line="165" pos:column="44">IBinder</name></name></type> <name pos:line="165" pos:column="52">OnBind</name> <parameter_list pos:line="165" pos:column="59">(<param><decl><type><name><name pos:line="165" pos:column="60">Android</name><op:operator pos:line="165" pos:column="67">.</op:operator><name pos:line="165" pos:column="68">Content</name><op:operator pos:line="165" pos:column="75">.</op:operator><name pos:line="165" pos:column="76">Intent</name></name></type> <name pos:line="165" pos:column="83">intent</name></decl></param>)</parameter_list>
		<block pos:line="166" pos:column="17">{
			<expr_stmt><expr><name pos:line="167" pos:column="25">binder</name> <op:operator pos:line="167" pos:column="32">=</op:operator> <op:operator pos:line="167" pos:column="34">new</op:operator> <call><name pos:line="167" pos:column="38">StepServiceBinder</name> <argument_list pos:line="167" pos:column="56">(<argument><expr><name pos:line="167" pos:column="57">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="168" pos:column="25">return <expr><name pos:line="168" pos:column="32">binder</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="171" pos:column="17">public</specifier> <name pos:line="171" pos:column="24">void</name></type> <name pos:line="171" pos:column="29">OnAccuracyChanged</name> <parameter_list pos:line="171" pos:column="47">(<param><decl><type><name pos:line="171" pos:column="48">Sensor</name></type> <name pos:line="171" pos:column="55">sensor</name></decl></param>, <param><decl><type><name pos:line="171" pos:column="63">SensorStatus</name></type> <name pos:line="171" pos:column="76">accuracy</name></decl></param>)</parameter_list>
		<block pos:line="172" pos:column="17">{
			<comment type="line" pos:line="173" pos:column="25">//do nothing here</comment>
		}</block></function>

		<function><type><specifier pos:line="176" pos:column="17">public</specifier> <name pos:line="176" pos:column="24">void</name></type> <name pos:line="176" pos:column="29">AddSteps</name><parameter_list pos:line="176" pos:column="37">(<param><decl><type><name pos:line="176" pos:column="38">Int64</name></type> <name pos:line="176" pos:column="44">count</name></decl></param>)</parameter_list><block pos:line="176" pos:column="50">{
			<comment type="line" pos:line="177" pos:column="25">//if service rebooted or rebound then this will null out to 0, but count will still be since last boot.</comment>
			<if pos:line="178" pos:column="25">if <condition pos:line="178" pos:column="28">(<expr><name pos:line="178" pos:column="29">lastSteps</name> <op:operator pos:line="178" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="178" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="178" pos:column="44"> <block pos:line="178" pos:column="45">{
				<expr_stmt><expr><name pos:line="179" pos:column="33">lastSteps</name> <op:operator pos:line="179" pos:column="43">=</op:operator> <name pos:line="179" pos:column="45">count</name></expr>;</expr_stmt>
			}</block></then></if>

		

			<comment type="line" pos:line="184" pos:column="25">//calculate new steps</comment>
			<expr_stmt><expr><name pos:line="185" pos:column="25">newSteps</name> <op:operator pos:line="185" pos:column="34">=</op:operator> <name pos:line="185" pos:column="36">count</name> <op:operator pos:line="185" pos:column="42">-</op:operator> <name pos:line="185" pos:column="44">lastSteps</name></expr>;</expr_stmt>

			<comment type="line" pos:line="187" pos:column="25">//ensure we are never negative</comment>
			<comment type="line" pos:line="188" pos:column="25">//if so, no worries as we are about to re-set the lastSteps to the</comment>
			<comment type="line" pos:line="189" pos:column="25">//current count</comment>
			<if pos:line="190" pos:column="25">if <condition pos:line="190" pos:column="28">(<expr><name pos:line="190" pos:column="29">newSteps</name> <op:operator pos:line="190" pos:column="38">&lt;</op:operator> <lit:literal type="number" pos:line="190" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="190" pos:column="42">
				<expr_stmt><expr><name pos:line="191" pos:column="33">newSteps</name> <op:operator pos:line="191" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="191" pos:column="44">1</lit:literal></expr>;</expr_stmt></then>
			<else pos:line="192" pos:column="25">else <if pos:line="192" pos:column="30">if <condition pos:line="192" pos:column="33">(<expr><name pos:line="192" pos:column="34">newSteps</name> <op:operator pos:line="192" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="192" pos:column="45">100</lit:literal></expr>)</condition><then pos:line="192" pos:column="49">
				<expr_stmt><expr><name pos:line="193" pos:column="33">newSteps</name> <op:operator pos:line="193" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="193" pos:column="44">1</lit:literal></expr>;</expr_stmt></then></if></else></if>


			<expr_stmt><expr><name pos:line="196" pos:column="25">lastSteps</name> <op:operator pos:line="196" pos:column="35">=</op:operator> <name pos:line="196" pos:column="37">count</name></expr>;</expr_stmt>

			<comment type="line" pos:line="198" pos:column="25">//ensure we don't need to re-boot day :)</comment>
			<expr_stmt><expr><call><name pos:line="199" pos:column="25">CrunchDates</name> <argument_list pos:line="199" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="200" pos:column="25">CrunchHighScores</name> <argument_list pos:line="200" pos:column="42">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="202" pos:column="25">//save total steps!</comment>
			<expr_stmt><expr><name><name pos:line="203" pos:column="25">Helpers</name><op:operator pos:line="203" pos:column="32">.</op:operator><name pos:line="203" pos:column="33">Settings</name><op:operator pos:line="203" pos:column="41">.</op:operator><name pos:line="203" pos:column="42">TotalSteps</name></name> <op:operator pos:line="203" pos:column="53">+=</op:operator>  <name pos:line="203" pos:column="57">newSteps</name></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="205" pos:column="25">StepsToday</name> <op:operator pos:line="205" pos:column="36">=</op:operator> <name><name pos:line="205" pos:column="38">Helpers</name><op:operator pos:line="205" pos:column="45">.</op:operator><name pos:line="205" pos:column="46">Settings</name><op:operator pos:line="205" pos:column="54">.</op:operator><name pos:line="205" pos:column="55">TotalSteps</name></name> <op:operator pos:line="205" pos:column="66">-</op:operator> <name><name pos:line="205" pos:column="68">Helpers</name><op:operator pos:line="205" pos:column="75">.</op:operator><name pos:line="205" pos:column="76">Settings</name><op:operator pos:line="205" pos:column="84">.</op:operator><name pos:line="205" pos:column="85">StepsBeforeToday</name></name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="207" pos:column="25">Console</name><op:operator pos:line="207" pos:column="32">.</op:operator><name pos:line="207" pos:column="33">WriteLine</name></name> <argument_list pos:line="207" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="207" pos:column="44">"New step detected by STEP_COUNTER sensor. Total step count: "</lit:literal> <op:operator pos:line="207" pos:column="107">+</op:operator> <name pos:line="207" pos:column="109">stepsToday</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
			<cpp:if pos:line="208" pos:column="25">#<cpp:directive pos:line="208" pos:column="26">if</cpp:directive> <expr><name pos:line="208" pos:column="29">DEBUG</name></expr></cpp:if>
			<expr_stmt><expr><call><name><name pos:line="209" pos:column="25">Android</name><op:operator pos:line="209" pos:column="32">.</op:operator><name pos:line="209" pos:column="33">Util</name><op:operator pos:line="209" pos:column="37">.</op:operator><name pos:line="209" pos:column="38">Log</name><op:operator pos:line="209" pos:column="41">.</op:operator><name pos:line="209" pos:column="42">Debug</name></name> <argument_list pos:line="209" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="49">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="209" pos:column="64">"New steps: "</lit:literal> <op:operator pos:line="209" pos:column="78">+</op:operator> <name pos:line="209" pos:column="80">newSteps</name> <op:operator pos:line="209" pos:column="89">+</op:operator> <lit:literal type="string" pos:line="209" pos:column="91">" total: "</lit:literal> <op:operator pos:line="209" pos:column="102">+</op:operator> <name pos:line="209" pos:column="104">stepsToday</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<cpp:endif pos:line="210" pos:column="25">#<cpp:directive pos:line="210" pos:column="26">endif</cpp:directive></cpp:endif>
		}</block></function>

		<decl_stmt><decl><type><name pos:line="213" pos:column="17">Int64</name></type> <name pos:line="213" pos:column="23">newSteps</name> <init pos:line="213" pos:column="32">= <expr><lit:literal type="number" pos:line="213" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="214" pos:column="17">Int64</name></type> <name pos:line="214" pos:column="23">lastSteps</name> <init pos:line="214" pos:column="33">= <expr><lit:literal type="number" pos:line="214" pos:column="35">0</lit:literal></expr></init></decl>;</decl_stmt>
		<function><type><specifier pos:line="215" pos:column="17">public</specifier> <name pos:line="215" pos:column="24">void</name></type> <name pos:line="215" pos:column="29">OnSensorChanged</name> <parameter_list pos:line="215" pos:column="45">(<param><decl><type><name pos:line="215" pos:column="46">SensorEvent</name></type> <name pos:line="215" pos:column="58">e</name></decl></param>)</parameter_list>
		<block pos:line="216" pos:column="17">{
			<switch pos:line="217" pos:column="25">switch <condition pos:line="217" pos:column="32">(<expr><name><name pos:line="217" pos:column="33">e</name><op:operator pos:line="217" pos:column="34">.</op:operator><name pos:line="217" pos:column="35">Sensor</name><op:operator pos:line="217" pos:column="41">.</op:operator><name pos:line="217" pos:column="42">Type</name></name></expr>)</condition> <block pos:line="217" pos:column="48">{

			<case pos:line="219" pos:column="25">case <expr><name><name pos:line="219" pos:column="30">SensorType</name><op:operator pos:line="219" pos:column="40">.</op:operator><name pos:line="219" pos:column="41">StepCounter</name></name></expr>:

				<if pos:line="221" pos:column="33">if <condition pos:line="221" pos:column="36">(<expr><name pos:line="221" pos:column="37">lastSteps</name> <op:operator pos:line="221" pos:column="47">&lt;</op:operator> <lit:literal type="number" pos:line="221" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="221" pos:column="51">
					<expr_stmt><expr><name pos:line="222" pos:column="41">lastSteps</name> <op:operator pos:line="222" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="222" pos:column="53">0</lit:literal></expr>;</expr_stmt></then></if>

				<comment type="line" pos:line="224" pos:column="33">//grab out the current value.</comment>
				<decl_stmt><decl><type><name pos:line="225" pos:column="33">var</name></type> <name pos:line="225" pos:column="37">count</name> <init pos:line="225" pos:column="43">= <expr><op:operator pos:line="225" pos:column="45">(</op:operator><name pos:line="225" pos:column="46">Int64</name><op:operator pos:line="225" pos:column="51">)</op:operator><name><name pos:line="225" pos:column="52">e</name><op:operator pos:line="225" pos:column="53">.</op:operator><name pos:line="225" pos:column="54">Values</name> <index pos:line="225" pos:column="61">[<expr><lit:literal type="number" pos:line="225" pos:column="62">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<comment type="line" pos:line="226" pos:column="33">//in some instances if things are running too long (about 4 days)</comment>
				<comment type="line" pos:line="227" pos:column="33">//the value flips and gets crazy and this will be -1</comment>
				<comment type="line" pos:line="228" pos:column="33">//so switch to step detector instead, but put up warning sign.</comment>
				<if pos:line="229" pos:column="33">if <condition pos:line="229" pos:column="36">(<expr><name pos:line="229" pos:column="37">count</name> <op:operator pos:line="229" pos:column="43">&lt;</op:operator> <lit:literal type="number" pos:line="229" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="229" pos:column="47"> <block pos:line="229" pos:column="48">{

					<expr_stmt><expr><call><name pos:line="231" pos:column="41">UnregisterListeners</name> <argument_list pos:line="231" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="232" pos:column="41">RegisterListeners</name> <argument_list pos:line="232" pos:column="59">(<argument><expr><name><name pos:line="232" pos:column="60">SensorType</name><op:operator pos:line="232" pos:column="70">.</op:operator><name pos:line="232" pos:column="71">StepDetector</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="233" pos:column="41">isRunning</name> <op:operator pos:line="233" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="233" pos:column="53">true</lit:literal></expr>;</expr_stmt>
					<cpp:if pos:line="234" pos:column="41">#<cpp:directive pos:line="234" pos:column="42">if</cpp:directive> <expr><name pos:line="234" pos:column="45">DEBUG</name></expr></cpp:if>
					<expr_stmt><expr><call><name><name pos:line="235" pos:column="41">Android</name><op:operator pos:line="235" pos:column="48">.</op:operator><name pos:line="235" pos:column="49">Util</name><op:operator pos:line="235" pos:column="53">.</op:operator><name pos:line="235" pos:column="54">Log</name><op:operator pos:line="235" pos:column="57">.</op:operator><name pos:line="235" pos:column="58">Debug</name></name> <argument_list pos:line="235" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="235" pos:column="65">"STEPSERVICE"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="235" pos:column="80">"Something has gone wrong with the step counter, simulating steps, 2."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<cpp:endif pos:line="236" pos:column="41">#<cpp:directive pos:line="236" pos:column="42">endif</cpp:directive></cpp:endif>
					<expr_stmt><expr><name pos:line="237" pos:column="41">count</name> <op:operator pos:line="237" pos:column="47">=</op:operator> <name pos:line="237" pos:column="49">lastSteps</name> <op:operator pos:line="237" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="237" pos:column="61">3</lit:literal></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="239" pos:column="41">WarningState</name> <op:operator pos:line="239" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="239" pos:column="56">true</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="240" pos:column="35">else <block pos:line="240" pos:column="40">{
					<expr_stmt><expr><name pos:line="241" pos:column="41">WarningState</name> <op:operator pos:line="241" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="241" pos:column="56">false</lit:literal></expr>;</expr_stmt>
				}</block></else></if>

				<expr_stmt><expr><call><name pos:line="244" pos:column="33">AddSteps</name> <argument_list pos:line="244" pos:column="42">(<argument><expr><name pos:line="244" pos:column="43">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:line="246" pos:column="33">break;</break>
			</case><case pos:line="247" pos:column="25">case <expr><name><name pos:line="247" pos:column="30">SensorType</name><op:operator pos:line="247" pos:column="40">.</op:operator><name pos:line="247" pos:column="41">StepDetector</name></name></expr>:
				<expr_stmt><expr><name pos:line="248" pos:column="33">count</name> <op:operator pos:line="248" pos:column="39">=</op:operator> <name pos:line="248" pos:column="41">lastSteps</name> <op:operator pos:line="248" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="248" pos:column="53">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="249" pos:column="33">AddSteps</name> <argument_list pos:line="249" pos:column="42">(<argument><expr><name pos:line="249" pos:column="43">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="250" pos:column="33">break;</break>
			</case>}</block></switch>
		}</block></function>
			

		<function><type><specifier pos:line="255" pos:column="17">private</specifier> <name pos:line="255" pos:column="25">void</name></type> <name pos:line="255" pos:column="30">CrunchHighScores</name> <parameter_list pos:line="255" pos:column="47">()</parameter_list>
		<block pos:line="256" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="257" pos:column="25">bool</name></type> <name pos:line="257" pos:column="30">notification</name> <init pos:line="257" pos:column="43">= <expr><name><name pos:line="257" pos:column="45">Helpers</name><op:operator pos:line="257" pos:column="52">.</op:operator><name pos:line="257" pos:column="53">Settings</name><op:operator pos:line="257" pos:column="61">.</op:operator><name pos:line="257" pos:column="62">ProgressNotifications</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="259" pos:column="25">int</name></type> <name pos:line="259" pos:column="29">halfGoal</name> <init pos:line="259" pos:column="38">= <expr><lit:literal type="number" pos:line="259" pos:column="40">5000</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="260" pos:column="25">int</name></type> <name pos:line="260" pos:column="29">fullGoal</name> <init pos:line="260" pos:column="38">= <expr><lit:literal type="number" pos:line="260" pos:column="40">10000</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="261" pos:column="25">int</name></type> <name pos:line="261" pos:column="29">doubleGoal</name> <init pos:line="261" pos:column="40">= <expr><lit:literal type="number" pos:line="261" pos:column="42">20000</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="262" pos:column="25">if <condition pos:line="262" pos:column="28">(<expr><name><name pos:line="262" pos:column="29">stepsToday</name> <argument_list pos:line="262" pos:column="40">&lt; <argument><name pos:line="262" pos:column="42">halfGoal</name> <op:operator pos:line="262" pos:column="51">&amp;&amp;</op:operator> <name pos:line="262" pos:column="54">stepsToday</name> <op:operator pos:line="262" pos:column="65">+</op:operator> <name pos:line="262" pos:column="67">newSteps</name></argument> &gt;</argument_list></name><op:operator pos:line="262" pos:column="77">=</op:operator> <name pos:line="262" pos:column="79">halfGoal</name></expr>)</condition><then pos:line="262" pos:column="88"> <block pos:line="262" pos:column="89">{
				<expr_stmt><expr><name><name pos:line="263" pos:column="33">Helpers</name><op:operator pos:line="263" pos:column="40">.</op:operator><name pos:line="263" pos:column="41">Settings</name><op:operator pos:line="263" pos:column="49">.</op:operator><name pos:line="263" pos:column="50">GoalTodayDay</name></name> <op:operator pos:line="263" pos:column="63">=</op:operator> <name><name pos:line="263" pos:column="65">DateTime</name><op:operator pos:line="263" pos:column="73">.</op:operator><name pos:line="263" pos:column="74">Today</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="264" pos:column="33">Helpers</name><op:operator pos:line="264" pos:column="40">.</op:operator><name pos:line="264" pos:column="41">Settings</name><op:operator pos:line="264" pos:column="49">.</op:operator><name pos:line="264" pos:column="50">GoalTodayMessage</name></name> <op:operator pos:line="264" pos:column="67">=</op:operator> <call><name><name pos:line="264" pos:column="69">Resources</name><op:operator pos:line="264" pos:column="78">.</op:operator><name pos:line="264" pos:column="79">GetString</name></name> <argument_list pos:line="264" pos:column="89">(<argument><expr><name><name pos:line="264" pos:column="90">Resource</name><op:operator pos:line="264" pos:column="98">.</op:operator><name pos:line="264" pos:column="99">String</name><op:operator pos:line="264" pos:column="105">.</op:operator><name pos:line="264" pos:column="106">goal_half</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="265" pos:column="27">else <if pos:line="265" pos:column="32">if <condition pos:line="265" pos:column="35">(<expr><name><name pos:line="265" pos:column="36">stepsToday</name> <argument_list pos:line="265" pos:column="47">&lt; <argument><name pos:line="265" pos:column="49">fullGoal</name> <op:operator pos:line="265" pos:column="58">&amp;&amp;</op:operator> <name pos:line="265" pos:column="61">stepsToday</name> <op:operator pos:line="265" pos:column="72">+</op:operator> <name pos:line="265" pos:column="74">newSteps</name></argument> &gt;</argument_list></name><op:operator pos:line="265" pos:column="84">=</op:operator> <name pos:line="265" pos:column="86">fullGoal</name></expr>)</condition><then pos:line="265" pos:column="95"> <block pos:line="265" pos:column="96">{
				<expr_stmt><expr><name><name pos:line="266" pos:column="33">Helpers</name><op:operator pos:line="266" pos:column="40">.</op:operator><name pos:line="266" pos:column="41">Settings</name><op:operator pos:line="266" pos:column="49">.</op:operator><name pos:line="266" pos:column="50">GoalTodayDay</name></name> <op:operator pos:line="266" pos:column="63">=</op:operator> <name><name pos:line="266" pos:column="65">DateTime</name><op:operator pos:line="266" pos:column="73">.</op:operator><name pos:line="266" pos:column="74">Today</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="267" pos:column="33">Helpers</name><op:operator pos:line="267" pos:column="40">.</op:operator><name pos:line="267" pos:column="41">Settings</name><op:operator pos:line="267" pos:column="49">.</op:operator><name pos:line="267" pos:column="50">GoalTodayMessage</name></name> <op:operator pos:line="267" pos:column="67">=</op:operator> <call><name><name pos:line="267" pos:column="69">string</name><op:operator pos:line="267" pos:column="75">.</op:operator><name pos:line="267" pos:column="76">Format</name></name><argument_list pos:line="267" pos:column="82">(<argument><expr><call><name><name pos:line="267" pos:column="83">Resources</name><op:operator pos:line="267" pos:column="92">.</op:operator><name pos:line="267" pos:column="93">GetString</name></name> <argument_list pos:line="267" pos:column="103">(<argument><expr><name><name pos:line="267" pos:column="104">Resource</name><op:operator pos:line="267" pos:column="112">.</op:operator><name pos:line="267" pos:column="113">String</name><op:operator pos:line="267" pos:column="119">.</op:operator><name pos:line="267" pos:column="120">goal_full</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="267" pos:column="132">(</op:operator><name pos:line="267" pos:column="133">fullGoal</name><op:operator pos:line="267" pos:column="141">)</op:operator><op:operator pos:line="267" pos:column="142">.</op:operator><call><name pos:line="267" pos:column="143">ToString</name><argument_list pos:line="267" pos:column="151">(<argument><expr><lit:literal type="string" pos:line="267" pos:column="152">"N0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="268" pos:column="27">else <if pos:line="268" pos:column="32">if <condition pos:line="268" pos:column="35">(<expr><name><name pos:line="268" pos:column="36">stepsToday</name> <argument_list pos:line="268" pos:column="47">&lt; <argument><name pos:line="268" pos:column="49">doubleGoal</name> <op:operator pos:line="268" pos:column="60">&amp;&amp;</op:operator> <name pos:line="268" pos:column="63">stepsToday</name> <op:operator pos:line="268" pos:column="74">+</op:operator> <name pos:line="268" pos:column="76">newSteps</name></argument> &gt;</argument_list></name><op:operator pos:line="268" pos:column="86">=</op:operator> <name pos:line="268" pos:column="88">doubleGoal</name></expr>)</condition><then pos:line="268" pos:column="99"> <block pos:line="268" pos:column="100">{
				<expr_stmt><expr><name><name pos:line="269" pos:column="33">Helpers</name><op:operator pos:line="269" pos:column="40">.</op:operator><name pos:line="269" pos:column="41">Settings</name><op:operator pos:line="269" pos:column="49">.</op:operator><name pos:line="269" pos:column="50">GoalTodayDay</name></name> <op:operator pos:line="269" pos:column="63">=</op:operator> <name><name pos:line="269" pos:column="65">DateTime</name><op:operator pos:line="269" pos:column="73">.</op:operator><name pos:line="269" pos:column="74">Today</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="270" pos:column="33">Helpers</name><op:operator pos:line="270" pos:column="40">.</op:operator><name pos:line="270" pos:column="41">Settings</name><op:operator pos:line="270" pos:column="49">.</op:operator><name pos:line="270" pos:column="50">GoalTodayMessage</name></name> <op:operator pos:line="270" pos:column="67">=</op:operator> <call><name><name pos:line="270" pos:column="69">string</name><op:operator pos:line="270" pos:column="75">.</op:operator><name pos:line="270" pos:column="76">Format</name></name><argument_list pos:line="270" pos:column="82">(<argument><expr><call><name><name pos:line="270" pos:column="83">Resources</name><op:operator pos:line="270" pos:column="92">.</op:operator><name pos:line="270" pos:column="93">GetString</name></name> <argument_list pos:line="270" pos:column="103">(<argument><expr><name><name pos:line="270" pos:column="104">Resource</name><op:operator pos:line="270" pos:column="112">.</op:operator><name pos:line="270" pos:column="113">String</name><op:operator pos:line="270" pos:column="119">.</op:operator><name pos:line="270" pos:column="120">goal_double</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="270" pos:column="134">(</op:operator><name pos:line="270" pos:column="135">doubleGoal</name><op:operator pos:line="270" pos:column="145">)</op:operator><op:operator pos:line="270" pos:column="146">.</op:operator><call><name pos:line="270" pos:column="147">ToString</name><argument_list pos:line="270" pos:column="155">(<argument><expr><lit:literal type="string" pos:line="270" pos:column="156">"N0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="271" pos:column="27">else <block pos:line="271" pos:column="32">{
				<expr_stmt><expr><name pos:line="272" pos:column="33">notification</name> <op:operator pos:line="272" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="272" pos:column="48">false</lit:literal></expr>;</expr_stmt>
			}</block></else></if></else></if></else></if>

			<if pos:line="275" pos:column="25">if <condition pos:line="275" pos:column="28">(<expr><name pos:line="275" pos:column="29">notification</name></expr>)</condition><then pos:line="275" pos:column="42"> <block pos:line="275" pos:column="43">{
				<expr_stmt><expr><call><name pos:line="276" pos:column="33">PopUpNotification</name> <argument_list pos:line="276" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="276" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="276" pos:column="55">Resources</name><op:operator pos:line="276" pos:column="64">.</op:operator><name pos:line="276" pos:column="65">GetString</name></name> <argument_list pos:line="276" pos:column="75">(<argument><expr><name><name pos:line="276" pos:column="76">Resource</name><op:operator pos:line="276" pos:column="84">.</op:operator><name pos:line="276" pos:column="85">String</name><op:operator pos:line="276" pos:column="91">.</op:operator><name pos:line="276" pos:column="92">goal_update</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="106">Helpers</name><op:operator pos:line="276" pos:column="113">.</op:operator><name pos:line="276" pos:column="114">Settings</name><op:operator pos:line="276" pos:column="122">.</op:operator><name pos:line="276" pos:column="123">GoalTodayMessage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="279" pos:column="25">notification</name> <op:operator pos:line="279" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="279" pos:column="40">false</lit:literal></expr>;</expr_stmt>
			<if pos:line="280" pos:column="25">if <condition pos:line="280" pos:column="28">(<expr><name pos:line="280" pos:column="29">stepsToday</name> <op:operator pos:line="280" pos:column="40">+</op:operator> <name pos:line="280" pos:column="42">newSteps</name> <op:operator pos:line="280" pos:column="51">&gt;</op:operator> <name><name pos:line="280" pos:column="53">Helpers</name><op:operator pos:line="280" pos:column="60">.</op:operator><name pos:line="280" pos:column="61">Settings</name><op:operator pos:line="280" pos:column="69">.</op:operator><name pos:line="280" pos:column="70">HighScore</name></name></expr>)</condition><then pos:line="280" pos:column="80"> <block pos:line="280" pos:column="81">{
				<expr_stmt><expr><name><name pos:line="281" pos:column="33">Helpers</name><op:operator pos:line="281" pos:column="40">.</op:operator><name pos:line="281" pos:column="41">Settings</name><op:operator pos:line="281" pos:column="49">.</op:operator><name pos:line="281" pos:column="50">HighScore</name></name> <op:operator pos:line="281" pos:column="60">=</op:operator> <name pos:line="281" pos:column="62">stepsToday</name> <op:operator pos:line="281" pos:column="73">+</op:operator> <name pos:line="281" pos:column="75">newSteps</name></expr>;</expr_stmt>
				<comment type="line" pos:line="282" pos:column="33">//if not today</comment>
				<if pos:line="283" pos:column="33">if <condition pos:line="283" pos:column="36">(<expr><op:operator pos:line="283" pos:column="37">!</op:operator><name><name pos:line="283" pos:column="38">Helpers</name><op:operator pos:line="283" pos:column="45">.</op:operator><name pos:line="283" pos:column="46">Settings</name><op:operator pos:line="283" pos:column="54">.</op:operator><name pos:line="283" pos:column="55">TodayIsHighScore</name></name></expr>)</condition><then pos:line="283" pos:column="72"> <block pos:line="283" pos:column="73">{
					<comment type="line" pos:line="284" pos:column="41">//if first day of use then no notifications, else pop it up</comment>
					<if pos:line="285" pos:column="41">if <condition pos:line="285" pos:column="44">(<expr><name><name pos:line="285" pos:column="45">Helpers</name><op:operator pos:line="285" pos:column="52">.</op:operator><name pos:line="285" pos:column="53">Settings</name><op:operator pos:line="285" pos:column="61">.</op:operator><name pos:line="285" pos:column="62">FirstDayOfUse</name><op:operator pos:line="285" pos:column="75">.</op:operator><name pos:line="285" pos:column="76">DayOfYear</name></name> <op:operator pos:line="285" pos:column="86">==</op:operator> <name><name pos:line="285" pos:column="89">DateTime</name><op:operator pos:line="285" pos:column="97">.</op:operator><name pos:line="285" pos:column="98">Today</name><op:operator pos:line="285" pos:column="103">.</op:operator><name pos:line="285" pos:column="104">DayOfYear</name> <type:modifier pos:line="285" pos:column="114">&amp;&amp;</type:modifier></name>
					    <name><name pos:line="286" pos:column="45">Helpers</name><op:operator pos:line="286" pos:column="52">.</op:operator><name pos:line="286" pos:column="53">Settings</name><op:operator pos:line="286" pos:column="61">.</op:operator><name pos:line="286" pos:column="62">FirstDayOfUse</name><op:operator pos:line="286" pos:column="75">.</op:operator><name pos:line="286" pos:column="76">Year</name></name> <op:operator pos:line="286" pos:column="81">==</op:operator> <name><name pos:line="286" pos:column="84">DateTime</name><op:operator pos:line="286" pos:column="92">.</op:operator><name pos:line="286" pos:column="93">Today</name><op:operator pos:line="286" pos:column="98">.</op:operator><name pos:line="286" pos:column="99">Year</name></name></expr>)</condition><then pos:line="286" pos:column="104"> <block pos:line="286" pos:column="105">{
						<expr_stmt><expr><name pos:line="287" pos:column="49">notification</name> <op:operator pos:line="287" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="287" pos:column="64">false</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="288" pos:column="43">else <block pos:line="288" pos:column="48">{
						<expr_stmt><expr><name pos:line="289" pos:column="49">notification</name> <op:operator pos:line="289" pos:column="62">=</op:operator> <name><name pos:line="289" pos:column="64">Helpers</name><op:operator pos:line="289" pos:column="71">.</op:operator><name pos:line="289" pos:column="72">Settings</name><op:operator pos:line="289" pos:column="80">.</op:operator><name pos:line="289" pos:column="81">ProgressNotifications</name></name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
				<comment type="line" pos:line="292" pos:column="33">//this triggers a new high score day so the next tiem it comes in TodayIsHighScore will be true</comment>
				<expr_stmt><expr><name><name pos:line="293" pos:column="33">Helpers</name><op:operator pos:line="293" pos:column="40">.</op:operator><name pos:line="293" pos:column="41">Settings</name><op:operator pos:line="293" pos:column="49">.</op:operator><name pos:line="293" pos:column="50">HighScoreDay</name></name> <op:operator pos:line="293" pos:column="63">=</op:operator> <name><name pos:line="293" pos:column="65">DateTime</name><op:operator pos:line="293" pos:column="73">.</op:operator><name pos:line="293" pos:column="74">Today</name></name></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="296" pos:column="25">//notifcation for high score</comment>
			<if pos:line="297" pos:column="25">if <condition pos:line="297" pos:column="28">(<expr><name pos:line="297" pos:column="29">notification</name></expr>)</condition><then pos:line="297" pos:column="42"> <block pos:line="297" pos:column="43">{
				<expr_stmt><expr><call><name pos:line="298" pos:column="33">PopUpNotification</name> <argument_list pos:line="298" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="298" pos:column="52">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="298" pos:column="55">Resources</name><op:operator pos:line="298" pos:column="64">.</op:operator><name pos:line="298" pos:column="65">GetString</name></name> <argument_list pos:line="298" pos:column="75">(<argument><expr><name><name pos:line="298" pos:column="76">Resource</name><op:operator pos:line="298" pos:column="84">.</op:operator><name pos:line="298" pos:column="85">String</name><op:operator pos:line="298" pos:column="91">.</op:operator><name pos:line="298" pos:column="92">high_score_title</name></name></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name><name pos:line="299" pos:column="41">string</name><op:operator pos:line="299" pos:column="47">.</op:operator><name pos:line="299" pos:column="48">Format</name></name><argument_list pos:line="299" pos:column="54">(<argument><expr><call><name><name pos:line="299" pos:column="55">Resources</name><op:operator pos:line="299" pos:column="64">.</op:operator><name pos:line="299" pos:column="65">GetString</name></name><argument_list pos:line="299" pos:column="74">(<argument><expr><name><name pos:line="299" pos:column="75">Resource</name><op:operator pos:line="299" pos:column="83">.</op:operator><name pos:line="299" pos:column="84">String</name><op:operator pos:line="299" pos:column="90">.</op:operator><name pos:line="299" pos:column="91">high_score</name></name></expr></argument>)</argument_list></call></expr></argument>,
						<argument><expr><call><name><name pos:line="300" pos:column="49">Utils</name><op:operator pos:line="300" pos:column="54">.</op:operator><name pos:line="300" pos:column="55">FormatSteps</name></name><argument_list pos:line="300" pos:column="66">(<argument><expr><name><name pos:line="300" pos:column="67">Helpers</name><op:operator pos:line="300" pos:column="74">.</op:operator><name pos:line="300" pos:column="75">Settings</name><op:operator pos:line="300" pos:column="83">.</op:operator><name pos:line="300" pos:column="84">HighScore</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="303" pos:column="25">notification</name> <op:operator pos:line="303" pos:column="38">=</op:operator> <name><name pos:line="303" pos:column="40">Helpers</name><op:operator pos:line="303" pos:column="47">.</op:operator><name pos:line="303" pos:column="48">Settings</name><op:operator pos:line="303" pos:column="56">.</op:operator><name pos:line="303" pos:column="57">AccumulativeNotifications</name></name></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="304" pos:column="25">var</name></type> <name pos:line="304" pos:column="29">notificationString</name> <init pos:line="304" pos:column="48">= <expr><name><name pos:line="304" pos:column="50">string</name><op:operator pos:line="304" pos:column="56">.</op:operator><name pos:line="304" pos:column="57">Empty</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="305" pos:column="25">if <condition pos:line="305" pos:column="28">(<expr><name><name pos:line="305" pos:column="29">Helpers</name><op:operator pos:line="305" pos:column="36">.</op:operator><name pos:line="305" pos:column="37">Settings</name><op:operator pos:line="305" pos:column="45">.</op:operator><name pos:line="305" pos:column="46">TotalSteps</name></name> <op:operator pos:line="305" pos:column="57">+</op:operator> <name pos:line="305" pos:column="59">newSteps</name> <op:operator pos:line="305" pos:column="68">&gt;</op:operator> <name><name pos:line="305" pos:column="70">Helpers</name><op:operator pos:line="305" pos:column="77">.</op:operator><name pos:line="305" pos:column="78">Settings</name><op:operator pos:line="305" pos:column="86">.</op:operator><name pos:line="305" pos:column="87">NextGoal</name></name></expr>)</condition><then pos:line="305" pos:column="96"> <block pos:line="305" pos:column="97">{
				<expr_stmt><expr><name pos:line="306" pos:column="33">notificationString</name> <op:operator pos:line="306" pos:column="52">=</op:operator> <call><name><name pos:line="306" pos:column="54">string</name><op:operator pos:line="306" pos:column="60">.</op:operator><name pos:line="306" pos:column="61">Format</name></name> <argument_list pos:line="306" pos:column="68">(<argument><expr><call><name><name pos:line="306" pos:column="69">Resources</name><op:operator pos:line="306" pos:column="78">.</op:operator><name pos:line="306" pos:column="79">GetString</name></name> <argument_list pos:line="306" pos:column="89">(<argument><expr><name><name pos:line="306" pos:column="90">Resource</name><op:operator pos:line="306" pos:column="98">.</op:operator><name pos:line="306" pos:column="99">String</name><op:operator pos:line="306" pos:column="105">.</op:operator><name pos:line="306" pos:column="106">awesome</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="306" pos:column="116">Utils</name><op:operator pos:line="306" pos:column="121">.</op:operator><name pos:line="306" pos:column="122">FormatSteps</name></name><argument_list pos:line="306" pos:column="133">(<argument><expr><name><name pos:line="306" pos:column="134">Helpers</name><op:operator pos:line="306" pos:column="141">.</op:operator><name pos:line="306" pos:column="142">Settings</name><op:operator pos:line="306" pos:column="150">.</op:operator><name pos:line="306" pos:column="151">NextGoal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="307" pos:column="33">if <condition pos:line="307" pos:column="36">(<expr><name><name pos:line="307" pos:column="37">Settings</name><op:operator pos:line="307" pos:column="45">.</op:operator><name pos:line="307" pos:column="46">NextGoal</name></name> <op:operator pos:line="307" pos:column="55">&lt;</op:operator> <lit:literal type="number" pos:line="307" pos:column="57">500000</lit:literal></expr>)</condition><then pos:line="307" pos:column="64"> <block pos:line="307" pos:column="65">{
					<expr_stmt><expr><name><name pos:line="308" pos:column="41">Settings</name><op:operator pos:line="308" pos:column="49">.</op:operator><name pos:line="308" pos:column="50">NextGoal</name></name> <op:operator pos:line="308" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="308" pos:column="61">500000</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="309" pos:column="35">else <if pos:line="309" pos:column="40">if <condition pos:line="309" pos:column="43">(<expr><name><name pos:line="309" pos:column="44">Helpers</name><op:operator pos:line="309" pos:column="51">.</op:operator><name pos:line="309" pos:column="52">Settings</name><op:operator pos:line="309" pos:column="60">.</op:operator><name pos:line="309" pos:column="61">NextGoal</name></name> <op:operator pos:line="309" pos:column="70">&lt;</op:operator> <lit:literal type="number" pos:line="309" pos:column="72">1000000</lit:literal></expr>)</condition><then pos:line="309" pos:column="80"> <block pos:line="309" pos:column="81">{
					<expr_stmt><expr><name><name pos:line="310" pos:column="41">Settings</name><op:operator pos:line="310" pos:column="49">.</op:operator><name pos:line="310" pos:column="50">NextGoal</name></name> <op:operator pos:line="310" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="310" pos:column="61">1000000</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="311" pos:column="35">else <block pos:line="311" pos:column="40">{
					<expr_stmt><expr><name><name pos:line="312" pos:column="41">Settings</name><op:operator pos:line="312" pos:column="49">.</op:operator><name pos:line="312" pos:column="50">NextGoal</name></name> <op:operator pos:line="312" pos:column="59">+=</op:operator> <lit:literal type="number" pos:line="312" pos:column="62">1000000</lit:literal></expr>;</expr_stmt>
				}</block></else></if></else></if>
			}</block></then> <else pos:line="314" pos:column="27">else <block pos:line="314" pos:column="32">{
				<expr_stmt><expr><name pos:line="315" pos:column="33">notification</name> <op:operator pos:line="315" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="315" pos:column="48">false</lit:literal></expr>;</expr_stmt>
			}</block></else></if>

			<comment type="line" pos:line="318" pos:column="25">//notifcation for accumulative records</comment>
			<if pos:line="319" pos:column="25">if <condition pos:line="319" pos:column="28">(<expr><name pos:line="319" pos:column="29">notification</name></expr>)</condition><then pos:line="319" pos:column="42"> <block pos:line="319" pos:column="43">{
				<expr_stmt><expr><call><name pos:line="320" pos:column="33">PopUpNotification</name> <argument_list pos:line="320" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="320" pos:column="52">2</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="320" pos:column="55">Resources</name><op:operator pos:line="320" pos:column="64">.</op:operator><name pos:line="320" pos:column="65">GetString</name></name> <argument_list pos:line="320" pos:column="75">(<argument><expr><name><name pos:line="320" pos:column="76">Resource</name><op:operator pos:line="320" pos:column="84">.</op:operator><name pos:line="320" pos:column="85">String</name><op:operator pos:line="320" pos:column="91">.</op:operator><name pos:line="320" pos:column="92">awesome_title</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="320" pos:column="108">notificationString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			 
		}</block></function>


		<cpp:if pos:line="326" pos:column="17">#<cpp:directive pos:line="326" pos:column="18">if</cpp:directive> <expr><name pos:line="326" pos:column="21">PRO</name></expr></cpp:if>
		<comment type="line" pos:line="327" pos:column="17">//This requires support v4 NuGet Package. Not supported on Starter.</comment>

		<function><type><specifier pos:line="329" pos:column="17">private</specifier> <name pos:line="329" pos:column="25">void</name></type> <name pos:line="329" pos:column="30">PopUpNotification</name><parameter_list pos:line="329" pos:column="47">(<param><decl><type><name pos:line="329" pos:column="48">int</name></type> <name pos:line="329" pos:column="52">id</name></decl></param>, <param><decl><type><name pos:line="329" pos:column="56">string</name></type> <name pos:line="329" pos:column="63">title</name></decl></param>, <param><decl><type><name pos:line="329" pos:column="70">string</name></type> <name pos:line="329" pos:column="77">message</name></decl></param>)</parameter_list><block pos:line="329" pos:column="85">{

			<decl_stmt><decl><type><name pos:line="331" pos:column="25">var</name></type> <name pos:line="331" pos:column="29">wearableExtender</name> <init pos:line="331" pos:column="46">= <expr><op:operator pos:line="331" pos:column="48">new</op:operator> <call><name><name pos:line="331" pos:column="52">NotificationCompat</name><op:operator pos:line="331" pos:column="70">.</op:operator><name pos:line="331" pos:column="71">WearableExtender</name></name> <argument_list pos:line="331" pos:column="88">()</argument_list></call>
				<op:operator pos:line="332" pos:column="33">.</op:operator><call><name pos:line="332" pos:column="34">SetHintHideIcon</name> <argument_list pos:line="332" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="332" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="334" pos:column="25">Bitmap</name></type> <name pos:line="334" pos:column="32">bitmap</name> <init pos:line="334" pos:column="39">= <expr><name pos:line="334" pos:column="41">null</name></expr></init></decl>;</decl_stmt>

			<try pos:line="336" pos:column="25">try<block pos:line="336" pos:column="28">{
				<expr_stmt><expr><name pos:line="337" pos:column="33">bitmap</name> <op:operator pos:line="337" pos:column="40">=</op:operator> <call><name><name pos:line="337" pos:column="42">BitmapFactory</name><op:operator pos:line="337" pos:column="55">.</op:operator><name pos:line="337" pos:column="56">DecodeResource</name></name> <argument_list pos:line="337" pos:column="71">(<argument><expr><name pos:line="337" pos:column="72">Resources</name></expr></argument>, <argument><expr><name><name pos:line="337" pos:column="83">Resource</name><op:operator pos:line="337" pos:column="91">.</op:operator><name pos:line="337" pos:column="92">Drawable</name><op:operator pos:line="337" pos:column="100">.</op:operator><name pos:line="337" pos:column="101">wear_background</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			}</block><catch pos:line="339" pos:column="26">catch<parameter_list pos:line="339" pos:column="31">(<param><decl><type><name pos:line="339" pos:column="32">Exception</name></type> <name pos:line="339" pos:column="42">ex</name></decl></param>)</parameter_list> <block pos:line="339" pos:column="46">{
			}</block></catch></try>

			<if pos:line="342" pos:column="25">if<condition pos:line="342" pos:column="27">(<expr><name pos:line="342" pos:column="28">bitmap</name> <op:operator pos:line="342" pos:column="35">!=</op:operator> <name pos:line="342" pos:column="38">null</name></expr>)</condition><then pos:line="342" pos:column="43">
				<expr_stmt><expr><call><name><name pos:line="343" pos:column="33">wearableExtender</name><op:operator pos:line="343" pos:column="49">.</op:operator><name pos:line="343" pos:column="50">SetBackground</name></name><argument_list pos:line="343" pos:column="63">(<argument><expr><name pos:line="343" pos:column="64">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="345" pos:column="25">var</name></type> <name pos:line="345" pos:column="29">builder</name> <init pos:line="345" pos:column="37">=
				<expr><op:operator pos:line="346" pos:column="33">new</op:operator> <call><name><name pos:line="346" pos:column="37">NotificationCompat</name><op:operator pos:line="346" pos:column="55">.</op:operator><name pos:line="346" pos:column="56">Builder</name></name> <argument_list pos:line="346" pos:column="64">(<argument><expr><name pos:line="346" pos:column="65">this</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="347" pos:column="41">.</op:operator><call><name pos:line="347" pos:column="42">SetSmallIcon</name> <argument_list pos:line="347" pos:column="55">(<argument><expr><name><name pos:line="347" pos:column="56">Resource</name><op:operator pos:line="347" pos:column="64">.</op:operator><name pos:line="347" pos:column="65">Drawable</name><op:operator pos:line="347" pos:column="73">.</op:operator><name pos:line="347" pos:column="74">ic_notification</name></name></expr></argument>)</argument_list></call>
					<op:operator pos:line="348" pos:column="41">.</op:operator><call><name pos:line="348" pos:column="42">SetContentTitle</name> <argument_list pos:line="348" pos:column="58">(<argument><expr><name pos:line="348" pos:column="59">title</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="349" pos:column="41">.</op:operator><call><name pos:line="349" pos:column="42">SetContentText</name> <argument_list pos:line="349" pos:column="57">(<argument><expr><name pos:line="349" pos:column="58">message</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="350" pos:column="41">.</op:operator><call><name pos:line="350" pos:column="42">Extend</name><argument_list pos:line="350" pos:column="48">(<argument><expr><name pos:line="350" pos:column="49">wearableExtender</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="351" pos:column="41">.</op:operator><call><name pos:line="351" pos:column="42">SetAutoCancel</name> <argument_list pos:line="351" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="351" pos:column="57">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="352" pos:column="25">// Creates an explicit intent for an Activity in your app</comment>
			<decl_stmt><decl><type><name pos:line="353" pos:column="25">var</name></type> <name pos:line="353" pos:column="29">resultIntent</name> <init pos:line="353" pos:column="42">= <expr><op:operator pos:line="353" pos:column="44">new</op:operator> <call><name pos:line="353" pos:column="48">Intent</name><argument_list pos:line="353" pos:column="54">(<argument><expr><name pos:line="353" pos:column="55">this</name></expr></argument>, <argument><expr><call><name pos:line="353" pos:column="61">typeof</name><argument_list pos:line="353" pos:column="67">(<argument><expr><name pos:line="353" pos:column="68">MainActivity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="354" pos:column="25">resultIntent</name><op:operator pos:line="354" pos:column="37">.</op:operator><name pos:line="354" pos:column="38">SetFlags</name></name><argument_list pos:line="354" pos:column="46">(<argument><expr><name><name pos:line="354" pos:column="47">ActivityFlags</name><op:operator pos:line="354" pos:column="60">.</op:operator><name pos:line="354" pos:column="61">NewTask</name></name><op:operator pos:line="354" pos:column="68">|</op:operator><name><name pos:line="354" pos:column="69">ActivityFlags</name><op:operator pos:line="354" pos:column="82">.</op:operator><name pos:line="354" pos:column="83">ClearTask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="355" pos:column="25">// The stack builder object will contain an artificial back stack for the</comment>
			<comment type="line" pos:line="356" pos:column="25">// started Activity.</comment>
			<comment type="line" pos:line="357" pos:column="25">// This ensures that navigating backward from the Activity leads out of</comment>
			<comment type="line" pos:line="358" pos:column="25">// your application to the Home screen.</comment>
			<decl_stmt><decl><type><name pos:line="359" pos:column="25">var</name></type> <name pos:line="359" pos:column="29">stackBuilder</name> <init pos:line="359" pos:column="42">= <expr><call><name><name pos:line="359" pos:column="44">Android</name><op:operator pos:line="359" pos:column="51">.</op:operator><name pos:line="359" pos:column="52">Support</name><op:operator pos:line="359" pos:column="59">.</op:operator><name pos:line="359" pos:column="60">V4</name><op:operator pos:line="359" pos:column="62">.</op:operator><name pos:line="359" pos:column="63">App</name><op:operator pos:line="359" pos:column="66">.</op:operator><name pos:line="359" pos:column="67">TaskStackBuilder</name><op:operator pos:line="359" pos:column="83">.</op:operator><name pos:line="359" pos:column="84">Create</name></name><argument_list pos:line="359" pos:column="90">(<argument><expr><name pos:line="359" pos:column="91">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="360" pos:column="25">// Adds the back stack for the Intent (but not the Intent itself)</comment>
			<comment type="line" pos:line="361" pos:column="25">//stackBuilder.AddParentStack();</comment>
			<comment type="line" pos:line="362" pos:column="25">// Adds the Intent that starts the Activity to the top of the stack</comment>
			<expr_stmt><expr><call><name><name pos:line="363" pos:column="25">stackBuilder</name><op:operator pos:line="363" pos:column="37">.</op:operator><name pos:line="363" pos:column="38">AddNextIntent</name></name><argument_list pos:line="363" pos:column="51">(<argument><expr><name pos:line="363" pos:column="52">resultIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="364" pos:column="25">var</name></type> <name pos:line="364" pos:column="29">resultPendingIntent</name> <init pos:line="364" pos:column="49">=
				<expr><call><name><name pos:line="365" pos:column="33">stackBuilder</name><op:operator pos:line="365" pos:column="45">.</op:operator><name pos:line="365" pos:column="46">GetPendingIntent</name></name><argument_list pos:line="365" pos:column="62">(
					<argument><expr><lit:literal type="number" pos:line="366" pos:column="41">0</lit:literal></expr></argument>,
					<argument><expr><op:operator pos:line="367" pos:column="41">(</op:operator><name pos:line="367" pos:column="42">int</name><op:operator pos:line="367" pos:column="45">)</op:operator><name><name pos:line="367" pos:column="46">PendingIntentFlags</name><op:operator pos:line="367" pos:column="64">.</op:operator><name pos:line="367" pos:column="65">UpdateCurrent</name></name></expr></argument>
				)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="369" pos:column="25">builder</name><op:operator pos:line="369" pos:column="32">.</op:operator><name pos:line="369" pos:column="33">SetContentIntent</name></name><argument_list pos:line="369" pos:column="49">(<argument><expr><name pos:line="369" pos:column="50">resultPendingIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



			<decl_stmt><decl><type><name pos:line="373" pos:column="25">var</name></type> <name pos:line="373" pos:column="29">notificationManager</name> <init pos:line="373" pos:column="49">= <expr><call><name><name pos:line="373" pos:column="51">NotificationManagerCompat</name><op:operator pos:line="373" pos:column="76">.</op:operator><name pos:line="373" pos:column="77">From</name></name> <argument_list pos:line="373" pos:column="82">(<argument><expr><name pos:line="373" pos:column="83">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="374" pos:column="25">// mId allows you to update the notification later on.</comment>
			<expr_stmt><expr><call><name><name pos:line="375" pos:column="25">notificationManager</name><op:operator pos:line="375" pos:column="44">.</op:operator><name pos:line="375" pos:column="45">Notify</name></name><argument_list pos:line="375" pos:column="51">(<argument><expr><name pos:line="375" pos:column="52">id</name></expr></argument>, <argument><expr><call><name><name pos:line="375" pos:column="56">builder</name><op:operator pos:line="375" pos:column="63">.</op:operator><name pos:line="375" pos:column="64">Build</name></name><argument_list pos:line="375" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>
		<cpp:else pos:line="377" pos:column="17">#<cpp:directive pos:line="377" pos:column="18">else</cpp:directive></cpp:else>

		<function><type><specifier pos:line="379" pos:column="17">private</specifier> <name pos:line="379" pos:column="25">void</name></type> <name pos:line="379" pos:column="30">PopUpNotification</name><parameter_list pos:line="379" pos:column="47">(<param><decl><type><name pos:line="379" pos:column="48">int</name></type> <name pos:line="379" pos:column="52">id</name></decl></param>, <param><decl><type><name pos:line="379" pos:column="56">string</name></type> <name pos:line="379" pos:column="63">title</name></decl></param>, <param><decl><type><name pos:line="379" pos:column="70">string</name></type> <name pos:line="379" pos:column="77">message</name></decl></param>)</parameter_list><block pos:line="379" pos:column="85">{
			<decl_stmt><decl><type><name><name pos:line="380" pos:column="25">Notification</name><op:operator pos:line="380" pos:column="37">.</op:operator><name pos:line="380" pos:column="38">Builder</name></name></type> <name pos:line="380" pos:column="46">mBuilder</name> <init pos:line="380" pos:column="55">=
				<expr><op:operator pos:line="381" pos:column="33">new</op:operator> <call><name><name pos:line="381" pos:column="37">Notification</name><op:operator pos:line="381" pos:column="49">.</op:operator><name pos:line="381" pos:column="50">Builder</name></name> <argument_list pos:line="381" pos:column="58">(<argument><expr><name pos:line="381" pos:column="59">this</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="382" pos:column="41">.</op:operator><call><name pos:line="382" pos:column="42">SetSmallIcon</name> <argument_list pos:line="382" pos:column="55">(<argument><expr><name><name pos:line="382" pos:column="56">Resource</name><op:operator pos:line="382" pos:column="64">.</op:operator><name pos:line="382" pos:column="65">Drawable</name><op:operator pos:line="382" pos:column="73">.</op:operator><name pos:line="382" pos:column="74">ic_notification</name></name></expr></argument>)</argument_list></call>
					<op:operator pos:line="383" pos:column="41">.</op:operator><call><name pos:line="383" pos:column="42">SetContentTitle</name> <argument_list pos:line="383" pos:column="58">(<argument><expr><name pos:line="383" pos:column="59">title</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="384" pos:column="41">.</op:operator><call><name pos:line="384" pos:column="42">SetContentText</name> <argument_list pos:line="384" pos:column="57">(<argument><expr><name pos:line="384" pos:column="58">message</name></expr></argument>)</argument_list></call>
					<op:operator pos:line="385" pos:column="41">.</op:operator><call><name pos:line="385" pos:column="42">SetAutoCancel</name> <argument_list pos:line="385" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="385" pos:column="57">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="386" pos:column="25">// Creates an explicit intent for an Activity in your app</comment>
			<decl_stmt><decl><type><name pos:line="387" pos:column="25">Intent</name></type> <name pos:line="387" pos:column="32">resultIntent</name> <init pos:line="387" pos:column="45">= <expr><op:operator pos:line="387" pos:column="47">new</op:operator> <call><name pos:line="387" pos:column="51">Intent</name><argument_list pos:line="387" pos:column="57">(<argument><expr><name pos:line="387" pos:column="58">this</name></expr></argument>, <argument><expr><call><name pos:line="387" pos:column="64">typeof</name><argument_list pos:line="387" pos:column="70">(<argument><expr><name pos:line="387" pos:column="71">MainActivity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="388" pos:column="25">resultIntent</name><op:operator pos:line="388" pos:column="37">.</op:operator><name pos:line="388" pos:column="38">SetFlags</name></name><argument_list pos:line="388" pos:column="46">(<argument><expr><name><name pos:line="388" pos:column="47">ActivityFlags</name><op:operator pos:line="388" pos:column="60">.</op:operator><name pos:line="388" pos:column="61">NewTask</name></name><op:operator pos:line="388" pos:column="68">|</op:operator><name><name pos:line="388" pos:column="69">ActivityFlags</name><op:operator pos:line="388" pos:column="82">.</op:operator><name pos:line="388" pos:column="83">ClearTask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="389" pos:column="25">// The stack builder object will contain an artificial back stack for the</comment>
			<comment type="line" pos:line="390" pos:column="25">// started Activity.</comment>
			<comment type="line" pos:line="391" pos:column="25">// This ensures that navigating backward from the Activity leads out of</comment>
			<comment type="line" pos:line="392" pos:column="25">// your application to the Home screen.</comment>
			<decl_stmt><decl><type><name pos:line="393" pos:column="25">var</name></type> <name pos:line="393" pos:column="29">stackBuilder</name> <init pos:line="393" pos:column="42">= <expr><call><name><name pos:line="393" pos:column="44">Android</name><op:operator pos:line="393" pos:column="51">.</op:operator><name pos:line="393" pos:column="52">App</name><op:operator pos:line="393" pos:column="55">.</op:operator><name pos:line="393" pos:column="56">TaskStackBuilder</name><op:operator pos:line="393" pos:column="72">.</op:operator><name pos:line="393" pos:column="73">Create</name></name><argument_list pos:line="393" pos:column="79">(<argument><expr><name pos:line="393" pos:column="80">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="394" pos:column="25">// Adds the back stack for the Intent (but not the Intent itself)</comment>
			<comment type="line" pos:line="395" pos:column="25">//stackBuilder.AddParentStack();</comment>
			<comment type="line" pos:line="396" pos:column="25">// Adds the Intent that starts the Activity to the top of the stack</comment>
			<expr_stmt><expr><call><name><name pos:line="397" pos:column="25">stackBuilder</name><op:operator pos:line="397" pos:column="37">.</op:operator><name pos:line="397" pos:column="38">AddNextIntent</name></name><argument_list pos:line="397" pos:column="51">(<argument><expr><name pos:line="397" pos:column="52">resultIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="398" pos:column="25">PendingIntent</name></type> <name pos:line="398" pos:column="39">resultPendingIntent</name> <init pos:line="398" pos:column="59">=
				<expr><call><name><name pos:line="399" pos:column="33">stackBuilder</name><op:operator pos:line="399" pos:column="45">.</op:operator><name pos:line="399" pos:column="46">GetPendingIntent</name></name><argument_list pos:line="399" pos:column="62">(
					<argument><expr><lit:literal type="number" pos:line="400" pos:column="41">0</lit:literal></expr></argument>,
					<argument><expr><name><name pos:line="401" pos:column="41">PendingIntentFlags</name><op:operator pos:line="401" pos:column="59">.</op:operator><name pos:line="401" pos:column="60">UpdateCurrent</name></name></expr></argument>
				)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="403" pos:column="25">mBuilder</name><op:operator pos:line="403" pos:column="33">.</op:operator><name pos:line="403" pos:column="34">SetContentIntent</name></name><argument_list pos:line="403" pos:column="50">(<argument><expr><name pos:line="403" pos:column="51">resultPendingIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



			<decl_stmt><decl><type><name pos:line="407" pos:column="25">NotificationManager</name></type> <name pos:line="407" pos:column="45">mNotificationManager</name> <init pos:line="407" pos:column="66">=
				<expr><op:operator pos:line="408" pos:column="33">(</op:operator><name pos:line="408" pos:column="34">NotificationManager</name><op:operator pos:line="408" pos:column="53">)</op:operator> <call><name pos:line="408" pos:column="55">GetSystemService</name><argument_list pos:line="408" pos:column="71">(<argument><expr><name><name pos:line="408" pos:column="72">Context</name><op:operator pos:line="408" pos:column="79">.</op:operator><name pos:line="408" pos:column="80">NotificationService</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="409" pos:column="25">// mId allows you to update the notification later on.</comment>
			<expr_stmt><expr><call><name><name pos:line="410" pos:column="25">mNotificationManager</name><op:operator pos:line="410" pos:column="45">.</op:operator><name pos:line="410" pos:column="46">Notify</name></name><argument_list pos:line="410" pos:column="52">(<argument><expr><name pos:line="410" pos:column="53">id</name></expr></argument>, <argument><expr><call><name><name pos:line="410" pos:column="57">mBuilder</name><op:operator pos:line="410" pos:column="65">.</op:operator><name pos:line="410" pos:column="66">Build</name></name><argument_list pos:line="410" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>
		<cpp:endif pos:line="412" pos:column="17">#<cpp:directive pos:line="412" pos:column="18">endif</cpp:directive></cpp:endif>

		<function><type><specifier pos:line="414" pos:column="17">private</specifier> <name pos:line="414" pos:column="25">void</name></type> <name pos:line="414" pos:column="30">CrunchDates</name><parameter_list pos:line="414" pos:column="41">(<param><decl><type><name pos:line="414" pos:column="42">bool</name></type> <name pos:line="414" pos:column="47">startup</name> <init pos:line="414" pos:column="55">= <expr><lit:literal type="boolean" pos:line="414" pos:column="57">false</lit:literal></expr></init></decl></param>)</parameter_list>
		<block pos:line="415" pos:column="17">{
			<if pos:line="416" pos:column="25">if <condition pos:line="416" pos:column="28">(<expr><op:operator pos:line="416" pos:column="29">!</op:operator><name><name pos:line="416" pos:column="30">Utils</name><op:operator pos:line="416" pos:column="35">.</op:operator><name pos:line="416" pos:column="36">IsSameDay</name></name></expr>)</condition><then pos:line="416" pos:column="46"> <block pos:line="416" pos:column="47">{
				<comment type="line" pos:line="417" pos:column="33">//save our day from yesterday, we dont' do datetime.adddays(-1) because phone might have been off</comment>
				<comment type="line" pos:line="418" pos:column="33">//for more then 1 day and it would not be correct!</comment>
				<decl_stmt><decl><type><name pos:line="419" pos:column="33">var</name></type> <name pos:line="419" pos:column="37">yesterday</name> <init pos:line="419" pos:column="47">= <expr><name><name pos:line="419" pos:column="49">Helpers</name><op:operator pos:line="419" pos:column="56">.</op:operator><name pos:line="419" pos:column="57">Settings</name><op:operator pos:line="419" pos:column="65">.</op:operator><name pos:line="419" pos:column="66">CurrentDay</name></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="420" pos:column="33">var</name></type> <name pos:line="420" pos:column="37">dayEntry</name> <init pos:line="420" pos:column="46">= <expr><call><name><name pos:line="420" pos:column="48">StepEntryManager</name><op:operator pos:line="420" pos:column="64">.</op:operator><name pos:line="420" pos:column="65">GetStepEntry</name></name> <argument_list pos:line="420" pos:column="78">(<argument><expr><name pos:line="420" pos:column="79">yesterday</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="421" pos:column="33">if <condition pos:line="421" pos:column="36">(<expr><name pos:line="421" pos:column="37">dayEntry</name> <op:operator pos:line="421" pos:column="46">==</op:operator> <name pos:line="421" pos:column="49">null</name> <op:operator pos:line="421" pos:column="54">||</op:operator> <name><name pos:line="421" pos:column="57">dayEntry</name><op:operator pos:line="421" pos:column="65">.</op:operator><name pos:line="421" pos:column="66">Date</name><op:operator pos:line="421" pos:column="70">.</op:operator><name pos:line="421" pos:column="71">DayOfYear</name></name> <op:operator pos:line="421" pos:column="81">!=</op:operator> <name><name pos:line="421" pos:column="84">yesterday</name><op:operator pos:line="421" pos:column="93">.</op:operator><name pos:line="421" pos:column="94">DayOfYear</name></name></expr>)</condition><then pos:line="421" pos:column="104"> <block pos:line="421" pos:column="105">{
					<expr_stmt><expr><name pos:line="422" pos:column="41">dayEntry</name> <op:operator pos:line="422" pos:column="50">=</op:operator> <op:operator pos:line="422" pos:column="52">new</op:operator> <call><name pos:line="422" pos:column="56">StepEntry</name> <argument_list pos:line="422" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>

				<expr_stmt><expr><name><name pos:line="425" pos:column="33">dayEntry</name><op:operator pos:line="425" pos:column="41">.</op:operator><name pos:line="425" pos:column="42">Date</name></name> <op:operator pos:line="425" pos:column="47">=</op:operator> <name pos:line="425" pos:column="49">yesterday</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="426" pos:column="33">dayEntry</name><op:operator pos:line="426" pos:column="41">.</op:operator><name pos:line="426" pos:column="42">Steps</name></name> <op:operator pos:line="426" pos:column="48">=</op:operator> <name><name pos:line="426" pos:column="50">Helpers</name><op:operator pos:line="426" pos:column="57">.</op:operator><name pos:line="426" pos:column="58">Settings</name><op:operator pos:line="426" pos:column="66">.</op:operator><name pos:line="426" pos:column="67">CurrentDaySteps</name></name></expr>;</expr_stmt>

				<expr_stmt><expr><name><name pos:line="428" pos:column="33">Helpers</name><op:operator pos:line="428" pos:column="40">.</op:operator><name pos:line="428" pos:column="41">Settings</name><op:operator pos:line="428" pos:column="49">.</op:operator><name pos:line="428" pos:column="50">CurrentDay</name></name> <op:operator pos:line="428" pos:column="61">=</op:operator> <name><name pos:line="428" pos:column="63">DateTime</name><op:operator pos:line="428" pos:column="71">.</op:operator><name pos:line="428" pos:column="72">Today</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="429" pos:column="33">Helpers</name><op:operator pos:line="429" pos:column="40">.</op:operator><name pos:line="429" pos:column="41">Settings</name><op:operator pos:line="429" pos:column="49">.</op:operator><name pos:line="429" pos:column="50">CurrentDaySteps</name></name> <op:operator pos:line="429" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="429" pos:column="68">0</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="430" pos:column="33">Helpers</name><op:operator pos:line="430" pos:column="40">.</op:operator><name pos:line="430" pos:column="41">Settings</name><op:operator pos:line="430" pos:column="49">.</op:operator><name pos:line="430" pos:column="50">StepsBeforeToday</name></name> <op:operator pos:line="430" pos:column="67">=</op:operator> <name><name pos:line="430" pos:column="69">Helpers</name><op:operator pos:line="430" pos:column="76">.</op:operator><name pos:line="430" pos:column="77">Settings</name><op:operator pos:line="430" pos:column="85">.</op:operator><name pos:line="430" pos:column="86">TotalSteps</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="431" pos:column="33">StepsToday</name> <op:operator pos:line="431" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="431" pos:column="46">0</lit:literal></expr>;</expr_stmt>
				<try pos:line="432" pos:column="33">try<block pos:line="432" pos:column="36">{
					<expr_stmt><expr><call><name><name pos:line="433" pos:column="41">StepEntryManager</name><op:operator pos:line="433" pos:column="57">.</op:operator><name pos:line="433" pos:column="58">SaveStepEntry</name></name> <argument_list pos:line="433" pos:column="72">(<argument><expr><name pos:line="433" pos:column="73">dayEntry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block><catch pos:line="434" pos:column="34">catch<parameter_list pos:line="434" pos:column="39">(<param><decl><type><name pos:line="434" pos:column="40">Exception</name></type> <name pos:line="434" pos:column="50">ex</name></decl></param>)</parameter_list><block pos:line="434" pos:column="53">{
					<expr_stmt><expr><call><name><name pos:line="435" pos:column="41">Console</name><op:operator pos:line="435" pos:column="48">.</op:operator><name pos:line="435" pos:column="49">WriteLine</name></name> <argument_list pos:line="435" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="435" pos:column="60">"Something horrible has gone wrong attempting to save database entry, it is lost forever :("</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>

			}</block></then> <else pos:line="438" pos:column="27">else <if pos:line="438" pos:column="32">if <condition pos:line="438" pos:column="35">(<expr><name pos:line="438" pos:column="36">startup</name></expr>)</condition><then pos:line="438" pos:column="44"> <block pos:line="438" pos:column="45">{
				<expr_stmt><expr><name pos:line="439" pos:column="33">StepsToday</name> <op:operator pos:line="439" pos:column="44">=</op:operator> <name><name pos:line="439" pos:column="46">Helpers</name><op:operator pos:line="439" pos:column="53">.</op:operator><name pos:line="439" pos:column="54">Settings</name><op:operator pos:line="439" pos:column="62">.</op:operator><name pos:line="439" pos:column="63">TotalSteps</name></name> <op:operator pos:line="439" pos:column="74">-</op:operator> <name><name pos:line="439" pos:column="76">Helpers</name><op:operator pos:line="439" pos:column="83">.</op:operator><name pos:line="439" pos:column="84">Settings</name><op:operator pos:line="439" pos:column="92">.</op:operator><name pos:line="439" pos:column="93">StepsBeforeToday</name></name></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></function>

		<cpp:region pos:line="443" pos:column="17">#<cpp:directive pos:line="443" pos:column="18">region</cpp:directive> INotifyPropertyChanged implementation</cpp:region>
		<decl_stmt><decl><type><specifier pos:line="444" pos:column="17">public</specifier> <specifier pos:line="444" pos:column="24">event</specifier> <name pos:line="444" pos:column="30">PropertyChangedEventHandler</name></type> <name pos:line="444" pos:column="58">PropertyChanged</name></decl>;</decl_stmt>
		<function><type><specifier pos:line="445" pos:column="17">private</specifier> <name pos:line="445" pos:column="25">void</name></type> <name pos:line="445" pos:column="30">OnPropertyChanged</name><parameter_list pos:line="445" pos:column="47">(<param><decl><type><name pos:line="445" pos:column="48">string</name></type> <name pos:line="445" pos:column="55">name</name></decl></param>)</parameter_list>
		<block pos:line="446" pos:column="17">{
			<if pos:line="447" pos:column="25">if <condition pos:line="447" pos:column="28">(<expr><name pos:line="447" pos:column="29">PropertyChanged</name> <op:operator pos:line="447" pos:column="45">==</op:operator> <name pos:line="447" pos:column="48">null</name></expr>)</condition><then pos:line="447" pos:column="53">
				<return pos:line="448" pos:column="33">return;</return></then></if>

			<expr_stmt><expr><call><name pos:line="450" pos:column="25">PropertyChanged</name><argument_list pos:line="450" pos:column="40">(<argument><expr><name pos:line="450" pos:column="41">this</name></expr></argument>, <argument><expr><op:operator pos:line="450" pos:column="47">new</op:operator> <call><name pos:line="450" pos:column="51">PropertyChangedEventArgs</name><argument_list pos:line="450" pos:column="75">(<argument><expr><name pos:line="450" pos:column="76">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>
		<cpp:endregion pos:line="452" pos:column="17">#<cpp:directive pos:line="452" pos:column="18">endregion</cpp:directive></cpp:endregion>
	}</block></decl></decl_stmt>
}</block></namespace>

</unit>
